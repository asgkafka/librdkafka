                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_coord.obj ../asg/asm/rdkafka_coord.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_coord.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:42 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_COORD
          SD 00000002 00000000 0000685E            07  @CODE
write     ER 00000003                                  WRITE
@@ASSERT  ER 00000004                                  __ASSERT
rd_kafka_broker_schedule_connection
          ER 00000005                                  RD_KAFKA_BROKER_SCHEDULE_CONNECTION
rd_kafka_op_new0
          ER 00000006                                  RD_KAFKA_OP_NEW0
mtx_lock  ER 00000007                                  MTX_LOCK
rd_kafka_op_reply
          ER 00000008                                  RD_KAFKA_OP_REPLY
mtx_unlock
          ER 00000009                                  MTX_UNLOCK
cnd_signal
          ER 0000000A                                  CND_SIGNAL
rd_kafka_op_throttle_time
          ER 0000000B                                  RD_KAFKA_OP_THROTTLE_TIME
rd_kafka_err_action
          ER 0000000C                                  RD_KAFKA_ERR_ACTION
rd_kafka_FindCoordinatorRequest
          ER 0000000D                                  RD_KAFKA_$FIND$COORDINATOR$REQUEST
rd_slice_read
          ER 0000000E                                  RD_SLICE_READ
rd_slice_read_uvarint
          ER 0000000F                                  RD_SLICE_READ_UVARINT
rd_kafka_q_destroy_final
          ER 00000010                                  RD_KAFKA_Q_DESTROY_FINAL
rd_slice_ensure_contig
          ER 00000011                                  RD_SLICE_ENSURE_CONTIG
snprintf  ER 00000012                                  SNPRINTF
calloc    ER 00000013                                  CALLOC
rd_kafka_q_purge0
          ER 00000014                                  RD_KAFKA_Q_PURGE0
free      ER 00000015                                  FREE
GETTFD@Y  ER 00000016                                  GETTIMEOFDAY
rd_kafka_broker_any_usable
          ER 00000017                                  RD_KAFKA_BROKER_ANY_USABLE
@@PT3ML   ER 00000018                                  PTHREAD_MUTEX_LOCK
@@PT3MU   ER 00000019                                  PTHREAD_MUTEX_UNLOCK
rd_kafka_broker_destroy_final
          ER 0000001A                                  RD_KAFKA_BROKER_DESTROY_FINAL
rd_kafka_broker_update
          ER 0000001B                                  RD_KAFKA_BROKER_UPDATE
rd_kafka_buf_new0
          ER 0000001C                                  RD_KAFKA_BUF_NEW0
rd_kafka_buf_retry
          ER 0000001D                                  RD_KAFKA_BUF_RETRY
strdup    ER 0000001E                                  STRDUP
rd_kafka_crash
          ER 0000001F                                  RD_KAFKA_CRASH
rd_kafka_log0
          ER 00000020                                  RD_KAFKA_LOG0
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:42 
@rdkafka_coord&
          XD 00000021 00000007 000006D8                @@STATIC
@rdkafka_coord
          SD 00000022 00006860 00000988            07  @DATA
rdkafka_coord:
          SD 00000023 000071E8 00001040            07  @@INIT@
@@ALLOCA  ER 00000024
rd_kafka_coord_cache_entry_destroy
          LD          000028E0          00000002   00  RD_KAFKA_COORD_CACHE_ENTRY_DESTROY
rd_kafka_coord_cache_expire
          LD          00002B08          00000002   00  RD_KAFKA_COORD_CACHE_EXPIRE
rd_kafka_coord_cache_get
          LD          00002E88          00000002   00  RD_KAFKA_COORD_CACHE_GET
rd_kafka_coord_cache_evict
          LD          000032B8          00000002   00  RD_KAFKA_COORD_CACHE_EVICT
rd_kafka_coord_cache_destroy
          LD          00003420          00000002   00  RD_KAFKA_COORD_CACHE_DESTROY
rd_kafka_coord_cache_init
          LD          00003558          00000002   00  RD_KAFKA_COORD_CACHE_INIT
rd_kafka_coord_req
          LD          00003600          00000002   00  RD_KAFKA_COORD_REQ
rd_kafka_coord_rkb_monitor_cb
          LD          000065A8          00000002   00  RD_KAFKA_COORD_RKB_MONITOR_CB
rd_kafka_coord_reqs_term
          LD          000066F0          00000002   00  RD_KAFKA_COORD_REQS_TERM
rd_kafka_coord_reqs_init
          LD          00006830          00000002   00  RD_KAFKA_COORD_REQS_INIT
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:42:57 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DC3D6D6D9C4'
00000000                00000000 0000685E     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D8396969984'
                                              18 write    ALIAS C'write'
                                              19          EXTRN write
                                              20 __assert ALIAS C'@@ASSERT'
                                              21          EXTRN __assert
                                              22 rd_kafka_broker_schedule_connection ALIAS X'99846D92818692816D829996928*
                                                                5996DA283888584A493856D839695958583A3899695'
                                              23          EXTRN rd_kafka_broker_schedule_connection
                                              24 rd_kafka_op_new0 ALIAS X'99846D92818692816D96976D9585A6F0'
                                              25          EXTRN rd_kafka_op_new0
                                              26 mtx_lock ALIAS X'94A3A76D93968392'
                                              27          EXTRN mtx_lock
                                              28 rd_kafka_op_reply ALIAS X'99846D92818692816D96976D99859793A8'
                                              29          EXTRN rd_kafka_op_reply
                                              30 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              31          EXTRN mtx_unlock
                                              32 cnd_signal ALIAS X'8395846DA28987958193'
                                              33          EXTRN cnd_signal
                                              34 rd_kafka_op_throttle_time ALIAS X'99846D92818692816D96976DA3889996A3A39*
                                                                3856DA3899485'
                                              35          EXTRN rd_kafka_op_throttle_time
                                              36 rd_kafka_err_action ALIAS X'99846D92818692816D8599996D8183A3899695'
                                              37          EXTRN rd_kafka_err_action
                                              38 rd_kafka_$Find$Coordinator$Request ALIAS X'99846D92818692816DC6899584C3*
                                                                96969984899581A39699D98598A485A2A3'
                                              39          EXTRN rd_kafka_$Find$Coordinator$Request
                                              40 rd_slice_read ALIAS X'99846DA2938983856D99858184'
                                              41          EXTRN rd_slice_read
                                              42 rd_slice_read_uvarint ALIAS X'99846DA2938983856D998581846DA4A581998995A*
                                                                3'
                                              43          EXTRN rd_slice_read_uvarint
                                              44 rd_kafka_q_destroy_final ALIAS X'99846D92818692816D986D8485A2A39996A86D*
                                                                8689958193'
                                              45          EXTRN rd_kafka_q_destroy_final
                                              46 rd_slice_ensure_contig ALIAS X'99846DA2938983856D8595A2A499856D839695A3*
                                                                8987'
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                              47          EXTRN rd_slice_ensure_contig
                                              48 snprintf ALIAS C'snprintf'
                                              49          EXTRN snprintf
                                              50 calloc   ALIAS C'calloc'
                                              51          EXTRN calloc
                                              52 rd_kafka_q_purge0 ALIAS X'99846D92818692816D986D97A4998785F0'
                                              53          EXTRN rd_kafka_q_purge0
                                              54 free     ALIAS C'free'
                                              55          EXTRN free
                                              56 gettimeofday ALIAS C'GETTFD@Y'
                                              57          EXTRN gettimeofday
                                              58 rd_kafka_broker_any_usable ALIAS X'99846D92818692816D8299969285996D8195*
                                                                A86DA4A281829385'
                                              59          EXTRN rd_kafka_broker_any_usable
                                              60 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              61          EXTRN pthread_mutex_lock
                                              62 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              63          EXTRN pthread_mutex_unlock
                                              64 rd_kafka_broker_destroy_final ALIAS X'99846D92818692816D8299969285996D8*
                                                                485A2A39996A86D8689958193'
                                              65          EXTRN rd_kafka_broker_destroy_final
                                              66 rd_kafka_broker_update ALIAS X'99846D92818692816D8299969285996DA4978481*
                                                                A385'
                                              67          EXTRN rd_kafka_broker_update
                                              68 rd_kafka_buf_new0 ALIAS X'99846D92818692816D82A4866D9585A6F0'
                                              69          EXTRN rd_kafka_buf_new0
                                              70 rd_kafka_buf_retry ALIAS X'99846D92818692816D82A4866D9985A399A8'
                                              71          EXTRN rd_kafka_buf_retry
                                              72 strdup   ALIAS C'strdup'
                                              73          EXTRN strdup
                                              74 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                              75          EXTRN rd_kafka_crash
                                              76 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                              77          EXTRN rd_kafka_log0
                                              78 *
                                              79 *
                                              80 *
                                              81 * ....... start of utf8_2_ebcdic
00000000                                      82 @LNAME339 DS   0H
00000000 0000000D                             83          DC    X'0000000D'
00000004 A4A386F86DF26D85                     84          DC    C'utf8_2_ebcdic'
00000011 00                                   85          DC    X'00'
                                              86 utf8_2_ebcdic DCCPRLG CINDEX=339,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME339
                                              87          macro
                                              88          dccextrn &m
                                              89          gblc    &$dccext(1000)
                                              90          gbla    &$dccexti
                                              91          lcla    &i
                                              92 &$dccext(&$dccexti+1) setc    '&m'
                                              93 &i       seta    1
                                              94 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                              95          aif    ('&$dccext(&i)' eq '&m').getout
                                              96 &i       seta    &i+1
                                              97          ago     .loop
                                              98 .around  anop
                                              99 &$dccexti seta &$dccexti+1
                                             100          extrn  &m
                                             101 .getout  anop
                                             102          mend
00000018                                     103+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              104+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  105+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            106+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    107+         dc ad(@PER_339)                                                02-DCCCA
00000028 00000000000000B0                    108+         dc ad(176)                                                     02-DCCCA
00000030 0000000000000000                    109+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    110+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  111+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  112+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  113+         dc al1(3)                                                      02-DCCCA
00000043 08                                  114+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  115+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              116+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    117+         dc ad(@LNAME339)                                               02-DCCCA
00000050                                     118+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                    119+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    120+         dc ad(0)                                                       02-DCCCA
00000060                                     121+         ds    0d                                                       01-DCCPR
00000060                                     122+utf8_2_ebcdic ds 0d                                                     01-DCCPR
00000060                                     123+@REGION_339_1 ds 0h                                                     01-DCCPR
00000060 EBEC D008 0024          00000008    124+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    125+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    126+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           127+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    128+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B0               000000B0    129+         aghi  14,176              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    130+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    131+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     132+@PER_339 ds    0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    133+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    134+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           135+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           136+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             137+         using @REGION_339_1,12                                         01-DCCPR
                                             138          DCCPRV REG=9      ; Get PRV from DVT
0000009E E390 B008 0004          00000008    139+         LG 9,8(0,11)                                                   01-DCCPR
000000A4 B904 0031                           140          LGR   3,1         ; ptr to parm area
                                             141 * ******* End of Prologue
                                             142 * *
                                             143 * ***       const unsigned char* outstart = out;
000000A8 E3F0 3008 0004          00000008    144          LG    15,8(0,3)   ; outlen
000000AE E340 3010 0004          00000010    145          LG    4,16(0,3)   ; in
000000B4 B904 0014                           146          LGR   1,4
                                                                                                                           Page    8 
  Active Usings: @REGION_339_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000000B8 E320 3018 0004          00000018    147          LG    2,24(0,3)   ; inlen
000000BE E330 3000 0004          00000000    148          LG    3,0(0,3)    ; out
000000C4 B904 0083                           149          LGR   8,3
                                             150 * ***       const unsigned char* base = in;
                                             151 * ***       const unsigned char* processed = in;
000000C8 B904 0054                           152          LGR   5,4         ; processed
                                             153 * ***       const unsigned char* inend = in + (*inlen);
000000CC E360 2000 0004          00000000    154          LG    6,0(0,2)    ; inlen
000000D2 4166 4000               00000000    155          LA    6,0(6,4)
                                             156 * ***       const unsigned char* outend = out + (*outlen);
000000D6 E370 F000 0004          00000000    157          LG    7,0(0,15)   ; outlen
000000DC 4177 3000               00000000    158          LA    7,0(7,3)
                                             159 * ***       unsigned char c;
                                             160 * ***
                                             161 * ***       while ((in < inend) && ((out - outstart) < *outlen)) {
000000E0 47F0 C104               00000164    162          B     @L13
000000E8                                     163          DS    0D
000000E8 000000B0                            164 @FRAMESIZE_339 DC F'176'
000000EC 00000000
000000F0 00000000000000FF                    165 @lit_339_2 DC  FD'255' 0x00000000000000ff
000000F8 00000000                            166 @lit_339_1 DC  Q(@@STATIC)
000000FC                                     167 @L12     DS    0H
                                             168 * ***           c = *in++;
000000FC B904 00A1                           169          LGR   10,1
00000100 4110 1001               00000001    170          LA    1,1(0,1)
00000104 43A0 A000               00000000    171          IC    10,0(0,10)
00000108 42A0 D0A8               000000A8    172          STC   10,168(0,13) ; c
                                             173 * ***           if (c > 0xFF)
0000010C 18BA                                174          LR    11,10
0000010E C0BB 0000 00FF                      175          NILF  11,X'000000FF'
00000114 A7BE 00FF               000000FF    176          CHI   11,255
00000118 47D0 C0D8               00000138    177          BNH   @L15
                                             178 * ***           {
                                             179 * ***               *outlen = out - outstart;
0000011C B909 0083                           180          SGR   8,3
00000120 E380 F000 0024          00000000    181          STG   8,0(0,15)   ; outlen
                                             182 * ***               *inlen = processed - base;
00000126 B909 0054                           183          SGR   5,4
0000012A E350 2000 0024          00000000    184          STG   5,0(0,2)    ; inlen
                                             185 * ***               return(-1);
00000130 A7F9 FFFF               0000FFFF    186          LGHI  15,-1       ; -1
00000134 47F0 C136               00000196    187          B     @ret_lab_339
                                             188 * ***           }
00000138                                     189 @L15     DS    0H
                                             190 * ***
                                             191 * ***           if (out >= outend)
00000138 B920 0087                           192          CGR   8,7
0000013C 47B0 C11E               0000017E    193          BNL   @L10
                                             194 * ***               break;
00000140                                     195 @L16     DS    0H
                                             196 * ***
                                             197 * ***           *out++ = U2E[c];
                                                                                                                           Page    9 
  Active Usings: @REGION_339_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000140 B904 0058                           198          LGR   5,8
00000144 4180 8001               00000001    199          LA    8,1(0,8)
00000148 E3B0 C098 0014          000000F8    200          LGF   11,@lit_339_1
0000014E 41BB 9000               00000000    201          LA    11,0(11,9)
00000152 E3A0 C090 0080          000000F0    202          NG    10,@lit_339_2
00000158 43AA B100               00000100    203          IC    10,256(10,11)
0000015C 42A0 5000               00000000    204          STC   10,0(0,5)
                                             205 * ***           processed = (unsigned char*)in;
00000160 B904 0051                           206          LGR   5,1         ; processed
                                             207 * ***       }
00000164                                     208 @L13     DS    0H
00000164 B920 0016                           209          CGR   1,6
00000168 47B0 C11E               0000017E    210          BNL   @L10
0000016C B904 00A8                           211          LGR   10,8
00000170 B909 00A3                           212          SGR   10,3
00000174 E3A0 F000 0021          00000000    213          CLG   10,0(0,15)
0000017A 4740 C09C               000000FC    214          BL    @L12
0000017E                                     215 @L10     DS    0H
                                             216 * ***
                                             217 * ***       *outlen = out - outstart;
0000017E B909 0083                           218          SGR   8,3
00000182 E380 F000 0024          00000000    219          STG   8,0(0,15)   ; outlen
                                             220 * ***       *inlen = processed - base;
00000188 B909 0054                           221          SGR   5,4
0000018C E350 2000 0024          00000000    222          STG   5,0(0,2)    ; inlen
                                             223 * ***       return(0);
00000192 A7F9 0000               00000000    224          LGHI  15,0        ; 0
                                             225 * ***   }
00000196                                     226 @ret_lab_339 DS 0H
                                             227 * * **** Start of Epilogue
                                             228          DCCEPIL
00000196                                     229+         ds 0h                                                          01-DCCEP
                                             230+* Epilog
00000196 D707 D088 D088 00000088 00000088    231+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000019C E3D0 D080 0004          00000080    232+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000001A2 E3C0 D090 0004          00000090    233+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000001A8 E3B0 C018 0004          00000018    234+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000001AE E3C0 B010 0021          00000010    235+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000001B4 E3E0 D008 0004          00000008    236+         lg  14,8(0,13)          load up return address                 01-DCCEP
000001BA EB1C D020 0004          00000020    237+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000001C0 078E                                238+         bcr 8,14                if same dsab, just return              01-DCCEP
000001C2 E3F0 D010 0024          00000010    239+         stg 15,16(0,13)         save return code                       01-DCCEP
000001C8 E300 D018 0024          00000018    240+         stg 0,24(0,13)          save more return code                  01-DCCEP
000001CE E3F0 D090 0004          00000090    241+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000001D4 E3F0 F018 0004          00000018    242+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000001DA 47F0 F040               00000040    243+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             244+* End of Epilog
                                             245 * * **** End of Epilogue
                                             246          DROP  12
                                             247 *
                                             248 *   DSECT for automatic variables in "utf8_2_ebcdic"
                                             249 *      (FUNCTION #339)
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             250 *
00000000                00000000 000000A9    251 @AUTO#utf8_2_ebcdic DSECT
00000000                                     252          DS    XL168
000000A8                                     253 utf8_2_ebcdic#c#0 DS 1CL1  ; c
                                             254 *
000001DE                00000000 0000685E    255 @CODE    CSECT
                                             256 *
                                             257 *
                                             258 *
                                             259 * ....... start of rd_atomic32_add
000001DE                                     260 @LNAME1059 DS  0H
000001DE 0000000F                            261          DC    X'0000000F'
000001E2 99846D81A3969489                    262          DC    C'rd_atomic32_add'
000001F1 00                                  263          DC    X'00'
                                             264 rd_atomic32_add DCCPRLG CINDEX=1059,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1059
                                             265          macro
                                             266          dccextrn &m
                                             267          gblc    &$dccext(1000)
                                             268          gbla    &$dccexti
                                             269          lcla    &i
                                             270 &$dccext(&$dccexti+1) setc    '&m'
                                             271 &i       seta    1
                                             272 .loop    aif    (&i gt &$dccexti).around
                                             273          aif    ('&$dccext(&i)' eq '&m').getout
                                             274 &i       seta    &i+1
                                             275          ago     .loop
                                             276 .around  anop
                                             277 &$dccexti seta &$dccexti+1
                                             278          extrn  &m
                                             279 .getout  anop
                                             280          mend
000001F8                                     281+$eye0006    ds    0d                                                    02-DCCCA
000001F8 C4C3C3                              282+         dc cl3'DCC'                                                    02-DCCCA
000001FB 01                                  283+         dc xl1'01' format one                                          02-DCCCA
000001FC 00000000                            284+         dc a(0)                                                        02-DCCCA
00000200 000000000000026A                    285+         dc ad(@PER_1059)                                               02-DCCCA
00000208 00000000000000B8                    286+         dc ad(184)                                                     02-DCCCA
00000210 0000000000000000                    287+         dc ad(0)                                                       02-DCCCA
00000218 0000000000001000                    288+         dc ad(4096)                                                    02-DCCCA
00000220 20                                  289+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000221 03                                  290+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000222 03                                  291+         dc al1(3)                                                      02-DCCCA
00000223 08                                  292+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000224 00                                  293+         dc bl.8'00000000'                                              02-DCCCA
00000225 000000                              294+         dc al3(0)                                                      02-DCCCA
00000228 00000000000001DE                    295+         dc ad(@LNAME1059)                                              02-DCCCA
00000230                                     296+         ds 0d                                                          02-DCCCA
00000230 00000000000001F8                    297+         dc ad($eye0006)                                                02-DCCCA
00000238 0000000000000000                    298+         dc ad(0)                                                       02-DCCCA
00000240                                     299+         ds    0d                                                       01-DCCPR
00000240                                     300+rd_atomic32_add ds 0d                                                   01-DCCPR
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000240                                     301+@REGION_1059_1 ds 0h                                                    01-DCCPR
00000240 EBEC D008 0024          00000008    302+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000246 E3E0 D088 0004          00000088    303+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000024C E3C0 D090 0004          00000090    304+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000252 B904 002E                           305+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000256 E3B0 C018 0004          00000018    306+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000025C A7EB 00B8               000000B8    307+         aghi  14,184              increase by frame size               01-DCCPR
00000260 E3E0 C020 0021          00000020    308+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000266 4720 B020               00000020    309+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000026A                                     310+@PER_1059 ds   0h                                                       01-DCCPR
0000026A EBDE 2080 0024          00000080    311+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000270 E3C0 2090 0024          00000090    312+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000276 B904 00D2                           313+         lgr   13,2                set real frame pointer               01-DCCPR
0000027A B904 00CF                           314+         lgr   12,15               set base reg                         01-DCCPR
                        00000240             315+         using @REGION_1059_1,12                                        01-DCCPR
0000027E B904 0031                           316          LGR   3,1         ; ptr to parm area
                                             317 * ******* End of Prologue
                                             318 * *
00000282 E320 3000 0004          00000000    319          LG    2,0(0,3)    ; ra
                                             320 * ***
                                             321 * ***      int32_t r;
                                             322 * ***      pthread_mutex_lock(&ra->lock);
00000288 41F0 2008               00000008    323          LA    15,8(0,2)
0000028C E3F0 D0B0 0024          000000B0    324          STG   15,176(0,13)
00000292 4110 D0B0               000000B0    325          LA    1,176(0,13)
00000296 E3F0 C0D8 0004          00000318    326          LG    15,@lit_1059_5 ; pthread_mutex_lock
0000029C                                     327 @@gen_label4 DS    0H
0000029C 05EF                                328          BALR  14,15
0000029E                                     329 @@gen_label5 DS    0H
                                             330 * ***      ra->val += v;
0000029E 58F0 2000               00000000    331          L     15,0(0,2)
000002A2 5AF0 300C               0000000C    332          A     15,12(0,3)
000002A6 50F0 2000               00000000    333          ST    15,0(0,2)
                                             334 * ***      r = ra->val;
000002AA 183F                                335          LR    3,15        ; ra
                                             336 * ***      pthread_mutex_unlock(&ra->lock);
000002AC 41F0 2008               00000008    337          LA    15,8(0,2)
000002B0 E3F0 D0B0 0024          000000B0    338          STG   15,176(0,13)
000002B6 4110 D0B0               000000B0    339          LA    1,176(0,13)
000002BA E3F0 C0E0 0004          00000320    340          LG    15,@lit_1059_6 ; pthread_mutex_unlock
000002C0                                     341 @@gen_label6 DS    0H
000002C0 05EF                                342          BALR  14,15
000002C2                                     343 @@gen_label7 DS    0H
                                             344 * ***      return r;
000002C2 B914 00F3                           345          LGFR  15,3
                                             346 * ***   # 103 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             347 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             348 * ***
                                             349 * ***   }
                                             350 * * **** Start of Epilogue
                                             351          DCCEPIL
000002C6                                     352+         ds 0h                                                          01-DCCEP
                                                                                                                           Page   12 
  Active Usings: @REGION_1059_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             353+* Epilog
000002C6 D707 D088 D088 00000088 00000088    354+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000002CC E3D0 D080 0004          00000080    355+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000002D2 E3C0 D090 0004          00000090    356+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000002D8 E3B0 C018 0004          00000018    357+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000002DE E3C0 B010 0021          00000010    358+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000002E4 E3E0 D008 0004          00000008    359+         lg  14,8(0,13)          load up return address                 01-DCCEP
000002EA EB1C D020 0004          00000020    360+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000002F0 078E                                361+         bcr 8,14                if same dsab, just return              01-DCCEP
000002F2 E3F0 D010 0024          00000010    362+         stg 15,16(0,13)         save return code                       01-DCCEP
000002F8 E300 D018 0024          00000018    363+         stg 0,24(0,13)          save more return code                  01-DCCEP
000002FE E3F0 D090 0004          00000090    364+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000304 E3F0 F018 0004          00000018    365+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000030A 47F0 F040               00000040    366+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             367+* End of Epilog
                                             368 * * **** End of Epilogue
00000310                                     369          DS    0D
00000310 000000B8                            370 @FRAMESIZE_1059 DC F'184'
00000314 00000000
00000318 0000000000000000                    371 @lit_1059_5 DC AD(pthread_mutex_lock)
00000320 0000000000000000                    372 @lit_1059_6 DC AD(pthread_mutex_unlock)
                                             373          DROP  12
                                             374 *
                                             375 *   DSECT for automatic variables in "rd_atomic32_add"
                                             376 *      (FUNCTION #1059)
                                             377 *
00000000                00000000 000000AC    378 @AUTO#rd_atomic32_add DSECT
00000000                                     379          DS    XL168
000000A8                                     380 rd_atomic32_add#r#0 DS 1F  ; r
                                             381 *
00000328                00000000 0000685E    382 @CODE    CSECT
                                             383 *
                                             384 *
                                             385 *
                                             386 * ....... start of rd_atomic32_sub
00000328                                     387 @LNAME1060 DS  0H
00000328 0000000F                            388          DC    X'0000000F'
0000032C 99846D81A3969489                    389          DC    C'rd_atomic32_sub'
0000033B 00                                  390          DC    X'00'
                                             391 rd_atomic32_sub DCCPRLG CINDEX=1060,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1060
                                             392          macro
                                             393          dccextrn &m
                                             394          gblc    &$dccext(1000)
                                             395          gbla    &$dccexti
                                             396          lcla    &i
                                             397 &$dccext(&$dccexti+1) setc    '&m'
                                             398 &i       seta    1
                                             399 .loop    aif    (&i gt &$dccexti).around
                                             400          aif    ('&$dccext(&i)' eq '&m').getout
                                             401 &i       seta    &i+1
                                             402          ago     .loop
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             403 .around  anop
                                             404 &$dccexti seta &$dccexti+1
                                             405          extrn  &m
                                             406 .getout  anop
                                             407          mend
00000340                                     408+$eye0009    ds    0d                                                    02-DCCCA
00000340 C4C3C3                              409+         dc cl3'DCC'                                                    02-DCCCA
00000343 01                                  410+         dc xl1'01' format one                                          02-DCCCA
00000344 00000000                            411+         dc a(0)                                                        02-DCCCA
00000348 00000000000003B2                    412+         dc ad(@PER_1060)                                               02-DCCCA
00000350 00000000000000B8                    413+         dc ad(184)                                                     02-DCCCA
00000358 0000000000000000                    414+         dc ad(0)                                                       02-DCCCA
00000360 0000000000001000                    415+         dc ad(4096)                                                    02-DCCCA
00000368 20                                  416+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000369 03                                  417+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000036A 03                                  418+         dc al1(3)                                                      02-DCCCA
0000036B 08                                  419+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000036C 00                                  420+         dc bl.8'00000000'                                              02-DCCCA
0000036D 000000                              421+         dc al3(0)                                                      02-DCCCA
00000370 0000000000000328                    422+         dc ad(@LNAME1060)                                              02-DCCCA
00000378                                     423+         ds 0d                                                          02-DCCCA
00000378 0000000000000340                    424+         dc ad($eye0009)                                                02-DCCCA
00000380 0000000000000000                    425+         dc ad(0)                                                       02-DCCCA
00000388                                     426+         ds    0d                                                       01-DCCPR
00000388                                     427+rd_atomic32_sub ds 0d                                                   01-DCCPR
00000388                                     428+@REGION_1060_1 ds 0h                                                    01-DCCPR
00000388 EBEC D008 0024          00000008    429+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000038E E3E0 D088 0004          00000088    430+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000394 E3C0 D090 0004          00000090    431+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000039A B904 002E                           432+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000039E E3B0 C018 0004          00000018    433+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000003A4 A7EB 00B8               000000B8    434+         aghi  14,184              increase by frame size               01-DCCPR
000003A8 E3E0 C020 0021          00000020    435+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000003AE 4720 B020               00000020    436+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000003B2                                     437+@PER_1060 ds   0h                                                       01-DCCPR
000003B2 EBDE 2080 0024          00000080    438+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000003B8 E3C0 2090 0024          00000090    439+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000003BE B904 00D2                           440+         lgr   13,2                set real frame pointer               01-DCCPR
000003C2 B904 00CF                           441+         lgr   12,15               set base reg                         01-DCCPR
                        00000388             442+         using @REGION_1060_1,12                                        01-DCCPR
000003C6 B904 0031                           443          LGR   3,1         ; ptr to parm area
                                             444 * ******* End of Prologue
                                             445 * *
000003CA E320 3000 0004          00000000    446          LG    2,0(0,3)    ; ra
                                             447 * ***
                                             448 * ***      int32_t r;
                                             449 * ***      pthread_mutex_lock(&ra->lock);
000003D0 41F0 2008               00000008    450          LA    15,8(0,2)
000003D4 E3F0 D0B0 0024          000000B0    451          STG   15,176(0,13)
000003DA 4110 D0B0               000000B0    452          LA    1,176(0,13)
000003DE E3F0 C0D8 0004          00000460    453          LG    15,@lit_1060_8 ; pthread_mutex_lock
000003E4                                     454 @@gen_label8 DS    0H
                                                                                                                           Page   14 
  Active Usings: @REGION_1060_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000003E4 05EF                                455          BALR  14,15
000003E6                                     456 @@gen_label9 DS    0H
                                             457 * ***      ra->val -= v;
000003E6 58F0 2000               00000000    458          L     15,0(0,2)
000003EA 5BF0 300C               0000000C    459          S     15,12(0,3)
000003EE 50F0 2000               00000000    460          ST    15,0(0,2)
                                             461 * ***      r = ra->val;
000003F2 183F                                462          LR    3,15        ; ra
                                             463 * ***      pthread_mutex_unlock(&ra->lock);
000003F4 41F0 2008               00000008    464          LA    15,8(0,2)
000003F8 E3F0 D0B0 0024          000000B0    465          STG   15,176(0,13)
000003FE 4110 D0B0               000000B0    466          LA    1,176(0,13)
00000402 E3F0 C0E0 0004          00000468    467          LG    15,@lit_1060_9 ; pthread_mutex_unlock
00000408                                     468 @@gen_label10 DS    0H
00000408 05EF                                469          BALR  14,15
0000040A                                     470 @@gen_label11 DS    0H
                                             471 * ***      return r;
0000040A B914 00F3                           472          LGFR  15,3
                                             473 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             474 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             475 * ***
                                             476 * ***   }
                                             477 * * **** Start of Epilogue
                                             478          DCCEPIL
0000040E                                     479+         ds 0h                                                          01-DCCEP
                                             480+* Epilog
0000040E D707 D088 D088 00000088 00000088    481+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000414 E3D0 D080 0004          00000080    482+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000041A E3C0 D090 0004          00000090    483+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000420 E3B0 C018 0004          00000018    484+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000426 E3C0 B010 0021          00000010    485+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000042C E3E0 D008 0004          00000008    486+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000432 EB1C D020 0004          00000020    487+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000438 078E                                488+         bcr 8,14                if same dsab, just return              01-DCCEP
0000043A E3F0 D010 0024          00000010    489+         stg 15,16(0,13)         save return code                       01-DCCEP
00000440 E300 D018 0024          00000018    490+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000446 E3F0 D090 0004          00000090    491+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000044C E3F0 F018 0004          00000018    492+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000452 47F0 F040               00000040    493+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             494+* End of Epilog
                                             495 * * **** End of Epilogue
00000458                                     496          DS    0D
00000458 000000B8                            497 @FRAMESIZE_1060 DC F'184'
0000045C 00000000
00000460 0000000000000000                    498 @lit_1060_8 DC AD(pthread_mutex_lock)
00000468 0000000000000000                    499 @lit_1060_9 DC AD(pthread_mutex_unlock)
                                             500          DROP  12
                                             501 *
                                             502 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             503 *      (FUNCTION #1060)
                                             504 *
00000000                00000000 000000AC    505 @AUTO#rd_atomic32_sub DSECT
                                                                                                                           Page   15 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000000                                     506          DS    XL168
000000A8                                     507 rd_atomic32_sub#r#0 DS 1F  ; r
                                             508 *
00000470                00000000 0000685E    509 @CODE    CSECT
                                             510 *
                                             511 *
                                             512 *
                                             513 * ....... start of rd_atomic32_get
00000470                                     514 @LNAME1061 DS  0H
00000470 0000000F                            515          DC    X'0000000F'
00000474 99846D81A3969489                    516          DC    C'rd_atomic32_get'
00000483 00                                  517          DC    X'00'
                                             518 rd_atomic32_get DCCPRLG CINDEX=1061,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1061
                                             519          macro
                                             520          dccextrn &m
                                             521          gblc    &$dccext(1000)
                                             522          gbla    &$dccexti
                                             523          lcla    &i
                                             524 &$dccext(&$dccexti+1) setc    '&m'
                                             525 &i       seta    1
                                             526 .loop    aif    (&i gt &$dccexti).around
                                             527          aif    ('&$dccext(&i)' eq '&m').getout
                                             528 &i       seta    &i+1
                                             529          ago     .loop
                                             530 .around  anop
                                             531 &$dccexti seta &$dccexti+1
                                             532          extrn  &m
                                             533 .getout  anop
                                             534          mend
00000488                                     535+$eye0012    ds    0d                                                    02-DCCCA
00000488 C4C3C3                              536+         dc cl3'DCC'                                                    02-DCCCA
0000048B 01                                  537+         dc xl1'01' format one                                          02-DCCCA
0000048C 00000000                            538+         dc a(0)                                                        02-DCCCA
00000490 00000000000004FA                    539+         dc ad(@PER_1061)                                               02-DCCCA
00000498 00000000000000B8                    540+         dc ad(184)                                                     02-DCCCA
000004A0 0000000000000000                    541+         dc ad(0)                                                       02-DCCCA
000004A8 0000000000001000                    542+         dc ad(4096)                                                    02-DCCCA
000004B0 20                                  543+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000004B1 03                                  544+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000004B2 03                                  545+         dc al1(3)                                                      02-DCCCA
000004B3 08                                  546+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000004B4 00                                  547+         dc bl.8'00000000'                                              02-DCCCA
000004B5 000000                              548+         dc al3(0)                                                      02-DCCCA
000004B8 0000000000000470                    549+         dc ad(@LNAME1061)                                              02-DCCCA
000004C0                                     550+         ds 0d                                                          02-DCCCA
000004C0 0000000000000488                    551+         dc ad($eye0012)                                                02-DCCCA
000004C8 0000000000000000                    552+         dc ad(0)                                                       02-DCCCA
000004D0                                     553+         ds    0d                                                       01-DCCPR
000004D0                                     554+rd_atomic32_get ds 0d                                                   01-DCCPR
000004D0                                     555+@REGION_1061_1 ds 0h                                                    01-DCCPR
000004D0 EBEC D008 0024          00000008    556+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000004D6 E3E0 D088 0004          00000088    557+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000004DC E3C0 D090 0004          00000090    558+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000004E2 B904 002E                           559+         lgr   2,14                copy addr of our savearea            01-DCCPR
000004E6 E3B0 C018 0004          00000018    560+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000004EC A7EB 00B8               000000B8    561+         aghi  14,184              increase by frame size               01-DCCPR
000004F0 E3E0 C020 0021          00000020    562+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000004F6 4720 B020               00000020    563+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000004FA                                     564+@PER_1061 ds   0h                                                       01-DCCPR
000004FA EBDE 2080 0024          00000080    565+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000500 E3C0 2090 0024          00000090    566+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000506 B904 00D2                           567+         lgr   13,2                set real frame pointer               01-DCCPR
0000050A B904 00CF                           568+         lgr   12,15               set base reg                         01-DCCPR
                        000004D0             569+         using @REGION_1061_1,12                                        01-DCCPR
                                             570 * ******* End of Prologue
                                             571 * *
0000050E E320 1000 0004          00000000    572          LG    2,0(0,1)    ; ra
                                             573 * ***
                                             574 * ***      int32_t r;
                                             575 * ***      pthread_mutex_lock(&ra->lock);
00000514 41F0 2008               00000008    576          LA    15,8(0,2)
00000518 E3F0 D0B0 0024          000000B0    577          STG   15,176(0,13)
0000051E 4110 D0B0               000000B0    578          LA    1,176(0,13)
00000522 E3F0 C0C8 0004          00000598    579          LG    15,@lit_1061_11 ; pthread_mutex_lock
00000528                                     580 @@gen_label12 DS    0H
00000528 05EF                                581          BALR  14,15
0000052A                                     582 @@gen_label13 DS    0H
                                             583 * ***      r = ra->val;
0000052A 5830 2000               00000000    584          L     3,0(0,2)    ; ra
                                             585 * ***      pthread_mutex_unlock(&ra->lock);
0000052E 41F0 2008               00000008    586          LA    15,8(0,2)
00000532 E3F0 D0B0 0024          000000B0    587          STG   15,176(0,13)
00000538 4110 D0B0               000000B0    588          LA    1,176(0,13)
0000053C E3F0 C0D0 0004          000005A0    589          LG    15,@lit_1061_12 ; pthread_mutex_unlock
00000542                                     590 @@gen_label14 DS    0H
00000542 05EF                                591          BALR  14,15
00000544                                     592 @@gen_label15 DS    0H
                                             593 * ***      return r;
00000544 B914 00F3                           594          LGFR  15,3
                                             595 * ***   # 157 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             596 * ***      return __atomic_fetch_add(&ra->val, 0, 6);
                                             597 * ***
                                             598 * ***   }
                                             599 * * **** Start of Epilogue
                                             600          DCCEPIL
00000548                                     601+         ds 0h                                                          01-DCCEP
                                             602+* Epilog
00000548 D707 D088 D088 00000088 00000088    603+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000054E E3D0 D080 0004          00000080    604+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000554 E3C0 D090 0004          00000090    605+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000055A E3B0 C018 0004          00000018    606+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000560 E3C0 B010 0021          00000010    607+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000566 E3E0 D008 0004          00000008    608+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page   17 
  Active Usings: @REGION_1061_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000056C EB1C D020 0004          00000020    609+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000572 078E                                610+         bcr 8,14                if same dsab, just return              01-DCCEP
00000574 E3F0 D010 0024          00000010    611+         stg 15,16(0,13)         save return code                       01-DCCEP
0000057A E300 D018 0024          00000018    612+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000580 E3F0 D090 0004          00000090    613+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000586 E3F0 F018 0004          00000018    614+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000058C 47F0 F040               00000040    615+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             616+* End of Epilog
                                             617 * * **** End of Epilogue
00000590                                     618          DS    0D
00000590 000000B8                            619 @FRAMESIZE_1061 DC F'184'
00000594 00000000
00000598 0000000000000000                    620 @lit_1061_11 DC AD(pthread_mutex_lock)
000005A0 0000000000000000                    621 @lit_1061_12 DC AD(pthread_mutex_unlock)
                                             622          DROP  12
                                             623 *
                                             624 *   DSECT for automatic variables in "rd_atomic32_get"
                                             625 *      (FUNCTION #1061)
                                             626 *
00000000                00000000 000000AC    627 @AUTO#rd_atomic32_get DSECT
00000000                                     628          DS    XL168
000000A8                                     629 rd_atomic32_get#r#0 DS 1F  ; r
                                             630 *
000005A8                00000000 0000685E    631 @CODE    CSECT
                                             632 *
                                             633 *
                                             634 *
                                             635 * ....... start of rd_calloc
000005A8                                     636 @LNAME1077 DS  0H
000005A8 00000009                            637          DC    X'00000009'
000005AC 99846D8381939396                    638          DC    C'rd_calloc'
000005B5 00                                  639          DC    X'00'
                                             640 rd_calloc DCCPRLG CINDEX=1077,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1077
                                             641          macro
                                             642          dccextrn &m
                                             643          gblc    &$dccext(1000)
                                             644          gbla    &$dccexti
                                             645          lcla    &i
                                             646 &$dccext(&$dccexti+1) setc    '&m'
                                             647 &i       seta    1
                                             648 .loop    aif    (&i gt &$dccexti).around
                                             649          aif    ('&$dccext(&i)' eq '&m').getout
                                             650 &i       seta    &i+1
                                             651          ago     .loop
                                             652 .around  anop
                                             653 &$dccexti seta &$dccexti+1
                                             654          extrn  &m
                                             655 .getout  anop
                                             656          mend
000005B8                                     657+$eye0015    ds    0d                                                    02-DCCCA
000005B8 C4C3C3                              658+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000005BB 01                                  659+         dc xl1'01' format one                                          02-DCCCA
000005BC 00000000                            660+         dc a(0)                                                        02-DCCCA
000005C0 000000000000062A                    661+         dc ad(@PER_1077)                                               02-DCCCA
000005C8 00000000000000D0                    662+         dc ad(208)                                                     02-DCCCA
000005D0 0000000000000000                    663+         dc ad(0)                                                       02-DCCCA
000005D8 0000000000001000                    664+         dc ad(4096)                                                    02-DCCCA
000005E0 20                                  665+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000005E1 03                                  666+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000005E2 03                                  667+         dc al1(3)                                                      02-DCCCA
000005E3 08                                  668+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000005E4 00                                  669+         dc bl.8'00000000'                                              02-DCCCA
000005E5 000000                              670+         dc al3(0)                                                      02-DCCCA
000005E8 00000000000005A8                    671+         dc ad(@LNAME1077)                                              02-DCCCA
000005F0                                     672+         ds 0d                                                          02-DCCCA
000005F0 00000000000005B8                    673+         dc ad($eye0015)                                                02-DCCCA
000005F8 0000000000000000                    674+         dc ad(0)                                                       02-DCCCA
00000600                                     675+         ds    0d                                                       01-DCCPR
00000600                                     676+rd_calloc ds   0d                                                       01-DCCPR
00000600                                     677+@REGION_1077_1 ds 0h                                                    01-DCCPR
00000600 EBEC D008 0024          00000008    678+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000606 E3E0 D088 0004          00000088    679+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000060C E3C0 D090 0004          00000090    680+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000612 B904 002E                           681+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000616 E3B0 C018 0004          00000018    682+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000061C A7EB 00D0               000000D0    683+         aghi  14,208              increase by frame size               01-DCCPR
00000620 E3E0 C020 0021          00000020    684+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000626 4720 B020               00000020    685+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000062A                                     686+@PER_1077 ds   0h                                                       01-DCCPR
0000062A EBDE 2080 0024          00000080    687+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000630 E3C0 2090 0024          00000090    688+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000636 B904 00D2                           689+         lgr   13,2                set real frame pointer               01-DCCPR
0000063A B904 00CF                           690+         lgr   12,15               set base reg                         01-DCCPR
                        00000600             691+         using @REGION_1077_1,12                                        01-DCCPR
                                             692 * ******* End of Prologue
                                             693 * *
                                             694 * ***      void *p = calloc(num, sz);
0000063E E3F0 1000 0004          00000000    695          LG    15,0(0,1)   ; num
00000644 E3F0 D0B0 0024          000000B0    696          STG   15,176(0,13)
0000064A E3F0 1008 0004          00000008    697          LG    15,8(0,1)   ; sz
00000650 E3F0 D0B8 0024          000000B8    698          STG   15,184(0,13)
00000656 4110 D0B0               000000B0    699          LA    1,176(0,13)
0000065A E3F0 C0F8 0004          000006F8    700          LG    15,@lit_1077_14 ; calloc
00000660                                     701 @@gen_label16 DS    0H
00000660 05EF                                702          BALR  14,15
00000662                                     703 @@gen_label17 DS    0H
00000662 B904 002F                           704          LGR   2,15
                                             705 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             706 * ka\\src\\rd.h", 122, "p"));
00000666 B902 00F2                           707          LTGR  15,2
0000066A 4770 C0A2               000006A2    708          BNZ   @L32
0000066E                                     709 @L31     DS    0H
0000066E E3F0 C110 0004          00000710    710          LG    15,@lit_1077_15
                                                                                                                           Page   19 
  Active Usings: @REGION_1077_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000674 E3F0 D0B0 0024          000000B0    711          STG   15,176(0,13)
0000067A E3F0 C108 0004          00000708    712          LG    15,@lit_1077_16
00000680 E3F0 D0B8 0024          000000B8    713          STG   15,184(0,13)
00000686 E548 D0C0 007A          000000C0    714          MVGHI 192(13),122
0000068C 41F0 F020               00000020    715          LA    15,32(0,15)
00000690 E3F0 D0C8 0024          000000C8    716          STG   15,200(0,13)
00000696 4110 D0B0               000000B0    717          LA    1,176(0,13)
0000069A E3F0 C100 0004          00000700    718          LG    15,@lit_1077_17 ; __assert
000006A0                                     719 @@gen_label19 DS    0H
000006A0 05EF                                720          BALR  14,15
000006A2                                     721 @@gen_label20 DS    0H
000006A2                                     722 @L32     DS    0H
                                             723 * ***      return p;
000006A2 B904 00F2                           724          LGR   15,2
                                             725 * ***   }
                                             726 * * **** Start of Epilogue
                                             727          DCCEPIL
000006A6                                     728+         ds 0h                                                          01-DCCEP
                                             729+* Epilog
000006A6 D707 D088 D088 00000088 00000088    730+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000006AC E3D0 D080 0004          00000080    731+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000006B2 E3C0 D090 0004          00000090    732+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000006B8 E3B0 C018 0004          00000018    733+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000006BE E3C0 B010 0021          00000010    734+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000006C4 E3E0 D008 0004          00000008    735+         lg  14,8(0,13)          load up return address                 01-DCCEP
000006CA EB1C D020 0004          00000020    736+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000006D0 078E                                737+         bcr 8,14                if same dsab, just return              01-DCCEP
000006D2 E3F0 D010 0024          00000010    738+         stg 15,16(0,13)         save return code                       01-DCCEP
000006D8 E300 D018 0024          00000018    739+         stg 0,24(0,13)          save more return code                  01-DCCEP
000006DE E3F0 D090 0004          00000090    740+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000006E4 E3F0 F018 0004          00000018    741+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000006EA 47F0 F040               00000040    742+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             743+* End of Epilog
                                             744 * * **** End of Epilogue
000006F0                                     745          DS    0D
000006F0 000000D0                            746 @FRAMESIZE_1077 DC F'208'
000006F4 00000000
000006F8 0000000000000000                    747 @lit_1077_14 DC AD(calloc)
00000700 0000000000000000                    748 @lit_1077_17 DC AD(__assert)
00000708 0000000000006A88                    749 @lit_1077_16 DC AD(@strings@)
00000710 0000000000006860                    750 @lit_1077_15 DC AD(@DATA)
                                             751          DROP  12
                                             752 *
                                             753 *   DSECT for automatic variables in "rd_calloc"
                                             754 *      (FUNCTION #1077)
                                             755 *
00000000                00000000 000000A8    756 @AUTO#rd_calloc DSECT
00000000                                     757          DS    XL168
                                             758 *
00000718                00000000 0000685E    759 @CODE    CSECT
                                             760 *
                                             761 *
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             762 *
                                             763 * ....... start of rd_free
00000718                                     764 @LNAME1080 DS  0H
00000718 00000007                            765          DC    X'00000007'
0000071C 99846D86998585                      766          DC    C'rd_free'
00000723 00                                  767          DC    X'00'
                                             768 rd_free  DCCPRLG CINDEX=1080,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1080
                                             769          macro
                                             770          dccextrn &m
                                             771          gblc    &$dccext(1000)
                                             772          gbla    &$dccexti
                                             773          lcla    &i
                                             774 &$dccext(&$dccexti+1) setc    '&m'
                                             775 &i       seta    1
                                             776 .loop    aif    (&i gt &$dccexti).around
                                             777          aif    ('&$dccext(&i)' eq '&m').getout
                                             778 &i       seta    &i+1
                                             779          ago     .loop
                                             780 .around  anop
                                             781 &$dccexti seta &$dccexti+1
                                             782          extrn  &m
                                             783 .getout  anop
                                             784          mend
00000728                                     785+$eye0018    ds    0d                                                    02-DCCCA
00000728 C4C3C3                              786+         dc cl3'DCC'                                                    02-DCCCA
0000072B 01                                  787+         dc xl1'01' format one                                          02-DCCCA
0000072C 00000000                            788+         dc a(0)                                                        02-DCCCA
00000730 000000000000079A                    789+         dc ad(@PER_1080)                                               02-DCCCA
00000738 00000000000000B0                    790+         dc ad(176)                                                     02-DCCCA
00000740 0000000000000000                    791+         dc ad(0)                                                       02-DCCCA
00000748 0000000000001000                    792+         dc ad(4096)                                                    02-DCCCA
00000750 20                                  793+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000751 03                                  794+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000752 03                                  795+         dc al1(3)                                                      02-DCCCA
00000753 08                                  796+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000754 00                                  797+         dc bl.8'00000000'                                              02-DCCCA
00000755 000000                              798+         dc al3(0)                                                      02-DCCCA
00000758 0000000000000718                    799+         dc ad(@LNAME1080)                                              02-DCCCA
00000760                                     800+         ds 0d                                                          02-DCCCA
00000760 0000000000000728                    801+         dc ad($eye0018)                                                02-DCCCA
00000768 0000000000000000                    802+         dc ad(0)                                                       02-DCCCA
00000770                                     803+         ds    0d                                                       01-DCCPR
00000770                                     804+rd_free  ds    0d                                                       01-DCCPR
00000770                                     805+@REGION_1080_1 ds 0h                                                    01-DCCPR
00000770 EBEC D008 0024          00000008    806+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000776 E3E0 D088 0004          00000088    807+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000077C E3C0 D090 0004          00000090    808+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000782 B904 002E                           809+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000786 E3B0 C018 0004          00000018    810+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000078C A7EB 00B0               000000B0    811+         aghi  14,176              increase by frame size               01-DCCPR
00000790 E3E0 C020 0021          00000020    812+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000796 4720 B020               00000020    813+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000079A                                     814+@PER_1080 ds   0h                                                       01-DCCPR
0000079A EBDE 2080 0024          00000080    815+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000007A0 E3C0 2090 0024          00000090    816+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000007A6 B904 00D2                           817+         lgr   13,2                set real frame pointer               01-DCCPR
000007AA B904 00CF                           818+         lgr   12,15               set base reg                         01-DCCPR
                        00000770             819+         using @REGION_1080_1,12                                        01-DCCPR
                                             820 * ******* End of Prologue
                                             821 * *
                                             822 * ***      free(ptr);
000007AE E3F0 1000 0004          00000000    823          LG    15,0(0,1)   ; ptr
000007B4 E3F0 D0A8 0024          000000A8    824          STG   15,168(0,13)
000007BA 4110 D0A8               000000A8    825          LA    1,168(0,13)
000007BE E3F0 C0A8 0004          00000818    826          LG    15,@lit_1080_19 ; free
000007C4                                     827 @@gen_label21 DS    0H
000007C4 05EF                                828          BALR  14,15
000007C6                                     829 @@gen_label22 DS    0H
                                             830 * ***   }
000007C6                                     831 @ret_lab_1080 DS 0H
                                             832 * * **** Start of Epilogue
                                             833          DCCEPIL
000007C6                                     834+         ds 0h                                                          01-DCCEP
                                             835+* Epilog
000007C6 D707 D088 D088 00000088 00000088    836+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000007CC E3D0 D080 0004          00000080    837+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000007D2 E3C0 D090 0004          00000090    838+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000007D8 E3B0 C018 0004          00000018    839+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000007DE E3C0 B010 0021          00000010    840+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000007E4 E3E0 D008 0004          00000008    841+         lg  14,8(0,13)          load up return address                 01-DCCEP
000007EA EB1C D020 0004          00000020    842+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000007F0 078E                                843+         bcr 8,14                if same dsab, just return              01-DCCEP
000007F2 E3F0 D010 0024          00000010    844+         stg 15,16(0,13)         save return code                       01-DCCEP
000007F8 E300 D018 0024          00000018    845+         stg 0,24(0,13)          save more return code                  01-DCCEP
000007FE E3F0 D090 0004          00000090    846+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000804 E3F0 F018 0004          00000018    847+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000080A 47F0 F040               00000040    848+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             849+* End of Epilog
                                             850 * * **** End of Epilogue
00000810                                     851          DS    0D
00000810 000000B0                            852 @FRAMESIZE_1080 DC F'176'
00000814 00000000
00000818 0000000000000000                    853 @lit_1080_19 DC AD(free)
                                             854          DROP  12
                                             855 *
                                             856 *   DSECT for automatic variables in "rd_free"
                                             857 *      (FUNCTION #1080)
                                             858 *
00000000                00000000 000000A8    859 @AUTO#rd_free DSECT
00000000                                     860          DS    XL168
                                             861 *
00000820                00000000 0000685E    862 @CODE    CSECT
                                             863 *
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             864 *
                                             865 *
                                             866 * ....... start of rd_strdup
00000820                                     867 @LNAME1081 DS  0H
00000820 00000009                            868          DC    X'00000009'
00000824 99846DA2A39984A4                    869          DC    C'rd_strdup'
0000082D 00                                  870          DC    X'00'
                                             871 rd_strdup DCCPRLG CINDEX=1081,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1081
                                             872          macro
                                             873          dccextrn &m
                                             874          gblc    &$dccext(1000)
                                             875          gbla    &$dccexti
                                             876          lcla    &i
                                             877 &$dccext(&$dccexti+1) setc    '&m'
                                             878 &i       seta    1
                                             879 .loop    aif    (&i gt &$dccexti).around
                                             880          aif    ('&$dccext(&i)' eq '&m').getout
                                             881 &i       seta    &i+1
                                             882          ago     .loop
                                             883 .around  anop
                                             884 &$dccexti seta &$dccexti+1
                                             885          extrn  &m
                                             886 .getout  anop
                                             887          mend
00000830                                     888+$eye0021    ds    0d                                                    02-DCCCA
00000830 C4C3C3                              889+         dc cl3'DCC'                                                    02-DCCCA
00000833 01                                  890+         dc xl1'01' format one                                          02-DCCCA
00000834 00000000                            891+         dc a(0)                                                        02-DCCCA
00000838 00000000000008A2                    892+         dc ad(@PER_1081)                                               02-DCCCA
00000840 00000000000000D0                    893+         dc ad(208)                                                     02-DCCCA
00000848 0000000000000000                    894+         dc ad(0)                                                       02-DCCCA
00000850 0000000000001000                    895+         dc ad(4096)                                                    02-DCCCA
00000858 20                                  896+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000859 03                                  897+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000085A 03                                  898+         dc al1(3)                                                      02-DCCCA
0000085B 08                                  899+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000085C 00                                  900+         dc bl.8'00000000'                                              02-DCCCA
0000085D 000000                              901+         dc al3(0)                                                      02-DCCCA
00000860 0000000000000820                    902+         dc ad(@LNAME1081)                                              02-DCCCA
00000868                                     903+         ds 0d                                                          02-DCCCA
00000868 0000000000000830                    904+         dc ad($eye0021)                                                02-DCCCA
00000870 0000000000000000                    905+         dc ad(0)                                                       02-DCCCA
00000878                                     906+         ds    0d                                                       01-DCCPR
00000878                                     907+rd_strdup ds   0d                                                       01-DCCPR
00000878                                     908+@REGION_1081_1 ds 0h                                                    01-DCCPR
00000878 EBEC D008 0024          00000008    909+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000087E E3E0 D088 0004          00000088    910+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000884 E3C0 D090 0004          00000090    911+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000088A B904 002E                           912+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000088E E3B0 C018 0004          00000018    913+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000894 A7EB 00D0               000000D0    914+         aghi  14,208              increase by frame size               01-DCCPR
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000898 E3E0 C020 0021          00000020    915+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000089E 4720 B020               00000020    916+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000008A2                                     917+@PER_1081 ds   0h                                                       01-DCCPR
000008A2 EBDE 2080 0024          00000080    918+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000008A8 E3C0 2090 0024          00000090    919+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000008AE B904 00D2                           920+         lgr   13,2                set real frame pointer               01-DCCPR
000008B2 B904 00CF                           921+         lgr   12,15               set base reg                         01-DCCPR
                        00000878             922+         using @REGION_1081_1,12                                        01-DCCPR
                                             923 * ******* End of Prologue
                                             924 * *
                                             925 * ***
                                             926 * ***      char *n = strdup(s);
000008B6 E3F0 1000 0004          00000000    927          LG    15,0(0,1)   ; s
000008BC E3F0 D0B0 0024          000000B0    928          STG   15,176(0,13)
000008C2 4110 D0B0               000000B0    929          LA    1,176(0,13)
000008C6 E3F0 C0F0 0004          00000968    930          LG    15,@lit_1081_21 ; strdup
000008CC                                     931 @@gen_label23 DS    0H
000008CC 05EF                                932          BALR  14,15
000008CE                                     933 @@gen_label24 DS    0H
000008CE B904 002F                           934          LGR   2,15
                                             935 * ***
                                             936 * ***
                                             937 * ***
                                             938 * ***      ((n) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             939 * ka\\src\\rd.h", 148, "n"));
000008D2 B902 00F2                           940          LTGR  15,2
000008D6 4770 C09A               00000912    941          BNZ   @L38
000008DA                                     942 @L37     DS    0H
000008DA E3F0 C108 0004          00000980    943          LG    15,@lit_1081_22
000008E0 41F0 F020               00000020    944          LA    15,32(0,15)
000008E4 E3F0 D0B0 0024          000000B0    945          STG   15,176(0,13)
000008EA E3F0 C100 0004          00000978    946          LG    15,@lit_1081_23
000008F0 E3F0 D0B8 0024          000000B8    947          STG   15,184(0,13)
000008F6 E548 D0C0 0094          000000C0    948          MVGHI 192(13),148
000008FC 41F0 F022               00000022    949          LA    15,34(0,15)
00000900 E3F0 D0C8 0024          000000C8    950          STG   15,200(0,13)
00000906 4110 D0B0               000000B0    951          LA    1,176(0,13)
0000090A E3F0 C0F8 0004          00000970    952          LG    15,@lit_1081_24 ; __assert
00000910                                     953 @@gen_label26 DS    0H
00000910 05EF                                954          BALR  14,15
00000912                                     955 @@gen_label27 DS    0H
00000912                                     956 @L38     DS    0H
                                             957 * ***      return n;
00000912 B904 00F2                           958          LGR   15,2
                                             959 * ***   }
                                             960 * * **** Start of Epilogue
                                             961          DCCEPIL
00000916                                     962+         ds 0h                                                          01-DCCEP
                                             963+* Epilog
00000916 D707 D088 D088 00000088 00000088    964+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000091C E3D0 D080 0004          00000080    965+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000922 E3C0 D090 0004          00000090    966+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page   24 
  Active Usings: @REGION_1081_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000928 E3B0 C018 0004          00000018    967+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000092E E3C0 B010 0021          00000010    968+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000934 E3E0 D008 0004          00000008    969+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000093A EB1C D020 0004          00000020    970+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000940 078E                                971+         bcr 8,14                if same dsab, just return              01-DCCEP
00000942 E3F0 D010 0024          00000010    972+         stg 15,16(0,13)         save return code                       01-DCCEP
00000948 E300 D018 0024          00000018    973+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000094E E3F0 D090 0004          00000090    974+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000954 E3F0 F018 0004          00000018    975+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000095A 47F0 F040               00000040    976+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             977+* End of Epilog
                                             978 * * **** End of Epilogue
00000960                                     979          DS    0D
00000960 000000D0                            980 @FRAMESIZE_1081 DC F'208'
00000964 00000000
00000968 0000000000000000                    981 @lit_1081_21 DC AD(strdup)
00000970 0000000000000000                    982 @lit_1081_24 DC AD(__assert)
00000978 0000000000006A88                    983 @lit_1081_23 DC AD(@strings@)
00000980 0000000000006860                    984 @lit_1081_22 DC AD(@DATA)
                                             985          DROP  12
                                             986 *
                                             987 *   DSECT for automatic variables in "rd_strdup"
                                             988 *      (FUNCTION #1081)
                                             989 *
00000000                00000000 000000A8    990 @AUTO#rd_strdup DSECT
00000000                                     991          DS    XL168
                                             992 *
00000988                00000000 0000685E    993 @CODE    CSECT
                                             994 *
                                             995 *
                                             996 *
                                             997 * ....... start of rd_refcnt_sub0
00000988                                     998 @LNAME1084 DS  0H
00000988 0000000E                            999          DC    X'0000000E'
0000098C 99846D9985868395                   1000          DC    C'rd_refcnt_sub0'
0000099A 00                                 1001          DC    X'00'
                                            1002 rd_refcnt_sub0 DCCPRLG CINDEX=1084,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1084
                                            1003          macro
                                            1004          dccextrn &m
                                            1005          gblc    &$dccext(1000)
                                            1006          gbla    &$dccexti
                                            1007          lcla    &i
                                            1008 &$dccext(&$dccexti+1) setc    '&m'
                                            1009 &i       seta    1
                                            1010 .loop    aif    (&i gt &$dccexti).around
                                            1011          aif    ('&$dccext(&i)' eq '&m').getout
                                            1012 &i       seta    &i+1
                                            1013          ago     .loop
                                            1014 .around  anop
                                            1015 &$dccexti seta &$dccexti+1
                                            1016          extrn  &m
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1017 .getout  anop
                                            1018          mend
000009A0                                    1019+$eye0024    ds    0d                                                    02-DCCCA
000009A0 C4C3C3                             1020+         dc cl3'DCC'                                                    02-DCCCA
000009A3 01                                 1021+         dc xl1'01' format one                                          02-DCCCA
000009A4 00000000                           1022+         dc a(0)                                                        02-DCCCA
000009A8 0000000000000A12                   1023+         dc ad(@PER_1084)                                               02-DCCCA
000009B0 00000000000000D0                   1024+         dc ad(208)                                                     02-DCCCA
000009B8 0000000000000000                   1025+         dc ad(0)                                                       02-DCCCA
000009C0 0000000000001000                   1026+         dc ad(4096)                                                    02-DCCCA
000009C8 20                                 1027+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000009C9 03                                 1028+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000009CA 03                                 1029+         dc al1(3)                                                      02-DCCCA
000009CB 08                                 1030+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000009CC 00                                 1031+         dc bl.8'00000000'                                              02-DCCCA
000009CD 000000                             1032+         dc al3(0)                                                      02-DCCCA
000009D0 0000000000000988                   1033+         dc ad(@LNAME1084)                                              02-DCCCA
000009D8                                    1034+         ds 0d                                                          02-DCCCA
000009D8 00000000000009A0                   1035+         dc ad($eye0024)                                                02-DCCCA
000009E0 0000000000000000                   1036+         dc ad(0)                                                       02-DCCCA
000009E8                                    1037+         ds    0d                                                       01-DCCPR
000009E8                                    1038+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
000009E8                                    1039+@REGION_1084_1 ds 0h                                                    01-DCCPR
000009E8 EBEC D008 0024          00000008   1040+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000009EE E3E0 D088 0004          00000088   1041+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000009F4 E3C0 D090 0004          00000090   1042+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000009FA B904 002E                          1043+         lgr   2,14                copy addr of our savearea            01-DCCPR
000009FE E3B0 C018 0004          00000018   1044+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000A04 A7EB 00D0               000000D0   1045+         aghi  14,208              increase by frame size               01-DCCPR
00000A08 E3E0 C020 0021          00000020   1046+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000A0E 4720 B020               00000020   1047+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000A12                                    1048+@PER_1084 ds   0h                                                       01-DCCPR
00000A12 EBDE 2080 0024          00000080   1049+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000A18 E3C0 2090 0024          00000090   1050+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000A1E B904 00D2                          1051+         lgr   13,2                set real frame pointer               01-DCCPR
00000A22 B904 00CF                          1052+         lgr   12,15               set base reg                         01-DCCPR
                        000009E8            1053+         using @REGION_1084_1,12                                        01-DCCPR
                                            1054 * ******* End of Prologue
                                            1055 * *
                                            1056 * ***           int r;
                                            1057 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                            1058 * ***           r = rd_atomic32_sub(R, 1);
00000A26 E3F0 1000 0004          00000000   1059          LG    15,0(0,1)   ; R
00000A2C E3F0 D0B0 0024          000000B0   1060          STG   15,176(0,13)
00000A32 E548 D0B8 0001          000000B8   1061          MVGHI 184(13),1
00000A38 4110 D0B0               000000B0   1062          LA    1,176(0,13)
00000A3C E3F0 C100 0004          00000AE8   1063          LG    15,@lit_1084_26 ; rd_atomic32_sub
00000A42                                    1064 @@gen_label28 DS    0H
00000A42 05EF                               1065          BALR  14,15
00000A44                                    1066 @@gen_label29 DS    0H
00000A44 122F                               1067          LTR   2,15
                                            1068 * ***
                                                                                                                           Page   26 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1069 * ***           if (r < 0)
00000A46 47B0 C0A6               00000A8E   1070          BNL   @L41
                                            1071 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                            1072 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                            1073 * zero\""));
00000A4A E3F0 C108 0004          00000AF0   1074          LG    15,@lit_1084_27
00000A50 4110 F024               00000024   1075          LA    1,36(0,15)
00000A54 9500 1000      00000000 00000000   1076          CLI   0(1),0
00000A58 4780 C0A6               00000A8E   1077          BE    @L41
00000A5C                                    1078 @L42     DS    0H
00000A5C E310 C118 0004          00000B00   1079          LG    1,@lit_1084_28
00000A62 4110 1036               00000036   1080          LA    1,54(0,1)
00000A66 E310 D0B0 0024          000000B0   1081          STG   1,176(0,13)
00000A6C E3F0 D0B8 0024          000000B8   1082          STG   15,184(0,13)
00000A72 E548 D0C0 014F          000000C0   1083          MVGHI 192(13),335
00000A78 41F0 F034               00000034   1084          LA    15,52(0,15)
00000A7C E3F0 D0C8 0024          000000C8   1085          STG   15,200(0,13)
00000A82 4110 D0B0               000000B0   1086          LA    1,176(0,13)
00000A86 E3F0 C110 0004          00000AF8   1087          LG    15,@lit_1084_29 ; __assert
00000A8C                                    1088 @@gen_label32 DS    0H
00000A8C 05EF                               1089          BALR  14,15
00000A8E                                    1090 @@gen_label33 DS    0H
00000A8E                                    1091 @L43     DS    0H
00000A8E                                    1092 @L41     DS    0H
                                            1093 * ***           return r;
00000A8E B914 00F2                          1094          LGFR  15,2
                                            1095 * ***   }
                                            1096 * * **** Start of Epilogue
                                            1097          DCCEPIL
00000A92                                    1098+         ds 0h                                                          01-DCCEP
                                            1099+* Epilog
00000A92 D707 D088 D088 00000088 00000088   1100+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000A98 E3D0 D080 0004          00000080   1101+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000A9E E3C0 D090 0004          00000090   1102+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000AA4 E3B0 C018 0004          00000018   1103+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000AAA E3C0 B010 0021          00000010   1104+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000AB0 E3E0 D008 0004          00000008   1105+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000AB6 EB1C D020 0004          00000020   1106+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000ABC 078E                               1107+         bcr 8,14                if same dsab, just return              01-DCCEP
00000ABE E3F0 D010 0024          00000010   1108+         stg 15,16(0,13)         save return code                       01-DCCEP
00000AC4 E300 D018 0024          00000018   1109+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000ACA E3F0 D090 0004          00000090   1110+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000AD0 E3F0 F018 0004          00000018   1111+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000AD6 47F0 F040               00000040   1112+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1113+* End of Epilog
                                            1114 * * **** End of Epilogue
00000AE0                                    1115          DS    0D
00000AE0 000000D0                           1116 @FRAMESIZE_1084 DC F'208'
00000AE4 00000000
00000AE8 0000000000000388                   1117 @lit_1084_26 DC AD(rd_atomic32_sub)
00000AF0 0000000000006A88                   1118 @lit_1084_27 DC AD(@strings@)
00000AF8 0000000000000000                   1119 @lit_1084_29 DC AD(__assert)
                                                                                                                           Page   27 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000B00 0000000000006860                   1120 @lit_1084_28 DC AD(@DATA)
                                            1121          DROP  12
                                            1122 *
                                            1123 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                            1124 *      (FUNCTION #1084)
                                            1125 *
00000000                00000000 000000AC   1126 @AUTO#rd_refcnt_sub0 DSECT
00000000                                    1127          DS    XL168
000000A8                                    1128 rd_refcnt_sub0#r#0 DS 1F   ; r
                                            1129 *
00000B08                00000000 0000685E   1130 @CODE    CSECT
                                            1131 *
                                            1132 *
                                            1133 *
                                            1134 * ....... start of rd_clock
00000B08                                    1135 @LNAME1088 DS  0H
00000B08 00000008                           1136          DC    X'00000008'
00000B0C 99846D8393968392                   1137          DC    C'rd_clock'
00000B14 00                                 1138          DC    X'00'
                                            1139 rd_clock DCCPRLG CINDEX=1088,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1088
                                            1140          macro
                                            1141          dccextrn &m
                                            1142          gblc    &$dccext(1000)
                                            1143          gbla    &$dccexti
                                            1144          lcla    &i
                                            1145 &$dccext(&$dccexti+1) setc    '&m'
                                            1146 &i       seta    1
                                            1147 .loop    aif    (&i gt &$dccexti).around
                                            1148          aif    ('&$dccext(&i)' eq '&m').getout
                                            1149 &i       seta    &i+1
                                            1150          ago     .loop
                                            1151 .around  anop
                                            1152 &$dccexti seta &$dccexti+1
                                            1153          extrn  &m
                                            1154 .getout  anop
                                            1155          mend
00000B18                                    1156+$eye0027    ds    0d                                                    02-DCCCA
00000B18 C4C3C3                             1157+         dc cl3'DCC'                                                    02-DCCCA
00000B1B 01                                 1158+         dc xl1'01' format one                                          02-DCCCA
00000B1C 00000000                           1159+         dc a(0)                                                        02-DCCCA
00000B20 0000000000000B8A                   1160+         dc ad(@PER_1088)                                               02-DCCCA
00000B28 00000000000000C8                   1161+         dc ad(200)                                                     02-DCCCA
00000B30 0000000000000000                   1162+         dc ad(0)                                                       02-DCCCA
00000B38 0000000000001000                   1163+         dc ad(4096)                                                    02-DCCCA
00000B40 20                                 1164+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B41 03                                 1165+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B42 03                                 1166+         dc al1(3)                                                      02-DCCCA
00000B43 08                                 1167+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B44 00                                 1168+         dc bl.8'00000000'                                              02-DCCCA
00000B45 000000                             1169+         dc al3(0)                                                      02-DCCCA
00000B48 0000000000000B08                   1170+         dc ad(@LNAME1088)                                              02-DCCCA
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000B50                                    1171+         ds 0d                                                          02-DCCCA
00000B50 0000000000000B18                   1172+         dc ad($eye0027)                                                02-DCCCA
00000B58 0000000000000000                   1173+         dc ad(0)                                                       02-DCCCA
00000B60                                    1174+         ds    0d                                                       01-DCCPR
00000B60                                    1175+rd_clock ds    0d                                                       01-DCCPR
00000B60                                    1176+@REGION_1088_1 ds 0h                                                    01-DCCPR
00000B60 EBEC D008 0024          00000008   1177+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B66 E3E0 D088 0004          00000088   1178+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B6C E3C0 D090 0004          00000090   1179+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B72 B904 002E                          1180+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B76 E3B0 C018 0004          00000018   1181+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B7C A7EB 00C8               000000C8   1182+         aghi  14,200              increase by frame size               01-DCCPR
00000B80 E3E0 C020 0021          00000020   1183+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B86 4720 B020               00000020   1184+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B8A                                    1185+@PER_1088 ds   0h                                                       01-DCCPR
00000B8A EBDE 2080 0024          00000080   1186+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B90 E3C0 2090 0024          00000090   1187+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000B96 B904 00D2                          1188+         lgr   13,2                set real frame pointer               01-DCCPR
00000B9A B904 00CF                          1189+         lgr   12,15               set base reg                         01-DCCPR
                        00000B60            1190+         using @REGION_1088_1,12                                        01-DCCPR
                                            1191 * ******* End of Prologue
                                            1192 * *
                                            1193 * ***   # 97 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1194 * ***       struct timeval tv;
                                            1195 * ***       gettimeofday(&tv, ((void *)0));
00000B9E 41F0 D0A8               000000A8   1196          LA    15,168(0,13)
00000BA2 E3F0 D0B8 0024          000000B8   1197          STG   15,184(0,13)
00000BA8 D707 D0C0 D0C0 000000C0 000000C0   1198          XC    192(8,13),192(13)
00000BAE 4110 D0B8               000000B8   1199          LA    1,184(0,13)
00000BB2 E3F0 C0C0 0004          00000C20   1200          LG    15,@lit_1088_31 ; gettimeofday
00000BB8                                    1201 @@gen_label34 DS    0H
00000BB8 05EF                               1202          BALR  14,15
00000BBA                                    1203 @@gen_label35 DS    0H
                                            1204 * ***       return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_\
                                            1205 * usec;
00000BBA E3F0 D0A8 0004          000000A8   1206          LG    15,168(0,13)
00000BC0 C2F0 000F 4240                     1207          MSGFI 15,X'000F4240'
00000BC6 E310 D0B0 0004          000000B0   1208          LG    1,176(0,13) ; offset of tv_usec in timeval
00000BCC B90A 00F1                          1209          ALGR  15,1
                                            1210 * ***   # 118 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1211 * ***   }
                                            1212 * * **** Start of Epilogue
                                            1213          DCCEPIL
00000BD0                                    1214+         ds 0h                                                          01-DCCEP
                                            1215+* Epilog
00000BD0 D707 D088 D088 00000088 00000088   1216+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000BD6 E3D0 D080 0004          00000080   1217+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000BDC E3C0 D090 0004          00000090   1218+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000BE2 E3B0 C018 0004          00000018   1219+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000BE8 E3C0 B010 0021          00000010   1220+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000BEE E3E0 D008 0004          00000008   1221+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000BF4 EB1C D020 0004          00000020   1222+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   29 
  Active Usings: @REGION_1088_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000BFA 078E                               1223+         bcr 8,14                if same dsab, just return              01-DCCEP
00000BFC E3F0 D010 0024          00000010   1224+         stg 15,16(0,13)         save return code                       01-DCCEP
00000C02 E300 D018 0024          00000018   1225+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000C08 E3F0 D090 0004          00000090   1226+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000C0E E3F0 F018 0004          00000018   1227+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000C14 47F0 F040               00000040   1228+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1229+* End of Epilog
                                            1230 * * **** End of Epilogue
00000C18                                    1231          DS    0D
00000C18 000000C8                           1232 @FRAMESIZE_1088 DC F'200'
00000C1C 00000000
00000C20 0000000000000000                   1233 @lit_1088_31 DC AD(gettimeofday)
                                            1234          DROP  12
                                            1235 *
                                            1236 *   DSECT for automatic variables in "rd_clock"
                                            1237 *      (FUNCTION #1088)
                                            1238 *
00000000                00000000 000000B8   1239 @AUTO#rd_clock DSECT
00000000                                    1240          DS    XL168
000000A8                                    1241 rd_clock#tv#0 DS 16XL1     ; tv
                                            1242 *
00000C28                00000000 0000685E   1243 @CODE    CSECT
                                            1244 *
                                            1245 *
                                            1246 *
                                            1247 * ....... start of rd_timeout_init
00000C28                                    1248 @LNAME1093 DS  0H
00000C28 0000000F                           1249          DC    X'0000000F'
00000C2C 99846DA389948596                   1250          DC    C'rd_timeout_init'
00000C3B 00                                 1251          DC    X'00'
                                            1252 rd_timeout_init DCCPRLG CINDEX=1093,BASER=12,FRAME=168,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1093
                                            1253          macro
                                            1254          dccextrn &m
                                            1255          gblc    &$dccext(1000)
                                            1256          gbla    &$dccexti
                                            1257          lcla    &i
                                            1258 &$dccext(&$dccexti+1) setc    '&m'
                                            1259 &i       seta    1
                                            1260 .loop    aif    (&i gt &$dccexti).around
                                            1261          aif    ('&$dccext(&i)' eq '&m').getout
                                            1262 &i       seta    &i+1
                                            1263          ago     .loop
                                            1264 .around  anop
                                            1265 &$dccexti seta &$dccexti+1
                                            1266          extrn  &m
                                            1267 .getout  anop
                                            1268          mend
00000C40                                    1269+$eye0030    ds    0d                                                    02-DCCCA
00000C40 C4C3C3                             1270+         dc cl3'DCC'                                                    02-DCCCA
00000C43 01                                 1271+         dc xl1'01' format one                                          02-DCCCA
00000C44 00000000                           1272+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000C48 0000000000000CB2                   1273+         dc ad(@PER_1093)                                               02-DCCCA
00000C50 00000000000000A8                   1274+         dc ad(168)                                                     02-DCCCA
00000C58 0000000000000000                   1275+         dc ad(0)                                                       02-DCCCA
00000C60 0000000000001000                   1276+         dc ad(4096)                                                    02-DCCCA
00000C68 20                                 1277+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C69 03                                 1278+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C6A 03                                 1279+         dc al1(3)                                                      02-DCCCA
00000C6B 08                                 1280+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C6C 00                                 1281+         dc bl.8'00000000'                                              02-DCCCA
00000C6D 000000                             1282+         dc al3(0)                                                      02-DCCCA
00000C70 0000000000000C28                   1283+         dc ad(@LNAME1093)                                              02-DCCCA
00000C78                                    1284+         ds 0d                                                          02-DCCCA
00000C78 0000000000000C40                   1285+         dc ad($eye0030)                                                02-DCCCA
00000C80 0000000000000000                   1286+         dc ad(0)                                                       02-DCCCA
00000C88                                    1287+         ds    0d                                                       01-DCCPR
00000C88                                    1288+rd_timeout_init ds 0d                                                   01-DCCPR
00000C88                                    1289+@REGION_1093_1 ds 0h                                                    01-DCCPR
00000C88 EBEC D008 0024          00000008   1290+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000C8E E3E0 D088 0004          00000088   1291+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000C94 E3C0 D090 0004          00000090   1292+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000C9A B904 002E                          1293+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000C9E E3B0 C018 0004          00000018   1294+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000CA4 A7EB 00A8               000000A8   1295+         aghi  14,168              increase by frame size               01-DCCPR
00000CA8 E3E0 C020 0021          00000020   1296+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000CAE 4720 B020               00000020   1297+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000CB2                                    1298+@PER_1093 ds   0h                                                       01-DCCPR
00000CB2 EBDE 2080 0024          00000080   1299+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000CB8 E3C0 2090 0024          00000090   1300+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000CBE B904 00D2                          1301+         lgr   13,2                set real frame pointer               01-DCCPR
00000CC2 B904 00CF                          1302+         lgr   12,15               set base reg                         01-DCCPR
                        00000C88            1303+         using @REGION_1093_1,12                                        01-DCCPR
                                            1304 * ******* End of Prologue
                                            1305 * *
                                            1306 * ***      if (timeout_ms == -1 ||
00000CC6 5820 1004               00000004   1307          L     2,4(0,1)    ; timeout_ms
00000CCA A72E FFFF               0000FFFF   1308          CHI   2,-1
00000CCE 4780 C050               00000CD8   1309          BE    @L49
                                            1310 * ***          timeout_ms == 0)
00000CD2 1222                               1311          LTR   2,2
00000CD4 4770 C068               00000CF0   1312          BNE   @L48
00000CD8                                    1313 @L49     DS    0H
                                            1314 * ***         return timeout_ms;
00000CD8 B914 00F2                          1315          LGFR  15,2
00000CDC 47F0 C078               00000D00   1316          B     @ret_lab_1093
00000CE0                                    1317          DS    0D
00000CE0 000000A8                           1318 @FRAMESIZE_1093 DC F'168'
00000CE4 00000000
00000CE8 0000000000000B60                   1319 @lit_1093_33 DC AD(rd_clock)
00000CF0                                    1320 @L48     DS    0H
                                            1321 * ***
                                            1322 * ***      return rd_clock() + (timeout_ms * 1000);
00000CF0 E3F0 C060 0004          00000CE8   1323          LG    15,@lit_1093_33 ; rd_clock
                                                                                                                           Page   31 
  Active Usings: @REGION_1093_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000CF6                                    1324 @@gen_label38 DS    0H
00000CF6 05EF                               1325          BALR  14,15
00000CF8                                    1326 @@gen_label39 DS    0H
00000CF8 A72C 03E8               000003E8   1327          MHI   2,1000
00000CFC B918 00F2                          1328          AGFR  15,2
                                            1329 * ***   }
00000D00                                    1330 @ret_lab_1093 DS 0H
                                            1331 * * **** Start of Epilogue
                                            1332          DCCEPIL
00000D00                                    1333+         ds 0h                                                          01-DCCEP
                                            1334+* Epilog
00000D00 D707 D088 D088 00000088 00000088   1335+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000D06 E3D0 D080 0004          00000080   1336+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000D0C E3C0 D090 0004          00000090   1337+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000D12 E3B0 C018 0004          00000018   1338+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000D18 E3C0 B010 0021          00000010   1339+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000D1E E3E0 D008 0004          00000008   1340+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000D24 EB1C D020 0004          00000020   1341+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000D2A 078E                               1342+         bcr 8,14                if same dsab, just return              01-DCCEP
00000D2C E3F0 D010 0024          00000010   1343+         stg 15,16(0,13)         save return code                       01-DCCEP
00000D32 E300 D018 0024          00000018   1344+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000D38 E3F0 D090 0004          00000090   1345+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000D3E E3F0 F018 0004          00000018   1346+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000D44 47F0 F040               00000040   1347+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1348+* End of Epilog
                                            1349 * * **** End of Epilogue
                                            1350          DROP  12
                                            1351 *
                                            1352 *   DSECT for automatic variables in "rd_timeout_init"
                                            1353 *      (FUNCTION #1093)
                                            1354 *
00000000                00000000 000000A8   1355 @AUTO#rd_timeout_init DSECT
00000000                                    1356          DS    XL168
                                            1357 *
00000D48                00000000 0000685E   1358 @CODE    CSECT
                                            1359 *
                                            1360 *
                                            1361 *
                                            1362 * ....... start of rd_slice_abs_offset
00000D48                                    1363 @LNAME1286 DS  0H
00000D48 00000013                           1364          DC    X'00000013'
00000D4C 99846DA293898385                   1365          DC    C'rd_slice_abs_offset'
00000D5F 00                                 1366          DC    X'00'
                                            1367 rd_slice_abs_offset DCCPRLG CINDEX=1286,BASER=12,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1286
                                            1368          macro
                                            1369          dccextrn &m
                                            1370          gblc    &$dccext(1000)
                                            1371          gbla    &$dccexti
                                            1372          lcla    &i
                                            1373 &$dccext(&$dccexti+1) setc    '&m'
                                            1374 &i       seta    1
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1375 .loop    aif    (&i gt &$dccexti).around
                                            1376          aif    ('&$dccext(&i)' eq '&m').getout
                                            1377 &i       seta    &i+1
                                            1378          ago     .loop
                                            1379 .around  anop
                                            1380 &$dccexti seta &$dccexti+1
                                            1381          extrn  &m
                                            1382 .getout  anop
                                            1383          mend
00000D60                                    1384+$eye0033    ds    0d                                                    02-DCCCA
00000D60 C4C3C3                             1385+         dc cl3'DCC'                                                    02-DCCCA
00000D63 01                                 1386+         dc xl1'01' format one                                          02-DCCCA
00000D64 00000000                           1387+         dc a(0)                                                        02-DCCCA
00000D68 0000000000000000                   1388+         dc ad(0)                                                       02-DCCCA
00000D70 00000000000000A8                   1389+         dc ad(168)                                                     02-DCCCA
00000D78 0000000000000000                   1390+         dc ad(0)                                                       02-DCCCA
00000D80 0000000000001000                   1391+         dc ad(4096)                                                    02-DCCCA
00000D88 20                                 1392+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D89 03                                 1393+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D8A 03                                 1394+         dc al1(3)                                                      02-DCCCA
00000D8B 08                                 1395+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D8C 00                                 1396+         dc bl.8'00000000'                                              02-DCCCA
00000D8D 000000                             1397+         dc al3(0)                                                      02-DCCCA
00000D90 0000000000000D48                   1398+         dc ad(@LNAME1286)                                              02-DCCCA
00000D98                                    1399+         ds 0d                                                          02-DCCCA
00000D98 0000000000000D60                   1400+         dc ad($eye0033)                                                02-DCCCA
00000DA0 0000000000000000                   1401+         dc ad(0)                                                       02-DCCCA
00000DA8                                    1402+         ds    0d                                                       01-DCCPR
00000DA8                                    1403+rd_slice_abs_offset ds 0d                                               01-DCCPR
00000DA8                                    1404+@REGION_1286_1 ds 0h                                                    01-DCCPR
00000DA8 EBEC D008 0024          00000008   1405+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000DAE B904 00CF                          1406+         lgr   12,15               set base reg                         01-DCCPR
                        00000DA8            1407+         using @REGION_1286_1,12                                        01-DCCPR
                                            1408 * ******* End of Prologue
                                            1409 * *
                                            1410 * ***           if (((!slice->seg)))
00000DB2 E3F0 1000 0004          00000000   1411          LG    15,0(0,1)   ; slice
00000DB8 E310 F008 0002          00000008   1412          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00000DBE 4770 C024               00000DCC   1413          BNZ   @L102
                                            1414 * ***                   return slice->end;
00000DC2 E3F0 F020 0004          00000020   1415          LG    15,32(0,15) ; offset of end in rd_slice_s
00000DC8 47F0 C03A               00000DE2   1416          B     @ret_lab_1286
00000DCC                                    1417 @L102    DS    0H
                                            1418 * ***
                                            1419 * ***           return slice->seg->seg_absof + slice->rof;
00000DCC E310 F008 0004          00000008   1420          LG    1,8(0,15)   ; offset of seg in rd_slice_s
00000DD2 E310 1028 0004          00000028   1421          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00000DD8 E310 F010 000A          00000010   1422          ALG   1,16(0,15)
00000DDE B904 00F1                          1423          LGR   15,1
                                            1424 * ***   }
00000DE2                                    1425 @ret_lab_1286 DS 0H
                                            1426 * * **** Start of Epilogue
                                                                                                                           Page   33 
  Active Usings: @REGION_1286_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1427          DCCEPIL
00000DE2                                    1428+         ds 0h                                                          01-DCCEP
                                            1429+* Epilog
                                            1430+* Epilog
00000DE2 E3E0 D008 0004          00000008   1431+         lg    14,8(,13) restore the reg                                01-DCCEP
00000DE8 EB1C D020 0004          00000020   1432+         lmg   1,12,32(13)                                              01-DCCEP
00000DEE 07FE                               1433+         br   14                                                        01-DCCEP
                                            1434+* End of Epilog
                                            1435 * * **** End of Epilogue
                                            1436          DROP  12
                                            1437 *
                                            1438 *   DSECT for automatic variables in "rd_slice_abs_offset"
                                            1439 *      (FUNCTION #1286)
                                            1440 *
00000000                00000000 000000A8   1441 @AUTO#rd_slice_abs_offset DSECT
00000000                                    1442          DS    XL168
                                            1443 *
00000DF0                00000000 0000685E   1444 @CODE    CSECT
                                            1445 *
                                            1446 *
                                            1447 *
                                            1448 * ....... start of rd_slice_offset
00000DF0                                    1449 @LNAME1287 DS  0H
00000DF0 0000000F                           1450          DC    X'0000000F'
00000DF4 99846DA293898385                   1451          DC    C'rd_slice_offset'
00000E03 00                                 1452          DC    X'00'
                                            1453 rd_slice_offset DCCPRLG CINDEX=1287,BASER=12,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1287
                                            1454          macro
                                            1455          dccextrn &m
                                            1456          gblc    &$dccext(1000)
                                            1457          gbla    &$dccexti
                                            1458          lcla    &i
                                            1459 &$dccext(&$dccexti+1) setc    '&m'
                                            1460 &i       seta    1
                                            1461 .loop    aif    (&i gt &$dccexti).around
                                            1462          aif    ('&$dccext(&i)' eq '&m').getout
                                            1463 &i       seta    &i+1
                                            1464          ago     .loop
                                            1465 .around  anop
                                            1466 &$dccexti seta &$dccexti+1
                                            1467          extrn  &m
                                            1468 .getout  anop
                                            1469          mend
00000E08                                    1470+$eye0036    ds    0d                                                    02-DCCCA
00000E08 C4C3C3                             1471+         dc cl3'DCC'                                                    02-DCCCA
00000E0B 01                                 1472+         dc xl1'01' format one                                          02-DCCCA
00000E0C 00000000                           1473+         dc a(0)                                                        02-DCCCA
00000E10 0000000000000000                   1474+         dc ad(0)                                                       02-DCCCA
00000E18 00000000000000A8                   1475+         dc ad(168)                                                     02-DCCCA
00000E20 0000000000000000                   1476+         dc ad(0)                                                       02-DCCCA
00000E28 0000000000001000                   1477+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000E30 20                                 1478+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E31 03                                 1479+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E32 03                                 1480+         dc al1(3)                                                      02-DCCCA
00000E33 08                                 1481+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E34 00                                 1482+         dc bl.8'00000000'                                              02-DCCCA
00000E35 000000                             1483+         dc al3(0)                                                      02-DCCCA
00000E38 0000000000000DF0                   1484+         dc ad(@LNAME1287)                                              02-DCCCA
00000E40                                    1485+         ds 0d                                                          02-DCCCA
00000E40 0000000000000E08                   1486+         dc ad($eye0036)                                                02-DCCCA
00000E48 0000000000000000                   1487+         dc ad(0)                                                       02-DCCCA
00000E50                                    1488+         ds    0d                                                       01-DCCPR
00000E50                                    1489+rd_slice_offset ds 0d                                                   01-DCCPR
00000E50                                    1490+@REGION_1287_1 ds 0h                                                    01-DCCPR
00000E50 EBEC D008 0024          00000008   1491+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000E56 B904 00CF                          1492+         lgr   12,15               set base reg                         01-DCCPR
                        00000E50            1493+         using @REGION_1287_1,12                                        01-DCCPR
                                            1494 * ******* End of Prologue
                                            1495 * *
                                            1496 * ***           if (((!slice->seg)))
00000E5A E3F0 1000 0004          00000000   1497          LG    15,0(0,1)   ; slice
00000E60 E310 F008 0002          00000008   1498          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00000E66 4770 C02E               00000E7E   1499          BNZ   @L103
                                            1500 * ***                   return ((slice)->end - (slice)->start);
00000E6A E310 F020 0004          00000020   1501          LG    1,32(0,15)  ; offset of end in rd_slice_s
00000E70 E310 F018 000B          00000018   1502          SLG   1,24(0,15)
00000E76 B904 00F1                          1503          LGR   15,1
00000E7A 47F0 C04A               00000E9A   1504          B     @ret_lab_1287
00000E7E                                    1505 @L103    DS    0H
                                            1506 * ***
                                            1507 * ***           return (slice->seg->seg_absof + slice->rof) - slice->s\
                                            1508 * tart;
00000E7E E310 F008 0004          00000008   1509          LG    1,8(0,15)   ; offset of seg in rd_slice_s
00000E84 E310 1028 0004          00000028   1510          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00000E8A E310 F010 000A          00000010   1511          ALG   1,16(0,15)
00000E90 E310 F018 000B          00000018   1512          SLG   1,24(0,15)
00000E96 B904 00F1                          1513          LGR   15,1
                                            1514 * ***   }
00000E9A                                    1515 @ret_lab_1287 DS 0H
                                            1516 * * **** Start of Epilogue
                                            1517          DCCEPIL
00000E9A                                    1518+         ds 0h                                                          01-DCCEP
                                            1519+* Epilog
                                            1520+* Epilog
00000E9A E3E0 D008 0004          00000008   1521+         lg    14,8(,13) restore the reg                                01-DCCEP
00000EA0 EB1C D020 0004          00000020   1522+         lmg   1,12,32(13)                                              01-DCCEP
00000EA6 07FE                               1523+         br   14                                                        01-DCCEP
                                            1524+* End of Epilog
                                            1525 * * **** End of Epilogue
                                            1526          DROP  12
                                            1527 *
                                            1528 *   DSECT for automatic variables in "rd_slice_offset"
                                            1529 *      (FUNCTION #1287)
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1530 *
00000000                00000000 000000A8   1531 @AUTO#rd_slice_offset DSECT
00000000                                    1532          DS    XL168
                                            1533 *
00000EA8                00000000 0000685E   1534 @CODE    CSECT
                                            1535 *
                                            1536 *
                                            1537 *
                                            1538 * ....... start of rd_kafka_ApiKey2str
00000EA8                                    1539 @LNAME1314 DS  0H
00000EA8 00000013                           1540          DC    X'00000013'
00000EAC 99846D9281869281                   1541          DC    C'rd_kafka_ApiKey2str'
00000EBF 00                                 1542          DC    X'00'
                                            1543 rd_kafka_$Api$Key2str DCCPRLG CINDEX=1314,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1314
                                            1544          macro
                                            1545          dccextrn &m
                                            1546          gblc    &$dccext(1000)
                                            1547          gbla    &$dccexti
                                            1548          lcla    &i
                                            1549 &$dccext(&$dccexti+1) setc    '&m'
                                            1550 &i       seta    1
                                            1551 .loop    aif    (&i gt &$dccexti).around
                                            1552          aif    ('&$dccext(&i)' eq '&m').getout
                                            1553 &i       seta    &i+1
                                            1554          ago     .loop
                                            1555 .around  anop
                                            1556 &$dccexti seta &$dccexti+1
                                            1557          extrn  &m
                                            1558 .getout  anop
                                            1559          mend
00000EC0                                    1560+$eye0039    ds    0d                                                    02-DCCCA
00000EC0 C4C3C3                             1561+         dc cl3'DCC'                                                    02-DCCCA
00000EC3 01                                 1562+         dc xl1'01' format one                                          02-DCCCA
00000EC4 00000000                           1563+         dc a(0)                                                        02-DCCCA
00000EC8 0000000000000F32                   1564+         dc ad(@PER_1314)                                               02-DCCCA
00000ED0 00000000000000C8                   1565+         dc ad(200)                                                     02-DCCCA
00000ED8 0000000000000000                   1566+         dc ad(0)                                                       02-DCCCA
00000EE0 0000000000001000                   1567+         dc ad(4096)                                                    02-DCCCA
00000EE8 20                                 1568+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000EE9 03                                 1569+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000EEA 03                                 1570+         dc al1(3)                                                      02-DCCCA
00000EEB 08                                 1571+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000EEC 00                                 1572+         dc bl.8'00000000'                                              02-DCCCA
00000EED 000000                             1573+         dc al3(0)                                                      02-DCCCA
00000EF0 0000000000000EA8                   1574+         dc ad(@LNAME1314)                                              02-DCCCA
00000EF8                                    1575+         ds 0d                                                          02-DCCCA
00000EF8 0000000000000EC0                   1576+         dc ad($eye0039)                                                02-DCCCA
00000F00 0000000000000000                   1577+         dc ad(0)                                                       02-DCCCA
00000F08                                    1578+         ds    0d                                                       01-DCCPR
00000F08                                    1579+rd_kafka_$Api$Key2str ds 0d                                             01-DCCPR
00000F08                                    1580+@REGION_1314_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   36 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000F08 EBEC D008 0024          00000008   1581+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F0E E3E0 D088 0004          00000088   1582+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F14 E3C0 D090 0004          00000090   1583+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F1A B904 002E                          1584+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F1E E3B0 C018 0004          00000018   1585+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F24 A7EB 00C8               000000C8   1586+         aghi  14,200              increase by frame size               01-DCCPR
00000F28 E3E0 C020 0021          00000020   1587+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F2E 4720 B020               00000020   1588+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F32                                    1589+@PER_1314 ds   0h                                                       01-DCCPR
00000F32 EBDE 2080 0024          00000080   1590+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F38 E3C0 2090 0024          00000090   1591+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F3E B904 00D2                          1592+         lgr   13,2                set real frame pointer               01-DCCPR
00000F42 B904 00CF                          1593+         lgr   12,15               set base reg                         01-DCCPR
                        00000F08            1594+         using @REGION_1314_1,12                                        01-DCCPR
                                            1595          DCCPRV REG=15     ; Get PRV from DVT
00000F46 E3F0 B008 0004          00000008   1596+         LG 15,8(0,11)                                                  01-DCCPR
                                            1597 * ******* End of Prologue
                                            1598 * *
                                            1599 * ***           static const char *names[] = {
                                            1600 * ***                   [0] = "Produce",
                                            1601 * ***                   [1] = "Fetch",
                                            1602 * ***                   [2] = "Offset",
                                            1603 * ***                   [3] = "Metadata",
                                            1604 * ***                   [4] = "LeaderAndIsr",
                                            1605 * ***                   [5] = "StopReplica",
                                            1606 * ***                   [6] = "UpdateMetadata",
                                            1607 * ***                   [7] = "ControlledShutdown",
                                            1608 * ***                   [8] = "OffsetCommit",
                                            1609 * ***                   [9] = "OffsetFetch",
                                            1610 * ***                   [10] = "FindCoordinator",
                                            1611 * ***                   [11] = "JoinGroup",
                                            1612 * ***                   [12] = "Heartbeat",
                                            1613 * ***                   [13] = "LeaveGroup",
                                            1614 * ***                   [14] = "SyncGroup",
                                            1615 * ***                   [15] = "DescribeGroups",
                                            1616 * ***                   [16] = "ListGroups",
                                            1617 * ***                   [17] = "SaslHandshake",
                                            1618 * ***                   [18] = "ApiVersion",
                                            1619 * ***                   [19] = "CreateTopics",
                                            1620 * ***                   [20] = "DeleteTopics",
                                            1621 * ***                   [21] = "DeleteRecords",
                                            1622 * ***                   [22] = "InitProducerId",
                                            1623 * ***                   [23] = "OffsetForLeaderEpoch",
                                            1624 * ***                   [24] = "AddPartitionsToTxn",
                                            1625 * ***                   [25] = "AddOffsetsToTxn",
                                            1626 * ***                   [26] = "EndTxn",
                                            1627 * ***                   [27] = "WriteTxnMarkers",
                                            1628 * ***                   [28] = "TxnOffsetCommit",
                                            1629 * ***                   [29] = "DescribeAcls",
                                            1630 * ***                   [30] = "CreateAcls",
                                            1631 * ***                   [31] = "DeleteAcls",
                                            1632 * ***                   [32] = "DescribeConfigs",
                                                                                                                           Page   37 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1633 * ***                   [33] = "AlterConfigs",
                                            1634 * ***                   [34] = "AlterReplicaLogDirs",
                                            1635 * ***                   [35] = "DescribeLogDirs",
                                            1636 * ***                   [36] = "SaslAuthenticate",
                                            1637 * ***                   [37] = "CreatePartitions",
                                            1638 * ***                   [38] = "CreateDelegationToken",
                                            1639 * ***                   [39] = "RenewDelegationToken",
                                            1640 * ***                   [40] = "ExpireDelegationToken",
                                            1641 * ***                   [41] = "DescribeDelegationToken",
                                            1642 * ***                   [42] = "DeleteGroups",
                                            1643 * ***                   [43] = "ElectLeadersRequest",
                                            1644 * ***                   [44] =
                                            1645 * ***                   "IncrementalAlterConfigsRequest",
                                            1646 * ***                   [45] =
                                            1647 * ***                   "AlterPartitionReassignmentsRequest",
                                            1648 * ***                   [46] =
                                            1649 * ***                   "ListPartitionReassignmentsRequest",
                                            1650 * ***                   [47] = "OffsetDeleteRequest",
                                            1651 * ***                   [48] =
                                            1652 * ***                   "DescribeClientQuotasRequest",
                                            1653 * ***                   [49] =
                                            1654 * ***                   "AlterClientQuotasRequest",
                                            1655 * ***                   [50] =
                                            1656 * ***                   "DescribeUserScramCredentialsRequest",
                                            1657 * ***                   [51] =
                                            1658 * ***                   "AlterUserScramCredentialsRequest",
                                            1659 * ***                   [52] = "VoteRequest",
                                            1660 * ***                   [53] = "BeginQuorumEpochRequest",
                                            1661 * ***                   [54] = "EndQuorumEpochRequest",
                                            1662 * ***                   [55] = "DescribeQuorumRequest",
                                            1663 * ***                   [56] = "AlterIsrRequest",
                                            1664 * ***                   [57] = "UpdateFeaturesRequest",
                                            1665 * ***                   [58] = "EnvelopeRequest",
                                            1666 * ***           };
                                            1667 * ***           static  char ret[64];
                                            1668 * ***
                                            1669 * ***           if (ApiKey < 0 || ApiKey >= (int)(sizeof((names)) / si\
                                            1670 * zeof(*(names))) ||
00000F4C 4820 1006               00000006   1671          LH    2,6(0,1)    ; ApiKey
00000F50 1222                               1672          LTR   2,2
00000F52 4740 C07A               00000F82   1673          BL    @L119
00000F56 4820 1006               00000006   1674          LH    2,6(0,1)    ; ApiKey
00000F5A A72E 003B               0000003B   1675          CHI   2,59
00000F5E 47B0 C07A               00000F82   1676          BNL   @L119
00000F62                                    1677 @L117    DS    0H
                                            1678 * ***               !names[ApiKey]) {
00000F62 E320 1006 0015          00000006   1679          LGH   2,6(0,1)    ; ApiKey
00000F68 E330 C0CC 0014          00000FD4   1680          LGF   3,@lit_1314_35
00000F6E 4133 F000               00000000   1681          LA    3,0(3,15)
00000F72 EB22 0003 000D          00000003   1682          SLLG  2,2,3(0)    ; *0x8
00000F78 E322 3220 0002          00000220   1683          LTG   2,544(2,3)
00000F7E 4770 C0E0               00000FE8   1684          BNZ   @L118
                                                                                                                           Page   38 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000F82                                    1685 @L119    DS    0H
                                            1686 * ***                   snprintf(ret, sizeof(ret), "Unknown-%hd?", Api\
                                            1687 * Key);
00000F82 E320 C0CC 0014          00000FD4   1688          LGF   2,@lit_1314_35
00000F88 4122 F000               00000000   1689          LA    2,0(2,15)
00000F8C 41F0 23F8               000003F8   1690          LA    15,1016(0,2)
00000F90 E3F0 D0A8 0024          000000A8   1691          STG   15,168(0,13)
00000F96 E548 D0B0 0040          000000B0   1692          MVGHI 176(13),64
00000F9C E3F0 C0D8 0004          00000FE0   1693          LG    15,@lit_1314_37
00000FA2 41F0 F048               00000048   1694          LA    15,72(0,15)
00000FA6 E3F0 D0B8 0024          000000B8   1695          STG   15,184(0,13)
00000FAC 48F0 1006               00000006   1696          LH    15,6(0,1)   ; ApiKey
00000FB0 B914 00FF                          1697          LGFR  15,15
00000FB4 E3F0 D0C0 0024          000000C0   1698          STG   15,192(0,13)
00000FBA 4110 D0A8               000000A8   1699          LA    1,168(0,13)
00000FBE E3F0 C0D0 0004          00000FD8   1700          LG    15,@lit_1314_38 ; snprintf
00000FC4                                    1701 @@gen_label45 DS    0H
00000FC4 05EF                               1702          BALR  14,15
00000FC6                                    1703 @@gen_label46 DS    0H
                                            1704 * ***                   return ret;
00000FC6 41F0 23F8               000003F8   1705          LA    15,1016(0,2)
00000FCA 47F0 C0F2               00000FFA   1706          B     @ret_lab_1314
00000FD0                                    1707          DS    0D
00000FD0 000000C8                           1708 @FRAMESIZE_1314 DC F'200'
00000FD4 00000000                           1709 @lit_1314_35 DC Q(@@STATIC)
00000FD8 0000000000000000                   1710 @lit_1314_38 DC AD(snprintf)
00000FE0 0000000000006A88                   1711 @lit_1314_37 DC AD(@strings@)
                                            1712 * ***           }
00000FE8                                    1713 @L118    DS    0H
                                            1714 * ***
                                            1715 * ***           return names[ApiKey];
00000FE8 E3F0 1006 0015          00000006   1716          LGH   15,6(0,1)   ; ApiKey
00000FEE EBFF 0003 000D          00000003   1717          SLLG  15,15,3(0)  ; *0x8
00000FF4 E3FF 3220 0004          00000220   1718          LG    15,544(15,3)
                                            1719 * ***   }
00000FFA                                    1720 @ret_lab_1314 DS 0H
                                            1721 * * **** Start of Epilogue
                                            1722          DCCEPIL
00000FFA                                    1723+         ds 0h                                                          01-DCCEP
                                            1724+* Epilog
00000FFA D707 D088 D088 00000088 00000088   1725+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001000 E3D0 D080 0004          00000080   1726+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001006 E3C0 D090 0004          00000090   1727+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000100C E3B0 C018 0004          00000018   1728+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001012 E3C0 B010 0021          00000010   1729+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001018 E3E0 D008 0004          00000008   1730+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000101E EB1C D020 0004          00000020   1731+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001024 078E                               1732+         bcr 8,14                if same dsab, just return              01-DCCEP
00001026 E3F0 D010 0024          00000010   1733+         stg 15,16(0,13)         save return code                       01-DCCEP
0000102C E300 D018 0024          00000018   1734+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001032 E3F0 D090 0004          00000090   1735+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001038 E3F0 F018 0004          00000018   1736+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   39 
  Active Usings: @REGION_1314_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000103E 47F0 F040               00000040   1737+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1738+* End of Epilog
                                            1739 * * **** End of Epilogue
                                            1740          DROP  12
                                            1741 *
                                            1742 *   DSECT for automatic variables in "rd_kafka_ApiKey2str"
                                            1743 *      (FUNCTION #1314)
                                            1744 *
00000000                00000000 000000A8   1745 @AUTO#rd_kafka_$Api$Key2str DSECT
00000000                                    1746          DS    XL168
                                            1747 *
00001042                00000000 0000685E   1748 @CODE    CSECT
                                            1749 *
                                            1750 *
                                            1751 *
                                            1752 * ....... start of rd_strlcpy
00001042                                    1753 @LNAME1384 DS  0H
00001042 0000000A                           1754          DC    X'0000000A'
00001046 99846DA2A3999383                   1755          DC    C'rd_strlcpy'
00001050 00                                 1756          DC    X'00'
                                            1757 rd_strlcpy DCCPRLG CINDEX=1384,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1384
                                            1758          macro
                                            1759          dccextrn &m
                                            1760          gblc    &$dccext(1000)
                                            1761          gbla    &$dccexti
                                            1762          lcla    &i
                                            1763 &$dccext(&$dccexti+1) setc    '&m'
                                            1764 &i       seta    1
                                            1765 .loop    aif    (&i gt &$dccexti).around
                                            1766          aif    ('&$dccext(&i)' eq '&m').getout
                                            1767 &i       seta    &i+1
                                            1768          ago     .loop
                                            1769 .around  anop
                                            1770 &$dccexti seta &$dccexti+1
                                            1771          extrn  &m
                                            1772 .getout  anop
                                            1773          mend
00001058                                    1774+$eye0043    ds    0d                                                    02-DCCCA
00001058 C4C3C3                             1775+         dc cl3'DCC'                                                    02-DCCCA
0000105B 01                                 1776+         dc xl1'01' format one                                          02-DCCCA
0000105C 00000000                           1777+         dc a(0)                                                        02-DCCCA
00001060 0000000000000000                   1778+         dc ad(0)                                                       02-DCCCA
00001068 00000000000000B0                   1779+         dc ad(176)                                                     02-DCCCA
00001070 0000000000000000                   1780+         dc ad(0)                                                       02-DCCCA
00001078 0000000000001000                   1781+         dc ad(4096)                                                    02-DCCCA
00001080 20                                 1782+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001081 03                                 1783+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001082 03                                 1784+         dc al1(3)                                                      02-DCCCA
00001083 08                                 1785+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001084 00                                 1786+         dc bl.8'00000000'                                              02-DCCCA
00001085 000000                             1787+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001088 0000000000001042                   1788+         dc ad(@LNAME1384)                                              02-DCCCA
00001090                                    1789+         ds 0d                                                          02-DCCCA
00001090 0000000000001058                   1790+         dc ad($eye0043)                                                02-DCCCA
00001098 0000000000000000                   1791+         dc ad(0)                                                       02-DCCCA
000010A0                                    1792+         ds    0d                                                       01-DCCPR
000010A0                                    1793+rd_strlcpy ds  0d                                                       01-DCCPR
000010A0                                    1794+@REGION_1384_1 ds 0h                                                    01-DCCPR
000010A0 EBEC D008 0024          00000008   1795+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000010A6 B904 00CF                          1796+         lgr   12,15               set base reg                         01-DCCPR
                        000010A0            1797+         using @REGION_1384_1,12                                        01-DCCPR
                                            1798 * ******* End of Prologue
                                            1799 * *
000010AA E3F0 1010 0004          00000010   1800          LG    15,16(0,1)  ; dstsize
                                            1801 * ***
                                            1802 * ***
                                            1803 * ***
                                            1804 * ***           if (((dstsize > 0))) {
000010B0 C2FE 0000 0000                     1805          CLGFI 15,X'00000000'
000010B6 47D0 C0A6               00001146   1806          BNH   @ret_lab_1384
                                            1807 * ***                   size_t srclen = __strlen(src);
000010BA E320 1008 0004          00000008   1808          LG    2,8(0,1)
000010C0 B904 0032                          1809          LGR   3,2
000010C4 A709 0000               00000000   1810          LGHI  0,0
000010C8                                    1811 @@gen_label48 DS 0H
000010C8 B25E 0002                          1812          SRST  0,2
000010CC 4710 C028               000010C8   1813          BC  1,@@gen_label48
000010D0 B90B 0003                          1814          SLGR  0,3
                                            1815 * ***                   size_t copylen = ((srclen) < (dstsize-1) ? (sr\
                                            1816 * clen) : (dstsize-1));
000010D4 B904 002F                          1817          LGR   2,15
000010D8 A72B FFFF               0000FFFF   1818          AGHI  2,-1
000010DC B921 0002                          1819          CLGR  0,2
000010E0 47B0 C056               000010F6   1820          BNL   @L252
000010E4 B904 00F0                          1821          LGR   15,0
000010E8 47F0 C05A               000010FA   1822          B     @L253
000010F0                                    1823          DS    0D
000010F0 D200 4000 3000 00000000 00000000   1824 @lit_1384_40          MVC 0(1,4),0(3)
000010F6                                    1825 @L252    DS    0H
000010F6 A7FB FFFF               0000FFFF   1826          AGHI  15,-1
000010FA                                    1827 @L253    DS    0H
                                            1828 * ***                   __memcpy(dst,src,copylen);
000010FA E330 1008 0004          00000008   1829          LG    3,8(0,1)
00001100 E340 1000 0004          00000000   1830          LG    4,0(0,1)
00001106 B902 002F                          1831          LTGR  2,15
0000110A 4780 C098               00001138   1832          BZ    @@gen_label52
0000110E A72B FFFF               0000FFFF   1833          AGHI  2,-1
00001112 EB52 0008 000A          00000008   1834          SRAG  5,2,8(0)
00001118 B902 0055                          1835          LTGR  5,5
0000111C 4780 C094               00001134   1836          BZ    @@gen_label51
00001120                                    1837 @@gen_label50 DS 0H
00001120 D2FF 4000 3000 00000000 00000000   1838          MVC   0(256,4),0(3)
00001126 4140 4100               00000100   1839          LA    4,256(0,4)
                                                                                                                           Page   41 
  Active Usings: @REGION_1384_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000112A 4130 3100               00000100   1840          LA    3,256(0,3)
0000112E E350 C080 0046          00001120   1841          BCTG  5,@@gen_label50
00001134                                    1842 @@gen_label51 DS 0H
00001134 4420 C050               000010F0   1843          EX    2,@lit_1384_40
00001138                                    1844 @@gen_label52 DS 0H
                                            1845 * ***                   dst[copylen] = '\0';
00001138 E310 1000 0004          00000000   1846          LG    1,0(0,1)    ; dst
0000113E 41FF 1000               00000000   1847          LA    15,0(15,1)
00001142 9200 F000      00000000 00000000   1848          MVI   0(15),0
                                            1849 * ***           }
00001146                                    1850 @L251    DS    0H
                                            1851 * ***
                                            1852 * ***   }
00001146                                    1853 @ret_lab_1384 DS 0H
                                            1854 * * **** Start of Epilogue
                                            1855          DCCEPIL
00001146                                    1856+         ds 0h                                                          01-DCCEP
                                            1857+* Epilog
                                            1858+* Epilog
00001146 E3E0 D008 0004          00000008   1859+         lg    14,8(,13) restore the reg                                01-DCCEP
0000114C EB1C D020 0004          00000020   1860+         lmg   1,12,32(13)                                              01-DCCEP
00001152 07FE                               1861+         br   14                                                        01-DCCEP
                                            1862+* End of Epilog
                                            1863 * * **** End of Epilogue
                                            1864          DROP  12
                                            1865 *
                                            1866 *   DSECT for automatic variables in "rd_strlcpy"
                                            1867 *      (FUNCTION #1384)
                                            1868 *
00000000                00000000 000000B0   1869 @AUTO#rd_strlcpy DSECT
00000000                                    1870          DS    XL168
000000A8                                    1871 rd_strlcpy#copylen#1 DS 8XL1 ; copylen
000000B0                000000B0 000000A8   1872          ORG   @AUTO#rd_strlcpy+168
000000A8                                    1873 rd_strlcpy#srclen#1 DS 8XL1 ; srclen
                                            1874 *
00001154                00000000 0000685E   1875 @CODE    CSECT
                                            1876 *
                                            1877 *
                                            1878 *
                                            1879 * ....... start of rd_kafka_q_keep
00001154                                    1880 @LNAME1428 DS  0H
00001154 0000000F                           1881          DC    X'0000000F'
00001158 99846D9281869281                   1882          DC    C'rd_kafka_q_keep'
00001167 00                                 1883          DC    X'00'
                                            1884 rd_kafka_q_keep DCCPRLG CINDEX=1428,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1428
                                            1885          macro
                                            1886          dccextrn &m
                                            1887          gblc    &$dccext(1000)
                                            1888          gbla    &$dccexti
                                            1889          lcla    &i
                                            1890 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1891 &i       seta    1
                                            1892 .loop    aif    (&i gt &$dccexti).around
                                            1893          aif    ('&$dccext(&i)' eq '&m').getout
                                            1894 &i       seta    &i+1
                                            1895          ago     .loop
                                            1896 .around  anop
                                            1897 &$dccexti seta &$dccexti+1
                                            1898          extrn  &m
                                            1899 .getout  anop
                                            1900          mend
00001168                                    1901+$eye0046    ds    0d                                                    02-DCCCA
00001168 C4C3C3                             1902+         dc cl3'DCC'                                                    02-DCCCA
0000116B 01                                 1903+         dc xl1'01' format one                                          02-DCCCA
0000116C 00000000                           1904+         dc a(0)                                                        02-DCCCA
00001170 00000000000011DA                   1905+         dc ad(@PER_1428)                                               02-DCCCA
00001178 00000000000000B0                   1906+         dc ad(176)                                                     02-DCCCA
00001180 0000000000000000                   1907+         dc ad(0)                                                       02-DCCCA
00001188 0000000000001000                   1908+         dc ad(4096)                                                    02-DCCCA
00001190 20                                 1909+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001191 03                                 1910+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001192 03                                 1911+         dc al1(3)                                                      02-DCCCA
00001193 08                                 1912+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001194 00                                 1913+         dc bl.8'00000000'                                              02-DCCCA
00001195 000000                             1914+         dc al3(0)                                                      02-DCCCA
00001198 0000000000001154                   1915+         dc ad(@LNAME1428)                                              02-DCCCA
000011A0                                    1916+         ds 0d                                                          02-DCCCA
000011A0 0000000000001168                   1917+         dc ad($eye0046)                                                02-DCCCA
000011A8 0000000000000000                   1918+         dc ad(0)                                                       02-DCCCA
000011B0                                    1919+         ds    0d                                                       01-DCCPR
000011B0                                    1920+rd_kafka_q_keep ds 0d                                                   01-DCCPR
000011B0                                    1921+@REGION_1428_1 ds 0h                                                    01-DCCPR
000011B0 EBEC D008 0024          00000008   1922+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000011B6 E3E0 D088 0004          00000088   1923+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000011BC E3C0 D090 0004          00000090   1924+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000011C2 B904 002E                          1925+         lgr   2,14                copy addr of our savearea            01-DCCPR
000011C6 E3B0 C018 0004          00000018   1926+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000011CC A7EB 00B0               000000B0   1927+         aghi  14,176              increase by frame size               01-DCCPR
000011D0 E3E0 C020 0021          00000020   1928+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000011D6 4720 B020               00000020   1929+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000011DA                                    1930+@PER_1428 ds   0h                                                       01-DCCPR
000011DA EBDE 2080 0024          00000080   1931+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000011E0 E3C0 2090 0024          00000090   1932+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000011E6 B904 00D2                          1933+         lgr   13,2                set real frame pointer               01-DCCPR
000011EA B904 00CF                          1934+         lgr   12,15               set base reg                         01-DCCPR
                        000011B0            1935+         using @REGION_1428_1,12                                        01-DCCPR
                                            1936 * ******* End of Prologue
                                            1937 * *
                                            1938 * ***           mtx_lock(&rkq->rkq_lock);
000011EE E320 1000 0004          00000000   1939          LG    2,0(0,1)    ; rkq
000011F4 E320 D0A8 0024          000000A8   1940          STG   2,168(0,13)
000011FA 4110 D0A8               000000A8   1941          LA    1,168(0,13)
000011FE E3F0 C0C8 0004          00001278   1942          LG    15,@lit_1428_41 ; mtx_lock
                                                                                                                           Page   43 
  Active Usings: @REGION_1428_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001204                                    1943 @@gen_label53 DS    0H
00001204 05EF                               1944          BALR  14,15
00001206                                    1945 @@gen_label54 DS    0H
                                            1946 * ***           rkq->rkq_refcnt++;
00001206 58F0 2080               00000080   1947          L     15,128(0,2)
0000120A A7FA 0001               00000001   1948          AHI   15,1
0000120E 50F0 2080               00000080   1949          ST    15,128(0,2)
                                            1950 * ***           mtx_unlock(&rkq->rkq_lock);
00001212 E320 D0A8 0024          000000A8   1951          STG   2,168(0,13)
00001218 4110 D0A8               000000A8   1952          LA    1,168(0,13)
0000121C E3F0 C0D0 0004          00001280   1953          LG    15,@lit_1428_42 ; mtx_unlock
00001222                                    1954 @@gen_label55 DS    0H
00001222 05EF                               1955          BALR  14,15
00001224                                    1956 @@gen_label56 DS    0H
                                            1957 * ***      return rkq;
00001224 B904 00F2                          1958          LGR   15,2
                                            1959 * ***   }
                                            1960 * * **** Start of Epilogue
                                            1961          DCCEPIL
00001228                                    1962+         ds 0h                                                          01-DCCEP
                                            1963+* Epilog
00001228 D707 D088 D088 00000088 00000088   1964+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000122E E3D0 D080 0004          00000080   1965+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001234 E3C0 D090 0004          00000090   1966+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000123A E3B0 C018 0004          00000018   1967+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001240 E3C0 B010 0021          00000010   1968+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001246 E3E0 D008 0004          00000008   1969+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000124C EB1C D020 0004          00000020   1970+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001252 078E                               1971+         bcr 8,14                if same dsab, just return              01-DCCEP
00001254 E3F0 D010 0024          00000010   1972+         stg 15,16(0,13)         save return code                       01-DCCEP
0000125A E300 D018 0024          00000018   1973+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001260 E3F0 D090 0004          00000090   1974+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001266 E3F0 F018 0004          00000018   1975+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000126C 47F0 F040               00000040   1976+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1977+* End of Epilog
                                            1978 * * **** End of Epilogue
00001270                                    1979          DS    0D
00001270 000000B0                           1980 @FRAMESIZE_1428 DC F'176'
00001274 00000000
00001278 0000000000000000                   1981 @lit_1428_41 DC AD(mtx_lock)
00001280 0000000000000000                   1982 @lit_1428_42 DC AD(mtx_unlock)
                                            1983          DROP  12
                                            1984 *
                                            1985 *   DSECT for automatic variables in "rd_kafka_q_keep"
                                            1986 *      (FUNCTION #1428)
                                            1987 *
00000000                00000000 000000A8   1988 @AUTO#rd_kafka_q_keep DSECT
00000000                                    1989          DS    XL168
                                            1990 *
00001288                00000000 0000685E   1991 @CODE    CSECT
                                            1992 *
                                            1993 *
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1994 *
                                            1995 * ....... start of rd_kafka_q_disable0
00001288                                    1996 @LNAME1432 DS  0H
00001288 00000013                           1997          DC    X'00000013'
0000128C 99846D9281869281                   1998          DC    C'rd_kafka_q_disable0'
0000129F 00                                 1999          DC    X'00'
                                            2000 rd_kafka_q_disable0 DCCPRLG CINDEX=1432,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1432
                                            2001          macro
                                            2002          dccextrn &m
                                            2003          gblc    &$dccext(1000)
                                            2004          gbla    &$dccexti
                                            2005          lcla    &i
                                            2006 &$dccext(&$dccexti+1) setc    '&m'
                                            2007 &i       seta    1
                                            2008 .loop    aif    (&i gt &$dccexti).around
                                            2009          aif    ('&$dccext(&i)' eq '&m').getout
                                            2010 &i       seta    &i+1
                                            2011          ago     .loop
                                            2012 .around  anop
                                            2013 &$dccexti seta &$dccexti+1
                                            2014          extrn  &m
                                            2015 .getout  anop
                                            2016          mend
000012A0                                    2017+$eye0049    ds    0d                                                    02-DCCCA
000012A0 C4C3C3                             2018+         dc cl3'DCC'                                                    02-DCCCA
000012A3 01                                 2019+         dc xl1'01' format one                                          02-DCCCA
000012A4 00000000                           2020+         dc a(0)                                                        02-DCCCA
000012A8 0000000000001312                   2021+         dc ad(@PER_1432)                                               02-DCCCA
000012B0 00000000000000B0                   2022+         dc ad(176)                                                     02-DCCCA
000012B8 0000000000000000                   2023+         dc ad(0)                                                       02-DCCCA
000012C0 0000000000001000                   2024+         dc ad(4096)                                                    02-DCCCA
000012C8 20                                 2025+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000012C9 03                                 2026+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000012CA 03                                 2027+         dc al1(3)                                                      02-DCCCA
000012CB 08                                 2028+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000012CC 00                                 2029+         dc bl.8'00000000'                                              02-DCCCA
000012CD 000000                             2030+         dc al3(0)                                                      02-DCCCA
000012D0 0000000000001288                   2031+         dc ad(@LNAME1432)                                              02-DCCCA
000012D8                                    2032+         ds 0d                                                          02-DCCCA
000012D8 00000000000012A0                   2033+         dc ad($eye0049)                                                02-DCCCA
000012E0 0000000000000000                   2034+         dc ad(0)                                                       02-DCCCA
000012E8                                    2035+         ds    0d                                                       01-DCCPR
000012E8                                    2036+rd_kafka_q_disable0 ds 0d                                               01-DCCPR
000012E8                                    2037+@REGION_1432_1 ds 0h                                                    01-DCCPR
000012E8 EBEC D008 0024          00000008   2038+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000012EE E3E0 D088 0004          00000088   2039+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000012F4 E3C0 D090 0004          00000090   2040+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000012FA B904 002E                          2041+         lgr   2,14                copy addr of our savearea            01-DCCPR
000012FE E3B0 C018 0004          00000018   2042+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001304 A7EB 00B0               000000B0   2043+         aghi  14,176              increase by frame size               01-DCCPR
00001308 E3E0 C020 0021          00000020   2044+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000130E 4720 B020               00000020   2045+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001312                                    2046+@PER_1432 ds   0h                                                       01-DCCPR
00001312 EBDE 2080 0024          00000080   2047+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001318 E3C0 2090 0024          00000090   2048+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000131E B904 00D2                          2049+         lgr   13,2                set real frame pointer               01-DCCPR
00001322 B904 00CF                          2050+         lgr   12,15               set base reg                         01-DCCPR
                        000012E8            2051+         using @REGION_1432_1,12                                        01-DCCPR
                                            2052 * ******* End of Prologue
                                            2053 * *
                                            2054 * ***           if (do_lock)
00001326 E320 1000 0004          00000000   2055          LG    2,0(0,1)    ; rkq
0000132C E330 100C 0012          0000000C   2056          LT    3,12(0,1)   ; do_lock
00001332 4780 C060               00001348   2057          BZ    @L256
                                            2058 * ***                   mtx_lock(&rkq->rkq_lock);
00001336 E320 D0A8 0024          000000A8   2059          STG   2,168(0,13)
0000133C 4110 D0A8               000000A8   2060          LA    1,168(0,13)
00001340 E3F0 C0D8 0004          000013C0   2061          LG    15,@lit_1432_44 ; mtx_lock
00001346                                    2062 @@gen_label58 DS    0H
00001346 05EF                               2063          BALR  14,15
00001348                                    2064 @@gen_label59 DS    0H
00001348                                    2065 @L256    DS    0H
                                            2066 * ***           rkq->rkq_flags &= ~0x2;
00001348 58F0 2084               00000084   2067          L     15,132(0,2)
0000134C A5F7 FFFD               0000FFFD   2068          NILL  15,65533
00001350 50F0 2084               00000084   2069          ST    15,132(0,2)
                                            2070 * ***           if (do_lock)
00001354 1233                               2071          LTR   3,3
00001356 4780 C084               0000136C   2072          BZ    @ret_lab_1432
                                            2073 * ***                   mtx_unlock(&rkq->rkq_lock);
0000135A E320 D0A8 0024          000000A8   2074          STG   2,168(0,13)
00001360 4110 D0A8               000000A8   2075          LA    1,168(0,13)
00001364 E3F0 C0E0 0004          000013C8   2076          LG    15,@lit_1432_45 ; mtx_unlock
0000136A                                    2077 @@gen_label61 DS    0H
0000136A 05EF                               2078          BALR  14,15
0000136C                                    2079 @@gen_label62 DS    0H
0000136C                                    2080 @L257    DS    0H
                                            2081 * ***   }
0000136C                                    2082 @ret_lab_1432 DS 0H
                                            2083 * * **** Start of Epilogue
                                            2084          DCCEPIL
0000136C                                    2085+         ds 0h                                                          01-DCCEP
                                            2086+* Epilog
0000136C D707 D088 D088 00000088 00000088   2087+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001372 E3D0 D080 0004          00000080   2088+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001378 E3C0 D090 0004          00000090   2089+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000137E E3B0 C018 0004          00000018   2090+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001384 E3C0 B010 0021          00000010   2091+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000138A E3E0 D008 0004          00000008   2092+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001390 EB1C D020 0004          00000020   2093+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001396 078E                               2094+         bcr 8,14                if same dsab, just return              01-DCCEP
00001398 E3F0 D010 0024          00000010   2095+         stg 15,16(0,13)         save return code                       01-DCCEP
0000139E E300 D018 0024          00000018   2096+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   46 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000013A4 E3F0 D090 0004          00000090   2097+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000013AA E3F0 F018 0004          00000018   2098+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000013B0 47F0 F040               00000040   2099+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2100+* End of Epilog
                                            2101 * * **** End of Epilogue
000013B8                                    2102          DS    0D
000013B8 000000B0                           2103 @FRAMESIZE_1432 DC F'176'
000013BC 00000000
000013C0 0000000000000000                   2104 @lit_1432_44 DC AD(mtx_lock)
000013C8 0000000000000000                   2105 @lit_1432_45 DC AD(mtx_unlock)
                                            2106          DROP  12
                                            2107 *
                                            2108 *   DSECT for automatic variables in "rd_kafka_q_disable0"
                                            2109 *      (FUNCTION #1432)
                                            2110 *
00000000                00000000 000000A8   2111 @AUTO#rd_kafka_q_disable0 DSECT
00000000                                    2112          DS    XL168
                                            2113 *
000013D0                00000000 0000685E   2114 @CODE    CSECT
                                            2115 *
                                            2116 *
                                            2117 *
                                            2118 * ....... start of rd_kafka_q_destroy0
000013D0                                    2119 @LNAME1435 DS  0H
000013D0 00000013                           2120          DC    X'00000013'
000013D4 99846D9281869281                   2121          DC    C'rd_kafka_q_destroy0'
000013E7 00                                 2122          DC    X'00'
                                            2123 rd_kafka_q_destroy0 DCCPRLG CINDEX=1435,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1435
                                            2124          macro
                                            2125          dccextrn &m
                                            2126          gblc    &$dccext(1000)
                                            2127          gbla    &$dccexti
                                            2128          lcla    &i
                                            2129 &$dccext(&$dccexti+1) setc    '&m'
                                            2130 &i       seta    1
                                            2131 .loop    aif    (&i gt &$dccexti).around
                                            2132          aif    ('&$dccext(&i)' eq '&m').getout
                                            2133 &i       seta    &i+1
                                            2134          ago     .loop
                                            2135 .around  anop
                                            2136 &$dccexti seta &$dccexti+1
                                            2137          extrn  &m
                                            2138 .getout  anop
                                            2139          mend
000013E8                                    2140+$eye0052    ds    0d                                                    02-DCCCA
000013E8 C4C3C3                             2141+         dc cl3'DCC'                                                    02-DCCCA
000013EB 01                                 2142+         dc xl1'01' format one                                          02-DCCCA
000013EC 00000000                           2143+         dc a(0)                                                        02-DCCCA
000013F0 000000000000145A                   2144+         dc ad(@PER_1435)                                               02-DCCCA
000013F8 00000000000000D8                   2145+         dc ad(216)                                                     02-DCCCA
00001400 0000000000000000                   2146+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001408 0000000000001000                   2147+         dc ad(4096)                                                    02-DCCCA
00001410 20                                 2148+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001411 03                                 2149+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001412 03                                 2150+         dc al1(3)                                                      02-DCCCA
00001413 08                                 2151+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001414 00                                 2152+         dc bl.8'00000000'                                              02-DCCCA
00001415 000000                             2153+         dc al3(0)                                                      02-DCCCA
00001418 00000000000013D0                   2154+         dc ad(@LNAME1435)                                              02-DCCCA
00001420                                    2155+         ds 0d                                                          02-DCCCA
00001420 00000000000013E8                   2156+         dc ad($eye0052)                                                02-DCCCA
00001428 0000000000000000                   2157+         dc ad(0)                                                       02-DCCCA
00001430                                    2158+         ds    0d                                                       01-DCCPR
00001430                                    2159+rd_kafka_q_destroy0 ds 0d                                               01-DCCPR
00001430                                    2160+@REGION_1435_1 ds 0h                                                    01-DCCPR
00001430 EBEC D008 0024          00000008   2161+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001436 E3E0 D088 0004          00000088   2162+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000143C E3C0 D090 0004          00000090   2163+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001442 B904 002E                          2164+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001446 E3B0 C018 0004          00000018   2165+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000144C A7EB 00D8               000000D8   2166+         aghi  14,216              increase by frame size               01-DCCPR
00001450 E3E0 C020 0021          00000020   2167+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001456 4720 B020               00000020   2168+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000145A                                    2169+@PER_1435 ds   0h                                                       01-DCCPR
0000145A EBDE 2080 0024          00000080   2170+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001460 E3C0 2090 0024          00000090   2171+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001466 B904 00D2                          2172+         lgr   13,2                set real frame pointer               01-DCCPR
0000146A B904 00CF                          2173+         lgr   12,15               set base reg                         01-DCCPR
                        00001430            2174+         using @REGION_1435_1,12                                        01-DCCPR
                                            2175 * ******* End of Prologue
                                            2176 * *
                                            2177 * ***           int do_delete = 0;
0000146E E320 1000 0004          00000000   2178          LG    2,0(0,1)    ; rkq
                                            2179 * ***
                                            2180 * ***           if (disable) {
00001474 E3F0 100C 0012          0000000C   2181          LT    15,12(0,1)  ; disable
0000147A 4780 C07E               000014AE   2182          BZ    @L258
                                            2183 * ***
                                            2184 * ***
                                            2185 * ***
                                            2186 * ***
                                            2187 * ***                   rd_kafka_q_disable0(rkq, 1);
0000147E E320 D0B0 0024          000000B0   2188          STG   2,176(0,13)
00001484 E548 D0B8 0001          000000B8   2189          MVGHI 184(13),1
0000148A 4110 D0B0               000000B0   2190          LA    1,176(0,13)
0000148E E3F0 C170 0004          000015A0   2191          LG    15,@lit_1435_48 ; rd_kafka_q_disable0
00001494                                    2192 @@gen_label64 DS    0H
00001494 05EF                               2193          BALR  14,15
00001496                                    2194 @@gen_label65 DS    0H
                                            2195 * ***                   rd_kafka_q_purge0(rkq, 1);
00001496 E320 D0B0 0024          000000B0   2196          STG   2,176(0,13)
0000149C E548 D0B8 0001          000000B8   2197          MVGHI 184(13),1
000014A2 4110 D0B0               000000B0   2198          LA    1,176(0,13)
                                                                                                                           Page   48 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000014A6 E3F0 C178 0004          000015A8   2199          LG    15,@lit_1435_49 ; rd_kafka_q_purge0
000014AC                                    2200 @@gen_label66 DS    0H
000014AC 05EF                               2201          BALR  14,15
000014AE                                    2202 @@gen_label67 DS    0H
                                            2203 * ***           }
000014AE                                    2204 @L258    DS    0H
                                            2205 * ***
                                            2206 * ***           mtx_lock(&rkq->rkq_lock);
000014AE E320 D0B0 0024          000000B0   2207          STG   2,176(0,13)
000014B4 4110 D0B0               000000B0   2208          LA    1,176(0,13)
000014B8 E3F0 C180 0004          000015B0   2209          LG    15,@lit_1435_50 ; mtx_lock
000014BE                                    2210 @@gen_label68 DS    0H
000014BE 05EF                               2211          BALR  14,15
000014C0                                    2212 @@gen_label69 DS    0H
                                            2213 * ***           do { if (((!(rkq->rkq_refcnt > 0)))) rd_kafka_crash("C\
                                            2214 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h",211, __FUNCTION__, ((\
                                            2215 * (void *)0)), "assert: " "rkq->rkq_refcnt > 0"); } while (0);
000014C0                                    2216 @L259    DS    0H
000014C0 E55C 2080 0000          00000080   2217          CHSI  128(2),0
000014C6 4720 C0DC               0000150C   2218          BH    @L262
000014CA E3F0 C198 0004          000015C8   2219          LG    15,@lit_1435_51
000014D0 4110 F056               00000056   2220          LA    1,86(0,15)
000014D4 E310 D0B0 0024          000000B0   2221          STG   1,176(0,13)
000014DA E548 D0B8 00D3          000000B8   2222          MVGHI 184(13),211
000014E0 E310 C190 0004          000015C0   2223          LG    1,@lit_1435_52
000014E6 4110 1072               00000072   2224          LA    1,114(0,1)
000014EA E310 D0C0 0024          000000C0   2225          STG   1,192(0,13)
000014F0 D707 D0C8 D0C8 000000C8 000000C8   2226          XC    200(8,13),200(13)
000014F6 41F0 F082               00000082   2227          LA    15,130(0,15)
000014FA E3F0 D0D0 0024          000000D0   2228          STG   15,208(0,13)
00001500 4110 D0B0               000000B0   2229          LA    1,176(0,13)
00001504 E3F0 C188 0004          000015B8   2230          LG    15,@lit_1435_53 ; rd_kafka_crash
0000150A                                    2231 @@gen_label71 DS    0H
0000150A 05EF                               2232          BALR  14,15
0000150C                                    2233 @@gen_label72 DS    0H
0000150C                                    2234 @L262    DS    0H
                                            2235 * ***           do_delete = !--rkq->rkq_refcnt;
0000150C 58F0 2080               00000080   2236          L     15,128(0,2)
00001510 A7FA FFFF               0000FFFF   2237          AHI   15,-1
00001514 50F0 2080               00000080   2238          ST    15,128(0,2)
00001518 103F                               2239          LPR   3,15
0000151A A73A FFFF               0000FFFF   2240          AHI   3,-1
0000151E 8830 001F               0000001F   2241          SRL   3,31(0)
                                            2242 * ***           mtx_unlock(&rkq->rkq_lock);
00001522 E320 D0B0 0024          000000B0   2243          STG   2,176(0,13)
00001528 4110 D0B0               000000B0   2244          LA    1,176(0,13)
0000152C E3F0 C1A0 0004          000015D0   2245          LG    15,@lit_1435_54 ; mtx_unlock
00001532                                    2246 @@gen_label73 DS    0H
00001532 05EF                               2247          BALR  14,15
00001534                                    2248 @@gen_label74 DS    0H
                                            2249 * ***
                                            2250 * ***           if (((do_delete)))
                                                                                                                           Page   49 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001534 1233                               2251          LTR   3,3
00001536 4780 C11C               0000154C   2252          BZ    @L263
                                            2253 * ***                   rd_kafka_q_destroy_final(rkq);
0000153A E320 D0B0 0024          000000B0   2254          STG   2,176(0,13)
00001540 4110 D0B0               000000B0   2255          LA    1,176(0,13)
00001544 E3F0 C1A8 0004          000015D8   2256          LG    15,@lit_1435_55 ; rd_kafka_q_destroy_final
0000154A                                    2257 @@gen_label76 DS    0H
0000154A 05EF                               2258          BALR  14,15
0000154C                                    2259 @@gen_label77 DS    0H
0000154C                                    2260 @L263    DS    0H
                                            2261 * ***   }
0000154C                                    2262 @ret_lab_1435 DS 0H
                                            2263 * * **** Start of Epilogue
                                            2264          DCCEPIL
0000154C                                    2265+         ds 0h                                                          01-DCCEP
                                            2266+* Epilog
0000154C D707 D088 D088 00000088 00000088   2267+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001552 E3D0 D080 0004          00000080   2268+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001558 E3C0 D090 0004          00000090   2269+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000155E E3B0 C018 0004          00000018   2270+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001564 E3C0 B010 0021          00000010   2271+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000156A E3E0 D008 0004          00000008   2272+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001570 EB1C D020 0004          00000020   2273+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001576 078E                               2274+         bcr 8,14                if same dsab, just return              01-DCCEP
00001578 E3F0 D010 0024          00000010   2275+         stg 15,16(0,13)         save return code                       01-DCCEP
0000157E E300 D018 0024          00000018   2276+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001584 E3F0 D090 0004          00000090   2277+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000158A E3F0 F018 0004          00000018   2278+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001590 47F0 F040               00000040   2279+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2280+* End of Epilog
                                            2281 * * **** End of Epilogue
00001598                                    2282          DS    0D
00001598 000000D8                           2283 @FRAMESIZE_1435 DC F'216'
0000159C 00000000
000015A0 00000000000012E8                   2284 @lit_1435_48 DC AD(rd_kafka_q_disable0)
000015A8 0000000000000000                   2285 @lit_1435_49 DC AD(rd_kafka_q_purge0)
000015B0 0000000000000000                   2286 @lit_1435_50 DC AD(mtx_lock)
000015B8 0000000000000000                   2287 @lit_1435_53 DC AD(rd_kafka_crash)
000015C0 0000000000006860                   2288 @lit_1435_52 DC AD(@DATA)
000015C8 0000000000006A88                   2289 @lit_1435_51 DC AD(@strings@)
000015D0 0000000000000000                   2290 @lit_1435_54 DC AD(mtx_unlock)
000015D8 0000000000000000                   2291 @lit_1435_55 DC AD(rd_kafka_q_destroy_final)
                                            2292          DROP  12
                                            2293 *
                                            2294 *   DSECT for automatic variables in "rd_kafka_q_destroy0"
                                            2295 *      (FUNCTION #1435)
                                            2296 *
00000000                00000000 000000AC   2297 @AUTO#rd_kafka_q_destroy0 DSECT
00000000                                    2298          DS    XL168
000000A8                                    2299 rd_kafka_q_destroy0#do_delete#0 DS 1F ; do_delete
                                            2300 *
000015E0                00000000 0000685E   2301 @CODE    CSECT
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2302 *
                                            2303 *
                                            2304 *
                                            2305 * ....... start of rd_kafka_q_fwd_get
000015E0                                    2306 @LNAME1439 DS  0H
000015E0 00000012                           2307          DC    X'00000012'
000015E4 99846D9281869281                   2308          DC    C'rd_kafka_q_fwd_get'
000015F6 00                                 2309          DC    X'00'
                                            2310 rd_kafka_q_fwd_get DCCPRLG CINDEX=1439,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1439
                                            2311          macro
                                            2312          dccextrn &m
                                            2313          gblc    &$dccext(1000)
                                            2314          gbla    &$dccexti
                                            2315          lcla    &i
                                            2316 &$dccext(&$dccexti+1) setc    '&m'
                                            2317 &i       seta    1
                                            2318 .loop    aif    (&i gt &$dccexti).around
                                            2319          aif    ('&$dccext(&i)' eq '&m').getout
                                            2320 &i       seta    &i+1
                                            2321          ago     .loop
                                            2322 .around  anop
                                            2323 &$dccexti seta &$dccexti+1
                                            2324          extrn  &m
                                            2325 .getout  anop
                                            2326          mend
000015F8                                    2327+$eye0055    ds    0d                                                    02-DCCCA
000015F8 C4C3C3                             2328+         dc cl3'DCC'                                                    02-DCCCA
000015FB 01                                 2329+         dc xl1'01' format one                                          02-DCCCA
000015FC 00000000                           2330+         dc a(0)                                                        02-DCCCA
00001600 000000000000166A                   2331+         dc ad(@PER_1439)                                               02-DCCCA
00001608 00000000000000B8                   2332+         dc ad(184)                                                     02-DCCCA
00001610 0000000000000000                   2333+         dc ad(0)                                                       02-DCCCA
00001618 0000000000001000                   2334+         dc ad(4096)                                                    02-DCCCA
00001620 20                                 2335+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001621 03                                 2336+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001622 03                                 2337+         dc al1(3)                                                      02-DCCCA
00001623 08                                 2338+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001624 00                                 2339+         dc bl.8'00000000'                                              02-DCCCA
00001625 000000                             2340+         dc al3(0)                                                      02-DCCCA
00001628 00000000000015E0                   2341+         dc ad(@LNAME1439)                                              02-DCCCA
00001630                                    2342+         ds 0d                                                          02-DCCCA
00001630 00000000000015F8                   2343+         dc ad($eye0055)                                                02-DCCCA
00001638 0000000000000000                   2344+         dc ad(0)                                                       02-DCCCA
00001640                                    2345+         ds    0d                                                       01-DCCPR
00001640                                    2346+rd_kafka_q_fwd_get ds 0d                                                01-DCCPR
00001640                                    2347+@REGION_1439_1 ds 0h                                                    01-DCCPR
00001640 EBEC D008 0024          00000008   2348+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001646 E3E0 D088 0004          00000088   2349+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000164C E3C0 D090 0004          00000090   2350+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001652 B904 002E                          2351+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001656 E3B0 C018 0004          00000018   2352+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000165C A7EB 00B8               000000B8   2353+         aghi  14,184              increase by frame size               01-DCCPR
00001660 E3E0 C020 0021          00000020   2354+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001666 4720 B020               00000020   2355+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000166A                                    2356+@PER_1439 ds   0h                                                       01-DCCPR
0000166A EBDE 2080 0024          00000080   2357+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001670 E3C0 2090 0024          00000090   2358+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001676 B904 00D2                          2359+         lgr   13,2                set real frame pointer               01-DCCPR
0000167A B904 00CF                          2360+         lgr   12,15               set base reg                         01-DCCPR
                        00001640            2361+         using @REGION_1439_1,12                                        01-DCCPR
                                            2362 * ******* End of Prologue
                                            2363 * *
0000167E E320 1000 0004          00000000   2364          LG    2,0(0,1)    ; rkq
                                            2365 * ***           rd_kafka_q_t *fwdq;
                                            2366 * ***           if (do_lock)
00001684 E340 100C 0012          0000000C   2367          LT    4,12(0,1)   ; do_lock
0000168A 4780 C060               000016A0   2368          BZ    @L270
                                            2369 * ***                   mtx_lock(&rkq->rkq_lock);
0000168E E320 D0B0 0024          000000B0   2370          STG   2,176(0,13)
00001694 4110 D0B0               000000B0   2371          LA    1,176(0,13)
00001698 E3F0 C0F0 0004          00001730   2372          LG    15,@lit_1439_57 ; mtx_lock
0000169E                                    2373 @@gen_label79 DS    0H
0000169E 05EF                               2374          BALR  14,15
000016A0                                    2375 @@gen_label80 DS    0H
000016A0                                    2376 @L270    DS    0H
                                            2377 * ***
                                            2378 * ***           if ((fwdq = rkq->rkq_fwdq))
000016A0 E330 2058 0004          00000058   2379          LG    3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
000016A6 B902 00F3                          2380          LTGR  15,3
000016AA 4780 C080               000016C0   2381          BZ    @L271
                                            2382 * ***                   rd_kafka_q_keep(fwdq);
000016AE E330 D0B0 0024          000000B0   2383          STG   3,176(0,13)
000016B4 4110 D0B0               000000B0   2384          LA    1,176(0,13)
000016B8 E3F0 C0F8 0004          00001738   2385          LG    15,@lit_1439_58 ; rd_kafka_q_keep
000016BE                                    2386 @@gen_label82 DS    0H
000016BE 05EF                               2387          BALR  14,15
000016C0                                    2388 @@gen_label83 DS    0H
000016C0                                    2389 @L271    DS    0H
                                            2390 * ***
                                            2391 * ***           if (do_lock)
000016C0 1244                               2392          LTR   4,4
000016C2 4780 C098               000016D8   2393          BZ    @L272
                                            2394 * ***                   mtx_unlock(&rkq->rkq_lock);
000016C6 E320 D0B0 0024          000000B0   2395          STG   2,176(0,13)
000016CC 4110 D0B0               000000B0   2396          LA    1,176(0,13)
000016D0 E3F0 C100 0004          00001740   2397          LG    15,@lit_1439_59 ; mtx_unlock
000016D6                                    2398 @@gen_label85 DS    0H
000016D6 05EF                               2399          BALR  14,15
000016D8                                    2400 @@gen_label86 DS    0H
000016D8                                    2401 @L272    DS    0H
                                            2402 * ***
                                            2403 * ***           return fwdq;
000016D8 B904 00F3                          2404          LGR   15,3
                                                                                                                           Page   52 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2405 * ***   }
                                            2406 * * **** Start of Epilogue
                                            2407          DCCEPIL
000016DC                                    2408+         ds 0h                                                          01-DCCEP
                                            2409+* Epilog
000016DC D707 D088 D088 00000088 00000088   2410+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000016E2 E3D0 D080 0004          00000080   2411+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000016E8 E3C0 D090 0004          00000090   2412+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000016EE E3B0 C018 0004          00000018   2413+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000016F4 E3C0 B010 0021          00000010   2414+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000016FA E3E0 D008 0004          00000008   2415+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001700 EB1C D020 0004          00000020   2416+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001706 078E                               2417+         bcr 8,14                if same dsab, just return              01-DCCEP
00001708 E3F0 D010 0024          00000010   2418+         stg 15,16(0,13)         save return code                       01-DCCEP
0000170E E300 D018 0024          00000018   2419+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001714 E3F0 D090 0004          00000090   2420+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000171A E3F0 F018 0004          00000018   2421+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001720 47F0 F040               00000040   2422+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2423+* End of Epilog
                                            2424 * * **** End of Epilogue
00001728                                    2425          DS    0D
00001728 000000B8                           2426 @FRAMESIZE_1439 DC F'184'
0000172C 00000000
00001730 0000000000000000                   2427 @lit_1439_57 DC AD(mtx_lock)
00001738 00000000000011B0                   2428 @lit_1439_58 DC AD(rd_kafka_q_keep)
00001740 0000000000000000                   2429 @lit_1439_59 DC AD(mtx_unlock)
                                            2430          DROP  12
                                            2431 *
                                            2432 *   DSECT for automatic variables in "rd_kafka_q_fwd_get"
                                            2433 *      (FUNCTION #1439)
                                            2434 *
00000000                00000000 000000A8   2435 @AUTO#rd_kafka_q_fwd_get DSECT
00000000                                    2436          DS    XL168
                                            2437 *
00001748                00000000 0000685E   2438 @CODE    CSECT
                                            2439 *
                                            2440 *
                                            2441 *
                                            2442 * ....... start of rd_kafka_q_io_event
00001748                                    2443 @LNAME1441 DS  0H
00001748 00000013                           2444          DC    X'00000013'
0000174C 99846D9281869281                   2445          DC    C'rd_kafka_q_io_event'
0000175F 00                                 2446          DC    X'00'
                                            2447 rd_kafka_q_io_event DCCPRLG CINDEX=1441,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1441
                                            2448          macro
                                            2449          dccextrn &m
                                            2450          gblc    &$dccext(1000)
                                            2451          gbla    &$dccexti
                                            2452          lcla    &i
                                            2453 &$dccext(&$dccexti+1) setc    '&m'
                                            2454 &i       seta    1
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2455 .loop    aif    (&i gt &$dccexti).around
                                            2456          aif    ('&$dccext(&i)' eq '&m').getout
                                            2457 &i       seta    &i+1
                                            2458          ago     .loop
                                            2459 .around  anop
                                            2460 &$dccexti seta &$dccexti+1
                                            2461          extrn  &m
                                            2462 .getout  anop
                                            2463          mend
00001760                                    2464+$eye0058    ds    0d                                                    02-DCCCA
00001760 C4C3C3                             2465+         dc cl3'DCC'                                                    02-DCCCA
00001763 01                                 2466+         dc xl1'01' format one                                          02-DCCCA
00001764 00000000                           2467+         dc a(0)                                                        02-DCCCA
00001768 00000000000017D2                   2468+         dc ad(@PER_1441)                                               02-DCCCA
00001770 00000000000000C0                   2469+         dc ad(192)                                                     02-DCCCA
00001778 0000000000000000                   2470+         dc ad(0)                                                       02-DCCCA
00001780 0000000000001000                   2471+         dc ad(4096)                                                    02-DCCCA
00001788 20                                 2472+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001789 03                                 2473+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000178A 03                                 2474+         dc al1(3)                                                      02-DCCCA
0000178B 08                                 2475+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000178C 00                                 2476+         dc bl.8'00000000'                                              02-DCCCA
0000178D 000000                             2477+         dc al3(0)                                                      02-DCCCA
00001790 0000000000001748                   2478+         dc ad(@LNAME1441)                                              02-DCCCA
00001798                                    2479+         ds 0d                                                          02-DCCCA
00001798 0000000000001760                   2480+         dc ad($eye0058)                                                02-DCCCA
000017A0 0000000000000000                   2481+         dc ad(0)                                                       02-DCCCA
000017A8                                    2482+         ds    0d                                                       01-DCCPR
000017A8                                    2483+rd_kafka_q_io_event ds 0d                                               01-DCCPR
000017A8                                    2484+@REGION_1441_1 ds 0h                                                    01-DCCPR
000017A8 EBEC D008 0024          00000008   2485+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000017AE E3E0 D088 0004          00000088   2486+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000017B4 E3C0 D090 0004          00000090   2487+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000017BA B904 002E                          2488+         lgr   2,14                copy addr of our savearea            01-DCCPR
000017BE E3B0 C018 0004          00000018   2489+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000017C4 A7EB 00C0               000000C0   2490+         aghi  14,192              increase by frame size               01-DCCPR
000017C8 E3E0 C020 0021          00000020   2491+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000017CE 4720 B020               00000020   2492+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000017D2                                    2493+@PER_1441 ds   0h                                                       01-DCCPR
000017D2 EBDE 2080 0024          00000080   2494+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000017D8 E3C0 2090 0024          00000090   2495+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000017DE B904 00D2                          2496+         lgr   13,2                set real frame pointer               01-DCCPR
000017E2 B904 00CF                          2497+         lgr   12,15               set base reg                         01-DCCPR
                        000017A8            2498+         using @REGION_1441_1,12                                        01-DCCPR
                                            2499 * ******* End of Prologue
                                            2500 * *
000017E6 E3F0 1000 0004          00000000   2501          LG    15,0(0,1)   ; rkq
                                            2502 * ***
                                            2503 * ***      if (((!rkq->rkq_qio)))
000017EC E310 F090 0002          00000090   2504          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000017F2 4780 C102               000018AA   2505          BZ    @ret_lab_1441
                                            2506 * ***         return;
                                                                                                                           Page   54 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000017F6                                    2507 @L275    DS    0H
                                            2508 * ***
                                            2509 * ***           if (rkq->rkq_qio->event_cb) {
000017F6 E310 F090 0004          00000090   2510          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000017FC E310 1020 0002          00000020   2511          LTG   1,32(0,1)   ; offset of event_cb in rd_kafka_q_io
00001802 4780 C0A8               00001850   2512          BZ    @L276
                                            2513 * ***                   rkq->rkq_qio->event_cb(rkq->rkq_rk,
                                            2514 * ***                                          rkq->rkq_qio->event_cb_\
                                            2515 * opaque);
00001806 E310 F088 0004          00000088   2516          LG    1,136(0,15)
0000180C E310 D0A8 0024          000000A8   2517          STG   1,168(0,13)
00001812 E310 F090 0004          00000090   2518          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001818 E310 1028 0004          00000028   2519          LG    1,40(0,1)
0000181E E310 D0B0 0024          000000B0   2520          STG   1,176(0,13)
00001824 E3F0 F090 0004          00000090   2521          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000182A E3F0 F020 0004          00000020   2522          LG    15,32(0,15) ; offset of event_cb in rd_kafka_q_io
00001830 4110 D0A8               000000A8   2523          LA    1,168(0,13)
00001834                                    2524 @@gen_label89 DS    0H
00001834 05EF                               2525          BALR  14,15
00001836                                    2526 @@gen_label90 DS    0H
                                            2527 * ***                   return;
00001836 47F0 C102               000018AA   2528          B     @ret_lab_1441
00001840                                    2529          DS    0D
00001840 000000C0                           2530 @FRAMESIZE_1441 DC F'192'
00001844 00000000
00001848 0000000000000000                   2531 @lit_1441_61 DC AD(write)
                                            2532 * ***           }
00001850                                    2533 @L276    DS    0H
                                            2534 * ***
                                            2535 * ***
                                            2536 * ***
                                            2537 * ***
                                            2538 * ***
                                            2539 * ***
                                            2540 * ***           if (rkq->rkq_qio->sent)
00001850 E310 F090 0004          00000090   2541          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001856 9500 1018      00000018 00000000   2542          CLI   24(1),0
0000185A 4770 C102               000018AA   2543          BNE   @ret_lab_1441
                                            2544 * ***                   return;
0000185E                                    2545 @L277    DS    0H
                                            2546 * ***
                                            2547 * ***           rkq->rkq_qio->sent = 1;
0000185E E310 F090 0004          00000090   2548          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001864 9201 1018      00000018 00000001   2549          MVI   24(1),1     ; offset of sent in rd_kafka_q_io
                                            2550 * ***
                                            2551 * ***
                                            2552 * ***
                                            2553 * ***           if (write(rkq->rkq_qio->fd,rkq->rkq_qio->payload,(int)\
                                            2554 * rkq->rkq_qio->size) == -1)
00001868 E310 F090 0004          00000090   2555          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000186E E310 1000 0014          00000000   2556          LGF   1,0(0,1)
00001874 E310 D0A8 0024          000000A8   2557          STG   1,168(0,13)
                                                                                                                           Page   55 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000187A E310 F090 0004          00000090   2558          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001880 E310 1008 0004          00000008   2559          LG    1,8(0,1)
00001886 E310 D0B0 0024          000000B0   2560          STG   1,176(0,13)
0000188C E3F0 F090 0004          00000090   2561          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001892 E3F0 F014 0014          00000014   2562          LGF   15,20(0,15)
00001898 E3F0 D0B8 0024          000000B8   2563          STG   15,184(0,13)
0000189E 4110 D0A8               000000A8   2564          LA    1,168(0,13)
000018A2 E3F0 C0A0 0004          00001848   2565          LG    15,@lit_1441_61 ; write
000018A8                                    2566 @@gen_label92 DS    0H
000018A8 05EF                               2567          BALR  14,15
000018AA                                    2568 @@gen_label93 DS    0H
                                            2569 * ***
                                            2570 * ***                   ;
000018AA                                    2571 @L278    DS    0H
                                            2572 * ***   }
000018AA                                    2573 @ret_lab_1441 DS 0H
                                            2574 * * **** Start of Epilogue
                                            2575          DCCEPIL
000018AA                                    2576+         ds 0h                                                          01-DCCEP
                                            2577+* Epilog
000018AA D707 D088 D088 00000088 00000088   2578+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000018B0 E3D0 D080 0004          00000080   2579+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000018B6 E3C0 D090 0004          00000090   2580+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000018BC E3B0 C018 0004          00000018   2581+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000018C2 E3C0 B010 0021          00000010   2582+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000018C8 E3E0 D008 0004          00000008   2583+         lg  14,8(0,13)          load up return address                 01-DCCEP
000018CE EB1C D020 0004          00000020   2584+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000018D4 078E                               2585+         bcr 8,14                if same dsab, just return              01-DCCEP
000018D6 E3F0 D010 0024          00000010   2586+         stg 15,16(0,13)         save return code                       01-DCCEP
000018DC E300 D018 0024          00000018   2587+         stg 0,24(0,13)          save more return code                  01-DCCEP
000018E2 E3F0 D090 0004          00000090   2588+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000018E8 E3F0 F018 0004          00000018   2589+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000018EE 47F0 F040               00000040   2590+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2591+* End of Epilog
                                            2592 * * **** End of Epilogue
                                            2593          DROP  12
                                            2594 *
                                            2595 *   DSECT for automatic variables in "rd_kafka_q_io_event"
                                            2596 *      (FUNCTION #1441)
                                            2597 *
00000000                00000000 000000A8   2598 @AUTO#rd_kafka_q_io_event DSECT
00000000                                    2599          DS    XL168
                                            2600 *
000018F2                00000000 0000685E   2601 @CODE    CSECT
                                            2602 *
                                            2603 *
                                            2604 *
                                            2605 * ....... start of rd_kafka_op_cmp_prio
000018F2                                    2606 @LNAME1442 DS  0H
000018F2 00000014                           2607          DC    X'00000014'
000018F6 99846D9281869281                   2608          DC    C'rd_kafka_op_cmp_prio'
0000190A 00                                 2609          DC    X'00'
                                                                                                                           Page   56 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2610 rd_kafka_op_cmp_prio DCCPRLG CINDEX=1442,BASER=12,FRAME=176,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1442
                                            2611          macro
                                            2612          dccextrn &m
                                            2613          gblc    &$dccext(1000)
                                            2614          gbla    &$dccexti
                                            2615          lcla    &i
                                            2616 &$dccext(&$dccexti+1) setc    '&m'
                                            2617 &i       seta    1
                                            2618 .loop    aif    (&i gt &$dccexti).around
                                            2619          aif    ('&$dccext(&i)' eq '&m').getout
                                            2620 &i       seta    &i+1
                                            2621          ago     .loop
                                            2622 .around  anop
                                            2623 &$dccexti seta &$dccexti+1
                                            2624          extrn  &m
                                            2625 .getout  anop
                                            2626          mend
00001910                                    2627+$eye0061    ds    0d                                                    02-DCCCA
00001910 C4C3C3                             2628+         dc cl3'DCC'                                                    02-DCCCA
00001913 01                                 2629+         dc xl1'01' format one                                          02-DCCCA
00001914 00000000                           2630+         dc a(0)                                                        02-DCCCA
00001918 0000000000000000                   2631+         dc ad(0)                                                       02-DCCCA
00001920 00000000000000B0                   2632+         dc ad(176)                                                     02-DCCCA
00001928 0000000000000000                   2633+         dc ad(0)                                                       02-DCCCA
00001930 0000000000001000                   2634+         dc ad(4096)                                                    02-DCCCA
00001938 20                                 2635+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001939 03                                 2636+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000193A 03                                 2637+         dc al1(3)                                                      02-DCCCA
0000193B 08                                 2638+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000193C 00                                 2639+         dc bl.8'00000000'                                              02-DCCCA
0000193D 000000                             2640+         dc al3(0)                                                      02-DCCCA
00001940 00000000000018F2                   2641+         dc ad(@LNAME1442)                                              02-DCCCA
00001948                                    2642+         ds 0d                                                          02-DCCCA
00001948 0000000000001910                   2643+         dc ad($eye0061)                                                02-DCCCA
00001950 0000000000000000                   2644+         dc ad(0)                                                       02-DCCCA
00001958                                    2645+         ds    0d                                                       01-DCCPR
00001958                                    2646+rd_kafka_op_cmp_prio ds 0d                                              01-DCCPR
00001958                                    2647+@REGION_1442_1 ds 0h                                                    01-DCCPR
00001958 EBEC D008 0024          00000008   2648+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000195E B904 00CF                          2649+         lgr   12,15               set base reg                         01-DCCPR
                        00001958            2650+         using @REGION_1442_1,12                                        01-DCCPR
                                            2651 * ******* End of Prologue
                                            2652 * *
                                            2653 * ***           const rd_kafka_op_t *a = _a, *b = _b;
00001962 E3F0 1000 0004          00000000   2654          LG    15,0(0,1)   ; _a
00001968 E310 1008 0004          00000008   2655          LG    1,8(0,1)    ; _b
                                            2656 * ***
                                            2657 * ***           return (int)((b->rko_prio) < (a->rko_prio) ? -1 : ((b-\
                                            2658 * >rko_prio) > (a->rko_prio)));
0000196E 5820 1034               00000034   2659          L     2,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
00001972 5920 F034               00000034   2660          C     2,52(0,15)
                                                                                                                           Page   57 
  Active Usings: @REGION_1442_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001976 47B0 C02A               00001982   2661          BNL   @L279
0000197A A7F8 FFFF               0000FFFF   2662          LHI   15,-1       ; -1
0000197E 47F0 C042               0000199A   2663          B     @L280
00001982                                    2664 @L279    DS    0H
00001982 5810 1034               00000034   2665          L     1,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
00001986 5910 F034               00000034   2666          C     1,52(0,15)
0000198A 47D0 C03E               00001996   2667          BNH   @@gen_label95
0000198E A7F8 0001               00000001   2668          LHI   15,1
00001992 47F0 C042               0000199A   2669          B     @@gen_label96
00001996                                    2670 @@gen_label95 DS 0H
00001996 A7F8 0000               00000000   2671          LHI   15,0
0000199A                                    2672 @@gen_label96 DS 0H
0000199A                                    2673 @L280    DS    0H
0000199A B914 00FF                          2674          LGFR  15,15
                                            2675 * ***   }
                                            2676 * * **** Start of Epilogue
                                            2677          DCCEPIL
0000199E                                    2678+         ds 0h                                                          01-DCCEP
                                            2679+* Epilog
                                            2680+* Epilog
0000199E E3E0 D008 0004          00000008   2681+         lg    14,8(,13) restore the reg                                01-DCCEP
000019A4 EB1C D020 0004          00000020   2682+         lmg   1,12,32(13)                                              01-DCCEP
000019AA 07FE                               2683+         br   14                                                        01-DCCEP
                                            2684+* End of Epilog
                                            2685 * * **** End of Epilogue
                                            2686          DROP  12
                                            2687 *
                                            2688 *   DSECT for automatic variables in "rd_kafka_op_cmp_prio"
                                            2689 *      (FUNCTION #1442)
                                            2690 *
00000000                00000000 000000A8   2691 @AUTO#rd_kafka_op_cmp_prio DSECT
00000000                                    2692          DS    XL168
                                            2693 *
000019AC                00000000 0000685E   2694 @CODE    CSECT
                                            2695 *
                                            2696 *
                                            2697 *
                                            2698 * ....... start of rd_kafka_q_enq0
000019AC                                    2699 @LNAME1444 DS  0H
000019AC 0000000F                           2700          DC    X'0000000F'
000019B0 99846D9281869281                   2701          DC    C'rd_kafka_q_enq0'
000019BF 00                                 2702          DC    X'00'
                                            2703 rd_kafka_q_enq0 DCCPRLG CINDEX=1444,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1444
                                            2704          macro
                                            2705          dccextrn &m
                                            2706          gblc    &$dccext(1000)
                                            2707          gbla    &$dccexti
                                            2708          lcla    &i
                                            2709 &$dccext(&$dccexti+1) setc    '&m'
                                            2710 &i       seta    1
                                            2711 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2712          aif    ('&$dccext(&i)' eq '&m').getout
                                            2713 &i       seta    &i+1
                                            2714          ago     .loop
                                            2715 .around  anop
                                            2716 &$dccexti seta &$dccexti+1
                                            2717          extrn  &m
                                            2718 .getout  anop
                                            2719          mend
000019C0                                    2720+$eye0064    ds    0d                                                    02-DCCCA
000019C0 C4C3C3                             2721+         dc cl3'DCC'                                                    02-DCCCA
000019C3 01                                 2722+         dc xl1'01' format one                                          02-DCCCA
000019C4 00000000                           2723+         dc a(0)                                                        02-DCCCA
000019C8 0000000000001A32                   2724+         dc ad(@PER_1444)                                               02-DCCCA
000019D0 00000000000000C0                   2725+         dc ad(192)                                                     02-DCCCA
000019D8 0000000000000000                   2726+         dc ad(0)                                                       02-DCCCA
000019E0 0000000000001000                   2727+         dc ad(4096)                                                    02-DCCCA
000019E8 20                                 2728+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000019E9 03                                 2729+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000019EA 03                                 2730+         dc al1(3)                                                      02-DCCCA
000019EB 08                                 2731+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000019EC 00                                 2732+         dc bl.8'00000000'                                              02-DCCCA
000019ED 000000                             2733+         dc al3(0)                                                      02-DCCCA
000019F0 00000000000019AC                   2734+         dc ad(@LNAME1444)                                              02-DCCCA
000019F8                                    2735+         ds 0d                                                          02-DCCCA
000019F8 00000000000019C0                   2736+         dc ad($eye0064)                                                02-DCCCA
00001A00 0000000000000000                   2737+         dc ad(0)                                                       02-DCCCA
00001A08                                    2738+         ds    0d                                                       01-DCCPR
00001A08                                    2739+rd_kafka_q_enq0 ds 0d                                                   01-DCCPR
00001A08                                    2740+@REGION_1444_1 ds 0h                                                    01-DCCPR
00001A08 EBEC D008 0024          00000008   2741+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001A0E E3E0 D088 0004          00000088   2742+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001A14 E3C0 D090 0004          00000090   2743+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001A1A B904 002E                          2744+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001A1E E3B0 C018 0004          00000018   2745+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001A24 A7EB 00C0               000000C0   2746+         aghi  14,192              increase by frame size               01-DCCPR
00001A28 E3E0 C020 0021          00000020   2747+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001A2E 4720 B020               00000020   2748+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001A32                                    2749+@PER_1444 ds   0h                                                       01-DCCPR
00001A32 EBDE 2080 0024          00000080   2750+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001A38 E3C0 2090 0024          00000090   2751+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001A3E B904 00D2                          2752+         lgr   13,2                set real frame pointer               01-DCCPR
00001A42 B904 00CF                          2753+         lgr   12,15               set base reg                         01-DCCPR
                        00001A08            2754+         using @REGION_1444_1,12                                        01-DCCPR
                                            2755 * ******* End of Prologue
                                            2756 * *
                                            2757 * ***       if (((!rko->rko_prio)))
00001A46 EB34 1000 0004          00000000   2758          LMG   3,4,0(1)    ; rkq
00001A4C E3F0 4034 0012          00000034   2759          LT    15,52(0,4)  ; offset of rko_prio in rd_kafka_op_s
00001A52 4770 C090               00001A98   2760          BNZ   @L288
                                            2761 * ***           do {  (rko)->rko_link .tqe_next = (((void *)0)); (rko)\
                                            2762 * ->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; *(&rkq->rkq_q)->tqh_\
                                            2763 * last = (rko); (&rkq->rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; \
                                                                                                                           Page   59 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2764 * } while ( 0);
00001A56                                    2765 @L289    DS    0H
00001A56 A7F9 0000               00000000   2766          LGHI  15,0        ; 0
00001A5A E3F0 4000 0024          00000000   2767          STG   15,0(0,4)   ; rko
00001A60 E3F0 3068 0004          00000068   2768          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00001A66 E3F0 4008 0024          00000008   2769          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00001A6C E3F0 3068 0004          00000068   2770          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00001A72 E340 F000 0024          00000000   2771          STG   4,0(0,15)
00001A78 E340 3068 0024          00000068   2772          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
                                            2773 * ***       else if (at_head)
00001A7E 47F0 C1C2               00001BCA   2774          B     @L292
00001A88                                    2775          DS    0D
00001A88 000000C0                           2776 @FRAMESIZE_1444 DC F'192'
00001A8C 00000000
00001A90 0000000000001958                   2777 @lit_1444_65 DC AD(rd_kafka_op_cmp_prio)
00001A98                                    2778 @L288    DS    0H
00001A98 E3F0 1014 0012          00000014   2779          LT    15,20(0,1)  ; at_head
00001A9E 4780 C0D8               00001AE0   2780          BZ    @L300
                                            2781 * ***               do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_\
                                            2782 * q)->tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link \
                                            2783 * .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last\
                                            2784 *  = &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rk\
                                            2785 * o)->rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0);
00001AA2                                    2786 @L294    DS    0H
00001AA2 E3F0 3060 0004          00000060   2787          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001AA8 E3F0 4000 0024          00000000   2788          STG   15,0(0,4)
00001AAE B902 00FF                          2789          LTGR  15,15
00001AB2 4780 C0BE               00001AC6   2790          BE    @L297
00001AB6 E3F0 3060 0004          00000060   2791          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001ABC E340 F008 0024          00000008   2792          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001AC2 47F0 C0C4               00001ACC   2793          B     @L298
00001AC6                                    2794 @L297    DS    0H
00001AC6 E340 3068 0024          00000068   2795          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001ACC                                    2796 @L298    DS    0H
00001ACC E340 3060 0024          00000060   2797          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00001AD2 41F0 3060               00000060   2798          LA    15,96(0,3)
00001AD6 E3F0 4008 0024          00000008   2799          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
                                            2800 * ***       else
00001ADC 47F0 C1C2               00001BCA   2801          B     @L292
                                            2802 * ***           do { if(((&rkq->rkq_q)->tqh_first) == ((void *)0)) { d\
                                            2803 * o {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)->tqh_first) != (\
                                            2804 * ((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tqe_prev = &(rko)-\
                                            2805 * >rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rko_link\
                                            2806 *  .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)->rko_link .tqe_p\
                                            2807 * rev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } else { rd_kafka_op_\
                                            2808 * t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); (_tmp) != (((voi\
                                            2809 * d *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if(rd_kafka_op_cmp\
                                            2810 * _prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_prev = (_tmp)->rko\
                                            2811 * _link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp); *(_tmp)->rko_li\
                                            2812 * nk .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &(rko)->rko_link \
                                            2813 * .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_link .tqe_next)) \
                                            2814 * { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko_link .tqe_next)\
                                                                                                                           Page   60 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2815 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = &\
                                            2816 * (rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rk\
                                            2817 * o_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko); (rko)->rko_lin\
                                            2818 * k .tqe_prev = &(_tmp)->rko_link .tqe_next; } while ( 0); break; } } \
                                            2819 * } } while(0);
00001AE0                                    2820 @L300    DS    0H
00001AE0 E3F0 3060 0002          00000060   2821          LTG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001AE6 4770 C120               00001B28   2822          BNE   @L303
00001AEA                                    2823 @L304    DS    0H
00001AEA E3F0 3060 0004          00000060   2824          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001AF0 E3F0 4000 0024          00000000   2825          STG   15,0(0,4)
00001AF6 B902 00FF                          2826          LTGR  15,15
00001AFA 4780 C106               00001B0E   2827          BE    @L307
00001AFE E3F0 3060 0004          00000060   2828          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001B04 E340 F008 0024          00000008   2829          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001B0A 47F0 C10C               00001B14   2830          B     @L308
00001B0E                                    2831 @L307    DS    0H
00001B0E E340 3068 0024          00000068   2832          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001B14                                    2833 @L308    DS    0H
00001B14 E340 3060 0024          00000060   2834          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00001B1A 41F0 3060               00000060   2835          LA    15,96(0,3)
00001B1E E3F0 4008 0024          00000008   2836          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00001B24 47F0 C1C2               00001BCA   2837          B     @L309
00001B28                                    2838 @L303    DS    0H
00001B28 E320 3060 0004          00000060   2839          LG    2,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00001B2E 47F0 C1BA               00001BC2   2840          B     @L311
00001B32                                    2841 @L310    DS    0H
00001B32 E340 D0B0 0024          000000B0   2842          STG   4,176(0,13)
00001B38 E320 D0B8 0024          000000B8   2843          STG   2,184(0,13)
00001B3E 4110 D0B0               000000B0   2844          LA    1,176(0,13)
00001B42 E3F0 C088 0004          00001A90   2845          LG    15,@lit_1444_65 ; rd_kafka_op_cmp_prio
00001B48                                    2846 @@gen_label102 DS    0H
00001B48 05EF                               2847          BALR  14,15
00001B4A                                    2848 @@gen_label103 DS    0H
00001B4A 12FF                               2849          LTR   15,15
00001B4C 47B0 C170               00001B78   2850          BNL   @L314
00001B50                                    2851 @L315    DS    0H
00001B50 E3F0 2008 0004          00000008   2852          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
00001B56 E3F0 4008 0024          00000008   2853          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00001B5C E320 4000 0024          00000000   2854          STG   2,0(0,4)    ; rko
00001B62 E3F0 2008 0004          00000008   2855          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
00001B68 E340 F000 0024          00000000   2856          STG   4,0(0,15)
00001B6E E340 2008 0024          00000008   2857          STG   4,8(0,2)    ; offset of tqe_prev in 0000055
00001B74 47F0 C1C2               00001BCA   2858          B     @L312
00001B78                                    2859 @L314    DS    0H
00001B78 E3F0 2000 0002          00000000   2860          LTG   15,0(0,2)   ; _tmp
00001B7E 4770 C1B4               00001BBC   2861          BNZ   @L318
00001B82                                    2862 @L319    DS    0H
00001B82 E3F0 2000 0004          00000000   2863          LG    15,0(0,2)   ; _tmp
00001B88 E3F0 4000 0024          00000000   2864          STG   15,0(0,4)
00001B8E B902 00FF                          2865          LTGR  15,15
00001B92 4780 C19E               00001BA6   2866          BE    @L322
                                                                                                                           Page   61 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001B96 E3F0 4000 0004          00000000   2867          LG    15,0(0,4)   ; rko
00001B9C E340 F008 0024          00000008   2868          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001BA2 47F0 C1A4               00001BAC   2869          B     @L323
00001BA6                                    2870 @L322    DS    0H
00001BA6 E340 3068 0024          00000068   2871          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001BAC                                    2872 @L323    DS    0H
00001BAC E340 2000 0024          00000000   2873          STG   4,0(0,2)    ; _tmp
00001BB2 E320 4008 0024          00000008   2874          STG   2,8(0,4)    ; offset of tqe_prev in 0000055
00001BB8 47F0 C1C2               00001BCA   2875          B     @L312
00001BBC                                    2876 @L318    DS    0H
00001BBC E320 2000 0004          00000000   2877          LG    2,0(0,2)    ; _tmp
00001BC2                                    2878 @L311    DS    0H
00001BC2 B902 00F2                          2879          LTGR  15,2
00001BC6 4770 C12A               00001B32   2880          BNE   @L310
00001BCA                                    2881 @L312    DS    0H
00001BCA                                    2882 @L309    DS    0H
                                            2883 * ***
                                            2884 * ***       rkq->rkq_qlen++;
00001BCA                                    2885 @L299    DS    0H
00001BCA                                    2886 @L292    DS    0H
00001BCA 58F0 3070               00000070   2887          L     15,112(0,3)
00001BCE A7FA 0001               00000001   2888          AHI   15,1
00001BD2 50F0 3070               00000070   2889          ST    15,112(0,3)
                                            2890 * ***       rkq->rkq_qsize += rko->rko_len;
00001BD6 E3F0 3078 0004          00000078   2891          LG    15,120(0,3)
00001BDC E3F0 4030 0018          00000030   2892          AGF   15,48(0,4)
00001BE2 E3F0 3078 0024          00000078   2893          STG   15,120(0,3)
                                            2894 * ***   }
00001BE8                                    2895 @ret_lab_1444 DS 0H
                                            2896 * * **** Start of Epilogue
                                            2897          DCCEPIL
00001BE8                                    2898+         ds 0h                                                          01-DCCEP
                                            2899+* Epilog
00001BE8 D707 D088 D088 00000088 00000088   2900+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001BEE E3D0 D080 0004          00000080   2901+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001BF4 E3C0 D090 0004          00000090   2902+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001BFA E3B0 C018 0004          00000018   2903+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C00 E3C0 B010 0021          00000010   2904+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C06 E3E0 D008 0004          00000008   2905+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C0C EB1C D020 0004          00000020   2906+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001C12 078E                               2907+         bcr 8,14                if same dsab, just return              01-DCCEP
00001C14 E3F0 D010 0024          00000010   2908+         stg 15,16(0,13)         save return code                       01-DCCEP
00001C1A E300 D018 0024          00000018   2909+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001C20 E3F0 D090 0004          00000090   2910+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001C26 E3F0 F018 0004          00000018   2911+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001C2C 47F0 F040               00000040   2912+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2913+* End of Epilog
                                            2914 * * **** End of Epilogue
                                            2915          DROP  12
                                            2916 *
                                            2917 *   DSECT for automatic variables in "rd_kafka_q_enq0"
                                            2918 *      (FUNCTION #1444)
                                                                                                                           Page   62 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2919 *
00000000                00000000 000000A8   2920 @AUTO#rd_kafka_q_enq0 DSECT
00000000                                    2921          DS    XL168
                                            2922 *
00001C30                00000000 0000685E   2923 @CODE    CSECT
                                            2924 *
                                            2925 *
                                            2926 *
                                            2927 * ....... start of rd_kafka_q_enq1
00001C30                                    2928 @LNAME1445 DS  0H
00001C30 0000000F                           2929          DC    X'0000000F'
00001C34 99846D9281869281                   2930          DC    C'rd_kafka_q_enq1'
00001C43 00                                 2931          DC    X'00'
                                            2932 rd_kafka_q_enq1 DCCPRLG CINDEX=1445,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1445
                                            2933          macro
                                            2934          dccextrn &m
                                            2935          gblc    &$dccext(1000)
                                            2936          gbla    &$dccexti
                                            2937          lcla    &i
                                            2938 &$dccext(&$dccexti+1) setc    '&m'
                                            2939 &i       seta    1
                                            2940 .loop    aif    (&i gt &$dccexti).around
                                            2941          aif    ('&$dccext(&i)' eq '&m').getout
                                            2942 &i       seta    &i+1
                                            2943          ago     .loop
                                            2944 .around  anop
                                            2945 &$dccexti seta &$dccexti+1
                                            2946          extrn  &m
                                            2947 .getout  anop
                                            2948          mend
00001C48                                    2949+$eye0067    ds    0d                                                    02-DCCCA
00001C48 C4C3C3                             2950+         dc cl3'DCC'                                                    02-DCCCA
00001C4B 01                                 2951+         dc xl1'01' format one                                          02-DCCCA
00001C4C 00000000                           2952+         dc a(0)                                                        02-DCCCA
00001C50 0000000000001CBA                   2953+         dc ad(@PER_1445)                                               02-DCCCA
00001C58 00000000000000D8                   2954+         dc ad(216)                                                     02-DCCCA
00001C60 0000000000000000                   2955+         dc ad(0)                                                       02-DCCCA
00001C68 0000000000001000                   2956+         dc ad(4096)                                                    02-DCCCA
00001C70 20                                 2957+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001C71 03                                 2958+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001C72 03                                 2959+         dc al1(3)                                                      02-DCCCA
00001C73 08                                 2960+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001C74 00                                 2961+         dc bl.8'00000000'                                              02-DCCCA
00001C75 000000                             2962+         dc al3(0)                                                      02-DCCCA
00001C78 0000000000001C30                   2963+         dc ad(@LNAME1445)                                              02-DCCCA
00001C80                                    2964+         ds 0d                                                          02-DCCCA
00001C80 0000000000001C48                   2965+         dc ad($eye0067)                                                02-DCCCA
00001C88 0000000000000000                   2966+         dc ad(0)                                                       02-DCCCA
00001C90                                    2967+         ds    0d                                                       01-DCCPR
00001C90                                    2968+rd_kafka_q_enq1 ds 0d                                                   01-DCCPR
00001C90                                    2969+@REGION_1445_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   63 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001C90 EBEC D008 0024          00000008   2970+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001C96 E3E0 D088 0004          00000088   2971+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001C9C E3C0 D090 0004          00000090   2972+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001CA2 B904 002E                          2973+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001CA6 E3B0 C018 0004          00000018   2974+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001CAC A7EB 00D8               000000D8   2975+         aghi  14,216              increase by frame size               01-DCCPR
00001CB0 E3E0 C020 0021          00000020   2976+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001CB6 4720 B020               00000020   2977+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001CBA                                    2978+@PER_1445 ds   0h                                                       01-DCCPR
00001CBA EBDE 2080 0024          00000080   2979+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001CC0 E3C0 2090 0024          00000090   2980+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001CC6 B904 00D2                          2981+         lgr   13,2                set real frame pointer               01-DCCPR
00001CCA B904 00CF                          2982+         lgr   12,15               set base reg                         01-DCCPR
                        00001C90            2983+         using @REGION_1445_1,12                                        01-DCCPR
00001CCE B904 0071                          2984          LGR   7,1         ; ptr to parm area
                                            2985 * ******* End of Prologue
                                            2986 * *
00001CD2 EB24 7000 0004          00000000   2987          LMG   2,4,0(7)    ; rkq
00001CD8 E350 7024 0012          00000024   2988          LT    5,36(0,7)   ; do_lock
                                            2989 * ***           rd_kafka_q_t *fwdq;
                                            2990 * ***
                                            2991 * ***           if (do_lock)
00001CDE 4780 C064               00001CF4   2992          BZ    @L325
                                            2993 * ***                   mtx_lock(&rkq->rkq_lock);
00001CE2 E320 D0B0 0024          000000B0   2994          STG   2,176(0,13)
00001CE8 4110 D0B0               000000B0   2995          LA    1,176(0,13)
00001CEC E3F0 C0B0 0004          00001D40   2996          LG    15,@lit_1445_67 ; mtx_lock
00001CF2                                    2997 @@gen_label109 DS    0H
00001CF2 05EF                               2998          BALR  14,15
00001CF4                                    2999 @@gen_label110 DS    0H
00001CF4                                    3000 @L324    DS    0H
                                            3001 * ***
                                            3002 * ***           do {} while (0);
00001CF4                                    3003 @L325    DS    0H
                                            3004 * ***
                                            3005 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
00001CF4 9102 2087      00000087 00000002   3006          TM    135(2),2
00001CF8 4770 C0F8               00001D88   3007          BNZ   @L328
                                            3008 * ***
                                            3009 * ***                   if (do_lock)
00001CFC 1255                               3010          LTR   5,5
00001CFE 4780 C084               00001D14   3011          BZ    @L329
                                            3012 * ***                           mtx_unlock(&rkq->rkq_lock);
00001D02 E320 D0B0 0024          000000B0   3013          STG   2,176(0,13)
00001D08 4110 D0B0               000000B0   3014          LA    1,176(0,13)
00001D0C E3F0 C0B8 0004          00001D48   3015          LG    15,@lit_1445_68 ; mtx_unlock
00001D12                                    3016 @@gen_label113 DS    0H
00001D12 05EF                               3017          BALR  14,15
00001D14                                    3018 @@gen_label114 DS    0H
00001D14                                    3019 @L329    DS    0H
                                            3020 * ***
                                            3021 * ***                   return rd_kafka_op_reply(rko, RD_KAFKA_RESP_ER\
                                                                                                                           Page   64 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3022 * R__DESTROY);
00001D14 E330 D0B0 0024          000000B0   3023          STG   3,176(0,13)
00001D1A E548 D0B8 FF3B          000000B8   3024          MVGHI 184(13),-197
00001D20 4110 D0B0               000000B0   3025          LA    1,176(0,13)
00001D24 E3F0 C0C0 0004          00001D50   3026          LG    15,@lit_1445_69 ; rd_kafka_op_reply
00001D2A                                    3027 @@gen_label115 DS    0H
00001D2A 05EF                               3028          BALR  14,15
00001D2C                                    3029 @@gen_label116 DS    0H
00001D2C B914 00FF                          3030          LGFR  15,15
00001D30 47F0 C212               00001EA2   3031          B     @ret_lab_1445
00001D38                                    3032          DS    0D
00001D38 000000D8                           3033 @FRAMESIZE_1445 DC F'216'
00001D3C 00000000
00001D40 0000000000000000                   3034 @lit_1445_67 DC AD(mtx_lock)
00001D48 0000000000000000                   3035 @lit_1445_68 DC AD(mtx_unlock)
00001D50 0000000000000000                   3036 @lit_1445_69 DC AD(rd_kafka_op_reply)
00001D58 0000000000001640                   3037 @lit_1445_70 DC AD(rd_kafka_q_fwd_get)
00001D60 0000000000001A08                   3038 @lit_1445_71 DC AD(rd_kafka_q_enq0)
00001D68 0000000000000000                   3039 @lit_1445_72 DC AD(cnd_signal)
00001D70 00000000000017A8                   3040 @lit_1445_73 DC AD(rd_kafka_q_io_event)
00001D78 0000000000001C90                   3041 @lit_1445_76 DC AD(rd_kafka_q_enq1)
00001D80 0000000000001430                   3042 @lit_1445_77 DC AD(rd_kafka_q_destroy0)
                                            3043 * ***           }
00001D88                                    3044 @L328    DS    0H
                                            3045 * ***
                                            3046 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00001D88 E320 D0B0 0024          000000B0   3047          STG   2,176(0,13)
00001D8E D707 D0B8 D0B8 000000B8 000000B8   3048          XC    184(8,13),184(13)
00001D94 4110 D0B0               000000B0   3049          LA    1,176(0,13)
00001D98 E3F0 C0C8 0004          00001D58   3050          LG    15,@lit_1445_70 ; rd_kafka_q_fwd_get
00001D9E                                    3051 @@gen_label117 DS    0H
00001D9E 05EF                               3052          BALR  14,15
00001DA0                                    3053 @@gen_label118 DS    0H
00001DA0 B904 006F                          3054          LGR   6,15
00001DA4 B902 00F6                          3055          LTGR  15,6
00001DA8 4770 C1B4               00001E44   3056          BNZ   @L330
                                            3057 * ***                   if (!rko->rko_serve && orig_destq->rkq_serve) \
                                            3058 * {
00001DAC E3F0 3050 0002          00000050   3059          LTG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
00001DB2 4770 C148               00001DD8   3060          BNZ   @L331
00001DB6 E3F0 4098 0002          00000098   3061          LTG   15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00001DBC 4780 C148               00001DD8   3062          BZ    @L331
                                            3063 * ***
                                            3064 * ***
                                            3065 * ***                           rko->rko_serve = orig_destq->rkq_serve\
                                            3066 * ;
00001DC0 E3F0 4098 0004          00000098   3067          LG    15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00001DC6 E3F0 3050 0024          00000050   3068          STG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
                                            3069 * ***                           rko->rko_serve_opaque = orig_destq->rk\
                                            3070 * q_opaque;
00001DCC E3F0 40A0 0004          000000A0   3071          LG    15,160(0,4) ; offset of rkq_opaque in rd_kafka_q_s
00001DD2 E3F0 3058 0024          00000058   3072          STG   15,88(0,3)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                                                                           Page   65 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                s
                                            3073 * ***                   }
00001DD8                                    3074 @L331    DS    0H
                                            3075 * ***
                                            3076 * ***                   rd_kafka_q_enq0(rkq, rko, at_head);
00001DD8 EB23 D0B0 0024          000000B0   3077          STMG  2,3,176(13)
00001DDE E3F0 701C 0014          0000001C   3078          LGF   15,28(0,7)  ; at_head
00001DE4 E3F0 D0C0 0024          000000C0   3079          STG   15,192(0,13)
00001DEA 4110 D0B0               000000B0   3080          LA    1,176(0,13)
00001DEE E3F0 C0D0 0004          00001D60   3081          LG    15,@lit_1445_71 ; rd_kafka_q_enq0
00001DF4                                    3082 @@gen_label122 DS    0H
00001DF4 05EF                               3083          BALR  14,15
00001DF6                                    3084 @@gen_label123 DS    0H
                                            3085 * ***                   cnd_signal(&rkq->rkq_cond);
00001DF6 41F0 2028               00000028   3086          LA    15,40(0,2)
00001DFA E3F0 D0B0 0024          000000B0   3087          STG   15,176(0,13)
00001E00 4110 D0B0               000000B0   3088          LA    1,176(0,13)
00001E04 E3F0 C0D8 0004          00001D68   3089          LG    15,@lit_1445_72 ; cnd_signal
00001E0A                                    3090 @@gen_label124 DS    0H
00001E0A 05EF                               3091          BALR  14,15
00001E0C                                    3092 @@gen_label125 DS    0H
                                            3093 * ***                   if (rkq->rkq_qlen == 1)
00001E0C E55C 2070 0001          00000070   3094          CHSI  112(2),1
00001E12 4770 C198               00001E28   3095          BNE   @L332
                                            3096 * ***                           rd_kafka_q_io_event(rkq);
00001E16 E320 D0B0 0024          000000B0   3097          STG   2,176(0,13)
00001E1C 4110 D0B0               000000B0   3098          LA    1,176(0,13)
00001E20 E3F0 C0E0 0004          00001D70   3099          LG    15,@lit_1445_73 ; rd_kafka_q_io_event
00001E26                                    3100 @@gen_label127 DS    0H
00001E26 05EF                               3101          BALR  14,15
00001E28                                    3102 @@gen_label128 DS    0H
00001E28                                    3103 @L332    DS    0H
                                            3104 * ***
                                            3105 * ***                   if (do_lock)
00001E28 1255                               3106          LTR   5,5
00001E2A 4780 C20E               00001E9E   3107          BZ    @L334
                                            3108 * ***                           mtx_unlock(&rkq->rkq_lock);
00001E2E E320 D0B0 0024          000000B0   3109          STG   2,176(0,13)
00001E34 4110 D0B0               000000B0   3110          LA    1,176(0,13)
00001E38 E3F0 C0B8 0004          00001D48   3111          LG    15,@lit_1445_68 ; mtx_unlock
00001E3E                                    3112 @@gen_label130 DS    0H
00001E3E 05EF                               3113          BALR  14,15
00001E40                                    3114 @@gen_label131 DS    0H
00001E40                                    3115 @L333    DS    0H
                                            3116 * ***           } else {
00001E40 47F0 C20E               00001E9E   3117          B     @L334
00001E44                                    3118 @L330    DS    0H
                                            3119 * ***                   if (do_lock)
00001E44 1255                               3120          LTR   5,5
00001E46 4780 C1CC               00001E5C   3121          BZ    @L335
                                            3122 * ***                           mtx_unlock(&rkq->rkq_lock);
00001E4A E320 D0B0 0024          000000B0   3123          STG   2,176(0,13)
                                                                                                                           Page   66 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001E50 4110 D0B0               000000B0   3124          LA    1,176(0,13)
00001E54 E3F0 C0B8 0004          00001D48   3125          LG    15,@lit_1445_68 ; mtx_unlock
00001E5A                                    3126 @@gen_label133 DS    0H
00001E5A 05EF                               3127          BALR  14,15
00001E5C                                    3128 @@gen_label134 DS    0H
00001E5C                                    3129 @L335    DS    0H
                                            3130 * ***                   rd_kafka_q_enq1(fwdq, rko, orig_destq, at_head\
                                            3131 * , 1);
00001E5C E360 D0B0 0024          000000B0   3132          STG   6,176(0,13)
00001E62 EB34 D0B8 0024          000000B8   3133          STMG  3,4,184(13)
00001E68 E3F0 701C 0014          0000001C   3134          LGF   15,28(0,7)  ; at_head
00001E6E E3F0 D0C8 0024          000000C8   3135          STG   15,200(0,13)
00001E74 E548 D0D0 0001          000000D0   3136          MVGHI 208(13),1
00001E7A 4110 D0B0               000000B0   3137          LA    1,176(0,13)
00001E7E E3F0 C0E8 0004          00001D78   3138          LG    15,@lit_1445_76 ; rd_kafka_q_enq1
00001E84                                    3139 @@gen_label135 DS    0H
00001E84 05EF                               3140          BALR  14,15
00001E86                                    3141 @@gen_label136 DS    0H
                                            3142 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00001E86 E360 D0B0 0024          000000B0   3143          STG   6,176(0,13)
00001E8C D707 D0B8 D0B8 000000B8 000000B8   3144          XC    184(8,13),184(13)
00001E92 4110 D0B0               000000B0   3145          LA    1,176(0,13)
00001E96 E3F0 C0F0 0004          00001D80   3146          LG    15,@lit_1445_77 ; rd_kafka_q_destroy0
00001E9C                                    3147 @@gen_label137 DS    0H
00001E9C 05EF                               3148          BALR  14,15
00001E9E                                    3149 @@gen_label138 DS    0H
                                            3150 * ***           }
00001E9E                                    3151 @L334    DS    0H
                                            3152 * ***
                                            3153 * ***           return 1;
00001E9E A7F9 0001               00000001   3154          LGHI  15,1        ; 1
                                            3155 * ***   }
00001EA2                                    3156 @ret_lab_1445 DS 0H
                                            3157 * * **** Start of Epilogue
                                            3158          DCCEPIL
00001EA2                                    3159+         ds 0h                                                          01-DCCEP
                                            3160+* Epilog
00001EA2 D707 D088 D088 00000088 00000088   3161+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001EA8 E3D0 D080 0004          00000080   3162+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001EAE E3C0 D090 0004          00000090   3163+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001EB4 E3B0 C018 0004          00000018   3164+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001EBA E3C0 B010 0021          00000010   3165+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001EC0 E3E0 D008 0004          00000008   3166+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001EC6 EB1C D020 0004          00000020   3167+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001ECC 078E                               3168+         bcr 8,14                if same dsab, just return              01-DCCEP
00001ECE E3F0 D010 0024          00000010   3169+         stg 15,16(0,13)         save return code                       01-DCCEP
00001ED4 E300 D018 0024          00000018   3170+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001EDA E3F0 D090 0004          00000090   3171+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001EE0 E3F0 F018 0004          00000018   3172+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001EE6 47F0 F040               00000040   3173+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3174+* End of Epilog
                                            3175 * * **** End of Epilogue
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3176          DROP  12
                                            3177 *
                                            3178 *   DSECT for automatic variables in "rd_kafka_q_enq1"
                                            3179 *      (FUNCTION #1445)
                                            3180 *
00000000                00000000 000000A8   3181 @AUTO#rd_kafka_q_enq1 DSECT
00000000                                    3182          DS    XL168
                                            3183 *
00001EEA                00000000 0000685E   3184 @CODE    CSECT
                                            3185 *
                                            3186 *
                                            3187 *
                                            3188 * ....... start of rd_kafka_q_enq
00001EEA                                    3189 @LNAME1446 DS  0H
00001EEA 0000000E                           3190          DC    X'0000000E'
00001EEE 99846D9281869281                   3191          DC    C'rd_kafka_q_enq'
00001EFC 00                                 3192          DC    X'00'
                                            3193 rd_kafka_q_enq DCCPRLG CINDEX=1446,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1446
                                            3194          macro
                                            3195          dccextrn &m
                                            3196          gblc    &$dccext(1000)
                                            3197          gbla    &$dccexti
                                            3198          lcla    &i
                                            3199 &$dccext(&$dccexti+1) setc    '&m'
                                            3200 &i       seta    1
                                            3201 .loop    aif    (&i gt &$dccexti).around
                                            3202          aif    ('&$dccext(&i)' eq '&m').getout
                                            3203 &i       seta    &i+1
                                            3204          ago     .loop
                                            3205 .around  anop
                                            3206 &$dccexti seta &$dccexti+1
                                            3207          extrn  &m
                                            3208 .getout  anop
                                            3209          mend
00001F00                                    3210+$eye0070    ds    0d                                                    02-DCCCA
00001F00 C4C3C3                             3211+         dc cl3'DCC'                                                    02-DCCCA
00001F03 01                                 3212+         dc xl1'01' format one                                          02-DCCCA
00001F04 00000000                           3213+         dc a(0)                                                        02-DCCCA
00001F08 0000000000001F72                   3214+         dc ad(@PER_1446)                                               02-DCCCA
00001F10 00000000000000D0                   3215+         dc ad(208)                                                     02-DCCCA
00001F18 0000000000000000                   3216+         dc ad(0)                                                       02-DCCCA
00001F20 0000000000001000                   3217+         dc ad(4096)                                                    02-DCCCA
00001F28 20                                 3218+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001F29 03                                 3219+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001F2A 03                                 3220+         dc al1(3)                                                      02-DCCCA
00001F2B 08                                 3221+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001F2C 00                                 3222+         dc bl.8'00000000'                                              02-DCCCA
00001F2D 000000                             3223+         dc al3(0)                                                      02-DCCCA
00001F30 0000000000001EEA                   3224+         dc ad(@LNAME1446)                                              02-DCCCA
00001F38                                    3225+         ds 0d                                                          02-DCCCA
00001F38 0000000000001F00                   3226+         dc ad($eye0070)                                                02-DCCCA
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001F40 0000000000000000                   3227+         dc ad(0)                                                       02-DCCCA
00001F48                                    3228+         ds    0d                                                       01-DCCPR
00001F48                                    3229+rd_kafka_q_enq ds 0d                                                    01-DCCPR
00001F48                                    3230+@REGION_1446_1 ds 0h                                                    01-DCCPR
00001F48 EBEC D008 0024          00000008   3231+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001F4E E3E0 D088 0004          00000088   3232+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001F54 E3C0 D090 0004          00000090   3233+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001F5A B904 002E                          3234+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001F5E E3B0 C018 0004          00000018   3235+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001F64 A7EB 00D0               000000D0   3236+         aghi  14,208              increase by frame size               01-DCCPR
00001F68 E3E0 C020 0021          00000020   3237+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001F6E 4720 B020               00000020   3238+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001F72                                    3239+@PER_1446 ds   0h                                                       01-DCCPR
00001F72 EBDE 2080 0024          00000080   3240+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001F78 E3C0 2090 0024          00000090   3241+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001F7E B904 00D2                          3242+         lgr   13,2                set real frame pointer               01-DCCPR
00001F82 B904 00CF                          3243+         lgr   12,15               set base reg                         01-DCCPR
                        00001F48            3244+         using @REGION_1446_1,12                                        01-DCCPR
                                            3245 * ******* End of Prologue
                                            3246 * *
                                            3247 * ***           return rd_kafka_q_enq1(rkq, rko, rkq, 0, 1);
00001F86 E3F0 1000 0004          00000000   3248          LG    15,0(0,1)   ; rkq
00001F8C E3F0 D0A8 0024          000000A8   3249          STG   15,168(0,13)
00001F92 E3F0 1008 0004          00000008   3250          LG    15,8(0,1)   ; rko
00001F98 E3F0 D0B0 0024          000000B0   3251          STG   15,176(0,13)
00001F9E E3F0 1000 0004          00000000   3252          LG    15,0(0,1)   ; rkq
00001FA4 E3F0 D0B8 0024          000000B8   3253          STG   15,184(0,13)
00001FAA D707 D0C0 D0C0 000000C0 000000C0   3254          XC    192(8,13),192(13)
00001FB0 E548 D0C8 0001          000000C8   3255          MVGHI 200(13),1
00001FB6 4110 D0A8               000000A8   3256          LA    1,168(0,13)
00001FBA E3F0 C0D0 0004          00002018   3257          LG    15,@lit_1446_80 ; rd_kafka_q_enq1
00001FC0                                    3258 @@gen_label139 DS    0H
00001FC0 05EF                               3259          BALR  14,15
00001FC2                                    3260 @@gen_label140 DS    0H
00001FC2 B914 00FF                          3261          LGFR  15,15
                                            3262 * ***   }
                                            3263 * * **** Start of Epilogue
                                            3264          DCCEPIL
00001FC6                                    3265+         ds 0h                                                          01-DCCEP
                                            3266+* Epilog
00001FC6 D707 D088 D088 00000088 00000088   3267+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001FCC E3D0 D080 0004          00000080   3268+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001FD2 E3C0 D090 0004          00000090   3269+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001FD8 E3B0 C018 0004          00000018   3270+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001FDE E3C0 B010 0021          00000010   3271+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001FE4 E3E0 D008 0004          00000008   3272+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001FEA EB1C D020 0004          00000020   3273+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001FF0 078E                               3274+         bcr 8,14                if same dsab, just return              01-DCCEP
00001FF2 E3F0 D010 0024          00000010   3275+         stg 15,16(0,13)         save return code                       01-DCCEP
00001FF8 E300 D018 0024          00000018   3276+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001FFE E3F0 D090 0004          00000090   3277+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002004 E3F0 F018 0004          00000018   3278+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   69 
  Active Usings: @REGION_1446_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000200A 47F0 F040               00000040   3279+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3280+* End of Epilog
                                            3281 * * **** End of Epilogue
00002010                                    3282          DS    0D
00002010 000000D0                           3283 @FRAMESIZE_1446 DC F'208'
00002014 00000000
00002018 0000000000001C90                   3284 @lit_1446_80 DC AD(rd_kafka_q_enq1)
                                            3285          DROP  12
                                            3286 *
                                            3287 *   DSECT for automatic variables in "rd_kafka_q_enq"
                                            3288 *      (FUNCTION #1446)
                                            3289 *
00000000                00000000 000000A8   3290 @AUTO#rd_kafka_q_enq DSECT
00000000                                    3291          DS    XL168
                                            3292 *
00002020                00000000 0000685E   3293 @CODE    CSECT
                                            3294 *
                                            3295 *
                                            3296 *
                                            3297 * ....... start of rd_kafka_replyq_make
00002020                                    3298 @LNAME1454 DS  0H
00002020 00000014                           3299          DC    X'00000014'
00002024 99846D9281869281                   3300          DC    C'rd_kafka_replyq_make'
00002038 00                                 3301          DC    X'00'
                                            3302 rd_kafka_replyq_make DCCPRLG CINDEX=1454,BASER=12,FRAME=192,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1454
                                            3303          macro
                                            3304          dccextrn &m
                                            3305          gblc    &$dccext(1000)
                                            3306          gbla    &$dccexti
                                            3307          lcla    &i
                                            3308 &$dccext(&$dccexti+1) setc    '&m'
                                            3309 &i       seta    1
                                            3310 .loop    aif    (&i gt &$dccexti).around
                                            3311          aif    ('&$dccext(&i)' eq '&m').getout
                                            3312 &i       seta    &i+1
                                            3313          ago     .loop
                                            3314 .around  anop
                                            3315 &$dccexti seta &$dccexti+1
                                            3316          extrn  &m
                                            3317 .getout  anop
                                            3318          mend
00002040                                    3319+$eye0073    ds    0d                                                    02-DCCCA
00002040 C4C3C3                             3320+         dc cl3'DCC'                                                    02-DCCCA
00002043 01                                 3321+         dc xl1'01' format one                                          02-DCCCA
00002044 00000000                           3322+         dc a(0)                                                        02-DCCCA
00002048 00000000000020B2                   3323+         dc ad(@PER_1454)                                               02-DCCCA
00002050 00000000000000C0                   3324+         dc ad(192)                                                     02-DCCCA
00002058 0000000000000000                   3325+         dc ad(0)                                                       02-DCCCA
00002060 0000000000001000                   3326+         dc ad(4096)                                                    02-DCCCA
00002068 20                                 3327+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002069 03                                 3328+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000206A 03                                 3329+         dc al1(3)                                                      02-DCCCA
0000206B 08                                 3330+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000206C 00                                 3331+         dc bl.8'00000000'                                              02-DCCCA
0000206D 000000                             3332+         dc al3(0)                                                      02-DCCCA
00002070 0000000000002020                   3333+         dc ad(@LNAME1454)                                              02-DCCCA
00002078                                    3334+         ds 0d                                                          02-DCCCA
00002078 0000000000002040                   3335+         dc ad($eye0073)                                                02-DCCCA
00002080 0000000000000000                   3336+         dc ad(0)                                                       02-DCCCA
00002088                                    3337+         ds    0d                                                       01-DCCPR
00002088                                    3338+rd_kafka_replyq_make ds 0d                                              01-DCCPR
00002088                                    3339+@REGION_1454_1 ds 0h                                                    01-DCCPR
00002088 EBEC D008 0024          00000008   3340+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000208E E3E0 D088 0004          00000088   3341+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002094 E3C0 D090 0004          00000090   3342+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000209A B904 002E                          3343+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000209E E3B0 C018 0004          00000018   3344+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000020A4 A7EB 00C0               000000C0   3345+         aghi  14,192              increase by frame size               01-DCCPR
000020A8 E3E0 C020 0021          00000020   3346+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000020AE 4720 B020               00000020   3347+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000020B2                                    3348+@PER_1454 ds   0h                                                       01-DCCPR
000020B2 EBDE 2080 0024          00000080   3349+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000020B8 E3C0 2090 0024          00000090   3350+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000020BE B904 00D2                          3351+         lgr   13,2                set real frame pointer               01-DCCPR
000020C2 B904 00CF                          3352+         lgr   12,15               set base reg                         01-DCCPR
                        00002088            3353+         using @REGION_1454_1,12                                        01-DCCPR
000020C6 B904 0021                          3354          LGR   2,1         ; ptr to parm area
                                            3355 * ******* End of Prologue
                                            3356 * *
000020CA E330 2000 0004          00000000   3357          LG    3,0(0,2)
                                            3358 * ***           rd_kafka_replyq_t replyq = {};
                                            3359 * setting 16 bytes to 0x00
000020D0 D70F D0A8 D0A8 000000A8 000000A8   3360          XC    168(16,13),168(13)
                                            3361 * ***
                                            3362 * ***           if (rkq) {
000020D6 E3F0 2008 0004          00000008   3363          LG    15,8(0,2)   ; rkq
000020DC B902 001F                          3364          LTGR  1,15
000020E0 4780 C07C               00002104   3365          BZ    @L438
                                            3366 * ***                   replyq.q = rd_kafka_q_keep(rkq);
000020E4 E3F0 D0B8 0024          000000B8   3367          STG   15,184(0,13)
000020EA 4110 D0B8               000000B8   3368          LA    1,184(0,13)
000020EE E3F0 C0D8 0004          00002160   3369          LG    15,@lit_1454_82 ; rd_kafka_q_keep
000020F4                                    3370 @@gen_label142 DS    0H
000020F4 05EF                               3371          BALR  14,15
000020F6                                    3372 @@gen_label143 DS    0H
000020F6 E3F0 D0A8 0024          000000A8   3373          STG   15,168(0,13)
                                            3374 * ***                   replyq.version = version;
000020FC 58F0 2014               00000014   3375          L     15,20(0,2)  ; version
00002100 50F0 D0B0               000000B0   3376          ST    15,176(0,13) ; offset of version in rd_kafka_replyq_s
                                            3377 * ***
                                            3378 * ***
                                            3379 * ***
                                            3380 * ***           }
                                                                                                                           Page   71 
  Active Usings: @REGION_1454_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002104                                    3381 @L438    DS    0H
                                            3382 * ***
                                            3383 * ***           return replyq;
00002104 D20F 3000 D0A8 00000000 000000A8   3384          MVC   0(16,3),168(13)
                                            3385 * ***   }
                                            3386 * * **** Start of Epilogue
                                            3387          DCCEPIL
0000210A                                    3388+         ds 0h                                                          01-DCCEP
                                            3389+* Epilog
0000210A D707 D088 D088 00000088 00000088   3390+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002110 E3D0 D080 0004          00000080   3391+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002116 E3C0 D090 0004          00000090   3392+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000211C E3B0 C018 0004          00000018   3393+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002122 E3C0 B010 0021          00000010   3394+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002128 E3E0 D008 0004          00000008   3395+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000212E EB1C D020 0004          00000020   3396+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002134 078E                               3397+         bcr 8,14                if same dsab, just return              01-DCCEP
00002136 E3F0 D010 0024          00000010   3398+         stg 15,16(0,13)         save return code                       01-DCCEP
0000213C E300 D018 0024          00000018   3399+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002142 E3F0 D090 0004          00000090   3400+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002148 E3F0 F018 0004          00000018   3401+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000214E 47F0 F040               00000040   3402+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3403+* End of Epilog
                                            3404 * * **** End of Epilogue
00002158                                    3405          DS    0D
00002158 000000C0                           3406 @FRAMESIZE_1454 DC F'192'
0000215C 00000000
00002160 00000000000011B0                   3407 @lit_1454_82 DC AD(rd_kafka_q_keep)
                                            3408          DROP  12
                                            3409 *
                                            3410 *   DSECT for automatic variables in "rd_kafka_replyq_make"
                                            3411 *      (FUNCTION #1454)
                                            3412 *
00000000                00000000 000000B8   3413 @AUTO#rd_kafka_replyq_make DSECT
00000000                                    3414          DS    XL168
000000A8                                    3415 rd_kafka_replyq_make#replyq#0 DS 16XL1 ; replyq
                                            3416 *
00002168                00000000 0000685E   3417 @CODE    CSECT
                                            3418 *
                                            3419 *
                                            3420 *
                                            3421 * ....... start of rd_kafka_replyq_clear
00002168                                    3422 @LNAME1458 DS  0H
00002168 00000015                           3423          DC    X'00000015'
0000216C 99846D9281869281                   3424          DC    C'rd_kafka_replyq_clear'
00002181 00                                 3425          DC    X'00'
                                            3426 rd_kafka_replyq_clear DCCPRLG CINDEX=1458,BASER=0,FRAME=168,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1458
                                            3427          macro
                                            3428          dccextrn &m
                                            3429          gblc    &$dccext(1000)
                                            3430          gbla    &$dccexti
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3431          lcla    &i
                                            3432 &$dccext(&$dccexti+1) setc    '&m'
                                            3433 &i       seta    1
                                            3434 .loop    aif    (&i gt &$dccexti).around
                                            3435          aif    ('&$dccext(&i)' eq '&m').getout
                                            3436 &i       seta    &i+1
                                            3437          ago     .loop
                                            3438 .around  anop
                                            3439 &$dccexti seta &$dccexti+1
                                            3440          extrn  &m
                                            3441 .getout  anop
                                            3442          mend
00002188                                    3443+$eye0076    ds    0d                                                    02-DCCCA
00002188 C4C3C3                             3444+         dc cl3'DCC'                                                    02-DCCCA
0000218B 01                                 3445+         dc xl1'01' format one                                          02-DCCCA
0000218C 00000000                           3446+         dc a(0)                                                        02-DCCCA
00002190 0000000000000000                   3447+         dc ad(0)                                                       02-DCCCA
00002198 00000000000000A8                   3448+         dc ad(168)                                                     02-DCCCA
000021A0 0000000000000000                   3449+         dc ad(0)                                                       02-DCCCA
000021A8 0000000000001000                   3450+         dc ad(4096)                                                    02-DCCCA
000021B0 20                                 3451+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000021B1 03                                 3452+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000021B2 03                                 3453+         dc al1(3)                                                      02-DCCCA
000021B3 08                                 3454+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000021B4 00                                 3455+         dc bl.8'00000000'                                              02-DCCCA
000021B5 000000                             3456+         dc al3(0)                                                      02-DCCCA
000021B8 0000000000002168                   3457+         dc ad(@LNAME1458)                                              02-DCCCA
000021C0                                    3458+         ds 0d                                                          02-DCCCA
000021C0 0000000000002188                   3459+         dc ad($eye0076)                                                02-DCCCA
000021C8 0000000000000000                   3460+         dc ad(0)                                                       02-DCCCA
000021D0                                    3461+         ds    0d                                                       01-DCCPR
000021D0                                    3462+rd_kafka_replyq_clear ds 0d                                             01-DCCPR
000021D0                                    3463+@REGION_1458_1 ds 0h                                                    01-DCCPR
000021D0 EBEC D008 0024          00000008   3464+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3465 * ******* End of Prologue
                                            3466 * *
                                            3467 * ***      __memset(replyq,0,sizeof(*replyq));
000021D6 E3F0 1000 0004          00000000   3468          LG    15,0(0,1)
                                            3469 * setting 16 bytes to 0x00
000021DC D70F F000 F000 00000000 00000000   3470          XC    0(16,15),0(15)
                                            3471 * ***   }
000021E2                                    3472 @ret_lab_1458 DS 0H
                                            3473 * * **** Start of Epilogue
                                            3474          DCCEPIL
000021E2                                    3475+         ds 0h                                                          01-DCCEP
                                            3476+* Epilog
                                            3477+* Epilog
000021E2 E3E0 D008 0004          00000008   3478+         lg    14,8(,13) restore the reg                                01-DCCEP
000021E8 EB1C D020 0004          00000020   3479+         lmg   1,12,32(13)                                              01-DCCEP
000021EE 07FE                               3480+         br   14                                                        01-DCCEP
                                            3481+* End of Epilog
                                            3482 * * **** End of Epilogue
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3483 *
                                            3484 *   DSECT for automatic variables in "rd_kafka_replyq_clear"
                                            3485 *      (FUNCTION #1458)
                                            3486 *
00000000                00000000 000000A8   3487 @AUTO#rd_kafka_replyq_clear DSECT
00000000                                    3488          DS    XL168
                                            3489 *
000021F0                00000000 0000685E   3490 @CODE    CSECT
                                            3491 *
                                            3492 *
                                            3493 *
                                            3494 * ....... start of rd_kafka_replyq_copy
000021F0                                    3495 @LNAME1459 DS  0H
000021F0 00000014                           3496          DC    X'00000014'
000021F4 99846D9281869281                   3497          DC    C'rd_kafka_replyq_copy'
00002208 00                                 3498          DC    X'00'
                                            3499 rd_kafka_replyq_copy DCCPRLG CINDEX=1459,BASER=12,FRAME=176,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1459
                                            3500          macro
                                            3501          dccextrn &m
                                            3502          gblc    &$dccext(1000)
                                            3503          gbla    &$dccexti
                                            3504          lcla    &i
                                            3505 &$dccext(&$dccexti+1) setc    '&m'
                                            3506 &i       seta    1
                                            3507 .loop    aif    (&i gt &$dccexti).around
                                            3508          aif    ('&$dccext(&i)' eq '&m').getout
                                            3509 &i       seta    &i+1
                                            3510          ago     .loop
                                            3511 .around  anop
                                            3512 &$dccexti seta &$dccexti+1
                                            3513          extrn  &m
                                            3514 .getout  anop
                                            3515          mend
00002210                                    3516+$eye0079    ds    0d                                                    02-DCCCA
00002210 C4C3C3                             3517+         dc cl3'DCC'                                                    02-DCCCA
00002213 01                                 3518+         dc xl1'01' format one                                          02-DCCCA
00002214 00000000                           3519+         dc a(0)                                                        02-DCCCA
00002218 0000000000002282                   3520+         dc ad(@PER_1459)                                               02-DCCCA
00002220 00000000000000B0                   3521+         dc ad(176)                                                     02-DCCCA
00002228 0000000000000000                   3522+         dc ad(0)                                                       02-DCCCA
00002230 0000000000001000                   3523+         dc ad(4096)                                                    02-DCCCA
00002238 20                                 3524+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002239 03                                 3525+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000223A 03                                 3526+         dc al1(3)                                                      02-DCCCA
0000223B 08                                 3527+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000223C 00                                 3528+         dc bl.8'00000000'                                              02-DCCCA
0000223D 000000                             3529+         dc al3(0)                                                      02-DCCCA
00002240 00000000000021F0                   3530+         dc ad(@LNAME1459)                                              02-DCCCA
00002248                                    3531+         ds 0d                                                          02-DCCCA
00002248 0000000000002210                   3532+         dc ad($eye0079)                                                02-DCCCA
00002250 0000000000000000                   3533+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   74 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002258                                    3534+         ds    0d                                                       01-DCCPR
00002258                                    3535+rd_kafka_replyq_copy ds 0d                                              01-DCCPR
00002258                                    3536+@REGION_1459_1 ds 0h                                                    01-DCCPR
00002258 EBEC D008 0024          00000008   3537+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000225E E3E0 D088 0004          00000088   3538+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002264 E3C0 D090 0004          00000090   3539+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000226A B904 002E                          3540+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000226E E3B0 C018 0004          00000018   3541+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002274 A7EB 00B0               000000B0   3542+         aghi  14,176              increase by frame size               01-DCCPR
00002278 E3E0 C020 0021          00000020   3543+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000227E 4720 B020               00000020   3544+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002282                                    3545+@PER_1459 ds   0h                                                       01-DCCPR
00002282 EBDE 2080 0024          00000080   3546+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002288 E3C0 2090 0024          00000090   3547+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000228E B904 00D2                          3548+         lgr   13,2                set real frame pointer               01-DCCPR
00002292 B904 00CF                          3549+         lgr   12,15               set base reg                         01-DCCPR
                        00002258            3550+         using @REGION_1459_1,12                                        01-DCCPR
                                            3551 * ******* End of Prologue
                                            3552 * *
                                            3553 * ***           dst->version = src->version;
00002296 E3F0 1000 0004          00000000   3554          LG    15,0(0,1)   ; dst
0000229C E310 1008 0004          00000008   3555          LG    1,8(0,1)    ; src
000022A2 5820 1008               00000008   3556          L     2,8(0,1)    ; offset of version in rd_kafka_replyq_s
000022A6 5020 F008               00000008   3557          ST    2,8(0,15)   ; offset of version in rd_kafka_replyq_s
                                            3558 * ***           dst->q = src->q;
000022AA E310 1000 0004          00000000   3559          LG    1,0(0,1)    ; src
000022B0 E310 F000 0024          00000000   3560          STG   1,0(0,15)   ; dst
                                            3561 * ***           if (dst->q)
000022B6 B902 0011                          3562          LTGR  1,1
000022BA 4780 C07E               000022D6   3563          BZ    @ret_lab_1459
                                            3564 * ***                   rd_kafka_q_keep(dst->q);
000022BE E3F0 F000 0004          00000000   3565          LG    15,0(0,15)
000022C4 E3F0 D0A8 0024          000000A8   3566          STG   15,168(0,13)
000022CA 4110 D0A8               000000A8   3567          LA    1,168(0,13)
000022CE E3F0 C0D0 0004          00002328   3568          LG    15,@lit_1459_84 ; rd_kafka_q_keep
000022D4                                    3569 @@gen_label145 DS    0H
000022D4 05EF                               3570          BALR  14,15
000022D6                                    3571 @@gen_label146 DS    0H
000022D6                                    3572 @L444    DS    0H
                                            3573 * ***   # 756 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            3574 * ***   }
000022D6                                    3575 @ret_lab_1459 DS 0H
                                            3576 * * **** Start of Epilogue
                                            3577          DCCEPIL
000022D6                                    3578+         ds 0h                                                          01-DCCEP
                                            3579+* Epilog
000022D6 D707 D088 D088 00000088 00000088   3580+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000022DC E3D0 D080 0004          00000080   3581+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000022E2 E3C0 D090 0004          00000090   3582+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000022E8 E3B0 C018 0004          00000018   3583+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000022EE E3C0 B010 0021          00000010   3584+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000022F4 E3E0 D008 0004          00000008   3585+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page   75 
  Active Usings: @REGION_1459_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000022FA EB1C D020 0004          00000020   3586+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002300 078E                               3587+         bcr 8,14                if same dsab, just return              01-DCCEP
00002302 E3F0 D010 0024          00000010   3588+         stg 15,16(0,13)         save return code                       01-DCCEP
00002308 E300 D018 0024          00000018   3589+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000230E E3F0 D090 0004          00000090   3590+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002314 E3F0 F018 0004          00000018   3591+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000231A 47F0 F040               00000040   3592+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3593+* End of Epilog
                                            3594 * * **** End of Epilogue
00002320                                    3595          DS    0D
00002320 000000B0                           3596 @FRAMESIZE_1459 DC F'176'
00002324 00000000
00002328 00000000000011B0                   3597 @lit_1459_84 DC AD(rd_kafka_q_keep)
                                            3598          DROP  12
                                            3599 *
                                            3600 *   DSECT for automatic variables in "rd_kafka_replyq_copy"
                                            3601 *      (FUNCTION #1459)
                                            3602 *
00000000                00000000 000000A8   3603 @AUTO#rd_kafka_replyq_copy DSECT
00000000                                    3604          DS    XL168
                                            3605 *
00002330                00000000 0000685E   3606 @CODE    CSECT
                                            3607 *
                                            3608 *
                                            3609 *
                                            3610 * ....... start of rd_kafka_replyq_destroy
00002330                                    3611 @LNAME1460 DS  0H
00002330 00000017                           3612          DC    X'00000017'
00002334 99846D9281869281                   3613          DC    C'rd_kafka_replyq_destroy'
0000234B 00                                 3614          DC    X'00'
                                            3615 rd_kafka_replyq_destroy DCCPRLG CINDEX=1460,BASER=12,FRAME=184,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1460
                                            3616          macro
                                            3617          dccextrn &m
                                            3618          gblc    &$dccext(1000)
                                            3619          gbla    &$dccexti
                                            3620          lcla    &i
                                            3621 &$dccext(&$dccexti+1) setc    '&m'
                                            3622 &i       seta    1
                                            3623 .loop    aif    (&i gt &$dccexti).around
                                            3624          aif    ('&$dccext(&i)' eq '&m').getout
                                            3625 &i       seta    &i+1
                                            3626          ago     .loop
                                            3627 .around  anop
                                            3628 &$dccexti seta &$dccexti+1
                                            3629          extrn  &m
                                            3630 .getout  anop
                                            3631          mend
00002350                                    3632+$eye0082    ds    0d                                                    02-DCCCA
00002350 C4C3C3                             3633+         dc cl3'DCC'                                                    02-DCCCA
00002353 01                                 3634+         dc xl1'01' format one                                          02-DCCCA
00002354 00000000                           3635+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   76 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002358 00000000000023C2                   3636+         dc ad(@PER_1460)                                               02-DCCCA
00002360 00000000000000B8                   3637+         dc ad(184)                                                     02-DCCCA
00002368 0000000000000000                   3638+         dc ad(0)                                                       02-DCCCA
00002370 0000000000001000                   3639+         dc ad(4096)                                                    02-DCCCA
00002378 20                                 3640+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002379 03                                 3641+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000237A 03                                 3642+         dc al1(3)                                                      02-DCCCA
0000237B 08                                 3643+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000237C 00                                 3644+         dc bl.8'00000000'                                              02-DCCCA
0000237D 000000                             3645+         dc al3(0)                                                      02-DCCCA
00002380 0000000000002330                   3646+         dc ad(@LNAME1460)                                              02-DCCCA
00002388                                    3647+         ds 0d                                                          02-DCCCA
00002388 0000000000002350                   3648+         dc ad($eye0082)                                                02-DCCCA
00002390 0000000000000000                   3649+         dc ad(0)                                                       02-DCCCA
00002398                                    3650+         ds    0d                                                       01-DCCPR
00002398                                    3651+rd_kafka_replyq_destroy ds 0d                                           01-DCCPR
00002398                                    3652+@REGION_1460_1 ds 0h                                                    01-DCCPR
00002398 EBEC D008 0024          00000008   3653+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000239E E3E0 D088 0004          00000088   3654+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000023A4 E3C0 D090 0004          00000090   3655+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000023AA B904 002E                          3656+         lgr   2,14                copy addr of our savearea            01-DCCPR
000023AE E3B0 C018 0004          00000018   3657+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000023B4 A7EB 00B8               000000B8   3658+         aghi  14,184              increase by frame size               01-DCCPR
000023B8 E3E0 C020 0021          00000020   3659+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000023BE 4720 B020               00000020   3660+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000023C2                                    3661+@PER_1460 ds   0h                                                       01-DCCPR
000023C2 EBDE 2080 0024          00000080   3662+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000023C8 E3C0 2090 0024          00000090   3663+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000023CE B904 00D2                          3664+         lgr   13,2                set real frame pointer               01-DCCPR
000023D2 B904 00CF                          3665+         lgr   12,15               set base reg                         01-DCCPR
                        00002398            3666+         using @REGION_1460_1,12                                        01-DCCPR
                                            3667 * ******* End of Prologue
                                            3668 * *
                                            3669 * ***      if (replyq->q)
000023D6 E320 1000 0004          00000000   3670          LG    2,0(0,1)    ; replyq
000023DC E3F0 2000 0002          00000000   3671          LTG   15,0(0,2)   ; replyq
000023E2 4780 C06C               00002404   3672          BZ    @L445
                                            3673 * ***         rd_kafka_q_destroy0(replyq->q, 0 );
000023E6 E3F0 2000 0004          00000000   3674          LG    15,0(0,2)
000023EC E3F0 D0A8 0024          000000A8   3675          STG   15,168(0,13)
000023F2 D707 D0B0 D0B0 000000B0 000000B0   3676          XC    176(8,13),176(13)
000023F8 4110 D0A8               000000A8   3677          LA    1,168(0,13)
000023FC E3F0 C0D0 0004          00002468   3678          LG    15,@lit_1460_86 ; rd_kafka_q_destroy0
00002402                                    3679 @@gen_label148 DS    0H
00002402 05EF                               3680          BALR  14,15
00002404                                    3681 @@gen_label149 DS    0H
00002404                                    3682 @L445    DS    0H
                                            3683 * ***   # 772 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            3684 * ***      rd_kafka_replyq_clear(replyq);
00002404 E320 D0A8 0024          000000A8   3685          STG   2,168(0,13)
0000240A 4110 D0A8               000000A8   3686          LA    1,168(0,13)
0000240E E3F0 C0D8 0004          00002470   3687          LG    15,@lit_1460_87 ; rd_kafka_replyq_clear
                                                                                                                           Page   77 
  Active Usings: @REGION_1460_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002414                                    3688 @@gen_label150 DS    0H
00002414 05EF                               3689          BALR  14,15
00002416                                    3690 @@gen_label151 DS    0H
                                            3691 * ***   }
00002416                                    3692 @ret_lab_1460 DS 0H
                                            3693 * * **** Start of Epilogue
                                            3694          DCCEPIL
00002416                                    3695+         ds 0h                                                          01-DCCEP
                                            3696+* Epilog
00002416 D707 D088 D088 00000088 00000088   3697+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000241C E3D0 D080 0004          00000080   3698+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002422 E3C0 D090 0004          00000090   3699+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002428 E3B0 C018 0004          00000018   3700+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000242E E3C0 B010 0021          00000010   3701+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002434 E3E0 D008 0004          00000008   3702+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000243A EB1C D020 0004          00000020   3703+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002440 078E                               3704+         bcr 8,14                if same dsab, just return              01-DCCEP
00002442 E3F0 D010 0024          00000010   3705+         stg 15,16(0,13)         save return code                       01-DCCEP
00002448 E300 D018 0024          00000018   3706+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000244E E3F0 D090 0004          00000090   3707+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002454 E3F0 F018 0004          00000018   3708+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000245A 47F0 F040               00000040   3709+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3710+* End of Epilog
                                            3711 * * **** End of Epilogue
00002460                                    3712          DS    0D
00002460 000000B8                           3713 @FRAMESIZE_1460 DC F'184'
00002464 00000000
00002468 0000000000001430                   3714 @lit_1460_86 DC AD(rd_kafka_q_destroy0)
00002470 00000000000021D0                   3715 @lit_1460_87 DC AD(rd_kafka_replyq_clear)
                                            3716          DROP  12
                                            3717 *
                                            3718 *   DSECT for automatic variables in "rd_kafka_replyq_destroy"
                                            3719 *      (FUNCTION #1460)
                                            3720 *
00000000                00000000 000000A8   3721 @AUTO#rd_kafka_replyq_destroy DSECT
00000000                                    3722          DS    XL168
                                            3723 *
00002478                00000000 0000685E   3724 @CODE    CSECT
                                            3725 *
                                            3726 *
                                            3727 *
                                            3728 * ....... start of rd_kafka_replyq_enq
00002478                                    3729 @LNAME1461 DS  0H
00002478 00000013                           3730          DC    X'00000013'
0000247C 99846D9281869281                   3731          DC    C'rd_kafka_replyq_enq'
0000248F 00                                 3732          DC    X'00'
                                            3733 rd_kafka_replyq_enq DCCPRLG CINDEX=1461,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1461
                                            3734          macro
                                            3735          dccextrn &m
                                            3736          gblc    &$dccext(1000)
                                            3737          gbla    &$dccexti
                                                                                                                           Page   78 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3738          lcla    &i
                                            3739 &$dccext(&$dccexti+1) setc    '&m'
                                            3740 &i       seta    1
                                            3741 .loop    aif    (&i gt &$dccexti).around
                                            3742          aif    ('&$dccext(&i)' eq '&m').getout
                                            3743 &i       seta    &i+1
                                            3744          ago     .loop
                                            3745 .around  anop
                                            3746 &$dccexti seta &$dccexti+1
                                            3747          extrn  &m
                                            3748 .getout  anop
                                            3749          mend
00002490                                    3750+$eye0085    ds    0d                                                    02-DCCCA
00002490 C4C3C3                             3751+         dc cl3'DCC'                                                    02-DCCCA
00002493 01                                 3752+         dc xl1'01' format one                                          02-DCCCA
00002494 00000000                           3753+         dc a(0)                                                        02-DCCCA
00002498 0000000000002502                   3754+         dc ad(@PER_1461)                                               02-DCCCA
000024A0 00000000000000C0                   3755+         dc ad(192)                                                     02-DCCCA
000024A8 0000000000000000                   3756+         dc ad(0)                                                       02-DCCCA
000024B0 0000000000001000                   3757+         dc ad(4096)                                                    02-DCCCA
000024B8 20                                 3758+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000024B9 03                                 3759+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000024BA 03                                 3760+         dc al1(3)                                                      02-DCCCA
000024BB 08                                 3761+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000024BC 00                                 3762+         dc bl.8'00000000'                                              02-DCCCA
000024BD 000000                             3763+         dc al3(0)                                                      02-DCCCA
000024C0 0000000000002478                   3764+         dc ad(@LNAME1461)                                              02-DCCCA
000024C8                                    3765+         ds 0d                                                          02-DCCCA
000024C8 0000000000002490                   3766+         dc ad($eye0085)                                                02-DCCCA
000024D0 0000000000000000                   3767+         dc ad(0)                                                       02-DCCCA
000024D8                                    3768+         ds    0d                                                       01-DCCPR
000024D8                                    3769+rd_kafka_replyq_enq ds 0d                                               01-DCCPR
000024D8                                    3770+@REGION_1461_1 ds 0h                                                    01-DCCPR
000024D8 EBEC D008 0024          00000008   3771+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000024DE E3E0 D088 0004          00000088   3772+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000024E4 E3C0 D090 0004          00000090   3773+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000024EA B904 002E                          3774+         lgr   2,14                copy addr of our savearea            01-DCCPR
000024EE E3B0 C018 0004          00000018   3775+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000024F4 A7EB 00C0               000000C0   3776+         aghi  14,192              increase by frame size               01-DCCPR
000024F8 E3E0 C020 0021          00000020   3777+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000024FE 4720 B020               00000020   3778+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002502                                    3779+@PER_1461 ds   0h                                                       01-DCCPR
00002502 EBDE 2080 0024          00000080   3780+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002508 E3C0 2090 0024          00000090   3781+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000250E B904 00D2                          3782+         lgr   13,2                set real frame pointer               01-DCCPR
00002512 B904 00CF                          3783+         lgr   12,15               set base reg                         01-DCCPR
                        000024D8            3784+         using @REGION_1461_1,12                                        01-DCCPR
00002516 B904 0031                          3785          LGR   3,1         ; ptr to parm area
                                            3786 * ******* End of Prologue
                                            3787 * *
                                            3788 * ***      rd_kafka_q_t *rkq = replyq->q;
0000251A E3F0 3000 0004          00000000   3789          LG    15,0(0,3)   ; replyq
                                                                                                                           Page   79 
  Active Usings: @REGION_1461_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002520 E310 3008 0004          00000008   3790          LG    1,8(0,3)    ; rko
00002526 E320 F000 0004          00000000   3791          LG    2,0(0,15)   ; replyq
                                            3792 * ***      int r;
                                            3793 * ***
                                            3794 * ***      if (version)
0000252C E330 3014 0012          00000014   3795          LT    3,20(0,3)   ; version
00002532 4780 C080               00002558   3796          BZ    @L446
                                            3797 * ***         rko->rko_version = version;
00002536 5030 101C               0000001C   3798          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
0000253A 47F0 C088               00002560   3799          B     @L447
00002540                                    3800          DS    0D
00002540 000000C0                           3801 @FRAMESIZE_1461 DC F'192'
00002544 00000000
00002548 0000000000001F48                   3802 @lit_1461_90 DC AD(rd_kafka_q_enq)
00002550 0000000000001430                   3803 @lit_1461_91 DC AD(rd_kafka_q_destroy0)
                                            3804 * ***      else
00002558                                    3805 @L446    DS    0H
                                            3806 * ***         rko->rko_version = replyq->version;
00002558 5830 F008               00000008   3807          L     3,8(0,15)   ; offset of version in rd_kafka_replyq_s
0000255C 5030 101C               0000001C   3808          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
00002560                                    3809 @L447    DS    0H
                                            3810 * ***
                                            3811 * ***
                                            3812 * ***
                                            3813 * ***           replyq->q = ((void *)0);
00002560 A739 0000               00000000   3814          LGHI  3,0         ; 0
00002564 E330 F000 0024          00000000   3815          STG   3,0(0,15)   ; replyq
                                            3816 * ***
                                            3817 * ***
                                            3818 * ***   # 807 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            3819 * ***
                                            3820 * ***
                                            3821 * ***
                                            3822 * ***      r = rd_kafka_q_enq(rkq, rko);
0000256A E320 D0B0 0024          000000B0   3823          STG   2,176(0,13)
00002570 E310 D0B8 0024          000000B8   3824          STG   1,184(0,13)
00002576 4110 D0B0               000000B0   3825          LA    1,176(0,13)
0000257A E3F0 C070 0004          00002548   3826          LG    15,@lit_1461_90 ; rd_kafka_q_enq
00002580                                    3827 @@gen_label153 DS    0H
00002580 05EF                               3828          BALR  14,15
00002582                                    3829 @@gen_label154 DS    0H
00002582 183F                               3830          LR    3,15
                                            3831 * ***
                                            3832 * ***      rd_kafka_q_destroy0(rkq, 0 );
00002584 E320 D0B0 0024          000000B0   3833          STG   2,176(0,13)
0000258A D707 D0B8 D0B8 000000B8 000000B8   3834          XC    184(8,13),184(13)
00002590 4110 D0B0               000000B0   3835          LA    1,176(0,13)
00002594 E3F0 C078 0004          00002550   3836          LG    15,@lit_1461_91 ; rd_kafka_q_destroy0
0000259A                                    3837 @@gen_label155 DS    0H
0000259A 05EF                               3838          BALR  14,15
0000259C                                    3839 @@gen_label156 DS    0H
                                            3840 * ***
                                                                                                                           Page   80 
  Active Usings: @REGION_1461_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3841 * ***      return r;
0000259C B914 00F3                          3842          LGFR  15,3
                                            3843 * ***   }
                                            3844 * * **** Start of Epilogue
                                            3845          DCCEPIL
000025A0                                    3846+         ds 0h                                                          01-DCCEP
                                            3847+* Epilog
000025A0 D707 D088 D088 00000088 00000088   3848+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000025A6 E3D0 D080 0004          00000080   3849+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000025AC E3C0 D090 0004          00000090   3850+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000025B2 E3B0 C018 0004          00000018   3851+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000025B8 E3C0 B010 0021          00000010   3852+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000025BE E3E0 D008 0004          00000008   3853+         lg  14,8(0,13)          load up return address                 01-DCCEP
000025C4 EB1C D020 0004          00000020   3854+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000025CA 078E                               3855+         bcr 8,14                if same dsab, just return              01-DCCEP
000025CC E3F0 D010 0024          00000010   3856+         stg 15,16(0,13)         save return code                       01-DCCEP
000025D2 E300 D018 0024          00000018   3857+         stg 0,24(0,13)          save more return code                  01-DCCEP
000025D8 E3F0 D090 0004          00000090   3858+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000025DE E3F0 F018 0004          00000018   3859+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000025E4 47F0 F040               00000040   3860+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3861+* End of Epilog
                                            3862 * * **** End of Epilogue
                                            3863          DROP  12
                                            3864 *
                                            3865 *   DSECT for automatic variables in "rd_kafka_replyq_enq"
                                            3866 *      (FUNCTION #1461)
                                            3867 *
00000000                00000000 000000AC   3868 @AUTO#rd_kafka_replyq_enq DSECT
00000000                                    3869          DS    XL168
000000A8                                    3870 rd_kafka_replyq_enq#r#0 DS 1F ; r
                                            3871 *
000025E8                00000000 0000685E   3872 @CODE    CSECT
                                            3873 *
                                            3874 *
                                            3875 *
                                            3876 * ....... start of rd_kafka_broker_get_state
000025E8                                    3877 @LNAME1726 DS  0H
000025E8 00000019                           3878          DC    X'00000019'
000025EC 99846D9281869281                   3879          DC    C'rd_kafka_broker_get_state'
00002605 00                                 3880          DC    X'00'
                                            3881 rd_kafka_broker_get_state DCCPRLG CINDEX=1726,BASER=12,FRAME=184,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1726
                                            3882          macro
                                            3883          dccextrn &m
                                            3884          gblc    &$dccext(1000)
                                            3885          gbla    &$dccexti
                                            3886          lcla    &i
                                            3887 &$dccext(&$dccexti+1) setc    '&m'
                                            3888 &i       seta    1
                                            3889 .loop    aif    (&i gt &$dccexti).around
                                            3890          aif    ('&$dccext(&i)' eq '&m').getout
                                            3891 &i       seta    &i+1
                                                                                                                           Page   81 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3892          ago     .loop
                                            3893 .around  anop
                                            3894 &$dccexti seta &$dccexti+1
                                            3895          extrn  &m
                                            3896 .getout  anop
                                            3897          mend
00002608                                    3898+$eye0088    ds    0d                                                    02-DCCCA
00002608 C4C3C3                             3899+         dc cl3'DCC'                                                    02-DCCCA
0000260B 01                                 3900+         dc xl1'01' format one                                          02-DCCCA
0000260C 00000000                           3901+         dc a(0)                                                        02-DCCCA
00002610 000000000000267A                   3902+         dc ad(@PER_1726)                                               02-DCCCA
00002618 00000000000000B8                   3903+         dc ad(184)                                                     02-DCCCA
00002620 0000000000000000                   3904+         dc ad(0)                                                       02-DCCCA
00002628 0000000000001000                   3905+         dc ad(4096)                                                    02-DCCCA
00002630 20                                 3906+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002631 03                                 3907+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002632 03                                 3908+         dc al1(3)                                                      02-DCCCA
00002633 08                                 3909+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002634 00                                 3910+         dc bl.8'00000000'                                              02-DCCCA
00002635 000000                             3911+         dc al3(0)                                                      02-DCCCA
00002638 00000000000025E8                   3912+         dc ad(@LNAME1726)                                              02-DCCCA
00002640                                    3913+         ds 0d                                                          02-DCCCA
00002640 0000000000002608                   3914+         dc ad($eye0088)                                                02-DCCCA
00002648 0000000000000000                   3915+         dc ad(0)                                                       02-DCCCA
00002650                                    3916+         ds    0d                                                       01-DCCPR
00002650                                    3917+rd_kafka_broker_get_state ds 0d                                         01-DCCPR
00002650                                    3918+@REGION_1726_1 ds 0h                                                    01-DCCPR
00002650 EBEC D008 0024          00000008   3919+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002656 E3E0 D088 0004          00000088   3920+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000265C E3C0 D090 0004          00000090   3921+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002662 B904 002E                          3922+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002666 E3B0 C018 0004          00000018   3923+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000266C A7EB 00B8               000000B8   3924+         aghi  14,184              increase by frame size               01-DCCPR
00002670 E3E0 C020 0021          00000020   3925+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002676 4720 B020               00000020   3926+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000267A                                    3927+@PER_1726 ds   0h                                                       01-DCCPR
0000267A EBDE 2080 0024          00000080   3928+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002680 E3C0 2090 0024          00000090   3929+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002686 B904 00D2                          3930+         lgr   13,2                set real frame pointer               01-DCCPR
0000268A B904 00CF                          3931+         lgr   12,15               set base reg                         01-DCCPR
                        00002650            3932+         using @REGION_1726_1,12                                        01-DCCPR
                                            3933 * ******* End of Prologue
                                            3934 * *
0000268E E320 1000 0004          00000000   3935          LG    2,0(0,1)    ; rkb
                                            3936 * ***           rd_kafka_broker_state_t state;
                                            3937 * ***           mtx_lock(&(rkb)->rkb_lock);
00002694 41F0 2048               00000048   3938          LA    15,72(0,2)
00002698 E3F0 D0B0 0024          000000B0   3939          STG   15,176(0,13)
0000269E 4110 D0B0               000000B0   3940          LA    1,176(0,13)
000026A2 E3F0 C0C8 0004          00002718   3941          LG    15,@lit_1726_93 ; mtx_lock
000026A8                                    3942 @@gen_label157 DS    0H
000026A8 05EF                               3943          BALR  14,15
                                                                                                                           Page   82 
  Active Usings: @REGION_1726_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000026AA                                    3944 @@gen_label158 DS    0H
                                            3945 * ***           state = rkb->rkb_state;
000026AA 5830 20C4               000000C4   3946          L     3,196(0,2)  ; offset of rkb_state in rd_kafka_broker_s
                                            3947 * ***           mtx_unlock(&(rkb)->rkb_lock);
000026AE 41F0 2048               00000048   3948          LA    15,72(0,2)
000026B2 E3F0 D0B0 0024          000000B0   3949          STG   15,176(0,13)
000026B8 4110 D0B0               000000B0   3950          LA    1,176(0,13)
000026BC E3F0 C0D0 0004          00002720   3951          LG    15,@lit_1726_94 ; mtx_unlock
000026C2                                    3952 @@gen_label159 DS    0H
000026C2 05EF                               3953          BALR  14,15
000026C4                                    3954 @@gen_label160 DS    0H
                                            3955 * ***           return state;
000026C4 B914 00F3                          3956          LGFR  15,3
                                            3957 * ***   }
                                            3958 * * **** Start of Epilogue
                                            3959          DCCEPIL
000026C8                                    3960+         ds 0h                                                          01-DCCEP
                                            3961+* Epilog
000026C8 D707 D088 D088 00000088 00000088   3962+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000026CE E3D0 D080 0004          00000080   3963+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000026D4 E3C0 D090 0004          00000090   3964+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000026DA E3B0 C018 0004          00000018   3965+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000026E0 E3C0 B010 0021          00000010   3966+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000026E6 E3E0 D008 0004          00000008   3967+         lg  14,8(0,13)          load up return address                 01-DCCEP
000026EC EB1C D020 0004          00000020   3968+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000026F2 078E                               3969+         bcr 8,14                if same dsab, just return              01-DCCEP
000026F4 E3F0 D010 0024          00000010   3970+         stg 15,16(0,13)         save return code                       01-DCCEP
000026FA E300 D018 0024          00000018   3971+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002700 E3F0 D090 0004          00000090   3972+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002706 E3F0 F018 0004          00000018   3973+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000270C 47F0 F040               00000040   3974+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3975+* End of Epilog
                                            3976 * * **** End of Epilogue
00002710                                    3977          DS    0D
00002710 000000B8                           3978 @FRAMESIZE_1726 DC F'184'
00002714 00000000
00002718 0000000000000000                   3979 @lit_1726_93 DC AD(mtx_lock)
00002720 0000000000000000                   3980 @lit_1726_94 DC AD(mtx_unlock)
                                            3981          DROP  12
                                            3982 *
                                            3983 *   DSECT for automatic variables in "rd_kafka_broker_get_state"
                                            3984 *      (FUNCTION #1726)
                                            3985 *
00000000                00000000 000000AC   3986 @AUTO#rd_kafka_broker_get_state DSECT
00000000                                    3987          DS    XL168
000000A8                                    3988 rd_kafka_broker_get_state#state#0 DS 1F ; state
                                            3989 *
00002728                00000000 0000685E   3990 @CODE    CSECT
                                            3991 *
                                            3992 *
                                            3993 *
                                            3994 * ....... start of rd_kafka_broker_is_up
                                                                                                                           Page   83 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002728                                    3995 @LNAME1727 DS  0H
00002728 00000015                           3996          DC    X'00000015'
0000272C 99846D9281869281                   3997          DC    C'rd_kafka_broker_is_up'
00002741 00                                 3998          DC    X'00'
                                            3999 rd_kafka_broker_is_up DCCPRLG CINDEX=1727,BASER=12,FRAME=184,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1727
                                            4000          macro
                                            4001          dccextrn &m
                                            4002          gblc    &$dccext(1000)
                                            4003          gbla    &$dccexti
                                            4004          lcla    &i
                                            4005 &$dccext(&$dccexti+1) setc    '&m'
                                            4006 &i       seta    1
                                            4007 .loop    aif    (&i gt &$dccexti).around
                                            4008          aif    ('&$dccext(&i)' eq '&m').getout
                                            4009 &i       seta    &i+1
                                            4010          ago     .loop
                                            4011 .around  anop
                                            4012 &$dccexti seta &$dccexti+1
                                            4013          extrn  &m
                                            4014 .getout  anop
                                            4015          mend
00002748                                    4016+$eye0091    ds    0d                                                    02-DCCCA
00002748 C4C3C3                             4017+         dc cl3'DCC'                                                    02-DCCCA
0000274B 01                                 4018+         dc xl1'01' format one                                          02-DCCCA
0000274C 00000000                           4019+         dc a(0)                                                        02-DCCCA
00002750 00000000000027BA                   4020+         dc ad(@PER_1727)                                               02-DCCCA
00002758 00000000000000B8                   4021+         dc ad(184)                                                     02-DCCCA
00002760 0000000000000000                   4022+         dc ad(0)                                                       02-DCCCA
00002768 0000000000001000                   4023+         dc ad(4096)                                                    02-DCCCA
00002770 20                                 4024+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002771 03                                 4025+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002772 03                                 4026+         dc al1(3)                                                      02-DCCCA
00002773 08                                 4027+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002774 00                                 4028+         dc bl.8'00000000'                                              02-DCCCA
00002775 000000                             4029+         dc al3(0)                                                      02-DCCCA
00002778 0000000000002728                   4030+         dc ad(@LNAME1727)                                              02-DCCCA
00002780                                    4031+         ds 0d                                                          02-DCCCA
00002780 0000000000002748                   4032+         dc ad($eye0091)                                                02-DCCCA
00002788 0000000000000000                   4033+         dc ad(0)                                                       02-DCCCA
00002790                                    4034+         ds    0d                                                       01-DCCPR
00002790                                    4035+rd_kafka_broker_is_up ds 0d                                             01-DCCPR
00002790                                    4036+@REGION_1727_1 ds 0h                                                    01-DCCPR
00002790 EBEC D008 0024          00000008   4037+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002796 E3E0 D088 0004          00000088   4038+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000279C E3C0 D090 0004          00000090   4039+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000027A2 B904 002E                          4040+         lgr   2,14                copy addr of our savearea            01-DCCPR
000027A6 E3B0 C018 0004          00000018   4041+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000027AC A7EB 00B8               000000B8   4042+         aghi  14,184              increase by frame size               01-DCCPR
000027B0 E3E0 C020 0021          00000020   4043+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000027B6 4720 B020               00000020   4044+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000027BA                                    4045+@PER_1727 ds   0h                                                       01-DCCPR
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000027BA EBDE 2080 0024          00000080   4046+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000027C0 E3C0 2090 0024          00000090   4047+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000027C6 B904 00D2                          4048+         lgr   13,2                set real frame pointer               01-DCCPR
000027CA B904 00CF                          4049+         lgr   12,15               set base reg                         01-DCCPR
                        00002790            4050+         using @REGION_1727_1,12                                        01-DCCPR
                                            4051 * ******* End of Prologue
                                            4052 * *
                                            4053 * ***           rd_kafka_broker_state_t state = rd_kafka_broker_get_st\
                                            4054 * ate(rkb);
000027CE E3F0 1000 0004          00000000   4055          LG    15,0(0,1)   ; rkb
000027D4 E3F0 D0B0 0024          000000B0   4056          STG   15,176(0,13)
000027DA 4110 D0B0               000000B0   4057          LA    1,176(0,13)
000027DE E3F0 C078 0004          00002808   4058          LG    15,@lit_1727_96 ; rd_kafka_broker_get_state
000027E4                                    4059 @@gen_label161 DS    0H
000027E4 05EF                               4060          BALR  14,15
000027E6                                    4061 @@gen_label162 DS    0H
                                            4062 * ***           return ((state) == RD_KAFKA_BROKER_STATE_UP || (state)\
                                            4063 *  == RD_KAFKA_BROKER_STATE_UPDATE);
000027E6 A7FE 0006               00000006   4064          CHI   15,6
000027EA 4780 C066               000027F6   4065          BE    @L567
000027EE A7FE 0007               00000007   4066          CHI   15,7
000027F2 4770 C088               00002818   4067          BNE   @L569
000027F6                                    4068 @L567    DS    0H
000027F6 A7F8 0001               00000001   4069          LHI   15,1        ; 1
000027FA 47F0 C08C               0000281C   4070          B     @L568
00002800                                    4071          DS    0D
00002800 000000B8                           4072 @FRAMESIZE_1727 DC F'184'
00002804 00000000
00002808 0000000000002650                   4073 @lit_1727_96 DC AD(rd_kafka_broker_get_state)
00002810 00000000000000FF                   4074 @lit_1727_99 DC FD'255' 0x00000000000000ff
00002818                                    4075 @L569    DS    0H
00002818 A7F8 0000               00000000   4076          LHI   15,0        ; 0
0000281C                                    4077 @L568    DS    0H
0000281C E3F0 C080 0080          00002810   4078          NG    15,@lit_1727_99
                                            4079 * ***   }
                                            4080 * * **** Start of Epilogue
                                            4081          DCCEPIL
00002822                                    4082+         ds 0h                                                          01-DCCEP
                                            4083+* Epilog
00002822 D707 D088 D088 00000088 00000088   4084+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002828 E3D0 D080 0004          00000080   4085+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000282E E3C0 D090 0004          00000090   4086+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002834 E3B0 C018 0004          00000018   4087+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000283A E3C0 B010 0021          00000010   4088+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002840 E3E0 D008 0004          00000008   4089+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002846 EB1C D020 0004          00000020   4090+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000284C 078E                               4091+         bcr 8,14                if same dsab, just return              01-DCCEP
0000284E E3F0 D010 0024          00000010   4092+         stg 15,16(0,13)         save return code                       01-DCCEP
00002854 E300 D018 0024          00000018   4093+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000285A E3F0 D090 0004          00000090   4094+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002860 E3F0 F018 0004          00000018   4095+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002866 47F0 F040               00000040   4096+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   85 
  Active Usings: @REGION_1727_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4097+* End of Epilog
                                            4098 * * **** End of Epilogue
                                            4099          DROP  12
                                            4100 *
                                            4101 *   DSECT for automatic variables in "rd_kafka_broker_is_up"
                                            4102 *      (FUNCTION #1727)
                                            4103 *
00000000                00000000 000000AC   4104 @AUTO#rd_kafka_broker_is_up DSECT
00000000                                    4105          DS    XL168
000000A8                                    4106 rd_kafka_broker_is_up#state#0 DS 1F ; state
                                            4107 *
0000286A                00000000 0000685E   4108 @CODE    CSECT
                                            4109 *
                                            4110 *
                                            4111 *
                                            4112 * ....... start of rd_kafka_coord_cache_entry_destroy
                                            4113 rd_kafka_coord_cache_entry_destroy ALIAS X'99846D92818692816D8396969984*
                                                                6D83818388856D8595A399A86D8485A2A39996A8'
0000286A                                    4114 @LNAME1957 DS  0H
0000286A 00000022                           4115          DC    X'00000022'
0000286E 99846D9281869281                   4116          DC    C'rd_kafka_coord_cache_entry_destr'
0000288E 96A8                               4117          DC    C'oy'
00002890 00                                 4118          DC    X'00'
                                            4119 rd_kafka_coord_cache_entry_destroy DCCPRLG CINDEX=1957,BASER=12,FRAME=2*
                                                                00,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1957
                                            4120          macro
                                            4121          dccextrn &m
                                            4122          gblc    &$dccext(1000)
                                            4123          gbla    &$dccexti
                                            4124          lcla    &i
                                            4125 &$dccext(&$dccexti+1) setc    '&m'
                                            4126 &i       seta    1
                                            4127 .loop    aif    (&i gt &$dccexti).around
                                            4128          aif    ('&$dccext(&i)' eq '&m').getout
                                            4129 &i       seta    &i+1
                                            4130          ago     .loop
                                            4131 .around  anop
                                            4132 &$dccexti seta &$dccexti+1
                                            4133          extrn  &m
                                            4134 .getout  anop
                                            4135          mend
00002898                                    4136+$eye0094    ds    0d                                                    02-DCCCA
00002898 C4C3C3                             4137+         dc cl3'DCC'                                                    02-DCCCA
0000289B 01                                 4138+         dc xl1'01' format one                                          02-DCCCA
0000289C 00000000                           4139+         dc a(0)                                                        02-DCCCA
000028A0 000000000000290A                   4140+         dc ad(@PER_1957)                                               02-DCCCA
000028A8 00000000000000C8                   4141+         dc ad(200)                                                     02-DCCCA
000028B0 0000000000000000                   4142+         dc ad(0)                                                       02-DCCCA
000028B8 0000000000001000                   4143+         dc ad(4096)                                                    02-DCCCA
000028C0 20                                 4144+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000028C1 03                                 4145+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000028C2 03                                 4146+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000028C3 08                                 4147+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000028C4 00                                 4148+         dc bl.8'00000000'                                              02-DCCCA
000028C5 000000                             4149+         dc al3(0)                                                      02-DCCCA
000028C8 000000000000286A                   4150+         dc ad(@LNAME1957)                                              02-DCCCA
000028D0                                    4151+         ds 0d                                                          02-DCCCA
000028D0 0000000000002898                   4152+         dc ad($eye0094)                                                02-DCCCA
000028D8 0000000000000000                   4153+         dc ad(0)                                                       02-DCCCA
000028E0                                    4154+         ds    0d                                                       01-DCCPR
                                            4155+         entry rd_kafka_coord_cache_entry_destroy                       01-DCCPR
000028E0                                    4156+rd_kafka_coord_cache_entry_destroy ds 0d                                01-DCCPR
000028E0                                    4157+@REGION_1957_1 ds 0h                                                    01-DCCPR
000028E0 EBEC D008 0024          00000008   4158+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000028E6 E3E0 D088 0004          00000088   4159+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000028EC E3C0 D090 0004          00000090   4160+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000028F2 B904 002E                          4161+         lgr   2,14                copy addr of our savearea            01-DCCPR
000028F6 E3B0 C018 0004          00000018   4162+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000028FC A7EB 00C8               000000C8   4163+         aghi  14,200              increase by frame size               01-DCCPR
00002900 E3E0 C020 0021          00000020   4164+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002906 4720 B020               00000020   4165+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000290A                                    4166+@PER_1957 ds   0h                                                       01-DCCPR
0000290A EBDE 2080 0024          00000080   4167+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002910 E3C0 2090 0024          00000090   4168+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002916 B904 00D2                          4169+         lgr   13,2                set real frame pointer               01-DCCPR
0000291A B904 00CF                          4170+         lgr   12,15               set base reg                         01-DCCPR
                        000028E0            4171+         using @REGION_1957_1,12                                        01-DCCPR
                                            4172 * ******* End of Prologue
                                            4173 * *
                                            4174 * ***           ((cc->cc_cnt > 0) ? (void)0 : __assert(__func__, "C:\\\
                                            4175 * asgkafka\\librdkafka\\src\\rdkafka_coord.c", 42, "cc->cc_cnt > 0"));
0000291E EB23 1000 0004          00000000   4176          LMG   2,3,0(1)    ; cc
00002924 E55C 2010 0000          00000010   4177          CHSI  16(2),0
0000292A 4720 C08A               0000296A   4178          BH    @L631
0000292E                                    4179 @L630    DS    0H
0000292E E3F0 C118 0004          000029F8   4180          LG    15,@lit_1957_101
00002934 41F0 F1A6               000001A6   4181          LA    15,422(0,15)
00002938 E3F0 D0A8 0024          000000A8   4182          STG   15,168(0,13)
0000293E E3F0 C110 0004          000029F0   4183          LG    15,@lit_1957_102
00002944 4110 F09E               0000009E   4184          LA    1,158(0,15)
00002948 E310 D0B0 0024          000000B0   4185          STG   1,176(0,13)
0000294E E548 D0B8 002A          000000B8   4186          MVGHI 184(13),42
00002954 41F0 F0CA               000000CA   4187          LA    15,202(0,15)
00002958 E3F0 D0C0 0024          000000C0   4188          STG   15,192(0,13)
0000295E 4110 D0A8               000000A8   4189          LA    1,168(0,13)
00002962 E3F0 C108 0004          000029E8   4190          LG    15,@lit_1957_103 ; __assert
00002968                                    4191 @@gen_label166 DS    0H
00002968 05EF                               4192          BALR  14,15
0000296A                                    4193 @@gen_label167 DS    0H
0000296A                                    4194 @L631    DS    0H
                                            4195 * ***           rd_free(cce->cce_coordkey);
0000296A E3F0 3018 0004          00000018   4196          LG    15,24(0,3)
00002970 E3F0 D0A8 0024          000000A8   4197          STG   15,168(0,13)
00002976 4110 D0A8               000000A8   4198          LA    1,168(0,13)
                                                                                                                           Page   87 
  Active Usings: @REGION_1957_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000297A E3F0 C120 0004          00002A00   4199          LG    15,@lit_1957_104 ; rd_free
00002980                                    4200 @@gen_label168 DS    0H
00002980 05EF                               4201          BALR  14,15
00002982                                    4202 @@gen_label169 DS    0H
                                            4203 * ***           do { if (rd_refcnt_sub0(&(cce->cce_rkb)->rkb_refcnt) >\
                                            4204 *  0) break; rd_kafka_broker_destroy_final(cce->cce_rkb); } while (0);
00002982                                    4205 @L632    DS    0H
00002982 E3F0 3028 0004          00000028   4206          LG    15,40(0,3)  ; offset of cce_rkb in rd_kafka_coord_cache_*
                                                                entry_s
00002988 41F0 FFA0               00000FA0   4207          LA    15,4000(0,15)
0000298C E3F0 D0A8 0024          000000A8   4208          STG   15,168(0,13)
00002992 4110 D0A8               000000A8   4209          LA    1,168(0,13)
00002996 E3F0 C128 0004          00002A08   4210          LG    15,@lit_1957_105 ; rd_refcnt_sub0
0000299C                                    4211 @@gen_label170 DS    0H
0000299C 05EF                               4212          BALR  14,15
0000299E                                    4213 @@gen_label171 DS    0H
0000299E 12FF                               4214          LTR   15,15
000029A0 4720 C0DC               000029BC   4215          BH    @L636
000029A4                                    4216 @L635    DS    0H
000029A4 E3F0 3028 0004          00000028   4217          LG    15,40(0,3)
000029AA E3F0 D0A8 0024          000000A8   4218          STG   15,168(0,13)
000029B0 4110 D0A8               000000A8   4219          LA    1,168(0,13)
000029B4 E3F0 C130 0004          00002A10   4220          LG    15,@lit_1957_106 ; rd_kafka_broker_destroy_final
000029BA                                    4221 @@gen_label173 DS    0H
000029BA 05EF                               4222          BALR  14,15
000029BC                                    4223 @@gen_label174 DS    0H
000029BC                                    4224 @L633    DS    0H
                                            4225 * ***           do {   if (((cce)->cce_link .tqe_next) != (((void *)0)\
                                            4226 * )) (cce)->cce_link .tqe_next->cce_link .tqe_prev = (cce)->cce_link .\
                                            4227 * tqe_prev; else (&cc->cc_entries)->tqh_last = (cce)->cce_link .tqe_pr\
                                            4228 * ev; *(cce)->cce_link .tqe_prev = (cce)->cce_link .tqe_next; ; } whil\
                                            4229 * e ( 0);
000029BC                                    4230 @L636    DS    0H
000029BC E3F0 3000 0002          00000000   4231          LTG   15,0(0,3)   ; cce
000029C2 4780 C138               00002A18   4232          BE    @L639
000029C6 E3F0 3000 0004          00000000   4233          LG    15,0(0,3)   ; cce
000029CC E310 3008 0004          00000008   4234          LG    1,8(0,3)    ; offset of tqe_prev in 0000138
000029D2 E310 F008 0024          00000008   4235          STG   1,8(0,15)   ; offset of tqe_prev in 0000138
000029D8 47F0 C144               00002A24   4236          B     @L640
000029E0                                    4237          DS    0D
000029E0 000000C8                           4238 @FRAMESIZE_1957 DC F'200'
000029E4 00000000
000029E8 0000000000000000                   4239 @lit_1957_103 DC AD(__assert)
000029F0 0000000000006A88                   4240 @lit_1957_102 DC AD(@strings@)
000029F8 0000000000006860                   4241 @lit_1957_101 DC AD(@DATA)
00002A00 0000000000000770                   4242 @lit_1957_104 DC AD(rd_free)
00002A08 00000000000009E8                   4243 @lit_1957_105 DC AD(rd_refcnt_sub0)
00002A10 0000000000000000                   4244 @lit_1957_106 DC AD(rd_kafka_broker_destroy_final)
00002A18                                    4245 @L639    DS    0H
00002A18 E3F0 3008 0004          00000008   4246          LG    15,8(0,3)   ; offset of tqe_prev in 0000138
00002A1E E3F0 2008 0024          00000008   4247          STG   15,8(0,2)   ; offset of tqh_last in rd_kafka_coord_cache*
                                                                _head_s
                                                                                                                           Page   88 
  Active Usings: @REGION_1957_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002A24                                    4248 @L640    DS    0H
00002A24 E3F0 3008 0004          00000008   4249          LG    15,8(0,3)   ; offset of tqe_prev in 0000138
00002A2A E310 3000 0004          00000000   4250          LG    1,0(0,3)    ; cce
00002A30 E310 F000 0024          00000000   4251          STG   1,0(0,15)
                                            4252 * ***           cc->cc_cnt--;
00002A36 58F0 2010               00000010   4253          L     15,16(0,2)
00002A3A A7FA FFFF               0000FFFF   4254          AHI   15,-1
00002A3E 50F0 2010               00000010   4255          ST    15,16(0,2)
                                            4256 * ***           rd_free(cce);
00002A42 E330 D0A8 0024          000000A8   4257          STG   3,168(0,13)
00002A48 4110 D0A8               000000A8   4258          LA    1,168(0,13)
00002A4C E3F0 C120 0004          00002A00   4259          LG    15,@lit_1957_104 ; rd_free
00002A52                                    4260 @@gen_label176 DS    0H
00002A52 05EF                               4261          BALR  14,15
00002A54                                    4262 @@gen_label177 DS    0H
                                            4263 * ***   }
00002A54                                    4264 @ret_lab_1957 DS 0H
                                            4265 * * **** Start of Epilogue
                                            4266          DCCEPIL
00002A54                                    4267+         ds 0h                                                          01-DCCEP
                                            4268+* Epilog
00002A54 D707 D088 D088 00000088 00000088   4269+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002A5A E3D0 D080 0004          00000080   4270+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002A60 E3C0 D090 0004          00000090   4271+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002A66 E3B0 C018 0004          00000018   4272+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002A6C E3C0 B010 0021          00000010   4273+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002A72 E3E0 D008 0004          00000008   4274+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002A78 EB1C D020 0004          00000020   4275+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002A7E 078E                               4276+         bcr 8,14                if same dsab, just return              01-DCCEP
00002A80 E3F0 D010 0024          00000010   4277+         stg 15,16(0,13)         save return code                       01-DCCEP
00002A86 E300 D018 0024          00000018   4278+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002A8C E3F0 D090 0004          00000090   4279+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002A92 E3F0 F018 0004          00000018   4280+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002A98 47F0 F040               00000040   4281+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4282+* End of Epilog
                                            4283 * * **** End of Epilogue
                                            4284          DROP  12
                                            4285 *
                                            4286 *   DSECT for automatic variables in "rd_kafka_coord_cache_entry_destr
                                            4287 *           oy"
                                            4288 *      (FUNCTION #1957)
                                            4289 *
00000000                00000000 000000A8   4290 @AUTO#rd_kafka_coord_cache_entry_destroy DSECT
00000000                                    4291          DS    XL168
                                            4292 *
00002A9C                00000000 0000685E   4293 @CODE    CSECT
                                            4294 *
                                            4295 *
                                            4296 *
                                            4297 * ....... start of rd_kafka_coord_cache_expire
                                            4298 rd_kafka_coord_cache_expire ALIAS X'99846D92818692816D83969699846D83818*
                                                                388856D85A797899985'
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002A9C                                    4299 @LNAME1884 DS  0H
00002A9C 0000001B                           4300          DC    X'0000001B'
00002AA0 99846D9281869281                   4301          DC    C'rd_kafka_coord_cache_expire'
00002ABB 00                                 4302          DC    X'00'
                                            4303 rd_kafka_coord_cache_expire DCCPRLG CINDEX=1884,BASER=12,FRAME=192,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1884
                                            4304          macro
                                            4305          dccextrn &m
                                            4306          gblc    &$dccext(1000)
                                            4307          gbla    &$dccexti
                                            4308          lcla    &i
                                            4309 &$dccext(&$dccexti+1) setc    '&m'
                                            4310 &i       seta    1
                                            4311 .loop    aif    (&i gt &$dccexti).around
                                            4312          aif    ('&$dccext(&i)' eq '&m').getout
                                            4313 &i       seta    &i+1
                                            4314          ago     .loop
                                            4315 .around  anop
                                            4316 &$dccexti seta &$dccexti+1
                                            4317          extrn  &m
                                            4318 .getout  anop
                                            4319          mend
00002AC0                                    4320+$eye0097    ds    0d                                                    02-DCCCA
00002AC0 C4C3C3                             4321+         dc cl3'DCC'                                                    02-DCCCA
00002AC3 01                                 4322+         dc xl1'01' format one                                          02-DCCCA
00002AC4 00000000                           4323+         dc a(0)                                                        02-DCCCA
00002AC8 0000000000002B32                   4324+         dc ad(@PER_1884)                                               02-DCCCA
00002AD0 00000000000000C0                   4325+         dc ad(192)                                                     02-DCCCA
00002AD8 0000000000000000                   4326+         dc ad(0)                                                       02-DCCCA
00002AE0 0000000000001000                   4327+         dc ad(4096)                                                    02-DCCCA
00002AE8 20                                 4328+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002AE9 03                                 4329+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002AEA 03                                 4330+         dc al1(3)                                                      02-DCCCA
00002AEB 08                                 4331+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002AEC 00                                 4332+         dc bl.8'00000000'                                              02-DCCCA
00002AED 000000                             4333+         dc al3(0)                                                      02-DCCCA
00002AF0 0000000000002A9C                   4334+         dc ad(@LNAME1884)                                              02-DCCCA
00002AF8                                    4335+         ds 0d                                                          02-DCCCA
00002AF8 0000000000002AC0                   4336+         dc ad($eye0097)                                                02-DCCCA
00002B00 0000000000000000                   4337+         dc ad(0)                                                       02-DCCCA
00002B08                                    4338+         ds    0d                                                       01-DCCPR
                                            4339+         entry rd_kafka_coord_cache_expire                              01-DCCPR
00002B08                                    4340+rd_kafka_coord_cache_expire ds 0d                                       01-DCCPR
00002B08                                    4341+@REGION_1884_1 ds 0h                                                    01-DCCPR
00002B08 EBEC D008 0024          00000008   4342+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002B0E E3E0 D088 0004          00000088   4343+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002B14 E3C0 D090 0004          00000090   4344+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002B1A B904 002E                          4345+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002B1E E3B0 C018 0004          00000018   4346+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002B24 A7EB 00C0               000000C0   4347+         aghi  14,192              increase by frame size               01-DCCPR
00002B28 E3E0 C020 0021          00000020   4348+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002B2E 4720 B020               00000020   4349+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page   90 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002B32                                    4350+@PER_1884 ds   0h                                                       01-DCCPR
00002B32 EBDE 2080 0024          00000080   4351+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002B38 E3C0 2090 0024          00000090   4352+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002B3E B904 00D2                          4353+         lgr   13,2                set real frame pointer               01-DCCPR
00002B42 B904 00CF                          4354+         lgr   12,15               set base reg                         01-DCCPR
                        00002B08            4355+         using @REGION_1884_1,12                                        01-DCCPR
                                            4356 * ******* End of Prologue
                                            4357 * *
00002B46 E330 1000 0004          00000000   4358          LG    3,0(0,1)    ; cc
                                            4359 * ***           rd_kafka_coord_cache_entry_t *cce, *next;
                                            4360 * ***           rd_ts_t expire = rd_clock() - cc->cc_expire_thres;
00002B4C E3F0 C078 0004          00002B80   4361          LG    15,@lit_1884_109 ; rd_clock
00002B52                                    4362 @@gen_label178 DS    0H
00002B52 05EF                               4363          BALR  14,15
00002B54                                    4364 @@gen_label179 DS    0H
00002B54 B904 004F                          4365          LGR   4,15
00002B58 E340 3018 0009          00000018   4366          SG    4,24(0,3)
                                            4367 * ***
                                            4368 * ***           next = (*(((struct rd_kafka_coord_cache_head_s *)((&cc\
                                            4369 * ->cc_entries)->tqh_last))->tqh_last));
00002B5E E3F0 3008 0004          00000008   4370          LG    15,8(0,3)   ; offset of tqh_last in rd_kafka_coord_cache*
                                                                _head_s
00002B64 E3F0 F008 0004          00000008   4371          LG    15,8(0,15)  ; offset of tqh_last in rd_kafka_coord_cache*
                                                                _head_s
00002B6A E320 F000 0004          00000000   4372          LG    2,0(0,15)
                                            4373 * ***           while (next) {
00002B70 47F0 C0C4               00002BCC   4374          B     @L644
00002B78                                    4375          DS    0D
00002B78 000000C0                           4376 @FRAMESIZE_1884 DC F'192'
00002B7C 00000000
00002B80 0000000000000B60                   4377 @lit_1884_109 DC AD(rd_clock)
00002B88 00000000000028E0                   4378 @lit_1884_110 DC AD(rd_kafka_coord_cache_entry_destroy)
00002B90                                    4379 @L643    DS    0H
                                            4380 * ***                   cce = next;
00002B90 B904 00F2                          4381          LGR   15,2        ; cce
                                            4382 * ***
                                            4383 * ***                   if (cce->cce_ts_used > expire)
00002B94 E310 2020 0004          00000020   4384          LG    1,32(0,2)   ; offset of cce_ts_used in rd_kafka_coord_ca*
                                                                che_entry_s
00002B9A B920 0014                          4385          CGR   1,4
00002B9E 4720 C0CC               00002BD4   4386          BH    @L641
                                            4387 * ***                           break;
00002BA2                                    4388 @L645    DS    0H
                                            4389 * ***
                                            4390 * ***                   next = (*(((struct rd_kafka_coord_cache_head_s\
                                            4391 *  *)((cce)->cce_link .tqe_prev))->tqh_last));
00002BA2 E310 F008 0004          00000008   4392          LG    1,8(0,15)   ; offset of tqe_prev in 0000138
00002BA8 E310 1008 0004          00000008   4393          LG    1,8(0,1)    ; offset of tqh_last in rd_kafka_coord_cache*
                                                                _head_s
00002BAE E320 1000 0004          00000000   4394          LG    2,0(0,1)
                                            4395 * ***                   rd_kafka_coord_cache_entry_destroy(cc, cce);
00002BB4 E330 D0B0 0024          000000B0   4396          STG   3,176(0,13)
                                                                                                                           Page   91 
  Active Usings: @REGION_1884_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002BBA E3F0 D0B8 0024          000000B8   4397          STG   15,184(0,13)
00002BC0 4110 D0B0               000000B0   4398          LA    1,176(0,13)
00002BC4 E3F0 C080 0004          00002B88   4399          LG    15,@lit_1884_110 ; rd_kafka_coord_cache_entry_destroy
00002BCA                                    4400 @@gen_label181 DS    0H
00002BCA 05EF                               4401          BALR  14,15
00002BCC                                    4402 @@gen_label182 DS    0H
                                            4403 * ***           }
00002BCC                                    4404 @L644    DS    0H
00002BCC B902 00F2                          4405          LTGR  15,2
00002BD0 4770 C088               00002B90   4406          BNZ   @L643
00002BD4                                    4407 @L641    DS    0H
                                            4408 * ***   }
00002BD4                                    4409 @ret_lab_1884 DS 0H
                                            4410 * * **** Start of Epilogue
                                            4411          DCCEPIL
00002BD4                                    4412+         ds 0h                                                          01-DCCEP
                                            4413+* Epilog
00002BD4 D707 D088 D088 00000088 00000088   4414+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002BDA E3D0 D080 0004          00000080   4415+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002BE0 E3C0 D090 0004          00000090   4416+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002BE6 E3B0 C018 0004          00000018   4417+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002BEC E3C0 B010 0021          00000010   4418+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002BF2 E3E0 D008 0004          00000008   4419+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002BF8 EB1C D020 0004          00000020   4420+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002BFE 078E                               4421+         bcr 8,14                if same dsab, just return              01-DCCEP
00002C00 E3F0 D010 0024          00000010   4422+         stg 15,16(0,13)         save return code                       01-DCCEP
00002C06 E300 D018 0024          00000018   4423+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002C0C E3F0 D090 0004          00000090   4424+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002C12 E3F0 F018 0004          00000018   4425+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002C18 47F0 F040               00000040   4426+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4427+* End of Epilog
                                            4428 * * **** End of Epilogue
                                            4429          DROP  12
                                            4430 *
                                            4431 *   DSECT for automatic variables in "rd_kafka_coord_cache_expire"
                                            4432 *      (FUNCTION #1884)
                                            4433 *
00000000                00000000 000000B0   4434 @AUTO#rd_kafka_coord_cache_expire DSECT
00000000                                    4435          DS    XL168
000000A8                                    4436 rd_kafka_coord_cache_expire#expire#0 DS 8XL1 ; expire
                                            4437 *
00002C1C                00000000 0000685E   4438 @CODE    CSECT
                                            4439 *
                                            4440 *
                                            4441 *
                                            4442 * ....... start of rd_kafka_coord_cache_find
00002C1C                                    4443 @LNAME1958 DS  0H
00002C1C 00000019                           4444          DC    X'00000019'
00002C20 99846D9281869281                   4445          DC    C'rd_kafka_coord_cache_find'
00002C39 00                                 4446          DC    X'00'
                                            4447 rd_kafka_coord_cache_find DCCPRLG CINDEX=1958,BASER=12,FRAME=176,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1958
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4448          macro
                                            4449          dccextrn &m
                                            4450          gblc    &$dccext(1000)
                                            4451          gbla    &$dccexti
                                            4452          lcla    &i
                                            4453 &$dccext(&$dccexti+1) setc    '&m'
                                            4454 &i       seta    1
                                            4455 .loop    aif    (&i gt &$dccexti).around
                                            4456          aif    ('&$dccext(&i)' eq '&m').getout
                                            4457 &i       seta    &i+1
                                            4458          ago     .loop
                                            4459 .around  anop
                                            4460 &$dccexti seta &$dccexti+1
                                            4461          extrn  &m
                                            4462 .getout  anop
                                            4463          mend
00002C40                                    4464+$eye0100    ds    0d                                                    02-DCCCA
00002C40 C4C3C3                             4465+         dc cl3'DCC'                                                    02-DCCCA
00002C43 01                                 4466+         dc xl1'01' format one                                          02-DCCCA
00002C44 00000000                           4467+         dc a(0)                                                        02-DCCCA
00002C48 0000000000002CB2                   4468+         dc ad(@PER_1958)                                               02-DCCCA
00002C50 00000000000000B0                   4469+         dc ad(176)                                                     02-DCCCA
00002C58 0000000000000000                   4470+         dc ad(0)                                                       02-DCCCA
00002C60 0000000000001000                   4471+         dc ad(4096)                                                    02-DCCCA
00002C68 20                                 4472+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002C69 03                                 4473+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002C6A 03                                 4474+         dc al1(3)                                                      02-DCCCA
00002C6B 08                                 4475+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002C6C 00                                 4476+         dc bl.8'00000000'                                              02-DCCCA
00002C6D 000000                             4477+         dc al3(0)                                                      02-DCCCA
00002C70 0000000000002C1C                   4478+         dc ad(@LNAME1958)                                              02-DCCCA
00002C78                                    4479+         ds 0d                                                          02-DCCCA
00002C78 0000000000002C40                   4480+         dc ad($eye0100)                                                02-DCCCA
00002C80 0000000000000000                   4481+         dc ad(0)                                                       02-DCCCA
00002C88                                    4482+         ds    0d                                                       01-DCCPR
00002C88                                    4483+rd_kafka_coord_cache_find ds 0d                                         01-DCCPR
00002C88                                    4484+@REGION_1958_1 ds 0h                                                    01-DCCPR
00002C88 EBEC D008 0024          00000008   4485+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002C8E E3E0 D088 0004          00000088   4486+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002C94 E3C0 D090 0004          00000090   4487+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002C9A B904 002E                          4488+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002C9E E3B0 C018 0004          00000018   4489+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002CA4 A7EB 00B0               000000B0   4490+         aghi  14,176              increase by frame size               01-DCCPR
00002CA8 E3E0 C020 0021          00000020   4491+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002CAE 4720 B020               00000020   4492+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002CB2                                    4493+@PER_1958 ds   0h                                                       01-DCCPR
00002CB2 EBDE 2080 0024          00000080   4494+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002CB8 E3C0 2090 0024          00000090   4495+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002CBE B904 00D2                          4496+         lgr   13,2                set real frame pointer               01-DCCPR
00002CC2 B904 00CF                          4497+         lgr   12,15               set base reg                         01-DCCPR
                        00002C88            4498+         using @REGION_1958_1,12                                        01-DCCPR
                                            4499 * ******* End of Prologue
                                                                                                                           Page   93 
  Active Usings: @REGION_1958_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4500 * *
00002CC6 E330 1000 0004          00000000   4501          LG    3,0(0,1)    ; cc
                                            4502 * ***           rd_kafka_coord_cache_entry_t *cce;
                                            4503 * ***
                                            4504 * ***           for ((cce) = ((&cc->cc_entries)->tqh_first); (cce) != \
                                            4505 * (((void *)0)); (cce) = ((cce)->cce_link .tqe_next)) {
00002CCC E320 3000 0004          00000000   4506          LG    2,0(0,3)    ; cc
00002CD2 47F0 C140               00002DC8   4507          B     @L647
00002CD8                                    4508          DS    0D
00002CD8 000000B0                           4509 @FRAMESIZE_1958 DC F'176'
00002CDC 00000000
00002CE0 0000000000000B60                   4510 @lit_1958_112 DC AD(rd_clock)
00002CE8                                    4511 @L646    DS    0H
                                            4512 * ***                   if (cce->cce_coordtype == coordtype &&
00002CE8 58F0 2010               00000010   4513          L     15,16(0,2)  ; offset of cce_coordtype in rd_kafka_coord_*
                                                                cache_entry_s
00002CEC 59F0 100C               0000000C   4514          C     15,12(0,1)
00002CF0 4770 C13A               00002DC2   4515          BNE   @L650
                                            4516 * ***                       !__strcmp(cce->cce_coordkey,coordkey)) {
00002CF4 E3F0 2018 0004          00000018   4517          LG    15,24(0,2)
00002CFA E340 1010 0004          00000010   4518          LG    4,16(0,1)
00002D00 4100 0000               00000000   4519          LA    0,0(0,0)
00002D04 A759 0000               00000000   4520          LGHI  5,0
00002D08                                    4521 @@gen_label185 DS 0H
00002D08 B25D 00F4                          4522          CLST  15,4
00002D0C 4710 C080               00002D08   4523          BC  1,@@gen_label185
00002D10 4780 C09C               00002D24   4524          BE    @@gen_label186
00002D14 E350 F000 0090          00000000   4525          LLGC  5,0(0,15)
00002D1A E3F0 4000 0090          00000000   4526          LLGC  15,0(0,4)
00002D20 B90B 005F                          4527          SLGR  5,15
00002D24                                    4528 @@gen_label186 DS 0H
00002D24 1255                               4529          LTR   5,5
00002D26 4770 C13A               00002DC2   4530          BNZ   @L650
                                            4531 * ***
                                            4532 * ***                           cce->cce_ts_used = rd_clock();
00002D2A E3F0 C058 0004          00002CE0   4533          LG    15,@lit_1958_112 ; rd_clock
00002D30                                    4534 @@gen_label188 DS    0H
00002D30 05EF                               4535          BALR  14,15
00002D32                                    4536 @@gen_label189 DS    0H
00002D32 E3F0 2020 0024          00000020   4537          STG   15,32(0,2)
                                            4538 * ***                           if (((&cc->cc_entries)->tqh_first) != \
                                            4539 * cce) {
00002D38 E3F0 3000 0004          00000000   4540          LG    15,0(0,3)   ; cc
00002D3E B920 00F2                          4541          CGR   15,2
00002D42 4780 C132               00002DBA   4542          BE    @L651
                                            4543 * ***
                                            4544 * ***                                   do {   if (((cce)->cce_link .t\
                                            4545 * qe_next) != (((void *)0))) (cce)->cce_link .tqe_next->cce_link .tqe_\
                                            4546 * prev = (cce)->cce_link .tqe_prev; else (&cc->cc_entries)->tqh_last =\
                                            4547 *  (cce)->cce_link .tqe_prev; *(cce)->cce_link .tqe_prev = (cce)->cce_\
                                            4548 * link .tqe_next; ; } while ( 0);
00002D46                                    4549 @L652    DS    0H
                                                                                                                           Page   94 
  Active Usings: @REGION_1958_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002D46 E3F0 2000 0002          00000000   4550          LTG   15,0(0,2)   ; cce
00002D4C 4780 C0DE               00002D66   4551          BE    @L655
00002D50 E3F0 2000 0004          00000000   4552          LG    15,0(0,2)   ; cce
00002D56 E310 2008 0004          00000008   4553          LG    1,8(0,2)    ; offset of tqe_prev in 0000138
00002D5C E310 F008 0024          00000008   4554          STG   1,8(0,15)   ; offset of tqe_prev in 0000138
00002D62 47F0 C0EA               00002D72   4555          B     @L656
00002D66                                    4556 @L655    DS    0H
00002D66 E3F0 2008 0004          00000008   4557          LG    15,8(0,2)   ; offset of tqe_prev in 0000138
00002D6C E3F0 3008 0024          00000008   4558          STG   15,8(0,3)   ; offset of tqh_last in rd_kafka_coord_cache*
                                                                _head_s
00002D72                                    4559 @L656    DS    0H
00002D72 E3F0 2008 0004          00000008   4560          LG    15,8(0,2)   ; offset of tqe_prev in 0000138
00002D78 E310 2000 0004          00000000   4561          LG    1,0(0,2)    ; cce
00002D7E E310 F000 0024          00000000   4562          STG   1,0(0,15)
                                            4563 * ***
                                            4564 * ***                                   do {  if (((cce)->cce_link .tq\
                                            4565 * e_next = (&cc->cc_entries)->tqh_first) != (((void *)0))) (&cc->cc_en\
                                            4566 * tries)->tqh_first->cce_link .tqe_prev = &(cce)->cce_link .tqe_next; \
                                            4567 * else (&cc->cc_entries)->tqh_last = &(cce)->cce_link .tqe_next; (&cc-\
                                            4568 * >cc_entries)->tqh_first = (cce); (cce)->cce_link .tqe_prev = &(&cc->\
                                            4569 * cc_entries)->tqh_first; } while ( 0);
00002D84                                    4570 @L657    DS    0H
00002D84 E3F0 3000 0004          00000000   4571          LG    15,0(0,3)   ; cc
00002D8A E3F0 2000 0024          00000000   4572          STG   15,0(0,2)
00002D90 B902 00FF                          4573          LTGR  15,15
00002D94 4780 C120               00002DA8   4574          BE    @L660
00002D98 E3F0 3000 0004          00000000   4575          LG    15,0(0,3)   ; cc
00002D9E E320 F008 0024          00000008   4576          STG   2,8(0,15)   ; offset of tqe_prev in 0000138
00002DA4 47F0 C126               00002DAE   4577          B     @L661
00002DA8                                    4578 @L660    DS    0H
00002DA8 E320 3008 0024          00000008   4579          STG   2,8(0,3)    ; offset of tqh_last in rd_kafka_coord_cache*
                                                                _head_s
00002DAE                                    4580 @L661    DS    0H
00002DAE E320 3000 0024          00000000   4581          STG   2,0(0,3)    ; cc
00002DB4 E330 2008 0024          00000008   4582          STG   3,8(0,2)    ; offset of tqe_prev in 0000138
                                            4583 * ***
                                            4584 * ***                           }
00002DBA                                    4585 @L651    DS    0H
                                            4586 * ***                           return cce;
00002DBA B904 00F2                          4587          LGR   15,2
00002DBE 47F0 C14C               00002DD4   4588          B     @ret_lab_1958
                                            4589 * ***                   }
00002DC2                                    4590 @L650    DS    0H
                                            4591 * ***           }
00002DC2 E320 2000 0004          00000000   4592          LG    2,0(0,2)    ; cce
00002DC8                                    4593 @L647    DS    0H
00002DC8 B902 00F2                          4594          LTGR  15,2
00002DCC 4770 C060               00002CE8   4595          BNE   @L646
                                            4596 * ***
                                            4597 * ***           return ((void *)0);
00002DD0 A7F9 0000               00000000   4598          LGHI  15,0        ; 0
                                            4599 * ***   }
                                                                                                                           Page   95 
  Active Usings: @REGION_1958_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002DD4                                    4600 @ret_lab_1958 DS 0H
                                            4601 * * **** Start of Epilogue
                                            4602          DCCEPIL
00002DD4                                    4603+         ds 0h                                                          01-DCCEP
                                            4604+* Epilog
00002DD4 D707 D088 D088 00000088 00000088   4605+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002DDA E3D0 D080 0004          00000080   4606+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002DE0 E3C0 D090 0004          00000090   4607+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002DE6 E3B0 C018 0004          00000018   4608+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002DEC E3C0 B010 0021          00000010   4609+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002DF2 E3E0 D008 0004          00000008   4610+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002DF8 EB1C D020 0004          00000020   4611+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002DFE 078E                               4612+         bcr 8,14                if same dsab, just return              01-DCCEP
00002E00 E3F0 D010 0024          00000010   4613+         stg 15,16(0,13)         save return code                       01-DCCEP
00002E06 E300 D018 0024          00000018   4614+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002E0C E3F0 D090 0004          00000090   4615+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E12 E3F0 F018 0004          00000018   4616+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E18 47F0 F040               00000040   4617+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4618+* End of Epilog
                                            4619 * * **** End of Epilogue
                                            4620          DROP  12
                                            4621 *
                                            4622 *   DSECT for automatic variables in "rd_kafka_coord_cache_find"
                                            4623 *      (FUNCTION #1958)
                                            4624 *
00000000                00000000 000000A8   4625 @AUTO#rd_kafka_coord_cache_find DSECT
00000000                                    4626          DS    XL168
                                            4627 *
00002E1C                00000000 0000685E   4628 @CODE    CSECT
                                            4629 *
                                            4630 *
                                            4631 *
                                            4632 * ....... start of rd_kafka_coord_cache_get
                                            4633 rd_kafka_coord_cache_get ALIAS X'99846D92818692816D83969699846D83818388*
                                                                856D8785A3'
00002E1C                                    4634 @LNAME1959 DS  0H
00002E1C 00000018                           4635          DC    X'00000018'
00002E20 99846D9281869281                   4636          DC    C'rd_kafka_coord_cache_get'
00002E38 00                                 4637          DC    X'00'
                                            4638 rd_kafka_coord_cache_get DCCPRLG CINDEX=1959,BASER=12,FRAME=200,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1959
                                            4639          macro
                                            4640          dccextrn &m
                                            4641          gblc    &$dccext(1000)
                                            4642          gbla    &$dccexti
                                            4643          lcla    &i
                                            4644 &$dccext(&$dccexti+1) setc    '&m'
                                            4645 &i       seta    1
                                            4646 .loop    aif    (&i gt &$dccexti).around
                                            4647          aif    ('&$dccext(&i)' eq '&m').getout
                                            4648 &i       seta    &i+1
                                            4649          ago     .loop
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4650 .around  anop
                                            4651 &$dccexti seta &$dccexti+1
                                            4652          extrn  &m
                                            4653 .getout  anop
                                            4654          mend
00002E40                                    4655+$eye0103    ds    0d                                                    02-DCCCA
00002E40 C4C3C3                             4656+         dc cl3'DCC'                                                    02-DCCCA
00002E43 01                                 4657+         dc xl1'01' format one                                          02-DCCCA
00002E44 00000000                           4658+         dc a(0)                                                        02-DCCCA
00002E48 0000000000002EB2                   4659+         dc ad(@PER_1959)                                               02-DCCCA
00002E50 00000000000000C8                   4660+         dc ad(200)                                                     02-DCCCA
00002E58 0000000000000000                   4661+         dc ad(0)                                                       02-DCCCA
00002E60 0000000000001000                   4662+         dc ad(4096)                                                    02-DCCCA
00002E68 20                                 4663+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002E69 03                                 4664+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002E6A 03                                 4665+         dc al1(3)                                                      02-DCCCA
00002E6B 08                                 4666+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002E6C 00                                 4667+         dc bl.8'00000000'                                              02-DCCCA
00002E6D 000000                             4668+         dc al3(0)                                                      02-DCCCA
00002E70 0000000000002E1C                   4669+         dc ad(@LNAME1959)                                              02-DCCCA
00002E78                                    4670+         ds 0d                                                          02-DCCCA
00002E78 0000000000002E40                   4671+         dc ad($eye0103)                                                02-DCCCA
00002E80 0000000000000000                   4672+         dc ad(0)                                                       02-DCCCA
00002E88                                    4673+         ds    0d                                                       01-DCCPR
                                            4674+         entry rd_kafka_coord_cache_get                                 01-DCCPR
00002E88                                    4675+rd_kafka_coord_cache_get ds 0d                                          01-DCCPR
00002E88                                    4676+@REGION_1959_1 ds 0h                                                    01-DCCPR
00002E88 EBEC D008 0024          00000008   4677+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002E8E E3E0 D088 0004          00000088   4678+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002E94 E3C0 D090 0004          00000090   4679+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002E9A B904 002E                          4680+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002E9E E3B0 C018 0004          00000018   4681+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002EA4 A7EB 00C8               000000C8   4682+         aghi  14,200              increase by frame size               01-DCCPR
00002EA8 E3E0 C020 0021          00000020   4683+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002EAE 4720 B020               00000020   4684+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002EB2                                    4685+@PER_1959 ds   0h                                                       01-DCCPR
00002EB2 EBDE 2080 0024          00000080   4686+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002EB8 E3C0 2090 0024          00000090   4687+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002EBE B904 00D2                          4688+         lgr   13,2                set real frame pointer               01-DCCPR
00002EC2 B904 00CF                          4689+         lgr   12,15               set base reg                         01-DCCPR
                        00002E88            4690+         using @REGION_1959_1,12                                        01-DCCPR
                                            4691 * ******* End of Prologue
                                            4692 * *
                                            4693 * ***           rd_kafka_coord_cache_entry_t *cce;
                                            4694 * ***
                                            4695 * ***           cce = rd_kafka_coord_cache_find(cc, coordtype, coordke\
                                            4696 * y);
00002EC6 E3F0 1000 0004          00000000   4697          LG    15,0(0,1)   ; cc
00002ECC E3F0 D0B0 0024          000000B0   4698          STG   15,176(0,13)
00002ED2 E3F0 100C 0014          0000000C   4699          LGF   15,12(0,1)  ; coordtype
00002ED8 E3F0 D0B8 0024          000000B8   4700          STG   15,184(0,13)
00002EDE E3F0 1010 0004          00000010   4701          LG    15,16(0,1)  ; coordkey
                                                                                                                           Page   97 
  Active Usings: @REGION_1959_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002EE4 E3F0 D0C0 0024          000000C0   4702          STG   15,192(0,13)
00002EEA 4110 D0B0               000000B0   4703          LA    1,176(0,13)
00002EEE E3F0 C090 0004          00002F18   4704          LG    15,@lit_1959_115 ; rd_kafka_coord_cache_find
00002EF4                                    4705 @@gen_label194 DS    0H
00002EF4 05EF                               4706          BALR  14,15
00002EF6                                    4707 @@gen_label195 DS    0H
00002EF6 B904 002F                          4708          LGR   2,15
                                            4709 * ***           if (!cce)
00002EFA B902 00F2                          4710          LTGR  15,2
00002EFE 4770 C0A0               00002F28   4711          BNZ   @L662
                                            4712 * ***                   return ((void *)0);
00002F02 A7F9 0000               00000000   4713          LGHI  15,0        ; 0
00002F06 47F0 C0C8               00002F50   4714          B     @ret_lab_1959
00002F10                                    4715          DS    0D
00002F10 000000C8                           4716 @FRAMESIZE_1959 DC F'200'
00002F14 00000000
00002F18 0000000000002C88                   4717 @lit_1959_115 DC AD(rd_kafka_coord_cache_find)
00002F20 0000000000000240                   4718 @lit_1959_117 DC AD(rd_atomic32_add)
00002F28                                    4719 @L662    DS    0H
                                            4720 * ***
                                            4721 * ***           rd_atomic32_add(&(cce->cce_rkb)->rkb_refcnt, 1);
00002F28 E3F0 2028 0004          00000028   4722          LG    15,40(0,2)  ; offset of cce_rkb in rd_kafka_coord_cache_*
                                                                entry_s
00002F2E 41F0 FFA0               00000FA0   4723          LA    15,4000(0,15)
00002F32 E3F0 D0B0 0024          000000B0   4724          STG   15,176(0,13)
00002F38 E548 D0B8 0001          000000B8   4725          MVGHI 184(13),1
00002F3E 4110 D0B0               000000B0   4726          LA    1,176(0,13)
00002F42 E3F0 C098 0004          00002F20   4727          LG    15,@lit_1959_117 ; rd_atomic32_add
00002F48                                    4728 @@gen_label197 DS    0H
00002F48 05EF                               4729          BALR  14,15
00002F4A                                    4730 @@gen_label198 DS    0H
                                            4731 * ***           return cce->cce_rkb;
00002F4A E3F0 2028 0004          00000028   4732          LG    15,40(0,2)  ; offset of cce_rkb in rd_kafka_coord_cache_*
                                                                entry_s
                                            4733 * ***   }
00002F50                                    4734 @ret_lab_1959 DS 0H
                                            4735 * * **** Start of Epilogue
                                            4736          DCCEPIL
00002F50                                    4737+         ds 0h                                                          01-DCCEP
                                            4738+* Epilog
00002F50 D707 D088 D088 00000088 00000088   4739+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002F56 E3D0 D080 0004          00000080   4740+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002F5C E3C0 D090 0004          00000090   4741+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002F62 E3B0 C018 0004          00000018   4742+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002F68 E3C0 B010 0021          00000010   4743+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002F6E E3E0 D008 0004          00000008   4744+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002F74 EB1C D020 0004          00000020   4745+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002F7A 078E                               4746+         bcr 8,14                if same dsab, just return              01-DCCEP
00002F7C E3F0 D010 0024          00000010   4747+         stg 15,16(0,13)         save return code                       01-DCCEP
00002F82 E300 D018 0024          00000018   4748+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002F88 E3F0 D090 0004          00000090   4749+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002F8E E3F0 F018 0004          00000018   4750+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   98 
  Active Usings: @REGION_1959_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002F94 47F0 F040               00000040   4751+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4752+* End of Epilog
                                            4753 * * **** End of Epilogue
                                            4754          DROP  12
                                            4755 *
                                            4756 *   DSECT for automatic variables in "rd_kafka_coord_cache_get"
                                            4757 *      (FUNCTION #1959)
                                            4758 *
00000000                00000000 000000A8   4759 @AUTO#rd_kafka_coord_cache_get DSECT
00000000                                    4760          DS    XL168
                                            4761 *
00002F98                00000000 0000685E   4762 @CODE    CSECT
                                            4763 *
                                            4764 *
                                            4765 *
                                            4766 * ....... start of rd_kafka_coord_cache_add
00002F98                                    4767 @LNAME1960 DS  0H
00002F98 00000018                           4768          DC    X'00000018'
00002F9C 99846D9281869281                   4769          DC    C'rd_kafka_coord_cache_add'
00002FB4 00                                 4770          DC    X'00'
                                            4771 rd_kafka_coord_cache_add DCCPRLG CINDEX=1960,BASER=12,FRAME=200,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1960
                                            4772          macro
                                            4773          dccextrn &m
                                            4774          gblc    &$dccext(1000)
                                            4775          gbla    &$dccexti
                                            4776          lcla    &i
                                            4777 &$dccext(&$dccexti+1) setc    '&m'
                                            4778 &i       seta    1
                                            4779 .loop    aif    (&i gt &$dccexti).around
                                            4780          aif    ('&$dccext(&i)' eq '&m').getout
                                            4781 &i       seta    &i+1
                                            4782          ago     .loop
                                            4783 .around  anop
                                            4784 &$dccexti seta &$dccexti+1
                                            4785          extrn  &m
                                            4786 .getout  anop
                                            4787          mend
00002FB8                                    4788+$eye0106    ds    0d                                                    02-DCCCA
00002FB8 C4C3C3                             4789+         dc cl3'DCC'                                                    02-DCCCA
00002FBB 01                                 4790+         dc xl1'01' format one                                          02-DCCCA
00002FBC 00000000                           4791+         dc a(0)                                                        02-DCCCA
00002FC0 000000000000302A                   4792+         dc ad(@PER_1960)                                               02-DCCCA
00002FC8 00000000000000C8                   4793+         dc ad(200)                                                     02-DCCCA
00002FD0 0000000000000000                   4794+         dc ad(0)                                                       02-DCCCA
00002FD8 0000000000001000                   4795+         dc ad(4096)                                                    02-DCCCA
00002FE0 20                                 4796+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002FE1 03                                 4797+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002FE2 03                                 4798+         dc al1(3)                                                      02-DCCCA
00002FE3 08                                 4799+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002FE4 00                                 4800+         dc bl.8'00000000'                                              02-DCCCA
00002FE5 000000                             4801+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   99 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002FE8 0000000000002F98                   4802+         dc ad(@LNAME1960)                                              02-DCCCA
00002FF0                                    4803+         ds 0d                                                          02-DCCCA
00002FF0 0000000000002FB8                   4804+         dc ad($eye0106)                                                02-DCCCA
00002FF8 0000000000000000                   4805+         dc ad(0)                                                       02-DCCCA
00003000                                    4806+         ds    0d                                                       01-DCCPR
00003000                                    4807+rd_kafka_coord_cache_add ds 0d                                          01-DCCPR
00003000                                    4808+@REGION_1960_1 ds 0h                                                    01-DCCPR
00003000 EBEC D008 0024          00000008   4809+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003006 E3E0 D088 0004          00000088   4810+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000300C E3C0 D090 0004          00000090   4811+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003012 B904 002E                          4812+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003016 E3B0 C018 0004          00000018   4813+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000301C A7EB 00C8               000000C8   4814+         aghi  14,200              increase by frame size               01-DCCPR
00003020 E3E0 C020 0021          00000020   4815+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003026 4720 B020               00000020   4816+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000302A                                    4817+@PER_1960 ds   0h                                                       01-DCCPR
0000302A EBDE 2080 0024          00000080   4818+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003030 E3C0 2090 0024          00000090   4819+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003036 B904 00D2                          4820+         lgr   13,2                set real frame pointer               01-DCCPR
0000303A B904 00CF                          4821+         lgr   12,15               set base reg                         01-DCCPR
                        00003000            4822+         using @REGION_1960_1,12                                        01-DCCPR
0000303E B904 0051                          4823          LGR   5,1         ; ptr to parm area
                                            4824 * ******* End of Prologue
                                            4825 * *
00003042 E330 5018 0004          00000018   4826          LG    3,24(0,5)   ; rkb
00003048 E340 5000 0004          00000000   4827          LG    4,0(0,5)    ; cc
                                            4828 * ***           rd_kafka_coord_cache_entry_t *cce;
                                            4829 * ***
                                            4830 * ***           if (!(cce = rd_kafka_coord_cache_find(cc, coordtype, c\
                                            4831 * oordkey))) {
0000304E E340 D0B0 0024          000000B0   4832          STG   4,176(0,13)
00003054 E3F0 500C 0014          0000000C   4833          LGF   15,12(0,5)  ; coordtype
0000305A E3F0 D0B8 0024          000000B8   4834          STG   15,184(0,13)
00003060 E3F0 5010 0004          00000010   4835          LG    15,16(0,5)  ; coordkey
00003066 E3F0 D0C0 0024          000000C0   4836          STG   15,192(0,13)
0000306C 4110 D0B0               000000B0   4837          LA    1,176(0,13)
00003070 E3F0 C130 0004          00003130   4838          LG    15,@lit_1960_119 ; rd_kafka_coord_cache_find
00003076                                    4839 @@gen_label199 DS    0H
00003076 05EF                               4840          BALR  14,15
00003078                                    4841 @@gen_label200 DS    0H
00003078 B902 002F                          4842          LTGR  2,15        ; cce
0000307C 4770 C18E               0000318E   4843          BNZ   @L663
                                            4844 * ***                   if (cc->cc_cnt > 10) {
00003080 E55C 4010 000A          00000010   4845          CHSI  16(4),10
00003086 47D0 C0B4               000030B4   4846          BNH   @L664
                                            4847 * ***
                                            4848 * ***                           rd_kafka_coord_cache_entry_t *rem =
                                            4849 * ***                                   (*(((struct rd_kafka_coord_cac\
                                            4850 * he_head_s *)((&cc->cc_entries)->tqh_last))->tqh_last));
0000308A E3F0 4008 0004          00000008   4851          LG    15,8(0,4)   ; offset of tqh_last in rd_kafka_coord_cache*
                                                                _head_s
00003090 E3F0 F008 0004          00000008   4852          LG    15,8(0,15)  ; offset of tqh_last in rd_kafka_coord_cache*
                                                                                                                           Page  100 
  Active Usings: @REGION_1960_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                _head_s
00003096 E3F0 F000 0004          00000000   4853          LG    15,0(0,15)
                                            4854 * ***
                                            4855 * ***                           rd_kafka_coord_cache_entry_destroy(cc,\
                                            4856 *  rem);
0000309C E340 D0B0 0024          000000B0   4857          STG   4,176(0,13)
000030A2 E3F0 D0B8 0024          000000B8   4858          STG   15,184(0,13)
000030A8 4110 D0B0               000000B0   4859          LA    1,176(0,13)
000030AC E3F0 C138 0004          00003138   4860          LG    15,@lit_1960_120 ; rd_kafka_coord_cache_entry_destroy
000030B2                                    4861 @@gen_label203 DS    0H
000030B2 05EF                               4862          BALR  14,15
000030B4                                    4863 @@gen_label204 DS    0H
                                            4864 * ***                   }
000030B4                                    4865 @L664    DS    0H
                                            4866 * ***
                                            4867 * ***                   cce = rd_calloc(1, sizeof(*cce));
000030B4 E548 D0B0 0001          000000B0   4868          MVGHI 176(13),1
000030BA E548 D0B8 0030          000000B8   4869          MVGHI 184(13),48
000030C0 4110 D0B0               000000B0   4870          LA    1,176(0,13)
000030C4 E3F0 C140 0004          00003140   4871          LG    15,@lit_1960_121 ; rd_calloc
000030CA                                    4872 @@gen_label205 DS    0H
000030CA 05EF                               4873          BALR  14,15
000030CC                                    4874 @@gen_label206 DS    0H
000030CC B904 002F                          4875          LGR   2,15
                                            4876 * ***                   cce->cce_coordtype = coordtype;
000030D0 5810 500C               0000000C   4877          L     1,12(0,5)   ; coordtype
000030D4 5010 2010               00000010   4878          ST    1,16(0,2)   ; offset of cce_coordtype in rd_kafka_coord_*
                                                                cache_entry_s
                                            4879 * ***                   cce->cce_coordkey = rd_strdup(coordkey);
000030D8 E3F0 5010 0004          00000010   4880          LG    15,16(0,5)  ; coordkey
000030DE E3F0 D0B0 0024          000000B0   4881          STG   15,176(0,13)
000030E4 4110 D0B0               000000B0   4882          LA    1,176(0,13)
000030E8 E3F0 C148 0004          00003148   4883          LG    15,@lit_1960_122 ; rd_strdup
000030EE                                    4884 @@gen_label207 DS    0H
000030EE 05EF                               4885          BALR  14,15
000030F0                                    4886 @@gen_label208 DS    0H
000030F0 E3F0 2018 0024          00000018   4887          STG   15,24(0,2)
                                            4888 * ***                   cce->cce_ts_used = rd_clock();
000030F6 E3F0 C150 0004          00003150   4889          LG    15,@lit_1960_123 ; rd_clock
000030FC                                    4890 @@gen_label209 DS    0H
000030FC 05EF                               4891          BALR  14,15
000030FE                                    4892 @@gen_label210 DS    0H
000030FE E3F0 2020 0024          00000020   4893          STG   15,32(0,2)
                                            4894 * ***
                                            4895 * ***                   do {  if (((cce)->cce_link .tqe_next = (&cc->c\
                                            4896 * c_entries)->tqh_first) != (((void *)0))) (&cc->cc_entries)->tqh_firs\
                                            4897 * t->cce_link .tqe_prev = &(cce)->cce_link .tqe_next; else (&cc->cc_en\
                                            4898 * tries)->tqh_last = &(cce)->cce_link .tqe_next; (&cc->cc_entries)->tq\
                                            4899 * h_first = (cce); (cce)->cce_link .tqe_prev = &(&cc->cc_entries)->tqh\
                                            4900 * _first; } while ( 0);
00003104                                    4901 @L665    DS    0H
00003104 E3F0 4000 0004          00000000   4902          LG    15,0(0,4)   ; cc
                                                                                                                           Page  101 
  Active Usings: @REGION_1960_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000310A E3F0 2000 0024          00000000   4903          STG   15,0(0,2)
00003110 B902 00FF                          4904          LTGR  15,15
00003114 4780 C170               00003170   4905          BE    @L668
00003118 E3F0 4000 0004          00000000   4906          LG    15,0(0,4)   ; cc
0000311E E320 F008 0024          00000008   4907          STG   2,8(0,15)   ; offset of tqe_prev in 0000138
00003124 47F0 C176               00003176   4908          B     @L669
00003128                                    4909          DS    0D
00003128 000000C8                           4910 @FRAMESIZE_1960 DC F'200'
0000312C 00000000
00003130 0000000000002C88                   4911 @lit_1960_119 DC AD(rd_kafka_coord_cache_find)
00003138 00000000000028E0                   4912 @lit_1960_120 DC AD(rd_kafka_coord_cache_entry_destroy)
00003140 0000000000000600                   4913 @lit_1960_121 DC AD(rd_calloc)
00003148 0000000000000878                   4914 @lit_1960_122 DC AD(rd_strdup)
00003150 0000000000000B60                   4915 @lit_1960_123 DC AD(rd_clock)
00003158 00000000000009E8                   4916 @lit_1960_124 DC AD(rd_refcnt_sub0)
00003160 0000000000000000                   4917 @lit_1960_125 DC AD(rd_kafka_broker_destroy_final)
00003168 0000000000000240                   4918 @lit_1960_126 DC AD(rd_atomic32_add)
00003170                                    4919 @L668    DS    0H
00003170 E320 4008 0024          00000008   4920          STG   2,8(0,4)    ; offset of tqh_last in rd_kafka_coord_cache*
                                                                _head_s
00003176                                    4921 @L669    DS    0H
00003176 E320 4000 0024          00000000   4922          STG   2,0(0,4)    ; cc
0000317C E340 2008 0024          00000008   4923          STG   4,8(0,2)    ; offset of tqe_prev in 0000138
                                            4924 * ***                   cc->cc_cnt++;
00003182 58F0 4010               00000010   4925          L     15,16(0,4)
00003186 A7FA 0001               00000001   4926          AHI   15,1
0000318A 50F0 4010               00000010   4927          ST    15,16(0,4)
                                            4928 * ***           }
0000318E                                    4929 @L663    DS    0H
                                            4930 * ***
                                            4931 * ***           if (cce->cce_rkb != rkb) {
0000318E E3F0 2028 0004          00000028   4932          LG    15,40(0,2)  ; offset of cce_rkb in rd_kafka_coord_cache_*
                                                                entry_s
00003194 B920 00F3                          4933          CGR   15,3
00003198 4780 C202               00003202   4934          BE    @L670
                                            4935 * ***                   if (cce->cce_rkb)
0000319C E3F0 2028 0002          00000028   4936          LTG   15,40(0,2)  ; offset of cce_rkb in rd_kafka_coord_cache_*
                                                                entry_s
000031A2 4780 C1E0               000031E0   4937          BZ    @L671
                                            4938 * ***                           do { if (rd_refcnt_sub0(&(cce->cce_rkb\
                                            4939 * )->rkb_refcnt) > 0) break; rd_kafka_broker_destroy_final(cce->cce_rk\
                                            4940 * b); } while (0);
000031A6                                    4941 @L672    DS    0H
000031A6 E3F0 2028 0004          00000028   4942          LG    15,40(0,2)  ; offset of cce_rkb in rd_kafka_coord_cache_*
                                                                entry_s
000031AC 41F0 FFA0               00000FA0   4943          LA    15,4000(0,15)
000031B0 E3F0 D0B0 0024          000000B0   4944          STG   15,176(0,13)
000031B6 4110 D0B0               000000B0   4945          LA    1,176(0,13)
000031BA E3F0 C158 0004          00003158   4946          LG    15,@lit_1960_124 ; rd_refcnt_sub0
000031C0                                    4947 @@gen_label214 DS    0H
000031C0 05EF                               4948          BALR  14,15
000031C2                                    4949 @@gen_label215 DS    0H
                                                                                                                           Page  102 
  Active Usings: @REGION_1960_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000031C2 12FF                               4950          LTR   15,15
000031C4 4720 C1E0               000031E0   4951          BH    @L671
000031C8                                    4952 @L675    DS    0H
000031C8 E3F0 2028 0004          00000028   4953          LG    15,40(0,2)
000031CE E3F0 D0B0 0024          000000B0   4954          STG   15,176(0,13)
000031D4 4110 D0B0               000000B0   4955          LA    1,176(0,13)
000031D8 E3F0 C160 0004          00003160   4956          LG    15,@lit_1960_125 ; rd_kafka_broker_destroy_final
000031DE                                    4957 @@gen_label217 DS    0H
000031DE 05EF                               4958          BALR  14,15
000031E0                                    4959 @@gen_label218 DS    0H
000031E0                                    4960 @L673    DS    0H
                                            4961 * ***                   cce->cce_rkb = rkb;
000031E0                                    4962 @L671    DS    0H
000031E0 E330 2028 0024          00000028   4963          STG   3,40(0,2)   ; offset of cce_rkb in rd_kafka_coord_cache_*
                                                                entry_s
                                            4964 * ***                   rd_atomic32_add(&(rkb)->rkb_refcnt, 1);
000031E6 41F0 3FA0               00000FA0   4965          LA    15,4000(0,3)
000031EA E3F0 D0B0 0024          000000B0   4966          STG   15,176(0,13)
000031F0 E548 D0B8 0001          000000B8   4967          MVGHI 184(13),1
000031F6 4110 D0B0               000000B0   4968          LA    1,176(0,13)
000031FA E3F0 C168 0004          00003168   4969          LG    15,@lit_1960_126 ; rd_atomic32_add
00003200                                    4970 @@gen_label219 DS    0H
00003200 05EF                               4971          BALR  14,15
00003202                                    4972 @@gen_label220 DS    0H
                                            4973 * ***           }
00003202                                    4974 @L670    DS    0H
                                            4975 * ***   }
00003202                                    4976 @ret_lab_1960 DS 0H
                                            4977 * * **** Start of Epilogue
                                            4978          DCCEPIL
00003202                                    4979+         ds 0h                                                          01-DCCEP
                                            4980+* Epilog
00003202 D707 D088 D088 00000088 00000088   4981+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003208 E3D0 D080 0004          00000080   4982+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000320E E3C0 D090 0004          00000090   4983+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003214 E3B0 C018 0004          00000018   4984+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000321A E3C0 B010 0021          00000010   4985+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003220 E3E0 D008 0004          00000008   4986+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003226 EB1C D020 0004          00000020   4987+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000322C 078E                               4988+         bcr 8,14                if same dsab, just return              01-DCCEP
0000322E E3F0 D010 0024          00000010   4989+         stg 15,16(0,13)         save return code                       01-DCCEP
00003234 E300 D018 0024          00000018   4990+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000323A E3F0 D090 0004          00000090   4991+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003240 E3F0 F018 0004          00000018   4992+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003246 47F0 F040               00000040   4993+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4994+* End of Epilog
                                            4995 * * **** End of Epilogue
                                            4996          DROP  12
                                            4997 *
                                            4998 *   DSECT for automatic variables in "rd_kafka_coord_cache_add"
                                            4999 *      (FUNCTION #1960)
                                            5000 *
                                                                                                                           Page  103 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000000                00000000 000000A8   5001 @AUTO#rd_kafka_coord_cache_add DSECT
00000000                                    5002          DS    XL168
                                            5003 *
0000324A                00000000 0000685E   5004 @CODE    CSECT
                                            5005 *
                                            5006 *
                                            5007 *
                                            5008 * ....... start of rd_kafka_coord_cache_evict
                                            5009 rd_kafka_coord_cache_evict ALIAS X'99846D92818692816D83969699846D838183*
                                                                88856D85A58983A3'
0000324A                                    5010 @LNAME1885 DS  0H
0000324A 0000001A                           5011          DC    X'0000001A'
0000324E 99846D9281869281                   5012          DC    C'rd_kafka_coord_cache_evict'
00003268 00                                 5013          DC    X'00'
                                            5014 rd_kafka_coord_cache_evict DCCPRLG CINDEX=1885,BASER=12,FRAME=192,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1885
                                            5015          macro
                                            5016          dccextrn &m
                                            5017          gblc    &$dccext(1000)
                                            5018          gbla    &$dccexti
                                            5019          lcla    &i
                                            5020 &$dccext(&$dccexti+1) setc    '&m'
                                            5021 &i       seta    1
                                            5022 .loop    aif    (&i gt &$dccexti).around
                                            5023          aif    ('&$dccext(&i)' eq '&m').getout
                                            5024 &i       seta    &i+1
                                            5025          ago     .loop
                                            5026 .around  anop
                                            5027 &$dccexti seta &$dccexti+1
                                            5028          extrn  &m
                                            5029 .getout  anop
                                            5030          mend
00003270                                    5031+$eye0109    ds    0d                                                    02-DCCCA
00003270 C4C3C3                             5032+         dc cl3'DCC'                                                    02-DCCCA
00003273 01                                 5033+         dc xl1'01' format one                                          02-DCCCA
00003274 00000000                           5034+         dc a(0)                                                        02-DCCCA
00003278 00000000000032E2                   5035+         dc ad(@PER_1885)                                               02-DCCCA
00003280 00000000000000C0                   5036+         dc ad(192)                                                     02-DCCCA
00003288 0000000000000000                   5037+         dc ad(0)                                                       02-DCCCA
00003290 0000000000001000                   5038+         dc ad(4096)                                                    02-DCCCA
00003298 20                                 5039+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003299 03                                 5040+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000329A 03                                 5041+         dc al1(3)                                                      02-DCCCA
0000329B 08                                 5042+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000329C 00                                 5043+         dc bl.8'00000000'                                              02-DCCCA
0000329D 000000                             5044+         dc al3(0)                                                      02-DCCCA
000032A0 000000000000324A                   5045+         dc ad(@LNAME1885)                                              02-DCCCA
000032A8                                    5046+         ds 0d                                                          02-DCCCA
000032A8 0000000000003270                   5047+         dc ad($eye0109)                                                02-DCCCA
000032B0 0000000000000000                   5048+         dc ad(0)                                                       02-DCCCA
000032B8                                    5049+         ds    0d                                                       01-DCCPR
                                            5050+         entry rd_kafka_coord_cache_evict                               01-DCCPR
                                                                                                                           Page  104 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000032B8                                    5051+rd_kafka_coord_cache_evict ds 0d                                        01-DCCPR
000032B8                                    5052+@REGION_1885_1 ds 0h                                                    01-DCCPR
000032B8 EBEC D008 0024          00000008   5053+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000032BE E3E0 D088 0004          00000088   5054+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000032C4 E3C0 D090 0004          00000090   5055+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000032CA B904 002E                          5056+         lgr   2,14                copy addr of our savearea            01-DCCPR
000032CE E3B0 C018 0004          00000018   5057+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000032D4 A7EB 00C0               000000C0   5058+         aghi  14,192              increase by frame size               01-DCCPR
000032D8 E3E0 C020 0021          00000020   5059+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000032DE 4720 B020               00000020   5060+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000032E2                                    5061+@PER_1885 ds   0h                                                       01-DCCPR
000032E2 EBDE 2080 0024          00000080   5062+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000032E8 E3C0 2090 0024          00000090   5063+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000032EE B904 00D2                          5064+         lgr   13,2                set real frame pointer               01-DCCPR
000032F2 B904 00CF                          5065+         lgr   12,15               set base reg                         01-DCCPR
                        000032B8            5066+         using @REGION_1885_1,12                                        01-DCCPR
000032F6 B904 0031                          5067          LGR   3,1         ; ptr to parm area
                                            5068 * ******* End of Prologue
                                            5069 * *
                                            5070 * ***           rd_kafka_coord_cache_entry_t *cce, *tmp;
                                            5071 * ***
                                            5072 * ***           for ((cce) = ((&cc->cc_entries)->tqh_first); (cce) != \
                                            5073 * (((void *)0)) && ((tmp) = ((cce)->cce_link .tqe_next), 1); (cce) = (\
                                            5074 * tmp)) {
000032FA E3F0 3000 0004          00000000   5075          LG    15,0(0,3)   ; cc
00003300 E3F0 F000 0004          00000000   5076          LG    15,0(0,15)  ; cc
00003306 47F0 C09E               00003356   5077          B     @L677
00003310                                    5078          DS    0D
00003310 000000C0                           5079 @FRAMESIZE_1885 DC F'192'
00003314 00000000
00003318 00000000000028E0                   5080 @lit_1885_128 DC AD(rd_kafka_coord_cache_entry_destroy)
00003320                                    5081 @L676    DS    0H
                                            5082 * ***                   if (cce->cce_rkb == rkb)
00003320 E310 F028 0004          00000028   5083          LG    1,40(0,15)  ; offset of cce_rkb in rd_kafka_coord_cache_*
                                                                entry_s
00003326 E340 3008 0004          00000008   5084          LG    4,8(0,3)    ; rkb
0000332C B920 0014                          5085          CGR   1,4
00003330 4770 C09A               00003352   5086          BNE   @L681
                                            5087 * ***                           rd_kafka_coord_cache_entry_destroy(cc,\
                                            5088 *  cce);
00003334 E310 3000 0004          00000000   5089          LG    1,0(0,3)    ; cc
0000333A E310 D0B0 0024          000000B0   5090          STG   1,176(0,13)
00003340 E3F0 D0B8 0024          000000B8   5091          STG   15,184(0,13)
00003346 4110 D0B0               000000B0   5092          LA    1,176(0,13)
0000334A E3F0 C060 0004          00003318   5093          LG    15,@lit_1885_128 ; rd_kafka_coord_cache_entry_destroy
00003350                                    5094 @@gen_label222 DS    0H
00003350 05EF                               5095          BALR  14,15
00003352                                    5096 @@gen_label223 DS    0H
00003352                                    5097 @L681    DS    0H
                                            5098 * ***           }
00003352 B904 00F2                          5099          LGR   15,2        ; cce
00003356                                    5100 @L677    DS    0H
                                                                                                                           Page  105 
  Active Usings: @REGION_1885_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003356 B902 001F                          5101          LTGR  1,15
0000335A 4780 C0B0               00003368   5102          BE    @L678
0000335E E320 F000 0004          00000000   5103          LG    2,0(0,15)   ; cce
00003364 47F0 C068               00003320   5104          B     @L676
00003368                                    5105 @L678    DS    0H
                                            5106 * ***   }
00003368                                    5107 @ret_lab_1885 DS 0H
                                            5108 * * **** Start of Epilogue
                                            5109          DCCEPIL
00003368                                    5110+         ds 0h                                                          01-DCCEP
                                            5111+* Epilog
00003368 D707 D088 D088 00000088 00000088   5112+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000336E E3D0 D080 0004          00000080   5113+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003374 E3C0 D090 0004          00000090   5114+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000337A E3B0 C018 0004          00000018   5115+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003380 E3C0 B010 0021          00000010   5116+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003386 E3E0 D008 0004          00000008   5117+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000338C EB1C D020 0004          00000020   5118+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003392 078E                               5119+         bcr 8,14                if same dsab, just return              01-DCCEP
00003394 E3F0 D010 0024          00000010   5120+         stg 15,16(0,13)         save return code                       01-DCCEP
0000339A E300 D018 0024          00000018   5121+         stg 0,24(0,13)          save more return code                  01-DCCEP
000033A0 E3F0 D090 0004          00000090   5122+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000033A6 E3F0 F018 0004          00000018   5123+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000033AC 47F0 F040               00000040   5124+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5125+* End of Epilog
                                            5126 * * **** End of Epilogue
                                            5127          DROP  12
                                            5128 *
                                            5129 *   DSECT for automatic variables in "rd_kafka_coord_cache_evict"
                                            5130 *      (FUNCTION #1885)
                                            5131 *
00000000                00000000 000000A8   5132 @AUTO#rd_kafka_coord_cache_evict DSECT
00000000                                    5133          DS    XL168
                                            5134 *
000033B0                00000000 0000685E   5135 @CODE    CSECT
                                            5136 *
                                            5137 *
                                            5138 *
                                            5139 * ....... start of rd_kafka_coord_cache_destroy
                                            5140 rd_kafka_coord_cache_destroy ALIAS X'99846D92818692816D83969699846D8381*
                                                                8388856D8485A2A39996A8'
000033B0                                    5141 @LNAME1886 DS  0H
000033B0 0000001C                           5142          DC    X'0000001C'
000033B4 99846D9281869281                   5143          DC    C'rd_kafka_coord_cache_destroy'
000033D0 00                                 5144          DC    X'00'
                                            5145 rd_kafka_coord_cache_destroy DCCPRLG CINDEX=1886,BASER=12,FRAME=192,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1886
                                            5146          macro
                                            5147          dccextrn &m
                                            5148          gblc    &$dccext(1000)
                                            5149          gbla    &$dccexti
                                            5150          lcla    &i
                                                                                                                           Page  106 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5151 &$dccext(&$dccexti+1) setc    '&m'
                                            5152 &i       seta    1
                                            5153 .loop    aif    (&i gt &$dccexti).around
                                            5154          aif    ('&$dccext(&i)' eq '&m').getout
                                            5155 &i       seta    &i+1
                                            5156          ago     .loop
                                            5157 .around  anop
                                            5158 &$dccexti seta &$dccexti+1
                                            5159          extrn  &m
                                            5160 .getout  anop
                                            5161          mend
000033D8                                    5162+$eye0112    ds    0d                                                    02-DCCCA
000033D8 C4C3C3                             5163+         dc cl3'DCC'                                                    02-DCCCA
000033DB 01                                 5164+         dc xl1'01' format one                                          02-DCCCA
000033DC 00000000                           5165+         dc a(0)                                                        02-DCCCA
000033E0 000000000000344A                   5166+         dc ad(@PER_1886)                                               02-DCCCA
000033E8 00000000000000C0                   5167+         dc ad(192)                                                     02-DCCCA
000033F0 0000000000000000                   5168+         dc ad(0)                                                       02-DCCCA
000033F8 0000000000001000                   5169+         dc ad(4096)                                                    02-DCCCA
00003400 20                                 5170+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003401 03                                 5171+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003402 03                                 5172+         dc al1(3)                                                      02-DCCCA
00003403 08                                 5173+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003404 00                                 5174+         dc bl.8'00000000'                                              02-DCCCA
00003405 000000                             5175+         dc al3(0)                                                      02-DCCCA
00003408 00000000000033B0                   5176+         dc ad(@LNAME1886)                                              02-DCCCA
00003410                                    5177+         ds 0d                                                          02-DCCCA
00003410 00000000000033D8                   5178+         dc ad($eye0112)                                                02-DCCCA
00003418 0000000000000000                   5179+         dc ad(0)                                                       02-DCCCA
00003420                                    5180+         ds    0d                                                       01-DCCPR
                                            5181+         entry rd_kafka_coord_cache_destroy                             01-DCCPR
00003420                                    5182+rd_kafka_coord_cache_destroy ds 0d                                      01-DCCPR
00003420                                    5183+@REGION_1886_1 ds 0h                                                    01-DCCPR
00003420 EBEC D008 0024          00000008   5184+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003426 E3E0 D088 0004          00000088   5185+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000342C E3C0 D090 0004          00000090   5186+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003432 B904 002E                          5187+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003436 E3B0 C018 0004          00000018   5188+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000343C A7EB 00C0               000000C0   5189+         aghi  14,192              increase by frame size               01-DCCPR
00003440 E3E0 C020 0021          00000020   5190+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003446 4720 B020               00000020   5191+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000344A                                    5192+@PER_1886 ds   0h                                                       01-DCCPR
0000344A EBDE 2080 0024          00000080   5193+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003450 E3C0 2090 0024          00000090   5194+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003456 B904 00D2                          5195+         lgr   13,2                set real frame pointer               01-DCCPR
0000345A B904 00CF                          5196+         lgr   12,15               set base reg                         01-DCCPR
                        00003420            5197+         using @REGION_1886_1,12                                        01-DCCPR
0000345E B904 0021                          5198          LGR   2,1         ; ptr to parm area
                                            5199 * ******* End of Prologue
                                            5200 * *
                                            5201 * ***           rd_kafka_coord_cache_entry_t *cce;
                                            5202 * ***
                                                                                                                           Page  107 
  Active Usings: @REGION_1886_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5203 * ***           while ((cce = ((&cc->cc_entries)->tqh_first)))
00003462 47F0 C076               00003496   5204          B     @L685
00003468                                    5205          DS    0D
00003468 000000C0                           5206 @FRAMESIZE_1886 DC F'192'
0000346C 00000000
00003470 00000000000028E0                   5207 @lit_1886_130 DC AD(rd_kafka_coord_cache_entry_destroy)
00003478                                    5208 @L684    DS    0H
                                            5209 * ***                   rd_kafka_coord_cache_entry_destroy(cc, cce);
00003478 E310 2000 0004          00000000   5210          LG    1,0(0,2)    ; cc
0000347E E310 D0B0 0024          000000B0   5211          STG   1,176(0,13)
00003484 E3F0 D0B8 0024          000000B8   5212          STG   15,184(0,13)
0000348A 4110 D0B0               000000B0   5213          LA    1,176(0,13)
0000348E E3F0 C050 0004          00003470   5214          LG    15,@lit_1886_130 ; rd_kafka_coord_cache_entry_destroy
00003494                                    5215 @@gen_label225 DS    0H
00003494 05EF                               5216          BALR  14,15
00003496                                    5217 @@gen_label226 DS    0H
00003496                                    5218 @L685    DS    0H
00003496 E3F0 2000 0004          00000000   5219          LG    15,0(0,2)   ; cc
0000349C E3F0 F000 0004          00000000   5220          LG    15,0(0,15)  ; cc
000034A2 B902 001F                          5221          LTGR  1,15
000034A6 4770 C058               00003478   5222          BNZ   @L684
                                            5223 * ***   }
000034AA                                    5224 @ret_lab_1886 DS 0H
                                            5225 * * **** Start of Epilogue
                                            5226          DCCEPIL
000034AA                                    5227+         ds 0h                                                          01-DCCEP
                                            5228+* Epilog
000034AA D707 D088 D088 00000088 00000088   5229+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000034B0 E3D0 D080 0004          00000080   5230+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000034B6 E3C0 D090 0004          00000090   5231+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000034BC E3B0 C018 0004          00000018   5232+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000034C2 E3C0 B010 0021          00000010   5233+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000034C8 E3E0 D008 0004          00000008   5234+         lg  14,8(0,13)          load up return address                 01-DCCEP
000034CE EB1C D020 0004          00000020   5235+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000034D4 078E                               5236+         bcr 8,14                if same dsab, just return              01-DCCEP
000034D6 E3F0 D010 0024          00000010   5237+         stg 15,16(0,13)         save return code                       01-DCCEP
000034DC E300 D018 0024          00000018   5238+         stg 0,24(0,13)          save more return code                  01-DCCEP
000034E2 E3F0 D090 0004          00000090   5239+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000034E8 E3F0 F018 0004          00000018   5240+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000034EE 47F0 F040               00000040   5241+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5242+* End of Epilog
                                            5243 * * **** End of Epilogue
                                            5244          DROP  12
                                            5245 *
                                            5246 *   DSECT for automatic variables in "rd_kafka_coord_cache_destroy"
                                            5247 *      (FUNCTION #1886)
                                            5248 *
00000000                00000000 000000A8   5249 @AUTO#rd_kafka_coord_cache_destroy DSECT
00000000                                    5250          DS    XL168
                                            5251 *
000034F2                00000000 0000685E   5252 @CODE    CSECT
                                            5253 *
                                                                                                                           Page  108 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5254 *
                                            5255 *
                                            5256 * ....... start of rd_kafka_coord_cache_init
                                            5257 rd_kafka_coord_cache_init ALIAS X'99846D92818692816D83969699846D8381838*
                                                                8856D899589A3'
000034F2                                    5258 @LNAME1887 DS  0H
000034F2 00000019                           5259          DC    X'00000019'
000034F6 99846D9281869281                   5260          DC    C'rd_kafka_coord_cache_init'
0000350F 00                                 5261          DC    X'00'
                                            5262 rd_kafka_coord_cache_init DCCPRLG CINDEX=1887,BASER=0,FRAME=168,SAVEARE*
                                                                A=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1887
                                            5263          macro
                                            5264          dccextrn &m
                                            5265          gblc    &$dccext(1000)
                                            5266          gbla    &$dccexti
                                            5267          lcla    &i
                                            5268 &$dccext(&$dccexti+1) setc    '&m'
                                            5269 &i       seta    1
                                            5270 .loop    aif    (&i gt &$dccexti).around
                                            5271          aif    ('&$dccext(&i)' eq '&m').getout
                                            5272 &i       seta    &i+1
                                            5273          ago     .loop
                                            5274 .around  anop
                                            5275 &$dccexti seta &$dccexti+1
                                            5276          extrn  &m
                                            5277 .getout  anop
                                            5278          mend
00003510                                    5279+$eye0115    ds    0d                                                    02-DCCCA
00003510 C4C3C3                             5280+         dc cl3'DCC'                                                    02-DCCCA
00003513 01                                 5281+         dc xl1'01' format one                                          02-DCCCA
00003514 00000000                           5282+         dc a(0)                                                        02-DCCCA
00003518 0000000000000000                   5283+         dc ad(0)                                                       02-DCCCA
00003520 00000000000000A8                   5284+         dc ad(168)                                                     02-DCCCA
00003528 0000000000000000                   5285+         dc ad(0)                                                       02-DCCCA
00003530 0000000000001000                   5286+         dc ad(4096)                                                    02-DCCCA
00003538 20                                 5287+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003539 03                                 5288+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000353A 03                                 5289+         dc al1(3)                                                      02-DCCCA
0000353B 08                                 5290+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000353C 00                                 5291+         dc bl.8'00000000'                                              02-DCCCA
0000353D 000000                             5292+         dc al3(0)                                                      02-DCCCA
00003540 00000000000034F2                   5293+         dc ad(@LNAME1887)                                              02-DCCCA
00003548                                    5294+         ds 0d                                                          02-DCCCA
00003548 0000000000003510                   5295+         dc ad($eye0115)                                                02-DCCCA
00003550 0000000000000000                   5296+         dc ad(0)                                                       02-DCCCA
00003558                                    5297+         ds    0d                                                       01-DCCPR
                                            5298+         entry rd_kafka_coord_cache_init                                01-DCCPR
00003558                                    5299+rd_kafka_coord_cache_init ds 0d                                         01-DCCPR
00003558                                    5300+@REGION_1887_1 ds 0h                                                    01-DCCPR
00003558 EBEC D008 0024          00000008   5301+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            5302 * ******* End of Prologue
                                            5303 * *
                                                                                                                           Page  109 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5304 * ***           do { (&cc->cc_entries)->tqh_first = (((void *)0)); (&c\
                                            5305 * c->cc_entries)->tqh_last = &(&cc->cc_entries)->tqh_first; } while ( \
                                            5306 * 0);
0000355E E3F0 1000 0004          00000000   5307          LG    15,0(0,1)   ; cc
00003564                                    5308 @L686    DS    0H
00003564 A729 0000               00000000   5309          LGHI  2,0         ; 0
00003568 E320 F000 0024          00000000   5310          STG   2,0(0,15)   ; cc
0000356E E3F0 F008 0024          00000008   5311          STG   15,8(0,15)  ; offset of tqh_last in rd_kafka_coord_cache*
                                                                _head_s
                                            5312 * ***           cc->cc_cnt = 0;
00003574 E54C F010 0000          00000010   5313          MVHI  16(15),0    ; offset of cc_cnt in rd_kafka_coord_cache_s
                                            5314 * ***           cc->cc_expire_thres = expire_thres_ms * 1000;
0000357A 5810 100C               0000000C   5315          L     1,12(0,1)   ; expire_thres_ms
0000357E A71C 03E8               000003E8   5316          MHI   1,1000
00003582 B914 0011                          5317          LGFR  1,1
00003586 E310 F018 0024          00000018   5318          STG   1,24(0,15)  ; offset of cc_expire_thres in rd_kafka_coor*
                                                                d_cache_s
                                            5319 * ***   }
0000358C                                    5320 @ret_lab_1887 DS 0H
                                            5321 * * **** Start of Epilogue
                                            5322          DCCEPIL
0000358C                                    5323+         ds 0h                                                          01-DCCEP
                                            5324+* Epilog
                                            5325+* Epilog
0000358C E3E0 D008 0004          00000008   5326+         lg    14,8(,13) restore the reg                                01-DCCEP
00003592 EB1C D020 0004          00000020   5327+         lmg   1,12,32(13)                                              01-DCCEP
00003598 07FE                               5328+         br   14                                                        01-DCCEP
                                            5329+* End of Epilog
                                            5330 * * **** End of Epilogue
                                            5331 *
                                            5332 *   DSECT for automatic variables in "rd_kafka_coord_cache_init"
                                            5333 *      (FUNCTION #1887)
                                            5334 *
00000000                00000000 000000A8   5335 @AUTO#rd_kafka_coord_cache_init DSECT
00000000                                    5336          DS    XL168
                                            5337 *
0000359A                00000000 0000685E   5338 @CODE    CSECT
                                            5339 *
                                            5340 *
                                            5341 *
                                            5342 * ....... start of rd_kafka_coord_req
                                            5343 rd_kafka_coord_req ALIAS X'99846D92818692816D83969699846D998598'
0000359A                                    5344 @LNAME1888 DS  0H
0000359A 00000012                           5345          DC    X'00000012'
0000359E 99846D9281869281                   5346          DC    C'rd_kafka_coord_req'
000035B0 00                                 5347          DC    X'00'
                                            5348 rd_kafka_coord_req DCCPRLG CINDEX=1888,BASER=12,FRAME=192,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1888
                                            5349          macro
                                            5350          dccextrn &m
                                            5351          gblc    &$dccext(1000)
                                            5352          gbla    &$dccexti
                                                                                                                           Page  110 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5353          lcla    &i
                                            5354 &$dccext(&$dccexti+1) setc    '&m'
                                            5355 &i       seta    1
                                            5356 .loop    aif    (&i gt &$dccexti).around
                                            5357          aif    ('&$dccext(&i)' eq '&m').getout
                                            5358 &i       seta    &i+1
                                            5359          ago     .loop
                                            5360 .around  anop
                                            5361 &$dccexti seta &$dccexti+1
                                            5362          extrn  &m
                                            5363 .getout  anop
                                            5364          mend
000035B8                                    5365+$eye0118    ds    0d                                                    02-DCCCA
000035B8 C4C3C3                             5366+         dc cl3'DCC'                                                    02-DCCCA
000035BB 01                                 5367+         dc xl1'01' format one                                          02-DCCCA
000035BC 00000000                           5368+         dc a(0)                                                        02-DCCCA
000035C0 000000000000362A                   5369+         dc ad(@PER_1888)                                               02-DCCCA
000035C8 00000000000000C0                   5370+         dc ad(192)                                                     02-DCCCA
000035D0 0000000000000000                   5371+         dc ad(0)                                                       02-DCCCA
000035D8 0000000000001000                   5372+         dc ad(4096)                                                    02-DCCCA
000035E0 20                                 5373+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000035E1 03                                 5374+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000035E2 03                                 5375+         dc al1(3)                                                      02-DCCCA
000035E3 08                                 5376+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000035E4 00                                 5377+         dc bl.8'00000000'                                              02-DCCCA
000035E5 000000                             5378+         dc al3(0)                                                      02-DCCCA
000035E8 000000000000359A                   5379+         dc ad(@LNAME1888)                                              02-DCCCA
000035F0                                    5380+         ds 0d                                                          02-DCCCA
000035F0 00000000000035B8                   5381+         dc ad($eye0118)                                                02-DCCCA
000035F8 0000000000000000                   5382+         dc ad(0)                                                       02-DCCCA
00003600                                    5383+         ds    0d                                                       01-DCCPR
                                            5384+         entry rd_kafka_coord_req                                       01-DCCPR
00003600                                    5385+rd_kafka_coord_req ds 0d                                                01-DCCPR
00003600                                    5386+@REGION_1888_1 ds 0h                                                    01-DCCPR
00003600 EBEC D008 0024          00000008   5387+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003606 E3E0 D088 0004          00000088   5388+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000360C E3C0 D090 0004          00000090   5389+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003612 B904 002E                          5390+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003616 E3B0 C018 0004          00000018   5391+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000361C A7EB 00C0               000000C0   5392+         aghi  14,192              increase by frame size               01-DCCPR
00003620 E3E0 C020 0021          00000020   5393+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003626 4720 B020               00000020   5394+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000362A                                    5395+@PER_1888 ds   0h                                                       01-DCCPR
0000362A EBDE 2080 0024          00000080   5396+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003630 E3C0 2090 0024          00000090   5397+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003636 B904 00D2                          5398+         lgr   13,2                set real frame pointer               01-DCCPR
0000363A B904 00CF                          5399+         lgr   12,15               set base reg                         01-DCCPR
                        00003600            5400+         using @REGION_1888_1,12                                        01-DCCPR
0000363E B904 0041                          5401          LGR   4,1         ; ptr to parm area
                                            5402 * ******* End of Prologue
                                            5403 * *
00003642 E320 4000 0004          00000000   5404          LG    2,0(0,4)    ; rk
                                                                                                                           Page  111 
  Active Usings: @REGION_1888_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5405 * ***           rd_kafka_coord_req_t *creq;
                                            5406 * ***
                                            5407 * ***           creq = rd_calloc(1, sizeof(*creq));
00003648 E548 D0B0 0001          000000B0   5408          MVGHI 176(13),1
0000364E E548 D0B8 0060          000000B8   5409          MVGHI 184(13),96
00003654 4110 D0B0               000000B0   5410          LA    1,176(0,13)
00003658 E3F0 C178 0004          00003778   5411          LG    15,@lit_1888_133 ; rd_calloc
0000365E                                    5412 @@gen_label228 DS    0H
0000365E 05EF                               5413          BALR  14,15
00003660                                    5414 @@gen_label229 DS    0H
00003660 B904 003F                          5415          LGR   3,15
                                            5416 * ***           creq->creq_coordtype = coordtype;
00003664 5810 400C               0000000C   5417          L     1,12(0,4)   ; coordtype
00003668 5010 3010               00000010   5418          ST    1,16(0,3)   ; offset of creq_coordtype in rd_kafka_coord*
                                                                _req_s
                                            5419 * ***           creq->creq_coordkey = rd_strdup(coordkey);
0000366C E3F0 4010 0004          00000010   5420          LG    15,16(0,4)  ; coordkey
00003672 E3F0 D0B0 0024          000000B0   5421          STG   15,176(0,13)
00003678 4110 D0B0               000000B0   5422          LA    1,176(0,13)
0000367C E3F0 C180 0004          00003780   5423          LG    15,@lit_1888_134 ; rd_strdup
00003682                                    5424 @@gen_label230 DS    0H
00003682 05EF                               5425          BALR  14,15
00003684                                    5426 @@gen_label231 DS    0H
00003684 E3F0 3018 0024          00000018   5427          STG   15,24(0,3)
                                            5428 * ***           creq->creq_ts_timeout = rd_timeout_init(timeout_ms);
0000368A E3F0 402C 0014          0000002C   5429          LGF   15,44(0,4)  ; timeout_ms
00003690 E3F0 D0B0 0024          000000B0   5430          STG   15,176(0,13)
00003696 4110 D0B0               000000B0   5431          LA    1,176(0,13)
0000369A E3F0 C188 0004          00003788   5432          LG    15,@lit_1888_135 ; rd_timeout_init
000036A0                                    5433 @@gen_label232 DS    0H
000036A0 05EF                               5434          BALR  14,15
000036A2                                    5435 @@gen_label233 DS    0H
000036A2 E3F0 3028 0024          00000028   5436          STG   15,40(0,3)
                                            5437 * ***           creq->creq_send_req_cb = send_req_cb;
000036A8 E3F0 4018 0004          00000018   5438          LG    15,24(0,4)  ; send_req_cb
000036AE E3F0 3030 0024          00000030   5439          STG   15,48(0,3)  ; offset of creq_send_req_cb in rd_kafka_coo*
                                                                rd_req_s
                                            5440 * ***           creq->creq_rko = rko;
000036B4 E3F0 4020 0004          00000020   5441          LG    15,32(0,4)  ; rko
000036BA E3F0 3020 0024          00000020   5442          STG   15,32(0,3)  ; offset of creq_rko in rd_kafka_coord_req_s
                                            5443 * ***           creq->creq_replyq = replyq;
000036C0 D20F 3038 4030 00000038 00000030   5444          MVC   56(16,3),48(4)
                                            5445 * ***           creq->creq_resp_cb = resp_cb;
000036C6 E3F0 4040 0004          00000040   5446          LG    15,64(0,4)  ; resp_cb
000036CC E3F0 3048 0024          00000048   5447          STG   15,72(0,3)  ; offset of creq_resp_cb in rd_kafka_coord_r*
                                                                eq_s
                                            5448 * ***           creq->creq_reply_opaque = reply_opaque;
000036D2 E3F0 4048 0004          00000048   5449          LG    15,72(0,4)  ; reply_opaque
000036D8 E3F0 3050 0024          00000050   5450          STG   15,80(0,3)  ; offset of creq_reply_opaque in rd_kafka_co*
                                                                ord_req_s
                                            5451 * ***           creq->creq_refcnt = 1;
000036DE E54C 3058 0001          00000058   5452          MVHI  88(3),1     ; offset of creq_refcnt in rd_kafka_coord_re*
                                                                                                                           Page  112 
  Active Usings: @REGION_1888_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                q_s
                                            5453 * ***           creq->creq_done = 0;
000036E4 9200 305C      0000005C 00000000   5454          MVI   92(3),0     ; offset of creq_done in rd_kafka_coord_req_*
                                                                s
                                            5455 * ***
                                            5456 * ***           do {  (creq)->creq_link .tqe_next = (((void *)0)); (cr\
                                            5457 * eq)->creq_link .tqe_prev = (&rk->rk_coord_reqs)->tqh_last; *(&rk->rk\
                                            5458 * _coord_reqs)->tqh_last = (creq); (&rk->rk_coord_reqs)->tqh_last = &(\
                                            5459 * creq)->creq_link .tqe_next; } while ( 0);
000036E8                                    5460 @L689    DS    0H
000036E8 A7F9 0000               00000000   5461          LGHI  15,0        ; 0
000036EC E3F0 3000 0024          00000000   5462          STG   15,0(0,3)   ; creq
000036F2 E3F0 2F90 0004          00000F90   5463          LG    15,3984(0,2) ; offset of tqh_last in 0000149
000036F8 E3F0 3008 0024          00000008   5464          STG   15,8(0,3)   ; offset of tqe_prev in 0000139
000036FE E3F0 2F90 0004          00000F90   5465          LG    15,3984(0,2) ; offset of tqh_last in 0000149
00003704 E330 F000 0024          00000000   5466          STG   3,0(0,15)
0000370A E330 2F90 0024          00000F90   5467          STG   3,3984(0,2) ; offset of tqh_last in 0000149
                                            5468 * ***
                                            5469 * ***           rd_kafka_coord_req_fsm(rk, creq);
00003710 EB23 D0B0 0024          000000B0   5470          STMG  2,3,176(13)
00003716 4110 D0B0               000000B0   5471          LA    1,176(0,13)
0000371A E3F0 C190 0004          00003790   5472          LG    15,@lit_1888_137 ; rd_kafka_coord_req_fsm
00003720                                    5473 @@gen_label234 DS    0H
00003720 05EF                               5474          BALR  14,15
00003722                                    5475 @@gen_label235 DS    0H
                                            5476 * ***   }
00003722                                    5477 @ret_lab_1888 DS 0H
                                            5478 * * **** Start of Epilogue
                                            5479          DCCEPIL
00003722                                    5480+         ds 0h                                                          01-DCCEP
                                            5481+* Epilog
00003722 D707 D088 D088 00000088 00000088   5482+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003728 E3D0 D080 0004          00000080   5483+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000372E E3C0 D090 0004          00000090   5484+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003734 E3B0 C018 0004          00000018   5485+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000373A E3C0 B010 0021          00000010   5486+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003740 E3E0 D008 0004          00000008   5487+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003746 EB1C D020 0004          00000020   5488+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000374C 078E                               5489+         bcr 8,14                if same dsab, just return              01-DCCEP
0000374E E3F0 D010 0024          00000010   5490+         stg 15,16(0,13)         save return code                       01-DCCEP
00003754 E300 D018 0024          00000018   5491+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000375A E3F0 D090 0004          00000090   5492+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003760 E3F0 F018 0004          00000018   5493+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003766 47F0 F040               00000040   5494+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5495+* End of Epilog
                                            5496 * * **** End of Epilogue
00003770                                    5497          DS    0D
00003770 000000C0                           5498 @FRAMESIZE_1888 DC F'192'
00003774 00000000
00003778 0000000000000600                   5499 @lit_1888_133 DC AD(rd_calloc)
00003780 0000000000000878                   5500 @lit_1888_134 DC AD(rd_strdup)
00003788 0000000000000C88                   5501 @lit_1888_135 DC AD(rd_timeout_init)
                                                                                                                           Page  113 
  Active Usings: @REGION_1888_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003790 0000000000006158                   5502 @lit_1888_137 DC AD(rd_kafka_coord_req_fsm)
                                            5503          DROP  12
                                            5504 *
                                            5505 *   DSECT for automatic variables in "rd_kafka_coord_req"
                                            5506 *      (FUNCTION #1888)
                                            5507 *
00000000                00000000 000000A8   5508 @AUTO#rd_kafka_coord_req DSECT
00000000                                    5509          DS    XL168
                                            5510 *
00003798                00000000 0000685E   5511 @CODE    CSECT
                                            5512 *
                                            5513 *
                                            5514 *
                                            5515 * ....... start of rd_kafka_coord_req_destroy
00003798                                    5516 @LNAME1962 DS  0H
00003798 0000001A                           5517          DC    X'0000001A'
0000379C 99846D9281869281                   5518          DC    C'rd_kafka_coord_req_destroy'
000037B6 00                                 5519          DC    X'00'
                                            5520 rd_kafka_coord_req_destroy DCCPRLG CINDEX=1962,BASER=12,FRAME=200,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1962
                                            5521          macro
                                            5522          dccextrn &m
                                            5523          gblc    &$dccext(1000)
                                            5524          gbla    &$dccexti
                                            5525          lcla    &i
                                            5526 &$dccext(&$dccexti+1) setc    '&m'
                                            5527 &i       seta    1
                                            5528 .loop    aif    (&i gt &$dccexti).around
                                            5529          aif    ('&$dccext(&i)' eq '&m').getout
                                            5530 &i       seta    &i+1
                                            5531          ago     .loop
                                            5532 .around  anop
                                            5533 &$dccexti seta &$dccexti+1
                                            5534          extrn  &m
                                            5535 .getout  anop
                                            5536          mend
000037B8                                    5537+$eye0121    ds    0d                                                    02-DCCCA
000037B8 C4C3C3                             5538+         dc cl3'DCC'                                                    02-DCCCA
000037BB 01                                 5539+         dc xl1'01' format one                                          02-DCCCA
000037BC 00000000                           5540+         dc a(0)                                                        02-DCCCA
000037C0 000000000000382A                   5541+         dc ad(@PER_1962)                                               02-DCCCA
000037C8 00000000000000C8                   5542+         dc ad(200)                                                     02-DCCCA
000037D0 0000000000000000                   5543+         dc ad(0)                                                       02-DCCCA
000037D8 0000000000001000                   5544+         dc ad(4096)                                                    02-DCCCA
000037E0 20                                 5545+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000037E1 03                                 5546+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000037E2 03                                 5547+         dc al1(3)                                                      02-DCCCA
000037E3 08                                 5548+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000037E4 00                                 5549+         dc bl.8'00000000'                                              02-DCCCA
000037E5 000000                             5550+         dc al3(0)                                                      02-DCCCA
000037E8 0000000000003798                   5551+         dc ad(@LNAME1962)                                              02-DCCCA
000037F0                                    5552+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  114 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000037F0 00000000000037B8                   5553+         dc ad($eye0121)                                                02-DCCCA
000037F8 0000000000000000                   5554+         dc ad(0)                                                       02-DCCCA
00003800                                    5555+         ds    0d                                                       01-DCCPR
00003800                                    5556+rd_kafka_coord_req_destroy ds 0d                                        01-DCCPR
00003800                                    5557+@REGION_1962_1 ds 0h                                                    01-DCCPR
00003800 EBEC D008 0024          00000008   5558+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003806 E3E0 D088 0004          00000088   5559+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000380C E3C0 D090 0004          00000090   5560+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003812 B904 002E                          5561+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003816 E3B0 C018 0004          00000018   5562+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000381C A7EB 00C8               000000C8   5563+         aghi  14,200              increase by frame size               01-DCCPR
00003820 E3E0 C020 0021          00000020   5564+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003826 4720 B020               00000020   5565+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000382A                                    5566+@PER_1962 ds   0h                                                       01-DCCPR
0000382A EBDE 2080 0024          00000080   5567+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003830 E3C0 2090 0024          00000090   5568+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003836 B904 00D2                          5569+         lgr   13,2                set real frame pointer               01-DCCPR
0000383A B904 00CF                          5570+         lgr   12,15               set base reg                         01-DCCPR
                        00003800            5571+         using @REGION_1962_1,12                                        01-DCCPR
0000383E B904 0031                          5572          LGR   3,1         ; ptr to parm area
                                            5573 * ******* End of Prologue
                                            5574 * *
00003842 E320 3008 0004          00000008   5575          LG    2,8(0,3)    ; creq
                                            5576 * ***
                                            5577 * ***           ((creq->creq_refcnt > 0) ? (void)0 : __assert(__func__\
                                            5578 * , "C:\\asgkafka\\librdkafka\\src\\rdkafka_coord.c", 259, "creq->creq\
                                            5579 * _refcnt > 0"));
00003848 E55C 2058 0000          00000058   5580          CHSI  88(2),0
0000384E 4720 C08E               0000388E   5581          BH    @L693
00003852                                    5582 @L692    DS    0H
00003852 E3F0 C0D0 0004          000038D0   5583          LG    15,@lit_1962_139
00003858 41F0 F1CA               000001CA   5584          LA    15,458(0,15)
0000385C E3F0 D0A8 0024          000000A8   5585          STG   15,168(0,13)
00003862 E3F0 C0C8 0004          000038C8   5586          LG    15,@lit_1962_140
00003868 4110 F09E               0000009E   5587          LA    1,158(0,15)
0000386C E310 D0B0 0024          000000B0   5588          STG   1,176(0,13)
00003872 E548 D0B8 0103          000000B8   5589          MVGHI 184(13),259
00003878 41F0 F0DA               000000DA   5590          LA    15,218(0,15)
0000387C E3F0 D0C0 0024          000000C0   5591          STG   15,192(0,13)
00003882 4110 D0A8               000000A8   5592          LA    1,168(0,13)
00003886 E3F0 C0C0 0004          000038C0   5593          LG    15,@lit_1962_141 ; __assert
0000388C                                    5594 @@gen_label237 DS    0H
0000388C 05EF                               5595          BALR  14,15
0000388E                                    5596 @@gen_label238 DS    0H
0000388E                                    5597 @L693    DS    0H
                                            5598 * ***
                                            5599 * ***           if (done) {
0000388E 9500 3017      00000017 00000000   5600          CLI   23(3),0
00003892 4780 C110               00003910   5601          BE    @L694
                                            5602 * ***
                                            5603 * ***
                                            5604 * ***
                                                                                                                           Page  115 
  Active Usings: @REGION_1962_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5605 * ***                   do {} while (0);
00003896                                    5606 @L695    DS    0H
                                            5607 * ***                   do {   if (((creq)->creq_link .tqe_next) != ((\
                                            5608 * (void *)0))) (creq)->creq_link .tqe_next->creq_link .tqe_prev = (cre\
                                            5609 * q)->creq_link .tqe_prev; else (&rk->rk_coord_reqs)->tqh_last = (creq\
                                            5610 * )->creq_link .tqe_prev; *(creq)->creq_link .tqe_prev = (creq)->creq_\
                                            5611 * link .tqe_next; ; } while ( 0);
00003896                                    5612 @L698    DS    0H
00003896 E3F0 2000 0002          00000000   5613          LTG   15,0(0,2)   ; creq
0000389C 4780 C0E8               000038E8   5614          BE    @L701
000038A0 E3F0 2000 0004          00000000   5615          LG    15,0(0,2)   ; creq
000038A6 E310 2008 0004          00000008   5616          LG    1,8(0,2)    ; offset of tqe_prev in 0000139
000038AC E310 F008 0024          00000008   5617          STG   1,8(0,15)   ; offset of tqe_prev in 0000139
000038B2 47F0 C0FA               000038FA   5618          B     @L702
000038B8                                    5619          DS    0D
000038B8 000000C8                           5620 @FRAMESIZE_1962 DC F'200'
000038BC 00000000
000038C0 0000000000000000                   5621 @lit_1962_141 DC AD(__assert)
000038C8 0000000000006A88                   5622 @lit_1962_140 DC AD(@strings@)
000038D0 0000000000006860                   5623 @lit_1962_139 DC AD(@DATA)
000038D8 0000000000002398                   5624 @lit_1962_143 DC AD(rd_kafka_replyq_destroy)
000038E0 0000000000000770                   5625 @lit_1962_144 DC AD(rd_free)
000038E8                                    5626 @L701    DS    0H
000038E8 E3F0 3000 0004          00000000   5627          LG    15,0(0,3)   ; rk
000038EE E310 2008 0004          00000008   5628          LG    1,8(0,2)    ; offset of tqe_prev in 0000139
000038F4 E310 FF90 0024          00000F90   5629          STG   1,3984(0,15) ; offset of tqh_last in 0000149
000038FA                                    5630 @L702    DS    0H
000038FA E3F0 2008 0004          00000008   5631          LG    15,8(0,2)   ; offset of tqe_prev in 0000139
00003900 E310 2000 0004          00000000   5632          LG    1,0(0,2)    ; creq
00003906 E310 F000 0024          00000000   5633          STG   1,0(0,15)
                                            5634 * ***                   creq->creq_done = 1;
0000390C 9201 205C      0000005C 00000001   5635          MVI   92(2),1     ; offset of creq_done in rd_kafka_coord_req_*
                                                                s
                                            5636 * ***           }
00003910                                    5637 @L694    DS    0H
                                            5638 * ***
                                            5639 * ***           if (--creq->creq_refcnt > 0)
00003910 58F0 2058               00000058   5640          L     15,88(0,2)
00003914 A7FA FFFF               0000FFFF   5641          AHI   15,-1
00003918 50F0 2058               00000058   5642          ST    15,88(0,2)
0000391C 12FF                               5643          LTR   15,15
0000391E 47D0 C12A               0000392A   5644          BNH   @L704
                                            5645 * ***                   return 0;
00003922 A7F9 0000               00000000   5646          LGHI  15,0        ; 0
00003926 47F0 C170               00003970   5647          B     @ret_lab_1962
                                            5648 * ***
                                            5649 * ***           do {} while (0);
0000392A                                    5650 @L704    DS    0H
                                            5651 * ***           rd_kafka_replyq_destroy(&creq->creq_replyq);
0000392A 41F0 2038               00000038   5652          LA    15,56(0,2)
0000392E E3F0 D0A8 0024          000000A8   5653          STG   15,168(0,13)
00003934 4110 D0A8               000000A8   5654          LA    1,168(0,13)
                                                                                                                           Page  116 
  Active Usings: @REGION_1962_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003938 E3F0 C0D8 0004          000038D8   5655          LG    15,@lit_1962_143 ; rd_kafka_replyq_destroy
0000393E                                    5656 @@gen_label242 DS    0H
0000393E 05EF                               5657          BALR  14,15
00003940                                    5658 @@gen_label243 DS    0H
                                            5659 * ***           rd_free(creq->creq_coordkey);
00003940 E3F0 2018 0004          00000018   5660          LG    15,24(0,2)
00003946 E3F0 D0A8 0024          000000A8   5661          STG   15,168(0,13)
0000394C 4110 D0A8               000000A8   5662          LA    1,168(0,13)
00003950 E330 C0E0 0004          000038E0   5663          LG    3,@lit_1962_144 ; rd_free
00003956 B904 00F3                          5664          LGR   15,3
0000395A                                    5665 @@gen_label244 DS    0H
0000395A 05EF                               5666          BALR  14,15
0000395C                                    5667 @@gen_label245 DS    0H
                                            5668 * ***           rd_free(creq);
0000395C E320 D0A8 0024          000000A8   5669          STG   2,168(0,13)
00003962 4110 D0A8               000000A8   5670          LA    1,168(0,13)
00003966 B904 00F3                          5671          LGR   15,3
0000396A                                    5672 @@gen_label246 DS    0H
0000396A 05EF                               5673          BALR  14,15
0000396C                                    5674 @@gen_label247 DS    0H
                                            5675 * ***
                                            5676 * ***           return 1;
0000396C A7F9 0001               00000001   5677          LGHI  15,1        ; 1
                                            5678 * ***   }
00003970                                    5679 @ret_lab_1962 DS 0H
                                            5680 * * **** Start of Epilogue
                                            5681          DCCEPIL
00003970                                    5682+         ds 0h                                                          01-DCCEP
                                            5683+* Epilog
00003970 D707 D088 D088 00000088 00000088   5684+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003976 E3D0 D080 0004          00000080   5685+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000397C E3C0 D090 0004          00000090   5686+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003982 E3B0 C018 0004          00000018   5687+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003988 E3C0 B010 0021          00000010   5688+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000398E E3E0 D008 0004          00000008   5689+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003994 EB1C D020 0004          00000020   5690+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000399A 078E                               5691+         bcr 8,14                if same dsab, just return              01-DCCEP
0000399C E3F0 D010 0024          00000010   5692+         stg 15,16(0,13)         save return code                       01-DCCEP
000039A2 E300 D018 0024          00000018   5693+         stg 0,24(0,13)          save more return code                  01-DCCEP
000039A8 E3F0 D090 0004          00000090   5694+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000039AE E3F0 F018 0004          00000018   5695+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000039B4 47F0 F040               00000040   5696+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5697+* End of Epilog
                                            5698 * * **** End of Epilogue
                                            5699          DROP  12
                                            5700 *
                                            5701 *   DSECT for automatic variables in "rd_kafka_coord_req_destroy"
                                            5702 *      (FUNCTION #1962)
                                            5703 *
00000000                00000000 000000A8   5704 @AUTO#rd_kafka_coord_req_destroy DSECT
00000000                                    5705          DS    XL168
                                            5706 *
                                                                                                                           Page  117 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000039B8                00000000 0000685E   5707 @CODE    CSECT
                                            5708 *
                                            5709 *
                                            5710 *
                                            5711 * ....... start of rd_kafka_coord_req_keep
000039B8                                    5712 @LNAME1963 DS  0H
000039B8 00000017                           5713          DC    X'00000017'
000039BC 99846D9281869281                   5714          DC    C'rd_kafka_coord_req_keep'
000039D3 00                                 5715          DC    X'00'
                                            5716 rd_kafka_coord_req_keep DCCPRLG CINDEX=1963,BASER=0,FRAME=168,SAVEAREA=*
                                                                NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1963
                                            5717          macro
                                            5718          dccextrn &m
                                            5719          gblc    &$dccext(1000)
                                            5720          gbla    &$dccexti
                                            5721          lcla    &i
                                            5722 &$dccext(&$dccexti+1) setc    '&m'
                                            5723 &i       seta    1
                                            5724 .loop    aif    (&i gt &$dccexti).around
                                            5725          aif    ('&$dccext(&i)' eq '&m').getout
                                            5726 &i       seta    &i+1
                                            5727          ago     .loop
                                            5728 .around  anop
                                            5729 &$dccexti seta &$dccexti+1
                                            5730          extrn  &m
                                            5731 .getout  anop
                                            5732          mend
000039D8                                    5733+$eye0124    ds    0d                                                    02-DCCCA
000039D8 C4C3C3                             5734+         dc cl3'DCC'                                                    02-DCCCA
000039DB 01                                 5735+         dc xl1'01' format one                                          02-DCCCA
000039DC 00000000                           5736+         dc a(0)                                                        02-DCCCA
000039E0 0000000000000000                   5737+         dc ad(0)                                                       02-DCCCA
000039E8 00000000000000A8                   5738+         dc ad(168)                                                     02-DCCCA
000039F0 0000000000000000                   5739+         dc ad(0)                                                       02-DCCCA
000039F8 0000000000001000                   5740+         dc ad(4096)                                                    02-DCCCA
00003A00 20                                 5741+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003A01 03                                 5742+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003A02 03                                 5743+         dc al1(3)                                                      02-DCCCA
00003A03 08                                 5744+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003A04 00                                 5745+         dc bl.8'00000000'                                              02-DCCCA
00003A05 000000                             5746+         dc al3(0)                                                      02-DCCCA
00003A08 00000000000039B8                   5747+         dc ad(@LNAME1963)                                              02-DCCCA
00003A10                                    5748+         ds 0d                                                          02-DCCCA
00003A10 00000000000039D8                   5749+         dc ad($eye0124)                                                02-DCCCA
00003A18 0000000000000000                   5750+         dc ad(0)                                                       02-DCCCA
00003A20                                    5751+         ds    0d                                                       01-DCCPR
00003A20                                    5752+rd_kafka_coord_req_keep ds 0d                                           01-DCCPR
00003A20                                    5753+@REGION_1963_1 ds 0h                                                    01-DCCPR
00003A20 EBEC D008 0024          00000008   5754+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            5755 * ******* End of Prologue
                                            5756 * *
                                            5757 * ***           creq->creq_refcnt++;
                                                                                                                           Page  118 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003A26 E3F0 1000 0004          00000000   5758          LG    15,0(0,1)   ; creq
00003A2C 5810 F058               00000058   5759          L     1,88(0,15)
00003A30 A71A 0001               00000001   5760          AHI   1,1
00003A34 5010 F058               00000058   5761          ST    1,88(0,15)
                                            5762 * ***   }
00003A38                                    5763 @ret_lab_1963 DS 0H
                                            5764 * * **** Start of Epilogue
                                            5765          DCCEPIL
00003A38                                    5766+         ds 0h                                                          01-DCCEP
                                            5767+* Epilog
                                            5768+* Epilog
00003A38 E3E0 D008 0004          00000008   5769+         lg    14,8(,13) restore the reg                                01-DCCEP
00003A3E EB1C D020 0004          00000020   5770+         lmg   1,12,32(13)                                              01-DCCEP
00003A44 07FE                               5771+         br   14                                                        01-DCCEP
                                            5772+* End of Epilog
                                            5773 * * **** End of Epilogue
                                            5774 *
                                            5775 *   DSECT for automatic variables in "rd_kafka_coord_req_keep"
                                            5776 *      (FUNCTION #1963)
                                            5777 *
00000000                00000000 000000A8   5778 @AUTO#rd_kafka_coord_req_keep DSECT
00000000                                    5779          DS    XL168
                                            5780 *
00003A46                00000000 0000685E   5781 @CODE    CSECT
                                            5782 *
                                            5783 *
                                            5784 *
                                            5785 * ....... start of rd_kafka_coord_req_fail
00003A46                                    5786 @LNAME1964 DS  0H
00003A46 00000017                           5787          DC    X'00000017'
00003A4A 99846D9281869281                   5788          DC    C'rd_kafka_coord_req_fail'
00003A61 00                                 5789          DC    X'00'
                                            5790 rd_kafka_coord_req_fail DCCPRLG CINDEX=1964,BASER=12,FRAME=200,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1964
                                            5791          macro
                                            5792          dccextrn &m
                                            5793          gblc    &$dccext(1000)
                                            5794          gbla    &$dccexti
                                            5795          lcla    &i
                                            5796 &$dccext(&$dccexti+1) setc    '&m'
                                            5797 &i       seta    1
                                            5798 .loop    aif    (&i gt &$dccexti).around
                                            5799          aif    ('&$dccext(&i)' eq '&m').getout
                                            5800 &i       seta    &i+1
                                            5801          ago     .loop
                                            5802 .around  anop
                                            5803 &$dccexti seta &$dccexti+1
                                            5804          extrn  &m
                                            5805 .getout  anop
                                            5806          mend
00003A68                                    5807+$eye0127    ds    0d                                                    02-DCCCA
00003A68 C4C3C3                             5808+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page  119 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003A6B 01                                 5809+         dc xl1'01' format one                                          02-DCCCA
00003A6C 00000000                           5810+         dc a(0)                                                        02-DCCCA
00003A70 0000000000003ADA                   5811+         dc ad(@PER_1964)                                               02-DCCCA
00003A78 00000000000000C8                   5812+         dc ad(200)                                                     02-DCCCA
00003A80 0000000000000000                   5813+         dc ad(0)                                                       02-DCCCA
00003A88 0000000000001000                   5814+         dc ad(4096)                                                    02-DCCCA
00003A90 20                                 5815+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003A91 03                                 5816+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003A92 03                                 5817+         dc al1(3)                                                      02-DCCCA
00003A93 08                                 5818+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003A94 00                                 5819+         dc bl.8'00000000'                                              02-DCCCA
00003A95 000000                             5820+         dc al3(0)                                                      02-DCCCA
00003A98 0000000000003A46                   5821+         dc ad(@LNAME1964)                                              02-DCCCA
00003AA0                                    5822+         ds 0d                                                          02-DCCCA
00003AA0 0000000000003A68                   5823+         dc ad($eye0127)                                                02-DCCCA
00003AA8 0000000000000000                   5824+         dc ad(0)                                                       02-DCCCA
00003AB0                                    5825+         ds    0d                                                       01-DCCPR
00003AB0                                    5826+rd_kafka_coord_req_fail ds 0d                                           01-DCCPR
00003AB0                                    5827+@REGION_1964_1 ds 0h                                                    01-DCCPR
00003AB0 EBEC D008 0024          00000008   5828+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003AB6 E3E0 D088 0004          00000088   5829+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003ABC E3C0 D090 0004          00000090   5830+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003AC2 B904 002E                          5831+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003AC6 E3B0 C018 0004          00000018   5832+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003ACC A7EB 00C8               000000C8   5833+         aghi  14,200              increase by frame size               01-DCCPR
00003AD0 E3E0 C020 0021          00000020   5834+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003AD6 4720 B020               00000020   5835+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003ADA                                    5836+@PER_1964 ds   0h                                                       01-DCCPR
00003ADA EBDE 2080 0024          00000080   5837+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003AE0 E3C0 2090 0024          00000090   5838+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003AE6 B904 00D2                          5839+         lgr   13,2                set real frame pointer               01-DCCPR
00003AEA B904 00CF                          5840+         lgr   12,15               set base reg                         01-DCCPR
                        00003AB0            5841+         using @REGION_1964_1,12                                        01-DCCPR
00003AEE B904 0041                          5842          LGR   4,1         ; ptr to parm area
                                            5843 * ******* End of Prologue
                                            5844 * *
00003AF2 E320 4008 0004          00000008   5845          LG    2,8(0,4)    ; creq
                                            5846 * ***           rd_kafka_op_t *reply;
                                            5847 * ***           rd_kafka_buf_t *rkbuf;
                                            5848 * ***
                                            5849 * ***           reply = rd_kafka_op_new0(((void *)0), RD_KAFKA_OP_RECV\
                                            5850 * _BUF);
00003AF8 D707 D0B0 D0B0 000000B0 000000B0   5851          XC    176(8,13),176(13)
00003AFE E548 D0B8 0009          000000B8   5852          MVGHI 184(13),9
00003B04 4110 D0B0               000000B0   5853          LA    1,176(0,13)
00003B08 E3F0 C138 0004          00003BE8   5854          LG    15,@lit_1964_148 ; rd_kafka_op_new0
00003B0E                                    5855 @@gen_label248 DS    0H
00003B0E 05EF                               5856          BALR  14,15
00003B10                                    5857 @@gen_label249 DS    0H
00003B10 B904 003F                          5858          LGR   3,15
                                            5859 * ***           reply->rko_rk = rk;
00003B14 E350 4000 0004          00000000   5860          LG    5,0(0,4)    ; rk
                                                                                                                           Page  120 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003B1A E350 3060 0024          00000060   5861          STG   5,96(0,3)   ; offset of rko_rk in rd_kafka_op_s
                                            5862 * ***
                                            5863 * ***           reply->rko_err = err;
00003B20 5810 4014               00000014   5864          L     1,20(0,4)   ; err
00003B24 5010 3020               00000020   5865          ST    1,32(0,3)   ; offset of rko_err in rd_kafka_op_s
                                            5866 * ***
                                            5867 * ***
                                            5868 * ***           rkbuf = rd_kafka_buf_new0(0,0,0);
00003B28 D717 D0B0 D0B0 000000B0 000000B0   5869          XC    176(24,13),176(13)
00003B2E 4110 D0B0               000000B0   5870          LA    1,176(0,13)
00003B32 E3F0 C140 0004          00003BF0   5871          LG    15,@lit_1964_149 ; rd_kafka_buf_new0
00003B38                                    5872 @@gen_label250 DS    0H
00003B38 05EF                               5873          BALR  14,15
00003B3A                                    5874 @@gen_label251 DS    0H
                                            5875 * ***           rkbuf->rkbuf_cb = creq->creq_resp_cb;
00003B3A E310 2048 0004          00000048   5876          LG    1,72(0,2)   ; offset of creq_resp_cb in rd_kafka_coord_r*
                                                                eq_s
00003B40 E310 F0F0 0024          000000F0   5877          STG   1,240(0,15) ; offset of rkbuf_cb in rd_kafka_buf_s
                                            5878 * ***           rkbuf->rkbuf_opaque = creq->creq_reply_opaque;
00003B46 E310 2050 0004          00000050   5879          LG    1,80(0,2)   ; offset of creq_reply_opaque in rd_kafka_co*
                                                                ord_req_s
00003B4C E310 F138 0024          00000138   5880          STG   1,312(0,15) ; offset of rkbuf_opaque in rd_kafka_buf_s
                                            5881 * ***           reply->rko_u.xbuf.rkbuf = rkbuf;
00003B52 E3F0 3070 0024          00000070   5882          STG   15,112(0,3) ; offset of rko_u in rd_kafka_op_s
                                            5883 * ***
                                            5884 * ***           rd_kafka_replyq_enq(&creq->creq_replyq, reply, 0);
00003B58 41F0 2038               00000038   5885          LA    15,56(0,2)
00003B5C E3F0 D0B0 0024          000000B0   5886          STG   15,176(0,13)
00003B62 E330 D0B8 0024          000000B8   5887          STG   3,184(0,13)
00003B68 D707 D0C0 D0C0 000000C0 000000C0   5888          XC    192(8,13),192(13)
00003B6E 4110 D0B0               000000B0   5889          LA    1,176(0,13)
00003B72 E3F0 C148 0004          00003BF8   5890          LG    15,@lit_1964_150 ; rd_kafka_replyq_enq
00003B78                                    5891 @@gen_label252 DS    0H
00003B78 05EF                               5892          BALR  14,15
00003B7A                                    5893 @@gen_label253 DS    0H
                                            5894 * ***
                                            5895 * ***           rd_kafka_coord_req_destroy(rk, creq, 1);
00003B7A E350 D0B0 0024          000000B0   5896          STG   5,176(0,13)
00003B80 E320 D0B8 0024          000000B8   5897          STG   2,184(0,13)
00003B86 E548 D0C0 0001          000000C0   5898          MVGHI 192(13),1
00003B8C 4110 D0B0               000000B0   5899          LA    1,176(0,13)
00003B90 E3F0 C150 0004          00003C00   5900          LG    15,@lit_1964_151 ; rd_kafka_coord_req_destroy
00003B96                                    5901 @@gen_label254 DS    0H
00003B96 05EF                               5902          BALR  14,15
00003B98                                    5903 @@gen_label255 DS    0H
                                            5904 * ***   }
00003B98                                    5905 @ret_lab_1964 DS 0H
                                            5906 * * **** Start of Epilogue
                                            5907          DCCEPIL
00003B98                                    5908+         ds 0h                                                          01-DCCEP
                                            5909+* Epilog
00003B98 D707 D088 D088 00000088 00000088   5910+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page  121 
  Active Usings: @REGION_1964_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003B9E E3D0 D080 0004          00000080   5911+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003BA4 E3C0 D090 0004          00000090   5912+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003BAA E3B0 C018 0004          00000018   5913+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003BB0 E3C0 B010 0021          00000010   5914+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003BB6 E3E0 D008 0004          00000008   5915+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003BBC EB1C D020 0004          00000020   5916+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003BC2 078E                               5917+         bcr 8,14                if same dsab, just return              01-DCCEP
00003BC4 E3F0 D010 0024          00000010   5918+         stg 15,16(0,13)         save return code                       01-DCCEP
00003BCA E300 D018 0024          00000018   5919+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003BD0 E3F0 D090 0004          00000090   5920+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003BD6 E3F0 F018 0004          00000018   5921+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003BDC 47F0 F040               00000040   5922+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5923+* End of Epilog
                                            5924 * * **** End of Epilogue
00003BE0                                    5925          DS    0D
00003BE0 000000C8                           5926 @FRAMESIZE_1964 DC F'200'
00003BE4 00000000
00003BE8 0000000000000000                   5927 @lit_1964_148 DC AD(rd_kafka_op_new0)
00003BF0 0000000000000000                   5928 @lit_1964_149 DC AD(rd_kafka_buf_new0)
00003BF8 00000000000024D8                   5929 @lit_1964_150 DC AD(rd_kafka_replyq_enq)
00003C00 0000000000003800                   5930 @lit_1964_151 DC AD(rd_kafka_coord_req_destroy)
                                            5931          DROP  12
                                            5932 *
                                            5933 *   DSECT for automatic variables in "rd_kafka_coord_req_fail"
                                            5934 *      (FUNCTION #1964)
                                            5935 *
00000000                00000000 000000A8   5936 @AUTO#rd_kafka_coord_req_fail DSECT
00000000                                    5937          DS    XL168
                                            5938 *
00003C08                00000000 0000685E   5939 @CODE    CSECT
                                            5940 *
                                            5941 *
                                            5942 *
                                            5943 * ....... start of rd_kafka_coord_req_handle_FindCoordinator
00003C08                                    5944 @LNAME1965 DS  0H
00003C08 00000029                           5945          DC    X'00000029'
00003C0C 99846D9281869281                   5946          DC    C'rd_kafka_coord_req_handle_FindCo'
00003C2C 969984899581A396                   5947          DC    C'ordinator'
00003C35 00                                 5948          DC    X'00'
                                            5949 rd_kafka_coord_req_handle_$Find$Coordinator DCCPRLG CINDEX=1965,BASER=1*
                                                                2,FRAME=1216,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1965
                                            5950          macro
                                            5951          dccextrn &m
                                            5952          gblc    &$dccext(1000)
                                            5953          gbla    &$dccexti
                                            5954          lcla    &i
                                            5955 &$dccext(&$dccexti+1) setc    '&m'
                                            5956 &i       seta    1
                                            5957 .loop    aif    (&i gt &$dccexti).around
                                            5958          aif    ('&$dccext(&i)' eq '&m').getout
                                            5959 &i       seta    &i+1
                                            5960          ago     .loop
                                                                                                                           Page  122 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5961 .around  anop
                                            5962 &$dccexti seta &$dccexti+1
                                            5963          extrn  &m
                                            5964 .getout  anop
                                            5965          mend
00003C38                                    5966+$eye0130    ds    0d                                                    02-DCCCA
00003C38 C4C3C3                             5967+         dc cl3'DCC'                                                    02-DCCCA
00003C3B 01                                 5968+         dc xl1'01' format one                                          02-DCCCA
00003C3C 00000000                           5969+         dc a(0)                                                        02-DCCCA
00003C40 0000000000003CAA                   5970+         dc ad(@PER_1965)                                               02-DCCCA
00003C48 00000000000004C0                   5971+         dc ad(1216)                                                    02-DCCCA
00003C50 0000000000000000                   5972+         dc ad(0)                                                       02-DCCCA
00003C58 0000000000001000                   5973+         dc ad(4096)                                                    02-DCCCA
00003C60 20                                 5974+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003C61 03                                 5975+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003C62 03                                 5976+         dc al1(3)                                                      02-DCCCA
00003C63 08                                 5977+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003C64 00                                 5978+         dc bl.8'00000000'                                              02-DCCCA
00003C65 000000                             5979+         dc al3(0)                                                      02-DCCCA
00003C68 0000000000003C08                   5980+         dc ad(@LNAME1965)                                              02-DCCCA
00003C70                                    5981+         ds 0d                                                          02-DCCCA
00003C70 0000000000003C38                   5982+         dc ad($eye0130)                                                02-DCCCA
00003C78 0000000000000000                   5983+         dc ad(0)                                                       02-DCCCA
00003C80                                    5984+         ds    0d                                                       01-DCCPR
00003C80                                    5985+rd_kafka_coord_req_handle_$Find$Coordinator ds 0d                       01-DCCPR
00003C80                                    5986+@REGION_1965_1 ds 0h                                                    01-DCCPR
00003C80 EBEC D008 0024          00000008   5987+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003C86 E3E0 D088 0004          00000088   5988+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003C8C E3C0 D090 0004          00000090   5989+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003C92 B904 002E                          5990+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003C96 E3B0 C018 0004          00000018   5991+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003C9C A7EB 04C0               000004C0   5992+         aghi  14,1216             increase by frame size               01-DCCPR
00003CA0 E3E0 C020 0021          00000020   5993+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003CA6 4720 B020               00000020   5994+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003CAA                                    5995+@PER_1965 ds   0h                                                       01-DCCPR
00003CAA EBDE 2080 0024          00000080   5996+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003CB0 E3C0 2090 0024          00000090   5997+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003CB6 B904 00D2                          5998+         lgr   13,2                set real frame pointer               01-DCCPR
00003CBA B904 00CF                          5999+         lgr   12,15               set base reg                         01-DCCPR
                        00003C80            6000+         using @REGION_1965_1,12                                        01-DCCPR
                                            6001 * ******* End of Prologue
                                            6002 * *
                                            6003 * ***           const int log_decode_errors = 3;
00003CBE EB45 1000 0004          00000000   6004          LMG   4,5,0(1)    ; rk
00003CC4 5820 1014               00000014   6005          L     2,20(0,1)   ; err
00003CC8 E330 1018 0004          00000018   6006          LG    3,24(0,1)   ; rkbuf
00003CCE E360 1020 0004          00000020   6007          LG    6,32(0,1)   ; request
00003CD4 A778 0003               00000003   6008          LHI   7,3         ; 3
                                            6009 * ***           rd_kafka_coord_req_t *creq = opaque;
00003CD8 E380 1028 0004          00000028   6010          LG    8,40(0,1)   ; opaque
                                            6011 * ***           int16_t ErrorCode;
                                            6012 * ***           rd_kafkap_str_t Host;
                                                                                                                           Page  123 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6013 * ***           int32_t NodeId, Port;
                                            6014 * ***           char errstr[256] = "";
00003CDE 9200 D10A      0000010A 00000000   6015          MVI   266(13),0
                                            6016 * setting 255 bytes to 0x00
00003CE2 D7FE D10B D10B 0000010B 0000010B   6017          XC    267(255,13),267(13)
                                            6018 * ***           int actions;
                                            6019 * ***           rd_kafka_broker_t *coord;
                                            6020 * ***           rd_kafka_metadata_broker_t mdb = {};
                                            6021 * setting 24 bytes to 0x00
00003CE8 D717 D0E8 D0E8 000000E8 000000E8   6022          XC    232(24,13),232(13)
                                            6023 * ***
                                            6024 * ***
                                            6025 * ***
                                            6026 * ***
                                            6027 * ***           if (creq->creq_done)
00003CEE 9500 805C      0000005C 00000000   6028          CLI   92(8),0
00003CF2 4780 C07A               00003CFA   6029          BE    @L707
                                            6030 * ***                   err = RD_KAFKA_RESP_ERR__DESTROY;
00003CF6 A728 FF3B               0000FF3B   6031          LHI   2,-197      ; -197
00003CFA                                    6032 @L707    DS    0H
                                            6033 * ***
                                            6034 * ***           if (err)
00003CFA 1222                               6035          LTR   2,2
00003CFC 4780 C08A               00003D0A   6036          BZ    *+14  Around region break
00003D00 E3C0 C274 001A          00003EF4   6037          ALGF  12,@lit_region_diff_1965_1_4
                                            6038          DROP  12
                        0000589A            6039          USING @REGION_1965_4,12
00003D06 47F0 C734               00005FCE   6040          B     @_err@1965@0
                                            6041          DROP  12
                        00003C80            6042          USING @REGION_1965_1,12
                                            6043 * ***                   goto err;
00003D0A                                    6044 @L708    DS    0H
                                            6045 * ***
                                            6046 * ***           if (request->rkbuf_reqhdr.ApiVersion >= 1)
00003D0A 48F0 60BA               000000BA   6047          LH    15,186(0,6)
00003D0E A7FE 0001               00000001   6048          CHI   15,1
00003D12 4740 C414               00004094   6049          BL    @L741
                                            6050 * ***                   do { int32_t _throttle_time_ms; do { int32_t _\
                                            6051 * v; do { size_t __len2 = (size_t)(sizeof(_v)); if (!rd_slice_read(&(r\
                                            6052 * kbuf)->rkbuf_reader, &_v, __len2)) do { size_t __len0 = (size_t)(__l\
                                            6053 * en2); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_o\
                                            6054 * ffset(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0) \
                                            6055 * { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\li\
                                            6056 * brdkafka\\src\\rdkafka_coord.c",334, __FUNCTION__, (((void *)0)), "a\
                                            6057 * ssert: " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snpri\
                                            6058 * ntf(__tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) \
                                            6059 * __tmpstr[0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf\
                                            6060 * _rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb\
                                            6061 * _logname, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_log\
                                            6062 * name_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkb\
                                            6063 * uf->rkbuf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLO\
                                            6064 * W", "Protocol read buffer underflow " "for %s v%hd " "at %" "zu" "/%\
                                                                                                                           Page  124 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6065 * " "zu" " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remaini\
                                            6066 * ng bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), \
                                            6067 * rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader\
                                            6068 * ), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start), __\
                                            6069 * FUNCTION__, 334, __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs\
                                            6070 * _offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbu\
                                            6071 * f->rkbuf_uflow_mitigation : "incorrect broker.version.fallback?", __\
                                            6072 * tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDE\
                                            6073 * RFLOW; goto err_parse; } while (0); } } while (0); } while (0); *(&_\
                                            6074 * throttle_time_ms) = (_v); } while (0); rd_kafka_op_throttle_time((rk\
                                            6075 * buf)->rkbuf_rkb, (rkbuf)->rkbuf_rkb->rkb_rk->rk_rep, _throttle_time_\
                                            6076 * ms); } while (0);
00003D16                                    6077 @L710    DS    0H
00003D16                                    6078 @L713    DS    0H
00003D16                                    6079 @L716    DS    0H
00003D16 A729 0004               00000004   6080          LGHI  2,4         ; 4
00003D1A 41F0 3078               00000078   6081          LA    15,120(0,3)
00003D1E E3F0 D438 0024          00000438   6082          STG   15,1080(0,13)
00003D24 41F0 D0AC               000000AC   6083          LA    15,172(0,13)
00003D28 E3F0 D440 0024          00000440   6084          STG   15,1088(0,13)
00003D2E E320 D448 0024          00000448   6085          STG   2,1096(0,13)
00003D34 4110 D438               00000438   6086          LA    1,1080(0,13)
00003D38 E3F0 C278 0004          00003EF8   6087          LG    15,@lit_1965_156 ; rd_slice_read
00003D3E                                    6088 @@gen_label259 DS    0H
00003D3E 05EF                               6089          BALR  14,15
00003D40                                    6090 @@gen_label260 DS    0H
00003D40 B902 00FF                          6091          LTGR  15,15
00003D44 4770 C3D0               00004050   6092          BNZ   @L719
00003D48                                    6093 @L720    DS    0H
00003D48 E390 3098 0004          00000098   6094          LG    9,152(0,3)  ; offset of end in rd_slice_s
00003D4E 41F0 3078               00000078   6095          LA    15,120(0,3)
00003D52 E3F0 D438 0024          00000438   6096          STG   15,1080(0,13)
00003D58 4110 D438               00000438   6097          LA    1,1080(0,13)
00003D5C E3F0 C280 0004          00003F00   6098          LG    15,@lit_1965_157 ; rd_slice_abs_offset
00003D62                                    6099 @@gen_label262 DS    0H
00003D62 05EF                               6100          BALR  14,15
00003D64                                    6101 @@gen_label263 DS    0H
00003D64 B90B 009F                          6102          SLGR  9,15
00003D68 B921 0029                          6103          CLGR  2,9
00003D6C 47D0 C3D0               00004050   6104          BNH   @L723
00003D70                                    6105 @L724    DS    0H
00003D70 1277                               6106          LTR   7,7
00003D72 47D0 C3C0               00004040   6107          BNH   @L727
00003D76                                    6108 @L728    DS    0H
00003D76 E3F0 3100 0002          00000100   6109          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00003D7C 4770 C142               00003DC2   6110          BNZ   @L731
00003D80 E3F0 C298 0004          00003F18   6111          LG    15,@lit_1965_158
00003D86 4110 F09E               0000009E   6112          LA    1,158(0,15)
00003D8A E310 D438 0024          00000438   6113          STG   1,1080(0,13)
00003D90 E548 D440 014E          00000440   6114          MVGHI 1088(13),334
00003D96 E310 C290 0004          00003F10   6115          LG    1,@lit_1965_159
00003D9C 4110 11E6               000001E6   6116          LA    1,486(0,1)
                                                                                                                           Page  125 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003DA0 E310 D448 0024          00000448   6117          STG   1,1096(0,13)
00003DA6 D707 D450 D450 00000450 00000450   6118          XC    1104(8,13),1104(13)
00003DAC 41F0 F0F0               000000F0   6119          LA    15,240(0,15)
00003DB0 E3F0 D458 0024          00000458   6120          STG   15,1112(0,13)
00003DB6 4110 D438               00000438   6121          LA    1,1080(0,13)
00003DBA E3F0 C288 0004          00003F08   6122          LG    15,@lit_1965_160 ; rd_kafka_crash
00003DC0                                    6123 @@gen_label267 DS    0H
00003DC0 05EF                               6124          BALR  14,15
00003DC2                                    6125 @@gen_label268 DS    0H
00003DC2                                    6126 @L731    DS    0H
00003DC2 41F0 D228               00000228   6127          LA    15,552(0,13)
00003DC6 E3F0 D438 0024          00000438   6128          STG   15,1080(0,13)
00003DCC E548 D440 0100          00000440   6129          MVGHI 1088(13),256
00003DD2 E3F0 C298 0004          00003F18   6130          LG    15,@lit_1965_158
00003DD8 41F0 F10A               0000010A   6131          LA    15,266(0,15)
00003DDC E3F0 D448 0024          00000448   6132          STG   15,1096(0,13)
00003DE2 4110 D438               00000438   6133          LA    1,1080(0,13)
00003DE6 E3F0 C2A0 0004          00003F20   6134          LG    15,@lit_1965_162 ; snprintf
00003DEC                                    6135 @@gen_label269 DS    0H
00003DEC 05EF                               6136          BALR  14,15
00003DEE                                    6137 @@gen_label270 DS    0H
00003DEE 41F0 D228               00000228   6138          LA    15,552(0,13)
00003DF2 B904 001F                          6139          LGR   1,15
00003DF6 A709 0000               00000000   6140          LGHI  0,0
00003DFA                                    6141 @@gen_label271 DS 0H
00003DFA B25E 000F                          6142          SRST  0,15
00003DFE 4710 C17A               00003DFA   6143          BC  1,@@gen_label271
00003E02 B90B 0001                          6144          SLGR  0,1
00003E06 A70F 0002               00000002   6145          CGHI  0,2
00003E0A 4770 C192               00003E12   6146          BNE   @L733
00003E0E 9200 D228      00000228 00000000   6147          MVI   552(13),0
00003E12                                    6148 @L732    DS    0H
00003E12                                    6149 @L733    DS    0H
00003E12 E3F0 3100 0004          00000100   6150          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00003E18 A799 1638               00001638   6151          LGHI  9,5688      ; 5688
00003E1C 41F9 F000               00000000   6152          LA    15,0(9,15)
00003E20 E3F0 D438 0024          00000438   6153          STG   15,1080(0,13)
00003E26 4110 D438               00000438   6154          LA    1,1080(0,13)
00003E2A E3F0 C2A8 0004          00003F28   6155          LG    15,@lit_1965_164 ; mtx_lock
00003E30                                    6156 @@gen_label273 DS    0H
00003E30 05EF                               6157          BALR  14,15
00003E32                                    6158 @@gen_label274 DS    0H
00003E32 41F0 D328               00000328   6159          LA    15,808(0,13)
00003E36 E3F0 D438 0024          00000438   6160          STG   15,1080(0,13)
00003E3C E3F0 3100 0004          00000100   6161          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00003E42 A719 1630               00001630   6162          LGHI  1,5680      ; 5680
00003E46 E3F1 F000 0004          00000000   6163          LG    15,0(1,15)
00003E4C E3F0 D440 0024          00000440   6164          STG   15,1088(0,13)
00003E52 E548 D448 0100          00000448   6165          MVGHI 1096(13),256
00003E58 4110 D438               00000438   6166          LA    1,1080(0,13)
00003E5C E3F0 C2B0 0004          00003F30   6167          LG    15,@lit_1965_166 ; rd_strlcpy
00003E62                                    6168 @@gen_label275 DS    0H
                                                                                                                           Page  126 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003E62 05EF                               6169          BALR  14,15
00003E64                                    6170 @@gen_label276 DS    0H
00003E64 E3F0 3100 0004          00000100   6171          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00003E6A 41F9 F000               00000000   6172          LA    15,0(9,15)
00003E6E E3F0 D438 0024          00000438   6173          STG   15,1080(0,13)
00003E74 4110 D438               00000438   6174          LA    1,1080(0,13)
00003E78 E3F0 C2B8 0004          00003F38   6175          LG    15,@lit_1965_168 ; mtx_unlock
00003E7E                                    6176 @@gen_label277 DS    0H
00003E7E 05EF                               6177          BALR  14,15
00003E80                                    6178 @@gen_label278 DS    0H
00003E80 E3F0 30B8 0015          000000B8   6179          LGH   15,184(0,3)
00003E86 E3F0 D438 0024          00000438   6180          STG   15,1080(0,13)
00003E8C 4110 D438               00000438   6181          LA    1,1080(0,13)
00003E90 E3F0 C2C0 0004          00003F40   6182          LG    15,@lit_1965_169 ; rd_kafka_ApiKey2str
00003E96                                    6183 @@gen_label279 DS    0H
00003E96 05EF                               6184          BALR  14,15
00003E98                                    6185 @@gen_label280 DS    0H
00003E98 B904 009F                          6186          LGR   9,15
00003E9C 41F0 3078               00000078   6187          LA    15,120(0,3)
00003EA0 E3F0 D438 0024          00000438   6188          STG   15,1080(0,13)
00003EA6 4110 D438               00000438   6189          LA    1,1080(0,13)
00003EAA E3F0 C2C8 0004          00003F48   6190          LG    15,@lit_1965_170 ; rd_slice_offset
00003EB0                                    6191 @@gen_label281 DS    0H
00003EB0 05EF                               6192          BALR  14,15
00003EB2                                    6193 @@gen_label282 DS    0H
00003EB2 B904 00AF                          6194          LGR   10,15
00003EB6 E3B0 3098 0004          00000098   6195          LG    11,152(0,3) ; offset of end in rd_slice_s
00003EBC 41F0 3078               00000078   6196          LA    15,120(0,3)
00003EC0 E3F0 D438 0024          00000438   6197          STG   15,1080(0,13)
00003EC6 4110 D438               00000438   6198          LA    1,1080(0,13)
00003ECA E3F0 C280 0004          00003F00   6199          LG    15,@lit_1965_157 ; rd_slice_abs_offset
00003ED0                                    6200 @@gen_label283 DS    0H
00003ED0 05EF                               6201          BALR  14,15
00003ED2                                    6202 @@gen_label284 DS    0H
00003ED2 B90B 00BF                          6203          SLGR  11,15
00003ED6 E3F0 31E8 0002          000001E8   6204          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00003EDC 4780 C2F0               00003F70   6205          BZ    @L736
00003EE0 E3F0 31E8 0004          000001E8   6206          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00003EE6 47F0 C2FA               00003F7A   6207          B     @L737
00003EF0                                    6208          DS    0D
00003EF0 000004C0                           6209 @FRAMESIZE_1965 DC F'1216'
00003EF4 00001C1A                           6210 @lit_region_diff_1965_1_4  DC A(@REGION_1965_4-@REGION_1965_1)
00003EF8 0000000000000000                   6211 @lit_1965_156 DC AD(rd_slice_read)
00003F00 0000000000000DA8                   6212 @lit_1965_157 DC AD(rd_slice_abs_offset)
00003F08 0000000000000000                   6213 @lit_1965_160 DC AD(rd_kafka_crash)
00003F10 0000000000006860                   6214 @lit_1965_159 DC AD(@DATA)
00003F18 0000000000006A88                   6215 @lit_1965_158 DC AD(@strings@)
00003F20 0000000000000000                   6216 @lit_1965_162 DC AD(snprintf)
00003F28 0000000000000000                   6217 @lit_1965_164 DC AD(mtx_lock)
00003F30 00000000000010A0                   6218 @lit_1965_166 DC AD(rd_strlcpy)
                                                                                                                           Page  127 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003F38 0000000000000000                   6219 @lit_1965_168 DC AD(mtx_unlock)
00003F40 0000000000000F08                   6220 @lit_1965_169 DC AD(rd_kafka_$Api$Key2str)
00003F48 0000000000000E50                   6221 @lit_1965_170 DC AD(rd_slice_offset)
00003F50 0000000000000000                   6222 @lit_1965_175 DC AD(rd_kafka_log0)
00003F58 0000000000000000                   6223 @lit_1965_176 DC AD(rd_kafka_op_throttle_time)
00003F60 000008C2                           6224 @lit_region_diff_1965_1_2  DC A(@REGION_1965_2-@REGION_1965_1)
00003F64 00000000
00003F68 0000000000000000                   6225 @lit_1965_198 DC AD(rd_slice_read_uvarint)
00003F70                                    6226 @L736    DS    0H
00003F70 E3F0 C298 0004          00003F18   6227          LG    15,@lit_1965_158
00003F76 41F0 F10E               0000010E   6228          LA    15,270(0,15)
00003F7A                                    6229 @L737    DS    0H
00003F7A E310 3100 0004          00000100   6230          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00003F80 E310 1FD0 0004          00000FD0   6231          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00003F86 4110 1210               00000210   6232          LA    1,528(0,1)
00003F8A E310 D438 0024          00000438   6233          STG   1,1080(0,13)
00003F90 E310 3100 0004          00000100   6234          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00003F96 E310 1FD0 0004          00000FD0   6235          LG    1,4048(0,1)
00003F9C E310 D440 0024          00000440   6236          STG   1,1088(0,13)
00003FA2 4110 D328               00000328   6237          LA    1,808(0,13)
00003FA6 E310 D448 0024          00000448   6238          STG   1,1096(0,13)
00003FAC B914 0017                          6239          LGFR  1,7
00003FB0 E310 D450 0024          00000450   6240          STG   1,1104(0,13)
00003FB6 D707 D458 D458 00000458 00000458   6241          XC    1112(8,13),1112(13)
00003FBC E310 C298 0004          00003F18   6242          LG    1,@lit_1965_158
00003FC2 4170 1132               00000132   6243          LA    7,306(0,1)
00003FC6 E370 D460 0024          00000460   6244          STG   7,1120(0,13)
00003FCC 4110 113E               0000013E   6245          LA    1,318(0,1)
00003FD0 E310 D468 0024          00000468   6246          STG   1,1128(0,13)
00003FD6 E390 D470 0024          00000470   6247          STG   9,1136(0,13)
00003FDC 4810 30BA               000000BA   6248          LH    1,186(0,3)
00003FE0 B914 0011                          6249          LGFR  1,1
00003FE4 E310 D478 0024          00000478   6250          STG   1,1144(0,13)
00003FEA E3A0 D480 0024          00000480   6251          STG   10,1152(0,13)
00003FF0 E310 3098 0004          00000098   6252          LG    1,152(0,3)  ; offset of end in rd_slice_s
00003FF6 E310 3090 000B          00000090   6253          SLG   1,144(0,3)
00003FFC E310 D488 0024          00000488   6254          STG   1,1160(0,13)
00004002 E310 C290 0004          00003F10   6255          LG    1,@lit_1965_159
00004008 4110 11E6               000001E6   6256          LA    1,486(0,1)
0000400C E310 D490 0024          00000490   6257          STG   1,1168(0,13)
00004012 E548 D498 014E          00000498   6258          MVGHI 1176(13),334
00004018 E320 D4A0 0024          000004A0   6259          STG   2,1184(0,13)
0000401E E3B0 D4A8 0024          000004A8   6260          STG   11,1192(0,13)
00004024 E3F0 D4B0 0024          000004B0   6261          STG   15,1200(0,13)
0000402A 41F0 D228               00000228   6262          LA    15,552(0,13)
0000402E E3F0 D4B8 0024          000004B8   6263          STG   15,1208(0,13)
00004034 4110 D438               00000438   6264          LA    1,1080(0,13)
00004038 E3F0 C2D0 0004          00003F50   6265          LG    15,@lit_1965_175 ; rd_kafka_log0
0000403E                                    6266 @@gen_label286 DS    0H
0000403E 05EF                               6267          BALR  14,15
00004040                                    6268 @@gen_label287 DS    0H
00004040                                    6269 @L727    DS    0H
                                                                                                                           Page  128 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004040 E54C 3188 FF65          00000188   6270          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00004046 E3C0 C274 001A          00003EF4   6271          ALGF  12,@lit_region_diff_1965_1_4
                                            6272          DROP  12
                        0000589A            6273          USING @REGION_1965_4,12
0000404C 47F0 C730               00005FCA   6274          B     @_err_parse@1965@1
                                            6275          DROP  12
                        00003C80            6276          USING @REGION_1965_1,12
00004050                                    6277 @L723    DS    0H
00004050                                    6278 @L719    DS    0H
00004050 58F0 D0AC               000000AC   6279          L     15,172(0,13) ; _v
00004054 50F0 D0A8               000000A8   6280          ST    15,168(0,13)
00004058 E3F0 3100 0004          00000100   6281          LG    15,256(0,3)
0000405E E3F0 D438 0024          00000438   6282          STG   15,1080(0,13)
00004064 E3F0 3100 0004          00000100   6283          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000406A E3F0 FFD0 0004          00000FD0   6284          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00004070 E3F0 F000 0004          00000000   6285          LG    15,0(0,15)
00004076 E3F0 D440 0024          00000440   6286          STG   15,1088(0,13)
0000407C E3F0 D0A8 0014          000000A8   6287          LGF   15,168(0,13) ; _throttle_time_ms
00004082 E3F0 D448 0024          00000448   6288          STG   15,1096(0,13)
00004088 4110 D438               00000438   6289          LA    1,1080(0,13)
0000408C E3F0 C2D8 0004          00003F58   6290          LG    15,@lit_1965_176 ; rd_kafka_op_throttle_time
00004092                                    6291 @@gen_label288 DS    0H
00004092 05EF                               6292          BALR  14,15
00004094                                    6293 @@gen_label289 DS    0H
                                            6294 * ***
                                            6295 * ***           do { int16_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                            6296 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                            6297 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                            6298 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                            6299 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                            6300 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_coord.c",336, __F\
                                            6301 * UNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0\
                                            6302 * ); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); i\
                                            6303 * f (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[2\
                                            6304 * 56]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_lo\
                                            6305 * gname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(\
                                            6306 * &(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf\
                                            6307 * _rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_de\
                                            6308 * code_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "f\
                                            6309 * or %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " \
                                            6310 * bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rk\
                                            6311 * buf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice\
                                            6312 * _offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbu\
                                            6313 * f->rkbuf_reader)->start), __FUNCTION__, 336, __len0, ((&rkbuf->rkbuf\
                                            6314 * _reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->r\
                                            6315 * kbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect b\
                                            6316 * roker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_e\
                                            6317 * rr = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } \
                                            6318 * while (0); } while (0); *(&ErrorCode) = (int16_t)(_v); } while (0);
00004094                                    6319 @L709    DS    0H
00004094                                    6320 @L738    DS    0H
00004094                                    6321 @L741    DS    0H
                                                                                                                           Page  129 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004094 A729 0002               00000002   6322          LGHI  2,2         ; 2
00004098 41F0 3078               00000078   6323          LA    15,120(0,3)
0000409C E3F0 D438 0024          00000438   6324          STG   15,1080(0,13)
000040A2 41F0 D0B0               000000B0   6325          LA    15,176(0,13)
000040A6 E3F0 D440 0024          00000440   6326          STG   15,1088(0,13)
000040AC E320 D448 0024          00000448   6327          STG   2,1096(0,13)
000040B2 4110 D438               00000438   6328          LA    1,1080(0,13)
000040B6 E3F0 C278 0004          00003EF8   6329          LG    15,@lit_1965_156 ; rd_slice_read
000040BC                                    6330 @@gen_label290 DS    0H
000040BC 05EF                               6331          BALR  14,15
000040BE                                    6332 @@gen_label291 DS    0H
000040BE B902 00FF                          6333          LTGR  15,15
000040C2 4770 C6C8               00004348   6334          BNZ   @L744
000040C6                                    6335 @L745    DS    0H
000040C6 E390 3098 0004          00000098   6336          LG    9,152(0,3)  ; offset of end in rd_slice_s
000040CC 41F0 3078               00000078   6337          LA    15,120(0,3)
000040D0 E3F0 D438 0024          00000438   6338          STG   15,1080(0,13)
000040D6 4110 D438               00000438   6339          LA    1,1080(0,13)
000040DA E3F0 C280 0004          00003F00   6340          LG    15,@lit_1965_157 ; rd_slice_abs_offset
000040E0                                    6341 @@gen_label293 DS    0H
000040E0 05EF                               6342          BALR  14,15
000040E2                                    6343 @@gen_label294 DS    0H
000040E2 B90B 009F                          6344          SLGR  9,15
000040E6 B921 0029                          6345          CLGR  2,9
000040EA 47D0 C6C8               00004348   6346          BNH   @L748
000040EE                                    6347 @L749    DS    0H
000040EE 1277                               6348          LTR   7,7
000040F0 47D0 C6B8               00004338   6349          BNH   @L752
000040F4                                    6350 @L753    DS    0H
000040F4 E3F0 3100 0002          00000100   6351          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
000040FA 4770 C4C0               00004140   6352          BNZ   @L756
000040FE E3F0 C298 0004          00003F18   6353          LG    15,@lit_1965_158
00004104 4110 F09E               0000009E   6354          LA    1,158(0,15)
00004108 E310 D438 0024          00000438   6355          STG   1,1080(0,13)
0000410E E548 D440 0150          00000440   6356          MVGHI 1088(13),336
00004114 E310 C290 0004          00003F10   6357          LG    1,@lit_1965_159
0000411A 4110 11E6               000001E6   6358          LA    1,486(0,1)
0000411E E310 D448 0024          00000448   6359          STG   1,1096(0,13)
00004124 D707 D450 D450 00000450 00000450   6360          XC    1104(8,13),1104(13)
0000412A 41F0 F0F0               000000F0   6361          LA    15,240(0,15)
0000412E E3F0 D458 0024          00000458   6362          STG   15,1112(0,13)
00004134 4110 D438               00000438   6363          LA    1,1080(0,13)
00004138 E3F0 C288 0004          00003F08   6364          LG    15,@lit_1965_160 ; rd_kafka_crash
0000413E                                    6365 @@gen_label298 DS    0H
0000413E 05EF                               6366          BALR  14,15
00004140                                    6367 @@gen_label299 DS    0H
00004140                                    6368 @L756    DS    0H
00004140 41F0 D228               00000228   6369          LA    15,552(0,13)
00004144 E3F0 D438 0024          00000438   6370          STG   15,1080(0,13)
0000414A E548 D440 0100          00000440   6371          MVGHI 1088(13),256
00004150 E3F0 C298 0004          00003F18   6372          LG    15,@lit_1965_158
00004156 41F0 F10A               0000010A   6373          LA    15,266(0,15)
                                                                                                                           Page  130 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000415A E3F0 D448 0024          00000448   6374          STG   15,1096(0,13)
00004160 4110 D438               00000438   6375          LA    1,1080(0,13)
00004164 E3F0 C2A0 0004          00003F20   6376          LG    15,@lit_1965_162 ; snprintf
0000416A                                    6377 @@gen_label300 DS    0H
0000416A 05EF                               6378          BALR  14,15
0000416C                                    6379 @@gen_label301 DS    0H
0000416C 41F0 D228               00000228   6380          LA    15,552(0,13)
00004170 B904 001F                          6381          LGR   1,15
00004174 A709 0000               00000000   6382          LGHI  0,0
00004178                                    6383 @@gen_label302 DS 0H
00004178 B25E 000F                          6384          SRST  0,15
0000417C 4710 C4F8               00004178   6385          BC  1,@@gen_label302
00004180 B90B 0001                          6386          SLGR  0,1
00004184 A70F 0002               00000002   6387          CGHI  0,2
00004188 4770 C510               00004190   6388          BNE   @L758
0000418C 9200 D228      00000228 00000000   6389          MVI   552(13),0
00004190                                    6390 @L757    DS    0H
00004190                                    6391 @L758    DS    0H
00004190 E3F0 3100 0004          00000100   6392          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004196 A799 1638               00001638   6393          LGHI  9,5688      ; 5688
0000419A 41F9 F000               00000000   6394          LA    15,0(9,15)
0000419E E3F0 D438 0024          00000438   6395          STG   15,1080(0,13)
000041A4 4110 D438               00000438   6396          LA    1,1080(0,13)
000041A8 E3F0 C2A8 0004          00003F28   6397          LG    15,@lit_1965_164 ; mtx_lock
000041AE                                    6398 @@gen_label304 DS    0H
000041AE 05EF                               6399          BALR  14,15
000041B0                                    6400 @@gen_label305 DS    0H
000041B0 41F0 D328               00000328   6401          LA    15,808(0,13)
000041B4 E3F0 D438 0024          00000438   6402          STG   15,1080(0,13)
000041BA E3F0 3100 0004          00000100   6403          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
000041C0 A719 1630               00001630   6404          LGHI  1,5680      ; 5680
000041C4 E3F1 F000 0004          00000000   6405          LG    15,0(1,15)
000041CA E3F0 D440 0024          00000440   6406          STG   15,1088(0,13)
000041D0 E548 D448 0100          00000448   6407          MVGHI 1096(13),256
000041D6 4110 D438               00000438   6408          LA    1,1080(0,13)
000041DA E3F0 C2B0 0004          00003F30   6409          LG    15,@lit_1965_166 ; rd_strlcpy
000041E0                                    6410 @@gen_label306 DS    0H
000041E0 05EF                               6411          BALR  14,15
000041E2                                    6412 @@gen_label307 DS    0H
000041E2 E3F0 3100 0004          00000100   6413          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
000041E8 41F9 F000               00000000   6414          LA    15,0(9,15)
000041EC E3F0 D438 0024          00000438   6415          STG   15,1080(0,13)
000041F2 4110 D438               00000438   6416          LA    1,1080(0,13)
000041F6 E3F0 C2B8 0004          00003F38   6417          LG    15,@lit_1965_168 ; mtx_unlock
000041FC                                    6418 @@gen_label308 DS    0H
000041FC 05EF                               6419          BALR  14,15
000041FE                                    6420 @@gen_label309 DS    0H
000041FE E3F0 30B8 0015          000000B8   6421          LGH   15,184(0,3)
00004204 E3F0 D438 0024          00000438   6422          STG   15,1080(0,13)
0000420A 4110 D438               00000438   6423          LA    1,1080(0,13)
0000420E E3F0 C2C0 0004          00003F40   6424          LG    15,@lit_1965_169 ; rd_kafka_ApiKey2str
00004214                                    6425 @@gen_label310 DS    0H
                                                                                                                           Page  131 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004214 05EF                               6426          BALR  14,15
00004216                                    6427 @@gen_label311 DS    0H
00004216 B904 009F                          6428          LGR   9,15
0000421A 41F0 3078               00000078   6429          LA    15,120(0,3)
0000421E E3F0 D438 0024          00000438   6430          STG   15,1080(0,13)
00004224 4110 D438               00000438   6431          LA    1,1080(0,13)
00004228 E3F0 C2C8 0004          00003F48   6432          LG    15,@lit_1965_170 ; rd_slice_offset
0000422E                                    6433 @@gen_label312 DS    0H
0000422E 05EF                               6434          BALR  14,15
00004230                                    6435 @@gen_label313 DS    0H
00004230 B904 00AF                          6436          LGR   10,15
00004234 E3B0 3098 0004          00000098   6437          LG    11,152(0,3) ; offset of end in rd_slice_s
0000423A 41F0 3078               00000078   6438          LA    15,120(0,3)
0000423E E3F0 D438 0024          00000438   6439          STG   15,1080(0,13)
00004244 4110 D438               00000438   6440          LA    1,1080(0,13)
00004248 E3F0 C280 0004          00003F00   6441          LG    15,@lit_1965_157 ; rd_slice_abs_offset
0000424E                                    6442 @@gen_label314 DS    0H
0000424E 05EF                               6443          BALR  14,15
00004250                                    6444 @@gen_label315 DS    0H
00004250 B90B 00BF                          6445          SLGR  11,15
00004254 E3F0 31E8 0002          000001E8   6446          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000425A 4780 C5E8               00004268   6447          BZ    @L761
0000425E E3F0 31E8 0004          000001E8   6448          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004264 47F0 C5F2               00004272   6449          B     @L762
00004268                                    6450 @L761    DS    0H
00004268 E3F0 C298 0004          00003F18   6451          LG    15,@lit_1965_158
0000426E 41F0 F10E               0000010E   6452          LA    15,270(0,15)
00004272                                    6453 @L762    DS    0H
00004272 E310 3100 0004          00000100   6454          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004278 E310 1FD0 0004          00000FD0   6455          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000427E 4110 1210               00000210   6456          LA    1,528(0,1)
00004282 E310 D438 0024          00000438   6457          STG   1,1080(0,13)
00004288 E310 3100 0004          00000100   6458          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000428E E310 1FD0 0004          00000FD0   6459          LG    1,4048(0,1)
00004294 E310 D440 0024          00000440   6460          STG   1,1088(0,13)
0000429A 4110 D328               00000328   6461          LA    1,808(0,13)
0000429E E310 D448 0024          00000448   6462          STG   1,1096(0,13)
000042A4 B914 0017                          6463          LGFR  1,7
000042A8 E310 D450 0024          00000450   6464          STG   1,1104(0,13)
000042AE D707 D458 D458 00000458 00000458   6465          XC    1112(8,13),1112(13)
000042B4 E310 C298 0004          00003F18   6466          LG    1,@lit_1965_158
000042BA 4170 1132               00000132   6467          LA    7,306(0,1)
000042BE E370 D460 0024          00000460   6468          STG   7,1120(0,13)
000042C4 4110 113E               0000013E   6469          LA    1,318(0,1)
000042C8 E310 D468 0024          00000468   6470          STG   1,1128(0,13)
000042CE E390 D470 0024          00000470   6471          STG   9,1136(0,13)
000042D4 4810 30BA               000000BA   6472          LH    1,186(0,3)
000042D8 B914 0011                          6473          LGFR  1,1
000042DC E310 D478 0024          00000478   6474          STG   1,1144(0,13)
000042E2 E3A0 D480 0024          00000480   6475          STG   10,1152(0,13)
                                                                                                                           Page  132 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000042E8 E310 3098 0004          00000098   6476          LG    1,152(0,3)  ; offset of end in rd_slice_s
000042EE E310 3090 000B          00000090   6477          SLG   1,144(0,3)
000042F4 E310 D488 0024          00000488   6478          STG   1,1160(0,13)
000042FA E310 C290 0004          00003F10   6479          LG    1,@lit_1965_159
00004300 4110 11E6               000001E6   6480          LA    1,486(0,1)
00004304 E310 D490 0024          00000490   6481          STG   1,1168(0,13)
0000430A E548 D498 0150          00000498   6482          MVGHI 1176(13),336
00004310 E320 D4A0 0024          000004A0   6483          STG   2,1184(0,13)
00004316 E3B0 D4A8 0024          000004A8   6484          STG   11,1192(0,13)
0000431C E3F0 D4B0 0024          000004B0   6485          STG   15,1200(0,13)
00004322 41F0 D228               00000228   6486          LA    15,552(0,13)
00004326 E3F0 D4B8 0024          000004B8   6487          STG   15,1208(0,13)
0000432C 4110 D438               00000438   6488          LA    1,1080(0,13)
00004330 E3F0 C2D0 0004          00003F50   6489          LG    15,@lit_1965_175 ; rd_kafka_log0
00004336                                    6490 @@gen_label317 DS    0H
00004336 05EF                               6491          BALR  14,15
00004338                                    6492 @@gen_label318 DS    0H
00004338                                    6493 @L752    DS    0H
00004338 E54C 3188 FF65          00000188   6494          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000433E E3C0 C274 001A          00003EF4   6495          ALGF  12,@lit_region_diff_1965_1_4
                                            6496          DROP  12
                        0000589A            6497          USING @REGION_1965_4,12
00004344 47F0 C730               00005FCA   6498          B     @_err_parse@1965@1
                                            6499          DROP  12
                        00003C80            6500          USING @REGION_1965_1,12
00004348                                    6501 @L748    DS    0H
00004348                                    6502 @L744    DS    0H
00004348 D201 D108 D0B0 00000108 000000B0   6503          MVC   264(2,13),176(13)
                                            6504 * ***
                                            6505 * ***           if (request->rkbuf_reqhdr.ApiVersion >= 1) {
0000434E 48F0 60BA               000000BA   6506          LH    15,186(0,6)
00004352 A7FE 0001               00000001   6507          CHI   15,1
00004356 47B0 C6E4               00004364   6508          BNL   *+14  Around region break
0000435A E3C0 C2E0 001A          00003F60   6509          ALGF  12,@lit_region_diff_1965_1_2
                                            6510          DROP  12
                        00004542            6511          USING @REGION_1965_2,12
00004360 47F0 C878               00004DBA   6512          B     @L763
                                            6513          DROP  12
                        00003C80            6514          USING @REGION_1965_1,12
                                            6515 * ***                   rd_kafkap_str_t ErrorMsg;
                                            6516 * ***                   do { int _klen; if ((rkbuf)->rkbuf_flags & 0x4\
                                            6517 * 0) { uint64_t _uva; do { uint64_t _v; size_t _r = rd_slice_read_uvar\
                                            6518 * int(&(rkbuf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_de\
                                            6519 * code_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash(\
                                            6520 * "C:\\asgkafka\\librdkafka\\src\\rdkafka_coord.c",340, __FUNCTION__, \
                                            6521 * (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __t\
                                            6522 * mpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "uvarint parsi\
                                            6523 * ng failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { c\
                                            6524 * har _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); \
                                            6525 * rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)\
                                            6526 * ); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(\
                                            6527 * &(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _l\
                                                                                                                           Page  133 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6528 * ogname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer \
                                            6529 * underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expec\
                                            6530 * ted %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka\
                                            6531 * _ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVer\
                                            6532 * sion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)\
                                            6533 * ->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 340, (size_t)0\
                                            6534 * , ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_r\
                                            6535 * eader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigati\
                                            6536 * on : "incorrect broker.version.fallback?", __tmpstr); } while (0); }\
                                            6537 *  (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; \
                                            6538 * } while (0); *(&_uva) = _v; } while (0); (&ErrorMsg)->len = ((int32_\
                                            6539 * t)_uva) - 1; _klen = (&ErrorMsg)->len; } else { do { int16_t _v; do \
                                            6540 * { size_t __len2 = (size_t)(2); if (!rd_slice_read(&(rkbuf)->rkbuf_re\
                                            6541 * ader, &_v, __len2)) do { size_t __len0 = (size_t)(__len2); if (((__l\
                                            6542 * en0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)-\
                                            6543 * >rkbuf_reader))))) { do { if (log_decode_errors > 0) { do { if (((!(\
                                            6544 * rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\\
                                            6545 * rdkafka_coord.c",340, __FUNCTION__, (((void *)0)), "assert: " "rkbuf\
                                            6546 * ->rkbuf_rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, s\
                                            6547 * izeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\
                                            6548 * \0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logn\
                                            6549 * ame_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeo\
                                            6550 * f(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_\
                                            6551 * kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)-\
                                            6552 * >rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol r\
                                            6553 * ead buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i\
                                            6554 * ): " "expected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s\
                                            6555 * ", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_re\
                                            6556 * qhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rk\
                                            6557 * buf_reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 340\
                                            6558 * , __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf-\
                                            6559 * >rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_\
                                            6560 * mitigation : "incorrect broker.version.fallback?", __tmpstr); } whil\
                                            6561 * e (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err\
                                            6562 * _parse; } while (0); } } while (0); } while (0); (&ErrorMsg)->len = \
                                            6563 * (int16_t)(_v); } while (0); _klen = (((&ErrorMsg)->len) == -1 ? 0 : \
                                            6564 * ((&ErrorMsg)->len)); } if (((&ErrorMsg)->len == -1)) (&ErrorMsg)->st\
                                            6565 * r = ((void *)0); else if ((((&ErrorMsg)->len) == -1 ? 0 : ((&ErrorMs\
                                            6566 * g)->len)) == 0) (&ErrorMsg)->str = ""; else if (!((&ErrorMsg)->str =\
                                            6567 *  rd_slice_ensure_contig(&rkbuf->rkbuf_reader, _klen))) do { size_t _\
                                            6568 * _len0 = (size_t)(_klen); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->e\
                                            6569 * nd - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_\
                                            6570 * decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_cras\
                                            6571 * h("C:\\asgkafka\\librdkafka\\src\\rdkafka_coord.c",340, __FUNCTION__\
                                            6572 * , (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char _\
                                            6573 * _tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__strl\
                                            6574 * en(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]; mtx_\
                                            6575 * lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rk\
                                            6576 * buf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->\
                                            6577 * rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rk\
                                            6578 * b_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_erro\
                                            6579 * rs, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "for %s v%h\
                                                                                                                           Page  134 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6580 * d " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes > "\
                                            6581 *  "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbu\
                                            6582 * f_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(&\
                                            6583 * rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_\
                                            6584 * reader)->start), __FUNCTION__, 340, __len0, ((&rkbuf->rkbuf_reader)-\
                                            6585 * >end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflo\
                                            6586 * w_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.ver\
                                            6587 * sion.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD_K\
                                            6588 * AFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } while (0)\
                                            6589 * ; if((&ErrorMsg)->len > 0) { char *tbuf = calloc(1,(&ErrorMsg)->len)\
                                            6590 * ; __memcpy(tbuf,(&ErrorMsg)->str,(&ErrorMsg)->len); size_t ulen=(siz\
                                            6591 * e_t)(&ErrorMsg)->len; size_t alen=ulen; utf8_2_ebcdic((&ErrorMsg)->s\
                                            6592 * tr, &alen, tbuf, &ulen); free(tbuf); } } while (0);
00004364                                    6593 @L764    DS    0H
00004364 9140 3023      00000023 00000040   6594          TM    35(3),64
00004368 4770 C6F6               00004376   6595          BNZ   *+14  Around region break
0000436C E3C0 C2E0 001A          00003F60   6596          ALGF  12,@lit_region_diff_1965_1_2
                                            6597          DROP  12
                        00004542            6598          USING @REGION_1965_2,12
00004372 47F0 C184               000046C6   6599          B     @L790
                                            6600          DROP  12
                        00003C80            6601          USING @REGION_1965_1,12
00004376                                    6602 @L768    DS    0H
00004376 41F0 3078               00000078   6603          LA    15,120(0,3)
0000437A E3F0 D438 0024          00000438   6604          STG   15,1080(0,13)
00004380 41F0 D0C0               000000C0   6605          LA    15,192(0,13)
00004384 E3F0 D440 0024          00000440   6606          STG   15,1088(0,13)
0000438A 4110 D438               00000438   6607          LA    1,1080(0,13)
0000438E E3F0 C2E8 0004          00003F68   6608          LG    15,@lit_1965_198 ; rd_slice_read_uvarint
00004394                                    6609 @@gen_label321 DS    0H
00004394 05EF                               6610          BALR  14,15
00004396                                    6611 @@gen_label322 DS    0H
00004396 B902 00FF                          6612          LTGR  15,15
0000439A 4780 C728               000043A8   6613          BE    *+14  Around region break
0000439E E3C0 C2E0 001A          00003F60   6614          ALGF  12,@lit_region_diff_1965_1_2
                                            6615          DROP  12
                        00004542            6616          USING @REGION_1965_2,12
000043A4 47F0 C16A               000046AC   6617          B     @L771
                                            6618          DROP  12
                        00003C80            6619          USING @REGION_1965_1,12
000043A8                                    6620 @L772    DS    0H
000043A8 1277                               6621          LTR   7,7
000043AA 4720 C738               000043B8   6622          BH    *+14  Around region break
000043AE E3C0 C2E0 001A          00003F60   6623          ALGF  12,@lit_region_diff_1965_1_2
                                            6624          DROP  12
                        00004542            6625          USING @REGION_1965_2,12
000043B4 47F0 C0C0               00004602   6626          B     @L775
                                            6627          DROP  12
                        00003C80            6628          USING @REGION_1965_1,12
000043B8                                    6629 @L776    DS    0H
000043B8 E3F0 3100 0002          00000100   6630          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
000043BE 4770 C784               00004404   6631          BNZ   @L779
                                                                                                                           Page  135 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000043C2 E3F0 C298 0004          00003F18   6632          LG    15,@lit_1965_158
000043C8 4110 F09E               0000009E   6633          LA    1,158(0,15)
000043CC E310 D438 0024          00000438   6634          STG   1,1080(0,13)
000043D2 E548 D440 0154          00000440   6635          MVGHI 1088(13),340
000043D8 E310 C290 0004          00003F10   6636          LG    1,@lit_1965_159
000043DE 4110 11E6               000001E6   6637          LA    1,486(0,1)
000043E2 E310 D448 0024          00000448   6638          STG   1,1096(0,13)
000043E8 D707 D450 D450 00000450 00000450   6639          XC    1104(8,13),1104(13)
000043EE 41F0 F0F0               000000F0   6640          LA    15,240(0,15)
000043F2 E3F0 D458 0024          00000458   6641          STG   15,1112(0,13)
000043F8 4110 D438               00000438   6642          LA    1,1080(0,13)
000043FC E3F0 C288 0004          00003F08   6643          LG    15,@lit_1965_160 ; rd_kafka_crash
00004402                                    6644 @@gen_label326 DS    0H
00004402 05EF                               6645          BALR  14,15
00004404                                    6646 @@gen_label327 DS    0H
00004404                                    6647 @L779    DS    0H
00004404 41F0 D238               00000238   6648          LA    15,568(0,13)
00004408 E3F0 D438 0024          00000438   6649          STG   15,1080(0,13)
0000440E E548 D440 0100          00000440   6650          MVGHI 1088(13),256
00004414 E3F0 C298 0004          00003F18   6651          LG    15,@lit_1965_158
0000441A 41F0 F1AE               000001AE   6652          LA    15,430(0,15)
0000441E E3F0 D448 0024          00000448   6653          STG   15,1096(0,13)
00004424 4110 D438               00000438   6654          LA    1,1080(0,13)
00004428 E3F0 C2A0 0004          00003F20   6655          LG    15,@lit_1965_162 ; snprintf
0000442E                                    6656 @@gen_label328 DS    0H
0000442E 05EF                               6657          BALR  14,15
00004430                                    6658 @@gen_label329 DS    0H
00004430 41F0 D238               00000238   6659          LA    15,568(0,13)
00004434 B904 001F                          6660          LGR   1,15
00004438 A709 0000               00000000   6661          LGHI  0,0
0000443C                                    6662 @@gen_label330 DS 0H
0000443C B25E 000F                          6663          SRST  0,15
00004440 4710 C7BC               0000443C   6664          BC  1,@@gen_label330
00004444 B90B 0001                          6665          SLGR  0,1
00004448 A70F 0002               00000002   6666          CGHI  0,2
0000444C 4770 C7D4               00004454   6667          BNE   @L781
00004450 9200 D238      00000238 00000000   6668          MVI   568(13),0
00004454                                    6669 @L780    DS    0H
00004454                                    6670 @L781    DS    0H
00004454 E3F0 3100 0004          00000100   6671          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000445A A729 1638               00001638   6672          LGHI  2,5688      ; 5688
0000445E 41F2 F000               00000000   6673          LA    15,0(2,15)
00004462 E3F0 D438 0024          00000438   6674          STG   15,1080(0,13)
00004468 4110 D438               00000438   6675          LA    1,1080(0,13)
0000446C E3F0 C2A8 0004          00003F28   6676          LG    15,@lit_1965_164 ; mtx_lock
00004472                                    6677 @@gen_label332 DS    0H
00004472 05EF                               6678          BALR  14,15
00004474                                    6679 @@gen_label333 DS    0H
00004474 41F0 D338               00000338   6680          LA    15,824(0,13)
00004478 E3F0 D438 0024          00000438   6681          STG   15,1080(0,13)
0000447E E3F0 3100 0004          00000100   6682          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004484 A719 1630               00001630   6683          LGHI  1,5680      ; 5680
                                                                                                                           Page  136 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004488 E3F1 F000 0004          00000000   6684          LG    15,0(1,15)
0000448E E3F0 D440 0024          00000440   6685          STG   15,1088(0,13)
00004494 E548 D448 0100          00000448   6686          MVGHI 1096(13),256
0000449A 4110 D438               00000438   6687          LA    1,1080(0,13)
0000449E E3F0 C2B0 0004          00003F30   6688          LG    15,@lit_1965_166 ; rd_strlcpy
000044A4                                    6689 @@gen_label334 DS    0H
000044A4 05EF                               6690          BALR  14,15
000044A6                                    6691 @@gen_label335 DS    0H
000044A6 E3F0 3100 0004          00000100   6692          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
000044AC 41F2 F000               00000000   6693          LA    15,0(2,15)
000044B0 E3F0 D438 0024          00000438   6694          STG   15,1080(0,13)
000044B6 4110 D438               00000438   6695          LA    1,1080(0,13)
000044BA E3F0 C2B8 0004          00003F38   6696          LG    15,@lit_1965_168 ; mtx_unlock
000044C0                                    6697 @@gen_label336 DS    0H
000044C0 05EF                               6698          BALR  14,15
000044C2                                    6699 @@gen_label337 DS    0H
000044C2 E3F0 30B8 0015          000000B8   6700          LGH   15,184(0,3)
000044C8 E3F0 D438 0024          00000438   6701          STG   15,1080(0,13)
000044CE 4110 D438               00000438   6702          LA    1,1080(0,13)
000044D2 E3F0 C2C0 0004          00003F40   6703          LG    15,@lit_1965_169 ; rd_kafka_ApiKey2str
000044D8                                    6704 @@gen_label338 DS    0H
000044D8 05EF                               6705          BALR  14,15
000044DA                                    6706 @@gen_label339 DS    0H
000044DA B904 002F                          6707          LGR   2,15
000044DE 41F0 3078               00000078   6708          LA    15,120(0,3)
000044E2 E3F0 D438 0024          00000438   6709          STG   15,1080(0,13)
000044E8 4110 D438               00000438   6710          LA    1,1080(0,13)
000044EC E3F0 C2C8 0004          00003F48   6711          LG    15,@lit_1965_170 ; rd_slice_offset
000044F2                                    6712 @@gen_label340 DS    0H
000044F2 05EF                               6713          BALR  14,15
000044F4                                    6714 @@gen_label341 DS    0H
000044F4 B904 009F                          6715          LGR   9,15
000044F8 E3A0 3098 0004          00000098   6716          LG    10,152(0,3) ; offset of end in rd_slice_s
000044FE 41F0 3078               00000078   6717          LA    15,120(0,3)
00004502 E3F0 D438 0024          00000438   6718          STG   15,1080(0,13)
00004508 4110 D438               00000438   6719          LA    1,1080(0,13)
0000450C E3F0 C280 0004          00003F00   6720          LG    15,@lit_1965_157 ; rd_slice_abs_offset
00004512                                    6721 @@gen_label342 DS    0H
00004512 05EF                               6722          BALR  14,15
00004514                                    6723 @@gen_label343 DS    0H
00004514 B90B 00AF                          6724          SLGR  10,15
00004518 E3F0 31E8 0002          000001E8   6725          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000451E 4780 C8B2               00004532   6726          BZ    @L784
00004522 E3F0 31E8 0004          000001E8   6727          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004528 E3C0 C2E0 001A          00003F60   6728          ALGF  12,@lit_region_diff_1965_1_2
                                            6729          DROP  12
                        00004542            6730          USING @REGION_1965_2,12
0000452E 47F0 C000               00004542   6731          B     @L785
                                            6732          DROP  12
                        00003C80            6733          USING @REGION_1965_1,12
                                                                                                                           Page  137 
  Active Usings: @REGION_1965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004532                                    6734 @L784    DS    0H
00004532 E3F0 C298 0004          00003F18   6735          LG    15,@lit_1965_158
00004538 41F0 F10E               0000010E   6736          LA    15,270(0,15)
0000453C E3C0 C2E0 001A          00003F60   6737          ALGF  12,@lit_region_diff_1965_1_2
00004542                                    6738 @REGION_1965_2 DS 0H
                                            6739          DROP  12
                        00004542            6740          USING @REGION_1965_2,12
00004542                                    6741 @L785    DS    0H
00004542 E310 3100 0004          00000100   6742          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004548 E310 1FD0 0004          00000FD0   6743          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000454E 4110 1210               00000210   6744          LA    1,528(0,1)
00004552 E310 D438 0024          00000438   6745          STG   1,1080(0,13)
00004558 E310 3100 0004          00000100   6746          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000455E E310 1FD0 0004          00000FD0   6747          LG    1,4048(0,1)
00004564 E310 D440 0024          00000440   6748          STG   1,1088(0,13)
0000456A 4110 D338               00000338   6749          LA    1,824(0,13)
0000456E E310 D448 0024          00000448   6750          STG   1,1096(0,13)
00004574 B914 0017                          6751          LGFR  1,7
00004578 E310 D450 0024          00000450   6752          STG   1,1104(0,13)
0000457E D707 D458 D458 00000458 00000458   6753          XC    1112(8,13),1112(13)
00004584 E310 C0E6 0004          00004628   6754          LG    1,@lit_1965_214
0000458A 4170 1132               00000132   6755          LA    7,306(0,1)
0000458E E370 D460 0024          00000460   6756          STG   7,1120(0,13)
00004594 4110 113E               0000013E   6757          LA    1,318(0,1)
00004598 EB12 D468 0024          00000468   6758          STMG  1,2,1128(13)
0000459E 4810 30BA               000000BA   6759          LH    1,186(0,3)
000045A2 B914 0011                          6760          LGFR  1,1
000045A6 E310 D478 0024          00000478   6761          STG   1,1144(0,13)
000045AC E390 D480 0024          00000480   6762          STG   9,1152(0,13)
000045B2 E310 3098 0004          00000098   6763          LG    1,152(0,3)  ; offset of end in rd_slice_s
000045B8 E310 3090 000B          00000090   6764          SLG   1,144(0,3)
000045BE E310 D488 0024          00000488   6765          STG   1,1160(0,13)
000045C4 E310 C0DE 0004          00004620   6766          LG    1,@lit_1965_215
000045CA 4110 11E6               000001E6   6767          LA    1,486(0,1)
000045CE E310 D490 0024          00000490   6768          STG   1,1168(0,13)
000045D4 E548 D498 0154          00000498   6769          MVGHI 1176(13),340
000045DA D707 D4A0 D4A0 000004A0 000004A0   6770          XC    1184(8,13),1184(13)
000045E0 E3A0 D4A8 0024          000004A8   6771          STG   10,1192(0,13)
000045E6 E3F0 D4B0 0024          000004B0   6772          STG   15,1200(0,13)
000045EC 41F0 D238               00000238   6773          LA    15,568(0,13)
000045F0 E3F0 D4B8 0024          000004B8   6774          STG   15,1208(0,13)
000045F6 4110 D438               00000438   6775          LA    1,1080(0,13)
000045FA E3F0 C0D6 0004          00004618   6776          LG    15,@lit_1965_216 ; rd_kafka_log0
00004600                                    6777 @@gen_label345 DS    0H
00004600 05EF                               6778          BALR  14,15
00004602                                    6779 @@gen_label346 DS    0H
00004602                                    6780 @L775    DS    0H
00004602 E54C 3188 FF65          00000188   6781          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00004608 E3C0 C0EE 001A          00004630   6782          ALGF  12,@lit_region_diff_1965_2_4
                                            6783          DROP  12
                        0000589A            6784          USING @REGION_1965_4,12
0000460E 47F0 C730               00005FCA   6785          B     @_err_parse@1965@1
                                                                                                                           Page  138 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6786          DROP  12
                        00004542            6787          USING @REGION_1965_2,12
00004618                                    6788          DS    0D
00004618 0000000000000000                   6789 @lit_1965_216 DC AD(rd_kafka_log0)
00004620 0000000000006860                   6790 @lit_1965_215 DC AD(@DATA)
00004628 0000000000006A88                   6791 @lit_1965_214 DC AD(@strings@)
00004630 00001358                           6792 @lit_region_diff_1965_2_4  DC A(@REGION_1965_4-@REGION_1965_2)
00004634 00000000
00004638 0000000000000000                   6793 @lit_1965_218 DC AD(rd_slice_read)
00004640 0000000000000DA8                   6794 @lit_1965_219 DC AD(rd_slice_abs_offset)
00004648 0000000000000000                   6795 @lit_1965_222 DC AD(rd_kafka_crash)
00004650 0000000000000000                   6796 @lit_1965_224 DC AD(snprintf)
00004658 0000000000000000                   6797 @lit_1965_226 DC AD(mtx_lock)
00004660 00000000000010A0                   6798 @lit_1965_228 DC AD(rd_strlcpy)
00004668 0000000000000000                   6799 @lit_1965_230 DC AD(mtx_unlock)
00004670 0000000000000F08                   6800 @lit_1965_231 DC AD(rd_kafka_$Api$Key2str)
00004678 0000000000000E50                   6801 @lit_1965_232 DC AD(rd_slice_offset)
00004680 0000000000000000                   6802 @lit_1965_242 DC AD(rd_slice_ensure_contig)
00004688 0000000000000000                   6803 @lit_1965_262 DC AD(calloc)
00004690 D200 A000 9000 00000000 00000000   6804 @lit_1965_263          MVC 0(1,10),0(9)
00004696 0000
00004698 0000000000000060                   6805 @lit_1965_264 DC AD(utf8_2_ebcdic)
000046A0 0000000000000000                   6806 @lit_1965_265 DC AD(free)
000046A8 000009B6                           6807 @lit_region_diff_1965_2_3  DC A(@REGION_1965_3-@REGION_1965_2)
000046AC                                    6808 @L771    DS    0H
000046AC E3F0 D0C0 0004          000000C0   6809          LG    15,192(0,13) ; _v
000046B2 E3F0 D0B8 0024          000000B8   6810          STG   15,184(0,13)
000046B8 A7FA FFFF               0000FFFF   6811          AHI   15,-1
000046BC 50F0 D228               00000228   6812          ST    15,552(0,13)
000046C0 182F                               6813          LR    2,15
000046C2 47F0 C456               00004998   6814          B     @L786
000046C6                                    6815 @L790    DS    0H
000046C6 A729 0002               00000002   6816          LGHI  2,2         ; 2
000046CA 41F0 3078               00000078   6817          LA    15,120(0,3)
000046CE E3F0 D438 0024          00000438   6818          STG   15,1080(0,13)
000046D4 41F0 D0C8               000000C8   6819          LA    15,200(0,13)
000046D8 E3F0 D440 0024          00000440   6820          STG   15,1088(0,13)
000046DE E320 D448 0024          00000448   6821          STG   2,1096(0,13)
000046E4 4110 D438               00000438   6822          LA    1,1080(0,13)
000046E8 E3F0 C0F6 0004          00004638   6823          LG    15,@lit_1965_218 ; rd_slice_read
000046EE                                    6824 @@gen_label347 DS    0H
000046EE 05EF                               6825          BALR  14,15
000046F0                                    6826 @@gen_label348 DS    0H
000046F0 B902 00FF                          6827          LTGR  15,15
000046F4 4770 C438               0000497A   6828          BNZ   @L793
000046F8                                    6829 @L794    DS    0H
000046F8 E390 3098 0004          00000098   6830          LG    9,152(0,3)  ; offset of end in rd_slice_s
000046FE 41F0 3078               00000078   6831          LA    15,120(0,3)
00004702 E3F0 D438 0024          00000438   6832          STG   15,1080(0,13)
00004708 4110 D438               00000438   6833          LA    1,1080(0,13)
0000470C E3F0 C0FE 0004          00004640   6834          LG    15,@lit_1965_219 ; rd_slice_abs_offset
00004712                                    6835 @@gen_label350 DS    0H
                                                                                                                           Page  139 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004712 05EF                               6836          BALR  14,15
00004714                                    6837 @@gen_label351 DS    0H
00004714 B90B 009F                          6838          SLGR  9,15
00004718 B921 0029                          6839          CLGR  2,9
0000471C 47D0 C438               0000497A   6840          BNH   @L797
00004720                                    6841 @L798    DS    0H
00004720 1277                               6842          LTR   7,7
00004722 47D0 C428               0000496A   6843          BNH   @L801
00004726                                    6844 @L802    DS    0H
00004726 E3F0 3100 0002          00000100   6845          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000472C 4770 C230               00004772   6846          BNZ   @L805
00004730 E3F0 C0E6 0004          00004628   6847          LG    15,@lit_1965_214
00004736 4110 F09E               0000009E   6848          LA    1,158(0,15)
0000473A E310 D438 0024          00000438   6849          STG   1,1080(0,13)
00004740 E548 D440 0154          00000440   6850          MVGHI 1088(13),340
00004746 E310 C0DE 0004          00004620   6851          LG    1,@lit_1965_215
0000474C 4110 11E6               000001E6   6852          LA    1,486(0,1)
00004750 E310 D448 0024          00000448   6853          STG   1,1096(0,13)
00004756 D707 D450 D450 00000450 00000450   6854          XC    1104(8,13),1104(13)
0000475C 41F0 F0F0               000000F0   6855          LA    15,240(0,15)
00004760 E3F0 D458 0024          00000458   6856          STG   15,1112(0,13)
00004766 4110 D438               00000438   6857          LA    1,1080(0,13)
0000476A E3F0 C106 0004          00004648   6858          LG    15,@lit_1965_222 ; rd_kafka_crash
00004770                                    6859 @@gen_label355 DS    0H
00004770 05EF                               6860          BALR  14,15
00004772                                    6861 @@gen_label356 DS    0H
00004772                                    6862 @L805    DS    0H
00004772 41F0 D238               00000238   6863          LA    15,568(0,13)
00004776 E3F0 D438 0024          00000438   6864          STG   15,1080(0,13)
0000477C E548 D440 0100          00000440   6865          MVGHI 1088(13),256
00004782 E3F0 C0E6 0004          00004628   6866          LG    15,@lit_1965_214
00004788 41F0 F10A               0000010A   6867          LA    15,266(0,15)
0000478C E3F0 D448 0024          00000448   6868          STG   15,1096(0,13)
00004792 4110 D438               00000438   6869          LA    1,1080(0,13)
00004796 E3F0 C10E 0004          00004650   6870          LG    15,@lit_1965_224 ; snprintf
0000479C                                    6871 @@gen_label357 DS    0H
0000479C 05EF                               6872          BALR  14,15
0000479E                                    6873 @@gen_label358 DS    0H
0000479E 41F0 D238               00000238   6874          LA    15,568(0,13)
000047A2 B904 001F                          6875          LGR   1,15
000047A6 A709 0000               00000000   6876          LGHI  0,0
000047AA                                    6877 @@gen_label359 DS 0H
000047AA B25E 000F                          6878          SRST  0,15
000047AE 4710 C268               000047AA   6879          BC  1,@@gen_label359
000047B2 B90B 0001                          6880          SLGR  0,1
000047B6 A70F 0002               00000002   6881          CGHI  0,2
000047BA 4770 C280               000047C2   6882          BNE   @L807
000047BE 9200 D238      00000238 00000000   6883          MVI   568(13),0
000047C2                                    6884 @L806    DS    0H
000047C2                                    6885 @L807    DS    0H
000047C2 E3F0 3100 0004          00000100   6886          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
000047C8 A799 1638               00001638   6887          LGHI  9,5688      ; 5688
                                                                                                                           Page  140 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000047CC 41F9 F000               00000000   6888          LA    15,0(9,15)
000047D0 E3F0 D438 0024          00000438   6889          STG   15,1080(0,13)
000047D6 4110 D438               00000438   6890          LA    1,1080(0,13)
000047DA E3F0 C116 0004          00004658   6891          LG    15,@lit_1965_226 ; mtx_lock
000047E0                                    6892 @@gen_label361 DS    0H
000047E0 05EF                               6893          BALR  14,15
000047E2                                    6894 @@gen_label362 DS    0H
000047E2 41F0 D338               00000338   6895          LA    15,824(0,13)
000047E6 E3F0 D438 0024          00000438   6896          STG   15,1080(0,13)
000047EC E3F0 3100 0004          00000100   6897          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
000047F2 A719 1630               00001630   6898          LGHI  1,5680      ; 5680
000047F6 E3F1 F000 0004          00000000   6899          LG    15,0(1,15)
000047FC E3F0 D440 0024          00000440   6900          STG   15,1088(0,13)
00004802 E548 D448 0100          00000448   6901          MVGHI 1096(13),256
00004808 4110 D438               00000438   6902          LA    1,1080(0,13)
0000480C E3F0 C11E 0004          00004660   6903          LG    15,@lit_1965_228 ; rd_strlcpy
00004812                                    6904 @@gen_label363 DS    0H
00004812 05EF                               6905          BALR  14,15
00004814                                    6906 @@gen_label364 DS    0H
00004814 E3F0 3100 0004          00000100   6907          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000481A 41F9 F000               00000000   6908          LA    15,0(9,15)
0000481E E3F0 D438 0024          00000438   6909          STG   15,1080(0,13)
00004824 4110 D438               00000438   6910          LA    1,1080(0,13)
00004828 E3F0 C126 0004          00004668   6911          LG    15,@lit_1965_230 ; mtx_unlock
0000482E                                    6912 @@gen_label365 DS    0H
0000482E 05EF                               6913          BALR  14,15
00004830                                    6914 @@gen_label366 DS    0H
00004830 E3F0 30B8 0015          000000B8   6915          LGH   15,184(0,3)
00004836 E3F0 D438 0024          00000438   6916          STG   15,1080(0,13)
0000483C 4110 D438               00000438   6917          LA    1,1080(0,13)
00004840 E3F0 C12E 0004          00004670   6918          LG    15,@lit_1965_231 ; rd_kafka_ApiKey2str
00004846                                    6919 @@gen_label367 DS    0H
00004846 05EF                               6920          BALR  14,15
00004848                                    6921 @@gen_label368 DS    0H
00004848 B904 009F                          6922          LGR   9,15
0000484C 41F0 3078               00000078   6923          LA    15,120(0,3)
00004850 E3F0 D438 0024          00000438   6924          STG   15,1080(0,13)
00004856 4110 D438               00000438   6925          LA    1,1080(0,13)
0000485A E3F0 C136 0004          00004678   6926          LG    15,@lit_1965_232 ; rd_slice_offset
00004860                                    6927 @@gen_label369 DS    0H
00004860 05EF                               6928          BALR  14,15
00004862                                    6929 @@gen_label370 DS    0H
00004862 B904 00AF                          6930          LGR   10,15
00004866 E3B0 3098 0004          00000098   6931          LG    11,152(0,3) ; offset of end in rd_slice_s
0000486C 41F0 3078               00000078   6932          LA    15,120(0,3)
00004870 E3F0 D438 0024          00000438   6933          STG   15,1080(0,13)
00004876 4110 D438               00000438   6934          LA    1,1080(0,13)
0000487A E3F0 C0FE 0004          00004640   6935          LG    15,@lit_1965_219 ; rd_slice_abs_offset
00004880                                    6936 @@gen_label371 DS    0H
00004880 05EF                               6937          BALR  14,15
00004882                                    6938 @@gen_label372 DS    0H
00004882 B90B 00BF                          6939          SLGR  11,15
                                                                                                                           Page  141 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004886 E3F0 31E8 0002          000001E8   6940          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000488C 4780 C358               0000489A   6941          BZ    @L810
00004890 E3F0 31E8 0004          000001E8   6942          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004896 47F0 C362               000048A4   6943          B     @L811
0000489A                                    6944 @L810    DS    0H
0000489A E3F0 C0E6 0004          00004628   6945          LG    15,@lit_1965_214
000048A0 41F0 F10E               0000010E   6946          LA    15,270(0,15)
000048A4                                    6947 @L811    DS    0H
000048A4 E310 3100 0004          00000100   6948          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000048AA E310 1FD0 0004          00000FD0   6949          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000048B0 4110 1210               00000210   6950          LA    1,528(0,1)
000048B4 E310 D438 0024          00000438   6951          STG   1,1080(0,13)
000048BA E310 3100 0004          00000100   6952          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000048C0 E310 1FD0 0004          00000FD0   6953          LG    1,4048(0,1)
000048C6 E310 D440 0024          00000440   6954          STG   1,1088(0,13)
000048CC 4110 D338               00000338   6955          LA    1,824(0,13)
000048D0 E310 D448 0024          00000448   6956          STG   1,1096(0,13)
000048D6 B914 0017                          6957          LGFR  1,7
000048DA E310 D450 0024          00000450   6958          STG   1,1104(0,13)
000048E0 D707 D458 D458 00000458 00000458   6959          XC    1112(8,13),1112(13)
000048E6 E310 C0E6 0004          00004628   6960          LG    1,@lit_1965_214
000048EC 4170 1132               00000132   6961          LA    7,306(0,1)
000048F0 E370 D460 0024          00000460   6962          STG   7,1120(0,13)
000048F6 4110 113E               0000013E   6963          LA    1,318(0,1)
000048FA E310 D468 0024          00000468   6964          STG   1,1128(0,13)
00004900 E390 D470 0024          00000470   6965          STG   9,1136(0,13)
00004906 4810 30BA               000000BA   6966          LH    1,186(0,3)
0000490A B914 0011                          6967          LGFR  1,1
0000490E E310 D478 0024          00000478   6968          STG   1,1144(0,13)
00004914 E3A0 D480 0024          00000480   6969          STG   10,1152(0,13)
0000491A E310 3098 0004          00000098   6970          LG    1,152(0,3)  ; offset of end in rd_slice_s
00004920 E310 3090 000B          00000090   6971          SLG   1,144(0,3)
00004926 E310 D488 0024          00000488   6972          STG   1,1160(0,13)
0000492C E310 C0DE 0004          00004620   6973          LG    1,@lit_1965_215
00004932 4110 11E6               000001E6   6974          LA    1,486(0,1)
00004936 E310 D490 0024          00000490   6975          STG   1,1168(0,13)
0000493C E548 D498 0154          00000498   6976          MVGHI 1176(13),340
00004942 E320 D4A0 0024          000004A0   6977          STG   2,1184(0,13)
00004948 E3B0 D4A8 0024          000004A8   6978          STG   11,1192(0,13)
0000494E E3F0 D4B0 0024          000004B0   6979          STG   15,1200(0,13)
00004954 41F0 D238               00000238   6980          LA    15,568(0,13)
00004958 E3F0 D4B8 0024          000004B8   6981          STG   15,1208(0,13)
0000495E 4110 D438               00000438   6982          LA    1,1080(0,13)
00004962 E3F0 C0D6 0004          00004618   6983          LG    15,@lit_1965_216 ; rd_kafka_log0
00004968                                    6984 @@gen_label374 DS    0H
00004968 05EF                               6985          BALR  14,15
0000496A                                    6986 @@gen_label375 DS    0H
0000496A                                    6987 @L801    DS    0H
0000496A E54C 3188 FF65          00000188   6988          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00004970 E3C0 C0EE 001A          00004630   6989          ALGF  12,@lit_region_diff_1965_2_4
                                                                                                                           Page  142 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6990          DROP  12
                        0000589A            6991          USING @REGION_1965_4,12
00004976 47F0 C730               00005FCA   6992          B     @_err_parse@1965@1
                                            6993          DROP  12
                        00004542            6994          USING @REGION_1965_2,12
0000497A                                    6995 @L797    DS    0H
0000497A                                    6996 @L793    DS    0H
0000497A 48F0 D0C8               000000C8   6997          LH    15,200(0,13) ; _v
0000497E 50F0 D228               00000228   6998          ST    15,552(0,13)
00004982 E55C D228 FFFF          00000228   6999          CHSI  552(13),-1
00004988 4770 C452               00004994   7000          BNE   @L812
0000498C A728 0000               00000000   7001          LHI   2,0         ; 0
00004990 47F0 C456               00004998   7002          B     @L813
00004994                                    7003 @L812    DS    0H
00004994 5820 D228               00000228   7004          L     2,552(0,13)
00004998                                    7005 @L813    DS    0H
00004998                                    7006 @L786    DS    0H
00004998 E55C D228 FFFF          00000228   7007          CHSI  552(13),-1
0000499E 4770 C46E               000049B0   7008          BNE   @L814
000049A2 A7F9 0000               00000000   7009          LGHI  15,0        ; 0
000049A6 E3F0 D230 0024          00000230   7010          STG   15,560(0,13) ; offset of str in rd_kafkap_str_s
000049AC 47F0 C752               00004C94   7011          B     @L815
000049B0                                    7012 @L814    DS    0H
000049B0 E55C D228 FFFF          00000228   7013          CHSI  552(13),-1
000049B6 4770 C480               000049C2   7014          BNE   @L816
000049BA A7F8 0000               00000000   7015          LHI   15,0        ; 0
000049BE 47F0 C484               000049C6   7016          B     @L817
000049C2                                    7017 @L816    DS    0H
000049C2 58F0 D228               00000228   7018          L     15,552(0,13)
000049C6                                    7019 @L817    DS    0H
000049C6 12FF                               7020          LTR   15,15
000049C8 4770 C49E               000049E0   7021          BNE   @L818
000049CC E3F0 C0E6 0004          00004628   7022          LG    15,@lit_1965_214
000049D2 41F0 F1C8               000001C8   7023          LA    15,456(0,15)
000049D6 E3F0 D230 0024          00000230   7024          STG   15,560(0,13) ; offset of str in rd_kafkap_str_s
000049DC 47F0 C752               00004C94   7025          B     @L815
000049E0                                    7026 @L818    DS    0H
000049E0 41F0 3078               00000078   7027          LA    15,120(0,3)
000049E4 E3F0 D438 0024          00000438   7028          STG   15,1080(0,13)
000049EA B914 00F2                          7029          LGFR  15,2
000049EE E3F0 D440 0024          00000440   7030          STG   15,1088(0,13)
000049F4 4110 D438               00000438   7031          LA    1,1080(0,13)
000049F8 E3F0 C13E 0004          00004680   7032          LG    15,@lit_1965_242 ; rd_slice_ensure_contig
000049FE                                    7033 @@gen_label380 DS    0H
000049FE 05EF                               7034          BALR  14,15
00004A00                                    7035 @@gen_label381 DS    0H
00004A00 E3F0 D230 0024          00000230   7036          STG   15,560(0,13)
00004A06 B902 00FF                          7037          LTGR  15,15
00004A0A 4770 C752               00004C94   7038          BNZ   @L815
00004A0E                                    7039 @L821    DS    0H
00004A0E B914 0022                          7040          LGFR  2,2
00004A12 E390 3098 0004          00000098   7041          LG    9,152(0,3)  ; offset of end in rd_slice_s
                                                                                                                           Page  143 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004A18 41F0 3078               00000078   7042          LA    15,120(0,3)
00004A1C E3F0 D438 0024          00000438   7043          STG   15,1080(0,13)
00004A22 4110 D438               00000438   7044          LA    1,1080(0,13)
00004A26 E3F0 C0FE 0004          00004640   7045          LG    15,@lit_1965_219 ; rd_slice_abs_offset
00004A2C                                    7046 @@gen_label383 DS    0H
00004A2C 05EF                               7047          BALR  14,15
00004A2E                                    7048 @@gen_label384 DS    0H
00004A2E B90B 009F                          7049          SLGR  9,15
00004A32 B921 0029                          7050          CLGR  2,9
00004A36 47D0 C752               00004C94   7051          BNH   @L824
00004A3A                                    7052 @L825    DS    0H
00004A3A 1277                               7053          LTR   7,7
00004A3C 47D0 C742               00004C84   7054          BNH   @L828
00004A40                                    7055 @L829    DS    0H
00004A40 E3F0 3100 0002          00000100   7056          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004A46 4770 C54A               00004A8C   7057          BNZ   @L832
00004A4A E3F0 C0E6 0004          00004628   7058          LG    15,@lit_1965_214
00004A50 4110 F09E               0000009E   7059          LA    1,158(0,15)
00004A54 E310 D438 0024          00000438   7060          STG   1,1080(0,13)
00004A5A E548 D440 0154          00000440   7061          MVGHI 1088(13),340
00004A60 E310 C0DE 0004          00004620   7062          LG    1,@lit_1965_215
00004A66 4110 11E6               000001E6   7063          LA    1,486(0,1)
00004A6A E310 D448 0024          00000448   7064          STG   1,1096(0,13)
00004A70 D707 D450 D450 00000450 00000450   7065          XC    1104(8,13),1104(13)
00004A76 41F0 F0F0               000000F0   7066          LA    15,240(0,15)
00004A7A E3F0 D458 0024          00000458   7067          STG   15,1112(0,13)
00004A80 4110 D438               00000438   7068          LA    1,1080(0,13)
00004A84 E3F0 C106 0004          00004648   7069          LG    15,@lit_1965_222 ; rd_kafka_crash
00004A8A                                    7070 @@gen_label388 DS    0H
00004A8A 05EF                               7071          BALR  14,15
00004A8C                                    7072 @@gen_label389 DS    0H
00004A8C                                    7073 @L832    DS    0H
00004A8C 41F0 D238               00000238   7074          LA    15,568(0,13)
00004A90 E3F0 D438 0024          00000438   7075          STG   15,1080(0,13)
00004A96 E548 D440 0100          00000440   7076          MVGHI 1088(13),256
00004A9C E3F0 C0E6 0004          00004628   7077          LG    15,@lit_1965_214
00004AA2 41F0 F10A               0000010A   7078          LA    15,266(0,15)
00004AA6 E3F0 D448 0024          00000448   7079          STG   15,1096(0,13)
00004AAC 4110 D438               00000438   7080          LA    1,1080(0,13)
00004AB0 E3F0 C10E 0004          00004650   7081          LG    15,@lit_1965_224 ; snprintf
00004AB6                                    7082 @@gen_label390 DS    0H
00004AB6 05EF                               7083          BALR  14,15
00004AB8                                    7084 @@gen_label391 DS    0H
00004AB8 41F0 D238               00000238   7085          LA    15,568(0,13)
00004ABC B904 001F                          7086          LGR   1,15
00004AC0 A709 0000               00000000   7087          LGHI  0,0
00004AC4                                    7088 @@gen_label392 DS 0H
00004AC4 B25E 000F                          7089          SRST  0,15
00004AC8 4710 C582               00004AC4   7090          BC  1,@@gen_label392
00004ACC B90B 0001                          7091          SLGR  0,1
00004AD0 A70F 0002               00000002   7092          CGHI  0,2
00004AD4 4770 C59A               00004ADC   7093          BNE   @L834
                                                                                                                           Page  144 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004AD8 9200 D238      00000238 00000000   7094          MVI   568(13),0
00004ADC                                    7095 @L833    DS    0H
00004ADC                                    7096 @L834    DS    0H
00004ADC E3F0 3100 0004          00000100   7097          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004AE2 A799 1638               00001638   7098          LGHI  9,5688      ; 5688
00004AE6 41F9 F000               00000000   7099          LA    15,0(9,15)
00004AEA E3F0 D438 0024          00000438   7100          STG   15,1080(0,13)
00004AF0 4110 D438               00000438   7101          LA    1,1080(0,13)
00004AF4 E3F0 C116 0004          00004658   7102          LG    15,@lit_1965_226 ; mtx_lock
00004AFA                                    7103 @@gen_label394 DS    0H
00004AFA 05EF                               7104          BALR  14,15
00004AFC                                    7105 @@gen_label395 DS    0H
00004AFC 41F0 D338               00000338   7106          LA    15,824(0,13)
00004B00 E3F0 D438 0024          00000438   7107          STG   15,1080(0,13)
00004B06 E3F0 3100 0004          00000100   7108          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004B0C A719 1630               00001630   7109          LGHI  1,5680      ; 5680
00004B10 E3F1 F000 0004          00000000   7110          LG    15,0(1,15)
00004B16 E3F0 D440 0024          00000440   7111          STG   15,1088(0,13)
00004B1C E548 D448 0100          00000448   7112          MVGHI 1096(13),256
00004B22 4110 D438               00000438   7113          LA    1,1080(0,13)
00004B26 E3F0 C11E 0004          00004660   7114          LG    15,@lit_1965_228 ; rd_strlcpy
00004B2C                                    7115 @@gen_label396 DS    0H
00004B2C 05EF                               7116          BALR  14,15
00004B2E                                    7117 @@gen_label397 DS    0H
00004B2E E3F0 3100 0004          00000100   7118          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004B34 41F9 F000               00000000   7119          LA    15,0(9,15)
00004B38 E3F0 D438 0024          00000438   7120          STG   15,1080(0,13)
00004B3E 4110 D438               00000438   7121          LA    1,1080(0,13)
00004B42 E3F0 C126 0004          00004668   7122          LG    15,@lit_1965_230 ; mtx_unlock
00004B48                                    7123 @@gen_label398 DS    0H
00004B48 05EF                               7124          BALR  14,15
00004B4A                                    7125 @@gen_label399 DS    0H
00004B4A E3F0 30B8 0015          000000B8   7126          LGH   15,184(0,3)
00004B50 E3F0 D438 0024          00000438   7127          STG   15,1080(0,13)
00004B56 4110 D438               00000438   7128          LA    1,1080(0,13)
00004B5A E3F0 C12E 0004          00004670   7129          LG    15,@lit_1965_231 ; rd_kafka_ApiKey2str
00004B60                                    7130 @@gen_label400 DS    0H
00004B60 05EF                               7131          BALR  14,15
00004B62                                    7132 @@gen_label401 DS    0H
00004B62 B904 009F                          7133          LGR   9,15
00004B66 41F0 3078               00000078   7134          LA    15,120(0,3)
00004B6A E3F0 D438 0024          00000438   7135          STG   15,1080(0,13)
00004B70 4110 D438               00000438   7136          LA    1,1080(0,13)
00004B74 E3F0 C136 0004          00004678   7137          LG    15,@lit_1965_232 ; rd_slice_offset
00004B7A                                    7138 @@gen_label402 DS    0H
00004B7A 05EF                               7139          BALR  14,15
00004B7C                                    7140 @@gen_label403 DS    0H
00004B7C B904 00AF                          7141          LGR   10,15
00004B80 E3B0 3098 0004          00000098   7142          LG    11,152(0,3) ; offset of end in rd_slice_s
00004B86 41F0 3078               00000078   7143          LA    15,120(0,3)
00004B8A E3F0 D438 0024          00000438   7144          STG   15,1080(0,13)
00004B90 4110 D438               00000438   7145          LA    1,1080(0,13)
                                                                                                                           Page  145 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004B94 E3F0 C0FE 0004          00004640   7146          LG    15,@lit_1965_219 ; rd_slice_abs_offset
00004B9A                                    7147 @@gen_label404 DS    0H
00004B9A 05EF                               7148          BALR  14,15
00004B9C                                    7149 @@gen_label405 DS    0H
00004B9C B90B 00BF                          7150          SLGR  11,15
00004BA0 E3F0 31E8 0002          000001E8   7151          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004BA6 4780 C672               00004BB4   7152          BZ    @L837
00004BAA E3F0 31E8 0004          000001E8   7153          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004BB0 47F0 C67C               00004BBE   7154          B     @L838
00004BB4                                    7155 @L837    DS    0H
00004BB4 E3F0 C0E6 0004          00004628   7156          LG    15,@lit_1965_214
00004BBA 41F0 F10E               0000010E   7157          LA    15,270(0,15)
00004BBE                                    7158 @L838    DS    0H
00004BBE E310 3100 0004          00000100   7159          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004BC4 E310 1FD0 0004          00000FD0   7160          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00004BCA 4110 1210               00000210   7161          LA    1,528(0,1)
00004BCE E310 D438 0024          00000438   7162          STG   1,1080(0,13)
00004BD4 E310 3100 0004          00000100   7163          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004BDA E310 1FD0 0004          00000FD0   7164          LG    1,4048(0,1)
00004BE0 E310 D440 0024          00000440   7165          STG   1,1088(0,13)
00004BE6 4110 D338               00000338   7166          LA    1,824(0,13)
00004BEA E310 D448 0024          00000448   7167          STG   1,1096(0,13)
00004BF0 B914 0017                          7168          LGFR  1,7
00004BF4 E310 D450 0024          00000450   7169          STG   1,1104(0,13)
00004BFA D707 D458 D458 00000458 00000458   7170          XC    1112(8,13),1112(13)
00004C00 E310 C0E6 0004          00004628   7171          LG    1,@lit_1965_214
00004C06 4170 1132               00000132   7172          LA    7,306(0,1)
00004C0A E370 D460 0024          00000460   7173          STG   7,1120(0,13)
00004C10 4110 113E               0000013E   7174          LA    1,318(0,1)
00004C14 E310 D468 0024          00000468   7175          STG   1,1128(0,13)
00004C1A E390 D470 0024          00000470   7176          STG   9,1136(0,13)
00004C20 4810 30BA               000000BA   7177          LH    1,186(0,3)
00004C24 B914 0011                          7178          LGFR  1,1
00004C28 E310 D478 0024          00000478   7179          STG   1,1144(0,13)
00004C2E E3A0 D480 0024          00000480   7180          STG   10,1152(0,13)
00004C34 E310 3098 0004          00000098   7181          LG    1,152(0,3)  ; offset of end in rd_slice_s
00004C3A E310 3090 000B          00000090   7182          SLG   1,144(0,3)
00004C40 E310 D488 0024          00000488   7183          STG   1,1160(0,13)
00004C46 E310 C0DE 0004          00004620   7184          LG    1,@lit_1965_215
00004C4C 4110 11E6               000001E6   7185          LA    1,486(0,1)
00004C50 E310 D490 0024          00000490   7186          STG   1,1168(0,13)
00004C56 E548 D498 0154          00000498   7187          MVGHI 1176(13),340
00004C5C E320 D4A0 0024          000004A0   7188          STG   2,1184(0,13)
00004C62 E3B0 D4A8 0024          000004A8   7189          STG   11,1192(0,13)
00004C68 E3F0 D4B0 0024          000004B0   7190          STG   15,1200(0,13)
00004C6E 41F0 D238               00000238   7191          LA    15,568(0,13)
00004C72 E3F0 D4B8 0024          000004B8   7192          STG   15,1208(0,13)
00004C78 4110 D438               00000438   7193          LA    1,1080(0,13)
00004C7C E3F0 C0D6 0004          00004618   7194          LG    15,@lit_1965_216 ; rd_kafka_log0
00004C82                                    7195 @@gen_label407 DS    0H
                                                                                                                           Page  146 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004C82 05EF                               7196          BALR  14,15
00004C84                                    7197 @@gen_label408 DS    0H
00004C84                                    7198 @L828    DS    0H
00004C84 E54C 3188 FF65          00000188   7199          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00004C8A E3C0 C0EE 001A          00004630   7200          ALGF  12,@lit_region_diff_1965_2_4
                                            7201          DROP  12
                        0000589A            7202          USING @REGION_1965_4,12
00004C90 47F0 C730               00005FCA   7203          B     @_err_parse@1965@1
                                            7204          DROP  12
                        00004542            7205          USING @REGION_1965_2,12
00004C94                                    7206 @L824    DS    0H
00004C94                                    7207 @L820    DS    0H
00004C94                                    7208 @L819    DS    0H
00004C94                                    7209 @L815    DS    0H
00004C94 E55C D228 0000          00000228   7210          CHSI  552(13),0
00004C9A 47D0 C816               00004D58   7211          BNH   @L839
00004C9E E548 D438 0001          00000438   7212          MVGHI 1080(13),1
00004CA4 E3F0 D228 0014          00000228   7213          LGF   15,552(0,13)
00004CAA E3F0 D440 0024          00000440   7214          STG   15,1088(0,13)
00004CB0 4110 D438               00000438   7215          LA    1,1080(0,13)
00004CB4 E3F0 C146 0004          00004688   7216          LG    15,@lit_1965_262 ; calloc
00004CBA                                    7217 @@gen_label410 DS    0H
00004CBA 05EF                               7218          BALR  14,15
00004CBC                                    7219 @@gen_label411 DS    0H
00004CBC B904 002F                          7220          LGR   2,15
00004CC0 E310 D228 0014          00000228   7221          LGF   1,552(0,13)
00004CC6 E390 D230 0004          00000230   7222          LG    9,560(0,13)
00004CCC B904 00A2                          7223          LGR   10,2
00004CD0 B902 00F1                          7224          LTGR  15,1
00004CD4 4780 C7C0               00004D02   7225          BZ    @@gen_label414
00004CD8 A7FB FFFF               0000FFFF   7226          AGHI  15,-1
00004CDC EB1F 0008 000A          00000008   7227          SRAG  1,15,8(0)
00004CE2 B902 0011                          7228          LTGR  1,1
00004CE6 4780 C7BC               00004CFE   7229          BZ    @@gen_label413
00004CEA                                    7230 @@gen_label412 DS 0H
00004CEA D2FF A000 9000 00000000 00000000   7231          MVC   0(256,10),0(9)
00004CF0 41A0 A100               00000100   7232          LA    10,256(0,10)
00004CF4 4190 9100               00000100   7233          LA    9,256(0,9)
00004CF8 E310 C7A8 0046          00004CEA   7234          BCTG  1,@@gen_label412
00004CFE                                    7235 @@gen_label413 DS 0H
00004CFE 44F0 C14E               00004690   7236          EX    15,@lit_1965_263
00004D02                                    7237 @@gen_label414 DS 0H
00004D02 E3F0 D228 0014          00000228   7238          LGF   15,552(0,13)
00004D08 E3F0 D240 0024          00000240   7239          STG   15,576(0,13) ; ulen
00004D0E E3F0 D238 0024          00000238   7240          STG   15,568(0,13) ; alen
00004D14 E3F0 D230 0004          00000230   7241          LG    15,560(0,13)
00004D1A E3F0 D438 0024          00000438   7242          STG   15,1080(0,13)
00004D20 41F0 D238               00000238   7243          LA    15,568(0,13)
00004D24 E3F0 D440 0024          00000440   7244          STG   15,1088(0,13)
00004D2A E320 D448 0024          00000448   7245          STG   2,1096(0,13)
00004D30 41F0 D240               00000240   7246          LA    15,576(0,13)
00004D34 E3F0 D450 0024          00000450   7247          STG   15,1104(0,13)
                                                                                                                           Page  147 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004D3A 4110 D438               00000438   7248          LA    1,1080(0,13)
00004D3E E3F0 C156 0004          00004698   7249          LG    15,@lit_1965_264 ; utf8_2_ebcdic
00004D44                                    7250 @@gen_label415 DS    0H
00004D44 05EF                               7251          BALR  14,15
00004D46                                    7252 @@gen_label416 DS    0H
00004D46 E320 D438 0024          00000438   7253          STG   2,1080(0,13)
00004D4C 4110 D438               00000438   7254          LA    1,1080(0,13)
00004D50 E3F0 C15E 0004          000046A0   7255          LG    15,@lit_1965_265 ; free
00004D56                                    7256 @@gen_label417 DS    0H
00004D56 05EF                               7257          BALR  14,15
00004D58                                    7258 @@gen_label418 DS    0H
00004D58                                    7259 @L839    DS    0H
                                            7260 * ***                   if (ErrorCode)
00004D58 48F0 D108               00000108   7261          LH    15,264(0,13) ; ErrorCode
00004D5C 12FF                               7262          LTR   15,15
00004D5E 4780 C878               00004DBA   7263          BZ    @L840
                                            7264 * ***                           snprintf(errstr, sizeof(errstr), "%.*s\
                                            7265 * ", (int)((&ErrorMsg)->len == -1 ? 0 : (&ErrorMsg)->len), (&ErrorMsg)\
                                            7266 * ->str);
00004D62 E55C D228 FFFF          00000228   7267          CHSI  552(13),-1
00004D68 4770 C832               00004D74   7268          BNE   @L841
00004D6C A7F8 0000               00000000   7269          LHI   15,0        ; 0
00004D70 47F0 C836               00004D78   7270          B     @L842
00004D74                                    7271 @L841    DS    0H
00004D74 58F0 D228               00000228   7272          L     15,552(0,13)
00004D78                                    7273 @L842    DS    0H
00004D78 4110 D10A               0000010A   7274          LA    1,266(0,13)
00004D7C E310 D438 0024          00000438   7275          STG   1,1080(0,13)
00004D82 E548 D440 0100          00000440   7276          MVGHI 1088(13),256
00004D88 E310 C0E6 0004          00004628   7277          LG    1,@lit_1965_214
00004D8E 4110 11CA               000001CA   7278          LA    1,458(0,1)
00004D92 E310 D448 0024          00000448   7279          STG   1,1096(0,13)
00004D98 B914 00FF                          7280          LGFR  15,15
00004D9C E3F0 D450 0024          00000450   7281          STG   15,1104(0,13)
00004DA2 E3F0 D230 0004          00000230   7282          LG    15,560(0,13)
00004DA8 E3F0 D458 0024          00000458   7283          STG   15,1112(0,13)
00004DAE 4110 D438               00000438   7284          LA    1,1080(0,13)
00004DB2 E3F0 C10E 0004          00004650   7285          LG    15,@lit_1965_224 ; snprintf
00004DB8                                    7286 @@gen_label421 DS    0H
00004DB8 05EF                               7287          BALR  14,15
00004DBA                                    7288 @@gen_label422 DS    0H
00004DBA                                    7289 @L840    DS    0H
                                            7290 * ***
                                            7291 * ***           }
00004DBA                                    7292 @L763    DS    0H
                                            7293 * ***
                                            7294 * ***           if ((err = ErrorCode))
00004DBA 4820 D108               00000108   7295          LH    2,264(0,13) ; ErrorCode
00004DBE 1222                               7296          LTR   2,2
00004DC0 4780 C88C               00004DCE   7297          BZ    @L847
                                            7298 * ***                   goto err;
00004DC4 E3C0 C0EE 001A          00004630   7299          ALGF  12,@lit_region_diff_1965_2_4
                                                                                                                           Page  148 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            7300          DROP  12
                        0000589A            7301          USING @REGION_1965_4,12
00004DCA 47F0 C734               00005FCE   7302          B     @_err@1965@0
                                            7303          DROP  12
                        00004542            7304          USING @REGION_1965_2,12
                                            7305 * ***
                                            7306 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                            7307 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                            7308 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                            7309 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                            7310 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                            7311 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_coord.c",349, __F\
                                            7312 * UNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0\
                                            7313 * ); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); i\
                                            7314 * f (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[2\
                                            7315 * 56]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_lo\
                                            7316 * gname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(\
                                            7317 * &(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf\
                                            7318 * _rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_de\
                                            7319 * code_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "f\
                                            7320 * or %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " \
                                            7321 * bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rk\
                                            7322 * buf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice\
                                            7323 * _offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbu\
                                            7324 * f->rkbuf_reader)->start), __FUNCTION__, 349, __len0, ((&rkbuf->rkbuf\
                                            7325 * _reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->r\
                                            7326 * kbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect b\
                                            7327 * roker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_e\
                                            7328 * rr = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } \
                                            7329 * while (0); } while (0); *(&NodeId) = (_v); } while (0);
00004DCE                                    7330 @L847    DS    0H
00004DCE A729 0004               00000004   7331          LGHI  2,4         ; 4
00004DD2 41F0 3078               00000078   7332          LA    15,120(0,3)
00004DD6 E3F0 D438 0024          00000438   7333          STG   15,1080(0,13)
00004DDC 41F0 D0CC               000000CC   7334          LA    15,204(0,13)
00004DE0 E3F0 D440 0024          00000440   7335          STG   15,1088(0,13)
00004DE6 E320 D448 0024          00000448   7336          STG   2,1096(0,13)
00004DEC 4110 D438               00000438   7337          LA    1,1080(0,13)
00004DF0 E3F0 C0F6 0004          00004638   7338          LG    15,@lit_1965_218 ; rd_slice_read
00004DF6                                    7339 @@gen_label424 DS    0H
00004DF6 05EF                               7340          BALR  14,15
00004DF8                                    7341 @@gen_label425 DS    0H
00004DF8 B902 00FF                          7342          LTGR  15,15
00004DFC 4780 C8C8               00004E0A   7343          BZ    *+14  Around region break
00004E00 E3C0 C166 001A          000046A8   7344          ALGF  12,@lit_region_diff_1965_2_3
                                            7345          DROP  12
                        00004EF8            7346          USING @REGION_1965_3,12
00004E06 47F0 C230               00005128   7347          B     @L850
                                            7348          DROP  12
                        00004542            7349          USING @REGION_1965_2,12
00004E0A                                    7350 @L851    DS    0H
00004E0A E390 3098 0004          00000098   7351          LG    9,152(0,3)  ; offset of end in rd_slice_s
                                                                                                                           Page  149 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004E10 41F0 3078               00000078   7352          LA    15,120(0,3)
00004E14 E3F0 D438 0024          00000438   7353          STG   15,1080(0,13)
00004E1A 4110 D438               00000438   7354          LA    1,1080(0,13)
00004E1E E3F0 C0FE 0004          00004640   7355          LG    15,@lit_1965_219 ; rd_slice_abs_offset
00004E24                                    7356 @@gen_label427 DS    0H
00004E24 05EF                               7357          BALR  14,15
00004E26                                    7358 @@gen_label428 DS    0H
00004E26 B90B 009F                          7359          SLGR  9,15
00004E2A B921 0029                          7360          CLGR  2,9
00004E2E 4720 C8FA               00004E3C   7361          BH    *+14  Around region break
00004E32 E3C0 C166 001A          000046A8   7362          ALGF  12,@lit_region_diff_1965_2_3
                                            7363          DROP  12
                        00004EF8            7364          USING @REGION_1965_3,12
00004E38 47F0 C230               00005128   7365          B     @L854
                                            7366          DROP  12
                        00004542            7367          USING @REGION_1965_2,12
00004E3C                                    7368 @L855    DS    0H
00004E3C 1277                               7369          LTR   7,7
00004E3E 4720 C90A               00004E4C   7370          BH    *+14  Around region break
00004E42 E3C0 C166 001A          000046A8   7371          ALGF  12,@lit_region_diff_1965_2_3
                                            7372          DROP  12
                        00004EF8            7373          USING @REGION_1965_3,12
00004E48 47F0 C220               00005118   7374          B     @L858
                                            7375          DROP  12
                        00004542            7376          USING @REGION_1965_2,12
00004E4C                                    7377 @L859    DS    0H
00004E4C E3F0 3100 0002          00000100   7378          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004E52 4770 C956               00004E98   7379          BNZ   @L862
00004E56 E3F0 C0E6 0004          00004628   7380          LG    15,@lit_1965_214
00004E5C 4110 F09E               0000009E   7381          LA    1,158(0,15)
00004E60 E310 D438 0024          00000438   7382          STG   1,1080(0,13)
00004E66 E548 D440 015D          00000440   7383          MVGHI 1088(13),349
00004E6C E310 C0DE 0004          00004620   7384          LG    1,@lit_1965_215
00004E72 4110 11E6               000001E6   7385          LA    1,486(0,1)
00004E76 E310 D448 0024          00000448   7386          STG   1,1096(0,13)
00004E7C D707 D450 D450 00000450 00000450   7387          XC    1104(8,13),1104(13)
00004E82 41F0 F0F0               000000F0   7388          LA    15,240(0,15)
00004E86 E3F0 D458 0024          00000458   7389          STG   15,1112(0,13)
00004E8C 4110 D438               00000438   7390          LA    1,1080(0,13)
00004E90 E3F0 C106 0004          00004648   7391          LG    15,@lit_1965_222 ; rd_kafka_crash
00004E96                                    7392 @@gen_label432 DS    0H
00004E96 05EF                               7393          BALR  14,15
00004E98                                    7394 @@gen_label433 DS    0H
00004E98                                    7395 @L862    DS    0H
00004E98 41F0 D228               00000228   7396          LA    15,552(0,13)
00004E9C E3F0 D438 0024          00000438   7397          STG   15,1080(0,13)
00004EA2 E548 D440 0100          00000440   7398          MVGHI 1088(13),256
00004EA8 E3F0 C0E6 0004          00004628   7399          LG    15,@lit_1965_214
00004EAE 41F0 F10A               0000010A   7400          LA    15,266(0,15)
00004EB2 E3F0 D448 0024          00000448   7401          STG   15,1096(0,13)
00004EB8 4110 D438               00000438   7402          LA    1,1080(0,13)
00004EBC E3F0 C10E 0004          00004650   7403          LG    15,@lit_1965_224 ; snprintf
                                                                                                                           Page  150 
  Active Usings: @REGION_1965_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004EC2                                    7404 @@gen_label434 DS    0H
00004EC2 05EF                               7405          BALR  14,15
00004EC4                                    7406 @@gen_label435 DS    0H
00004EC4 41F0 D228               00000228   7407          LA    15,552(0,13)
00004EC8 B904 001F                          7408          LGR   1,15
00004ECC A709 0000               00000000   7409          LGHI  0,0
00004ED0                                    7410 @@gen_label436 DS 0H
00004ED0 B25E 000F                          7411          SRST  0,15
00004ED4 4710 C98E               00004ED0   7412          BC  1,@@gen_label436
00004ED8 B90B 0001                          7413          SLGR  0,1
00004EDC A70F 0002               00000002   7414          CGHI  0,2
00004EE0 4780 C9AC               00004EEE   7415          BE    *+14  Around region break
00004EE4 E3C0 C166 001A          000046A8   7416          ALGF  12,@lit_region_diff_1965_2_3
                                            7417          DROP  12
                        00004EF8            7418          USING @REGION_1965_3,12
00004EEA 47F0 C000               00004EF8   7419          B     @L864
                                            7420          DROP  12
                        00004542            7421          USING @REGION_1965_2,12
00004EEE 9200 D228      00000228 00000000   7422          MVI   552(13),0
00004EF2                                    7423 @L863    DS    0H
00004EF2 E3C0 C166 001A          000046A8   7424          ALGF  12,@lit_region_diff_1965_2_3
00004EF8                                    7425 @REGION_1965_3 DS 0H
                                            7426          DROP  12
                        00004EF8            7427          USING @REGION_1965_3,12
00004EF8                                    7428 @L864    DS    0H
00004EF8 E3F0 3100 0004          00000100   7429          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004EFE A799 1638               00001638   7430          LGHI  9,5688      ; 5688
00004F02 41F9 F000               00000000   7431          LA    15,0(9,15)
00004F06 E3F0 D438 0024          00000438   7432          STG   15,1080(0,13)
00004F0C 4110 D438               00000438   7433          LA    1,1080(0,13)
00004F10 E3F0 C0D8 0004          00004FD0   7434          LG    15,@lit_1965_278 ; mtx_lock
00004F16                                    7435 @@gen_label438 DS    0H
00004F16 05EF                               7436          BALR  14,15
00004F18                                    7437 @@gen_label439 DS    0H
00004F18 41F0 D328               00000328   7438          LA    15,808(0,13)
00004F1C E3F0 D438 0024          00000438   7439          STG   15,1080(0,13)
00004F22 E3F0 3100 0004          00000100   7440          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004F28 A719 1630               00001630   7441          LGHI  1,5680      ; 5680
00004F2C E3F1 F000 0004          00000000   7442          LG    15,0(1,15)
00004F32 E3F0 D440 0024          00000440   7443          STG   15,1088(0,13)
00004F38 E548 D448 0100          00000448   7444          MVGHI 1096(13),256
00004F3E 4110 D438               00000438   7445          LA    1,1080(0,13)
00004F42 E3F0 C0E0 0004          00004FD8   7446          LG    15,@lit_1965_280 ; rd_strlcpy
00004F48                                    7447 @@gen_label440 DS    0H
00004F48 05EF                               7448          BALR  14,15
00004F4A                                    7449 @@gen_label441 DS    0H
00004F4A E3F0 3100 0004          00000100   7450          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004F50 41F9 F000               00000000   7451          LA    15,0(9,15)
00004F54 E3F0 D438 0024          00000438   7452          STG   15,1080(0,13)
00004F5A 4110 D438               00000438   7453          LA    1,1080(0,13)
00004F5E E3F0 C0E8 0004          00004FE0   7454          LG    15,@lit_1965_282 ; mtx_unlock
00004F64                                    7455 @@gen_label442 DS    0H
                                                                                                                           Page  151 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004F64 05EF                               7456          BALR  14,15
00004F66                                    7457 @@gen_label443 DS    0H
00004F66 E3F0 30B8 0015          000000B8   7458          LGH   15,184(0,3)
00004F6C E3F0 D438 0024          00000438   7459          STG   15,1080(0,13)
00004F72 4110 D438               00000438   7460          LA    1,1080(0,13)
00004F76 E3F0 C0F0 0004          00004FE8   7461          LG    15,@lit_1965_283 ; rd_kafka_ApiKey2str
00004F7C                                    7462 @@gen_label444 DS    0H
00004F7C 05EF                               7463          BALR  14,15
00004F7E                                    7464 @@gen_label445 DS    0H
00004F7E B904 009F                          7465          LGR   9,15
00004F82 41F0 3078               00000078   7466          LA    15,120(0,3)
00004F86 E3F0 D438 0024          00000438   7467          STG   15,1080(0,13)
00004F8C 4110 D438               00000438   7468          LA    1,1080(0,13)
00004F90 E3F0 C0F8 0004          00004FF0   7469          LG    15,@lit_1965_284 ; rd_slice_offset
00004F96                                    7470 @@gen_label446 DS    0H
00004F96 05EF                               7471          BALR  14,15
00004F98                                    7472 @@gen_label447 DS    0H
00004F98 B904 00AF                          7473          LGR   10,15
00004F9C E3B0 3098 0004          00000098   7474          LG    11,152(0,3) ; offset of end in rd_slice_s
00004FA2 41F0 3078               00000078   7475          LA    15,120(0,3)
00004FA6 E3F0 D438 0024          00000438   7476          STG   15,1080(0,13)
00004FAC 4110 D438               00000438   7477          LA    1,1080(0,13)
00004FB0 E3F0 C100 0004          00004FF8   7478          LG    15,@lit_1965_285 ; rd_slice_abs_offset
00004FB6                                    7479 @@gen_label448 DS    0H
00004FB6 05EF                               7480          BALR  14,15
00004FB8                                    7481 @@gen_label449 DS    0H
00004FB8 B90B 00BF                          7482          SLGR  11,15
00004FBC E3F0 31E8 0002          000001E8   7483          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004FC2 4780 C150               00005048   7484          BZ    @L867
00004FC6 E3F0 31E8 0004          000001E8   7485          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004FCC 47F0 C15A               00005052   7486          B     @L868
00004FD0                                    7487          DS    0D
00004FD0 0000000000000000                   7488 @lit_1965_278 DC AD(mtx_lock)
00004FD8 00000000000010A0                   7489 @lit_1965_280 DC AD(rd_strlcpy)
00004FE0 0000000000000000                   7490 @lit_1965_282 DC AD(mtx_unlock)
00004FE8 0000000000000F08                   7491 @lit_1965_283 DC AD(rd_kafka_$Api$Key2str)
00004FF0 0000000000000E50                   7492 @lit_1965_284 DC AD(rd_slice_offset)
00004FF8 0000000000000DA8                   7493 @lit_1965_285 DC AD(rd_slice_abs_offset)
00005000 0000000000006A88                   7494 @lit_1965_286 DC AD(@strings@)
00005008 0000000000000000                   7495 @lit_1965_289 DC AD(rd_kafka_log0)
00005010 0000000000006860                   7496 @lit_1965_288 DC AD(@DATA)
00005018 000009A2                           7497 @lit_region_diff_1965_3_4  DC A(@REGION_1965_4-@REGION_1965_3)
0000501C 00000000
00005020 0000000000000000                   7498 @lit_1965_290 DC AD(rd_slice_read_uvarint)
00005028 0000000000000000                   7499 @lit_1965_293 DC AD(rd_kafka_crash)
00005030 0000000000000000                   7500 @lit_1965_295 DC AD(snprintf)
00005038 0000000000000000                   7501 @lit_1965_310 DC AD(rd_slice_read)
00005040 0000000000000000                   7502 @lit_1965_334 DC AD(rd_slice_ensure_contig)
00005048                                    7503 @L867    DS    0H
00005048 E3F0 C108 0004          00005000   7504          LG    15,@lit_1965_286
                                                                                                                           Page  152 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000504E 41F0 F10E               0000010E   7505          LA    15,270(0,15)
00005052                                    7506 @L868    DS    0H
00005052 E310 3100 0004          00000100   7507          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00005058 E310 1FD0 0004          00000FD0   7508          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000505E 4110 1210               00000210   7509          LA    1,528(0,1)
00005062 E310 D438 0024          00000438   7510          STG   1,1080(0,13)
00005068 E310 3100 0004          00000100   7511          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000506E E310 1FD0 0004          00000FD0   7512          LG    1,4048(0,1)
00005074 E310 D440 0024          00000440   7513          STG   1,1088(0,13)
0000507A 4110 D328               00000328   7514          LA    1,808(0,13)
0000507E E310 D448 0024          00000448   7515          STG   1,1096(0,13)
00005084 B914 0017                          7516          LGFR  1,7
00005088 E310 D450 0024          00000450   7517          STG   1,1104(0,13)
0000508E D707 D458 D458 00000458 00000458   7518          XC    1112(8,13),1112(13)
00005094 E310 C108 0004          00005000   7519          LG    1,@lit_1965_286
0000509A 4170 1132               00000132   7520          LA    7,306(0,1)
0000509E E370 D460 0024          00000460   7521          STG   7,1120(0,13)
000050A4 4110 113E               0000013E   7522          LA    1,318(0,1)
000050A8 E310 D468 0024          00000468   7523          STG   1,1128(0,13)
000050AE E390 D470 0024          00000470   7524          STG   9,1136(0,13)
000050B4 4810 30BA               000000BA   7525          LH    1,186(0,3)
000050B8 B914 0011                          7526          LGFR  1,1
000050BC E310 D478 0024          00000478   7527          STG   1,1144(0,13)
000050C2 E3A0 D480 0024          00000480   7528          STG   10,1152(0,13)
000050C8 E310 3098 0004          00000098   7529          LG    1,152(0,3)  ; offset of end in rd_slice_s
000050CE E310 3090 000B          00000090   7530          SLG   1,144(0,3)
000050D4 E310 D488 0024          00000488   7531          STG   1,1160(0,13)
000050DA E310 C118 0004          00005010   7532          LG    1,@lit_1965_288
000050E0 4110 11E6               000001E6   7533          LA    1,486(0,1)
000050E4 E310 D490 0024          00000490   7534          STG   1,1168(0,13)
000050EA E548 D498 015D          00000498   7535          MVGHI 1176(13),349
000050F0 E320 D4A0 0024          000004A0   7536          STG   2,1184(0,13)
000050F6 E3B0 D4A8 0024          000004A8   7537          STG   11,1192(0,13)
000050FC E3F0 D4B0 0024          000004B0   7538          STG   15,1200(0,13)
00005102 41F0 D228               00000228   7539          LA    15,552(0,13)
00005106 E3F0 D4B8 0024          000004B8   7540          STG   15,1208(0,13)
0000510C 4110 D438               00000438   7541          LA    1,1080(0,13)
00005110 E3F0 C110 0004          00005008   7542          LG    15,@lit_1965_289 ; rd_kafka_log0
00005116                                    7543 @@gen_label451 DS    0H
00005116 05EF                               7544          BALR  14,15
00005118                                    7545 @@gen_label452 DS    0H
00005118                                    7546 @L858    DS    0H
00005118 E54C 3188 FF65          00000188   7547          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000511E E3C0 C120 001A          00005018   7548          ALGF  12,@lit_region_diff_1965_3_4
                                            7549          DROP  12
                        0000589A            7550          USING @REGION_1965_4,12
00005124 47F0 C730               00005FCA   7551          B     @_err_parse@1965@1
                                            7552          DROP  12
                        00004EF8            7553          USING @REGION_1965_3,12
00005128                                    7554 @L854    DS    0H
00005128                                    7555 @L850    DS    0H
00005128 58F0 D0CC               000000CC   7556          L     15,204(0,13) ; _v
                                                                                                                           Page  153 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000512C 50F0 D210               00000210   7557          ST    15,528(0,13)
                                            7558 * ***           do { int _klen; if ((rkbuf)->rkbuf_flags & 0x40) { uin\
                                            7559 * t64_t _uva; do { uint64_t _v; size_t _r = rd_slice_read_uvarint(&(rk\
                                            7560 * buf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_decode_err\
                                            7561 * ors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asg\
                                            7562 * kafka\\librdkafka\\src\\rdkafka_coord.c",350, __FUNCTION__, (((void \
                                            7563 * *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[25\
                                            7564 * 6]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "uvarint parsing faile\
                                            7565 * d"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _log\
                                            7566 * name[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlc\
                                            7567 * py(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_u\
                                            7568 * nlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf-\
                                            7569 * >rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, \
                                            7570 * log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflo\
                                            7571 * w " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "\
                                            7572 * zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2\
                                            7573 * str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd\
                                            7574 * _slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - \
                                            7575 * (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 350, (size_t)0, ((&rkb\
                                            7576 * uf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)),\
                                            7577 *  rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "in\
                                            7578 * correct broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)\
                                            7579 * ->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while \
                                            7580 * (0); *(&_uva) = _v; } while (0); (&Host)->len = ((int32_t)_uva) - 1;\
                                            7581 *  _klen = (&Host)->len; } else { do { int16_t _v; do { size_t __len2 \
                                            7582 * = (size_t)(2); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len\
                                            7583 * 2)) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)\
                                            7584 * ->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader)))\
                                            7585 * )) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb\
                                            7586 * )))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_coord.c"\
                                            7587 * ,350, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                            7588 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                            7589 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                            7590 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                            7591 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                            7592 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                            7593 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                            7594 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                            7595 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                            7596 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                            7597 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                            7598 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                            7599 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 350, __len0, ((&rkb\
                                            7600 * uf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)),\
                                            7601 *  rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "in\
                                            7602 * correct broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)\
                                            7603 * ->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while \
                                            7604 * (0); } } while (0); } while (0); (&Host)->len = (int16_t)(_v); } whi\
                                            7605 * le (0); _klen = (((&Host)->len) == -1 ? 0 : ((&Host)->len)); } if ((\
                                            7606 * (&Host)->len == -1)) (&Host)->str = ((void *)0); else if ((((&Host)-\
                                            7607 * >len) == -1 ? 0 : ((&Host)->len)) == 0) (&Host)->str = ""; else if (\
                                            7608 * !((&Host)->str = rd_slice_ensure_contig(&rkbuf->rkbuf_reader, _klen)\
                                                                                                                           Page  154 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            7609 * )) do { size_t __len0 = (size_t)(_klen); if (((__len0 > ((&(rkbuf)->\
                                            7610 * rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader)))))\
                                            7611 *  { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb))\
                                            7612 * )) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_coord.c",3\
                                            7613 * 50, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } w\
                                            7614 * hile (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), "\
                                            7615 * : "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _lo\
                                            7616 * gname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strl\
                                            7617 * cpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_\
                                            7618 * unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf\
                                            7619 * ->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname,\
                                            7620 *  log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underfl\
                                            7621 * ow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" \
                                            7622 * "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey\
                                            7623 * 2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, r\
                                            7624 * d_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end -\
                                            7625 *  (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 350, __len0, ((&rkbuf\
                                            7626 * ->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), r\
                                            7627 * kbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "inco\
                                            7628 * rrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->\
                                            7629 * rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0\
                                            7630 * ); } } while (0); if((&Host)->len > 0) { char *tbuf = calloc(1,(&Hos\
                                            7631 * t)->len); __memcpy(tbuf,(&Host)->str,(&Host)->len); size_t ulen=(siz\
                                            7632 * e_t)(&Host)->len; size_t alen=ulen; utf8_2_ebcdic((&Host)->str, &ale\
                                            7633 * n, tbuf, &ulen); free(tbuf); } } while (0);
00005130                                    7634 @L869    DS    0H
00005130 9140 3023      00000023 00000040   7635          TM    35(3),64
00005134 4780 C4D6               000053CE   7636          BZ    @L895
00005138                                    7637 @L873    DS    0H
00005138 41F0 3078               00000078   7638          LA    15,120(0,3)
0000513C E3F0 D438 0024          00000438   7639          STG   15,1080(0,13)
00005142 41F0 D0D8               000000D8   7640          LA    15,216(0,13)
00005146 E3F0 D440 0024          00000440   7641          STG   15,1088(0,13)
0000514C 4110 D438               00000438   7642          LA    1,1080(0,13)
00005150 E3F0 C128 0004          00005020   7643          LG    15,@lit_1965_290 ; rd_slice_read_uvarint
00005156                                    7644 @@gen_label454 DS    0H
00005156 05EF                               7645          BALR  14,15
00005158                                    7646 @@gen_label455 DS    0H
00005158 B902 00FF                          7647          LTGR  15,15
0000515C 4770 C4BC               000053B4   7648          BNE   @L876
00005160                                    7649 @L877    DS    0H
00005160 1277                               7650          LTR   7,7
00005162 47D0 C4AC               000053A4   7651          BNH   @L880
00005166                                    7652 @L881    DS    0H
00005166 E3F0 3100 0002          00000100   7653          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000516C 4770 C2BA               000051B2   7654          BNZ   @L884
00005170 E3F0 C108 0004          00005000   7655          LG    15,@lit_1965_286
00005176 4110 F09E               0000009E   7656          LA    1,158(0,15)
0000517A E310 D438 0024          00000438   7657          STG   1,1080(0,13)
00005180 E548 D440 015E          00000440   7658          MVGHI 1088(13),350
00005186 E310 C118 0004          00005010   7659          LG    1,@lit_1965_288
0000518C 4110 11E6               000001E6   7660          LA    1,486(0,1)
                                                                                                                           Page  155 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005190 E310 D448 0024          00000448   7661          STG   1,1096(0,13)
00005196 D707 D450 D450 00000450 00000450   7662          XC    1104(8,13),1104(13)
0000519C 41F0 F0F0               000000F0   7663          LA    15,240(0,15)
000051A0 E3F0 D458 0024          00000458   7664          STG   15,1112(0,13)
000051A6 4110 D438               00000438   7665          LA    1,1080(0,13)
000051AA E3F0 C130 0004          00005028   7666          LG    15,@lit_1965_293 ; rd_kafka_crash
000051B0                                    7667 @@gen_label459 DS    0H
000051B0 05EF                               7668          BALR  14,15
000051B2                                    7669 @@gen_label460 DS    0H
000051B2                                    7670 @L884    DS    0H
000051B2 41F0 D228               00000228   7671          LA    15,552(0,13)
000051B6 E3F0 D438 0024          00000438   7672          STG   15,1080(0,13)
000051BC E548 D440 0100          00000440   7673          MVGHI 1088(13),256
000051C2 E3F0 C108 0004          00005000   7674          LG    15,@lit_1965_286
000051C8 41F0 F1AE               000001AE   7675          LA    15,430(0,15)
000051CC E3F0 D448 0024          00000448   7676          STG   15,1096(0,13)
000051D2 4110 D438               00000438   7677          LA    1,1080(0,13)
000051D6 E3F0 C138 0004          00005030   7678          LG    15,@lit_1965_295 ; snprintf
000051DC                                    7679 @@gen_label461 DS    0H
000051DC 05EF                               7680          BALR  14,15
000051DE                                    7681 @@gen_label462 DS    0H
000051DE 41F0 D228               00000228   7682          LA    15,552(0,13)
000051E2 B904 001F                          7683          LGR   1,15
000051E6 A709 0000               00000000   7684          LGHI  0,0
000051EA                                    7685 @@gen_label463 DS 0H
000051EA B25E 000F                          7686          SRST  0,15
000051EE 4710 C2F2               000051EA   7687          BC  1,@@gen_label463
000051F2 B90B 0001                          7688          SLGR  0,1
000051F6 A70F 0002               00000002   7689          CGHI  0,2
000051FA 4770 C30A               00005202   7690          BNE   @L886
000051FE 9200 D228      00000228 00000000   7691          MVI   552(13),0
00005202                                    7692 @L885    DS    0H
00005202                                    7693 @L886    DS    0H
00005202 E3F0 3100 0004          00000100   7694          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005208 A729 1638               00001638   7695          LGHI  2,5688      ; 5688
0000520C 41F2 F000               00000000   7696          LA    15,0(2,15)
00005210 E3F0 D438 0024          00000438   7697          STG   15,1080(0,13)
00005216 4110 D438               00000438   7698          LA    1,1080(0,13)
0000521A E3F0 C0D8 0004          00004FD0   7699          LG    15,@lit_1965_278 ; mtx_lock
00005220                                    7700 @@gen_label465 DS    0H
00005220 05EF                               7701          BALR  14,15
00005222                                    7702 @@gen_label466 DS    0H
00005222 41F0 D328               00000328   7703          LA    15,808(0,13)
00005226 E3F0 D438 0024          00000438   7704          STG   15,1080(0,13)
0000522C E3F0 3100 0004          00000100   7705          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005232 A719 1630               00001630   7706          LGHI  1,5680      ; 5680
00005236 E3F1 F000 0004          00000000   7707          LG    15,0(1,15)
0000523C E3F0 D440 0024          00000440   7708          STG   15,1088(0,13)
00005242 E548 D448 0100          00000448   7709          MVGHI 1096(13),256
00005248 4110 D438               00000438   7710          LA    1,1080(0,13)
0000524C E3F0 C0E0 0004          00004FD8   7711          LG    15,@lit_1965_280 ; rd_strlcpy
00005252                                    7712 @@gen_label467 DS    0H
                                                                                                                           Page  156 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005252 05EF                               7713          BALR  14,15
00005254                                    7714 @@gen_label468 DS    0H
00005254 E3F0 3100 0004          00000100   7715          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000525A 41F2 F000               00000000   7716          LA    15,0(2,15)
0000525E E3F0 D438 0024          00000438   7717          STG   15,1080(0,13)
00005264 4110 D438               00000438   7718          LA    1,1080(0,13)
00005268 E3F0 C0E8 0004          00004FE0   7719          LG    15,@lit_1965_282 ; mtx_unlock
0000526E                                    7720 @@gen_label469 DS    0H
0000526E 05EF                               7721          BALR  14,15
00005270                                    7722 @@gen_label470 DS    0H
00005270 E3F0 30B8 0015          000000B8   7723          LGH   15,184(0,3)
00005276 E3F0 D438 0024          00000438   7724          STG   15,1080(0,13)
0000527C 4110 D438               00000438   7725          LA    1,1080(0,13)
00005280 E3F0 C0F0 0004          00004FE8   7726          LG    15,@lit_1965_283 ; rd_kafka_ApiKey2str
00005286                                    7727 @@gen_label471 DS    0H
00005286 05EF                               7728          BALR  14,15
00005288                                    7729 @@gen_label472 DS    0H
00005288 B904 002F                          7730          LGR   2,15
0000528C 41F0 3078               00000078   7731          LA    15,120(0,3)
00005290 E3F0 D438 0024          00000438   7732          STG   15,1080(0,13)
00005296 4110 D438               00000438   7733          LA    1,1080(0,13)
0000529A E3F0 C0F8 0004          00004FF0   7734          LG    15,@lit_1965_284 ; rd_slice_offset
000052A0                                    7735 @@gen_label473 DS    0H
000052A0 05EF                               7736          BALR  14,15
000052A2                                    7737 @@gen_label474 DS    0H
000052A2 B904 009F                          7738          LGR   9,15
000052A6 E3A0 3098 0004          00000098   7739          LG    10,152(0,3) ; offset of end in rd_slice_s
000052AC 41F0 3078               00000078   7740          LA    15,120(0,3)
000052B0 E3F0 D438 0024          00000438   7741          STG   15,1080(0,13)
000052B6 4110 D438               00000438   7742          LA    1,1080(0,13)
000052BA E3F0 C100 0004          00004FF8   7743          LG    15,@lit_1965_285 ; rd_slice_abs_offset
000052C0                                    7744 @@gen_label475 DS    0H
000052C0 05EF                               7745          BALR  14,15
000052C2                                    7746 @@gen_label476 DS    0H
000052C2 B90B 00AF                          7747          SLGR  10,15
000052C6 E3F0 31E8 0002          000001E8   7748          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000052CC 4780 C3E2               000052DA   7749          BZ    @L889
000052D0 E3F0 31E8 0004          000001E8   7750          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000052D6 47F0 C3EC               000052E4   7751          B     @L890
000052DA                                    7752 @L889    DS    0H
000052DA E3F0 C108 0004          00005000   7753          LG    15,@lit_1965_286
000052E0 41F0 F10E               0000010E   7754          LA    15,270(0,15)
000052E4                                    7755 @L890    DS    0H
000052E4 E310 3100 0004          00000100   7756          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000052EA E310 1FD0 0004          00000FD0   7757          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000052F0 4110 1210               00000210   7758          LA    1,528(0,1)
000052F4 E310 D438 0024          00000438   7759          STG   1,1080(0,13)
000052FA E310 3100 0004          00000100   7760          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00005300 E310 1FD0 0004          00000FD0   7761          LG    1,4048(0,1)
00005306 E310 D440 0024          00000440   7762          STG   1,1088(0,13)
                                                                                                                           Page  157 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000530C 4110 D328               00000328   7763          LA    1,808(0,13)
00005310 E310 D448 0024          00000448   7764          STG   1,1096(0,13)
00005316 B914 0017                          7765          LGFR  1,7
0000531A E310 D450 0024          00000450   7766          STG   1,1104(0,13)
00005320 D707 D458 D458 00000458 00000458   7767          XC    1112(8,13),1112(13)
00005326 E310 C108 0004          00005000   7768          LG    1,@lit_1965_286
0000532C 4170 1132               00000132   7769          LA    7,306(0,1)
00005330 E370 D460 0024          00000460   7770          STG   7,1120(0,13)
00005336 4110 113E               0000013E   7771          LA    1,318(0,1)
0000533A EB12 D468 0024          00000468   7772          STMG  1,2,1128(13)
00005340 4810 30BA               000000BA   7773          LH    1,186(0,3)
00005344 B914 0011                          7774          LGFR  1,1
00005348 E310 D478 0024          00000478   7775          STG   1,1144(0,13)
0000534E E390 D480 0024          00000480   7776          STG   9,1152(0,13)
00005354 E310 3098 0004          00000098   7777          LG    1,152(0,3)  ; offset of end in rd_slice_s
0000535A E310 3090 000B          00000090   7778          SLG   1,144(0,3)
00005360 E310 D488 0024          00000488   7779          STG   1,1160(0,13)
00005366 E310 C118 0004          00005010   7780          LG    1,@lit_1965_288
0000536C 4110 11E6               000001E6   7781          LA    1,486(0,1)
00005370 E310 D490 0024          00000490   7782          STG   1,1168(0,13)
00005376 E548 D498 015E          00000498   7783          MVGHI 1176(13),350
0000537C D707 D4A0 D4A0 000004A0 000004A0   7784          XC    1184(8,13),1184(13)
00005382 E3A0 D4A8 0024          000004A8   7785          STG   10,1192(0,13)
00005388 E3F0 D4B0 0024          000004B0   7786          STG   15,1200(0,13)
0000538E 41F0 D228               00000228   7787          LA    15,552(0,13)
00005392 E3F0 D4B8 0024          000004B8   7788          STG   15,1208(0,13)
00005398 4110 D438               00000438   7789          LA    1,1080(0,13)
0000539C E3F0 C110 0004          00005008   7790          LG    15,@lit_1965_289 ; rd_kafka_log0
000053A2                                    7791 @@gen_label478 DS    0H
000053A2 05EF                               7792          BALR  14,15
000053A4                                    7793 @@gen_label479 DS    0H
000053A4                                    7794 @L880    DS    0H
000053A4 E54C 3188 FF65          00000188   7795          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000053AA E3C0 C120 001A          00005018   7796          ALGF  12,@lit_region_diff_1965_3_4
                                            7797          DROP  12
                        0000589A            7798          USING @REGION_1965_4,12
000053B0 47F0 C730               00005FCA   7799          B     @_err_parse@1965@1
                                            7800          DROP  12
                        00004EF8            7801          USING @REGION_1965_3,12
000053B4                                    7802 @L876    DS    0H
000053B4 E3F0 D0D8 0004          000000D8   7803          LG    15,216(0,13) ; _v
000053BA E3F0 D0D0 0024          000000D0   7804          STG   15,208(0,13)
000053C0 A7FA FFFF               0000FFFF   7805          AHI   15,-1
000053C4 50F0 D218               00000218   7806          ST    15,536(0,13)
000053C8 182F                               7807          LR    2,15
000053CA 47F0 C7A8               000056A0   7808          B     @L891
000053CE                                    7809 @L895    DS    0H
000053CE A729 0002               00000002   7810          LGHI  2,2         ; 2
000053D2 41F0 3078               00000078   7811          LA    15,120(0,3)
000053D6 E3F0 D438 0024          00000438   7812          STG   15,1080(0,13)
000053DC 41F0 D0E0               000000E0   7813          LA    15,224(0,13)
000053E0 E3F0 D440 0024          00000440   7814          STG   15,1088(0,13)
                                                                                                                           Page  158 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000053E6 E320 D448 0024          00000448   7815          STG   2,1096(0,13)
000053EC 4110 D438               00000438   7816          LA    1,1080(0,13)
000053F0 E3F0 C140 0004          00005038   7817          LG    15,@lit_1965_310 ; rd_slice_read
000053F6                                    7818 @@gen_label480 DS    0H
000053F6 05EF                               7819          BALR  14,15
000053F8                                    7820 @@gen_label481 DS    0H
000053F8 B902 00FF                          7821          LTGR  15,15
000053FC 4770 C78A               00005682   7822          BNZ   @L898
00005400                                    7823 @L899    DS    0H
00005400 E390 3098 0004          00000098   7824          LG    9,152(0,3)  ; offset of end in rd_slice_s
00005406 41F0 3078               00000078   7825          LA    15,120(0,3)
0000540A E3F0 D438 0024          00000438   7826          STG   15,1080(0,13)
00005410 4110 D438               00000438   7827          LA    1,1080(0,13)
00005414 E3F0 C100 0004          00004FF8   7828          LG    15,@lit_1965_285 ; rd_slice_abs_offset
0000541A                                    7829 @@gen_label483 DS    0H
0000541A 05EF                               7830          BALR  14,15
0000541C                                    7831 @@gen_label484 DS    0H
0000541C B90B 009F                          7832          SLGR  9,15
00005420 B921 0029                          7833          CLGR  2,9
00005424 47D0 C78A               00005682   7834          BNH   @L902
00005428                                    7835 @L903    DS    0H
00005428 1277                               7836          LTR   7,7
0000542A 47D0 C77A               00005672   7837          BNH   @L906
0000542E                                    7838 @L907    DS    0H
0000542E E3F0 3100 0002          00000100   7839          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005434 4770 C582               0000547A   7840          BNZ   @L910
00005438 E3F0 C108 0004          00005000   7841          LG    15,@lit_1965_286
0000543E 4110 F09E               0000009E   7842          LA    1,158(0,15)
00005442 E310 D438 0024          00000438   7843          STG   1,1080(0,13)
00005448 E548 D440 015E          00000440   7844          MVGHI 1088(13),350
0000544E E310 C118 0004          00005010   7845          LG    1,@lit_1965_288
00005454 4110 11E6               000001E6   7846          LA    1,486(0,1)
00005458 E310 D448 0024          00000448   7847          STG   1,1096(0,13)
0000545E D707 D450 D450 00000450 00000450   7848          XC    1104(8,13),1104(13)
00005464 41F0 F0F0               000000F0   7849          LA    15,240(0,15)
00005468 E3F0 D458 0024          00000458   7850          STG   15,1112(0,13)
0000546E 4110 D438               00000438   7851          LA    1,1080(0,13)
00005472 E3F0 C130 0004          00005028   7852          LG    15,@lit_1965_293 ; rd_kafka_crash
00005478                                    7853 @@gen_label488 DS    0H
00005478 05EF                               7854          BALR  14,15
0000547A                                    7855 @@gen_label489 DS    0H
0000547A                                    7856 @L910    DS    0H
0000547A 41F0 D228               00000228   7857          LA    15,552(0,13)
0000547E E3F0 D438 0024          00000438   7858          STG   15,1080(0,13)
00005484 E548 D440 0100          00000440   7859          MVGHI 1088(13),256
0000548A E3F0 C108 0004          00005000   7860          LG    15,@lit_1965_286
00005490 41F0 F10A               0000010A   7861          LA    15,266(0,15)
00005494 E3F0 D448 0024          00000448   7862          STG   15,1096(0,13)
0000549A 4110 D438               00000438   7863          LA    1,1080(0,13)
0000549E E3F0 C138 0004          00005030   7864          LG    15,@lit_1965_295 ; snprintf
000054A4                                    7865 @@gen_label490 DS    0H
000054A4 05EF                               7866          BALR  14,15
                                                                                                                           Page  159 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000054A6                                    7867 @@gen_label491 DS    0H
000054A6 41F0 D228               00000228   7868          LA    15,552(0,13)
000054AA B904 001F                          7869          LGR   1,15
000054AE A709 0000               00000000   7870          LGHI  0,0
000054B2                                    7871 @@gen_label492 DS 0H
000054B2 B25E 000F                          7872          SRST  0,15
000054B6 4710 C5BA               000054B2   7873          BC  1,@@gen_label492
000054BA B90B 0001                          7874          SLGR  0,1
000054BE A70F 0002               00000002   7875          CGHI  0,2
000054C2 4770 C5D2               000054CA   7876          BNE   @L912
000054C6 9200 D228      00000228 00000000   7877          MVI   552(13),0
000054CA                                    7878 @L911    DS    0H
000054CA                                    7879 @L912    DS    0H
000054CA E3F0 3100 0004          00000100   7880          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
000054D0 A799 1638               00001638   7881          LGHI  9,5688      ; 5688
000054D4 41F9 F000               00000000   7882          LA    15,0(9,15)
000054D8 E3F0 D438 0024          00000438   7883          STG   15,1080(0,13)
000054DE 4110 D438               00000438   7884          LA    1,1080(0,13)
000054E2 E3F0 C0D8 0004          00004FD0   7885          LG    15,@lit_1965_278 ; mtx_lock
000054E8                                    7886 @@gen_label494 DS    0H
000054E8 05EF                               7887          BALR  14,15
000054EA                                    7888 @@gen_label495 DS    0H
000054EA 41F0 D328               00000328   7889          LA    15,808(0,13)
000054EE E3F0 D438 0024          00000438   7890          STG   15,1080(0,13)
000054F4 E3F0 3100 0004          00000100   7891          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
000054FA A719 1630               00001630   7892          LGHI  1,5680      ; 5680
000054FE E3F1 F000 0004          00000000   7893          LG    15,0(1,15)
00005504 E3F0 D440 0024          00000440   7894          STG   15,1088(0,13)
0000550A E548 D448 0100          00000448   7895          MVGHI 1096(13),256
00005510 4110 D438               00000438   7896          LA    1,1080(0,13)
00005514 E3F0 C0E0 0004          00004FD8   7897          LG    15,@lit_1965_280 ; rd_strlcpy
0000551A                                    7898 @@gen_label496 DS    0H
0000551A 05EF                               7899          BALR  14,15
0000551C                                    7900 @@gen_label497 DS    0H
0000551C E3F0 3100 0004          00000100   7901          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005522 41F9 F000               00000000   7902          LA    15,0(9,15)
00005526 E3F0 D438 0024          00000438   7903          STG   15,1080(0,13)
0000552C 4110 D438               00000438   7904          LA    1,1080(0,13)
00005530 E3F0 C0E8 0004          00004FE0   7905          LG    15,@lit_1965_282 ; mtx_unlock
00005536                                    7906 @@gen_label498 DS    0H
00005536 05EF                               7907          BALR  14,15
00005538                                    7908 @@gen_label499 DS    0H
00005538 E3F0 30B8 0015          000000B8   7909          LGH   15,184(0,3)
0000553E E3F0 D438 0024          00000438   7910          STG   15,1080(0,13)
00005544 4110 D438               00000438   7911          LA    1,1080(0,13)
00005548 E3F0 C0F0 0004          00004FE8   7912          LG    15,@lit_1965_283 ; rd_kafka_ApiKey2str
0000554E                                    7913 @@gen_label500 DS    0H
0000554E 05EF                               7914          BALR  14,15
00005550                                    7915 @@gen_label501 DS    0H
00005550 B904 009F                          7916          LGR   9,15
00005554 41F0 3078               00000078   7917          LA    15,120(0,3)
00005558 E3F0 D438 0024          00000438   7918          STG   15,1080(0,13)
                                                                                                                           Page  160 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000555E 4110 D438               00000438   7919          LA    1,1080(0,13)
00005562 E3F0 C0F8 0004          00004FF0   7920          LG    15,@lit_1965_284 ; rd_slice_offset
00005568                                    7921 @@gen_label502 DS    0H
00005568 05EF                               7922          BALR  14,15
0000556A                                    7923 @@gen_label503 DS    0H
0000556A B904 00AF                          7924          LGR   10,15
0000556E E3B0 3098 0004          00000098   7925          LG    11,152(0,3) ; offset of end in rd_slice_s
00005574 41F0 3078               00000078   7926          LA    15,120(0,3)
00005578 E3F0 D438 0024          00000438   7927          STG   15,1080(0,13)
0000557E 4110 D438               00000438   7928          LA    1,1080(0,13)
00005582 E3F0 C100 0004          00004FF8   7929          LG    15,@lit_1965_285 ; rd_slice_abs_offset
00005588                                    7930 @@gen_label504 DS    0H
00005588 05EF                               7931          BALR  14,15
0000558A                                    7932 @@gen_label505 DS    0H
0000558A B90B 00BF                          7933          SLGR  11,15
0000558E E3F0 31E8 0002          000001E8   7934          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00005594 4780 C6AA               000055A2   7935          BZ    @L915
00005598 E3F0 31E8 0004          000001E8   7936          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000559E 47F0 C6B4               000055AC   7937          B     @L916
000055A2                                    7938 @L915    DS    0H
000055A2 E3F0 C108 0004          00005000   7939          LG    15,@lit_1965_286
000055A8 41F0 F10E               0000010E   7940          LA    15,270(0,15)
000055AC                                    7941 @L916    DS    0H
000055AC E310 3100 0004          00000100   7942          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000055B2 E310 1FD0 0004          00000FD0   7943          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000055B8 4110 1210               00000210   7944          LA    1,528(0,1)
000055BC E310 D438 0024          00000438   7945          STG   1,1080(0,13)
000055C2 E310 3100 0004          00000100   7946          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000055C8 E310 1FD0 0004          00000FD0   7947          LG    1,4048(0,1)
000055CE E310 D440 0024          00000440   7948          STG   1,1088(0,13)
000055D4 4110 D328               00000328   7949          LA    1,808(0,13)
000055D8 E310 D448 0024          00000448   7950          STG   1,1096(0,13)
000055DE B914 0017                          7951          LGFR  1,7
000055E2 E310 D450 0024          00000450   7952          STG   1,1104(0,13)
000055E8 D707 D458 D458 00000458 00000458   7953          XC    1112(8,13),1112(13)
000055EE E310 C108 0004          00005000   7954          LG    1,@lit_1965_286
000055F4 4170 1132               00000132   7955          LA    7,306(0,1)
000055F8 E370 D460 0024          00000460   7956          STG   7,1120(0,13)
000055FE 4110 113E               0000013E   7957          LA    1,318(0,1)
00005602 E310 D468 0024          00000468   7958          STG   1,1128(0,13)
00005608 E390 D470 0024          00000470   7959          STG   9,1136(0,13)
0000560E 4810 30BA               000000BA   7960          LH    1,186(0,3)
00005612 B914 0011                          7961          LGFR  1,1
00005616 E310 D478 0024          00000478   7962          STG   1,1144(0,13)
0000561C E3A0 D480 0024          00000480   7963          STG   10,1152(0,13)
00005622 E310 3098 0004          00000098   7964          LG    1,152(0,3)  ; offset of end in rd_slice_s
00005628 E310 3090 000B          00000090   7965          SLG   1,144(0,3)
0000562E E310 D488 0024          00000488   7966          STG   1,1160(0,13)
00005634 E310 C118 0004          00005010   7967          LG    1,@lit_1965_288
0000563A 4110 11E6               000001E6   7968          LA    1,486(0,1)
                                                                                                                           Page  161 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000563E E310 D490 0024          00000490   7969          STG   1,1168(0,13)
00005644 E548 D498 015E          00000498   7970          MVGHI 1176(13),350
0000564A E320 D4A0 0024          000004A0   7971          STG   2,1184(0,13)
00005650 E3B0 D4A8 0024          000004A8   7972          STG   11,1192(0,13)
00005656 E3F0 D4B0 0024          000004B0   7973          STG   15,1200(0,13)
0000565C 41F0 D228               00000228   7974          LA    15,552(0,13)
00005660 E3F0 D4B8 0024          000004B8   7975          STG   15,1208(0,13)
00005666 4110 D438               00000438   7976          LA    1,1080(0,13)
0000566A E3F0 C110 0004          00005008   7977          LG    15,@lit_1965_289 ; rd_kafka_log0
00005670                                    7978 @@gen_label507 DS    0H
00005670 05EF                               7979          BALR  14,15
00005672                                    7980 @@gen_label508 DS    0H
00005672                                    7981 @L906    DS    0H
00005672 E54C 3188 FF65          00000188   7982          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00005678 E3C0 C120 001A          00005018   7983          ALGF  12,@lit_region_diff_1965_3_4
                                            7984          DROP  12
                        0000589A            7985          USING @REGION_1965_4,12
0000567E 47F0 C730               00005FCA   7986          B     @_err_parse@1965@1
                                            7987          DROP  12
                        00004EF8            7988          USING @REGION_1965_3,12
00005682                                    7989 @L902    DS    0H
00005682                                    7990 @L898    DS    0H
00005682 48F0 D0E0               000000E0   7991          LH    15,224(0,13) ; _v
00005686 50F0 D218               00000218   7992          ST    15,536(0,13)
0000568A E55C D218 FFFF          00000218   7993          CHSI  536(13),-1
00005690 4770 C7A4               0000569C   7994          BNE   @L917
00005694 A728 0000               00000000   7995          LHI   2,0         ; 0
00005698 47F0 C7A8               000056A0   7996          B     @L918
0000569C                                    7997 @L917    DS    0H
0000569C 5820 D218               00000218   7998          L     2,536(0,13)
000056A0                                    7999 @L918    DS    0H
000056A0                                    8000 @L891    DS    0H
000056A0 E55C D218 FFFF          00000218   8001          CHSI  536(13),-1
000056A6 4770 C7C6               000056BE   8002          BNE   @L919
000056AA A7F9 0000               00000000   8003          LGHI  15,0        ; 0
000056AE E3F0 D220 0024          00000220   8004          STG   15,544(0,13) ; offset of str in rd_kafkap_str_s
000056B4 E3C0 C120 001A          00005018   8005          ALGF  12,@lit_region_diff_1965_3_4
                                            8006          DROP  12
                        0000589A            8007          USING @REGION_1965_4,12
000056BA 47F0 C208               00005AA2   8008          B     @L920
                                            8009          DROP  12
                        00004EF8            8010          USING @REGION_1965_3,12
000056BE                                    8011 @L919    DS    0H
000056BE E55C D218 FFFF          00000218   8012          CHSI  536(13),-1
000056C4 4770 C7D8               000056D0   8013          BNE   @L921
000056C8 A7F8 0000               00000000   8014          LHI   15,0        ; 0
000056CC 47F0 C7DC               000056D4   8015          B     @L922
000056D0                                    8016 @L921    DS    0H
000056D0 58F0 D218               00000218   8017          L     15,536(0,13)
000056D4                                    8018 @L922    DS    0H
000056D4 12FF                               8019          LTR   15,15
000056D6 4770 C7FC               000056F4   8020          BNE   @L923
                                                                                                                           Page  162 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000056DA E3F0 C108 0004          00005000   8021          LG    15,@lit_1965_286
000056E0 41F0 F1C8               000001C8   8022          LA    15,456(0,15)
000056E4 E3F0 D220 0024          00000220   8023          STG   15,544(0,13) ; offset of str in rd_kafkap_str_s
000056EA E3C0 C120 001A          00005018   8024          ALGF  12,@lit_region_diff_1965_3_4
                                            8025          DROP  12
                        0000589A            8026          USING @REGION_1965_4,12
000056F0 47F0 C208               00005AA2   8027          B     @L920
                                            8028          DROP  12
                        00004EF8            8029          USING @REGION_1965_3,12
000056F4                                    8030 @L923    DS    0H
000056F4 41F0 3078               00000078   8031          LA    15,120(0,3)
000056F8 E3F0 D438 0024          00000438   8032          STG   15,1080(0,13)
000056FE B914 00F2                          8033          LGFR  15,2
00005702 E3F0 D440 0024          00000440   8034          STG   15,1088(0,13)
00005708 4110 D438               00000438   8035          LA    1,1080(0,13)
0000570C E3F0 C148 0004          00005040   8036          LG    15,@lit_1965_334 ; rd_slice_ensure_contig
00005712                                    8037 @@gen_label513 DS    0H
00005712 05EF                               8038          BALR  14,15
00005714                                    8039 @@gen_label514 DS    0H
00005714 E3F0 D220 0024          00000220   8040          STG   15,544(0,13)
0000571A B902 00FF                          8041          LTGR  15,15
0000571E 4780 C834               0000572C   8042          BZ    *+14  Around region break
00005722 E3C0 C120 001A          00005018   8043          ALGF  12,@lit_region_diff_1965_3_4
                                            8044          DROP  12
                        0000589A            8045          USING @REGION_1965_4,12
00005728 47F0 C208               00005AA2   8046          B     @L920
                                            8047          DROP  12
                        00004EF8            8048          USING @REGION_1965_3,12
0000572C                                    8049 @L926    DS    0H
0000572C B914 0022                          8050          LGFR  2,2
00005730 E390 3098 0004          00000098   8051          LG    9,152(0,3)  ; offset of end in rd_slice_s
00005736 41F0 3078               00000078   8052          LA    15,120(0,3)
0000573A E3F0 D438 0024          00000438   8053          STG   15,1080(0,13)
00005740 4110 D438               00000438   8054          LA    1,1080(0,13)
00005744 E3F0 C100 0004          00004FF8   8055          LG    15,@lit_1965_285 ; rd_slice_abs_offset
0000574A                                    8056 @@gen_label516 DS    0H
0000574A 05EF                               8057          BALR  14,15
0000574C                                    8058 @@gen_label517 DS    0H
0000574C B90B 009F                          8059          SLGR  9,15
00005750 B921 0029                          8060          CLGR  2,9
00005754 4720 C86A               00005762   8061          BH    *+14  Around region break
00005758 E3C0 C120 001A          00005018   8062          ALGF  12,@lit_region_diff_1965_3_4
                                            8063          DROP  12
                        0000589A            8064          USING @REGION_1965_4,12
0000575E 47F0 C208               00005AA2   8065          B     @L929
                                            8066          DROP  12
                        00004EF8            8067          USING @REGION_1965_3,12
00005762                                    8068 @L930    DS    0H
00005762 1277                               8069          LTR   7,7
00005764 4720 C87A               00005772   8070          BH    *+14  Around region break
00005768 E3C0 C120 001A          00005018   8071          ALGF  12,@lit_region_diff_1965_3_4
                                            8072          DROP  12
                                                                                                                           Page  163 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                        0000589A            8073          USING @REGION_1965_4,12
0000576E 47F0 C1FE               00005A98   8074          B     @L933
                                            8075          DROP  12
                        00004EF8            8076          USING @REGION_1965_3,12
00005772                                    8077 @L934    DS    0H
00005772 E3F0 3100 0002          00000100   8078          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005778 4770 C8C6               000057BE   8079          BNZ   @L937
0000577C E3F0 C108 0004          00005000   8080          LG    15,@lit_1965_286
00005782 4110 F09E               0000009E   8081          LA    1,158(0,15)
00005786 E310 D438 0024          00000438   8082          STG   1,1080(0,13)
0000578C E548 D440 015E          00000440   8083          MVGHI 1088(13),350
00005792 E310 C118 0004          00005010   8084          LG    1,@lit_1965_288
00005798 4110 11E6               000001E6   8085          LA    1,486(0,1)
0000579C E310 D448 0024          00000448   8086          STG   1,1096(0,13)
000057A2 D707 D450 D450 00000450 00000450   8087          XC    1104(8,13),1104(13)
000057A8 41F0 F0F0               000000F0   8088          LA    15,240(0,15)
000057AC E3F0 D458 0024          00000458   8089          STG   15,1112(0,13)
000057B2 4110 D438               00000438   8090          LA    1,1080(0,13)
000057B6 E3F0 C130 0004          00005028   8091          LG    15,@lit_1965_293 ; rd_kafka_crash
000057BC                                    8092 @@gen_label521 DS    0H
000057BC 05EF                               8093          BALR  14,15
000057BE                                    8094 @@gen_label522 DS    0H
000057BE                                    8095 @L937    DS    0H
000057BE 41F0 D228               00000228   8096          LA    15,552(0,13)
000057C2 E3F0 D438 0024          00000438   8097          STG   15,1080(0,13)
000057C8 E548 D440 0100          00000440   8098          MVGHI 1088(13),256
000057CE E3F0 C108 0004          00005000   8099          LG    15,@lit_1965_286
000057D4 41F0 F10A               0000010A   8100          LA    15,266(0,15)
000057D8 E3F0 D448 0024          00000448   8101          STG   15,1096(0,13)
000057DE 4110 D438               00000438   8102          LA    1,1080(0,13)
000057E2 E3F0 C138 0004          00005030   8103          LG    15,@lit_1965_295 ; snprintf
000057E8                                    8104 @@gen_label523 DS    0H
000057E8 05EF                               8105          BALR  14,15
000057EA                                    8106 @@gen_label524 DS    0H
000057EA 41F0 D228               00000228   8107          LA    15,552(0,13)
000057EE B904 001F                          8108          LGR   1,15
000057F2 A709 0000               00000000   8109          LGHI  0,0
000057F6                                    8110 @@gen_label525 DS 0H
000057F6 B25E 000F                          8111          SRST  0,15
000057FA 4710 C8FE               000057F6   8112          BC  1,@@gen_label525
000057FE B90B 0001                          8113          SLGR  0,1
00005802 A70F 0002               00000002   8114          CGHI  0,2
00005806 4770 C916               0000580E   8115          BNE   @L939
0000580A 9200 D228      00000228 00000000   8116          MVI   552(13),0
0000580E                                    8117 @L938    DS    0H
0000580E                                    8118 @L939    DS    0H
0000580E E3F0 3100 0004          00000100   8119          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005814 A799 1638               00001638   8120          LGHI  9,5688      ; 5688
00005818 41F9 F000               00000000   8121          LA    15,0(9,15)
0000581C E3F0 D438 0024          00000438   8122          STG   15,1080(0,13)
00005822 4110 D438               00000438   8123          LA    1,1080(0,13)
00005826 E3F0 C0D8 0004          00004FD0   8124          LG    15,@lit_1965_278 ; mtx_lock
                                                                                                                           Page  164 
  Active Usings: @REGION_1965_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000582C                                    8125 @@gen_label527 DS    0H
0000582C 05EF                               8126          BALR  14,15
0000582E                                    8127 @@gen_label528 DS    0H
0000582E 41F0 D328               00000328   8128          LA    15,808(0,13)
00005832 E3F0 D438 0024          00000438   8129          STG   15,1080(0,13)
00005838 E3F0 3100 0004          00000100   8130          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000583E A719 1630               00001630   8131          LGHI  1,5680      ; 5680
00005842 E3F1 F000 0004          00000000   8132          LG    15,0(1,15)
00005848 E3F0 D440 0024          00000440   8133          STG   15,1088(0,13)
0000584E E548 D448 0100          00000448   8134          MVGHI 1096(13),256
00005854 4110 D438               00000438   8135          LA    1,1080(0,13)
00005858 E3F0 C0E0 0004          00004FD8   8136          LG    15,@lit_1965_280 ; rd_strlcpy
0000585E                                    8137 @@gen_label529 DS    0H
0000585E 05EF                               8138          BALR  14,15
00005860                                    8139 @@gen_label530 DS    0H
00005860 E3F0 3100 0004          00000100   8140          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005866 41F9 F000               00000000   8141          LA    15,0(9,15)
0000586A E3F0 D438 0024          00000438   8142          STG   15,1080(0,13)
00005870 4110 D438               00000438   8143          LA    1,1080(0,13)
00005874 E3F0 C0E8 0004          00004FE0   8144          LG    15,@lit_1965_282 ; mtx_unlock
0000587A                                    8145 @@gen_label531 DS    0H
0000587A 05EF                               8146          BALR  14,15
0000587C                                    8147 @@gen_label532 DS    0H
0000587C E3F0 30B8 0015          000000B8   8148          LGH   15,184(0,3)
00005882 E3F0 D438 0024          00000438   8149          STG   15,1080(0,13)
00005888 4110 D438               00000438   8150          LA    1,1080(0,13)
0000588C E3F0 C0F0 0004          00004FE8   8151          LG    15,@lit_1965_283 ; rd_kafka_ApiKey2str
00005892                                    8152 @@gen_label533 DS    0H
00005892 05EF                               8153          BALR  14,15
00005894                                    8154 @@gen_label534 DS    0H
00005894 E3C0 C120 001A          00005018   8155          ALGF  12,@lit_region_diff_1965_3_4
0000589A                                    8156 @REGION_1965_4 DS 0H
                                            8157          DROP  12
                        0000589A            8158          USING @REGION_1965_4,12
0000589A B904 009F                          8159          LGR   9,15
0000589E 41F0 3078               00000078   8160          LA    15,120(0,3)
000058A2 E3F0 D438 0024          00000438   8161          STG   15,1080(0,13)
000058A8 4110 D438               00000438   8162          LA    1,1080(0,13)
000058AC E3F0 C056 0004          000058F0   8163          LG    15,@lit_1965_348 ; rd_slice_offset
000058B2                                    8164 @@gen_label535 DS    0H
000058B2 05EF                               8165          BALR  14,15
000058B4                                    8166 @@gen_label536 DS    0H
000058B4 B904 00AF                          8167          LGR   10,15
000058B8 E3B0 3098 0004          00000098   8168          LG    11,152(0,3) ; offset of end in rd_slice_s
000058BE 41F0 3078               00000078   8169          LA    15,120(0,3)
000058C2 E3F0 D438 0024          00000438   8170          STG   15,1080(0,13)
000058C8 4110 D438               00000438   8171          LA    1,1080(0,13)
000058CC E3F0 C05E 0004          000058F8   8172          LG    15,@lit_1965_349 ; rd_slice_abs_offset
000058D2                                    8173 @@gen_label537 DS    0H
000058D2 05EF                               8174          BALR  14,15
000058D4                                    8175 @@gen_label538 DS    0H
000058D4 B90B 00BF                          8176          SLGR  11,15
                                                                                                                           Page  165 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000058D8 E3F0 31E8 0002          000001E8   8177          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000058DE 4780 C12E               000059C8   8178          BZ    @L942
000058E2 E3F0 31E8 0004          000001E8   8179          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000058E8 47F0 C138               000059D2   8180          B     @L943
000058F0                                    8181          DS    0D
000058F0 0000000000000E50                   8182 @lit_1965_348 DC AD(rd_slice_offset)
000058F8 0000000000000DA8                   8183 @lit_1965_349 DC AD(rd_slice_abs_offset)
00005900 0000000000006A88                   8184 @lit_1965_350 DC AD(@strings@)
00005908 0000000000000000                   8185 @lit_1965_353 DC AD(rd_kafka_log0)
00005910 0000000000006860                   8186 @lit_1965_352 DC AD(@DATA)
00005918 0000000000000000                   8187 @lit_1965_354 DC AD(calloc)
00005920 D200 A000 9000 00000000 00000000   8188 @lit_1965_355          MVC 0(1,10),0(9)
00005926 0000
00005928 0000000000000060                   8189 @lit_1965_356 DC AD(utf8_2_ebcdic)
00005930 0000000000000000                   8190 @lit_1965_357 DC AD(free)
00005938 0000000000000000                   8191 @lit_1965_359 DC AD(rd_slice_read)
00005940 0000000000000000                   8192 @lit_1965_363 DC AD(rd_kafka_crash)
00005948 0000000000000000                   8193 @lit_1965_365 DC AD(snprintf)
00005950 0000000000000000                   8194 @lit_1965_367 DC AD(mtx_lock)
00005958 00000000000010A0                   8195 @lit_1965_369 DC AD(rd_strlcpy)
00005960 0000000000000000                   8196 @lit_1965_371 DC AD(mtx_unlock)
00005968 0000000000000F08                   8197 @lit_1965_372 DC AD(rd_kafka_$Api$Key2str)
00005970 0000000000000000                   8198 @lit_1965_380 DC AD(@@ALLOCA)
00005978 D200 7000 2000 00000000 00000000   8199 @lit_1965_381          MVC 0(1,7),0(2)
0000597E 0000
00005980 0000000000000000                   8200 @lit_1965_383 DC AD(rd_kafka_broker_update)
00005988 0000000000003000                   8201 @lit_1965_387 DC AD(rd_kafka_coord_cache_add)
00005990 00000000000009E8                   8202 @lit_1965_388 DC AD(rd_refcnt_sub0)
00005998 0000000000000000                   8203 @lit_1965_389 DC AD(rd_kafka_broker_destroy_final)
000059A0 0000000000006158                   8204 @lit_1965_390 DC AD(rd_kafka_coord_req_fsm)
000059A8 0000000000003800                   8205 @lit_1965_391 DC AD(rd_kafka_coord_req_destroy)
000059B0 0000000000000000                   8206 @lit_1965_392 DC AD(rd_kafka_err_action)
000059B8 0000000000003AB0                   8207 @lit_1965_393 DC AD(rd_kafka_coord_req_fail)
000059C0 0000000000000000                   8208 @lit_1965_394 DC AD(rd_kafka_buf_retry)
000059C8                                    8209 @L942    DS    0H
000059C8 E3F0 C066 0004          00005900   8210          LG    15,@lit_1965_350
000059CE 41F0 F10E               0000010E   8211          LA    15,270(0,15)
000059D2                                    8212 @L943    DS    0H
000059D2 E310 3100 0004          00000100   8213          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000059D8 E310 1FD0 0004          00000FD0   8214          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000059DE 4110 1210               00000210   8215          LA    1,528(0,1)
000059E2 E310 D438 0024          00000438   8216          STG   1,1080(0,13)
000059E8 E310 3100 0004          00000100   8217          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000059EE E310 1FD0 0004          00000FD0   8218          LG    1,4048(0,1)
000059F4 E310 D440 0024          00000440   8219          STG   1,1088(0,13)
000059FA 4110 D328               00000328   8220          LA    1,808(0,13)
000059FE E310 D448 0024          00000448   8221          STG   1,1096(0,13)
00005A04 B914 0017                          8222          LGFR  1,7
00005A08 E310 D450 0024          00000450   8223          STG   1,1104(0,13)
00005A0E D707 D458 D458 00000458 00000458   8224          XC    1112(8,13),1112(13)
                                                                                                                           Page  166 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005A14 E310 C066 0004          00005900   8225          LG    1,@lit_1965_350
00005A1A 4170 1132               00000132   8226          LA    7,306(0,1)
00005A1E E370 D460 0024          00000460   8227          STG   7,1120(0,13)
00005A24 4110 113E               0000013E   8228          LA    1,318(0,1)
00005A28 E310 D468 0024          00000468   8229          STG   1,1128(0,13)
00005A2E E390 D470 0024          00000470   8230          STG   9,1136(0,13)
00005A34 4810 30BA               000000BA   8231          LH    1,186(0,3)
00005A38 B914 0011                          8232          LGFR  1,1
00005A3C E310 D478 0024          00000478   8233          STG   1,1144(0,13)
00005A42 E3A0 D480 0024          00000480   8234          STG   10,1152(0,13)
00005A48 E310 3098 0004          00000098   8235          LG    1,152(0,3)  ; offset of end in rd_slice_s
00005A4E E310 3090 000B          00000090   8236          SLG   1,144(0,3)
00005A54 E310 D488 0024          00000488   8237          STG   1,1160(0,13)
00005A5A E310 C076 0004          00005910   8238          LG    1,@lit_1965_352
00005A60 4110 11E6               000001E6   8239          LA    1,486(0,1)
00005A64 E310 D490 0024          00000490   8240          STG   1,1168(0,13)
00005A6A E548 D498 015E          00000498   8241          MVGHI 1176(13),350
00005A70 E320 D4A0 0024          000004A0   8242          STG   2,1184(0,13)
00005A76 E3B0 D4A8 0024          000004A8   8243          STG   11,1192(0,13)
00005A7C E3F0 D4B0 0024          000004B0   8244          STG   15,1200(0,13)
00005A82 41F0 D228               00000228   8245          LA    15,552(0,13)
00005A86 E3F0 D4B8 0024          000004B8   8246          STG   15,1208(0,13)
00005A8C 4110 D438               00000438   8247          LA    1,1080(0,13)
00005A90 E3F0 C06E 0004          00005908   8248          LG    15,@lit_1965_353 ; rd_kafka_log0
00005A96                                    8249 @@gen_label540 DS    0H
00005A96 05EF                               8250          BALR  14,15
00005A98                                    8251 @@gen_label541 DS    0H
00005A98                                    8252 @L933    DS    0H
00005A98 E54C 3188 FF65          00000188   8253          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00005A9E 47F0 C730               00005FCA   8254          B     @_err_parse@1965@1
00005AA2                                    8255 @L929    DS    0H
00005AA2                                    8256 @L925    DS    0H
00005AA2                                    8257 @L924    DS    0H
00005AA2                                    8258 @L920    DS    0H
00005AA2 E55C D218 0000          00000218   8259          CHSI  536(13),0
00005AA8 47D0 C2CC               00005B66   8260          BNH   @L944
00005AAC E548 D438 0001          00000438   8261          MVGHI 1080(13),1
00005AB2 E3F0 D218 0014          00000218   8262          LGF   15,536(0,13)
00005AB8 E3F0 D440 0024          00000440   8263          STG   15,1088(0,13)
00005ABE 4110 D438               00000438   8264          LA    1,1080(0,13)
00005AC2 E3F0 C07E 0004          00005918   8265          LG    15,@lit_1965_354 ; calloc
00005AC8                                    8266 @@gen_label543 DS    0H
00005AC8 05EF                               8267          BALR  14,15
00005ACA                                    8268 @@gen_label544 DS    0H
00005ACA B904 002F                          8269          LGR   2,15
00005ACE E310 D218 0014          00000218   8270          LGF   1,536(0,13)
00005AD4 E390 D220 0004          00000220   8271          LG    9,544(0,13)
00005ADA B904 00A2                          8272          LGR   10,2
00005ADE B902 00F1                          8273          LTGR  15,1
00005AE2 4780 C276               00005B10   8274          BZ    @@gen_label547
00005AE6 A7FB FFFF               0000FFFF   8275          AGHI  15,-1
00005AEA EB1F 0008 000A          00000008   8276          SRAG  1,15,8(0)
                                                                                                                           Page  167 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005AF0 B902 0011                          8277          LTGR  1,1
00005AF4 4780 C272               00005B0C   8278          BZ    @@gen_label546
00005AF8                                    8279 @@gen_label545 DS 0H
00005AF8 D2FF A000 9000 00000000 00000000   8280          MVC   0(256,10),0(9)
00005AFE 41A0 A100               00000100   8281          LA    10,256(0,10)
00005B02 4190 9100               00000100   8282          LA    9,256(0,9)
00005B06 E310 C25E 0046          00005AF8   8283          BCTG  1,@@gen_label545
00005B0C                                    8284 @@gen_label546 DS 0H
00005B0C 44F0 C086               00005920   8285          EX    15,@lit_1965_355
00005B10                                    8286 @@gen_label547 DS 0H
00005B10 E3F0 D218 0014          00000218   8287          LGF   15,536(0,13)
00005B16 E3F0 D230 0024          00000230   8288          STG   15,560(0,13) ; ulen
00005B1C E3F0 D228 0024          00000228   8289          STG   15,552(0,13) ; alen
00005B22 E3F0 D220 0004          00000220   8290          LG    15,544(0,13)
00005B28 E3F0 D438 0024          00000438   8291          STG   15,1080(0,13)
00005B2E 41F0 D228               00000228   8292          LA    15,552(0,13)
00005B32 E3F0 D440 0024          00000440   8293          STG   15,1088(0,13)
00005B38 E320 D448 0024          00000448   8294          STG   2,1096(0,13)
00005B3E 41F0 D230               00000230   8295          LA    15,560(0,13)
00005B42 E3F0 D450 0024          00000450   8296          STG   15,1104(0,13)
00005B48 4110 D438               00000438   8297          LA    1,1080(0,13)
00005B4C E3F0 C08E 0004          00005928   8298          LG    15,@lit_1965_356 ; utf8_2_ebcdic
00005B52                                    8299 @@gen_label548 DS    0H
00005B52 05EF                               8300          BALR  14,15
00005B54                                    8301 @@gen_label549 DS    0H
00005B54 E320 D438 0024          00000438   8302          STG   2,1080(0,13)
00005B5A 4110 D438               00000438   8303          LA    1,1080(0,13)
00005B5E E3F0 C096 0004          00005930   8304          LG    15,@lit_1965_357 ; free
00005B64                                    8305 @@gen_label550 DS    0H
00005B64 05EF                               8306          BALR  14,15
00005B66                                    8307 @@gen_label551 DS    0H
00005B66                                    8308 @L944    DS    0H
                                            8309 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                            8310 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                            8311 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                            8312 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                            8313 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                            8314 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_coord.c",351, __F\
                                            8315 * UNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0\
                                            8316 * ); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); i\
                                            8317 * f (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[2\
                                            8318 * 56]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_lo\
                                            8319 * gname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(\
                                            8320 * &(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf\
                                            8321 * _rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_de\
                                            8322 * code_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "f\
                                            8323 * or %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " \
                                            8324 * bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rk\
                                            8325 * buf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice\
                                            8326 * _offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbu\
                                            8327 * f->rkbuf_reader)->start), __FUNCTION__, 351, __len0, ((&rkbuf->rkbuf\
                                            8328 * _reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->r\
                                                                                                                           Page  168 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            8329 * kbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect b\
                                            8330 * roker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_e\
                                            8331 * rr = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } \
                                            8332 * while (0); } while (0); *(&Port) = (_v); } while (0);
00005B66                                    8333 @L945    DS    0H
00005B66                                    8334 @L948    DS    0H
00005B66 A729 0004               00000004   8335          LGHI  2,4         ; 4
00005B6A 41F0 3078               00000078   8336          LA    15,120(0,3)
00005B6E E3F0 D438 0024          00000438   8337          STG   15,1080(0,13)
00005B74 41F0 D0E4               000000E4   8338          LA    15,228(0,13)
00005B78 E3F0 D440 0024          00000440   8339          STG   15,1088(0,13)
00005B7E E320 D448 0024          00000448   8340          STG   2,1096(0,13)
00005B84 4110 D438               00000438   8341          LA    1,1080(0,13)
00005B88 E3F0 C09E 0004          00005938   8342          LG    15,@lit_1965_359 ; rd_slice_read
00005B8E                                    8343 @@gen_label552 DS    0H
00005B8E 05EF                               8344          BALR  14,15
00005B90                                    8345 @@gen_label553 DS    0H
00005B90 B902 00FF                          8346          LTGR  15,15
00005B94 4770 C57A               00005E14   8347          BNZ   @L951
00005B98                                    8348 @L952    DS    0H
00005B98 E390 3098 0004          00000098   8349          LG    9,152(0,3)  ; offset of end in rd_slice_s
00005B9E 41F0 3078               00000078   8350          LA    15,120(0,3)
00005BA2 E3F0 D438 0024          00000438   8351          STG   15,1080(0,13)
00005BA8 4110 D438               00000438   8352          LA    1,1080(0,13)
00005BAC E3F0 C05E 0004          000058F8   8353          LG    15,@lit_1965_349 ; rd_slice_abs_offset
00005BB2                                    8354 @@gen_label555 DS    0H
00005BB2 05EF                               8355          BALR  14,15
00005BB4                                    8356 @@gen_label556 DS    0H
00005BB4 B90B 009F                          8357          SLGR  9,15
00005BB8 B921 0029                          8358          CLGR  2,9
00005BBC 47D0 C57A               00005E14   8359          BNH   @L955
00005BC0                                    8360 @L956    DS    0H
00005BC0 1277                               8361          LTR   7,7
00005BC2 47D0 C570               00005E0A   8362          BNH   @L959
00005BC6                                    8363 @L960    DS    0H
00005BC6 E3F0 3100 0002          00000100   8364          LTG   15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005BCC 4770 C378               00005C12   8365          BNZ   @L963
00005BD0 E3F0 C066 0004          00005900   8366          LG    15,@lit_1965_350
00005BD6 4110 F09E               0000009E   8367          LA    1,158(0,15)
00005BDA E310 D438 0024          00000438   8368          STG   1,1080(0,13)
00005BE0 E548 D440 015F          00000440   8369          MVGHI 1088(13),351
00005BE6 E310 C076 0004          00005910   8370          LG    1,@lit_1965_352
00005BEC 4110 11E6               000001E6   8371          LA    1,486(0,1)
00005BF0 E310 D448 0024          00000448   8372          STG   1,1096(0,13)
00005BF6 D707 D450 D450 00000450 00000450   8373          XC    1104(8,13),1104(13)
00005BFC 41F0 F0F0               000000F0   8374          LA    15,240(0,15)
00005C00 E3F0 D458 0024          00000458   8375          STG   15,1112(0,13)
00005C06 4110 D438               00000438   8376          LA    1,1080(0,13)
00005C0A E3F0 C0A6 0004          00005940   8377          LG    15,@lit_1965_363 ; rd_kafka_crash
00005C10                                    8378 @@gen_label560 DS    0H
00005C10 05EF                               8379          BALR  14,15
00005C12                                    8380 @@gen_label561 DS    0H
                                                                                                                           Page  169 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005C12                                    8381 @L963    DS    0H
00005C12 41F0 D228               00000228   8382          LA    15,552(0,13)
00005C16 E3F0 D438 0024          00000438   8383          STG   15,1080(0,13)
00005C1C E548 D440 0100          00000440   8384          MVGHI 1088(13),256
00005C22 E3F0 C066 0004          00005900   8385          LG    15,@lit_1965_350
00005C28 41F0 F10A               0000010A   8386          LA    15,266(0,15)
00005C2C E3F0 D448 0024          00000448   8387          STG   15,1096(0,13)
00005C32 4110 D438               00000438   8388          LA    1,1080(0,13)
00005C36 E3F0 C0AE 0004          00005948   8389          LG    15,@lit_1965_365 ; snprintf
00005C3C                                    8390 @@gen_label562 DS    0H
00005C3C 05EF                               8391          BALR  14,15
00005C3E                                    8392 @@gen_label563 DS    0H
00005C3E 41F0 D228               00000228   8393          LA    15,552(0,13)
00005C42 B904 001F                          8394          LGR   1,15
00005C46 A709 0000               00000000   8395          LGHI  0,0
00005C4A                                    8396 @@gen_label564 DS 0H
00005C4A B25E 000F                          8397          SRST  0,15
00005C4E 4710 C3B0               00005C4A   8398          BC  1,@@gen_label564
00005C52 B90B 0001                          8399          SLGR  0,1
00005C56 A70F 0002               00000002   8400          CGHI  0,2
00005C5A 4770 C3C8               00005C62   8401          BNE   @L965
00005C5E 9200 D228      00000228 00000000   8402          MVI   552(13),0
00005C62                                    8403 @L964    DS    0H
00005C62                                    8404 @L965    DS    0H
00005C62 E3F0 3100 0004          00000100   8405          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005C68 A799 1638               00001638   8406          LGHI  9,5688      ; 5688
00005C6C 41F9 F000               00000000   8407          LA    15,0(9,15)
00005C70 E3F0 D438 0024          00000438   8408          STG   15,1080(0,13)
00005C76 4110 D438               00000438   8409          LA    1,1080(0,13)
00005C7A E3F0 C0B6 0004          00005950   8410          LG    15,@lit_1965_367 ; mtx_lock
00005C80                                    8411 @@gen_label566 DS    0H
00005C80 05EF                               8412          BALR  14,15
00005C82                                    8413 @@gen_label567 DS    0H
00005C82 41F0 D328               00000328   8414          LA    15,808(0,13)
00005C86 E3F0 D438 0024          00000438   8415          STG   15,1080(0,13)
00005C8C E3F0 3100 0004          00000100   8416          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005C92 A719 1630               00001630   8417          LGHI  1,5680      ; 5680
00005C96 E3F1 F000 0004          00000000   8418          LG    15,0(1,15)
00005C9C E3F0 D440 0024          00000440   8419          STG   15,1088(0,13)
00005CA2 E548 D448 0100          00000448   8420          MVGHI 1096(13),256
00005CA8 4110 D438               00000438   8421          LA    1,1080(0,13)
00005CAC E3F0 C0BE 0004          00005958   8422          LG    15,@lit_1965_369 ; rd_strlcpy
00005CB2                                    8423 @@gen_label568 DS    0H
00005CB2 05EF                               8424          BALR  14,15
00005CB4                                    8425 @@gen_label569 DS    0H
00005CB4 E3F0 3100 0004          00000100   8426          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005CBA 41F9 F000               00000000   8427          LA    15,0(9,15)
00005CBE E3F0 D438 0024          00000438   8428          STG   15,1080(0,13)
00005CC4 4110 D438               00000438   8429          LA    1,1080(0,13)
00005CC8 E3F0 C0C6 0004          00005960   8430          LG    15,@lit_1965_371 ; mtx_unlock
00005CCE                                    8431 @@gen_label570 DS    0H
00005CCE 05EF                               8432          BALR  14,15
                                                                                                                           Page  170 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005CD0                                    8433 @@gen_label571 DS    0H
00005CD0 E3F0 30B8 0015          000000B8   8434          LGH   15,184(0,3)
00005CD6 E3F0 D438 0024          00000438   8435          STG   15,1080(0,13)
00005CDC 4110 D438               00000438   8436          LA    1,1080(0,13)
00005CE0 E3F0 C0CE 0004          00005968   8437          LG    15,@lit_1965_372 ; rd_kafka_ApiKey2str
00005CE6                                    8438 @@gen_label572 DS    0H
00005CE6 05EF                               8439          BALR  14,15
00005CE8                                    8440 @@gen_label573 DS    0H
00005CE8 B904 009F                          8441          LGR   9,15
00005CEC 41F0 3078               00000078   8442          LA    15,120(0,3)
00005CF0 E3F0 D438 0024          00000438   8443          STG   15,1080(0,13)
00005CF6 4110 D438               00000438   8444          LA    1,1080(0,13)
00005CFA E3F0 C056 0004          000058F0   8445          LG    15,@lit_1965_348 ; rd_slice_offset
00005D00                                    8446 @@gen_label574 DS    0H
00005D00 05EF                               8447          BALR  14,15
00005D02                                    8448 @@gen_label575 DS    0H
00005D02 B904 00AF                          8449          LGR   10,15
00005D06 E3B0 3098 0004          00000098   8450          LG    11,152(0,3) ; offset of end in rd_slice_s
00005D0C 41F0 3078               00000078   8451          LA    15,120(0,3)
00005D10 E3F0 D438 0024          00000438   8452          STG   15,1080(0,13)
00005D16 4110 D438               00000438   8453          LA    1,1080(0,13)
00005D1A E3F0 C05E 0004          000058F8   8454          LG    15,@lit_1965_349 ; rd_slice_abs_offset
00005D20                                    8455 @@gen_label576 DS    0H
00005D20 05EF                               8456          BALR  14,15
00005D22                                    8457 @@gen_label577 DS    0H
00005D22 B90B 00BF                          8458          SLGR  11,15
00005D26 E3F0 31E8 0002          000001E8   8459          LTG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00005D2C 4780 C4A0               00005D3A   8460          BZ    @L968
00005D30 E3F0 31E8 0004          000001E8   8461          LG    15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00005D36 47F0 C4AA               00005D44   8462          B     @L969
00005D3A                                    8463 @L968    DS    0H
00005D3A E3F0 C066 0004          00005900   8464          LG    15,@lit_1965_350
00005D40 41F0 F10E               0000010E   8465          LA    15,270(0,15)
00005D44                                    8466 @L969    DS    0H
00005D44 E310 3100 0004          00000100   8467          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00005D4A E310 1FD0 0004          00000FD0   8468          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00005D50 4110 1210               00000210   8469          LA    1,528(0,1)
00005D54 E310 D438 0024          00000438   8470          STG   1,1080(0,13)
00005D5A E310 3100 0004          00000100   8471          LG    1,256(0,3)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00005D60 E310 1FD0 0004          00000FD0   8472          LG    1,4048(0,1)
00005D66 E310 D440 0024          00000440   8473          STG   1,1088(0,13)
00005D6C 4110 D328               00000328   8474          LA    1,808(0,13)
00005D70 E310 D448 0024          00000448   8475          STG   1,1096(0,13)
00005D76 B914 0017                          8476          LGFR  1,7
00005D7A E310 D450 0024          00000450   8477          STG   1,1104(0,13)
00005D80 D707 D458 D458 00000458 00000458   8478          XC    1112(8,13),1112(13)
00005D86 E310 C066 0004          00005900   8479          LG    1,@lit_1965_350
00005D8C 4170 1132               00000132   8480          LA    7,306(0,1)
00005D90 E370 D460 0024          00000460   8481          STG   7,1120(0,13)
00005D96 4110 113E               0000013E   8482          LA    1,318(0,1)
                                                                                                                           Page  171 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005D9A E310 D468 0024          00000468   8483          STG   1,1128(0,13)
00005DA0 E390 D470 0024          00000470   8484          STG   9,1136(0,13)
00005DA6 4810 30BA               000000BA   8485          LH    1,186(0,3)
00005DAA B914 0011                          8486          LGFR  1,1
00005DAE E310 D478 0024          00000478   8487          STG   1,1144(0,13)
00005DB4 E3A0 D480 0024          00000480   8488          STG   10,1152(0,13)
00005DBA E310 3098 0004          00000098   8489          LG    1,152(0,3)  ; offset of end in rd_slice_s
00005DC0 E310 3090 000B          00000090   8490          SLG   1,144(0,3)
00005DC6 E310 D488 0024          00000488   8491          STG   1,1160(0,13)
00005DCC E310 C076 0004          00005910   8492          LG    1,@lit_1965_352
00005DD2 4110 11E6               000001E6   8493          LA    1,486(0,1)
00005DD6 E310 D490 0024          00000490   8494          STG   1,1168(0,13)
00005DDC E548 D498 015F          00000498   8495          MVGHI 1176(13),351
00005DE2 E320 D4A0 0024          000004A0   8496          STG   2,1184(0,13)
00005DE8 E3B0 D4A8 0024          000004A8   8497          STG   11,1192(0,13)
00005DEE E3F0 D4B0 0024          000004B0   8498          STG   15,1200(0,13)
00005DF4 41F0 D228               00000228   8499          LA    15,552(0,13)
00005DF8 E3F0 D4B8 0024          000004B8   8500          STG   15,1208(0,13)
00005DFE 4110 D438               00000438   8501          LA    1,1080(0,13)
00005E02 E3F0 C06E 0004          00005908   8502          LG    15,@lit_1965_353 ; rd_kafka_log0
00005E08                                    8503 @@gen_label579 DS    0H
00005E08 05EF                               8504          BALR  14,15
00005E0A                                    8505 @@gen_label580 DS    0H
00005E0A                                    8506 @L959    DS    0H
00005E0A E54C 3188 FF65          00000188   8507          MVHI  392(3),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00005E10 47F0 C730               00005FCA   8508          B     @_err_parse@1965@1
00005E14                                    8509 @L955    DS    0H
00005E14                                    8510 @L951    DS    0H
00005E14 58F0 D0E4               000000E4   8511          L     15,228(0,13) ; _v
00005E18 50F0 D20C               0000020C   8512          ST    15,524(0,13)
                                            8513 * ***
                                            8514 * ***           mdb.id = NodeId;
00005E1C 58F0 D210               00000210   8515          L     15,528(0,13) ; NodeId
00005E20 50F0 D0E8               000000E8   8516          ST    15,232(0,13)
                                            8517 * ***           do { const char *_src = ((&Host)->str); size_t _srclen\
                                            8518 *  = ((((&Host)->len) == -1 ? 0 : ((&Host)->len))); char *_dst = __bui\
                                            8519 * ltin_alloca(_srclen + 1); __memcpy(_dst,_src,_srclen); _dst[_srclen]\
                                            8520 *  = '\0'; *((&mdb.host)) = _dst; } while (0);
00005E24                                    8521 @L970    DS    0H
00005E24 E320 D220 0004          00000220   8522          LG    2,544(0,13) ; offset of str in rd_kafkap_str_s
00005E2A E55C D218 FFFF          00000218   8523          CHSI  536(13),-1
00005E30 4770 C5A2               00005E3C   8524          BNE   @L973
00005E34 A7F8 0000               00000000   8525          LHI   15,0        ; 0
00005E38 47F0 C5A6               00005E40   8526          B     @L974
00005E3C                                    8527 @L973    DS    0H
00005E3C 58F0 D218               00000218   8528          L     15,536(0,13)
00005E40                                    8529 @L974    DS    0H
00005E40 B914 003F                          8530          LGFR  3,15
00005E44 B904 00F3                          8531          LGR   15,3
00005E48 A7FB 0001               00000001   8532          AGHI  15,1
00005E4C E3F0 D438 0024          00000438   8533          STG   15,1080(0,13)
00005E52 4110 D438               00000438   8534          LA    1,1080(0,13)
                                                                                                                           Page  172 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005E56 E3F0 C0D6 0004          00005970   8535          LG    15,@lit_1965_380 ; @@ALLOCA
00005E5C                                    8536 @@gen_label582 DS    0H
00005E5C 05EF                               8537          BALR  14,15
00005E5E                                    8538 @@gen_label583 DS    0H
00005E5E B904 007F                          8539          LGR   7,15
00005E62 B902 0013                          8540          LTGR  1,3
00005E66 4780 C5FA               00005E94   8541          BZ    @@gen_label586
00005E6A A71B FFFF               0000FFFF   8542          AGHI  1,-1
00005E6E EB91 0008 000A          00000008   8543          SRAG  9,1,8(0)
00005E74 B902 0099                          8544          LTGR  9,9
00005E78 4780 C5F6               00005E90   8545          BZ    @@gen_label585
00005E7C                                    8546 @@gen_label584 DS 0H
00005E7C D2FF 7000 2000 00000000 00000000   8547          MVC   0(256,7),0(2)
00005E82 4170 7100               00000100   8548          LA    7,256(0,7)
00005E86 4120 2100               00000100   8549          LA    2,256(0,2)
00005E8A E390 C5E2 0046          00005E7C   8550          BCTG  9,@@gen_label584
00005E90                                    8551 @@gen_label585 DS 0H
00005E90 4410 C0DE               00005978   8552          EX    1,@lit_1965_381
00005E94                                    8553 @@gen_label586 DS 0H
00005E94 4113 F000               00000000   8554          LA    1,0(3,15)
00005E98 9200 1000      00000000 00000000   8555          MVI   0(1),0
00005E9C E3F0 D0F0 0024          000000F0   8556          STG   15,240(0,13) ; offset of host in rd_kafka_metadata_broke*
                                                                r
                                            8557 * ***           mdb.port = Port;
00005EA2 58F0 D20C               0000020C   8558          L     15,524(0,13) ; Port
00005EA6 50F0 D0F8               000000F8   8559          ST    15,248(0,13) ; offset of port in rd_kafka_metadata_broke*
                                                                r
                                            8560 * ***
                                            8561 * ***
                                            8562 * ***           rd_kafka_broker_update(rk, rkb->rkb_proto, &mdb, &coor\
                                            8563 * d);
00005EAA E340 D438 0024          00000438   8564          STG   4,1080(0,13)
00005EB0 A7F9 16E8               000016E8   8565          LGHI  15,5864     ; 5864
00005EB4 E3FF 5000 0014          00000000   8566          LGF   15,0(15,5)
00005EBA E3F0 D440 0024          00000440   8567          STG   15,1088(0,13)
00005EC0 41F0 D0E8               000000E8   8568          LA    15,232(0,13)
00005EC4 E3F0 D448 0024          00000448   8569          STG   15,1096(0,13)
00005ECA 41F0 D100               00000100   8570          LA    15,256(0,13)
00005ECE E3F0 D450 0024          00000450   8571          STG   15,1104(0,13)
00005ED4 4110 D438               00000438   8572          LA    1,1080(0,13)
00005ED8 E3F0 C0E6 0004          00005980   8573          LG    15,@lit_1965_383 ; rd_kafka_broker_update
00005EDE                                    8574 @@gen_label587 DS    0H
00005EDE 05EF                               8575          BALR  14,15
00005EE0                                    8576 @@gen_label588 DS    0H
                                            8577 * ***
                                            8578 * ***           if (!coord) {
00005EE0 E3F0 D100 0004          00000100   8579          LG    15,256(0,13) ; coord
00005EE6 B902 001F                          8580          LTGR  1,15
00005EEA 4770 C688               00005F22   8581          BNZ   @L975
                                            8582 * ***                   err = RD_KAFKA_RESP_ERR__FAIL;
00005EEE A728 FF3C               0000FF3C   8583          LHI   2,-196      ; -196
                                            8584 * ***                   snprintf(errstr, sizeof(errstr), "Failed to ad\
                                                                                                                           Page  173 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            8585 * d broker: " "instance is probably terminating");
00005EF2 41F0 D10A               0000010A   8586          LA    15,266(0,13)
00005EF6 E3F0 D438 0024          00000438   8587          STG   15,1080(0,13)
00005EFC E548 D440 0100          00000440   8588          MVGHI 1088(13),256
00005F02 E3F0 C066 0004          00005900   8589          LG    15,@lit_1965_350
00005F08 41F0 F1D0               000001D0   8590          LA    15,464(0,15)
00005F0C E3F0 D448 0024          00000448   8591          STG   15,1096(0,13)
00005F12 4110 D438               00000438   8592          LA    1,1080(0,13)
00005F16 E3F0 C0AE 0004          00005948   8593          LG    15,@lit_1965_365 ; snprintf
00005F1C                                    8594 @@gen_label590 DS    0H
00005F1C 05EF                               8595          BALR  14,15
00005F1E                                    8596 @@gen_label591 DS    0H
                                            8597 * ***
                                            8598 * ***
                                            8599 * ***                   goto err;
00005F1E 47F0 C734               00005FCE   8600          B     @_err@1965@0
                                            8601 * ***           }
00005F22                                    8602 @L975    DS    0H
                                            8603 * ***
                                            8604 * ***
                                            8605 * ***           rd_kafka_coord_cache_add(&rk->rk_coord_cache,
                                            8606 * ***                                    creq->creq_coordtype,
                                            8607 * ***                                    creq->creq_coordkey,
                                            8608 * ***                                    coord);
00005F22 4110 4F68               00000F68   8609          LA    1,3944(0,4)
00005F26 E310 D438 0024          00000438   8610          STG   1,1080(0,13)
00005F2C E310 8010 0014          00000010   8611          LGF   1,16(0,8)
00005F32 E310 D440 0024          00000440   8612          STG   1,1088(0,13)
00005F38 E310 8018 0004          00000018   8613          LG    1,24(0,8)
00005F3E E310 D448 0024          00000448   8614          STG   1,1096(0,13)
00005F44 E3F0 D450 0024          00000450   8615          STG   15,1104(0,13)
00005F4A 4110 D438               00000438   8616          LA    1,1080(0,13)
00005F4E E3F0 C0EE 0004          00005988   8617          LG    15,@lit_1965_387 ; rd_kafka_coord_cache_add
00005F54                                    8618 @@gen_label592 DS    0H
00005F54 05EF                               8619          BALR  14,15
00005F56                                    8620 @@gen_label593 DS    0H
                                            8621 * ***           do { if (rd_refcnt_sub0(&(coord)->rkb_refcnt) > 0) bre\
                                            8622 * ak; rd_kafka_broker_destroy_final(coord); } while (0);
00005F56                                    8623 @L976    DS    0H
00005F56 E3F0 D100 0004          00000100   8624          LG    15,256(0,13) ; coord
00005F5C 41F0 FFA0               00000FA0   8625          LA    15,4000(0,15)
00005F60 E3F0 D438 0024          00000438   8626          STG   15,1080(0,13)
00005F66 4110 D438               00000438   8627          LA    1,1080(0,13)
00005F6A E3F0 C0F6 0004          00005990   8628          LG    15,@lit_1965_388 ; rd_refcnt_sub0
00005F70                                    8629 @@gen_label594 DS    0H
00005F70 05EF                               8630          BALR  14,15
00005F72                                    8631 @@gen_label595 DS    0H
00005F72 12FF                               8632          LTR   15,15
00005F74 4720 C6F6               00005F90   8633          BH    @L977
00005F78                                    8634 @L979    DS    0H
00005F78 E3F0 D100 0004          00000100   8635          LG    15,256(0,13) ; coord
00005F7E E3F0 D438 0024          00000438   8636          STG   15,1080(0,13)
                                                                                                                           Page  174 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005F84 4110 D438               00000438   8637          LA    1,1080(0,13)
00005F88 E3F0 C0FE 0004          00005998   8638          LG    15,@lit_1965_389 ; rd_kafka_broker_destroy_final
00005F8E                                    8639 @@gen_label597 DS    0H
00005F8E 05EF                               8640          BALR  14,15
00005F90                                    8641 @@gen_label598 DS    0H
00005F90                                    8642 @L977    DS    0H
                                            8643 * ***
                                            8644 * ***           rd_kafka_coord_req_fsm(rk, creq);
00005F90 E340 D438 0024          00000438   8645          STG   4,1080(0,13)
00005F96 E380 D440 0024          00000440   8646          STG   8,1088(0,13)
00005F9C 4110 D438               00000438   8647          LA    1,1080(0,13)
00005FA0 E3F0 C106 0004          000059A0   8648          LG    15,@lit_1965_390 ; rd_kafka_coord_req_fsm
00005FA6                                    8649 @@gen_label599 DS    0H
00005FA6 05EF                               8650          BALR  14,15
00005FA8                                    8651 @@gen_label600 DS    0H
                                            8652 * ***
                                            8653 * ***
                                            8654 * ***           rd_kafka_coord_req_destroy(rk, creq, 0);
00005FA8 E340 D438 0024          00000438   8655          STG   4,1080(0,13)
00005FAE E380 D440 0024          00000440   8656          STG   8,1088(0,13)
00005FB4 D707 D448 D448 00000448 00000448   8657          XC    1096(8,13),1096(13)
00005FBA 4110 D438               00000438   8658          LA    1,1080(0,13)
00005FBE E3F0 C10E 0004          000059A8   8659          LG    15,@lit_1965_391 ; rd_kafka_coord_req_destroy
00005FC4                                    8660 @@gen_label601 DS    0H
00005FC4 05EF                               8661          BALR  14,15
00005FC6                                    8662 @@gen_label602 DS    0H
                                            8663 * ***
                                            8664 * ***           return;
00005FC6 47F0 C80E               000060A8   8665          B     @ret_lab_1965
                                            8666 * ***
                                            8667 * ***    err_parse:
                                            8668 * ***           err = rkbuf->rkbuf_err;
00005FCA                                    8669 @_err_parse@1965@1 DS 0H
00005FCA 5820 3188               00000188   8670          L     2,392(0,3)  ; offset of rkbuf_err in rd_kafka_buf_s
                                            8671 * ***    err:
                                            8672 * ***           actions = rd_kafka_err_action(
00005FCE                                    8673 @_err@1965@0 DS 0H
                                            8674 * ***                   rkb, err, request,
                                            8675 * ***
                                            8676 * ***                   0x20,
                                            8677 * ***                   RD_KAFKA_RESP_ERR__DESTROY,
                                            8678 * ***
                                            8679 * ***                   0x1,
                                            8680 * ***                   RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATI\
                                            8681 * ON_FAILED,
                                            8682 * ***
                                            8683 * ***                   0x1,
                                            8684 * ***                   RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED\
                                            8685 * ,
                                            8686 * ***
                                            8687 * ***                   0x4,
                                            8688 * ***                   RD_KAFKA_RESP_ERR__TRANSPORT,
                                                                                                                           Page  175 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            8689 * ***
                                            8690 * ***                   0x8,
                                            8691 * ***                   RD_KAFKA_RESP_ERR_COORDINATOR_NOT_AVAILABLE,
                                            8692 * ***
                                            8693 * ***                   0x8,
                                            8694 * ***                   RD_KAFKA_RESP_ERR_COORDINATOR_LOAD_IN_PROGRESS\
                                            8695 * ,
                                            8696 * ***
                                            8697 * ***                   0);
00005FCE E350 D438 0024          00000438   8698          STG   5,1080(0,13)
00005FD4 B914 00F2                          8699          LGFR  15,2
00005FD8 E3F0 D440 0024          00000440   8700          STG   15,1088(0,13)
00005FDE E360 D448 0024          00000448   8701          STG   6,1096(0,13)
00005FE4 E548 D450 0020          00000450   8702          MVGHI 1104(13),32
00005FEA E548 D458 FF3B          00000458   8703          MVGHI 1112(13),-197
00005FF0 E548 D460 0001          00000460   8704          MVGHI 1120(13),1
00005FF6 E548 D468 0035          00000468   8705          MVGHI 1128(13),53
00005FFC E548 D470 0001          00000470   8706          MVGHI 1136(13),1
00006002 E548 D478 001F          00000478   8707          MVGHI 1144(13),31
00006008 E548 D480 0004          00000480   8708          MVGHI 1152(13),4
0000600E E548 D488 FF3D          00000488   8709          MVGHI 1160(13),-195
00006014 E548 D490 0008          00000490   8710          MVGHI 1168(13),8
0000601A E548 D498 000F          00000498   8711          MVGHI 1176(13),15
00006020 E548 D4A0 0008          000004A0   8712          MVGHI 1184(13),8
00006026 E548 D4A8 000E          000004A8   8713          MVGHI 1192(13),14
0000602C D707 D4B0 D4B0 000004B0 000004B0   8714          XC    1200(8,13),1200(13)
00006032 4110 D438               00000438   8715          LA    1,1080(0,13)
00006036 E3F0 C116 0004          000059B0   8716          LG    15,@lit_1965_392 ; rd_kafka_err_action
0000603C                                    8717 @@gen_label603 DS    0H
0000603C 05EF                               8718          BALR  14,15
0000603E                                    8719 @@gen_label604 DS    0H
                                            8720 * ***
                                            8721 * ***           if (actions & 0x1) {
0000603E A7F1 0001               00000001   8722          TML   15,1
00006042 4780 C7D2               0000606C   8723          BZ    @L980
                                            8724 * ***                   rd_kafka_coord_req_fail(rk, creq, err);
00006046 E340 D438 0024          00000438   8725          STG   4,1080(0,13)
0000604C E380 D440 0024          00000440   8726          STG   8,1088(0,13)
00006052 B914 00F2                          8727          LGFR  15,2
00006056 E3F0 D448 0024          00000448   8728          STG   15,1096(0,13)
0000605C 4110 D438               00000438   8729          LA    1,1080(0,13)
00006060 E3F0 C11E 0004          000059B8   8730          LG    15,@lit_1965_393 ; rd_kafka_coord_req_fail
00006066                                    8731 @@gen_label606 DS    0H
00006066 05EF                               8732          BALR  14,15
00006068                                    8733 @@gen_label607 DS    0H
                                            8734 * ***                   return;
00006068 47F0 C80E               000060A8   8735          B     @ret_lab_1965
                                            8736 * ***
                                            8737 * ***           } else if (actions & 0x8) {
0000606C                                    8738 @L980    DS    0H
0000606C A7F1 0008               00000008   8739          TML   15,8
00006070 4780 C7F0               0000608A   8740          BZ    @L981
                                                                                                                           Page  176 
  Active Usings: @REGION_1965_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            8741 * ***                   rd_kafka_buf_retry(rkb, request);
00006074 EB56 D438 0024          00000438   8742          STMG  5,6,1080(13)
0000607A 4110 D438               00000438   8743          LA    1,1080(0,13)
0000607E E3F0 C126 0004          000059C0   8744          LG    15,@lit_1965_394 ; rd_kafka_buf_retry
00006084                                    8745 @@gen_label609 DS    0H
00006084 05EF                               8746          BALR  14,15
00006086                                    8747 @@gen_label610 DS    0H
                                            8748 * ***                   return;
00006086 47F0 C80E               000060A8   8749          B     @ret_lab_1965
                                            8750 * ***           }
                                            8751 * ***
                                            8752 * ***
                                            8753 * ***
                                            8754 * ***
                                            8755 * ***           rd_kafka_coord_req_destroy(rk, creq, 0);
0000608A                                    8756 @L981    DS    0H
0000608A E340 D438 0024          00000438   8757          STG   4,1080(0,13)
00006090 E380 D440 0024          00000440   8758          STG   8,1088(0,13)
00006096 D707 D448 D448 00000448 00000448   8759          XC    1096(8,13),1096(13)
0000609C 4110 D438               00000438   8760          LA    1,1080(0,13)
000060A0 E3F0 C10E 0004          000059A8   8761          LG    15,@lit_1965_391 ; rd_kafka_coord_req_destroy
000060A6                                    8762 @@gen_label611 DS    0H
000060A6 05EF                               8763          BALR  14,15
000060A8                                    8764 @@gen_label612 DS    0H
                                            8765 * ***   }
000060A8                                    8766 @ret_lab_1965 DS 0H
                                            8767 * * **** Start of Epilogue
                                            8768          DCCEPIL
000060A8                                    8769+         ds 0h                                                          01-DCCEP
                                            8770+* Epilog
000060A8 D707 D088 D088 00000088 00000088   8771+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000060AE E3D0 D080 0004          00000080   8772+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000060B4 E3C0 D090 0004          00000090   8773+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000060BA E3B0 C018 0004          00000018   8774+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000060C0 E3C0 B010 0021          00000010   8775+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000060C6 E3E0 D008 0004          00000008   8776+         lg  14,8(0,13)          load up return address                 01-DCCEP
000060CC EB1C D020 0004          00000020   8777+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000060D2 078E                               8778+         bcr 8,14                if same dsab, just return              01-DCCEP
000060D4 E3F0 D010 0024          00000010   8779+         stg 15,16(0,13)         save return code                       01-DCCEP
000060DA E300 D018 0024          00000018   8780+         stg 0,24(0,13)          save more return code                  01-DCCEP
000060E0 E3F0 D090 0004          00000090   8781+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000060E6 E3F0 F018 0004          00000018   8782+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000060EC 47F0 F040               00000040   8783+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8784+* End of Epilog
                                            8785 * * **** End of Epilogue
                                            8786          DROP  12
                                            8787 *
                                            8788 *   DSECT for automatic variables in "rd_kafka_coord_req_handle_FindCo
                                            8789 *           ordinator"
                                            8790 *      (FUNCTION #1965)
                                            8791 *
00000000                00000000 00000438   8792 @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator DSECT
                                                                                                                           Page  177 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000000                                    8793          DS    XL168
000000A8                                    8794 rd_kafka_coord_req_handle_$Find$Coordinator#_srclen#81 DS 8XL1 ; _srcle*
                                                                n
000000B0                000000B0 000000A8   8795          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8796 rd_kafka_coord_req_handle_$Find$Coordinator#__len0#75 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   8797          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8798 rd_kafka_coord_req_handle_$Find$Coordinator#__len2#74 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   8799          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8800 rd_kafka_coord_req_handle_$Find$Coordinator#__len0#66 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   8801          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8802 rd_kafka_coord_req_handle_$Find$Coordinator#__len0#60 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   8803          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8804 rd_kafka_coord_req_handle_$Find$Coordinator#__len2#59 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   8805          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8806 rd_kafka_coord_req_handle_$Find$Coordinator#_r#52 DS 8XL1 ; _r
000000B0                000000B0 000000A8   8807          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8808 rd_kafka_coord_req_handle_$Find$Coordinator#_klen#50 DS 1F ; _klen
000000AC                000000AC 000000A8   8809          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8810 rd_kafka_coord_req_handle_$Find$Coordinator#__len0#44 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   8811          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8812 rd_kafka_coord_req_handle_$Find$Coordinator#__len2#43 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   8813          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8814 rd_kafka_coord_req_handle_$Find$Coordinator#__len0#35 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   8815          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8816 rd_kafka_coord_req_handle_$Find$Coordinator#__len0#29 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   8817          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8818 rd_kafka_coord_req_handle_$Find$Coordinator#__len2#28 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   8819          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8820 rd_kafka_coord_req_handle_$Find$Coordinator#_r#21 DS 8XL1 ; _r
000000B0                000000B0 000000A8   8821          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8822 rd_kafka_coord_req_handle_$Find$Coordinator#_klen#19 DS 1F ; _klen
000000AC                000000AC 000000A8   8823          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8824 rd_kafka_coord_req_handle_$Find$Coordinator#__len0#12 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   8825          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8826 rd_kafka_coord_req_handle_$Find$Coordinator#__len2#11 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   8827          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8828 rd_kafka_coord_req_handle_$Find$Coordinator#__len0#4 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   8829          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8830 rd_kafka_coord_req_handle_$Find$Coordinator#__len2#3 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   8831          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8832 rd_kafka_coord_req_handle_$Find$Coordinator#_throttle_time_ms#1 DS 1F ;*
                                                                 _throttle_time_ms
000000AC                000000AC 000000A8   8833          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8834 rd_kafka_coord_req_handle_$Find$Coordinator#actions#0 DS 1F ; actions
000000AC                000000AC 000000A8   8835          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+168
000000A8                                    8836 rd_kafka_coord_req_handle_$Find$Coordinator#log_decode_errors#0 DS 1F ;*
                                                                 log_decode_errors
000000AC                000000AC 000000AC   8837          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+172
000000AC                                    8838 rd_kafka_coord_req_handle_$Find$Coordinator#_v#2 DS 1F ; _v
000000B0                000000B0 000000B0   8839          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+176
000000B0                                    8840 rd_kafka_coord_req_handle_$Find$Coordinator#_v#10 DS 2XL1 ; _v
000000B2                000000B2 000000B8   8841          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+184
                                                                                                                           Page  178 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000000B8                                    8842 rd_kafka_coord_req_handle_$Find$Coordinator#_uva#20 DS 8XL1 ; _uva
000000C0                000000C0 000000C0   8843          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+192
000000C0                                    8844 rd_kafka_coord_req_handle_$Find$Coordinator#_v#21 DS 8XL1 ; _v
000000C8                000000C8 000000C8   8845          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+200
000000C8                                    8846 rd_kafka_coord_req_handle_$Find$Coordinator#_v#27 DS 2XL1 ; _v
000000CA                000000CA 000000CC   8847          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+204
000000CC                                    8848 rd_kafka_coord_req_handle_$Find$Coordinator#_v#42 DS 1F ; _v
000000D0                000000D0 000000D0   8849          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+208
000000D0                                    8850 rd_kafka_coord_req_handle_$Find$Coordinator#_uva#51 DS 8XL1 ; _uva
000000D8                000000D8 000000D8   8851          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+216
000000D8                                    8852 rd_kafka_coord_req_handle_$Find$Coordinator#_v#52 DS 8XL1 ; _v
000000E0                000000E0 000000E0   8853          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+224
000000E0                                    8854 rd_kafka_coord_req_handle_$Find$Coordinator#_v#58 DS 2XL1 ; _v
000000E2                000000E2 000000E4   8855          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+228
000000E4                                    8856 rd_kafka_coord_req_handle_$Find$Coordinator#_v#73 DS 1F ; _v
000000E8                000000E8 000000E8   8857          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+232
000000E8                                    8858 rd_kafka_coord_req_handle_$Find$Coordinator#mdb#0 DS 24XL1 ; mdb
00000100                00000100 00000108   8859          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+264
00000108                                    8860 rd_kafka_coord_req_handle_$Find$Coordinator#$Error$Code#0 DS 2XL1 ; Err*
                                                                orCode
0000010A                0000010A 0000010A   8861          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+266
0000010A                                    8862 rd_kafka_coord_req_handle_$Find$Coordinator#errstr#0 DS 256XL1 ; errstr
0000020A                0000020A 0000020C   8863          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+524
0000020C                                    8864 rd_kafka_coord_req_handle_$Find$Coordinator#$Port#0 DS 1F ; Port
00000210                00000210 00000210   8865          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+528
00000210                                    8866 rd_kafka_coord_req_handle_$Find$Coordinator#$Node$Id#0 DS 1F ; NodeId
00000214                00000214 00000218   8867          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+536
00000218                                    8868 rd_kafka_coord_req_handle_$Find$Coordinator#$Host#0 DS 16XL1 ; Host
00000228                00000228 00000228   8869          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+552
00000228                                    8870 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#79 DS 256XL1 ; __t*
                                                                mpstr
00000328                00000328 00000228   8871          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+552
00000228                                    8872 rd_kafka_coord_req_handle_$Find$Coordinator#alen#72 DS 8XL1 ; alen
00000230                00000230 00000228   8873          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+552
00000228                                    8874 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#70 DS 256XL1 ; __t*
                                                                mpstr
00000328                00000328 00000228   8875          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+552
00000228                                    8876 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#64 DS 256XL1 ; __t*
                                                                mpstr
00000328                00000328 00000228   8877          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+552
00000228                                    8878 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#55 DS 256XL1 ; __t*
                                                                mpstr
00000328                00000328 00000228   8879          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+552
00000228                                    8880 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#48 DS 256XL1 ; __t*
                                                                mpstr
00000328                00000328 00000228   8881          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+552
00000228                                    8882 rd_kafka_coord_req_handle_$Find$Coordinator#$Error$Msg#18 DS 16XL1 ; Er*
                                                                rorMsg
00000238                00000238 00000228   8883          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+552
00000228                                    8884 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#16 DS 256XL1 ; __t*
                                                                mpstr
00000328                00000328 00000228   8885          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+552
                                                                                                                           Page  179 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000228                                    8886 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#8 DS 256XL1 ; __tm*
                                                                pstr
00000328                00000328 00000230   8887          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+560
00000230                                    8888 rd_kafka_coord_req_handle_$Find$Coordinator#ulen#72 DS 8XL1 ; ulen
00000238                00000238 00000238   8889          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+568
00000238                                    8890 rd_kafka_coord_req_handle_$Find$Coordinator#alen#41 DS 8XL1 ; alen
00000240                00000240 00000238   8891          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+568
00000238                                    8892 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#39 DS 256XL1 ; __t*
                                                                mpstr
00000338                00000338 00000238   8893          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+568
00000238                                    8894 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#33 DS 256XL1 ; __t*
                                                                mpstr
00000338                00000338 00000238   8895          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+568
00000238                                    8896 rd_kafka_coord_req_handle_$Find$Coordinator#__tmpstr#24 DS 256XL1 ; __t*
                                                                mpstr
00000338                00000338 00000240   8897          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+576
00000240                                    8898 rd_kafka_coord_req_handle_$Find$Coordinator#ulen#41 DS 8XL1 ; ulen
00000248                00000248 00000328   8899          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+808
00000328                                    8900 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#80 DS 256XL1 ; _lo*
                                                                gname
00000428                00000428 00000328   8901          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+808
00000328                                    8902 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#71 DS 256XL1 ; _lo*
                                                                gname
00000428                00000428 00000328   8903          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+808
00000328                                    8904 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#65 DS 256XL1 ; _lo*
                                                                gname
00000428                00000428 00000328   8905          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+808
00000328                                    8906 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#56 DS 256XL1 ; _lo*
                                                                gname
00000428                00000428 00000328   8907          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+808
00000328                                    8908 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#49 DS 256XL1 ; _lo*
                                                                gname
00000428                00000428 00000328   8909          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+808
00000328                                    8910 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#17 DS 256XL1 ; _lo*
                                                                gname
00000428                00000428 00000328   8911          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+808
00000328                                    8912 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#9 DS 256XL1 ; _log*
                                                                name
00000428                00000428 00000338   8913          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+824
00000338                                    8914 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#40 DS 256XL1 ; _lo*
                                                                gname
00000438                00000438 00000338   8915          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+824
00000338                                    8916 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#34 DS 256XL1 ; _lo*
                                                                gname
00000438                00000438 00000338   8917          ORG   @AUTO#rd_kafka_coord_req_handle_$Find$Coordinator+824
00000338                                    8918 rd_kafka_coord_req_handle_$Find$Coordinator#_logname#25 DS 256XL1 ; _lo*
                                                                gname
                                            8919 *
000060F0                00000000 0000685E   8920 @CODE    CSECT
                                            8921 *
                                            8922 *
                                            8923 *
                                                                                                                           Page  180 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            8924 * ....... start of rd_kafka_coord_req_fsm
000060F0                                    8925 @LNAME1961 DS  0H
000060F0 00000016                           8926          DC    X'00000016'
000060F4 99846D9281869281                   8927          DC    C'rd_kafka_coord_req_fsm'
0000610A 00                                 8928          DC    X'00'
                                            8929 rd_kafka_coord_req_fsm DCCPRLG CINDEX=1961,BASER=12,FRAME=240,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1961
                                            8930          macro
                                            8931          dccextrn &m
                                            8932          gblc    &$dccext(1000)
                                            8933          gbla    &$dccexti
                                            8934          lcla    &i
                                            8935 &$dccext(&$dccexti+1) setc    '&m'
                                            8936 &i       seta    1
                                            8937 .loop    aif    (&i gt &$dccexti).around
                                            8938          aif    ('&$dccext(&i)' eq '&m').getout
                                            8939 &i       seta    &i+1
                                            8940          ago     .loop
                                            8941 .around  anop
                                            8942 &$dccexti seta &$dccexti+1
                                            8943          extrn  &m
                                            8944 .getout  anop
                                            8945          mend
00006110                                    8946+$eye0133    ds    0d                                                    02-DCCCA
00006110 C4C3C3                             8947+         dc cl3'DCC'                                                    02-DCCCA
00006113 01                                 8948+         dc xl1'01' format one                                          02-DCCCA
00006114 00000000                           8949+         dc a(0)                                                        02-DCCCA
00006118 0000000000006182                   8950+         dc ad(@PER_1961)                                               02-DCCCA
00006120 00000000000000F0                   8951+         dc ad(240)                                                     02-DCCCA
00006128 0000000000000000                   8952+         dc ad(0)                                                       02-DCCCA
00006130 0000000000001000                   8953+         dc ad(4096)                                                    02-DCCCA
00006138 20                                 8954+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006139 03                                 8955+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000613A 03                                 8956+         dc al1(3)                                                      02-DCCCA
0000613B 08                                 8957+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000613C 00                                 8958+         dc bl.8'00000000'                                              02-DCCCA
0000613D 000000                             8959+         dc al3(0)                                                      02-DCCCA
00006140 00000000000060F0                   8960+         dc ad(@LNAME1961)                                              02-DCCCA
00006148                                    8961+         ds 0d                                                          02-DCCCA
00006148 0000000000006110                   8962+         dc ad($eye0133)                                                02-DCCCA
00006150 0000000000000000                   8963+         dc ad(0)                                                       02-DCCCA
00006158                                    8964+         ds    0d                                                       01-DCCPR
00006158                                    8965+rd_kafka_coord_req_fsm ds 0d                                            01-DCCPR
00006158                                    8966+@REGION_1961_1 ds 0h                                                    01-DCCPR
00006158 EBEC D008 0024          00000008   8967+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000615E E3E0 D088 0004          00000088   8968+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006164 E3C0 D090 0004          00000090   8969+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000616A B904 002E                          8970+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000616E E3B0 C018 0004          00000018   8971+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006174 A7EB 00F0               000000F0   8972+         aghi  14,240              increase by frame size               01-DCCPR
00006178 E3E0 C020 0021          00000020   8973+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000617E 4720 B020               00000020   8974+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page  181 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006182                                    8975+@PER_1961 ds   0h                                                       01-DCCPR
00006182 EBDE 2080 0024          00000080   8976+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006188 E3C0 2090 0024          00000090   8977+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000618E B904 00D2                          8978+         lgr   13,2                set real frame pointer               01-DCCPR
00006192 B904 00CF                          8979+         lgr   12,15               set base reg                         01-DCCPR
                        00006158            8980+         using @REGION_1961_1,12                                        01-DCCPR
                                            8981 * ******* End of Prologue
                                            8982 * *
00006196 EB45 1000 0004          00000000   8983          LMG   4,5,0(1)    ; rk
                                            8984 * ***           rd_kafka_broker_t *rkb;
                                            8985 * ***           rd_kafka_resp_err_t err;
                                            8986 * ***
                                            8987 * ***           if (creq->creq_done)
0000619C 9500 505C      0000005C 00000000   8988          CLI   92(5),0
000061A0 4770 C39A               000064F2   8989          BNE   @ret_lab_1961
                                            8990 * ***
                                            8991 * ***
                                            8992 * ***
                                            8993 * ***                   return;
000061A4                                    8994 @L983    DS    0H
                                            8995 * ***
                                            8996 * ***           if ((((rd_atomic32_get(&(rk)->rk_terminate) & 0x1)))) \
                                            8997 * {
000061A4 41F0 4970               00000970   8998          LA    15,2416(0,4)
000061A8 E3F0 D0B8 0024          000000B8   8999          STG   15,184(0,13)
000061AE 4110 D0B8               000000B8   9000          LA    1,184(0,13)
000061B2 E3F0 C090 0004          000061E8   9001          LG    15,@lit_1961_425 ; rd_atomic32_get
000061B8                                    9002 @@gen_label614 DS    0H
000061B8 05EF                               9003          BALR  14,15
000061BA                                    9004 @@gen_label615 DS    0H
000061BA A7F1 0001               00000001   9005          TML   15,1
000061BE 4780 C118               00006270   9006          BZ    @L984
                                            9007 * ***                   rd_kafka_coord_req_fail(rk, creq, RD_KAFKA_RES\
                                            9008 * P_ERR__DESTROY);
000061C2 EB45 D0B8 0024          000000B8   9009          STMG  4,5,184(13)
000061C8 E548 D0C8 FF3B          000000C8   9010          MVGHI 200(13),-197
000061CE 4110 D0B8               000000B8   9011          LA    1,184(0,13)
000061D2 E3F0 C098 0004          000061F0   9012          LG    15,@lit_1961_426 ; rd_kafka_coord_req_fail
000061D8                                    9013 @@gen_label617 DS    0H
000061D8 05EF                               9014          BALR  14,15
000061DA                                    9015 @@gen_label618 DS    0H
                                            9016 * ***                   return;
000061DA 47F0 C39A               000064F2   9017          B     @ret_lab_1961
000061E0                                    9018          DS    0D
000061E0 000000F0                           9019 @FRAMESIZE_1961 DC F'240'
000061E4 00000000
000061E8 00000000000004D0                   9020 @lit_1961_425 DC AD(rd_atomic32_get)
000061F0 0000000000003AB0                   9021 @lit_1961_426 DC AD(rd_kafka_coord_req_fail)
000061F8 0000000000002E88                   9022 @lit_1961_427 DC AD(rd_kafka_coord_cache_get)
00006200 0000000000002790                   9023 @lit_1961_428 DC AD(rd_kafka_broker_is_up)
00006208 0000000000002258                   9024 @lit_1961_429 DC AD(rd_kafka_replyq_copy)
00006210 0000000000002398                   9025 @lit_1961_430 DC AD(rd_kafka_replyq_destroy)
                                                                                                                           Page  182 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006218 0000000000003800                   9026 @lit_1961_432 DC AD(rd_kafka_coord_req_destroy)
00006220 0000000000000000                   9027 @lit_1961_433 DC AD(rd_kafka_broker_schedule_connection)
00006228 00000000000009E8                   9028 @lit_1961_434 DC AD(rd_refcnt_sub0)
00006230 0000000000000000                   9029 @lit_1961_435 DC AD(rd_kafka_broker_destroy_final)
00006238 0000000000000000                   9030 @lit_1961_437 DC AD(rd_kafka_broker_any_usable)
00006240 0000000000006A88                   9031 @lit_1961_436 DC AD(@strings@)
00006248 0000000000003A20                   9032 @lit_1961_438 DC AD(rd_kafka_coord_req_keep)
00006250 0000000000002088                   9033 @lit_1961_440 DC AD(rd_kafka_replyq_make)
00006258 0000000000006860                   9034 @lit_1961_439 DC AD(@DATA)
00006260 0000000000000000                   9035 @lit_1961_442 DC AD(rd_kafka_$Find$Coordinator$Request)
00006268 0000000000003C80                   9036 @lit_1961_441 DC AD(rd_kafka_coord_req_handle_$Find$Coordinator)
                                            9037 * ***           }
00006270                                    9038 @L984    DS    0H
                                            9039 * ***
                                            9040 * ***
                                            9041 * ***           rkb = rd_kafka_coord_cache_get(&rk->rk_coord_cache,
                                            9042 * ***                                          creq->creq_coordtype,
                                            9043 * ***                                          creq->creq_coordkey);
00006270 41F0 4F68               00000F68   9044          LA    15,3944(0,4)
00006274 E3F0 D0B8 0024          000000B8   9045          STG   15,184(0,13)
0000627A E3F0 5010 0014          00000010   9046          LGF   15,16(0,5)
00006280 E3F0 D0C0 0024          000000C0   9047          STG   15,192(0,13)
00006286 E3F0 5018 0004          00000018   9048          LG    15,24(0,5)
0000628C E3F0 D0C8 0024          000000C8   9049          STG   15,200(0,13)
00006292 4110 D0B8               000000B8   9050          LA    1,184(0,13)
00006296 E3F0 C0A0 0004          000061F8   9051          LG    15,@lit_1961_427 ; rd_kafka_coord_cache_get
0000629C                                    9052 @@gen_label619 DS    0H
0000629C 05EF                               9053          BALR  14,15
0000629E                                    9054 @@gen_label620 DS    0H
0000629E B902 002F                          9055          LTGR  2,15        ; rkb
                                            9056 * ***
                                            9057 * ***           if (rkb) {
000062A2 4780 C264               000063BC   9058          BZ    @L985
                                            9059 * ***                   if (rd_kafka_broker_is_up(rkb)) {
000062A6 E320 D0B8 0024          000000B8   9060          STG   2,184(0,13)
000062AC 4110 D0B8               000000B8   9061          LA    1,184(0,13)
000062B0 E3F0 C0A8 0004          00006200   9062          LG    15,@lit_1961_428 ; rd_kafka_broker_is_up
000062B6                                    9063 @@gen_label622 DS    0H
000062B6 05EF                               9064          BALR  14,15
000062B8                                    9065 @@gen_label623 DS    0H
000062B8 C0FB 0000 00FF                     9066          NILF  15,X'000000FF'
000062BE 12FF                               9067          LTR   15,15
000062C0 4780 C220               00006378   9068          BZ    @L986
                                            9069 * ***
                                            9070 * ***                           rd_kafka_replyq_t replyq;
                                            9071 * ***
                                            9072 * ***                           rd_kafka_replyq_copy(&replyq, &creq->c\
                                            9073 * req_replyq);
000062C4 41F0 D0A8               000000A8   9074          LA    15,168(0,13)
000062C8 E3F0 D0B8 0024          000000B8   9075          STG   15,184(0,13)
000062CE 41F0 5038               00000038   9076          LA    15,56(0,5)
000062D2 E3F0 D0C0 0024          000000C0   9077          STG   15,192(0,13)
                                                                                                                           Page  183 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000062D8 4110 D0B8               000000B8   9078          LA    1,184(0,13)
000062DC E3F0 C0B0 0004          00006208   9079          LG    15,@lit_1961_429 ; rd_kafka_replyq_copy
000062E2                                    9080 @@gen_label625 DS    0H
000062E2 05EF                               9081          BALR  14,15
000062E4                                    9082 @@gen_label626 DS    0H
                                            9083 * ***                           err = creq->creq_send_req_cb(rkb, creq\
                                            9084 * ->creq_rko,
                                            9085 * ***                                                        replyq, c\
                                            9086 * req->creq_resp_cb,
                                            9087 * ***                                                        creq->cre\
                                            9088 * q_reply_opaque);
000062E4 E320 D0B8 0024          000000B8   9089          STG   2,184(0,13)
000062EA E3F0 5020 0004          00000020   9090          LG    15,32(0,5)
000062F0 E3F0 D0C0 0024          000000C0   9091          STG   15,192(0,13)
000062F6 D20F D0C8 D0A8 000000C8 000000A8   9092          MVC   200(16,13),168(13)
000062FC E3F0 5048 0004          00000048   9093          LG    15,72(0,5)
00006302 E3F0 D0D8 0024          000000D8   9094          STG   15,216(0,13)
00006308 E3F0 5050 0004          00000050   9095          LG    15,80(0,5)
0000630E E3F0 D0E0 0024          000000E0   9096          STG   15,224(0,13)
00006314 E3F0 5030 0004          00000030   9097          LG    15,48(0,5)  ; offset of creq_send_req_cb in rd_kafka_coo*
                                                                rd_req_s
0000631A 4110 D0B8               000000B8   9098          LA    1,184(0,13)
0000631E                                    9099 @@gen_label627 DS    0H
0000631E 05EF                               9100          BALR  14,15
00006320                                    9101 @@gen_label628 DS    0H
00006320 123F                               9102          LTR   3,15        ; err
                                            9103 * ***
                                            9104 * ***                           if (err) {
00006322 4780 C204               0000635C   9105          BZ    @L987
                                            9106 * ***
                                            9107 * ***
                                            9108 * ***                                   rd_kafka_replyq_destroy(&reply\
                                            9109 * q);
00006326 41F0 D0A8               000000A8   9110          LA    15,168(0,13)
0000632A E3F0 D0B8 0024          000000B8   9111          STG   15,184(0,13)
00006330 4110 D0B8               000000B8   9112          LA    1,184(0,13)
00006334 E3F0 C0B8 0004          00006210   9113          LG    15,@lit_1961_430 ; rd_kafka_replyq_destroy
0000633A                                    9114 @@gen_label630 DS    0H
0000633A 05EF                               9115          BALR  14,15
0000633C                                    9116 @@gen_label631 DS    0H
                                            9117 * ***                                   rd_kafka_coord_req_fail(rk, cr\
                                            9118 * eq, err);
0000633C EB45 D0B8 0024          000000B8   9119          STMG  4,5,184(13)
00006342 B914 00F3                          9120          LGFR  15,3
00006346 E3F0 D0C8 0024          000000C8   9121          STG   15,200(0,13)
0000634C 4110 D0B8               000000B8   9122          LA    1,184(0,13)
00006350 E3F0 C098 0004          000061F0   9123          LG    15,@lit_1961_426 ; rd_kafka_coord_req_fail
00006356                                    9124 @@gen_label632 DS    0H
00006356 05EF                               9125          BALR  14,15
00006358                                    9126 @@gen_label633 DS    0H
                                            9127 * ***                           } else {
00006358 47F0 C232               0000638A   9128          B     @L990
                                                                                                                           Page  184 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000635C                                    9129 @L987    DS    0H
                                            9130 * ***                                   rd_kafka_coord_req_destroy(rk,\
                                            9131 *  creq,
                                            9132 * ***                                                              1);
0000635C EB45 D0B8 0024          000000B8   9133          STMG  4,5,184(13)
00006362 E548 D0C8 0001          000000C8   9134          MVGHI 200(13),1
00006368 4110 D0B8               000000B8   9135          LA    1,184(0,13)
0000636C E3F0 C0C0 0004          00006218   9136          LG    15,@lit_1961_432 ; rd_kafka_coord_req_destroy
00006372                                    9137 @@gen_label634 DS    0H
00006372 05EF                               9138          BALR  14,15
00006374                                    9139 @@gen_label635 DS    0H
                                            9140 * ***                           }
00006374                                    9141 @L988    DS    0H
                                            9142 * ***
                                            9143 * ***                   } else {
00006374 47F0 C232               0000638A   9144          B     @L990
00006378                                    9145 @L986    DS    0H
                                            9146 * ***
                                            9147 * ***
                                            9148 * ***                           rd_kafka_broker_schedule_connection(rk\
                                            9149 * b);
00006378 E320 D0B8 0024          000000B8   9150          STG   2,184(0,13)
0000637E 4110 D0B8               000000B8   9151          LA    1,184(0,13)
00006382 E3F0 C0C8 0004          00006220   9152          LG    15,@lit_1961_433 ; rd_kafka_broker_schedule_connection
00006388                                    9153 @@gen_label636 DS    0H
00006388 05EF                               9154          BALR  14,15
0000638A                                    9155 @@gen_label637 DS    0H
                                            9156 * ***                   }
0000638A                                    9157 @L989    DS    0H
                                            9158 * ***
                                            9159 * ***                   do { if (rd_refcnt_sub0(&(rkb)->rkb_refcnt) > \
                                            9160 * 0) break; rd_kafka_broker_destroy_final(rkb); } while (0);
0000638A                                    9161 @L990    DS    0H
0000638A 41F0 2FA0               00000FA0   9162          LA    15,4000(0,2)
0000638E E3F0 D0B8 0024          000000B8   9163          STG   15,184(0,13)
00006394 4110 D0B8               000000B8   9164          LA    1,184(0,13)
00006398 E3F0 C0D0 0004          00006228   9165          LG    15,@lit_1961_434 ; rd_refcnt_sub0
0000639E                                    9166 @@gen_label638 DS    0H
0000639E 05EF                               9167          BALR  14,15
000063A0                                    9168 @@gen_label639 DS    0H
000063A0 12FF                               9169          LTR   15,15
000063A2 4720 C39A               000064F2   9170          BH    @ret_lab_1961
000063A6                                    9171 @L993    DS    0H
000063A6 E320 D0B8 0024          000000B8   9172          STG   2,184(0,13)
000063AC 4110 D0B8               000000B8   9173          LA    1,184(0,13)
000063B0 E3F0 C0D8 0004          00006230   9174          LG    15,@lit_1961_435 ; rd_kafka_broker_destroy_final
000063B6                                    9175 @@gen_label641 DS    0H
000063B6 05EF                               9176          BALR  14,15
000063B8                                    9177 @@gen_label642 DS    0H
000063B8                                    9178 @L991    DS    0H
                                            9179 * ***                   return;
000063B8 47F0 C39A               000064F2   9180          B     @ret_lab_1961
                                                                                                                           Page  185 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            9181 * ***           }
000063BC                                    9182 @L985    DS    0H
                                            9183 * ***
                                            9184 * ***
                                            9185 * ***           rkb = rd_kafka_broker_any_usable(rk, 0, RD_DO_LOCK,
                                            9186 * ***                                            0x40,
                                            9187 * ***                                            "broker to look up co\
                                            9188 * ordinator");
000063BC E340 D0B8 0024          000000B8   9189          STG   4,184(0,13)
000063C2 D707 D0C0 D0C0 000000C0 000000C0   9190          XC    192(8,13),192(13)
000063C8 E548 D0C8 0001          000000C8   9191          MVGHI 200(13),1
000063CE E548 D0D0 0040          000000D0   9192          MVGHI 208(13),64
000063D4 E3F0 C0E8 0004          00006240   9193          LG    15,@lit_1961_436
000063DA 41F0 F208               00000208   9194          LA    15,520(0,15)
000063DE E3F0 D0D8 0024          000000D8   9195          STG   15,216(0,13)
000063E4 4110 D0B8               000000B8   9196          LA    1,184(0,13)
000063E8 E3F0 C0E0 0004          00006238   9197          LG    15,@lit_1961_437 ; rd_kafka_broker_any_usable
000063EE                                    9198 @@gen_label643 DS    0H
000063EE 05EF                               9199          BALR  14,15
000063F0                                    9200 @@gen_label644 DS    0H
000063F0 B902 002F                          9201          LTGR  2,15        ; rkb
                                            9202 * ***
                                            9203 * ***           if (!rkb) {
000063F4 4770 C2A4               000063FC   9204          BNZ   @L994
                                            9205 * ***
                                            9206 * ***
                                            9207 * ***                   return;
000063F8 47F0 C39A               000064F2   9208          B     @ret_lab_1961
                                            9209 * ***           }
000063FC                                    9210 @L994    DS    0H
                                            9211 * ***
                                            9212 * ***
                                            9213 * ***
                                            9214 * ***
                                            9215 * ***           rd_kafka_coord_req_keep(creq);
000063FC E350 D0B8 0024          000000B8   9216          STG   5,184(0,13)
00006402 4110 D0B8               000000B8   9217          LA    1,184(0,13)
00006406 E3F0 C0F0 0004          00006248   9218          LG    15,@lit_1961_438 ; rd_kafka_coord_req_keep
0000640C                                    9219 @@gen_label646 DS    0H
0000640C 05EF                               9220          BALR  14,15
0000640E                                    9221 @@gen_label647 DS    0H
                                            9222 * ***           err = rd_kafka_FindCoordinatorRequest(
                                            9223 * ***                   rkb, creq->creq_coordtype, creq->creq_coordkey\
                                            9224 * ,
                                            9225 * ***                   rd_kafka_replyq_make(rk->rk_ops,0,__FUNCTION__\
                                            9226 * ),
                                            9227 * ***                   rd_kafka_coord_req_handle_FindCoordinator,
                                            9228 * ***                   creq);
0000640E 41F0 D0A8               000000A8   9229          LA    15,168(0,13)
00006412 E3F0 D0B8 0024          000000B8   9230          STG   15,184(0,13)
00006418 E3F0 4008 0004          00000008   9231          LG    15,8(0,4)
0000641E E3F0 D0C0 0024          000000C0   9232          STG   15,192(0,13)
                                                                                                                           Page  186 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006424 D707 D0C8 D0C8 000000C8 000000C8   9233          XC    200(8,13),200(13)
0000642A E3F0 C100 0004          00006258   9234          LG    15,@lit_1961_439
00006430 41F0 F210               00000210   9235          LA    15,528(0,15)
00006434 E3F0 D0D0 0024          000000D0   9236          STG   15,208(0,13)
0000643A 4110 D0B8               000000B8   9237          LA    1,184(0,13)
0000643E E3F0 C0F8 0004          00006250   9238          LG    15,@lit_1961_440 ; rd_kafka_replyq_make
00006444                                    9239 @@gen_label648 DS    0H
00006444 05EF                               9240          BALR  14,15
00006446                                    9241 @@gen_label649 DS    0H
00006446 E320 D0B8 0024          000000B8   9242          STG   2,184(0,13)
0000644C E3F0 5010 0014          00000010   9243          LGF   15,16(0,5)
00006452 E3F0 D0C0 0024          000000C0   9244          STG   15,192(0,13)
00006458 E3F0 5018 0004          00000018   9245          LG    15,24(0,5)
0000645E E3F0 D0C8 0024          000000C8   9246          STG   15,200(0,13)
00006464 D20F D0D0 D0A8 000000D0 000000A8   9247          MVC   208(16,13),168(13)
0000646A E3F0 C110 0004          00006268   9248          LG    15,@lit_1961_441 ; rd_kafka_coord_req_handle_FindCoordin*
                                                                ator
00006470 E3F0 D0E0 0024          000000E0   9249          STG   15,224(0,13)
00006476 E350 D0E8 0024          000000E8   9250          STG   5,232(0,13)
0000647C 4110 D0B8               000000B8   9251          LA    1,184(0,13)
00006480 E3F0 C108 0004          00006260   9252          LG    15,@lit_1961_442 ; rd_kafka_FindCoordinatorRequest
00006486                                    9253 @@gen_label650 DS    0H
00006486 05EF                               9254          BALR  14,15
00006488                                    9255 @@gen_label651 DS    0H
00006488 183F                               9256          LR    3,15        ; err
                                            9257 * ***
                                            9258 * ***           do { if (rd_refcnt_sub0(&(rkb)->rkb_refcnt) > 0) break\
                                            9259 * ; rd_kafka_broker_destroy_final(rkb); } while (0);
0000648A                                    9260 @L995    DS    0H
0000648A 41F0 2FA0               00000FA0   9261          LA    15,4000(0,2)
0000648E E3F0 D0B8 0024          000000B8   9262          STG   15,184(0,13)
00006494 4110 D0B8               000000B8   9263          LA    1,184(0,13)
00006498 E3F0 C0D0 0004          00006228   9264          LG    15,@lit_1961_434 ; rd_refcnt_sub0
0000649E                                    9265 @@gen_label652 DS    0H
0000649E 05EF                               9266          BALR  14,15
000064A0                                    9267 @@gen_label653 DS    0H
000064A0 12FF                               9268          LTR   15,15
000064A2 4720 C360               000064B8   9269          BH    @L996
000064A6                                    9270 @L998    DS    0H
000064A6 E320 D0B8 0024          000000B8   9271          STG   2,184(0,13)
000064AC 4110 D0B8               000000B8   9272          LA    1,184(0,13)
000064B0 E3F0 C0D8 0004          00006230   9273          LG    15,@lit_1961_435 ; rd_kafka_broker_destroy_final
000064B6                                    9274 @@gen_label655 DS    0H
000064B6 05EF                               9275          BALR  14,15
000064B8                                    9276 @@gen_label656 DS    0H
000064B8                                    9277 @L996    DS    0H
                                            9278 * ***
                                            9279 * ***           if (err) {
000064B8 1233                               9280          LTR   3,3
000064BA 4780 C39A               000064F2   9281          BZ    @L999
                                            9282 * ***                   rd_kafka_coord_req_fail(rk, creq, err);
000064BE EB45 D0B8 0024          000000B8   9283          STMG  4,5,184(13)
                                                                                                                           Page  187 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000064C4 B914 00F3                          9284          LGFR  15,3
000064C8 E3F0 D0C8 0024          000000C8   9285          STG   15,200(0,13)
000064CE 4110 D0B8               000000B8   9286          LA    1,184(0,13)
000064D2 E3F0 C098 0004          000061F0   9287          LG    15,@lit_1961_426 ; rd_kafka_coord_req_fail
000064D8                                    9288 @@gen_label658 DS    0H
000064D8 05EF                               9289          BALR  14,15
000064DA                                    9290 @@gen_label659 DS    0H
                                            9291 * ***
                                            9292 * ***                   rd_kafka_coord_req_destroy(rk, creq, 0);
000064DA EB45 D0B8 0024          000000B8   9293          STMG  4,5,184(13)
000064E0 D707 D0C8 D0C8 000000C8 000000C8   9294          XC    200(8,13),200(13)
000064E6 4110 D0B8               000000B8   9295          LA    1,184(0,13)
000064EA E3F0 C0C0 0004          00006218   9296          LG    15,@lit_1961_432 ; rd_kafka_coord_req_destroy
000064F0                                    9297 @@gen_label660 DS    0H
000064F0 05EF                               9298          BALR  14,15
000064F2                                    9299 @@gen_label661 DS    0H
                                            9300 * ***           }
000064F2                                    9301 @L999    DS    0H
                                            9302 * ***   }
000064F2                                    9303 @ret_lab_1961 DS 0H
                                            9304 * * **** Start of Epilogue
                                            9305          DCCEPIL
000064F2                                    9306+         ds 0h                                                          01-DCCEP
                                            9307+* Epilog
000064F2 D707 D088 D088 00000088 00000088   9308+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000064F8 E3D0 D080 0004          00000080   9309+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000064FE E3C0 D090 0004          00000090   9310+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006504 E3B0 C018 0004          00000018   9311+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000650A E3C0 B010 0021          00000010   9312+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006510 E3E0 D008 0004          00000008   9313+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006516 EB1C D020 0004          00000020   9314+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000651C 078E                               9315+         bcr 8,14                if same dsab, just return              01-DCCEP
0000651E E3F0 D010 0024          00000010   9316+         stg 15,16(0,13)         save return code                       01-DCCEP
00006524 E300 D018 0024          00000018   9317+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000652A E3F0 D090 0004          00000090   9318+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006530 E3F0 F018 0004          00000018   9319+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006536 47F0 F040               00000040   9320+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9321+* End of Epilog
                                            9322 * * **** End of Epilogue
                                            9323          DROP  12
                                            9324 *
                                            9325 *   DSECT for automatic variables in "rd_kafka_coord_req_fsm"
                                            9326 *      (FUNCTION #1961)
                                            9327 *
00000000                00000000 000000B8   9328 @AUTO#rd_kafka_coord_req_fsm DSECT
00000000                                    9329          DS    XL168
000000A8                                    9330 rd_kafka_coord_req_fsm#replyq#3 DS 16XL1 ; replyq
000000B8                000000B8 000000A8   9331          ORG   @AUTO#rd_kafka_coord_req_fsm+168
000000A8                                    9332 rd_kafka_coord_req_fsm#err#0 DS 1F ; err
                                            9333 *
0000653A                00000000 0000685E   9334 @CODE    CSECT
                                            9335 *
                                                                                                                           Page  188 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            9336 *
                                            9337 *
                                            9338 * ....... start of rd_kafka_coord_rkb_monitor_cb
                                            9339 rd_kafka_coord_rkb_monitor_cb ALIAS X'99846D92818692816D83969699846D999*
                                                                2826D94969589A396996D8382'
0000653A                                    9340 @LNAME1889 DS  0H
0000653A 0000001D                           9341          DC    X'0000001D'
0000653E 99846D9281869281                   9342          DC    C'rd_kafka_coord_rkb_monitor_cb'
0000655B 00                                 9343          DC    X'00'
                                            9344 rd_kafka_coord_rkb_monitor_cb DCCPRLG CINDEX=1889,BASER=12,FRAME=192,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1889
                                            9345          macro
                                            9346          dccextrn &m
                                            9347          gblc    &$dccext(1000)
                                            9348          gbla    &$dccexti
                                            9349          lcla    &i
                                            9350 &$dccext(&$dccexti+1) setc    '&m'
                                            9351 &i       seta    1
                                            9352 .loop    aif    (&i gt &$dccexti).around
                                            9353          aif    ('&$dccext(&i)' eq '&m').getout
                                            9354 &i       seta    &i+1
                                            9355          ago     .loop
                                            9356 .around  anop
                                            9357 &$dccexti seta &$dccexti+1
                                            9358          extrn  &m
                                            9359 .getout  anop
                                            9360          mend
00006560                                    9361+$eye0136    ds    0d                                                    02-DCCCA
00006560 C4C3C3                             9362+         dc cl3'DCC'                                                    02-DCCCA
00006563 01                                 9363+         dc xl1'01' format one                                          02-DCCCA
00006564 00000000                           9364+         dc a(0)                                                        02-DCCCA
00006568 00000000000065D2                   9365+         dc ad(@PER_1889)                                               02-DCCCA
00006570 00000000000000C0                   9366+         dc ad(192)                                                     02-DCCCA
00006578 0000000000000000                   9367+         dc ad(0)                                                       02-DCCCA
00006580 0000000000001000                   9368+         dc ad(4096)                                                    02-DCCCA
00006588 20                                 9369+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006589 03                                 9370+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000658A 03                                 9371+         dc al1(3)                                                      02-DCCCA
0000658B 08                                 9372+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000658C 00                                 9373+         dc bl.8'00000000'                                              02-DCCCA
0000658D 000000                             9374+         dc al3(0)                                                      02-DCCCA
00006590 000000000000653A                   9375+         dc ad(@LNAME1889)                                              02-DCCCA
00006598                                    9376+         ds 0d                                                          02-DCCCA
00006598 0000000000006560                   9377+         dc ad($eye0136)                                                02-DCCCA
000065A0 0000000000000000                   9378+         dc ad(0)                                                       02-DCCCA
000065A8                                    9379+         ds    0d                                                       01-DCCPR
                                            9380+         entry rd_kafka_coord_rkb_monitor_cb                            01-DCCPR
000065A8                                    9381+rd_kafka_coord_rkb_monitor_cb ds 0d                                     01-DCCPR
000065A8                                    9382+@REGION_1889_1 ds 0h                                                    01-DCCPR
000065A8 EBEC D008 0024          00000008   9383+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000065AE E3E0 D088 0004          00000088   9384+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000065B4 E3C0 D090 0004          00000090   9385+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page  189 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000065BA B904 002E                          9386+         lgr   2,14                copy addr of our savearea            01-DCCPR
000065BE E3B0 C018 0004          00000018   9387+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000065C4 A7EB 00C0               000000C0   9388+         aghi  14,192              increase by frame size               01-DCCPR
000065C8 E3E0 C020 0021          00000020   9389+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000065CE 4720 B020               00000020   9390+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000065D2                                    9391+@PER_1889 ds   0h                                                       01-DCCPR
000065D2 EBDE 2080 0024          00000080   9392+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000065D8 E3C0 2090 0024          00000090   9393+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000065DE B904 00D2                          9394+         lgr   13,2                set real frame pointer               01-DCCPR
000065E2 B904 00CF                          9395+         lgr   12,15               set base reg                         01-DCCPR
                        000065A8            9396+         using @REGION_1889_1,12                                        01-DCCPR
                                            9397 * ******* End of Prologue
                                            9398 * *
                                            9399 * ***           rd_kafka_t *rk = rkb->rkb_rk;
000065E6 E3F0 1000 0004          00000000   9400          LG    15,0(0,1)   ; rkb
000065EC E320 FFD0 0004          00000FD0   9401          LG    2,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
                                            9402 * ***           rd_kafka_coord_req_t *creq, *tmp;
                                            9403 * ***
                                            9404 * ***
                                            9405 * ***
                                            9406 * ***           for ((creq) = ((&rk->rk_coord_reqs)->tqh_first); (creq\
                                            9407 * ) != (((void *)0)) && ((tmp) = ((creq)->creq_link .tqe_next), 1); (c\
                                            9408 * req) = (tmp))
000065F2 E3F0 2F88 0004          00000F88   9409          LG    15,3976(0,2) ; offset of rk_coord_reqs in rd_kafka_s
000065F8 47F0 C084               0000662C   9410          B     @L1001
00006600                                    9411          DS    0D
00006600 000000C0                           9412 @FRAMESIZE_1889 DC F'192'
00006604 00000000
00006608 0000000000006158                   9413 @lit_1889_448 DC AD(rd_kafka_coord_req_fsm)
00006610                                    9414 @L1000   DS    0H
                                            9415 * ***                   rd_kafka_coord_req_fsm(rk, creq);
00006610 E320 D0B0 0024          000000B0   9416          STG   2,176(0,13)
00006616 E3F0 D0B8 0024          000000B8   9417          STG   15,184(0,13)
0000661C 4110 D0B0               000000B0   9418          LA    1,176(0,13)
00006620 E3F0 C060 0004          00006608   9419          LG    15,@lit_1889_448 ; rd_kafka_coord_req_fsm
00006626                                    9420 @@gen_label662 DS    0H
00006626 05EF                               9421          BALR  14,15
00006628                                    9422 @@gen_label663 DS    0H
00006628 B904 00F3                          9423          LGR   15,3        ; creq
0000662C                                    9424 @L1001   DS    0H
0000662C B902 001F                          9425          LTGR  1,15
00006630 4780 C096               0000663E   9426          BE    @L1002
00006634 E330 F000 0004          00000000   9427          LG    3,0(0,15)   ; creq
0000663A 47F0 C068               00006610   9428          B     @L1000
0000663E                                    9429 @L1002   DS    0H
                                            9430 * ***   }
0000663E                                    9431 @ret_lab_1889 DS 0H
                                            9432 * * **** Start of Epilogue
                                            9433          DCCEPIL
0000663E                                    9434+         ds 0h                                                          01-DCCEP
                                            9435+* Epilog
0000663E D707 D088 D088 00000088 00000088   9436+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page  190 
  Active Usings: @REGION_1889_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006644 E3D0 D080 0004          00000080   9437+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000664A E3C0 D090 0004          00000090   9438+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006650 E3B0 C018 0004          00000018   9439+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006656 E3C0 B010 0021          00000010   9440+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000665C E3E0 D008 0004          00000008   9441+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006662 EB1C D020 0004          00000020   9442+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006668 078E                               9443+         bcr 8,14                if same dsab, just return              01-DCCEP
0000666A E3F0 D010 0024          00000010   9444+         stg 15,16(0,13)         save return code                       01-DCCEP
00006670 E300 D018 0024          00000018   9445+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006676 E3F0 D090 0004          00000090   9446+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000667C E3F0 F018 0004          00000018   9447+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006682 47F0 F040               00000040   9448+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9449+* End of Epilog
                                            9450 * * **** End of Epilogue
                                            9451          DROP  12
                                            9452 *
                                            9453 *   DSECT for automatic variables in "rd_kafka_coord_rkb_monitor_cb"
                                            9454 *      (FUNCTION #1889)
                                            9455 *
00000000                00000000 000000A8   9456 @AUTO#rd_kafka_coord_rkb_monitor_cb DSECT
00000000                                    9457          DS    XL168
                                            9458 *
00006686                00000000 0000685E   9459 @CODE    CSECT
                                            9460 *
                                            9461 *
                                            9462 *
                                            9463 * ....... start of rd_kafka_coord_reqs_term
                                            9464 rd_kafka_coord_reqs_term ALIAS X'99846D92818692816D83969699846D998598A2*
                                                                6DA3859994'
00006686                                    9465 @LNAME1890 DS  0H
00006686 00000018                           9466          DC    X'00000018'
0000668A 99846D9281869281                   9467          DC    C'rd_kafka_coord_reqs_term'
000066A2 00                                 9468          DC    X'00'
                                            9469 rd_kafka_coord_reqs_term DCCPRLG CINDEX=1890,BASER=12,FRAME=200,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1890
                                            9470          macro
                                            9471          dccextrn &m
                                            9472          gblc    &$dccext(1000)
                                            9473          gbla    &$dccexti
                                            9474          lcla    &i
                                            9475 &$dccext(&$dccexti+1) setc    '&m'
                                            9476 &i       seta    1
                                            9477 .loop    aif    (&i gt &$dccexti).around
                                            9478          aif    ('&$dccext(&i)' eq '&m').getout
                                            9479 &i       seta    &i+1
                                            9480          ago     .loop
                                            9481 .around  anop
                                            9482 &$dccexti seta &$dccexti+1
                                            9483          extrn  &m
                                            9484 .getout  anop
                                            9485          mend
000066A8                                    9486+$eye0139    ds    0d                                                    02-DCCCA
                                                                                                                           Page  191 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000066A8 C4C3C3                             9487+         dc cl3'DCC'                                                    02-DCCCA
000066AB 01                                 9488+         dc xl1'01' format one                                          02-DCCCA
000066AC 00000000                           9489+         dc a(0)                                                        02-DCCCA
000066B0 000000000000671A                   9490+         dc ad(@PER_1890)                                               02-DCCCA
000066B8 00000000000000C8                   9491+         dc ad(200)                                                     02-DCCCA
000066C0 0000000000000000                   9492+         dc ad(0)                                                       02-DCCCA
000066C8 0000000000001000                   9493+         dc ad(4096)                                                    02-DCCCA
000066D0 20                                 9494+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000066D1 03                                 9495+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000066D2 03                                 9496+         dc al1(3)                                                      02-DCCCA
000066D3 08                                 9497+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000066D4 00                                 9498+         dc bl.8'00000000'                                              02-DCCCA
000066D5 000000                             9499+         dc al3(0)                                                      02-DCCCA
000066D8 0000000000006686                   9500+         dc ad(@LNAME1890)                                              02-DCCCA
000066E0                                    9501+         ds 0d                                                          02-DCCCA
000066E0 00000000000066A8                   9502+         dc ad($eye0139)                                                02-DCCCA
000066E8 0000000000000000                   9503+         dc ad(0)                                                       02-DCCCA
000066F0                                    9504+         ds    0d                                                       01-DCCPR
                                            9505+         entry rd_kafka_coord_reqs_term                                 01-DCCPR
000066F0                                    9506+rd_kafka_coord_reqs_term ds 0d                                          01-DCCPR
000066F0                                    9507+@REGION_1890_1 ds 0h                                                    01-DCCPR
000066F0 EBEC D008 0024          00000008   9508+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000066F6 E3E0 D088 0004          00000088   9509+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000066FC E3C0 D090 0004          00000090   9510+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006702 B904 002E                          9511+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006706 E3B0 C018 0004          00000018   9512+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000670C A7EB 00C8               000000C8   9513+         aghi  14,200              increase by frame size               01-DCCPR
00006710 E3E0 C020 0021          00000020   9514+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006716 4720 B020               00000020   9515+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000671A                                    9516+@PER_1890 ds   0h                                                       01-DCCPR
0000671A EBDE 2080 0024          00000080   9517+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006720 E3C0 2090 0024          00000090   9518+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006726 B904 00D2                          9519+         lgr   13,2                set real frame pointer               01-DCCPR
0000672A B904 00CF                          9520+         lgr   12,15               set base reg                         01-DCCPR
                        000066F0            9521+         using @REGION_1890_1,12                                        01-DCCPR
0000672E B904 0021                          9522          LGR   2,1         ; ptr to parm area
                                            9523 * ******* End of Prologue
                                            9524 * *
                                            9525 * ***           rd_kafka_coord_req_t *creq;
                                            9526 * ***
                                            9527 * ***           while ((creq = ((&rk->rk_coord_reqs)->tqh_first)))
00006732 47F0 C07C               0000676C   9528          B     @L1008
00006738                                    9529          DS    0D
00006738 000000C8                           9530 @FRAMESIZE_1890 DC F'200'
0000673C 00000000
00006740 0000000000003AB0                   9531 @lit_1890_450 DC AD(rd_kafka_coord_req_fail)
00006748                                    9532 @L1007   DS    0H
                                            9533 * ***                   rd_kafka_coord_req_fail(rk, creq, RD_KAFKA_RES\
                                            9534 * P_ERR__DESTROY);
00006748 E310 2000 0004          00000000   9535          LG    1,0(0,2)    ; rk
0000674E E310 D0B0 0024          000000B0   9536          STG   1,176(0,13)
00006754 E3F0 D0B8 0024          000000B8   9537          STG   15,184(0,13)
                                                                                                                           Page  192 
  Active Usings: @REGION_1890_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000675A E548 D0C0 FF3B          000000C0   9538          MVGHI 192(13),-197
00006760 4110 D0B0               000000B0   9539          LA    1,176(0,13)
00006764 E3F0 C050 0004          00006740   9540          LG    15,@lit_1890_450 ; rd_kafka_coord_req_fail
0000676A                                    9541 @@gen_label665 DS    0H
0000676A 05EF                               9542          BALR  14,15
0000676C                                    9543 @@gen_label666 DS    0H
0000676C                                    9544 @L1008   DS    0H
0000676C E3F0 2000 0004          00000000   9545          LG    15,0(0,2)   ; rk
00006772 E3F0 FF88 0004          00000F88   9546          LG    15,3976(0,15) ; offset of rk_coord_reqs in rd_kafka_s
00006778 B902 001F                          9547          LTGR  1,15
0000677C 4770 C058               00006748   9548          BNZ   @L1007
                                            9549 * ***   }
00006780                                    9550 @ret_lab_1890 DS 0H
                                            9551 * * **** Start of Epilogue
                                            9552          DCCEPIL
00006780                                    9553+         ds 0h                                                          01-DCCEP
                                            9554+* Epilog
00006780 D707 D088 D088 00000088 00000088   9555+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006786 E3D0 D080 0004          00000080   9556+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000678C E3C0 D090 0004          00000090   9557+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006792 E3B0 C018 0004          00000018   9558+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006798 E3C0 B010 0021          00000010   9559+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000679E E3E0 D008 0004          00000008   9560+         lg  14,8(0,13)          load up return address                 01-DCCEP
000067A4 EB1C D020 0004          00000020   9561+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000067AA 078E                               9562+         bcr 8,14                if same dsab, just return              01-DCCEP
000067AC E3F0 D010 0024          00000010   9563+         stg 15,16(0,13)         save return code                       01-DCCEP
000067B2 E300 D018 0024          00000018   9564+         stg 0,24(0,13)          save more return code                  01-DCCEP
000067B8 E3F0 D090 0004          00000090   9565+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000067BE E3F0 F018 0004          00000018   9566+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000067C4 47F0 F040               00000040   9567+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9568+* End of Epilog
                                            9569 * * **** End of Epilogue
                                            9570          DROP  12
                                            9571 *
                                            9572 *   DSECT for automatic variables in "rd_kafka_coord_reqs_term"
                                            9573 *      (FUNCTION #1890)
                                            9574 *
00000000                00000000 000000A8   9575 @AUTO#rd_kafka_coord_reqs_term DSECT
00000000                                    9576          DS    XL168
                                            9577 *
000067C8                00000000 0000685E   9578 @CODE    CSECT
                                            9579 *
                                            9580 *
                                            9581 *
                                            9582 * ....... start of rd_kafka_coord_reqs_init
                                            9583 rd_kafka_coord_reqs_init ALIAS X'99846D92818692816D83969699846D998598A2*
                                                                6D899589A3'
000067C8                                    9584 @LNAME1891 DS  0H
000067C8 00000018                           9585          DC    X'00000018'
000067CC 99846D9281869281                   9586          DC    C'rd_kafka_coord_reqs_init'
000067E4 00                                 9587          DC    X'00'
                                            9588 rd_kafka_coord_reqs_init DCCPRLG CINDEX=1891,BASER=0,FRAME=168,SAVEAREA*
                                                                                                                           Page  193 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                =NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1891
                                            9589          macro
                                            9590          dccextrn &m
                                            9591          gblc    &$dccext(1000)
                                            9592          gbla    &$dccexti
                                            9593          lcla    &i
                                            9594 &$dccext(&$dccexti+1) setc    '&m'
                                            9595 &i       seta    1
                                            9596 .loop    aif    (&i gt &$dccexti).around
                                            9597          aif    ('&$dccext(&i)' eq '&m').getout
                                            9598 &i       seta    &i+1
                                            9599          ago     .loop
                                            9600 .around  anop
                                            9601 &$dccexti seta &$dccexti+1
                                            9602          extrn  &m
                                            9603 .getout  anop
                                            9604          mend
000067E8                                    9605+$eye0142    ds    0d                                                    02-DCCCA
000067E8 C4C3C3                             9606+         dc cl3'DCC'                                                    02-DCCCA
000067EB 01                                 9607+         dc xl1'01' format one                                          02-DCCCA
000067EC 00000000                           9608+         dc a(0)                                                        02-DCCCA
000067F0 0000000000000000                   9609+         dc ad(0)                                                       02-DCCCA
000067F8 00000000000000A8                   9610+         dc ad(168)                                                     02-DCCCA
00006800 0000000000000000                   9611+         dc ad(0)                                                       02-DCCCA
00006808 0000000000001000                   9612+         dc ad(4096)                                                    02-DCCCA
00006810 20                                 9613+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006811 03                                 9614+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006812 03                                 9615+         dc al1(3)                                                      02-DCCCA
00006813 08                                 9616+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006814 00                                 9617+         dc bl.8'00000000'                                              02-DCCCA
00006815 000000                             9618+         dc al3(0)                                                      02-DCCCA
00006818 00000000000067C8                   9619+         dc ad(@LNAME1891)                                              02-DCCCA
00006820                                    9620+         ds 0d                                                          02-DCCCA
00006820 00000000000067E8                   9621+         dc ad($eye0142)                                                02-DCCCA
00006828 0000000000000000                   9622+         dc ad(0)                                                       02-DCCCA
00006830                                    9623+         ds    0d                                                       01-DCCPR
                                            9624+         entry rd_kafka_coord_reqs_init                                 01-DCCPR
00006830                                    9625+rd_kafka_coord_reqs_init ds 0d                                          01-DCCPR
00006830                                    9626+@REGION_1891_1 ds 0h                                                    01-DCCPR
00006830 EBEC D008 0024          00000008   9627+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            9628 * ******* End of Prologue
                                            9629 * *
                                            9630 * ***           do { (&rk->rk_coord_reqs)->tqh_first = (((void *)0)); \
                                            9631 * (&rk->rk_coord_reqs)->tqh_last = &(&rk->rk_coord_reqs)->tqh_first; }\
                                            9632 *  while ( 0);
00006836 E3F0 1000 0004          00000000   9633          LG    15,0(0,1)   ; rk
0000683C                                    9634 @L1009   DS    0H
0000683C A719 0000               00000000   9635          LGHI  1,0         ; 0
00006840 E310 FF88 0024          00000F88   9636          STG   1,3976(0,15) ; offset of rk_coord_reqs in rd_kafka_s
00006846 4110 FF88               00000F88   9637          LA    1,3976(0,15)
0000684A E310 FF90 0024          00000F90   9638          STG   1,3984(0,15) ; offset of tqh_last in 0000149
                                            9639 * ***   }
                                                                                                                           Page  194 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006850                                    9640 @ret_lab_1891 DS 0H
                                            9641 * * **** Start of Epilogue
                                            9642          DCCEPIL
00006850                                    9643+         ds 0h                                                          01-DCCEP
                                            9644+* Epilog
                                            9645+* Epilog
00006850 E3E0 D008 0004          00000008   9646+         lg    14,8(,13) restore the reg                                01-DCCEP
00006856 EB1C D020 0004          00000020   9647+         lmg   1,12,32(13)                                              01-DCCEP
0000685C 07FE                               9648+         br   14                                                        01-DCCEP
                                            9649+* End of Epilog
                                            9650 * * **** End of Epilogue
                                            9651 *
                                            9652 *   DSECT for automatic variables in "rd_kafka_coord_reqs_init"
                                            9653 *      (FUNCTION #1891)
                                            9654 *
00000000                00000000 000000A8   9655 @AUTO#rd_kafka_coord_reqs_init DSECT
00000000                                    9656          DS    XL168
                                            9657 *
0000685E                00000000 0000685E   9658 @CODE    CSECT
                                            9659 @@STATIC ALIAS X'7C998492818692816D839696998450'
                                            9660 @@STATIC DXD   219D
                                            9661 *
                                            9662 *  Non-Re-Entrant Data Section
                                            9663 *
00006860                00006860 00000988   9664 @DATA    CSECT
                                            9665 @DATA    RMODE ANY
                                            9666 @DATA    AMODE ANY
00006860 99846D8381939396                   9667 @@T48F   DC    X'99846D838193939683'               rd.calloc
00006869 00                                 9668          DC    1X'00'
0000686A 99846D9481939396                   9669 @@T493   DC    X'99846D948193939683'               rd.malloc
00006873 00                                 9670          DC    1X'00'
00006874 99846D9985819393                   9671 @@T498   DC    X'99846D99858193939683'             rd.realloc
0000687E 0000                               9672          DC    2X'00'
00006880 99846DA2A39984A4                   9673 @@T49E   DC    X'99846DA2A39984A497'               rd.strdup
00006889 00                                 9674          DC    1X'00'
0000688A 99846DA2A3999584                   9675 @@T4A3   DC    X'99846DA2A3999584A497'             rd.strndup
00006894 0000                               9676          DC    2X'00'
00006896 99846D9985868395                   9677 @@T4AB   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
000068A4 00000000                           9678          DC    4X'00'
000068A8 00000000                           9679 @@T65A   DC    4X'00'
000068AC 0000001A00000000                   9680          DC    X'0000001A000000000000002200000000' ................
000068BC 00000024                           9681          DC    X'00000024'                         ....
000068C0 99846D9281869281                   9682 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
000068D0 98                                 9683          DC    X'98'                               q
000068D1 00                                 9684          DC    1X'00'
000068D2 99846D9281869281                   9685 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
000068E2 96A8F0                             9686          DC    X'96A8F0'                           oy0
000068E5 00                                 9687          DC    1X'00'
000068E6 99846D9281869281                   9688 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000068F6 856D8485A2A39996                   9689          DC    X'856D8485A2A39996A8F0'             e.destroy0
00006900 0000                               9690          DC    2X'00'
00006902 99846D9281869281                   9691 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
                                                                                                                           Page  195 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006912 856D8485936DA296                   9692          DC    X'856D8485936DA296A4998385'         e.del.source
0000691E 0000                               9693          DC    2X'00'
00006920 99846D9281869281                   9694 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006930 856D8485936DA296                   9695          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00006940 A49995                             9696          DC    X'A49995'                           urn
00006943 00                                 9697          DC    1X'00'
00006944 99846D9281869281                   9698 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006954 856DA39989878785                   9699          DC    X'856DA3998987878599'               e.trigger
0000695D 00                                 9700          DC    1X'00'
0000695E 99846D9281869281                   9701 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000696E 856D8485A2A39996                   9702          DC    X'856D8485A2A39996A8'               e.destroy
00006977 00                                 9703          DC    1X'00'
00006978 99846D9281869281                   9704 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006988 856D8489A2818293                   9705          DC    X'856D8489A281829385'               e.disable
00006991 00                                 9706          DC    1X'00'
00006992 99846DA394978182                   9707 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
000069A2 F0                                 9708          DC    X'F0'                               0
000069A3 00                                 9709          DC    1X'00'
000069A4 99846D9281869281                   9710 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
000069B4 81A385                             9711          DC    X'81A385'                           ate
000069B7 00                                 9712          DC    1X'00'
000069B8 99846D9281869281                   9713 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
000069C8 819389A9856D8199                   9714          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
000069D6 0000                               9715          DC    2X'00'
000069D8 99846D9281869281                   9716 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
000069E8 6D899589A3                         9717          DC    X'6D899589A3'                       .init
000069ED 00                                 9718          DC    1X'00'
000069EE 99846D9281869281                   9719 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
000069FE 87A26DA2A482                       9720          DC    X'87A26DA2A482'                     gs.sub
00006A04 0000                               9721          DC    2X'00'
00006A06 99846D9281869281                   9722 @@TA7D   DC    X'99846D92818692816D83969699846D83' rd.kafka.coord.c
00006A16 818388856D8595A3                   9723          DC    X'818388856D8595A399A86D8485A2A399' ache.entry.destr
00006A26 96A8                               9724          DC    X'96A8'                             oy
00006A28 0000                               9725          DC    2X'00'
00006A2A 99846D9281869281                   9726 @@TAAA   DC    X'99846D92818692816D83969699846D99' rd.kafka.coord.r
00006A3A 85986D8485A2A399                   9727          DC    X'85986D8485A2A39996A8'             eq.destroy
00006A44 0000                               9728          DC    2X'00'
00006A46 99846D9281869281                   9729 @@TAC8   DC    X'99846D92818692816D83969699846D99' rd.kafka.coord.r
00006A56 85986D8881958493                   9730          DC    X'85986D8881958493856DC6899584C396' eq.handle.FindCo
00006A66 969984899581A396                   9731          DC    X'969984899581A39699'               ordinator
00006A6F 00                                 9732          DC    1X'00'
00006A70 99846D9281869281                   9733 @@TB16   DC    X'99846D92818692816D83969699846D99' rd.kafka.coord.r
00006A80 85986D86A294                       9734          DC    X'85986D86A294'                     eq.fsm
00006A86 00                                 9735          DC    1X'00'
00006A88                                    9736 @strings@ DS   0H
00006A88 C37AE081A2879281                   9737          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00006A98 849281869281E0A2                   9738          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00006AA8 9700950099858683                   9739          DC    X'970095009985868395A340A2A48260A9' p.n.refcnt.sub.z
00006AB8 859996005A5C7F99                   9740          DC    X'859996005A5C7F9985868395A340A2A4' ero....refcnt.su
00006AC8 8260A98599967F00                   9741          DC    X'8260A98599967F00E495929596A69560' b.zero..Unknown.
00006AD8 6C88846F0000C37A                   9742          DC    X'6C88846F0000C37AE081A28792818692' .hd...C..asgkafk
00006AE8 81E0938982998492                   9743          DC    X'81E093898299849281869281E0A29983' a.librdkafka.src
                                                                                                                           Page  196 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006AF8 E099849281869281                   9744          DC    X'E0998492818692816D98A485A4854B88' .rdkafka.queue.h
00006B08 000081A2A28599A3                   9745          DC    X'000081A2A28599A37A40999298606E99' ..assert..rkq..r
00006B18 92986D9985868395                   9746          DC    X'92986D9985868395A3406E40F000C37A' kq.refcnt...0.C.
00006B28 E081A28792818692                   9747          DC    X'E081A2879281869281E0938982998492' .asgkafka.librdk
00006B38 81869281E0A29983                   9748          DC    X'81869281E0A29983E099849281869281' afka.src.rdkafka
00006B48 6D83969699844B83                   9749          DC    X'6D83969699844B8300008383606E8383' .coord.c..cc..cc
00006B58 6D8395A3406E40F0                   9750          DC    X'6D8395A3406E40F0000083998598606E' .cnt...0..creq..
00006B68 839985986D998586                   9751          DC    X'839985986D9985868395A3406E40F000' creq.refcnt...0.
00006B78 81A2A28599A37A40                   9752          DC    X'81A2A28599A37A40999282A486606E99' assert..rkbuf..r
00006B88 9282A4866D999282                   9753          DC    X'9282A4866D99928200007A4000008995' kbuf.rkb......in
00006B98 839699998583A340                   9754          DC    X'839699998583A3408299969285994BA5' correct.broker.v
00006BA8 8599A28996954B86                   9755          DC    X'8599A28996954B86819393828183926F' ersion.fallback.
00006BB8 0000D7D9D6E3D6E4                   9756          DC    X'0000D7D9D6E3D6E4C6D3D6E60000D799' ..PROTOUFLOW..Pr
00006BC8 96A3968396934099                   9757          DC    X'96A39683969340998581844082A48686' otocol.read.buff
00006BD8 859940A495848599                   9758          DC    X'859940A495848599869396A640869699' er.underflow.for
00006BE8 406CA240A56C8884                   9759          DC    X'406CA240A56C88844081A3406CA9A461' ..s.v.hd.at..zu.
00006BF8 6CA9A4404D6CA27A                   9760          DC    X'6CA9A4404D6CA27A6C895D7A4085A797' .zu...s..i...exp
00006C08 8583A38584406CA9                   9761          DC    X'8583A38584406CA9A44082A8A385A240' ected..zu.bytes.
00006C18 6E406CA9A4409985                   9762          DC    X'6E406CA9A44099859481899589958740' ...zu.remaining.
00006C28 82A8A385A2404D6C                   9763          DC    X'82A8A385A2404D6CA25D6CA200007A40' bytes...s..s....
00006C38 A4A581998995A340                   9764          DC    X'A4A581998995A340978199A289958740' uvarint.parsing.
00006C48 8681899385840000                   9765          DC    X'868189938584000000006C4B5CA20000' failed.......s..
00006C58 C6818993858440A3                   9766          DC    X'C6818993858440A39640818484408299' Failed.to.add.br
00006C68 969285997A408995                   9767          DC    X'969285997A408995A2A3819583854089' oker..instance.i
00006C78 A240979996828182                   9768          DC    X'A24097999682818293A840A385999489' s.probably.termi
00006C88 9581A38995870000                   9769          DC    X'9581A3899587000082999692859940A3' nating..broker.t
00006C98 96409396969240A4                   9770          DC    X'96409396969240A49740839696998489' o.look.up.coordi
00006CA8 9581A3969900D799                   9771          DC    X'9581A3969900D7999684A4838500C685' nator.Produce.Fe
00006CB8 A3838800D68686A2                   9772          DC    X'A3838800D68686A285A30000D485A381' tch.Offset..Meta
00006CC8 8481A3810000D385                   9773          DC    X'8481A3810000D38581848599C19584C9' data..LeaderAndI
00006CD8 A2990000E2A39697                   9774          DC    X'A2990000E2A39697D985979389838100' sr..StopReplica.
00006CE8 E4978481A385D485                   9775          DC    X'E4978481A385D485A3818481A3810000' UpdateMetadata..
00006CF8 C39695A399969393                   9776          DC    X'C39695A3999693938584E288A4A38496' ControlledShutdo
00006D08 A6950000D68686A2                   9777          DC    X'A6950000D68686A285A3C396949489A3' wn..OffsetCommit
00006D18 0000D68686A285A3                   9778          DC    X'0000D68686A285A3C685A3838800C689' ..OffsetFetch.Fi
00006D28 9584C39696998489                   9779          DC    X'9584C396969984899581A3969900D196' ndCoordinator.Jo
00006D38 8995C79996A49700                   9780          DC    X'8995C79996A49700C8858199A3828581' inGroup.Heartbea
00006D48 A300D38581A585C7                   9781          DC    X'A300D38581A585C79996A4970000E2A8' t.LeaveGroup..Sy
00006D58 9583C79996A49700                   9782          DC    X'9583C79996A49700C485A28399898285' ncGroup.Describe
00006D68 C79996A497A20000                   9783          DC    X'C79996A497A20000D389A2A3C79996A4' Groups..ListGrou
00006D78 97A20000E281A293                   9784          DC    X'97A20000E281A293C8819584A2888192' ps..SaslHandshak
00006D88 8500C19789E58599                   9785          DC    X'8500C19789E58599A28996950000C399' e.ApiVersion..Cr
00006D98 8581A385E3969789                   9786          DC    X'8581A385E396978983A20000C4859385' eateTopics..Dele
00006DA8 A385E396978983A2                   9787          DC    X'A385E396978983A20000C4859385A385' teTopics..Delete
00006DB8 D98583969984A200                   9788          DC    X'D98583969984A200C99589A3D7999684' Records.InitProd
00006DC8 A4838599C9840000                   9789          DC    X'A4838599C9840000D68686A285A3C696' ucerId..OffsetFo
00006DD8 99D38581848599C5                   9790          DC    X'99D38581848599C5979683880000C184' rLeaderEpoch..Ad
00006DE8 84D78199A389A389                   9791          DC    X'84D78199A389A3899695A2E396E3A795' dPartitionsToTxn
00006DF8 0000C18484D68686                   9792          DC    X'0000C18484D68686A285A3A2E396E3A7' ..AddOffsetsToTx
00006E08 9500C59584E3A795                   9793          DC    X'9500C59584E3A7950000E69989A385E3' n.EndTxn..WriteT
00006E18 A795D48199928599                   9794          DC    X'A795D48199928599A200E3A795D68686' xnMarkers.TxnOff
00006E28 A285A3C396949489                   9795          DC    X'A285A3C396949489A300C485A2839989' setCommit.Descri
                                                                                                                           Page  197 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006E38 8285C18393A20000                   9796          DC    X'8285C18393A20000C3998581A385C183' beAcls..CreateAc
00006E48 93A20000C4859385                   9797          DC    X'93A20000C4859385A385C18393A20000' ls..DeleteAcls..
00006E58 C485A28399898285                   9798          DC    X'C485A28399898285C39695868987A200' DescribeConfigs.
00006E68 C193A38599C39695                   9799          DC    X'C193A38599C39695868987A20000C193' AlterConfigs..Al
00006E78 A38599D985979389                   9800          DC    X'A38599D9859793898381D39687C48999' terReplicaLogDir
00006E88 A200C485A2839989                   9801          DC    X'A200C485A28399898285D39687C48999' s.DescribeLogDir
00006E98 A200E281A293C1A4                   9802          DC    X'A200E281A293C1A4A3888595A3898381' s.SaslAuthentica
00006EA8 A3850000C3998581                   9803          DC    X'A3850000C3998581A385D78199A389A3' te..CreatePartit
00006EB8 899695A20000C399                   9804          DC    X'899695A20000C3998581A385C4859385' ions..CreateDele
00006EC8 8781A3899695E396                   9805          DC    X'8781A3899695E39692859500D9859585' gationToken.Rene
00006ED8 A6C48593858781A3                   9806          DC    X'A6C48593858781A3899695E396928595' wDelegationToken
00006EE8 0000C5A797899985                   9807          DC    X'0000C5A797899985C48593858781A389' ..ExpireDelegati
00006EF8 9695E39692859500                   9808          DC    X'9695E39692859500C485A28399898285' onToken.Describe
00006F08 C48593858781A389                   9809          DC    X'C48593858781A3899695E39692859500' DelegationToken.
00006F18 C4859385A385C799                   9810          DC    X'C4859385A385C79996A497A20000C593' DeleteGroups..El
00006F28 8583A3D385818485                   9811          DC    X'8583A3D38581848599A2D98598A485A2' ectLeadersReques
00006F38 A300C99583998594                   9812          DC    X'A300C995839985948595A38193C193A3' t.IncrementalAlt
00006F48 8599C39695868987                   9813          DC    X'8599C39695868987A2D98598A485A2A3' erConfigsRequest
00006F58 0000C193A38599D7                   9814          DC    X'0000C193A38599D78199A389A3899695' ..AlterPartition
00006F68 D98581A2A2898795                   9815          DC    X'D98581A2A2898795948595A3A2D98598' ReassignmentsReq
00006F78 A485A2A30000D389                   9816          DC    X'A485A2A30000D389A2A3D78199A389A3' uest..ListPartit
00006F88 899695D98581A2A2                   9817          DC    X'899695D98581A2A2898795948595A3A2' ionReassignments
00006F98 D98598A485A2A300                   9818          DC    X'D98598A485A2A300D68686A285A3C485' Request.OffsetDe
00006FA8 9385A385D98598A4                   9819          DC    X'9385A385D98598A485A2A300C485A283' leteRequest.Desc
00006FB8 99898285C3938985                   9820          DC    X'99898285C393898595A3D8A496A381A2' ribeClientQuotas
00006FC8 D98598A485A2A300                   9821          DC    X'D98598A485A2A300C193A38599C39389' Request.AlterCli
00006FD8 8595A3D8A496A381                   9822          DC    X'8595A3D8A496A381A2D98598A485A2A3' entQuotasRequest
00006FE8 0000C485A2839989                   9823          DC    X'0000C485A28399898285E4A28599E283' ..DescribeUserSc
00006FF8 998194C399858485                   9824          DC    X'998194C39985848595A3898193A2D985' ramCredentialsRe
00007008 98A485A2A300C193                   9825          DC    X'98A485A2A300C193A38599E4A28599E2' quest.AlterUserS
00007018 83998194C3998584                   9826          DC    X'83998194C39985848595A3898193A2D9' cramCredentialsR
00007028 8598A485A2A30000                   9827          DC    X'8598A485A2A30000E596A385D98598A4' equest..VoteRequ
00007038 85A2A300C2858789                   9828          DC    X'85A2A300C285878995D8A49699A494C5' est.BeginQuorumE
00007048 97968388D98598A4                   9829          DC    X'97968388D98598A485A2A300C59584D8' pochRequest.EndQ
00007058 A49699A494C59796                   9830          DC    X'A49699A494C597968388D98598A485A2' uorumEpochReques
00007068 A300C485A2839989                   9831          DC    X'A300C485A28399898285D8A49699A494' t.DescribeQuorum
00007078 D98598A485A2A300                   9832          DC    X'D98598A485A2A300C193A38599C9A299' Request.AlterIsr
00007088 D98598A485A2A300                   9833          DC    X'D98598A485A2A300E4978481A385C685' Request.UpdateFe
00007098 81A3A49985A2D985                   9834          DC    X'81A3A49985A2D98598A485A2A300C595' aturesRequest.En
000070A8 A58593969785D985                   9835          DC    X'A58593969785D98598A485A2A3009596' velopeRequest.no
000070B8 9585000087A98997                   9836          DC    X'9585000087A989970000A295819797A8' ne..gzip..snappy
000070C8 000093A9F400A9A2                   9837          DC    X'000093A9F400A9A2A384000089958885' ..lz4.zstd..inhe
000070D8 9989A30083969586                   9838          DC    X'9989A300839695868987A49985840000' rit.configured..
000070E8 9385819995858400                   9839          DC    X'93858199958584008995A38599958193' learned.internal
000070F8 0000939687898381                   9840          DC    X'00009396878983819300C99589A30000' ..logical.Init..
00007108 E3859994899581A3                   9841          DC    X'E3859994899581A38500C681A38193C5' Terminate.FatalE
00007118 999996990000D985                   9842          DC    X'999996990000D98598A485A2A3D7C9C4' rror..RequestPID
00007128 0000E68189A3E399                   9843          DC    X'0000E68189A3E3998195A2979699A300' ..WaitTransport.
00007138 E68189A3D7C9C400                   9844          DC    X'E68189A3D7C9C400C1A2A28987958584' WaitPID.Assigned
00007148 0000C499818995D9                   9845          DC    X'0000C499818995D985A285A30000C499' ..DrainReset..Dr
00007158 818995C2A4949700                   9846          DC    X'818995C2A4949700D9858184A8D596A3' ainBump.ReadyNot
00007168 C18392858400D985                   9847          DC    X'C18392858400D9858184A800C995E399' Acked.Ready.InTr
                                                                                                                           Page  198 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007178 8195A28183A38996                   9848          DC    X'8195A28183A389969500C285878995C3' ansaction.BeginC
00007188 96949489A300C396                   9849          DC    X'96949489A300C396949489A3A3899587' ommit.Committing
00007198 E3998195A28183A3                   9850          DC    X'E3998195A28183A389969500C3969494' Transaction.Comm
000071A8 89A3D596A3C18392                   9851          DC    X'89A3D596A3C1839285840000C1829699' itNotAcked..Abor
000071B8 A3899587E3998195                   9852          DC    X'A3899587E3998195A28183A389969500' tingTransaction.
000071C8 C1829699A38584D5                   9853          DC    X'C1829699A38584D596A3C18392858400' AbortedNotAcked.
000071D8 C1829699A3818293                   9854          DC    X'C1829699A381829385C5999996990000' AbortableError..
                                            9855 *
                                            9856 *
                                            9857 *   Re-entrant Data Initialization Section
                                            9858 *
                                            9859 @@INIT@  ALIAS C'rdkafka_coord:'
000071E8                000071E8 00001040   9860 @@INIT@  CSECT
                                            9861 @@INIT@  AMODE ANY
                                            9862 @@INIT@  RMODE ANY
000071E8 05                                 9863          DC    XL1'5'
000071E9 000000                             9864          DC    AL3(0)
000071EC 00000120                           9865          DC    AL4(288)
000071F0 00000000                           9866          DC    4X'00'
000071F4 00000000                           9867          DC    Q(@@STATIC)
000071F8 00000000                           9868          DC    X'00000000'
000071FC 00000001                           9869          DC    X'00000001'
00007200 00000000                           9870          DC    X'00000000'
00007204 000000FF                           9871          DC    X'000000FF'
00007208 0102039C09867F97                   9872          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00007218 1112139D85088718                   9873          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00007228 818283840A171B88                   9874          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00007238 9116939495960498                   9875          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00007248 A0E2E4E0E1E3E5E7                   9876          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00007258 E9EAEBE8EDEEEFEC                   9877          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00007268 2FC2C4C0C1C3C5C7                   9878          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00007278 C9CACBC8CDCECFCC                   9879          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00007288 6162636465666768                   9880          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00007298 6A6B6C6D6E6F7071                   9881          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
000072A8 7E73747576777879                   9882          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
000072B8 A3A5B7A9A7B6BCBD                   9883          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
000072C8 4142434445464748                   9884          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
000072D8 4A4B4C4D4E4F5051                   9885          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
000072E8 F753545556575859                   9886          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
000072F8 3132333435363738                   9887          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            9888 *
00007308 05                                 9889          DC    XL1'5'
00007309 000000                             9890          DC    AL3(0)
0000730C 000001E0                           9891          DC    AL4(480)
00007310 00000000                           9892          DC    4X'00'
00007314 00000000                           9893          DC    Q(@@STATIC)
00007318 00000000                           9894          DC    X'00000000'
0000731C 00000101                           9895          DC    X'00000101'
00007320 00000000                           9896          DC    X'00000000'
00007324 000000A0                           9897          DC    X'000000A0'
00007328 010203372D2E2F16                   9898          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00007338 1112133C3D322618                   9899          DC    X'1112133C3D322618193F271C1D1E1F40' ................
                                                                                                                           Page  199 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007348 5A7F7B5B6C507D4D                   9900          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00007358 F1F2F3F4F5F6F7F8                   9901          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00007368 C1C2C3C4C5C6C7C8                   9902          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00007378 D8D9E2E3E4E5E6E7                   9903          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00007388 8182838485868788                   9904          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00007398 9899A2A3A4A5A6A7                   9905          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
000073A8 2122232425061728                   9906          DC    X'2122232425061728292A2B2C090A1B30' ................
000073B8 311A333435360838                   9907          DC    X'311A333435360838393A3B04143EFF80' ................
                                            9908 *
000073C8 05                                 9909          DC    XL1'5'
000073C9 000000                             9910          DC    AL3(0)
000073CC 00000208                           9911          DC    AL4(520)
000073D0 00000000                           9912          DC    4X'00'
000073D4 00000000                           9913          DC    Q(@@STATIC)
000073D8 00000000                           9914          DC    X'00000000'
000073DC 000001C0                           9915          DC    X'000001C0'
000073E0 00000000                           9916          DC    X'00000000'
000073E4 00000001                           9917          DC    X'00000001'
000073E8 8A40404040404040                   9918          DC    X'8A40404040404040'                 ........
                                            9919 *
000073F0 05                                 9920          DC    XL1'5'
000073F1 000000                             9921          DC    AL3(0)
000073F4 00000230                           9922          DC    AL4(560)
000073F8 00000000                           9923          DC    4X'00'
000073FC 00000000                           9924          DC    Q(@@STATIC)
00007400 00000000                           9925          DC    X'00000000'
00007404 000001E0                           9926          DC    X'000001E0'
00007408 00000000                           9927          DC    X'00000000'
0000740C 00000001                           9928          DC    X'00000001'
00007410 8B40404040404040                   9929          DC    X'8B40404040404040'                 ........
                                            9930 *
00007418 0D                                 9931          DC    XL1'D'
00007419 000000                             9932          DC    AL3(0)
0000741C 00000258                           9933          DC    AL4(600)
00007420 00000000                           9934          DC    4X'00'
00007424 00000000                           9935          DC    Q(@@STATIC)
00007428 00000000                           9936          DC    X'00000000'
0000742C 00000220                           9937          DC    X'00000220'
00007430 0000000000006860                   9938          DC    ADL8(@DATA)
00007438 00000000                           9939          DC    X'00000000'
0000743C 0000044E                           9940          DC    X'0000044E'
                                            9941 *
00007440 0D                                 9942          DC    XL1'D'
00007441 000000                             9943          DC    AL3(0)
00007444 00000280                           9944          DC    AL4(640)
00007448 00000000                           9945          DC    4X'00'
0000744C 00000000                           9946          DC    Q(@@STATIC)
00007450 00000000                           9947          DC    X'00000000'
00007454 00000228                           9948          DC    X'00000228'
00007458 0000000000006860                   9949          DC    ADL8(@DATA)
00007460 00000000                           9950          DC    X'00000000'
00007464 00000456                           9951          DC    X'00000456'
                                                                                                                           Page  200 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            9952 *
00007468 0D                                 9953          DC    XL1'D'
00007469 000000                             9954          DC    AL3(0)
0000746C 000002A8                           9955          DC    AL4(680)
00007470 00000000                           9956          DC    4X'00'
00007474 00000000                           9957          DC    Q(@@STATIC)
00007478 00000000                           9958          DC    X'00000000'
0000747C 00000230                           9959          DC    X'00000230'
00007480 0000000000006860                   9960          DC    ADL8(@DATA)
00007488 00000000                           9961          DC    X'00000000'
0000748C 0000045C                           9962          DC    X'0000045C'
                                            9963 *
00007490 0D                                 9964          DC    XL1'D'
00007491 000000                             9965          DC    AL3(0)
00007494 000002D0                           9966          DC    AL4(720)
00007498 00000000                           9967          DC    4X'00'
0000749C 00000000                           9968          DC    Q(@@STATIC)
000074A0 00000000                           9969          DC    X'00000000'
000074A4 00000238                           9970          DC    X'00000238'
000074A8 0000000000006860                   9971          DC    ADL8(@DATA)
000074B0 00000000                           9972          DC    X'00000000'
000074B4 00000464                           9973          DC    X'00000464'
                                            9974 *
000074B8 0D                                 9975          DC    XL1'D'
000074B9 000000                             9976          DC    AL3(0)
000074BC 000002F8                           9977          DC    AL4(760)
000074C0 00000000                           9978          DC    4X'00'
000074C4 00000000                           9979          DC    Q(@@STATIC)
000074C8 00000000                           9980          DC    X'00000000'
000074CC 00000240                           9981          DC    X'00000240'
000074D0 0000000000006860                   9982          DC    ADL8(@DATA)
000074D8 00000000                           9983          DC    X'00000000'
000074DC 0000046E                           9984          DC    X'0000046E'
                                            9985 *
000074E0 0D                                 9986          DC    XL1'D'
000074E1 000000                             9987          DC    AL3(0)
000074E4 00000320                           9988          DC    AL4(800)
000074E8 00000000                           9989          DC    4X'00'
000074EC 00000000                           9990          DC    Q(@@STATIC)
000074F0 00000000                           9991          DC    X'00000000'
000074F4 00000248                           9992          DC    X'00000248'
000074F8 0000000000006860                   9993          DC    ADL8(@DATA)
00007500 00000000                           9994          DC    X'00000000'
00007504 0000047C                           9995          DC    X'0000047C'
                                            9996 *
00007508 0D                                 9997          DC    XL1'D'
00007509 000000                             9998          DC    AL3(0)
0000750C 00000348                           9999          DC    AL4(840)
00007510 00000000                          10000          DC    4X'00'
00007514 00000000                          10001          DC    Q(@@STATIC)
00007518 00000000                          10002          DC    X'00000000'
0000751C 00000250                          10003          DC    X'00000250'
                                                                                                                           Page  201 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007520 0000000000006860                  10004          DC    ADL8(@DATA)
00007528 00000000                          10005          DC    X'00000000'
0000752C 00000488                          10006          DC    X'00000488'
                                           10007 *
00007530 0D                                10008          DC    XL1'D'
00007531 000000                            10009          DC    AL3(0)
00007534 00000370                          10010          DC    AL4(880)
00007538 00000000                          10011          DC    4X'00'
0000753C 00000000                          10012          DC    Q(@@STATIC)
00007540 00000000                          10013          DC    X'00000000'
00007544 00000258                          10014          DC    X'00000258'
00007548 0000000000006860                  10015          DC    ADL8(@DATA)
00007550 00000000                          10016          DC    X'00000000'
00007554 00000498                          10017          DC    X'00000498'
                                           10018 *
00007558 0D                                10019          DC    XL1'D'
00007559 000000                            10020          DC    AL3(0)
0000755C 00000398                          10021          DC    AL4(920)
00007560 00000000                          10022          DC    4X'00'
00007564 00000000                          10023          DC    Q(@@STATIC)
00007568 00000000                          10024          DC    X'00000000'
0000756C 00000260                          10025          DC    X'00000260'
00007570 0000000000006860                  10026          DC    ADL8(@DATA)
00007578 00000000                          10027          DC    X'00000000'
0000757C 000004AC                          10028          DC    X'000004AC'
                                           10029 *
00007580 0D                                10030          DC    XL1'D'
00007581 000000                            10031          DC    AL3(0)
00007584 000003C0                          10032          DC    AL4(960)
00007588 00000000                          10033          DC    4X'00'
0000758C 00000000                          10034          DC    Q(@@STATIC)
00007590 00000000                          10035          DC    X'00000000'
00007594 00000268                          10036          DC    X'00000268'
00007598 0000000000006860                  10037          DC    ADL8(@DATA)
000075A0 00000000                          10038          DC    X'00000000'
000075A4 000004BA                          10039          DC    X'000004BA'
                                           10040 *
000075A8 0D                                10041          DC    XL1'D'
000075A9 000000                            10042          DC    AL3(0)
000075AC 000003E8                          10043          DC    AL4(1000)
000075B0 00000000                          10044          DC    4X'00'
000075B4 00000000                          10045          DC    Q(@@STATIC)
000075B8 00000000                          10046          DC    X'00000000'
000075BC 00000270                          10047          DC    X'00000270'
000075C0 0000000000006860                  10048          DC    ADL8(@DATA)
000075C8 00000000                          10049          DC    X'00000000'
000075CC 000004C6                          10050          DC    X'000004C6'
                                           10051 *
000075D0 0D                                10052          DC    XL1'D'
000075D1 000000                            10053          DC    AL3(0)
000075D4 00000410                          10054          DC    AL4(1040)
000075D8 00000000                          10055          DC    4X'00'
                                                                                                                           Page  202 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000075DC 00000000                          10056          DC    Q(@@STATIC)
000075E0 00000000                          10057          DC    X'00000000'
000075E4 00000278                          10058          DC    X'00000278'
000075E8 0000000000006860                  10059          DC    ADL8(@DATA)
000075F0 00000000                          10060          DC    X'00000000'
000075F4 000004D6                          10061          DC    X'000004D6'
                                           10062 *
000075F8 0D                                10063          DC    XL1'D'
000075F9 000000                            10064          DC    AL3(0)
000075FC 00000438                          10065          DC    AL4(1080)
00007600 00000000                          10066          DC    4X'00'
00007604 00000000                          10067          DC    Q(@@STATIC)
00007608 00000000                          10068          DC    X'00000000'
0000760C 00000280                          10069          DC    X'00000280'
00007610 0000000000006860                  10070          DC    ADL8(@DATA)
00007618 00000000                          10071          DC    X'00000000'
0000761C 000004E0                          10072          DC    X'000004E0'
                                           10073 *
00007620 0D                                10074          DC    XL1'D'
00007621 000000                            10075          DC    AL3(0)
00007624 00000460                          10076          DC    AL4(1120)
00007628 00000000                          10077          DC    4X'00'
0000762C 00000000                          10078          DC    Q(@@STATIC)
00007630 00000000                          10079          DC    X'00000000'
00007634 00000288                          10080          DC    X'00000288'
00007638 0000000000006860                  10081          DC    ADL8(@DATA)
00007640 00000000                          10082          DC    X'00000000'
00007644 000004EA                          10083          DC    X'000004EA'
                                           10084 *
00007648 0D                                10085          DC    XL1'D'
00007649 000000                            10086          DC    AL3(0)
0000764C 00000488                          10087          DC    AL4(1160)
00007650 00000000                          10088          DC    4X'00'
00007654 00000000                          10089          DC    Q(@@STATIC)
00007658 00000000                          10090          DC    X'00000000'
0000765C 00000290                          10091          DC    X'00000290'
00007660 0000000000006860                  10092          DC    ADL8(@DATA)
00007668 00000000                          10093          DC    X'00000000'
0000766C 000004F6                          10094          DC    X'000004F6'
                                           10095 *
00007670 0D                                10096          DC    XL1'D'
00007671 000000                            10097          DC    AL3(0)
00007674 000004B0                          10098          DC    AL4(1200)
00007678 00000000                          10099          DC    4X'00'
0000767C 00000000                          10100          DC    Q(@@STATIC)
00007680 00000000                          10101          DC    X'00000000'
00007684 00000298                          10102          DC    X'00000298'
00007688 0000000000006860                  10103          DC    ADL8(@DATA)
00007690 00000000                          10104          DC    X'00000000'
00007694 00000500                          10105          DC    X'00000500'
                                           10106 *
00007698 0D                                10107          DC    XL1'D'
                                                                                                                           Page  203 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007699 000000                            10108          DC    AL3(0)
0000769C 000004D8                          10109          DC    AL4(1240)
000076A0 00000000                          10110          DC    4X'00'
000076A4 00000000                          10111          DC    Q(@@STATIC)
000076A8 00000000                          10112          DC    X'00000000'
000076AC 000002A0                          10113          DC    X'000002A0'
000076B0 0000000000006860                  10114          DC    ADL8(@DATA)
000076B8 00000000                          10115          DC    X'00000000'
000076BC 00000510                          10116          DC    X'00000510'
                                           10117 *
000076C0 0D                                10118          DC    XL1'D'
000076C1 000000                            10119          DC    AL3(0)
000076C4 00000500                          10120          DC    AL4(1280)
000076C8 00000000                          10121          DC    4X'00'
000076CC 00000000                          10122          DC    Q(@@STATIC)
000076D0 00000000                          10123          DC    X'00000000'
000076D4 000002A8                          10124          DC    X'000002A8'
000076D8 0000000000006860                  10125          DC    ADL8(@DATA)
000076E0 00000000                          10126          DC    X'00000000'
000076E4 0000051C                          10127          DC    X'0000051C'
                                           10128 *
000076E8 0D                                10129          DC    XL1'D'
000076E9 000000                            10130          DC    AL3(0)
000076EC 00000528                          10131          DC    AL4(1320)
000076F0 00000000                          10132          DC    4X'00'
000076F4 00000000                          10133          DC    Q(@@STATIC)
000076F8 00000000                          10134          DC    X'00000000'
000076FC 000002B0                          10135          DC    X'000002B0'
00007700 0000000000006860                  10136          DC    ADL8(@DATA)
00007708 00000000                          10137          DC    X'00000000'
0000770C 0000052A                          10138          DC    X'0000052A'
                                           10139 *
00007710 0D                                10140          DC    XL1'D'
00007711 000000                            10141          DC    AL3(0)
00007714 00000550                          10142          DC    AL4(1360)
00007718 00000000                          10143          DC    4X'00'
0000771C 00000000                          10144          DC    Q(@@STATIC)
00007720 00000000                          10145          DC    X'00000000'
00007724 000002B8                          10146          DC    X'000002B8'
00007728 0000000000006860                  10147          DC    ADL8(@DATA)
00007730 00000000                          10148          DC    X'00000000'
00007734 00000536                          10149          DC    X'00000536'
                                           10150 *
00007738 0D                                10151          DC    XL1'D'
00007739 000000                            10152          DC    AL3(0)
0000773C 00000578                          10153          DC    AL4(1400)
00007740 00000000                          10154          DC    4X'00'
00007744 00000000                          10155          DC    Q(@@STATIC)
00007748 00000000                          10156          DC    X'00000000'
0000774C 000002C0                          10157          DC    X'000002C0'
00007750 0000000000006860                  10158          DC    ADL8(@DATA)
00007758 00000000                          10159          DC    X'00000000'
                                                                                                                           Page  204 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000775C 00000544                          10160          DC    X'00000544'
                                           10161 *
00007760 0D                                10162          DC    XL1'D'
00007761 000000                            10163          DC    AL3(0)
00007764 000005A0                          10164          DC    AL4(1440)
00007768 00000000                          10165          DC    4X'00'
0000776C 00000000                          10166          DC    Q(@@STATIC)
00007770 00000000                          10167          DC    X'00000000'
00007774 000002C8                          10168          DC    X'000002C8'
00007778 0000000000006860                  10169          DC    ADL8(@DATA)
00007780 00000000                          10170          DC    X'00000000'
00007784 00000552                          10171          DC    X'00000552'
                                           10172 *
00007788 0D                                10173          DC    XL1'D'
00007789 000000                            10174          DC    AL3(0)
0000778C 000005C8                          10175          DC    AL4(1480)
00007790 00000000                          10176          DC    4X'00'
00007794 00000000                          10177          DC    Q(@@STATIC)
00007798 00000000                          10178          DC    X'00000000'
0000779C 000002D0                          10179          DC    X'000002D0'
000077A0 0000000000006860                  10180          DC    ADL8(@DATA)
000077A8 00000000                          10181          DC    X'00000000'
000077AC 00000560                          10182          DC    X'00000560'
                                           10183 *
000077B0 0D                                10184          DC    XL1'D'
000077B1 000000                            10185          DC    AL3(0)
000077B4 000005F0                          10186          DC    AL4(1520)
000077B8 00000000                          10187          DC    4X'00'
000077BC 00000000                          10188          DC    Q(@@STATIC)
000077C0 00000000                          10189          DC    X'00000000'
000077C4 000002D8                          10190          DC    X'000002D8'
000077C8 0000000000006860                  10191          DC    ADL8(@DATA)
000077D0 00000000                          10192          DC    X'00000000'
000077D4 00000570                          10193          DC    X'00000570'
                                           10194 *
000077D8 0D                                10195          DC    XL1'D'
000077D9 000000                            10196          DC    AL3(0)
000077DC 00000618                          10197          DC    AL4(1560)
000077E0 00000000                          10198          DC    4X'00'
000077E4 00000000                          10199          DC    Q(@@STATIC)
000077E8 00000000                          10200          DC    X'00000000'
000077EC 000002E0                          10201          DC    X'000002E0'
000077F0 0000000000006860                  10202          DC    ADL8(@DATA)
000077F8 00000000                          10203          DC    X'00000000'
000077FC 00000586                          10204          DC    X'00000586'
                                           10205 *
00007800 0D                                10206          DC    XL1'D'
00007801 000000                            10207          DC    AL3(0)
00007804 00000640                          10208          DC    AL4(1600)
00007808 00000000                          10209          DC    4X'00'
0000780C 00000000                          10210          DC    Q(@@STATIC)
00007810 00000000                          10211          DC    X'00000000'
                                                                                                                           Page  205 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007814 000002E8                          10212          DC    X'000002E8'
00007818 0000000000006860                  10213          DC    ADL8(@DATA)
00007820 00000000                          10214          DC    X'00000000'
00007824 0000059A                          10215          DC    X'0000059A'
                                           10216 *
00007828 0D                                10217          DC    XL1'D'
00007829 000000                            10218          DC    AL3(0)
0000782C 00000668                          10219          DC    AL4(1640)
00007830 00000000                          10220          DC    4X'00'
00007834 00000000                          10221          DC    Q(@@STATIC)
00007838 00000000                          10222          DC    X'00000000'
0000783C 000002F0                          10223          DC    X'000002F0'
00007840 0000000000006860                  10224          DC    ADL8(@DATA)
00007848 00000000                          10225          DC    X'00000000'
0000784C 000005AA                          10226          DC    X'000005AA'
                                           10227 *
00007850 0D                                10228          DC    XL1'D'
00007851 000000                            10229          DC    AL3(0)
00007854 00000690                          10230          DC    AL4(1680)
00007858 00000000                          10231          DC    4X'00'
0000785C 00000000                          10232          DC    Q(@@STATIC)
00007860 00000000                          10233          DC    X'00000000'
00007864 000002F8                          10234          DC    X'000002F8'
00007868 0000000000006860                  10235          DC    ADL8(@DATA)
00007870 00000000                          10236          DC    X'00000000'
00007874 000005B2                          10237          DC    X'000005B2'
                                           10238 *
00007878 0D                                10239          DC    XL1'D'
00007879 000000                            10240          DC    AL3(0)
0000787C 000006B8                          10241          DC    AL4(1720)
00007880 00000000                          10242          DC    4X'00'
00007884 00000000                          10243          DC    Q(@@STATIC)
00007888 00000000                          10244          DC    X'00000000'
0000788C 00000300                          10245          DC    X'00000300'
00007890 0000000000006860                  10246          DC    ADL8(@DATA)
00007898 00000000                          10247          DC    X'00000000'
0000789C 000005C2                          10248          DC    X'000005C2'
                                           10249 *
000078A0 0D                                10250          DC    XL1'D'
000078A1 000000                            10251          DC    AL3(0)
000078A4 000006E0                          10252          DC    AL4(1760)
000078A8 00000000                          10253          DC    4X'00'
000078AC 00000000                          10254          DC    Q(@@STATIC)
000078B0 00000000                          10255          DC    X'00000000'
000078B4 00000308                          10256          DC    X'00000308'
000078B8 0000000000006860                  10257          DC    ADL8(@DATA)
000078C0 00000000                          10258          DC    X'00000000'
000078C4 000005D2                          10259          DC    X'000005D2'
                                           10260 *
000078C8 0D                                10261          DC    XL1'D'
000078C9 000000                            10262          DC    AL3(0)
000078CC 00000708                          10263          DC    AL4(1800)
                                                                                                                           Page  206 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000078D0 00000000                          10264          DC    4X'00'
000078D4 00000000                          10265          DC    Q(@@STATIC)
000078D8 00000000                          10266          DC    X'00000000'
000078DC 00000310                          10267          DC    X'00000310'
000078E0 0000000000006860                  10268          DC    ADL8(@DATA)
000078E8 00000000                          10269          DC    X'00000000'
000078EC 000005E0                          10270          DC    X'000005E0'
                                           10271 *
000078F0 0D                                10272          DC    XL1'D'
000078F1 000000                            10273          DC    AL3(0)
000078F4 00000730                          10274          DC    AL4(1840)
000078F8 00000000                          10275          DC    4X'00'
000078FC 00000000                          10276          DC    Q(@@STATIC)
00007900 00000000                          10277          DC    X'00000000'
00007904 00000318                          10278          DC    X'00000318'
00007908 0000000000006860                  10279          DC    ADL8(@DATA)
00007910 00000000                          10280          DC    X'00000000'
00007914 000005EC                          10281          DC    X'000005EC'
                                           10282 *
00007918 0D                                10283          DC    XL1'D'
00007919 000000                            10284          DC    AL3(0)
0000791C 00000758                          10285          DC    AL4(1880)
00007920 00000000                          10286          DC    4X'00'
00007924 00000000                          10287          DC    Q(@@STATIC)
00007928 00000000                          10288          DC    X'00000000'
0000792C 00000320                          10289          DC    X'00000320'
00007930 0000000000006860                  10290          DC    ADL8(@DATA)
00007938 00000000                          10291          DC    X'00000000'
0000793C 000005F8                          10292          DC    X'000005F8'
                                           10293 *
00007940 0D                                10294          DC    XL1'D'
00007941 000000                            10295          DC    AL3(0)
00007944 00000780                          10296          DC    AL4(1920)
00007948 00000000                          10297          DC    4X'00'
0000794C 00000000                          10298          DC    Q(@@STATIC)
00007950 00000000                          10299          DC    X'00000000'
00007954 00000328                          10300          DC    X'00000328'
00007958 0000000000006860                  10301          DC    ADL8(@DATA)
00007960 00000000                          10302          DC    X'00000000'
00007964 00000608                          10303          DC    X'00000608'
                                           10304 *
00007968 0D                                10305          DC    XL1'D'
00007969 000000                            10306          DC    AL3(0)
0000796C 000007A8                          10307          DC    AL4(1960)
00007970 00000000                          10308          DC    4X'00'
00007974 00000000                          10309          DC    Q(@@STATIC)
00007978 00000000                          10310          DC    X'00000000'
0000797C 00000330                          10311          DC    X'00000330'
00007980 0000000000006860                  10312          DC    ADL8(@DATA)
00007988 00000000                          10313          DC    X'00000000'
0000798C 00000616                          10314          DC    X'00000616'
                                           10315 *
                                                                                                                           Page  207 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007990 0D                                10316          DC    XL1'D'
00007991 000000                            10317          DC    AL3(0)
00007994 000007D0                          10318          DC    AL4(2000)
00007998 00000000                          10319          DC    4X'00'
0000799C 00000000                          10320          DC    Q(@@STATIC)
000079A0 00000000                          10321          DC    X'00000000'
000079A4 00000338                          10322          DC    X'00000338'
000079A8 0000000000006860                  10323          DC    ADL8(@DATA)
000079B0 00000000                          10324          DC    X'00000000'
000079B4 0000062A                          10325          DC    X'0000062A'
                                           10326 *
000079B8 0D                                10327          DC    XL1'D'
000079B9 000000                            10328          DC    AL3(0)
000079BC 000007F8                          10329          DC    AL4(2040)
000079C0 00000000                          10330          DC    4X'00'
000079C4 00000000                          10331          DC    Q(@@STATIC)
000079C8 00000000                          10332          DC    X'00000000'
000079CC 00000340                          10333          DC    X'00000340'
000079D0 0000000000006860                  10334          DC    ADL8(@DATA)
000079D8 00000000                          10335          DC    X'00000000'
000079DC 0000063A                          10336          DC    X'0000063A'
                                           10337 *
000079E0 0D                                10338          DC    XL1'D'
000079E1 000000                            10339          DC    AL3(0)
000079E4 00000820                          10340          DC    AL4(2080)
000079E8 00000000                          10341          DC    4X'00'
000079EC 00000000                          10342          DC    Q(@@STATIC)
000079F0 00000000                          10343          DC    X'00000000'
000079F4 00000348                          10344          DC    X'00000348'
000079F8 0000000000006860                  10345          DC    ADL8(@DATA)
00007A00 00000000                          10346          DC    X'00000000'
00007A04 0000064C                          10347          DC    X'0000064C'
                                           10348 *
00007A08 0D                                10349          DC    XL1'D'
00007A09 000000                            10350          DC    AL3(0)
00007A0C 00000848                          10351          DC    AL4(2120)
00007A10 00000000                          10352          DC    4X'00'
00007A14 00000000                          10353          DC    Q(@@STATIC)
00007A18 00000000                          10354          DC    X'00000000'
00007A1C 00000350                          10355          DC    X'00000350'
00007A20 0000000000006860                  10356          DC    ADL8(@DATA)
00007A28 00000000                          10357          DC    X'00000000'
00007A2C 0000065E                          10358          DC    X'0000065E'
                                           10359 *
00007A30 0D                                10360          DC    XL1'D'
00007A31 000000                            10361          DC    AL3(0)
00007A34 00000870                          10362          DC    AL4(2160)
00007A38 00000000                          10363          DC    4X'00'
00007A3C 00000000                          10364          DC    Q(@@STATIC)
00007A40 00000000                          10365          DC    X'00000000'
00007A44 00000358                          10366          DC    X'00000358'
00007A48 0000000000006860                  10367          DC    ADL8(@DATA)
                                                                                                                           Page  208 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007A50 00000000                          10368          DC    X'00000000'
00007A54 00000674                          10369          DC    X'00000674'
                                           10370 *
00007A58 0D                                10371          DC    XL1'D'
00007A59 000000                            10372          DC    AL3(0)
00007A5C 00000898                          10373          DC    AL4(2200)
00007A60 00000000                          10374          DC    4X'00'
00007A64 00000000                          10375          DC    Q(@@STATIC)
00007A68 00000000                          10376          DC    X'00000000'
00007A6C 00000360                          10377          DC    X'00000360'
00007A70 0000000000006860                  10378          DC    ADL8(@DATA)
00007A78 00000000                          10379          DC    X'00000000'
00007A7C 0000068A                          10380          DC    X'0000068A'
                                           10381 *
00007A80 0D                                10382          DC    XL1'D'
00007A81 000000                            10383          DC    AL3(0)
00007A84 000008C0                          10384          DC    AL4(2240)
00007A88 00000000                          10385          DC    4X'00'
00007A8C 00000000                          10386          DC    Q(@@STATIC)
00007A90 00000000                          10387          DC    X'00000000'
00007A94 00000368                          10388          DC    X'00000368'
00007A98 0000000000006860                  10389          DC    ADL8(@DATA)
00007AA0 00000000                          10390          DC    X'00000000'
00007AA4 000006A0                          10391          DC    X'000006A0'
                                           10392 *
00007AA8 0D                                10393          DC    XL1'D'
00007AA9 000000                            10394          DC    AL3(0)
00007AAC 000008E8                          10395          DC    AL4(2280)
00007AB0 00000000                          10396          DC    4X'00'
00007AB4 00000000                          10397          DC    Q(@@STATIC)
00007AB8 00000000                          10398          DC    X'00000000'
00007ABC 00000370                          10399          DC    X'00000370'
00007AC0 0000000000006860                  10400          DC    ADL8(@DATA)
00007AC8 00000000                          10401          DC    X'00000000'
00007ACC 000006B8                          10402          DC    X'000006B8'
                                           10403 *
00007AD0 0D                                10404          DC    XL1'D'
00007AD1 000000                            10405          DC    AL3(0)
00007AD4 00000910                          10406          DC    AL4(2320)
00007AD8 00000000                          10407          DC    4X'00'
00007ADC 00000000                          10408          DC    Q(@@STATIC)
00007AE0 00000000                          10409          DC    X'00000000'
00007AE4 00000378                          10410          DC    X'00000378'
00007AE8 0000000000006860                  10411          DC    ADL8(@DATA)
00007AF0 00000000                          10412          DC    X'00000000'
00007AF4 000006C6                          10413          DC    X'000006C6'
                                           10414 *
00007AF8 0D                                10415          DC    XL1'D'
00007AF9 000000                            10416          DC    AL3(0)
00007AFC 00000938                          10417          DC    AL4(2360)
00007B00 00000000                          10418          DC    4X'00'
00007B04 00000000                          10419          DC    Q(@@STATIC)
                                                                                                                           Page  209 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007B08 00000000                          10420          DC    X'00000000'
00007B0C 00000380                          10421          DC    X'00000380'
00007B10 0000000000006860                  10422          DC    ADL8(@DATA)
00007B18 00000000                          10423          DC    X'00000000'
00007B1C 000006DA                          10424          DC    X'000006DA'
                                           10425 *
00007B20 0D                                10426          DC    XL1'D'
00007B21 000000                            10427          DC    AL3(0)
00007B24 00000960                          10428          DC    AL4(2400)
00007B28 00000000                          10429          DC    4X'00'
00007B2C 00000000                          10430          DC    Q(@@STATIC)
00007B30 00000000                          10431          DC    X'00000000'
00007B34 00000388                          10432          DC    X'00000388'
00007B38 0000000000006860                  10433          DC    ADL8(@DATA)
00007B40 00000000                          10434          DC    X'00000000'
00007B44 000006FA                          10435          DC    X'000006FA'
                                           10436 *
00007B48 0D                                10437          DC    XL1'D'
00007B49 000000                            10438          DC    AL3(0)
00007B4C 00000988                          10439          DC    AL4(2440)
00007B50 00000000                          10440          DC    4X'00'
00007B54 00000000                          10441          DC    Q(@@STATIC)
00007B58 00000000                          10442          DC    X'00000000'
00007B5C 00000390                          10443          DC    X'00000390'
00007B60 0000000000006860                  10444          DC    ADL8(@DATA)
00007B68 00000000                          10445          DC    X'00000000'
00007B6C 0000071E                          10446          DC    X'0000071E'
                                           10447 *
00007B70 0D                                10448          DC    XL1'D'
00007B71 000000                            10449          DC    AL3(0)
00007B74 000009B0                          10450          DC    AL4(2480)
00007B78 00000000                          10451          DC    4X'00'
00007B7C 00000000                          10452          DC    Q(@@STATIC)
00007B80 00000000                          10453          DC    X'00000000'
00007B84 00000398                          10454          DC    X'00000398'
00007B88 0000000000006860                  10455          DC    ADL8(@DATA)
00007B90 00000000                          10456          DC    X'00000000'
00007B94 00000740                          10457          DC    X'00000740'
                                           10458 *
00007B98 0D                                10459          DC    XL1'D'
00007B99 000000                            10460          DC    AL3(0)
00007B9C 000009D8                          10461          DC    AL4(2520)
00007BA0 00000000                          10462          DC    4X'00'
00007BA4 00000000                          10463          DC    Q(@@STATIC)
00007BA8 00000000                          10464          DC    X'00000000'
00007BAC 000003A0                          10465          DC    X'000003A0'
00007BB0 0000000000006860                  10466          DC    ADL8(@DATA)
00007BB8 00000000                          10467          DC    X'00000000'
00007BBC 00000754                          10468          DC    X'00000754'
                                           10469 *
00007BC0 0D                                10470          DC    XL1'D'
00007BC1 000000                            10471          DC    AL3(0)
                                                                                                                           Page  210 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007BC4 00000A00                          10472          DC    AL4(2560)
00007BC8 00000000                          10473          DC    4X'00'
00007BCC 00000000                          10474          DC    Q(@@STATIC)
00007BD0 00000000                          10475          DC    X'00000000'
00007BD4 000003A8                          10476          DC    X'000003A8'
00007BD8 0000000000006860                  10477          DC    ADL8(@DATA)
00007BE0 00000000                          10478          DC    X'00000000'
00007BE4 00000770                          10479          DC    X'00000770'
                                           10480 *
00007BE8 0D                                10481          DC    XL1'D'
00007BE9 000000                            10482          DC    AL3(0)
00007BEC 00000A28                          10483          DC    AL4(2600)
00007BF0 00000000                          10484          DC    4X'00'
00007BF4 00000000                          10485          DC    Q(@@STATIC)
00007BF8 00000000                          10486          DC    X'00000000'
00007BFC 000003B0                          10487          DC    X'000003B0'
00007C00 0000000000006860                  10488          DC    ADL8(@DATA)
00007C08 00000000                          10489          DC    X'00000000'
00007C0C 0000078A                          10490          DC    X'0000078A'
                                           10491 *
00007C10 0D                                10492          DC    XL1'D'
00007C11 000000                            10493          DC    AL3(0)
00007C14 00000A50                          10494          DC    AL4(2640)
00007C18 00000000                          10495          DC    4X'00'
00007C1C 00000000                          10496          DC    Q(@@STATIC)
00007C20 00000000                          10497          DC    X'00000000'
00007C24 000003B8                          10498          DC    X'000003B8'
00007C28 0000000000006860                  10499          DC    ADL8(@DATA)
00007C30 00000000                          10500          DC    X'00000000'
00007C34 000007AE                          10501          DC    X'000007AE'
                                           10502 *
00007C38 0D                                10503          DC    XL1'D'
00007C39 000000                            10504          DC    AL3(0)
00007C3C 00000A78                          10505          DC    AL4(2680)
00007C40 00000000                          10506          DC    4X'00'
00007C44 00000000                          10507          DC    Q(@@STATIC)
00007C48 00000000                          10508          DC    X'00000000'
00007C4C 000003C0                          10509          DC    X'000003C0'
00007C50 0000000000006860                  10510          DC    ADL8(@DATA)
00007C58 00000000                          10511          DC    X'00000000'
00007C5C 000007D0                          10512          DC    X'000007D0'
                                           10513 *
00007C60 0D                                10514          DC    XL1'D'
00007C61 000000                            10515          DC    AL3(0)
00007C64 00000AA0                          10516          DC    AL4(2720)
00007C68 00000000                          10517          DC    4X'00'
00007C6C 00000000                          10518          DC    Q(@@STATIC)
00007C70 00000000                          10519          DC    X'00000000'
00007C74 000003C8                          10520          DC    X'000003C8'
00007C78 0000000000006860                  10521          DC    ADL8(@DATA)
00007C80 00000000                          10522          DC    X'00000000'
00007C84 000007DC                          10523          DC    X'000007DC'
                                                                                                                           Page  211 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                           10524 *
00007C88 0D                                10525          DC    XL1'D'
00007C89 000000                            10526          DC    AL3(0)
00007C8C 00000AC8                          10527          DC    AL4(2760)
00007C90 00000000                          10528          DC    4X'00'
00007C94 00000000                          10529          DC    Q(@@STATIC)
00007C98 00000000                          10530          DC    X'00000000'
00007C9C 000003D0                          10531          DC    X'000003D0'
00007CA0 0000000000006860                  10532          DC    ADL8(@DATA)
00007CA8 00000000                          10533          DC    X'00000000'
00007CAC 000007F4                          10534          DC    X'000007F4'
                                           10535 *
00007CB0 0D                                10536          DC    XL1'D'
00007CB1 000000                            10537          DC    AL3(0)
00007CB4 00000AF0                          10538          DC    AL4(2800)
00007CB8 00000000                          10539          DC    4X'00'
00007CBC 00000000                          10540          DC    Q(@@STATIC)
00007CC0 00000000                          10541          DC    X'00000000'
00007CC4 000003D8                          10542          DC    X'000003D8'
00007CC8 0000000000006860                  10543          DC    ADL8(@DATA)
00007CD0 00000000                          10544          DC    X'00000000'
00007CD4 0000080A                          10545          DC    X'0000080A'
                                           10546 *
00007CD8 0D                                10547          DC    XL1'D'
00007CD9 000000                            10548          DC    AL3(0)
00007CDC 00000B18                          10549          DC    AL4(2840)
00007CE0 00000000                          10550          DC    4X'00'
00007CE4 00000000                          10551          DC    Q(@@STATIC)
00007CE8 00000000                          10552          DC    X'00000000'
00007CEC 000003E0                          10553          DC    X'000003E0'
00007CF0 0000000000006860                  10554          DC    ADL8(@DATA)
00007CF8 00000000                          10555          DC    X'00000000'
00007CFC 00000820                          10556          DC    X'00000820'
                                           10557 *
00007D00 0D                                10558          DC    XL1'D'
00007D01 000000                            10559          DC    AL3(0)
00007D04 00000B40                          10560          DC    AL4(2880)
00007D08 00000000                          10561          DC    4X'00'
00007D0C 00000000                          10562          DC    Q(@@STATIC)
00007D10 00000000                          10563          DC    X'00000000'
00007D14 000003E8                          10564          DC    X'000003E8'
00007D18 0000000000006860                  10565          DC    ADL8(@DATA)
00007D20 00000000                          10566          DC    X'00000000'
00007D24 00000830                          10567          DC    X'00000830'
                                           10568 *
00007D28 0D                                10569          DC    XL1'D'
00007D29 000000                            10570          DC    AL3(0)
00007D2C 00000B68                          10571          DC    AL4(2920)
00007D30 00000000                          10572          DC    4X'00'
00007D34 00000000                          10573          DC    Q(@@STATIC)
00007D38 00000000                          10574          DC    X'00000000'
00007D3C 000003F0                          10575          DC    X'000003F0'
                                                                                                                           Page  212 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007D40 0000000000006860                  10576          DC    ADL8(@DATA)
00007D48 00000000                          10577          DC    X'00000000'
00007D4C 00000846                          10578          DC    X'00000846'
                                           10579 *
00007D50 0D                                10580          DC    XL1'D'
00007D51 000000                            10581          DC    AL3(0)
00007D54 00000B90                          10582          DC    AL4(2960)
00007D58 00000000                          10583          DC    4X'00'
00007D5C 00000000                          10584          DC    Q(@@STATIC)
00007D60 00000000                          10585          DC    X'00000000'
00007D64 000004C0                          10586          DC    X'000004C0'
00007D68 0000000000006860                  10587          DC    ADL8(@DATA)
00007D70 00000000                          10588          DC    X'00000000'
00007D74 00000856                          10589          DC    X'00000856'
                                           10590 *
00007D78 0D                                10591          DC    XL1'D'
00007D79 000000                            10592          DC    AL3(0)
00007D7C 00000BB8                          10593          DC    AL4(3000)
00007D80 00000000                          10594          DC    4X'00'
00007D84 00000000                          10595          DC    Q(@@STATIC)
00007D88 00000000                          10596          DC    X'00000000'
00007D8C 000004C8                          10597          DC    X'000004C8'
00007D90 0000000000006860                  10598          DC    ADL8(@DATA)
00007D98 00000000                          10599          DC    X'00000000'
00007D9C 0000085C                          10600          DC    X'0000085C'
                                           10601 *
00007DA0 0D                                10602          DC    XL1'D'
00007DA1 000000                            10603          DC    AL3(0)
00007DA4 00000BE0                          10604          DC    AL4(3040)
00007DA8 00000000                          10605          DC    4X'00'
00007DAC 00000000                          10606          DC    Q(@@STATIC)
00007DB0 00000000                          10607          DC    X'00000000'
00007DB4 000004D0                          10608          DC    X'000004D0'
00007DB8 0000000000006860                  10609          DC    ADL8(@DATA)
00007DC0 00000000                          10610          DC    X'00000000'
00007DC4 00000862                          10611          DC    X'00000862'
                                           10612 *
00007DC8 0D                                10613          DC    XL1'D'
00007DC9 000000                            10614          DC    AL3(0)
00007DCC 00000C08                          10615          DC    AL4(3080)
00007DD0 00000000                          10616          DC    4X'00'
00007DD4 00000000                          10617          DC    Q(@@STATIC)
00007DD8 00000000                          10618          DC    X'00000000'
00007DDC 000004D8                          10619          DC    X'000004D8'
00007DE0 0000000000006860                  10620          DC    ADL8(@DATA)
00007DE8 00000000                          10621          DC    X'00000000'
00007DEC 0000086A                          10622          DC    X'0000086A'
                                           10623 *
00007DF0 0D                                10624          DC    XL1'D'
00007DF1 000000                            10625          DC    AL3(0)
00007DF4 00000C30                          10626          DC    AL4(3120)
00007DF8 00000000                          10627          DC    4X'00'
                                                                                                                           Page  213 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007DFC 00000000                          10628          DC    Q(@@STATIC)
00007E00 00000000                          10629          DC    X'00000000'
00007E04 000004E0                          10630          DC    X'000004E0'
00007E08 0000000000006860                  10631          DC    ADL8(@DATA)
00007E10 00000000                          10632          DC    X'00000000'
00007E14 0000086E                          10633          DC    X'0000086E'
                                           10634 *
00007E18 0D                                10635          DC    XL1'D'
00007E19 000000                            10636          DC    AL3(0)
00007E1C 00000C58                          10637          DC    AL4(3160)
00007E20 00000000                          10638          DC    4X'00'
00007E24 00000000                          10639          DC    Q(@@STATIC)
00007E28 00000000                          10640          DC    X'00000000'
00007E2C 000004E8                          10641          DC    X'000004E8'
00007E30 0000000000006860                  10642          DC    ADL8(@DATA)
00007E38 00000000                          10643          DC    X'00000000'
00007E3C 00000874                          10644          DC    X'00000874'
                                           10645 *
00007E40 0D                                10646          DC    XL1'D'
00007E41 000000                            10647          DC    AL3(0)
00007E44 00000C80                          10648          DC    AL4(3200)
00007E48 00000000                          10649          DC    4X'00'
00007E4C 00000000                          10650          DC    Q(@@STATIC)
00007E50 00000000                          10651          DC    X'00000000'
00007E54 00000510                          10652          DC    X'00000510'
00007E58 0000000000006860                  10653          DC    ADL8(@DATA)
00007E60 00000000                          10654          DC    X'00000000'
00007E64 0000087C                          10655          DC    X'0000087C'
                                           10656 *
00007E68 0D                                10657          DC    XL1'D'
00007E69 000000                            10658          DC    AL3(0)
00007E6C 00000CA8                          10659          DC    AL4(3240)
00007E70 00000000                          10660          DC    4X'00'
00007E74 00000000                          10661          DC    Q(@@STATIC)
00007E78 00000000                          10662          DC    X'00000000'
00007E7C 00000518                          10663          DC    X'00000518'
00007E80 0000000000006860                  10664          DC    ADL8(@DATA)
00007E88 00000000                          10665          DC    X'00000000'
00007E8C 00000888                          10666          DC    X'00000888'
                                           10667 *
00007E90 0D                                10668          DC    XL1'D'
00007E91 000000                            10669          DC    AL3(0)
00007E94 00000CD0                          10670          DC    AL4(3280)
00007E98 00000000                          10671          DC    4X'00'
00007E9C 00000000                          10672          DC    Q(@@STATIC)
00007EA0 00000000                          10673          DC    X'00000000'
00007EA4 00000520                          10674          DC    X'00000520'
00007EA8 0000000000006860                  10675          DC    ADL8(@DATA)
00007EB0 00000000                          10676          DC    X'00000000'
00007EB4 00000890                          10677          DC    X'00000890'
                                           10678 *
00007EB8 0D                                10679          DC    XL1'D'
                                                                                                                           Page  214 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007EB9 000000                            10680          DC    AL3(0)
00007EBC 00000CF8                          10681          DC    AL4(3320)
00007EC0 00000000                          10682          DC    4X'00'
00007EC4 00000000                          10683          DC    Q(@@STATIC)
00007EC8 00000000                          10684          DC    X'00000000'
00007ECC 00000528                          10685          DC    X'00000528'
00007ED0 0000000000006860                  10686          DC    ADL8(@DATA)
00007ED8 00000000                          10687          DC    X'00000000'
00007EDC 0000089A                          10688          DC    X'0000089A'
                                           10689 *
00007EE0 0D                                10690          DC    XL1'D'
00007EE1 000000                            10691          DC    AL3(0)
00007EE4 00000D20                          10692          DC    AL4(3360)
00007EE8 00000000                          10693          DC    4X'00'
00007EEC 00000000                          10694          DC    Q(@@STATIC)
00007EF0 00000000                          10695          DC    X'00000000'
00007EF4 00000630                          10696          DC    X'00000630'
00007EF8 0000000000006860                  10697          DC    ADL8(@DATA)
00007F00 00000000                          10698          DC    X'00000000'
00007F04 000008A2                          10699          DC    X'000008A2'
                                           10700 *
00007F08 0D                                10701          DC    XL1'D'
00007F09 000000                            10702          DC    AL3(0)
00007F0C 00000D48                          10703          DC    AL4(3400)
00007F10 00000000                          10704          DC    4X'00'
00007F14 00000000                          10705          DC    Q(@@STATIC)
00007F18 00000000                          10706          DC    X'00000000'
00007F1C 00000638                          10707          DC    X'00000638'
00007F20 0000000000006860                  10708          DC    ADL8(@DATA)
00007F28 00000000                          10709          DC    X'00000000'
00007F2C 000008A8                          10710          DC    X'000008A8'
                                           10711 *
00007F30 0D                                10712          DC    XL1'D'
00007F31 000000                            10713          DC    AL3(0)
00007F34 00000D70                          10714          DC    AL4(3440)
00007F38 00000000                          10715          DC    4X'00'
00007F3C 00000000                          10716          DC    Q(@@STATIC)
00007F40 00000000                          10717          DC    X'00000000'
00007F44 00000640                          10718          DC    X'00000640'
00007F48 0000000000006860                  10719          DC    ADL8(@DATA)
00007F50 00000000                          10720          DC    X'00000000'
00007F54 000008B2                          10721          DC    X'000008B2'
                                           10722 *
00007F58 0D                                10723          DC    XL1'D'
00007F59 000000                            10724          DC    AL3(0)
00007F5C 00000D98                          10725          DC    AL4(3480)
00007F60 00000000                          10726          DC    4X'00'
00007F64 00000000                          10727          DC    Q(@@STATIC)
00007F68 00000000                          10728          DC    X'00000000'
00007F6C 00000648                          10729          DC    X'00000648'
00007F70 0000000000006860                  10730          DC    ADL8(@DATA)
00007F78 00000000                          10731          DC    X'00000000'
                                                                                                                           Page  215 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00007F7C 000008BE                          10732          DC    X'000008BE'
                                           10733 *
00007F80 0D                                10734          DC    XL1'D'
00007F81 000000                            10735          DC    AL3(0)
00007F84 00000DC0                          10736          DC    AL4(3520)
00007F88 00000000                          10737          DC    4X'00'
00007F8C 00000000                          10738          DC    Q(@@STATIC)
00007F90 00000000                          10739          DC    X'00000000'
00007F94 00000650                          10740          DC    X'00000650'
00007F98 0000000000006860                  10741          DC    ADL8(@DATA)
00007FA0 00000000                          10742          DC    X'00000000'
00007FA4 000008CA                          10743          DC    X'000008CA'
                                           10744 *
00007FA8 0D                                10745          DC    XL1'D'
00007FA9 000000                            10746          DC    AL3(0)
00007FAC 00000DE8                          10747          DC    AL4(3560)
00007FB0 00000000                          10748          DC    4X'00'
00007FB4 00000000                          10749          DC    Q(@@STATIC)
00007FB8 00000000                          10750          DC    X'00000000'
00007FBC 00000658                          10751          DC    X'00000658'
00007FC0 0000000000006860                  10752          DC    ADL8(@DATA)
00007FC8 00000000                          10753          DC    X'00000000'
00007FCC 000008D8                          10754          DC    X'000008D8'
                                           10755 *
00007FD0 0D                                10756          DC    XL1'D'
00007FD1 000000                            10757          DC    AL3(0)
00007FD4 00000E10                          10758          DC    AL4(3600)
00007FD8 00000000                          10759          DC    4X'00'
00007FDC 00000000                          10760          DC    Q(@@STATIC)
00007FE0 00000000                          10761          DC    X'00000000'
00007FE4 00000660                          10762          DC    X'00000660'
00007FE8 0000000000006860                  10763          DC    ADL8(@DATA)
00007FF0 00000000                          10764          DC    X'00000000'
00007FF4 000008E0                          10765          DC    X'000008E0'
                                           10766 *
00007FF8 0D                                10767          DC    XL1'D'
00007FF9 000000                            10768          DC    AL3(0)
00007FFC 00000E38                          10769          DC    AL4(3640)
00008000 00000000                          10770          DC    4X'00'
00008004 00000000                          10771          DC    Q(@@STATIC)
00008008 00000000                          10772          DC    X'00000000'
0000800C 00000668                          10773          DC    X'00000668'
00008010 0000000000006860                  10774          DC    ADL8(@DATA)
00008018 00000000                          10775          DC    X'00000000'
0000801C 000008EA                          10776          DC    X'000008EA'
                                           10777 *
00008020 0D                                10778          DC    XL1'D'
00008021 000000                            10779          DC    AL3(0)
00008024 00000E60                          10780          DC    AL4(3680)
00008028 00000000                          10781          DC    4X'00'
0000802C 00000000                          10782          DC    Q(@@STATIC)
00008030 00000000                          10783          DC    X'00000000'
                                                                                                                           Page  216 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00008034 00000670                          10784          DC    X'00000670'
00008038 0000000000006860                  10785          DC    ADL8(@DATA)
00008040 00000000                          10786          DC    X'00000000'
00008044 000008F6                          10787          DC    X'000008F6'
                                           10788 *
00008048 0D                                10789          DC    XL1'D'
00008049 000000                            10790          DC    AL3(0)
0000804C 00000E88                          10791          DC    AL4(3720)
00008050 00000000                          10792          DC    4X'00'
00008054 00000000                          10793          DC    Q(@@STATIC)
00008058 00000000                          10794          DC    X'00000000'
0000805C 00000678                          10795          DC    X'00000678'
00008060 0000000000006860                  10796          DC    ADL8(@DATA)
00008068 00000000                          10797          DC    X'00000000'
0000806C 000008A2                          10798          DC    X'000008A2'
                                           10799 *
00008070 0D                                10800          DC    XL1'D'
00008071 000000                            10801          DC    AL3(0)
00008074 00000EB0                          10802          DC    AL4(3760)
00008078 00000000                          10803          DC    4X'00'
0000807C 00000000                          10804          DC    Q(@@STATIC)
00008080 00000000                          10805          DC    X'00000000'
00008084 00000680                          10806          DC    X'00000680'
00008088 0000000000006860                  10807          DC    ADL8(@DATA)
00008090 00000000                          10808          DC    X'00000000'
00008094 000008D8                          10809          DC    X'000008D8'
                                           10810 *
00008098 0D                                10811          DC    XL1'D'
00008099 000000                            10812          DC    AL3(0)
0000809C 00000ED8                          10813          DC    AL4(3800)
000080A0 00000000                          10814          DC    4X'00'
000080A4 00000000                          10815          DC    Q(@@STATIC)
000080A8 00000000                          10816          DC    X'00000000'
000080AC 00000688                          10817          DC    X'00000688'
000080B0 0000000000006860                  10818          DC    ADL8(@DATA)
000080B8 00000000                          10819          DC    X'00000000'
000080BC 00000900                          10820          DC    X'00000900'
                                           10821 *
000080C0 0D                                10822          DC    XL1'D'
000080C1 000000                            10823          DC    AL3(0)
000080C4 00000F00                          10824          DC    AL4(3840)
000080C8 00000000                          10825          DC    4X'00'
000080CC 00000000                          10826          DC    Q(@@STATIC)
000080D0 00000000                          10827          DC    X'00000000'
000080D4 00000690                          10828          DC    X'00000690'
000080D8 0000000000006860                  10829          DC    ADL8(@DATA)
000080E0 00000000                          10830          DC    X'00000000'
000080E4 0000090E                          10831          DC    X'0000090E'
                                           10832 *
000080E8 0D                                10833          DC    XL1'D'
000080E9 000000                            10834          DC    AL3(0)
000080EC 00000F28                          10835          DC    AL4(3880)
                                                                                                                           Page  217 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000080F0 00000000                          10836          DC    4X'00'
000080F4 00000000                          10837          DC    Q(@@STATIC)
000080F8 00000000                          10838          DC    X'00000000'
000080FC 00000698                          10839          DC    X'00000698'
00008100 0000000000006860                  10840          DC    ADL8(@DATA)
00008108 00000000                          10841          DC    X'00000000'
0000810C 00000914                          10842          DC    X'00000914'
                                           10843 *
00008110 0D                                10844          DC    XL1'D'
00008111 000000                            10845          DC    AL3(0)
00008114 00000F50                          10846          DC    AL4(3920)
00008118 00000000                          10847          DC    4X'00'
0000811C 00000000                          10848          DC    Q(@@STATIC)
00008120 00000000                          10849          DC    X'00000000'
00008124 000006A0                          10850          DC    X'000006A0'
00008128 0000000000006860                  10851          DC    ADL8(@DATA)
00008130 00000000                          10852          DC    X'00000000'
00008134 00000922                          10853          DC    X'00000922'
                                           10854 *
00008138 0D                                10855          DC    XL1'D'
00008139 000000                            10856          DC    AL3(0)
0000813C 00000F78                          10857          DC    AL4(3960)
00008140 00000000                          10858          DC    4X'00'
00008144 00000000                          10859          DC    Q(@@STATIC)
00008148 00000000                          10860          DC    X'00000000'
0000814C 000006A8                          10861          DC    X'000006A8'
00008150 0000000000006860                  10862          DC    ADL8(@DATA)
00008158 00000000                          10863          DC    X'00000000'
0000815C 0000092E                          10864          DC    X'0000092E'
                                           10865 *
00008160 0D                                10866          DC    XL1'D'
00008161 000000                            10867          DC    AL3(0)
00008164 00000FA0                          10868          DC    AL4(4000)
00008168 00000000                          10869          DC    4X'00'
0000816C 00000000                          10870          DC    Q(@@STATIC)
00008170 00000000                          10871          DC    X'00000000'
00008174 000006B0                          10872          DC    X'000006B0'
00008178 0000000000006860                  10873          DC    ADL8(@DATA)
00008180 00000000                          10874          DC    X'00000000'
00008184 00000944                          10875          DC    X'00000944'
                                           10876 *
00008188 0D                                10877          DC    XL1'D'
00008189 000000                            10878          DC    AL3(0)
0000818C 00000FC8                          10879          DC    AL4(4040)
00008190 00000000                          10880          DC    4X'00'
00008194 00000000                          10881          DC    Q(@@STATIC)
00008198 00000000                          10882          DC    X'00000000'
0000819C 000006B8                          10883          DC    X'000006B8'
000081A0 0000000000006860                  10884          DC    ADL8(@DATA)
000081A8 00000000                          10885          DC    X'00000000'
000081AC 00000954                          10886          DC    X'00000954'
                                           10887 *
                                                                                                                           Page  218 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000081B0 0D                                10888          DC    XL1'D'
000081B1 000000                            10889          DC    AL3(0)
000081B4 00000FF0                          10890          DC    AL4(4080)
000081B8 00000000                          10891          DC    4X'00'
000081BC 00000000                          10892          DC    Q(@@STATIC)
000081C0 00000000                          10893          DC    X'00000000'
000081C4 000006C0                          10894          DC    X'000006C0'
000081C8 0000000000006860                  10895          DC    ADL8(@DATA)
000081D0 00000000                          10896          DC    X'00000000'
000081D4 00000968                          10897          DC    X'00000968'
                                           10898 *
000081D8 0D                                10899          DC    XL1'D'
000081D9 000000                            10900          DC    AL3(0)
000081DC 00001018                          10901          DC    AL4(4120)
000081E0 00000000                          10902          DC    4X'00'
000081E4 00000000                          10903          DC    Q(@@STATIC)
000081E8 00000000                          10904          DC    X'00000000'
000081EC 000006C8                          10905          DC    X'000006C8'
000081F0 0000000000006860                  10906          DC    ADL8(@DATA)
000081F8 00000000                          10907          DC    X'00000000'
000081FC 00000978                          10908          DC    X'00000978'
                                           10909 *
00008200 0D                                10910          DC    XL1'D'
00008201 000000                            10911          DC    AL3(0)
00008204 00000000                          10912          DC    AL4(0)
00008208 00000000                          10913          DC    4X'00'
0000820C 00000000                          10914          DC    Q(@@STATIC)
00008210 00000000                          10915          DC    X'00000000'
00008214 000006D0                          10916          DC    X'000006D0'
00008218 0000000000006860                  10917          DC    ADL8(@DATA)
00008220 00000000                          10918          DC    X'00000000'
00008224 000008B2                          10919          DC    X'000008B2'
                                           10920 *
                                           10921          EXTRN @@ALLOCA
                                           10922          END
                                                 Relocation Dictionary                                                     Page  219 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000021 000000F8   Q 4      +
 00000002 00000002 00000200   A 4      +
 00000002 00000002 00000228   A 4      +
 00000002 00000002 00000230   A 4      +
 00000002 00000018 00000318   A 4      +
 00000002 00000019 00000320   A 4      +
 00000002 00000002 00000348   A 4      +
 00000002 00000002 00000370   A 4      +
 00000002 00000002 00000378   A 4      +
 00000002 00000018 00000460   A 4      +
 00000002 00000019 00000468   A 4      +
 00000002 00000002 00000490   A 4      +
 00000002 00000002 000004B8   A 4      +
 00000002 00000002 000004C0   A 4      +
 00000002 00000018 00000598   A 4      +
 00000002 00000019 000005A0   A 4      +
 00000002 00000002 000005C0   A 4      +
 00000002 00000002 000005E8   A 4      +
 00000002 00000002 000005F0   A 4      +
 00000002 00000013 000006F8   A 4      +
 00000002 00000004 00000700   A 4      +
 00000002 00000022 00000708   A 4      +
 00000002 00000022 00000710   A 4      +
 00000002 00000002 00000730   A 4      +
 00000002 00000002 00000758   A 4      +
 00000002 00000002 00000760   A 4      +
 00000002 00000015 00000818   A 4      +
 00000002 00000002 00000838   A 4      +
 00000002 00000002 00000860   A 4      +
 00000002 00000002 00000868   A 4      +
 00000002 0000001E 00000968   A 4      +
 00000002 00000004 00000970   A 4      +
 00000002 00000022 00000978   A 4      +
 00000002 00000022 00000980   A 4      +
 00000002 00000002 000009A8   A 4      +
 00000002 00000002 000009D0   A 4      +
 00000002 00000002 000009D8   A 4      +
 00000002 00000002 00000AE8   A 4      +
 00000002 00000022 00000AF0   A 4      +
 00000002 00000004 00000AF8   A 4      +
 00000002 00000022 00000B00   A 4      +
 00000002 00000002 00000B20   A 4      +
 00000002 00000002 00000B48   A 4      +
 00000002 00000002 00000B50   A 4      +
 00000002 00000016 00000C20   A 4      +
 00000002 00000002 00000C48   A 4      +
 00000002 00000002 00000C70   A 4      +
 00000002 00000002 00000C78   A 4      +
 00000002 00000002 00000CE8   A 4      +
 00000002 00000002 00000D90   A 4      +
                                                 Relocation Dictionary                                                     Page  220 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00000D98   A 4      +
 00000002 00000002 00000E38   A 4      +
 00000002 00000002 00000E40   A 4      +
 00000002 00000002 00000EC8   A 4      +
 00000002 00000002 00000EF0   A 4      +
 00000002 00000002 00000EF8   A 4      +
 00000002 00000021 00000FD4   Q 4      +
 00000002 00000012 00000FD8   A 4      +
 00000002 00000022 00000FE0   A 4      +
 00000002 00000002 00001088   A 4      +
 00000002 00000002 00001090   A 4      +
 00000002 00000002 00001170   A 4      +
 00000002 00000002 00001198   A 4      +
 00000002 00000002 000011A0   A 4      +
 00000002 00000007 00001278   A 4      +
 00000002 00000009 00001280   A 4      +
 00000002 00000002 000012A8   A 4      +
 00000002 00000002 000012D0   A 4      +
 00000002 00000002 000012D8   A 4      +
 00000002 00000007 000013C0   A 4      +
 00000002 00000009 000013C8   A 4      +
 00000002 00000002 000013F0   A 4      +
 00000002 00000002 00001418   A 4      +
 00000002 00000002 00001420   A 4      +
 00000002 00000002 000015A0   A 4      +
 00000002 00000014 000015A8   A 4      +
 00000002 00000007 000015B0   A 4      +
 00000002 0000001F 000015B8   A 4      +
 00000002 00000022 000015C0   A 4      +
 00000002 00000022 000015C8   A 4      +
 00000002 00000009 000015D0   A 4      +
 00000002 00000010 000015D8   A 4      +
 00000002 00000002 00001600   A 4      +
 00000002 00000002 00001628   A 4      +
 00000002 00000002 00001630   A 4      +
 00000002 00000007 00001730   A 4      +
 00000002 00000002 00001738   A 4      +
 00000002 00000009 00001740   A 4      +
 00000002 00000002 00001768   A 4      +
 00000002 00000002 00001790   A 4      +
 00000002 00000002 00001798   A 4      +
 00000002 00000003 00001848   A 4      +
 00000002 00000002 00001940   A 4      +
 00000002 00000002 00001948   A 4      +
 00000002 00000002 000019C8   A 4      +
 00000002 00000002 000019F0   A 4      +
 00000002 00000002 000019F8   A 4      +
 00000002 00000002 00001A90   A 4      +
 00000002 00000002 00001C50   A 4      +
 00000002 00000002 00001C78   A 4      +
 00000002 00000002 00001C80   A 4      +
 00000002 00000007 00001D40   A 4      +
 00000002 00000009 00001D48   A 4      +
                                                 Relocation Dictionary                                                     Page  221 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000008 00001D50   A 4      +
 00000002 00000002 00001D58   A 4      +
 00000002 00000002 00001D60   A 4      +
 00000002 0000000A 00001D68   A 4      +
 00000002 00000002 00001D70   A 4      +
 00000002 00000002 00001D78   A 4      +
 00000002 00000002 00001D80   A 4      +
 00000002 00000002 00001F08   A 4      +
 00000002 00000002 00001F30   A 4      +
 00000002 00000002 00001F38   A 4      +
 00000002 00000002 00002018   A 4      +
 00000002 00000002 00002048   A 4      +
 00000002 00000002 00002070   A 4      +
 00000002 00000002 00002078   A 4      +
 00000002 00000002 00002160   A 4      +
 00000002 00000002 000021B8   A 4      +
 00000002 00000002 000021C0   A 4      +
 00000002 00000002 00002218   A 4      +
 00000002 00000002 00002240   A 4      +
 00000002 00000002 00002248   A 4      +
 00000002 00000002 00002328   A 4      +
 00000002 00000002 00002358   A 4      +
 00000002 00000002 00002380   A 4      +
 00000002 00000002 00002388   A 4      +
 00000002 00000002 00002468   A 4      +
 00000002 00000002 00002470   A 4      +
 00000002 00000002 00002498   A 4      +
 00000002 00000002 000024C0   A 4      +
 00000002 00000002 000024C8   A 4      +
 00000002 00000002 00002548   A 4      +
 00000002 00000002 00002550   A 4      +
 00000002 00000002 00002610   A 4      +
 00000002 00000002 00002638   A 4      +
 00000002 00000002 00002640   A 4      +
 00000002 00000007 00002718   A 4      +
 00000002 00000009 00002720   A 4      +
 00000002 00000002 00002750   A 4      +
 00000002 00000002 00002778   A 4      +
 00000002 00000002 00002780   A 4      +
 00000002 00000002 00002808   A 4      +
 00000002 00000002 000028A0   A 4      +
 00000002 00000002 000028C8   A 4      +
 00000002 00000002 000028D0   A 4      +
 00000002 00000004 000029E8   A 4      +
 00000002 00000022 000029F0   A 4      +
 00000002 00000022 000029F8   A 4      +
 00000002 00000002 00002A00   A 4      +
 00000002 00000002 00002A08   A 4      +
 00000002 0000001A 00002A10   A 4      +
 00000002 00000002 00002AC8   A 4      +
 00000002 00000002 00002AF0   A 4      +
 00000002 00000002 00002AF8   A 4      +
 00000002 00000002 00002B80   A 4      +
                                                 Relocation Dictionary                                                     Page  222 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00002B88   A 4      +
 00000002 00000002 00002C48   A 4      +
 00000002 00000002 00002C70   A 4      +
 00000002 00000002 00002C78   A 4      +
 00000002 00000002 00002CE0   A 4      +
 00000002 00000002 00002E48   A 4      +
 00000002 00000002 00002E70   A 4      +
 00000002 00000002 00002E78   A 4      +
 00000002 00000002 00002F18   A 4      +
 00000002 00000002 00002F20   A 4      +
 00000002 00000002 00002FC0   A 4      +
 00000002 00000002 00002FE8   A 4      +
 00000002 00000002 00002FF0   A 4      +
 00000002 00000002 00003130   A 4      +
 00000002 00000002 00003138   A 4      +
 00000002 00000002 00003140   A 4      +
 00000002 00000002 00003148   A 4      +
 00000002 00000002 00003150   A 4      +
 00000002 00000002 00003158   A 4      +
 00000002 0000001A 00003160   A 4      +
 00000002 00000002 00003168   A 4      +
 00000002 00000002 00003278   A 4      +
 00000002 00000002 000032A0   A 4      +
 00000002 00000002 000032A8   A 4      +
 00000002 00000002 00003318   A 4      +
 00000002 00000002 000033E0   A 4      +
 00000002 00000002 00003408   A 4      +
 00000002 00000002 00003410   A 4      +
 00000002 00000002 00003470   A 4      +
 00000002 00000002 00003540   A 4      +
 00000002 00000002 00003548   A 4      +
 00000002 00000002 000035C0   A 4      +
 00000002 00000002 000035E8   A 4      +
 00000002 00000002 000035F0   A 4      +
 00000002 00000002 00003778   A 4      +
 00000002 00000002 00003780   A 4      +
 00000002 00000002 00003788   A 4      +
 00000002 00000002 00003790   A 4      +
 00000002 00000002 000037C0   A 4      +
 00000002 00000002 000037E8   A 4      +
 00000002 00000002 000037F0   A 4      +
 00000002 00000004 000038C0   A 4      +
 00000002 00000022 000038C8   A 4      +
 00000002 00000022 000038D0   A 4      +
 00000002 00000002 000038D8   A 4      +
 00000002 00000002 000038E0   A 4      +
 00000002 00000002 00003A08   A 4      +
 00000002 00000002 00003A10   A 4      +
 00000002 00000002 00003A70   A 4      +
 00000002 00000002 00003A98   A 4      +
 00000002 00000002 00003AA0   A 4      +
 00000002 00000006 00003BE8   A 4      +
 00000002 0000001C 00003BF0   A 4      +
                                                 Relocation Dictionary                                                     Page  223 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00003BF8   A 4      +
 00000002 00000002 00003C00   A 4      +
 00000002 00000002 00003C40   A 4      +
 00000002 00000002 00003C68   A 4      +
 00000002 00000002 00003C70   A 4      +
 00000002 0000000E 00003EF8   A 4      +
 00000002 00000002 00003F00   A 4      +
 00000002 0000001F 00003F08   A 4      +
 00000002 00000022 00003F10   A 4      +
 00000002 00000022 00003F18   A 4      +
 00000002 00000012 00003F20   A 4      +
 00000002 00000007 00003F28   A 4      +
 00000002 00000002 00003F30   A 4      +
 00000002 00000009 00003F38   A 4      +
 00000002 00000002 00003F40   A 4      +
 00000002 00000002 00003F48   A 4      +
 00000002 00000020 00003F50   A 4      +
 00000002 0000000B 00003F58   A 4      +
 00000002 0000000F 00003F68   A 4      +
 00000002 00000020 00004618   A 4      +
 00000002 00000022 00004620   A 4      +
 00000002 00000022 00004628   A 4      +
 00000002 0000000E 00004638   A 4      +
 00000002 00000002 00004640   A 4      +
 00000002 0000001F 00004648   A 4      +
 00000002 00000012 00004650   A 4      +
 00000002 00000007 00004658   A 4      +
 00000002 00000002 00004660   A 4      +
 00000002 00000009 00004668   A 4      +
 00000002 00000002 00004670   A 4      +
 00000002 00000002 00004678   A 4      +
 00000002 00000011 00004680   A 4      +
 00000002 00000013 00004688   A 4      +
 00000002 00000002 00004698   A 4      +
 00000002 00000015 000046A0   A 4      +
 00000002 00000007 00004FD0   A 4      +
 00000002 00000002 00004FD8   A 4      +
 00000002 00000009 00004FE0   A 4      +
 00000002 00000002 00004FE8   A 4      +
 00000002 00000002 00004FF0   A 4      +
 00000002 00000002 00004FF8   A 4      +
 00000002 00000022 00005000   A 4      +
 00000002 00000020 00005008   A 4      +
 00000002 00000022 00005010   A 4      +
 00000002 0000000F 00005020   A 4      +
 00000002 0000001F 00005028   A 4      +
 00000002 00000012 00005030   A 4      +
 00000002 0000000E 00005038   A 4      +
 00000002 00000011 00005040   A 4      +
 00000002 00000002 000058F0   A 4      +
 00000002 00000002 000058F8   A 4      +
 00000002 00000022 00005900   A 4      +
 00000002 00000020 00005908   A 4      +
                                                 Relocation Dictionary                                                     Page  224 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000022 00005910   A 4      +
 00000002 00000013 00005918   A 4      +
 00000002 00000002 00005928   A 4      +
 00000002 00000015 00005930   A 4      +
 00000002 0000000E 00005938   A 4      +
 00000002 0000001F 00005940   A 4      +
 00000002 00000012 00005948   A 4      +
 00000002 00000007 00005950   A 4      +
 00000002 00000002 00005958   A 4      +
 00000002 00000009 00005960   A 4      +
 00000002 00000002 00005968   A 4      +
 00000002 00000024 00005970   A 4      +
 00000002 0000001B 00005980   A 4      +
 00000002 00000002 00005988   A 4      +
 00000002 00000002 00005990   A 4      +
 00000002 0000001A 00005998   A 4      +
 00000002 00000002 000059A0   A 4      +
 00000002 00000002 000059A8   A 4      +
 00000002 0000000C 000059B0   A 4      +
 00000002 00000002 000059B8   A 4      +
 00000002 0000001D 000059C0   A 4      +
 00000002 00000002 00006118   A 4      +
 00000002 00000002 00006140   A 4      +
 00000002 00000002 00006148   A 4      +
 00000002 00000002 000061E8   A 4      +
 00000002 00000002 000061F0   A 4      +
 00000002 00000002 000061F8   A 4      +
 00000002 00000002 00006200   A 4      +
 00000002 00000002 00006208   A 4      +
 00000002 00000002 00006210   A 4      +
 00000002 00000002 00006218   A 4      +
 00000002 00000005 00006220   A 4      +
 00000002 00000002 00006228   A 4      +
 00000002 0000001A 00006230   A 4      +
 00000002 00000017 00006238   A 4      +
 00000002 00000022 00006240   A 4      +
 00000002 00000002 00006248   A 4      +
 00000002 00000002 00006250   A 4      +
 00000002 00000022 00006258   A 4      +
 00000002 0000000D 00006260   A 4      +
 00000002 00000002 00006268   A 4      +
 00000002 00000002 00006568   A 4      +
 00000002 00000002 00006590   A 4      +
 00000002 00000002 00006598   A 4      +
 00000002 00000002 00006608   A 4      +
 00000002 00000002 000066B0   A 4      +
 00000002 00000002 000066D8   A 4      +
 00000002 00000002 000066E0   A 4      +
 00000002 00000002 00006740   A 4      +
 00000002 00000002 00006818   A 4      +
 00000002 00000002 00006820   A 4      +
 00000023 00000021 000071F4   Q 4      +
 00000023 00000021 00007314   Q 4      +
                                                 Relocation Dictionary                                                     Page  225 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000023 00000021 000073D4   Q 4      +
 00000023 00000021 000073FC   Q 4      +
 00000023 00000021 00007424   Q 4      +
 00000023 00000022 00007430   A 4      +
 00000023 00000021 0000744C   Q 4      +
 00000023 00000022 00007458   A 4      +
 00000023 00000021 00007474   Q 4      +
 00000023 00000022 00007480   A 4      +
 00000023 00000021 0000749C   Q 4      +
 00000023 00000022 000074A8   A 4      +
 00000023 00000021 000074C4   Q 4      +
 00000023 00000022 000074D0   A 4      +
 00000023 00000021 000074EC   Q 4      +
 00000023 00000022 000074F8   A 4      +
 00000023 00000021 00007514   Q 4      +
 00000023 00000022 00007520   A 4      +
 00000023 00000021 0000753C   Q 4      +
 00000023 00000022 00007548   A 4      +
 00000023 00000021 00007564   Q 4      +
 00000023 00000022 00007570   A 4      +
 00000023 00000021 0000758C   Q 4      +
 00000023 00000022 00007598   A 4      +
 00000023 00000021 000075B4   Q 4      +
 00000023 00000022 000075C0   A 4      +
 00000023 00000021 000075DC   Q 4      +
 00000023 00000022 000075E8   A 4      +
 00000023 00000021 00007604   Q 4      +
 00000023 00000022 00007610   A 4      +
 00000023 00000021 0000762C   Q 4      +
 00000023 00000022 00007638   A 4      +
 00000023 00000021 00007654   Q 4      +
 00000023 00000022 00007660   A 4      +
 00000023 00000021 0000767C   Q 4      +
 00000023 00000022 00007688   A 4      +
 00000023 00000021 000076A4   Q 4      +
 00000023 00000022 000076B0   A 4      +
 00000023 00000021 000076CC   Q 4      +
 00000023 00000022 000076D8   A 4      +
 00000023 00000021 000076F4   Q 4      +
 00000023 00000022 00007700   A 4      +
 00000023 00000021 0000771C   Q 4      +
 00000023 00000022 00007728   A 4      +
 00000023 00000021 00007744   Q 4      +
 00000023 00000022 00007750   A 4      +
 00000023 00000021 0000776C   Q 4      +
 00000023 00000022 00007778   A 4      +
 00000023 00000021 00007794   Q 4      +
 00000023 00000022 000077A0   A 4      +
 00000023 00000021 000077BC   Q 4      +
 00000023 00000022 000077C8   A 4      +
 00000023 00000021 000077E4   Q 4      +
 00000023 00000022 000077F0   A 4      +
 00000023 00000021 0000780C   Q 4      +
                                                 Relocation Dictionary                                                     Page  226 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000023 00000022 00007818   A 4      +
 00000023 00000021 00007834   Q 4      +
 00000023 00000022 00007840   A 4      +
 00000023 00000021 0000785C   Q 4      +
 00000023 00000022 00007868   A 4      +
 00000023 00000021 00007884   Q 4      +
 00000023 00000022 00007890   A 4      +
 00000023 00000021 000078AC   Q 4      +
 00000023 00000022 000078B8   A 4      +
 00000023 00000021 000078D4   Q 4      +
 00000023 00000022 000078E0   A 4      +
 00000023 00000021 000078FC   Q 4      +
 00000023 00000022 00007908   A 4      +
 00000023 00000021 00007924   Q 4      +
 00000023 00000022 00007930   A 4      +
 00000023 00000021 0000794C   Q 4      +
 00000023 00000022 00007958   A 4      +
 00000023 00000021 00007974   Q 4      +
 00000023 00000022 00007980   A 4      +
 00000023 00000021 0000799C   Q 4      +
 00000023 00000022 000079A8   A 4      +
 00000023 00000021 000079C4   Q 4      +
 00000023 00000022 000079D0   A 4      +
 00000023 00000021 000079EC   Q 4      +
 00000023 00000022 000079F8   A 4      +
 00000023 00000021 00007A14   Q 4      +
 00000023 00000022 00007A20   A 4      +
 00000023 00000021 00007A3C   Q 4      +
 00000023 00000022 00007A48   A 4      +
 00000023 00000021 00007A64   Q 4      +
 00000023 00000022 00007A70   A 4      +
 00000023 00000021 00007A8C   Q 4      +
 00000023 00000022 00007A98   A 4      +
 00000023 00000021 00007AB4   Q 4      +
 00000023 00000022 00007AC0   A 4      +
 00000023 00000021 00007ADC   Q 4      +
 00000023 00000022 00007AE8   A 4      +
 00000023 00000021 00007B04   Q 4      +
 00000023 00000022 00007B10   A 4      +
 00000023 00000021 00007B2C   Q 4      +
 00000023 00000022 00007B38   A 4      +
 00000023 00000021 00007B54   Q 4      +
 00000023 00000022 00007B60   A 4      +
 00000023 00000021 00007B7C   Q 4      +
 00000023 00000022 00007B88   A 4      +
 00000023 00000021 00007BA4   Q 4      +
 00000023 00000022 00007BB0   A 4      +
 00000023 00000021 00007BCC   Q 4      +
 00000023 00000022 00007BD8   A 4      +
 00000023 00000021 00007BF4   Q 4      +
 00000023 00000022 00007C00   A 4      +
 00000023 00000021 00007C1C   Q 4      +
 00000023 00000022 00007C28   A 4      +
                                                 Relocation Dictionary                                                     Page  227 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000023 00000021 00007C44   Q 4      +
 00000023 00000022 00007C50   A 4      +
 00000023 00000021 00007C6C   Q 4      +
 00000023 00000022 00007C78   A 4      +
 00000023 00000021 00007C94   Q 4      +
 00000023 00000022 00007CA0   A 4      +
 00000023 00000021 00007CBC   Q 4      +
 00000023 00000022 00007CC8   A 4      +
 00000023 00000021 00007CE4   Q 4      +
 00000023 00000022 00007CF0   A 4      +
 00000023 00000021 00007D0C   Q 4      +
 00000023 00000022 00007D18   A 4      +
 00000023 00000021 00007D34   Q 4      +
 00000023 00000022 00007D40   A 4      +
 00000023 00000021 00007D5C   Q 4      +
 00000023 00000022 00007D68   A 4      +
 00000023 00000021 00007D84   Q 4      +
 00000023 00000022 00007D90   A 4      +
 00000023 00000021 00007DAC   Q 4      +
 00000023 00000022 00007DB8   A 4      +
 00000023 00000021 00007DD4   Q 4      +
 00000023 00000022 00007DE0   A 4      +
 00000023 00000021 00007DFC   Q 4      +
 00000023 00000022 00007E08   A 4      +
 00000023 00000021 00007E24   Q 4      +
 00000023 00000022 00007E30   A 4      +
 00000023 00000021 00007E4C   Q 4      +
 00000023 00000022 00007E58   A 4      +
 00000023 00000021 00007E74   Q 4      +
 00000023 00000022 00007E80   A 4      +
 00000023 00000021 00007E9C   Q 4      +
 00000023 00000022 00007EA8   A 4      +
 00000023 00000021 00007EC4   Q 4      +
 00000023 00000022 00007ED0   A 4      +
 00000023 00000021 00007EEC   Q 4      +
 00000023 00000022 00007EF8   A 4      +
 00000023 00000021 00007F14   Q 4      +
 00000023 00000022 00007F20   A 4      +
 00000023 00000021 00007F3C   Q 4      +
 00000023 00000022 00007F48   A 4      +
 00000023 00000021 00007F64   Q 4      +
 00000023 00000022 00007F70   A 4      +
 00000023 00000021 00007F8C   Q 4      +
 00000023 00000022 00007F98   A 4      +
 00000023 00000021 00007FB4   Q 4      +
 00000023 00000022 00007FC0   A 4      +
 00000023 00000021 00007FDC   Q 4      +
 00000023 00000022 00007FE8   A 4      +
 00000023 00000021 00008004   Q 4      +
 00000023 00000022 00008010   A 4      +
 00000023 00000021 0000802C   Q 4      +
 00000023 00000022 00008038   A 4      +
 00000023 00000021 00008054   Q 4      +
                                                 Relocation Dictionary                                                     Page  228 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000023 00000022 00008060   A 4      +
 00000023 00000021 0000807C   Q 4      +
 00000023 00000022 00008088   A 4      +
 00000023 00000021 000080A4   Q 4      +
 00000023 00000022 000080B0   A 4      +
 00000023 00000021 000080CC   Q 4      +
 00000023 00000022 000080D8   A 4      +
 00000023 00000021 000080F4   Q 4      +
 00000023 00000022 00008100   A 4      +
 00000023 00000021 0000811C   Q 4      +
 00000023 00000022 00008128   A 4      +
 00000023 00000021 00008144   Q 4      +
 00000023 00000022 00008150   A 4      +
 00000023 00000021 0000816C   Q 4      +
 00000023 00000022 00008178   A 4      +
 00000023 00000021 00008194   Q 4      +
 00000023 00000022 000081A0   A 4      +
 00000023 00000021 000081BC   Q 4      +
 00000023 00000022 000081C8   A 4      +
 00000023 00000021 000081E4   Q 4      +
 00000023 00000022 000081F0   A 4      +
 00000023 00000021 0000820C   Q 4      +
 00000023 00000022 00008218   A 4      +
                                                 DSECT Cross Reference                                                     Page  229 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:42 
@AUTO#rd_atomic32_add
         000000AC  FFFFFFFE  00378
@AUTO#rd_atomic32_get
         000000AC  FFFFFFFC  00627
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFD  00505
@AUTO#rd_calloc
         000000A8  FFFFFFFB  00756
@AUTO#rd_clock
         000000B8  FFFFFFF7  01239
@AUTO#rd_free
         000000A8  FFFFFFFA  00859
@AUTO#rd_kafka_$Api$Key2str
         000000A8  FFFFFFF3  01745
@AUTO#rd_kafka_broker_get_state
         000000AC  FFFFFFE3  03986
@AUTO#rd_kafka_broker_is_up
         000000AC  FFFFFFE2  04104
@AUTO#rd_kafka_coord_cache_add
         000000A8  FFFFFFDD  05001
@AUTO#rd_kafka_coord_cache_destroy
         000000A8  FFFFFFDB  05249
@AUTO#rd_kafka_coord_cache_entry_destroy
         000000A8  FFFFFFE1  04290
@AUTO#rd_kafka_coord_cache_evict
         000000A8  FFFFFFDC  05132
@AUTO#rd_kafka_coord_cache_expire
         000000B0  FFFFFFE0  04434
@AUTO#rd_kafka_coord_cache_find
         000000A8  FFFFFFDF  04625
@AUTO#rd_kafka_coord_cache_get
         000000A8  FFFFFFDE  04759
@AUTO#rd_kafka_coord_cache_init
         000000A8  FFFFFFDA  05335
@AUTO#rd_kafka_coord_req
         000000A8  FFFFFFD9  05508
@AUTO#rd_kafka_coord_req_destroy
         000000A8  FFFFFFD8  05704
@AUTO#rd_kafka_coord_req_fail
         000000A8  FFFFFFD6  05936
@AUTO#rd_kafka_coord_req_fsm
         000000B8  FFFFFFD4  09328
@AUTO#rd_kafka_coord_req_handle_$Find$Coordinator
         00000438  FFFFFFD5  08792
@AUTO#rd_kafka_coord_req_keep
         000000A8  FFFFFFD7  05778
@AUTO#rd_kafka_coord_reqs_init
         000000A8  FFFFFFD1  09655
@AUTO#rd_kafka_coord_reqs_term
         000000A8  FFFFFFD2  09575
@AUTO#rd_kafka_coord_rkb_monitor_cb
         000000A8  FFFFFFD3  09456
@AUTO#rd_kafka_op_cmp_prio
                                                 DSECT Cross Reference                                                     Page  230 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:42 
         000000A8  FFFFFFEC  02691
@AUTO#rd_kafka_q_destroy0
         000000AC  FFFFFFEF  02297
@AUTO#rd_kafka_q_disable0
         000000A8  FFFFFFF0  02111
@AUTO#rd_kafka_q_enq
         000000A8  FFFFFFE9  03290
@AUTO#rd_kafka_q_enq0
         000000A8  FFFFFFEB  02920
@AUTO#rd_kafka_q_enq1
         000000A8  FFFFFFEA  03181
@AUTO#rd_kafka_q_fwd_get
         000000A8  FFFFFFEE  02435
@AUTO#rd_kafka_q_io_event
         000000A8  FFFFFFED  02598
@AUTO#rd_kafka_q_keep
         000000A8  FFFFFFF1  01988
@AUTO#rd_kafka_replyq_clear
         000000A8  FFFFFFE7  03487
@AUTO#rd_kafka_replyq_copy
         000000A8  FFFFFFE6  03603
@AUTO#rd_kafka_replyq_destroy
         000000A8  FFFFFFE5  03721
@AUTO#rd_kafka_replyq_enq
         000000AC  FFFFFFE4  03868
@AUTO#rd_kafka_replyq_make
         000000B8  FFFFFFE8  03413
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFF8  01126
@AUTO#rd_slice_abs_offset
         000000A8  FFFFFFF5  01441
@AUTO#rd_slice_offset
         000000A8  FFFFFFF4  01531
@AUTO#rd_strdup
         000000A8  FFFFFFF9  00990
@AUTO#rd_strlcpy
         000000B0  FFFFFFF2  01869
@AUTO#rd_timeout_init
         000000A8  FFFFFFF6  01355
@AUTO#utf8_2_ebcdic
         000000A9  FFFFFFFF  00251
                                          Macro and Copy Code Source Summary                                               Page  231 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:42 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  232 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   137  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 00136    214 @REGION_339_1,12
   246  000001DE  00000002 DROP                                           12              12
   315  0000027E  00000002 USING  ORDINARY    00000240 00001000 00000002  12 000E0    340 @REGION_1059_1,12
   373  00000328  00000002 DROP                                           12              12
   442  000003C6  00000002 USING  ORDINARY    00000388 00001000 00000002  12 000E0    467 @REGION_1060_1,12
   500  00000470  00000002 DROP                                           12              12
   569  0000050E  00000002 USING  ORDINARY    000004D0 00001000 00000002  12 000D0    589 @REGION_1061_1,12
   622  000005A8  00000002 DROP                                           12              12
   691  0000063E  00000002 USING  ORDINARY    00000600 00001000 00000002  12 00110    718 @REGION_1077_1,12
   751  00000718  00000002 DROP                                           12              12
   819  000007AE  00000002 USING  ORDINARY    00000770 00001000 00000002  12 000A8    826 @REGION_1080_1,12
   854  00000820  00000002 DROP                                           12              12
   922  000008B6  00000002 USING  ORDINARY    00000878 00001000 00000002  12 00108    952 @REGION_1081_1,12
   985  00000988  00000002 DROP                                           12              12
  1053  00000A26  00000002 USING  ORDINARY    000009E8 00001000 00000002  12 00118   1087 @REGION_1084_1,12
  1121  00000B08  00000002 DROP                                           12              12
  1190  00000B9E  00000002 USING  ORDINARY    00000B60 00001000 00000002  12 000C0   1200 @REGION_1088_1,12
  1234  00000C28  00000002 DROP                                           12              12
  1303  00000CC6  00000002 USING  ORDINARY    00000C88 00001000 00000002  12 00078   1323 @REGION_1093_1,12
  1350  00000D48  00000002 DROP                                           12              12
  1407  00000DB2  00000002 USING  ORDINARY    00000DA8 00001000 00000002  12 0003A   1416 @REGION_1286_1,12
  1436  00000DF0  00000002 DROP                                           12              12
  1493  00000E5A  00000002 USING  ORDINARY    00000E50 00001000 00000002  12 0004A   1504 @REGION_1287_1,12
  1526  00000EA8  00000002 DROP                                           12              12
  1594  00000F46  00000002 USING  ORDINARY    00000F08 00001000 00000002  12 000F2   1706 @REGION_1314_1,12
  1740  00001042  00000002 DROP                                           12              12
  1797  000010AA  00000002 USING  ORDINARY    000010A0 00001000 00000002  12 000A6   1843 @REGION_1384_1,12
  1864  00001154  00000002 DROP                                           12              12
  1935  000011EE  00000002 USING  ORDINARY    000011B0 00001000 00000002  12 000D0   1953 @REGION_1428_1,12
  1983  00001288  00000002 DROP                                           12              12
  2051  00001326  00000002 USING  ORDINARY    000012E8 00001000 00000002  12 000E0   2076 @REGION_1432_1,12
  2106  000013D0  00000002 DROP                                           12              12
  2174  0000146E  00000002 USING  ORDINARY    00001430 00001000 00000002  12 001A8   2256 @REGION_1435_1,12
  2292  000015E0  00000002 DROP                                           12              12
  2361  0000167E  00000002 USING  ORDINARY    00001640 00001000 00000002  12 00100   2397 @REGION_1439_1,12
  2430  00001748  00000002 DROP                                           12              12
  2498  000017E6  00000002 USING  ORDINARY    000017A8 00001000 00000002  12 00102   2565 @REGION_1441_1,12
  2593  000018F2  00000002 DROP                                           12              12
  2650  00001962  00000002 USING  ORDINARY    00001958 00001000 00000002  12 00042   2669 @REGION_1442_1,12
  2686  000019AC  00000002 DROP                                           12              12
  2754  00001A46  00000002 USING  ORDINARY    00001A08 00001000 00000002  12 001C2   2880 @REGION_1444_1,12
  2915  00001C30  00000002 DROP                                           12              12
  2983  00001CCE  00000002 USING  ORDINARY    00001C90 00001000 00000002  12 00212   3146 @REGION_1445_1,12
  3176  00001EEA  00000002 DROP                                           12              12
  3244  00001F86  00000002 USING  ORDINARY    00001F48 00001000 00000002  12 000D0   3257 @REGION_1446_1,12
  3285  00002020  00000002 DROP                                           12              12
  3353  000020C6  00000002 USING  ORDINARY    00002088 00001000 00000002  12 000D8   3369 @REGION_1454_1,12
  3408  00002168  00000002 DROP                                           12              12
  3550  00002296  00000002 USING  ORDINARY    00002258 00001000 00000002  12 000D0   3568 @REGION_1459_1,12
  3598  00002330  00000002 DROP                                           12              12
  3666  000023D6  00000002 USING  ORDINARY    00002398 00001000 00000002  12 000D8   3687 @REGION_1460_1,12
                                                      Using Map                                                            Page  233 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
  3716  00002478  00000002 DROP                                           12              12
  3784  00002516  00000002 USING  ORDINARY    000024D8 00001000 00000002  12 00088   3836 @REGION_1461_1,12
  3863  000025E8  00000002 DROP                                           12              12
  3932  0000268E  00000002 USING  ORDINARY    00002650 00001000 00000002  12 000D0   3951 @REGION_1726_1,12
  3981  00002728  00000002 DROP                                           12              12
  4050  000027CE  00000002 USING  ORDINARY    00002790 00001000 00000002  12 0008C   4078 @REGION_1727_1,12
  4099  0000286A  00000002 DROP                                           12              12
  4171  0000291E  00000002 USING  ORDINARY    000028E0 00001000 00000002  12 00144   4259 @REGION_1957_1,12
  4284  00002A9C  00000002 DROP                                           12              12
  4355  00002B46  00000002 USING  ORDINARY    00002B08 00001000 00000002  12 000CC   4406 @REGION_1884_1,12
  4429  00002C1C  00000002 DROP                                           12              12
  4498  00002CC6  00000002 USING  ORDINARY    00002C88 00001000 00000002  12 0014C   4595 @REGION_1958_1,12
  4620  00002E1C  00000002 DROP                                           12              12
  4690  00002EC6  00000002 USING  ORDINARY    00002E88 00001000 00000002  12 000C8   4727 @REGION_1959_1,12
  4754  00002F98  00000002 DROP                                           12              12
  4822  0000303E  00000002 USING  ORDINARY    00003000 00001000 00000002  12 00202   4969 @REGION_1960_1,12
  4996  0000324A  00000002 DROP                                           12              12
  5066  000032F6  00000002 USING  ORDINARY    000032B8 00001000 00000002  12 000B0   5104 @REGION_1885_1,12
  5127  000033B0  00000002 DROP                                           12              12
  5197  0000345E  00000002 USING  ORDINARY    00003420 00001000 00000002  12 00076   5222 @REGION_1886_1,12
  5244  000034F2  00000002 DROP                                           12              12
  5400  0000363E  00000002 USING  ORDINARY    00003600 00001000 00000002  12 00190   5472 @REGION_1888_1,12
  5503  00003798  00000002 DROP                                           12              12
  5571  0000383E  00000002 USING  ORDINARY    00003800 00001000 00000002  12 00170   5663 @REGION_1962_1,12
  5699  000039B8  00000002 DROP                                           12              12
  5841  00003AEE  00000002 USING  ORDINARY    00003AB0 00001000 00000002  12 00150   5900 @REGION_1964_1,12
  5931  00003C08  00000002 DROP                                           12              12
  6000  00003CBE  00000002 USING  ORDINARY    00003C80 00001000 00000002  12 00274   6037 @REGION_1965_1,12
  6038  00003D06  00000002 DROP                                           12              12
  6039  00003D06  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00734   6040 @REGION_1965_4,12
  6041  00003D0A  00000002 DROP                                           12              12
  6042  00003D0A  00000002 USING  ORDINARY    00003C80 00001000 00000002  12 00414   6271 @REGION_1965_1,12
  6272  0000404C  00000002 DROP                                           12              12
  6273  0000404C  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00730   6274 @REGION_1965_4,12
  6275  00004050  00000002 DROP                                           12              12
  6276  00004050  00000002 USING  ORDINARY    00003C80 00001000 00000002  12 006C8   6495 @REGION_1965_1,12
  6496  00004344  00000002 DROP                                           12              12
  6497  00004344  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00730   6498 @REGION_1965_4,12
  6499  00004348  00000002 DROP                                           12              12
  6500  00004348  00000002 USING  ORDINARY    00003C80 00001000 00000002  12 006E4   6509 @REGION_1965_1,12
  6510  00004360  00000002 DROP                                           12              12
  6511  00004360  00000002 USING  ORDINARY    00004542 00001000 00000002  12 00878   6512 @REGION_1965_2,12
  6513  00004364  00000002 DROP                                           12              12
  6514  00004364  00000002 USING  ORDINARY    00003C80 00001000 00000002  12 006F6   6596 @REGION_1965_1,12
  6597  00004372  00000002 DROP                                           12              12
  6598  00004372  00000002 USING  ORDINARY    00004542 00001000 00000002  12 00184   6599 @REGION_1965_2,12
  6600  00004376  00000002 DROP                                           12              12
  6601  00004376  00000002 USING  ORDINARY    00003C80 00001000 00000002  12 00728   6614 @REGION_1965_1,12
  6615  000043A4  00000002 DROP                                           12              12
  6616  000043A4  00000002 USING  ORDINARY    00004542 00001000 00000002  12 0016A   6617 @REGION_1965_2,12
  6618  000043A8  00000002 DROP                                           12              12
  6619  000043A8  00000002 USING  ORDINARY    00003C80 00001000 00000002  12 00738   6623 @REGION_1965_1,12
  6624  000043B4  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  234 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
  6625  000043B4  00000002 USING  ORDINARY    00004542 00001000 00000002  12 000C0   6626 @REGION_1965_2,12
  6627  000043B8  00000002 DROP                                           12              12
  6628  000043B8  00000002 USING  ORDINARY    00003C80 00001000 00000002  12 008B2   6728 @REGION_1965_1,12
  6729  0000452E  00000002 DROP                                           12              12
  6730  0000452E  00000002 USING  ORDINARY    00004542 00001000 00000002  12 00000   6731 @REGION_1965_2,12
  6732  00004532  00000002 DROP                                           12              12
  6733  00004532  00000002 USING  ORDINARY    00003C80 00001000 00000002  12 002E0   6737 @REGION_1965_1,12
  6739  00004542  00000002 DROP                                           12              12
  6740  00004542  00000002 USING  ORDINARY    00004542 00001000 00000002  12 000EE   6782 @REGION_1965_2,12
  6783  0000460E  00000002 DROP                                           12              12
  6784  0000460E  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00730   6785 @REGION_1965_4,12
  6786  00004612  00000002 DROP                                           12              12
  6787  00004612  00000002 USING  ORDINARY    00004542 00001000 00000002  12 00456   6989 @REGION_1965_2,12
  6990  00004976  00000002 DROP                                           12              12
  6991  00004976  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00730   6992 @REGION_1965_4,12
  6993  0000497A  00000002 DROP                                           12              12
  6994  0000497A  00000002 USING  ORDINARY    00004542 00001000 00000002  12 00752   7200 @REGION_1965_2,12
  7201  00004C90  00000002 DROP                                           12              12
  7202  00004C90  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00730   7203 @REGION_1965_4,12
  7204  00004C94  00000002 DROP                                           12              12
  7205  00004C94  00000002 USING  ORDINARY    00004542 00001000 00000002  12 0088C   7299 @REGION_1965_2,12
  7300  00004DCA  00000002 DROP                                           12              12
  7301  00004DCA  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00734   7302 @REGION_1965_4,12
  7303  00004DCE  00000002 DROP                                           12              12
  7304  00004DCE  00000002 USING  ORDINARY    00004542 00001000 00000002  12 008C8   7344 @REGION_1965_2,12
  7345  00004E06  00000002 DROP                                           12              12
  7346  00004E06  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 00230   7347 @REGION_1965_3,12
  7348  00004E0A  00000002 DROP                                           12              12
  7349  00004E0A  00000002 USING  ORDINARY    00004542 00001000 00000002  12 008FA   7362 @REGION_1965_2,12
  7363  00004E38  00000002 DROP                                           12              12
  7364  00004E38  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 00230   7365 @REGION_1965_3,12
  7366  00004E3C  00000002 DROP                                           12              12
  7367  00004E3C  00000002 USING  ORDINARY    00004542 00001000 00000002  12 0090A   7371 @REGION_1965_2,12
  7372  00004E48  00000002 DROP                                           12              12
  7373  00004E48  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 00220   7374 @REGION_1965_3,12
  7375  00004E4C  00000002 DROP                                           12              12
  7376  00004E4C  00000002 USING  ORDINARY    00004542 00001000 00000002  12 009AC   7416 @REGION_1965_2,12
  7417  00004EEA  00000002 DROP                                           12              12
  7418  00004EEA  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 00000   7419 @REGION_1965_3,12
  7420  00004EEE  00000002 DROP                                           12              12
  7421  00004EEE  00000002 USING  ORDINARY    00004542 00001000 00000002  12 00166   7424 @REGION_1965_2,12
  7426  00004EF8  00000002 DROP                                           12              12
  7427  00004EF8  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 0015A   7548 @REGION_1965_3,12
  7549  00005124  00000002 DROP                                           12              12
  7550  00005124  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00730   7551 @REGION_1965_4,12
  7552  00005128  00000002 DROP                                           12              12
  7553  00005128  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 004D6   7796 @REGION_1965_3,12
  7797  000053B0  00000002 DROP                                           12              12
  7798  000053B0  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00730   7799 @REGION_1965_4,12
  7800  000053B4  00000002 DROP                                           12              12
  7801  000053B4  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 007A8   7983 @REGION_1965_3,12
  7984  0000567E  00000002 DROP                                           12              12
  7985  0000567E  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00730   7986 @REGION_1965_4,12
                                                      Using Map                                                            Page  235 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
  7987  00005682  00000002 DROP                                           12              12
  7988  00005682  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 007C6   8005 @REGION_1965_3,12
  8006  000056BA  00000002 DROP                                           12              12
  8007  000056BA  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00208   8008 @REGION_1965_4,12
  8009  000056BE  00000002 DROP                                           12              12
  8010  000056BE  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 007FC   8024 @REGION_1965_3,12
  8025  000056F0  00000002 DROP                                           12              12
  8026  000056F0  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00208   8027 @REGION_1965_4,12
  8028  000056F4  00000002 DROP                                           12              12
  8029  000056F4  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 00834   8043 @REGION_1965_3,12
  8044  00005728  00000002 DROP                                           12              12
  8045  00005728  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00208   8046 @REGION_1965_4,12
  8047  0000572C  00000002 DROP                                           12              12
  8048  0000572C  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 0086A   8062 @REGION_1965_3,12
  8063  0000575E  00000002 DROP                                           12              12
  8064  0000575E  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 00208   8065 @REGION_1965_4,12
  8066  00005762  00000002 DROP                                           12              12
  8067  00005762  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 0087A   8071 @REGION_1965_3,12
  8072  0000576E  00000002 DROP                                           12              12
  8073  0000576E  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 001FE   8074 @REGION_1965_4,12
  8075  00005772  00000002 DROP                                           12              12
  8076  00005772  00000002 USING  ORDINARY    00004EF8 00001000 00000002  12 00916   8155 @REGION_1965_3,12
  8157  0000589A  00000002 DROP                                           12              12
  8158  0000589A  00000002 USING  ORDINARY    0000589A 00001000 00000002  12 0080E   8761 @REGION_1965_4,12
  8786  000060F0  00000002 DROP                                           12              12
  8980  00006196  00000002 USING  ORDINARY    00006158 00001000 00000002  12 0039A   9296 @REGION_1961_1,12
  9323  0000653A  00000002 DROP                                           12              12
  9396  000065E6  00000002 USING  ORDINARY    000065A8 00001000 00000002  12 00096   9428 @REGION_1889_1,12
  9451  00006686  00000002 DROP                                           12              12
  9521  0000672E  00000002 USING  ORDINARY    000066F0 00001000 00000002  12 0007C   9548 @REGION_1890_1,12
  9570  000067C8  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  236 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_COORD ..\asg\asm\rdkafka_coord.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCPRV   C:\DIGNUS\MACLIB\dccprv
  L5  DCCEPIL  C:\DIGNUS\MACLIB\dccepil

Assembly Start Time: 12.42.58 Stop Time: 12.42.58 Processor Time: 00.00.00.0740
Return Code 000
