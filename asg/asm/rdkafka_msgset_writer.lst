                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_msgset_writer.obj ../asg/asm/rdkafka_msgset_writer.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_msgset_writer.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_MSGSET_WRITER
          SD 00000002 00000000 00007AB2            07  @CODE
rd_buf_write_seek
          ER 00000003                                  RD_BUF_WRITE_SEEK
malloc    ER 00000004                                  MALLOC
rd_kafka_set_fatal_error0
          ER 00000005                                  RD_KAFKA_SET_FATAL_ERROR0
rd_buf_write
          ER 00000006                                  RD_BUF_WRITE
rd_buf_write_update
          ER 00000007                                  RD_BUF_WRITE_UPDATE
rd_buf_push0
          ER 00000008                                  RD_BUF_PUSH0
rd_hdr_histogram_record
          ER 00000009                                  RD_HDR_HISTOGRAM_RECORD
@@PT3ML   ER 0000000A                                  PTHREAD_MUTEX_LOCK
@@PT3MU   ER 0000000B                                  PTHREAD_MUTEX_UNLOCK
crc_table XD 0000000C 00000003 00000000                CRC_TABLE
rd_slice_init
          ER 0000000D                                  RD_SLICE_INIT
rd_kafka_msgq_insert_msgq
          ER 0000000E                                  RD_KAFKA_MSGQ_INSERT_MSGQ
rd_kafka_lz4_compress
          ER 0000000F                                  RD_KAFKA_LZ4_COMPRESS
rd_kafka_msgbatch_init
          ER 00000010                                  RD_KAFKA_MSGBATCH_INIT
rd_kafka_snappy_init_env_sg
          ER 00000011                                  RD_KAFKA_SNAPPY_INIT_ENV_SG
rd_kafka_msgbatch_set_first_msg
          ER 00000012                                  RD_KAFKA_MSGBATCH_SET_FIRST_MSG
rd_kafka_snappy_free_env
          ER 00000013                                  RD_KAFKA_SNAPPY_FREE_ENV
rd_kafka_msgbatch_ready_produce
          ER 00000014                                  RD_KAFKA_MSGBATCH_READY_PRODUCE
snprintf  ER 00000015                                  SNPRINTF
rd_kafka_snappy_compress_iov
          ER 00000016                                  RD_KAFKA_SNAPPY_COMPRESS_IOV
rd_slice_get_iov
          ER 00000017                                  RD_SLICE_GET_IOV
strerror  ER 00000018                                  STRERROR
rd_kafka_snappy_max_compressed_length
          ER 00000019                                  RD_KAFKA_SNAPPY_MAX_COMPRESSED_LENGTH
rd_slice_crc32c
          ER 0000001A                                  RD_SLICE_CRC32C
@@ASSERT  ER 0000001B                                  __ASSERT
rd_kafka_broker_ApiVersion_supported
          ER 0000001C                                  RD_KAFKA_BROKER_$API$VERSION_SUPPORTED
mtx_lock  ER 0000001D                                  MTX_LOCK
GETTFD@Y  ER 0000001E                                  GETTIMEOFDAY
mtx_unlock
          ER 0000001F                                  MTX_UNLOCK
rd_list_elem
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
          ER 00000020                                  RD_LIST_ELEM
rd_kafka_buf_destroy_final
          ER 00000021                                  RD_KAFKA_BUF_DESTROY_FINAL
rd_kafka_buf_push0
          ER 00000022                                  RD_KAFKA_BUF_PUSH0
rd_kafka_buf_new_request0
          ER 00000023                                  RD_KAFKA_BUF_NEW_REQUEST0
rd_kafka_crash
          ER 00000024                                  RD_KAFKA_CRASH
calloc    ER 00000025                                  CALLOC
free      ER 00000026                                  FREE
rd_kafka_log0
          ER 00000027                                  RD_KAFKA_LOG0
@rdkafka_msgset_writer&
          XD 00000028 00000007 000006D8                @@STATIC
@rdkafka_msgset_writer
          SD 00000029 00007AB8 00000FA6            07  @DATA
crc_table ER 0000002A                                  @ECRC_TABLE
rdkafka_msgset_writer:
          SD 0000002B 00008A60 00001040            07  @@INIT@
@@ALLOCA  ER 0000002C
rd_kafka_msgset_create_ProduceRequest
          LD          00007918          00000002   00  RD_KAFKA_MSGSET_CREATE_$PRODUCE$REQUEST
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:35:48 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DD4E2C7E2C5E36DE6D9C9E3C5D9'
00000000                00000000 00007AB2     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D94A287A285A36DA69989A38599'
                                              18 rd_buf_write_seek ALIAS X'99846D82A4866DA69989A3856DA2858592'
                                              19          EXTRN rd_buf_write_seek
                                              20 malloc   ALIAS C'malloc'
                                              21          EXTRN malloc
                                              22 rd_kafka_set_fatal_error0 ALIAS X'99846D92818692816DA285A36D8681A381936*
                                                                D8599999699F0'
                                              23          EXTRN rd_kafka_set_fatal_error0
                                              24 rd_buf_write ALIAS X'99846D82A4866DA69989A385'
                                              25          EXTRN rd_buf_write
                                              26 rd_buf_write_update ALIAS X'99846D82A4866DA69989A3856DA4978481A385'
                                              27          EXTRN rd_buf_write_update
                                              28 rd_buf_push0 ALIAS X'99846D82A4866D97A4A288F0'
                                              29          EXTRN rd_buf_push0
                                              30 rd_hdr_histogram_record ALIAS X'99846D8884996D8889A2A396879981946D99858*
                                                                3969984'
                                              31          EXTRN rd_hdr_histogram_record
                                              32 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              33          EXTRN pthread_mutex_lock
                                              34 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              35          EXTRN pthread_mutex_unlock
                                              36 crc_table ALIAS X'8399836DA381829385'
                                              37 crc_table DXD   0F
                                              38 rd_slice_init ALIAS X'99846DA2938983856D899589A3'
                                              39          EXTRN rd_slice_init
                                              40 rd_kafka_msgq_insert_msgq ALIAS X'99846D92818692816D94A287986D8995A2859*
                                                                9A36D94A28798'
                                              41          EXTRN rd_kafka_msgq_insert_msgq
                                              42 rd_kafka_lz4_compress ALIAS X'99846D92818692816D93A9F46D839694979985A2A*
                                                                2'
                                              43          EXTRN rd_kafka_lz4_compress
                                              44 rd_kafka_msgbatch_init ALIAS X'99846D92818692816D94A2878281A383886D8995*
                                                                89A3'
                                              45          EXTRN rd_kafka_msgbatch_init
                                              46 rd_kafka_snappy_init_env_sg ALIAS X'99846D92818692816DA295819797A86D899*
                                                                589A36D8595A56DA287'
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              47          EXTRN rd_kafka_snappy_init_env_sg
                                              48 rd_kafka_msgbatch_set_first_msg ALIAS X'99846D92818692816D94A2878281A38*
                                                                3886DA285A36D868999A2A36D94A287'
                                              49          EXTRN rd_kafka_msgbatch_set_first_msg
                                              50 rd_kafka_snappy_free_env ALIAS X'99846D92818692816DA295819797A86D869985*
                                                                856D8595A5'
                                              51          EXTRN rd_kafka_snappy_free_env
                                              52 rd_kafka_msgbatch_ready_produce ALIAS X'99846D92818692816D94A2878281A38*
                                                                3886D99858184A86D97999684A48385'
                                              53          EXTRN rd_kafka_msgbatch_ready_produce
                                              54 snprintf ALIAS C'snprintf'
                                              55          EXTRN snprintf
                                              56 rd_kafka_snappy_compress_iov ALIAS X'99846D92818692816DA295819797A86D83*
                                                                9694979985A2A26D8996A5'
                                              57          EXTRN rd_kafka_snappy_compress_iov
                                              58 rd_slice_get_iov ALIAS X'99846DA2938983856D8785A36D8996A5'
                                              59          EXTRN rd_slice_get_iov
                                              60 strerror ALIAS C'strerror'
                                              61          EXTRN strerror
                                              62 rd_kafka_snappy_max_compressed_length ALIAS X'99846D92818692816DA295819*
                                                                797A86D9481A76D839694979985A2A285846D93859587A388'
                                              63          EXTRN rd_kafka_snappy_max_compressed_length
                                              64 rd_slice_crc32c ALIAS X'99846DA2938983856D839983F3F283'
                                              65          EXTRN rd_slice_crc32c
                                              66 __assert ALIAS C'@@ASSERT'
                                              67          EXTRN __assert
                                              68 rd_kafka_broker_$Api$Version_supported ALIAS X'99846D92818692816D829996*
                                                                9285996DC19789E58599A28996956DA2A497979699A38584'
                                              69          EXTRN rd_kafka_broker_$Api$Version_supported
                                              70 mtx_lock ALIAS X'94A3A76D93968392'
                                              71          EXTRN mtx_lock
                                              72 gettimeofday ALIAS C'GETTFD@Y'
                                              73          EXTRN gettimeofday
                                              74 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              75          EXTRN mtx_unlock
                                              76 rd_list_elem ALIAS X'99846D9389A2A36D85938594'
                                              77          EXTRN rd_list_elem
                                              78 rd_kafka_buf_destroy_final ALIAS X'99846D92818692816D82A4866D8485A2A399*
                                                                96A86D8689958193'
                                              79          EXTRN rd_kafka_buf_destroy_final
                                              80 rd_kafka_buf_push0 ALIAS X'99846D92818692816D82A4866D97A4A288F0'
                                              81          EXTRN rd_kafka_buf_push0
                                              82 rd_kafka_buf_new_request0 ALIAS X'99846D92818692816D82A4866D9585A66D998*
                                                                598A485A2A3F0'
                                              83          EXTRN rd_kafka_buf_new_request0
                                              84 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                              85          EXTRN rd_kafka_crash
                                              86 calloc   ALIAS C'calloc'
                                              87          EXTRN calloc
                                              88 free     ALIAS C'free'
                                              89          EXTRN free
                                              90 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              91          EXTRN rd_kafka_log0
                                              92 *
                                              93 *
                                              94 *
                                              95 * ....... start of ebcdic_2_utf8
00000000                                      96 @LNAME338 DS   0H
00000000 0000000D                             97          DC    X'0000000D'
00000004 8582838489836DF2                     98          DC    C'ebcdic_2_utf8'
00000011 00                                   99          DC    X'00'
                                             100 ebcdic_2_utf8 DCCPRLG CINDEX=338,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME338
                                             101          macro
                                             102          dccextrn &m
                                             103          gblc    &$dccext(1000)
                                             104          gbla    &$dccexti
                                             105          lcla    &i
                                             106 &$dccext(&$dccexti+1) setc    '&m'
                                             107 &i       seta    1
                                             108 .loop    aif    (&i gt &$dccexti).around
                                             109          aif    ('&$dccext(&i)' eq '&m').getout
                                             110 &i       seta    &i+1
                                             111          ago     .loop
                                             112 .around  anop
                                             113 &$dccexti seta &$dccexti+1
                                             114          extrn  &m
                                             115 .getout  anop
                                             116          mend
00000018                                     117+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              118+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  119+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            120+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    121+         dc ad(@PER_338)                                                02-DCCCA
00000028 00000000000000B0                    122+         dc ad(176)                                                     02-DCCCA
00000030 0000000000000000                    123+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    124+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  125+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  126+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  127+         dc al1(3)                                                      02-DCCCA
00000043 08                                  128+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  129+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              130+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    131+         dc ad(@LNAME338)                                               02-DCCCA
00000050                                     132+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                    133+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    134+         dc ad(0)                                                       02-DCCCA
00000060                                     135+         ds    0d                                                       01-DCCPR
00000060                                     136+ebcdic_2_utf8 ds 0d                                                     01-DCCPR
00000060                                     137+@REGION_338_1 ds 0h                                                     01-DCCPR
00000060 EBEC D008 0024          00000008    138+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    139+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    140+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           141+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000076 E3B0 C018 0004          00000018    142+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B0               000000B0    143+         aghi  14,176              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    144+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    145+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     146+@PER_338 ds    0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    147+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    148+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           149+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           150+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             151+         using @REGION_338_1,12                                         01-DCCPR
                                             152          DCCPRV REG=9      ; Get PRV from DVT
0000009E E390 B008 0004          00000008    153+         LG 9,8(0,11)                                                   01-DCCPR
000000A4 B904 0031                           154          LGR   3,1         ; ptr to parm area
                                             155 * ******* End of Prologue
                                             156 * *
                                             157 * ***       const unsigned char* outstart = out;
000000A8 E340 3000 0004          00000000    158          LG    4,0(0,3)    ; out
000000AE B904 00F4                           159          LGR   15,4
000000B2 E310 3008 0004          00000008    160          LG    1,8(0,3)    ; outlen
000000B8 E350 3010 0004          00000010    161          LG    5,16(0,3)   ; in
000000BE B904 0025                           162          LGR   2,5
000000C2 E330 3018 0004          00000018    163          LG    3,24(0,3)   ; inlen
                                             164 * ***       const unsigned char* base = in;
                                             165 * ***       const unsigned char* processed = in;
000000C8 B904 0065                           166          LGR   6,5         ; processed
                                             167 * ***       const unsigned char* inend = in + (*inlen);
000000CC E370 3000 0004          00000000    168          LG    7,0(0,3)    ; inlen
000000D2 4177 5000               00000000    169          LA    7,0(7,5)
                                             170 * ***       const unsigned char* outend = out + (*outlen);
000000D6 E380 1000 0004          00000000    171          LG    8,0(0,1)    ; outlen
000000DC 4188 4000               00000000    172          LA    8,0(8,4)
                                             173 * ***       unsigned char c;
                                             174 * ***
                                             175 * ***       while ((in < inend) && ((out - outstart) < *outlen)) {
000000E0 47F0 C104               00000164    176          B     @L6
000000E8                                     177          DS    0D
000000E8 000000B0                            178 @FRAMESIZE_338 DC F'176'
000000EC 00000000
000000F0 00000000000000FF                    179 @lit_338_2 DC  FD'255' 0x00000000000000ff
000000F8 00000000                            180 @lit_338_1 DC  Q(@@STATIC)
000000FC                                     181 @L5      DS    0H
                                             182 * ***           c = *in++;
000000FC B904 00A2                           183          LGR   10,2
00000100 4120 2001               00000001    184          LA    2,1(0,2)
00000104 43A0 A000               00000000    185          IC    10,0(0,10)
00000108 42A0 D0A8               000000A8    186          STC   10,168(0,13) ; c
                                             187 * ***           if (c > 0xFF)
0000010C 18BA                                188          LR    11,10
0000010E C0BB 0000 00FF                      189          NILF  11,X'000000FF'
00000114 A7BE 00FF               000000FF    190          CHI   11,255
00000118 47D0 C0D8               00000138    191          BNH   @L8
                                             192 * ***           {
                                                                                                                           Page    9 
  Active Usings: @REGION_338_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             193 * ***               *outlen = out - outstart;
0000011C B909 00F4                           194          SGR   15,4
00000120 E3F0 1000 0024          00000000    195          STG   15,0(0,1)   ; outlen
                                             196 * ***               *inlen = processed - base;
00000126 B909 0065                           197          SGR   6,5
0000012A E360 3000 0024          00000000    198          STG   6,0(0,3)    ; inlen
                                             199 * ***               return(-1);
00000130 A7F9 FFFF               0000FFFF    200          LGHI  15,-1       ; -1
00000134 47F0 C136               00000196    201          B     @ret_lab_338
                                             202 * ***           }
00000138                                     203 @L8      DS    0H
                                             204 * ***
                                             205 * ***           if (out >= outend)
00000138 B920 00F8                           206          CGR   15,8
0000013C 47B0 C11E               0000017E    207          BNL   @L3
                                             208 * ***               break;
00000140                                     209 @L9      DS    0H
                                             210 * ***
                                             211 * ***           *out++ = E2U[c];
00000140 B904 006F                           212          LGR   6,15
00000144 41F0 F001               00000001    213          LA    15,1(0,15)
00000148 E3B0 C098 0014          000000F8    214          LGF   11,@lit_338_1
0000014E 41BB 9000               00000000    215          LA    11,0(11,9)
00000152 E3A0 C090 0080          000000F0    216          NG    10,@lit_338_2
00000158 43AA B000               00000000    217          IC    10,0(10,11)
0000015C 42A0 6000               00000000    218          STC   10,0(0,6)
                                             219 * ***           processed = (unsigned char*)in;
00000160 B904 0062                           220          LGR   6,2         ; processed
                                             221 * ***
                                             222 * ***       }
00000164                                     223 @L6      DS    0H
00000164 B920 0027                           224          CGR   2,7
00000168 47B0 C11E               0000017E    225          BNL   @L3
0000016C B904 00AF                           226          LGR   10,15
00000170 B909 00A4                           227          SGR   10,4
00000174 E3A0 1000 0021          00000000    228          CLG   10,0(0,1)
0000017A 4740 C09C               000000FC    229          BL    @L5
0000017E                                     230 @L3      DS    0H
                                             231 * ***
                                             232 * ***       *outlen = out - outstart;
0000017E B909 00F4                           233          SGR   15,4
00000182 E3F0 1000 0024          00000000    234          STG   15,0(0,1)   ; outlen
                                             235 * ***       *inlen = processed - base;
00000188 B909 0065                           236          SGR   6,5
0000018C E360 3000 0024          00000000    237          STG   6,0(0,3)    ; inlen
                                             238 * ***       return(0);
00000192 A7F9 0000               00000000    239          LGHI  15,0        ; 0
                                             240 * ***   }
00000196                                     241 @ret_lab_338 DS 0H
                                             242 * * **** Start of Epilogue
                                             243          DCCEPIL
00000196                                     244+         ds 0h                                                          01-DCCEP
                                                                                                                           Page   10 
  Active Usings: @REGION_338_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             245+* Epilog
00000196 D707 D088 D088 00000088 00000088    246+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000019C E3D0 D080 0004          00000080    247+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000001A2 E3C0 D090 0004          00000090    248+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000001A8 E3B0 C018 0004          00000018    249+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000001AE E3C0 B010 0021          00000010    250+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000001B4 E3E0 D008 0004          00000008    251+         lg  14,8(0,13)          load up return address                 01-DCCEP
000001BA EB1C D020 0004          00000020    252+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000001C0 078E                                253+         bcr 8,14                if same dsab, just return              01-DCCEP
000001C2 E3F0 D010 0024          00000010    254+         stg 15,16(0,13)         save return code                       01-DCCEP
000001C8 E300 D018 0024          00000018    255+         stg 0,24(0,13)          save more return code                  01-DCCEP
000001CE E3F0 D090 0004          00000090    256+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000001D4 E3F0 F018 0004          00000018    257+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000001DA 47F0 F040               00000040    258+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             259+* End of Epilog
                                             260 * * **** End of Epilogue
                                             261          DROP  12
                                             262 *
                                             263 *   DSECT for automatic variables in "ebcdic_2_utf8"
                                             264 *      (FUNCTION #338)
                                             265 *
00000000                00000000 000000A9    266 @AUTO#ebcdic_2_utf8 DSECT
00000000                                     267          DS    XL168
000000A8                                     268 ebcdic_2_utf8#c#0 DS 1CL1  ; c
                                             269 *
000001DE                00000000 00007AB2    270 @CODE    CSECT
                                             271 *
                                             272 *
                                             273 *
                                             274 * ....... start of rd_atomic32_sub
000001DE                                     275 @LNAME734 DS   0H
000001DE 0000000F                            276          DC    X'0000000F'
000001E2 99846D81A3969489                    277          DC    C'rd_atomic32_sub'
000001F1 00                                  278          DC    X'00'
                                             279 rd_atomic32_sub DCCPRLG CINDEX=734,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME734
                                             280          macro
                                             281          dccextrn &m
                                             282          gblc    &$dccext(1000)
                                             283          gbla    &$dccexti
                                             284          lcla    &i
                                             285 &$dccext(&$dccexti+1) setc    '&m'
                                             286 &i       seta    1
                                             287 .loop    aif    (&i gt &$dccexti).around
                                             288          aif    ('&$dccext(&i)' eq '&m').getout
                                             289 &i       seta    &i+1
                                             290          ago     .loop
                                             291 .around  anop
                                             292 &$dccexti seta &$dccexti+1
                                             293          extrn  &m
                                             294 .getout  anop
                                             295          mend
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000001F8                                     296+$eye0006    ds    0d                                                    02-DCCCA
000001F8 C4C3C3                              297+         dc cl3'DCC'                                                    02-DCCCA
000001FB 01                                  298+         dc xl1'01' format one                                          02-DCCCA
000001FC 00000000                            299+         dc a(0)                                                        02-DCCCA
00000200 000000000000026A                    300+         dc ad(@PER_734)                                                02-DCCCA
00000208 00000000000000B8                    301+         dc ad(184)                                                     02-DCCCA
00000210 0000000000000000                    302+         dc ad(0)                                                       02-DCCCA
00000218 0000000000001000                    303+         dc ad(4096)                                                    02-DCCCA
00000220 20                                  304+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000221 03                                  305+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000222 03                                  306+         dc al1(3)                                                      02-DCCCA
00000223 08                                  307+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000224 00                                  308+         dc bl.8'00000000'                                              02-DCCCA
00000225 000000                              309+         dc al3(0)                                                      02-DCCCA
00000228 00000000000001DE                    310+         dc ad(@LNAME734)                                               02-DCCCA
00000230                                     311+         ds 0d                                                          02-DCCCA
00000230 00000000000001F8                    312+         dc ad($eye0006)                                                02-DCCCA
00000238 0000000000000000                    313+         dc ad(0)                                                       02-DCCCA
00000240                                     314+         ds    0d                                                       01-DCCPR
00000240                                     315+rd_atomic32_sub ds 0d                                                   01-DCCPR
00000240                                     316+@REGION_734_1 ds 0h                                                     01-DCCPR
00000240 EBEC D008 0024          00000008    317+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000246 E3E0 D088 0004          00000088    318+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000024C E3C0 D090 0004          00000090    319+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000252 B904 002E                           320+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000256 E3B0 C018 0004          00000018    321+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000025C A7EB 00B8               000000B8    322+         aghi  14,184              increase by frame size               01-DCCPR
00000260 E3E0 C020 0021          00000020    323+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000266 4720 B020               00000020    324+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000026A                                     325+@PER_734 ds    0h                                                       01-DCCPR
0000026A EBDE 2080 0024          00000080    326+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000270 E3C0 2090 0024          00000090    327+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000276 B904 00D2                           328+         lgr   13,2                set real frame pointer               01-DCCPR
0000027A B904 00CF                           329+         lgr   12,15               set base reg                         01-DCCPR
                        00000240             330+         using @REGION_734_1,12                                         01-DCCPR
0000027E B904 0031                           331          LGR   3,1         ; ptr to parm area
                                             332 * ******* End of Prologue
                                             333 * *
00000282 E320 3000 0004          00000000    334          LG    2,0(0,3)    ; ra
                                             335 * ***
                                             336 * ***      int32_t r;
                                             337 * ***      pthread_mutex_lock(&ra->lock);
00000288 41F0 2008               00000008    338          LA    15,8(0,2)
0000028C E3F0 D0B0 0024          000000B0    339          STG   15,176(0,13)
00000292 4110 D0B0               000000B0    340          LA    1,176(0,13)
00000296 E3F0 C0D8 0004          00000318    341          LG    15,@lit_734_5 ; pthread_mutex_lock
0000029C                                     342 @@gen_label4 DS    0H
0000029C 05EF                                343          BALR  14,15
0000029E                                     344 @@gen_label5 DS    0H
                                             345 * ***      ra->val -= v;
0000029E 58F0 2000               00000000    346          L     15,0(0,2)
000002A2 5BF0 300C               0000000C    347          S     15,12(0,3)
                                                                                                                           Page   12 
  Active Usings: @REGION_734_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000002A6 50F0 2000               00000000    348          ST    15,0(0,2)
                                             349 * ***      r = ra->val;
000002AA 183F                                350          LR    3,15        ; ra
                                             351 * ***      pthread_mutex_unlock(&ra->lock);
000002AC 41F0 2008               00000008    352          LA    15,8(0,2)
000002B0 E3F0 D0B0 0024          000000B0    353          STG   15,176(0,13)
000002B6 4110 D0B0               000000B0    354          LA    1,176(0,13)
000002BA E3F0 C0E0 0004          00000320    355          LG    15,@lit_734_6 ; pthread_mutex_unlock
000002C0                                     356 @@gen_label6 DS    0H
000002C0 05EF                                357          BALR  14,15
000002C2                                     358 @@gen_label7 DS    0H
                                             359 * ***      return r;
000002C2 B914 00F3                           360          LGFR  15,3
                                             361 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             362 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             363 * ***
                                             364 * ***   }
                                             365 * * **** Start of Epilogue
                                             366          DCCEPIL
000002C6                                     367+         ds 0h                                                          01-DCCEP
                                             368+* Epilog
000002C6 D707 D088 D088 00000088 00000088    369+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000002CC E3D0 D080 0004          00000080    370+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000002D2 E3C0 D090 0004          00000090    371+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000002D8 E3B0 C018 0004          00000018    372+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000002DE E3C0 B010 0021          00000010    373+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000002E4 E3E0 D008 0004          00000008    374+         lg  14,8(0,13)          load up return address                 01-DCCEP
000002EA EB1C D020 0004          00000020    375+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000002F0 078E                                376+         bcr 8,14                if same dsab, just return              01-DCCEP
000002F2 E3F0 D010 0024          00000010    377+         stg 15,16(0,13)         save return code                       01-DCCEP
000002F8 E300 D018 0024          00000018    378+         stg 0,24(0,13)          save more return code                  01-DCCEP
000002FE E3F0 D090 0004          00000090    379+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000304 E3F0 F018 0004          00000018    380+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000030A 47F0 F040               00000040    381+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             382+* End of Epilog
                                             383 * * **** End of Epilogue
00000310                                     384          DS    0D
00000310 000000B8                            385 @FRAMESIZE_734 DC F'184'
00000314 00000000
00000318 0000000000000000                    386 @lit_734_5 DC  AD(pthread_mutex_lock)
00000320 0000000000000000                    387 @lit_734_6 DC  AD(pthread_mutex_unlock)
                                             388          DROP  12
                                             389 *
                                             390 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             391 *      (FUNCTION #734)
                                             392 *
00000000                00000000 000000AC    393 @AUTO#rd_atomic32_sub DSECT
00000000                                     394          DS    XL168
000000A8                                     395 rd_atomic32_sub#r#0 DS 1F  ; r
                                             396 *
00000328                00000000 00007AB2    397 @CODE    CSECT
                                             398 *
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             399 *
                                             400 *
                                             401 * ....... start of rd_atomic64_add
00000328                                     402 @LNAME738 DS   0H
00000328 0000000F                            403          DC    X'0000000F'
0000032C 99846D81A3969489                    404          DC    C'rd_atomic64_add'
0000033B 00                                  405          DC    X'00'
                                             406 rd_atomic64_add DCCPRLG CINDEX=738,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME738
                                             407          macro
                                             408          dccextrn &m
                                             409          gblc    &$dccext(1000)
                                             410          gbla    &$dccexti
                                             411          lcla    &i
                                             412 &$dccext(&$dccexti+1) setc    '&m'
                                             413 &i       seta    1
                                             414 .loop    aif    (&i gt &$dccexti).around
                                             415          aif    ('&$dccext(&i)' eq '&m').getout
                                             416 &i       seta    &i+1
                                             417          ago     .loop
                                             418 .around  anop
                                             419 &$dccexti seta &$dccexti+1
                                             420          extrn  &m
                                             421 .getout  anop
                                             422          mend
00000340                                     423+$eye0009    ds    0d                                                    02-DCCCA
00000340 C4C3C3                              424+         dc cl3'DCC'                                                    02-DCCCA
00000343 01                                  425+         dc xl1'01' format one                                          02-DCCCA
00000344 00000000                            426+         dc a(0)                                                        02-DCCCA
00000348 00000000000003B2                    427+         dc ad(@PER_738)                                                02-DCCCA
00000350 00000000000000B8                    428+         dc ad(184)                                                     02-DCCCA
00000358 0000000000000000                    429+         dc ad(0)                                                       02-DCCCA
00000360 0000000000001000                    430+         dc ad(4096)                                                    02-DCCCA
00000368 20                                  431+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000369 03                                  432+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000036A 03                                  433+         dc al1(3)                                                      02-DCCCA
0000036B 08                                  434+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000036C 00                                  435+         dc bl.8'00000000'                                              02-DCCCA
0000036D 000000                              436+         dc al3(0)                                                      02-DCCCA
00000370 0000000000000328                    437+         dc ad(@LNAME738)                                               02-DCCCA
00000378                                     438+         ds 0d                                                          02-DCCCA
00000378 0000000000000340                    439+         dc ad($eye0009)                                                02-DCCCA
00000380 0000000000000000                    440+         dc ad(0)                                                       02-DCCCA
00000388                                     441+         ds    0d                                                       01-DCCPR
00000388                                     442+rd_atomic64_add ds 0d                                                   01-DCCPR
00000388                                     443+@REGION_738_1 ds 0h                                                     01-DCCPR
00000388 EBEC D008 0024          00000008    444+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000038E E3E0 D088 0004          00000088    445+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000394 E3C0 D090 0004          00000090    446+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000039A B904 002E                           447+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000039E E3B0 C018 0004          00000018    448+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000003A4 A7EB 00B8               000000B8    449+         aghi  14,184              increase by frame size               01-DCCPR
                                                                                                                           Page   14 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000003A8 E3E0 C020 0021          00000020    450+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000003AE 4720 B020               00000020    451+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000003B2                                     452+@PER_738 ds    0h                                                       01-DCCPR
000003B2 EBDE 2080 0024          00000080    453+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000003B8 E3C0 2090 0024          00000090    454+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000003BE B904 00D2                           455+         lgr   13,2                set real frame pointer               01-DCCPR
000003C2 B904 00CF                           456+         lgr   12,15               set base reg                         01-DCCPR
                        00000388             457+         using @REGION_738_1,12                                         01-DCCPR
000003C6 B904 0031                           458          LGR   3,1         ; ptr to parm area
                                             459 * ******* End of Prologue
                                             460 * *
000003CA E320 3000 0004          00000000    461          LG    2,0(0,3)    ; ra
                                             462 * ***
                                             463 * ***      int64_t r;
                                             464 * ***      pthread_mutex_lock(&ra->lock);
000003D0 41F0 2008               00000008    465          LA    15,8(0,2)
000003D4 E3F0 D0B0 0024          000000B0    466          STG   15,176(0,13)
000003DA 4110 D0B0               000000B0    467          LA    1,176(0,13)
000003DE E3F0 C0E0 0004          00000468    468          LG    15,@lit_738_8 ; pthread_mutex_lock
000003E4                                     469 @@gen_label8 DS    0H
000003E4 05EF                                470          BALR  14,15
000003E6                                     471 @@gen_label9 DS    0H
                                             472 * ***      ra->val += v;
000003E6 E3F0 2000 0004          00000000    473          LG    15,0(0,2)
000003EC E3F0 3008 0008          00000008    474          AG    15,8(0,3)
000003F2 E3F0 2000 0024          00000000    475          STG   15,0(0,2)
                                             476 * ***      r = ra->val;
000003F8 B904 003F                           477          LGR   3,15        ; ra
                                             478 * ***      pthread_mutex_unlock(&ra->lock);
000003FC 41F0 2008               00000008    479          LA    15,8(0,2)
00000400 E3F0 D0B0 0024          000000B0    480          STG   15,176(0,13)
00000406 4110 D0B0               000000B0    481          LA    1,176(0,13)
0000040A E3F0 C0E8 0004          00000470    482          LG    15,@lit_738_9 ; pthread_mutex_unlock
00000410                                     483 @@gen_label10 DS    0H
00000410 05EF                                484          BALR  14,15
00000412                                     485 @@gen_label11 DS    0H
                                             486 * ***      return r;
00000412 B904 00F3                           487          LGR   15,3
                                             488 * ***   # 222 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             489 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             490 * ***
                                             491 * ***   }
                                             492 * * **** Start of Epilogue
                                             493          DCCEPIL
00000416                                     494+         ds 0h                                                          01-DCCEP
                                             495+* Epilog
00000416 D707 D088 D088 00000088 00000088    496+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000041C E3D0 D080 0004          00000080    497+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000422 E3C0 D090 0004          00000090    498+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000428 E3B0 C018 0004          00000018    499+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000042E E3C0 B010 0021          00000010    500+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000434 E3E0 D008 0004          00000008    501+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page   15 
  Active Usings: @REGION_738_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000043A EB1C D020 0004          00000020    502+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000440 078E                                503+         bcr 8,14                if same dsab, just return              01-DCCEP
00000442 E3F0 D010 0024          00000010    504+         stg 15,16(0,13)         save return code                       01-DCCEP
00000448 E300 D018 0024          00000018    505+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000044E E3F0 D090 0004          00000090    506+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000454 E3F0 F018 0004          00000018    507+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000045A 47F0 F040               00000040    508+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             509+* End of Epilog
                                             510 * * **** End of Epilogue
00000460                                     511          DS    0D
00000460 000000B8                            512 @FRAMESIZE_738 DC F'184'
00000464 00000000
00000468 0000000000000000                    513 @lit_738_8 DC  AD(pthread_mutex_lock)
00000470 0000000000000000                    514 @lit_738_9 DC  AD(pthread_mutex_unlock)
                                             515          DROP  12
                                             516 *
                                             517 *   DSECT for automatic variables in "rd_atomic64_add"
                                             518 *      (FUNCTION #738)
                                             519 *
00000000                00000000 000000B0    520 @AUTO#rd_atomic64_add DSECT
00000000                                     521          DS    XL168
000000A8                                     522 rd_atomic64_add#r#0 DS 8XL1 ; r
                                             523 *
00000478                00000000 00007AB2    524 @CODE    CSECT
                                             525 *
                                             526 *
                                             527 *
                                             528 * ....... start of rd_malloc
00000478                                     529 @LNAME752 DS   0H
00000478 00000009                            530          DC    X'00000009'
0000047C 99846D9481939396                    531          DC    C'rd_malloc'
00000485 00                                  532          DC    X'00'
                                             533 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                             534          macro
                                             535          dccextrn &m
                                             536          gblc    &$dccext(1000)
                                             537          gbla    &$dccexti
                                             538          lcla    &i
                                             539 &$dccext(&$dccexti+1) setc    '&m'
                                             540 &i       seta    1
                                             541 .loop    aif    (&i gt &$dccexti).around
                                             542          aif    ('&$dccext(&i)' eq '&m').getout
                                             543 &i       seta    &i+1
                                             544          ago     .loop
                                             545 .around  anop
                                             546 &$dccexti seta &$dccexti+1
                                             547          extrn  &m
                                             548 .getout  anop
                                             549          mend
00000488                                     550+$eye0012    ds    0d                                                    02-DCCCA
00000488 C4C3C3                              551+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000048B 01                                  552+         dc xl1'01' format one                                          02-DCCCA
0000048C 00000000                            553+         dc a(0)                                                        02-DCCCA
00000490 00000000000004FA                    554+         dc ad(@PER_752)                                                02-DCCCA
00000498 00000000000000D0                    555+         dc ad(208)                                                     02-DCCCA
000004A0 0000000000000000                    556+         dc ad(0)                                                       02-DCCCA
000004A8 0000000000001000                    557+         dc ad(4096)                                                    02-DCCCA
000004B0 20                                  558+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000004B1 03                                  559+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000004B2 03                                  560+         dc al1(3)                                                      02-DCCCA
000004B3 08                                  561+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000004B4 00                                  562+         dc bl.8'00000000'                                              02-DCCCA
000004B5 000000                              563+         dc al3(0)                                                      02-DCCCA
000004B8 0000000000000478                    564+         dc ad(@LNAME752)                                               02-DCCCA
000004C0                                     565+         ds 0d                                                          02-DCCCA
000004C0 0000000000000488                    566+         dc ad($eye0012)                                                02-DCCCA
000004C8 0000000000000000                    567+         dc ad(0)                                                       02-DCCCA
000004D0                                     568+         ds    0d                                                       01-DCCPR
000004D0                                     569+rd_malloc ds   0d                                                       01-DCCPR
000004D0                                     570+@REGION_752_1 ds 0h                                                     01-DCCPR
000004D0 EBEC D008 0024          00000008    571+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000004D6 E3E0 D088 0004          00000088    572+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000004DC E3C0 D090 0004          00000090    573+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000004E2 B904 002E                           574+         lgr   2,14                copy addr of our savearea            01-DCCPR
000004E6 E3B0 C018 0004          00000018    575+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000004EC A7EB 00D0               000000D0    576+         aghi  14,208              increase by frame size               01-DCCPR
000004F0 E3E0 C020 0021          00000020    577+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000004F6 4720 B020               00000020    578+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000004FA                                     579+@PER_752 ds    0h                                                       01-DCCPR
000004FA EBDE 2080 0024          00000080    580+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000500 E3C0 2090 0024          00000090    581+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000506 B904 00D2                           582+         lgr   13,2                set real frame pointer               01-DCCPR
0000050A B904 00CF                           583+         lgr   12,15               set base reg                         01-DCCPR
                        000004D0             584+         using @REGION_752_1,12                                         01-DCCPR
                                             585 * ******* End of Prologue
                                             586 * *
                                             587 * ***      void *p = malloc(sz);
0000050E E3F0 1000 0004          00000000    588          LG    15,0(0,1)   ; sz
00000514 E3F0 D0B0 0024          000000B0    589          STG   15,176(0,13)
0000051A 4110 D0B0               000000B0    590          LA    1,176(0,13)
0000051E E3F0 C0F0 0004          000005C0    591          LG    15,@lit_752_11 ; malloc
00000524                                     592 @@gen_label12 DS    0H
00000524 05EF                                593          BALR  14,15
00000526                                     594 @@gen_label13 DS    0H
00000526 B904 002F                           595          LGR   2,15
                                             596 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             597 * ka\\src\\rd.h", 128, "p"));
0000052A B902 00F2                           598          LTGR  15,2
0000052E 4770 C09A               0000056A    599          BNZ   @L34
00000532                                     600 @L33     DS    0H
00000532 E3F0 C108 0004          000005D8    601          LG    15,@lit_752_12
00000538 41F0 F00A               0000000A    602          LA    15,10(0,15)
0000053C E3F0 D0B0 0024          000000B0    603          STG   15,176(0,13)
                                                                                                                           Page   17 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000542 E3F0 C100 0004          000005D0    604          LG    15,@lit_752_13
00000548 E3F0 D0B8 0024          000000B8    605          STG   15,184(0,13)
0000054E E548 D0C0 0080          000000C0    606          MVGHI 192(13),128
00000554 41F0 F020               00000020    607          LA    15,32(0,15)
00000558 E3F0 D0C8 0024          000000C8    608          STG   15,200(0,13)
0000055E 4110 D0B0               000000B0    609          LA    1,176(0,13)
00000562 E3F0 C0F8 0004          000005C8    610          LG    15,@lit_752_14 ; __assert
00000568                                     611 @@gen_label15 DS    0H
00000568 05EF                                612          BALR  14,15
0000056A                                     613 @@gen_label16 DS    0H
0000056A                                     614 @L34     DS    0H
                                             615 * ***      return p;
0000056A B904 00F2                           616          LGR   15,2
                                             617 * ***   }
                                             618 * * **** Start of Epilogue
                                             619          DCCEPIL
0000056E                                     620+         ds 0h                                                          01-DCCEP
                                             621+* Epilog
0000056E D707 D088 D088 00000088 00000088    622+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000574 E3D0 D080 0004          00000080    623+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000057A E3C0 D090 0004          00000090    624+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000580 E3B0 C018 0004          00000018    625+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000586 E3C0 B010 0021          00000010    626+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000058C E3E0 D008 0004          00000008    627+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000592 EB1C D020 0004          00000020    628+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000598 078E                                629+         bcr 8,14                if same dsab, just return              01-DCCEP
0000059A E3F0 D010 0024          00000010    630+         stg 15,16(0,13)         save return code                       01-DCCEP
000005A0 E300 D018 0024          00000018    631+         stg 0,24(0,13)          save more return code                  01-DCCEP
000005A6 E3F0 D090 0004          00000090    632+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000005AC E3F0 F018 0004          00000018    633+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000005B2 47F0 F040               00000040    634+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             635+* End of Epilog
                                             636 * * **** End of Epilogue
000005B8                                     637          DS    0D
000005B8 000000D0                            638 @FRAMESIZE_752 DC F'208'
000005BC 00000000
000005C0 0000000000000000                    639 @lit_752_11 DC AD(malloc)
000005C8 0000000000000000                    640 @lit_752_14 DC AD(__assert)
000005D0 0000000000007DEC                    641 @lit_752_13 DC AD(@strings@)
000005D8 0000000000007AB8                    642 @lit_752_12 DC AD(@DATA)
                                             643          DROP  12
                                             644 *
                                             645 *   DSECT for automatic variables in "rd_malloc"
                                             646 *      (FUNCTION #752)
                                             647 *
00000000                00000000 000000A8    648 @AUTO#rd_malloc DSECT
00000000                                     649          DS    XL168
                                             650 *
000005E0                00000000 00007AB2    651 @CODE    CSECT
                                             652 *
                                             653 *
                                             654 *
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             655 * ....... start of rd_free
000005E0                                     656 @LNAME754 DS   0H
000005E0 00000007                            657          DC    X'00000007'
000005E4 99846D86998585                      658          DC    C'rd_free'
000005EB 00                                  659          DC    X'00'
                                             660 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             661          macro
                                             662          dccextrn &m
                                             663          gblc    &$dccext(1000)
                                             664          gbla    &$dccexti
                                             665          lcla    &i
                                             666 &$dccext(&$dccexti+1) setc    '&m'
                                             667 &i       seta    1
                                             668 .loop    aif    (&i gt &$dccexti).around
                                             669          aif    ('&$dccext(&i)' eq '&m').getout
                                             670 &i       seta    &i+1
                                             671          ago     .loop
                                             672 .around  anop
                                             673 &$dccexti seta &$dccexti+1
                                             674          extrn  &m
                                             675 .getout  anop
                                             676          mend
000005F0                                     677+$eye0015    ds    0d                                                    02-DCCCA
000005F0 C4C3C3                              678+         dc cl3'DCC'                                                    02-DCCCA
000005F3 01                                  679+         dc xl1'01' format one                                          02-DCCCA
000005F4 00000000                            680+         dc a(0)                                                        02-DCCCA
000005F8 0000000000000662                    681+         dc ad(@PER_754)                                                02-DCCCA
00000600 00000000000000B0                    682+         dc ad(176)                                                     02-DCCCA
00000608 0000000000000000                    683+         dc ad(0)                                                       02-DCCCA
00000610 0000000000001000                    684+         dc ad(4096)                                                    02-DCCCA
00000618 20                                  685+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000619 03                                  686+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000061A 03                                  687+         dc al1(3)                                                      02-DCCCA
0000061B 08                                  688+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000061C 00                                  689+         dc bl.8'00000000'                                              02-DCCCA
0000061D 000000                              690+         dc al3(0)                                                      02-DCCCA
00000620 00000000000005E0                    691+         dc ad(@LNAME754)                                               02-DCCCA
00000628                                     692+         ds 0d                                                          02-DCCCA
00000628 00000000000005F0                    693+         dc ad($eye0015)                                                02-DCCCA
00000630 0000000000000000                    694+         dc ad(0)                                                       02-DCCCA
00000638                                     695+         ds    0d                                                       01-DCCPR
00000638                                     696+rd_free  ds    0d                                                       01-DCCPR
00000638                                     697+@REGION_754_1 ds 0h                                                     01-DCCPR
00000638 EBEC D008 0024          00000008    698+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000063E E3E0 D088 0004          00000088    699+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000644 E3C0 D090 0004          00000090    700+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000064A B904 002E                           701+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000064E E3B0 C018 0004          00000018    702+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000654 A7EB 00B0               000000B0    703+         aghi  14,176              increase by frame size               01-DCCPR
00000658 E3E0 C020 0021          00000020    704+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000065E 4720 B020               00000020    705+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000662                                     706+@PER_754 ds    0h                                                       01-DCCPR
00000662 EBDE 2080 0024          00000080    707+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000668 E3C0 2090 0024          00000090    708+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000066E B904 00D2                           709+         lgr   13,2                set real frame pointer               01-DCCPR
00000672 B904 00CF                           710+         lgr   12,15               set base reg                         01-DCCPR
                        00000638             711+         using @REGION_754_1,12                                         01-DCCPR
                                             712 * ******* End of Prologue
                                             713 * *
                                             714 * ***      free(ptr);
00000676 E3F0 1000 0004          00000000    715          LG    15,0(0,1)   ; ptr
0000067C E3F0 D0A8 0024          000000A8    716          STG   15,168(0,13)
00000682 4110 D0A8               000000A8    717          LA    1,168(0,13)
00000686 E3F0 C0A8 0004          000006E0    718          LG    15,@lit_754_16 ; free
0000068C                                     719 @@gen_label17 DS    0H
0000068C 05EF                                720          BALR  14,15
0000068E                                     721 @@gen_label18 DS    0H
                                             722 * ***   }
0000068E                                     723 @ret_lab_754 DS 0H
                                             724 * * **** Start of Epilogue
                                             725          DCCEPIL
0000068E                                     726+         ds 0h                                                          01-DCCEP
                                             727+* Epilog
0000068E D707 D088 D088 00000088 00000088    728+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000694 E3D0 D080 0004          00000080    729+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000069A E3C0 D090 0004          00000090    730+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000006A0 E3B0 C018 0004          00000018    731+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000006A6 E3C0 B010 0021          00000010    732+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000006AC E3E0 D008 0004          00000008    733+         lg  14,8(0,13)          load up return address                 01-DCCEP
000006B2 EB1C D020 0004          00000020    734+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000006B8 078E                                735+         bcr 8,14                if same dsab, just return              01-DCCEP
000006BA E3F0 D010 0024          00000010    736+         stg 15,16(0,13)         save return code                       01-DCCEP
000006C0 E300 D018 0024          00000018    737+         stg 0,24(0,13)          save more return code                  01-DCCEP
000006C6 E3F0 D090 0004          00000090    738+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000006CC E3F0 F018 0004          00000018    739+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000006D2 47F0 F040               00000040    740+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             741+* End of Epilog
                                             742 * * **** End of Epilogue
000006D8                                     743          DS    0D
000006D8 000000B0                            744 @FRAMESIZE_754 DC F'176'
000006DC 00000000
000006E0 0000000000000000                    745 @lit_754_16 DC AD(free)
                                             746          DROP  12
                                             747 *
                                             748 *   DSECT for automatic variables in "rd_free"
                                             749 *      (FUNCTION #754)
                                             750 *
00000000                00000000 000000A8    751 @AUTO#rd_free DSECT
00000000                                     752          DS    XL168
                                             753 *
000006E8                00000000 00007AB2    754 @CODE    CSECT
                                             755 *
                                             756 *
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             757 *
                                             758 * ....... start of rd_refcnt_sub0
000006E8                                     759 @LNAME758 DS   0H
000006E8 0000000E                            760          DC    X'0000000E'
000006EC 99846D9985868395                    761          DC    C'rd_refcnt_sub0'
000006FA 00                                  762          DC    X'00'
                                             763 rd_refcnt_sub0 DCCPRLG CINDEX=758,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME758
                                             764          macro
                                             765          dccextrn &m
                                             766          gblc    &$dccext(1000)
                                             767          gbla    &$dccexti
                                             768          lcla    &i
                                             769 &$dccext(&$dccexti+1) setc    '&m'
                                             770 &i       seta    1
                                             771 .loop    aif    (&i gt &$dccexti).around
                                             772          aif    ('&$dccext(&i)' eq '&m').getout
                                             773 &i       seta    &i+1
                                             774          ago     .loop
                                             775 .around  anop
                                             776 &$dccexti seta &$dccexti+1
                                             777          extrn  &m
                                             778 .getout  anop
                                             779          mend
00000700                                     780+$eye0018    ds    0d                                                    02-DCCCA
00000700 C4C3C3                              781+         dc cl3'DCC'                                                    02-DCCCA
00000703 01                                  782+         dc xl1'01' format one                                          02-DCCCA
00000704 00000000                            783+         dc a(0)                                                        02-DCCCA
00000708 0000000000000772                    784+         dc ad(@PER_758)                                                02-DCCCA
00000710 00000000000000D0                    785+         dc ad(208)                                                     02-DCCCA
00000718 0000000000000000                    786+         dc ad(0)                                                       02-DCCCA
00000720 0000000000001000                    787+         dc ad(4096)                                                    02-DCCCA
00000728 20                                  788+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000729 03                                  789+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000072A 03                                  790+         dc al1(3)                                                      02-DCCCA
0000072B 08                                  791+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000072C 00                                  792+         dc bl.8'00000000'                                              02-DCCCA
0000072D 000000                              793+         dc al3(0)                                                      02-DCCCA
00000730 00000000000006E8                    794+         dc ad(@LNAME758)                                               02-DCCCA
00000738                                     795+         ds 0d                                                          02-DCCCA
00000738 0000000000000700                    796+         dc ad($eye0018)                                                02-DCCCA
00000740 0000000000000000                    797+         dc ad(0)                                                       02-DCCCA
00000748                                     798+         ds    0d                                                       01-DCCPR
00000748                                     799+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
00000748                                     800+@REGION_758_1 ds 0h                                                     01-DCCPR
00000748 EBEC D008 0024          00000008    801+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000074E E3E0 D088 0004          00000088    802+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000754 E3C0 D090 0004          00000090    803+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000075A B904 002E                           804+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000075E E3B0 C018 0004          00000018    805+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000764 A7EB 00D0               000000D0    806+         aghi  14,208              increase by frame size               01-DCCPR
00000768 E3E0 C020 0021          00000020    807+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000076E 4720 B020               00000020    808+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000772                                     809+@PER_758 ds    0h                                                       01-DCCPR
00000772 EBDE 2080 0024          00000080    810+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000778 E3C0 2090 0024          00000090    811+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000077E B904 00D2                           812+         lgr   13,2                set real frame pointer               01-DCCPR
00000782 B904 00CF                           813+         lgr   12,15               set base reg                         01-DCCPR
                        00000748             814+         using @REGION_758_1,12                                         01-DCCPR
                                             815 * ******* End of Prologue
                                             816 * *
                                             817 * ***           int r;
                                             818 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                             819 * ***           r = rd_atomic32_sub(R, 1);
00000786 E3F0 1000 0004          00000000    820          LG    15,0(0,1)   ; R
0000078C E3F0 D0B0 0024          000000B0    821          STG   15,176(0,13)
00000792 E548 D0B8 0001          000000B8    822          MVGHI 184(13),1
00000798 4110 D0B0               000000B0    823          LA    1,176(0,13)
0000079C E3F0 C100 0004          00000848    824          LG    15,@lit_758_18 ; rd_atomic32_sub
000007A2                                     825 @@gen_label19 DS    0H
000007A2 05EF                                826          BALR  14,15
000007A4                                     827 @@gen_label20 DS    0H
000007A4 122F                                828          LTR   2,15
                                             829 * ***
                                             830 * ***           if (r < 0)
000007A6 47B0 C0A6               000007EE    831          BNL   @L41
                                             832 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                             833 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                             834 * zero\""));
000007AA E3F0 C108 0004          00000850    835          LG    15,@lit_758_19
000007B0 4110 F022               00000022    836          LA    1,34(0,15)
000007B4 9500 1000      00000000 00000000    837          CLI   0(1),0
000007B8 4780 C0A6               000007EE    838          BE    @L41
000007BC                                     839 @L42     DS    0H
000007BC E310 C118 0004          00000860    840          LG    1,@lit_758_20
000007C2 4110 1036               00000036    841          LA    1,54(0,1)
000007C6 E310 D0B0 0024          000000B0    842          STG   1,176(0,13)
000007CC E3F0 D0B8 0024          000000B8    843          STG   15,184(0,13)
000007D2 E548 D0C0 014F          000000C0    844          MVGHI 192(13),335
000007D8 41F0 F032               00000032    845          LA    15,50(0,15)
000007DC E3F0 D0C8 0024          000000C8    846          STG   15,200(0,13)
000007E2 4110 D0B0               000000B0    847          LA    1,176(0,13)
000007E6 E3F0 C110 0004          00000858    848          LG    15,@lit_758_21 ; __assert
000007EC                                     849 @@gen_label23 DS    0H
000007EC 05EF                                850          BALR  14,15
000007EE                                     851 @@gen_label24 DS    0H
000007EE                                     852 @L43     DS    0H
000007EE                                     853 @L41     DS    0H
                                             854 * ***           return r;
000007EE B914 00F2                           855          LGFR  15,2
                                             856 * ***   }
                                             857 * * **** Start of Epilogue
                                             858          DCCEPIL
000007F2                                     859+         ds 0h                                                          01-DCCEP
                                                                                                                           Page   22 
  Active Usings: @REGION_758_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             860+* Epilog
000007F2 D707 D088 D088 00000088 00000088    861+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000007F8 E3D0 D080 0004          00000080    862+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000007FE E3C0 D090 0004          00000090    863+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000804 E3B0 C018 0004          00000018    864+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000080A E3C0 B010 0021          00000010    865+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000810 E3E0 D008 0004          00000008    866+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000816 EB1C D020 0004          00000020    867+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000081C 078E                                868+         bcr 8,14                if same dsab, just return              01-DCCEP
0000081E E3F0 D010 0024          00000010    869+         stg 15,16(0,13)         save return code                       01-DCCEP
00000824 E300 D018 0024          00000018    870+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000082A E3F0 D090 0004          00000090    871+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000830 E3F0 F018 0004          00000018    872+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000836 47F0 F040               00000040    873+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             874+* End of Epilog
                                             875 * * **** End of Epilogue
00000840                                     876          DS    0D
00000840 000000D0                            877 @FRAMESIZE_758 DC F'208'
00000844 00000000
00000848 0000000000000240                    878 @lit_758_18 DC AD(rd_atomic32_sub)
00000850 0000000000007DEC                    879 @lit_758_19 DC AD(@strings@)
00000858 0000000000000000                    880 @lit_758_21 DC AD(__assert)
00000860 0000000000007AB8                    881 @lit_758_20 DC AD(@DATA)
                                             882          DROP  12
                                             883 *
                                             884 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                             885 *      (FUNCTION #758)
                                             886 *
00000000                00000000 000000AC    887 @AUTO#rd_refcnt_sub0 DSECT
00000000                                     888          DS    XL168
000000A8                                     889 rd_refcnt_sub0#r#0 DS 1F   ; r
                                             890 *
00000868                00000000 00007AB2    891 @CODE    CSECT
                                             892 *
                                             893 *
                                             894 *
                                             895 * ....... start of rd_clock
00000868                                     896 @LNAME1088 DS  0H
00000868 00000008                            897          DC    X'00000008'
0000086C 99846D8393968392                    898          DC    C'rd_clock'
00000874 00                                  899          DC    X'00'
                                             900 rd_clock DCCPRLG CINDEX=1088,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1088
                                             901          macro
                                             902          dccextrn &m
                                             903          gblc    &$dccext(1000)
                                             904          gbla    &$dccexti
                                             905          lcla    &i
                                             906 &$dccext(&$dccexti+1) setc    '&m'
                                             907 &i       seta    1
                                             908 .loop    aif    (&i gt &$dccexti).around
                                             909          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             910 &i       seta    &i+1
                                             911          ago     .loop
                                             912 .around  anop
                                             913 &$dccexti seta &$dccexti+1
                                             914          extrn  &m
                                             915 .getout  anop
                                             916          mend
00000878                                     917+$eye0021    ds    0d                                                    02-DCCCA
00000878 C4C3C3                              918+         dc cl3'DCC'                                                    02-DCCCA
0000087B 01                                  919+         dc xl1'01' format one                                          02-DCCCA
0000087C 00000000                            920+         dc a(0)                                                        02-DCCCA
00000880 00000000000008EA                    921+         dc ad(@PER_1088)                                               02-DCCCA
00000888 00000000000000C8                    922+         dc ad(200)                                                     02-DCCCA
00000890 0000000000000000                    923+         dc ad(0)                                                       02-DCCCA
00000898 0000000000001000                    924+         dc ad(4096)                                                    02-DCCCA
000008A0 20                                  925+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000008A1 03                                  926+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000008A2 03                                  927+         dc al1(3)                                                      02-DCCCA
000008A3 08                                  928+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000008A4 00                                  929+         dc bl.8'00000000'                                              02-DCCCA
000008A5 000000                              930+         dc al3(0)                                                      02-DCCCA
000008A8 0000000000000868                    931+         dc ad(@LNAME1088)                                              02-DCCCA
000008B0                                     932+         ds 0d                                                          02-DCCCA
000008B0 0000000000000878                    933+         dc ad($eye0021)                                                02-DCCCA
000008B8 0000000000000000                    934+         dc ad(0)                                                       02-DCCCA
000008C0                                     935+         ds    0d                                                       01-DCCPR
000008C0                                     936+rd_clock ds    0d                                                       01-DCCPR
000008C0                                     937+@REGION_1088_1 ds 0h                                                    01-DCCPR
000008C0 EBEC D008 0024          00000008    938+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000008C6 E3E0 D088 0004          00000088    939+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000008CC E3C0 D090 0004          00000090    940+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000008D2 B904 002E                           941+         lgr   2,14                copy addr of our savearea            01-DCCPR
000008D6 E3B0 C018 0004          00000018    942+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000008DC A7EB 00C8               000000C8    943+         aghi  14,200              increase by frame size               01-DCCPR
000008E0 E3E0 C020 0021          00000020    944+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000008E6 4720 B020               00000020    945+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000008EA                                     946+@PER_1088 ds   0h                                                       01-DCCPR
000008EA EBDE 2080 0024          00000080    947+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000008F0 E3C0 2090 0024          00000090    948+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000008F6 B904 00D2                           949+         lgr   13,2                set real frame pointer               01-DCCPR
000008FA B904 00CF                           950+         lgr   12,15               set base reg                         01-DCCPR
                        000008C0             951+         using @REGION_1088_1,12                                        01-DCCPR
                                             952 * ******* End of Prologue
                                             953 * *
                                             954 * ***   # 97 "C:\asgkafka\librdkafka\src\rdtime.h"
                                             955 * ***       struct timeval tv;
                                             956 * ***       gettimeofday(&tv, ((void *)0));
000008FE 41F0 D0A8               000000A8    957          LA    15,168(0,13)
00000902 E3F0 D0B8 0024          000000B8    958          STG   15,184(0,13)
00000908 D707 D0C0 D0C0 000000C0 000000C0    959          XC    192(8,13),192(13)
0000090E 4110 D0B8               000000B8    960          LA    1,184(0,13)
00000912 E3F0 C0C0 0004          00000980    961          LG    15,@lit_1088_23 ; gettimeofday
                                                                                                                           Page   24 
  Active Usings: @REGION_1088_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000918                                     962 @@gen_label25 DS    0H
00000918 05EF                                963          BALR  14,15
0000091A                                     964 @@gen_label26 DS    0H
                                             965 * ***       return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_\
                                             966 * usec;
0000091A E3F0 D0A8 0004          000000A8    967          LG    15,168(0,13)
00000920 C2F0 000F 4240                      968          MSGFI 15,X'000F4240'
00000926 E310 D0B0 0004          000000B0    969          LG    1,176(0,13) ; offset of tv_usec in timeval
0000092C B90A 00F1                           970          ALGR  15,1
                                             971 * ***   # 118 "C:\asgkafka\librdkafka\src\rdtime.h"
                                             972 * ***   }
                                             973 * * **** Start of Epilogue
                                             974          DCCEPIL
00000930                                     975+         ds 0h                                                          01-DCCEP
                                             976+* Epilog
00000930 D707 D088 D088 00000088 00000088    977+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000936 E3D0 D080 0004          00000080    978+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000093C E3C0 D090 0004          00000090    979+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000942 E3B0 C018 0004          00000018    980+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000948 E3C0 B010 0021          00000010    981+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000094E E3E0 D008 0004          00000008    982+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000954 EB1C D020 0004          00000020    983+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000095A 078E                                984+         bcr 8,14                if same dsab, just return              01-DCCEP
0000095C E3F0 D010 0024          00000010    985+         stg 15,16(0,13)         save return code                       01-DCCEP
00000962 E300 D018 0024          00000018    986+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000968 E3F0 D090 0004          00000090    987+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000096E E3F0 F018 0004          00000018    988+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000974 47F0 F040               00000040    989+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             990+* End of Epilog
                                             991 * * **** End of Epilogue
00000978                                     992          DS    0D
00000978 000000C8                            993 @FRAMESIZE_1088 DC F'200'
0000097C 00000000
00000980 0000000000000000                    994 @lit_1088_23 DC AD(gettimeofday)
                                             995          DROP  12
                                             996 *
                                             997 *   DSECT for automatic variables in "rd_clock"
                                             998 *      (FUNCTION #1088)
                                             999 *
00000000                00000000 000000B8   1000 @AUTO#rd_clock DSECT
00000000                                    1001          DS    XL168
000000A8                                    1002 rd_clock#tv#0 DS 16XL1     ; tv
                                            1003 *
00000988                00000000 00007AB2   1004 @CODE    CSECT
                                            1005 *
                                            1006 *
                                            1007 *
                                            1008 * ....... start of rd_interval0
00000988                                    1009 @LNAME1204 DS  0H
00000988 0000000C                           1010          DC    X'0000000C'
0000098C 99846D8995A38599                   1011          DC    C'rd_interval0'
00000998 00                                 1012          DC    X'00'
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1013 rd_interval0 DCCPRLG CINDEX=1204,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME1204
                                            1014          macro
                                            1015          dccextrn &m
                                            1016          gblc    &$dccext(1000)
                                            1017          gbla    &$dccexti
                                            1018          lcla    &i
                                            1019 &$dccext(&$dccexti+1) setc    '&m'
                                            1020 &i       seta    1
                                            1021 .loop    aif    (&i gt &$dccexti).around
                                            1022          aif    ('&$dccext(&i)' eq '&m').getout
                                            1023 &i       seta    &i+1
                                            1024          ago     .loop
                                            1025 .around  anop
                                            1026 &$dccexti seta &$dccexti+1
                                            1027          extrn  &m
                                            1028 .getout  anop
                                            1029          mend
000009A0                                    1030+$eye0024    ds    0d                                                    02-DCCCA
000009A0 C4C3C3                             1031+         dc cl3'DCC'                                                    02-DCCCA
000009A3 01                                 1032+         dc xl1'01' format one                                          02-DCCCA
000009A4 00000000                           1033+         dc a(0)                                                        02-DCCCA
000009A8 0000000000000A12                   1034+         dc ad(@PER_1204)                                               02-DCCCA
000009B0 00000000000000B0                   1035+         dc ad(176)                                                     02-DCCCA
000009B8 0000000000000000                   1036+         dc ad(0)                                                       02-DCCCA
000009C0 0000000000001000                   1037+         dc ad(4096)                                                    02-DCCCA
000009C8 20                                 1038+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000009C9 03                                 1039+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000009CA 03                                 1040+         dc al1(3)                                                      02-DCCCA
000009CB 08                                 1041+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000009CC 00                                 1042+         dc bl.8'00000000'                                              02-DCCCA
000009CD 000000                             1043+         dc al3(0)                                                      02-DCCCA
000009D0 0000000000000988                   1044+         dc ad(@LNAME1204)                                              02-DCCCA
000009D8                                    1045+         ds 0d                                                          02-DCCCA
000009D8 00000000000009A0                   1046+         dc ad($eye0024)                                                02-DCCCA
000009E0 0000000000000000                   1047+         dc ad(0)                                                       02-DCCCA
000009E8                                    1048+         ds    0d                                                       01-DCCPR
000009E8                                    1049+rd_interval0 ds 0d                                                      01-DCCPR
000009E8                                    1050+@REGION_1204_1 ds 0h                                                    01-DCCPR
000009E8 EBEC D008 0024          00000008   1051+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000009EE E3E0 D088 0004          00000088   1052+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000009F4 E3C0 D090 0004          00000090   1053+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000009FA B904 002E                          1054+         lgr   2,14                copy addr of our savearea            01-DCCPR
000009FE E3B0 C018 0004          00000018   1055+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000A04 A7EB 00B0               000000B0   1056+         aghi  14,176              increase by frame size               01-DCCPR
00000A08 E3E0 C020 0021          00000020   1057+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000A0E 4720 B020               00000020   1058+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000A12                                    1059+@PER_1204 ds   0h                                                       01-DCCPR
00000A12 EBDE 2080 0024          00000080   1060+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000A18 E3C0 2090 0024          00000090   1061+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000A1E B904 00D2                          1062+         lgr   13,2                set real frame pointer               01-DCCPR
00000A22 B904 00CF                          1063+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   26 
  Active Usings: @REGION_1204_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        000009E8            1064+         using @REGION_1204_1,12                                        01-DCCPR
00000A26 B904 0041                          1065          LGR   4,1         ; ptr to parm area
                                            1066 * ******* End of Prologue
                                            1067 * *
00000A2A E330 4000 0004          00000000   1068          LG    3,0(0,4)    ; ri
00000A30 E320 4008 0004          00000008   1069          LG    2,8(0,4)    ; interval_us
00000A36 E3F0 4010 0004          00000010   1070          LG    15,16(0,4)  ; now
                                            1071 * ***           rd_ts_t diff;
                                            1072 * ***
                                            1073 * ***           if (!now)
00000A3C B902 001F                          1074          LTGR  1,15
00000A40 4770 C064               00000A4C   1075          BNZ   @L70
                                            1076 * ***                   now = rd_clock();
00000A44 E3F0 C0A8 0004          00000A90   1077          LG    15,@lit_1204_25 ; rd_clock
00000A4A                                    1078 @@gen_label28 DS    0H
00000A4A 05EF                               1079          BALR  14,15
00000A4C                                    1080 @@gen_label29 DS    0H
00000A4C                                    1081 @L70     DS    0H
                                            1082 * ***           if (!interval_us)
00000A4C B902 0012                          1083          LTGR  1,2
00000A50 4770 C072               00000A5A   1084          BNZ   @L71
                                            1085 * ***                   interval_us = ri->ri_fixed;
00000A54 E320 3008 0004          00000008   1086          LG    2,8(0,3)    ; offset of ri_fixed in rd_interval_s
00000A5A                                    1087 @L71     DS    0H
                                            1088 * ***
                                            1089 * ***           if (ri->ri_ts_last || !immediate) {
00000A5A E310 3000 0002          00000000   1090          LTG   1,0(0,3)    ; ri
00000A60 4770 C086               00000A6E   1091          BNZ   @L73
00000A64 E310 401C 0012          0000001C   1092          LT    1,28(0,4)   ; immediate
00000A6A 4770 C0B0               00000A98   1093          BNZ   @L72
00000A6E                                    1094 @L73     DS    0H
                                            1095 * ***                   diff = now - (ri->ri_ts_last + interval_us + r\
                                            1096 * i->ri_backoff);
00000A6E E320 3000 0008          00000000   1097          AG    2,0(0,3)
00000A74 E320 3010 0018          00000010   1098          AGF   2,16(0,3)
00000A7A B904 001F                          1099          LGR   1,15
00000A7E B909 0012                          1100          SGR   1,2
                                            1101 * ***           } else
00000A82 47F0 C0B4               00000A9C   1102          B     @L74
00000A88                                    1103          DS    0D
00000A88 000000B0                           1104 @FRAMESIZE_1204 DC F'176'
00000A8C 00000000
00000A90 00000000000008C0                   1105 @lit_1204_25 DC AD(rd_clock)
00000A98                                    1106 @L72     DS    0H
                                            1107 * ***                   diff = 1;
00000A98 A719 0001               00000001   1108          LGHI  1,1         ; 1
00000A9C                                    1109 @L74     DS    0H
                                            1110 * ***           if (((diff > 0))) {
00000A9C B902 0021                          1111          LTGR  2,1
00000AA0 47D0 C0C8               00000AB0   1112          BNH   @L75
                                            1113 * ***                   ri->ri_ts_last = now;
00000AA4 E3F0 3000 0024          00000000   1114          STG   15,0(0,3)   ; ri
                                                                                                                           Page   27 
  Active Usings: @REGION_1204_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1115 * ***                   ri->ri_backoff = 0;
00000AAA E54C 3010 0000          00000010   1116          MVHI  16(3),0     ; offset of ri_backoff in rd_interval_s
                                            1117 * ***           }
00000AB0                                    1118 @L75     DS    0H
                                            1119 * ***
                                            1120 * ***           return diff;
00000AB0 B904 00F1                          1121          LGR   15,1
                                            1122 * ***   }
                                            1123 * * **** Start of Epilogue
                                            1124          DCCEPIL
00000AB4                                    1125+         ds 0h                                                          01-DCCEP
                                            1126+* Epilog
00000AB4 D707 D088 D088 00000088 00000088   1127+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000ABA E3D0 D080 0004          00000080   1128+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000AC0 E3C0 D090 0004          00000090   1129+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000AC6 E3B0 C018 0004          00000018   1130+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000ACC E3C0 B010 0021          00000010   1131+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000AD2 E3E0 D008 0004          00000008   1132+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000AD8 EB1C D020 0004          00000020   1133+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000ADE 078E                               1134+         bcr 8,14                if same dsab, just return              01-DCCEP
00000AE0 E3F0 D010 0024          00000010   1135+         stg 15,16(0,13)         save return code                       01-DCCEP
00000AE6 E300 D018 0024          00000018   1136+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000AEC E3F0 D090 0004          00000090   1137+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000AF2 E3F0 F018 0004          00000018   1138+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000AF8 47F0 F040               00000040   1139+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1140+* End of Epilog
                                            1141 * * **** End of Epilogue
                                            1142          DROP  12
                                            1143 *
                                            1144 *   DSECT for automatic variables in "rd_interval0"
                                            1145 *      (FUNCTION #1204)
                                            1146 *
00000000                00000000 000000B0   1147 @AUTO#rd_interval0 DSECT
00000000                                    1148          DS    XL168
000000A8                                    1149 rd_interval0#diff#0 DS 8XL1 ; diff
                                            1150 *
00000AFC                00000000 00007AB2   1151 @CODE    CSECT
                                            1152 *
                                            1153 *
                                            1154 *
                                            1155 * ....... start of rd_avg_add
00000AFC                                    1156 @LNAME1222 DS  0H
00000AFC 0000000A                           1157          DC    X'0000000A'
00000B00 99846D81A5876D81                   1158          DC    C'rd_avg_add'
00000B0A 00                                 1159          DC    X'00'
                                            1160 rd_avg_add DCCPRLG CINDEX=1222,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME1222
                                            1161          macro
                                            1162          dccextrn &m
                                            1163          gblc    &$dccext(1000)
                                            1164          gbla    &$dccexti
                                            1165          lcla    &i
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1166 &$dccext(&$dccexti+1) setc    '&m'
                                            1167 &i       seta    1
                                            1168 .loop    aif    (&i gt &$dccexti).around
                                            1169          aif    ('&$dccext(&i)' eq '&m').getout
                                            1170 &i       seta    &i+1
                                            1171          ago     .loop
                                            1172 .around  anop
                                            1173 &$dccexti seta &$dccexti+1
                                            1174          extrn  &m
                                            1175 .getout  anop
                                            1176          mend
00000B10                                    1177+$eye0027    ds    0d                                                    02-DCCCA
00000B10 C4C3C3                             1178+         dc cl3'DCC'                                                    02-DCCCA
00000B13 01                                 1179+         dc xl1'01' format one                                          02-DCCCA
00000B14 00000000                           1180+         dc a(0)                                                        02-DCCCA
00000B18 0000000000000B82                   1181+         dc ad(@PER_1222)                                               02-DCCCA
00000B20 00000000000000B8                   1182+         dc ad(184)                                                     02-DCCCA
00000B28 0000000000000000                   1183+         dc ad(0)                                                       02-DCCCA
00000B30 0000000000001000                   1184+         dc ad(4096)                                                    02-DCCCA
00000B38 20                                 1185+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B39 03                                 1186+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B3A 03                                 1187+         dc al1(3)                                                      02-DCCCA
00000B3B 08                                 1188+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B3C 00                                 1189+         dc bl.8'00000000'                                              02-DCCCA
00000B3D 000000                             1190+         dc al3(0)                                                      02-DCCCA
00000B40 0000000000000AFC                   1191+         dc ad(@LNAME1222)                                              02-DCCCA
00000B48                                    1192+         ds 0d                                                          02-DCCCA
00000B48 0000000000000B10                   1193+         dc ad($eye0027)                                                02-DCCCA
00000B50 0000000000000000                   1194+         dc ad(0)                                                       02-DCCCA
00000B58                                    1195+         ds    0d                                                       01-DCCPR
00000B58                                    1196+rd_avg_add ds  0d                                                       01-DCCPR
00000B58                                    1197+@REGION_1222_1 ds 0h                                                    01-DCCPR
00000B58 EBEC D008 0024          00000008   1198+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B5E E3E0 D088 0004          00000088   1199+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B64 E3C0 D090 0004          00000090   1200+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B6A B904 002E                          1201+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B6E E3B0 C018 0004          00000018   1202+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B74 A7EB 00B8               000000B8   1203+         aghi  14,184              increase by frame size               01-DCCPR
00000B78 E3E0 C020 0021          00000020   1204+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B7E 4720 B020               00000020   1205+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B82                                    1206+@PER_1222 ds   0h                                                       01-DCCPR
00000B82 EBDE 2080 0024          00000080   1207+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B88 E3C0 2090 0024          00000090   1208+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000B8E B904 00D2                          1209+         lgr   13,2                set real frame pointer               01-DCCPR
00000B92 B904 00CF                          1210+         lgr   12,15               set base reg                         01-DCCPR
                        00000B58            1211+         using @REGION_1222_1,12                                        01-DCCPR
                                            1212 * ******* End of Prologue
                                            1213 * *
                                            1214 * ***           mtx_lock(&ra->ra_lock);
00000B96 E320 1008 0004          00000008   1215          LG    2,8(0,1)    ; v
00000B9C E330 1000 0004          00000000   1216          LG    3,0(0,1)    ; ra
00000BA2 41F0 3030               00000030   1217          LA    15,48(0,3)
                                                                                                                           Page   29 
  Active Usings: @REGION_1222_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000BA6 E3F0 D0A8 0024          000000A8   1218          STG   15,168(0,13)
00000BAC 4110 D0A8               000000A8   1219          LA    1,168(0,13)
00000BB0 E3F0 C090 0004          00000BE8   1220          LG    15,@lit_1222_28 ; mtx_lock
00000BB6                                    1221 @@gen_label34 DS    0H
00000BB6 05EF                               1222          BALR  14,15
00000BB8                                    1223 @@gen_label35 DS    0H
                                            1224 * ***           if (!ra->ra_enabled) {
00000BB8 E3F0 3058 0012          00000058   1225          LT    15,88(0,3)  ; offset of ra_enabled in rd_avg_s
00000BBE 4770 C0A8               00000C00   1226          BNZ   @L79
                                            1227 * ***                   mtx_unlock(&ra->ra_lock);
00000BC2 41F0 3030               00000030   1228          LA    15,48(0,3)
00000BC6 E3F0 D0A8 0024          000000A8   1229          STG   15,168(0,13)
00000BCC 4110 D0A8               000000A8   1230          LA    1,168(0,13)
00000BD0 E3F0 C098 0004          00000BF0   1231          LG    15,@lit_1222_29 ; mtx_unlock
00000BD6                                    1232 @@gen_label37 DS    0H
00000BD6 05EF                               1233          BALR  14,15
00000BD8                                    1234 @@gen_label38 DS    0H
                                            1235 * ***                   return;
00000BD8 47F0 C122               00000C7A   1236          B     @ret_lab_1222
00000BE0                                    1237          DS    0D
00000BE0 000000B8                           1238 @FRAMESIZE_1222 DC F'184'
00000BE4 00000000
00000BE8 0000000000000000                   1239 @lit_1222_28 DC AD(mtx_lock)
00000BF0 0000000000000000                   1240 @lit_1222_29 DC AD(mtx_unlock)
00000BF8 0000000000000000                   1241 @lit_1222_30 DC AD(rd_hdr_histogram_record)
                                            1242 * ***           }
00000C00                                    1243 @L79     DS    0H
                                            1244 * ***      if (v > ra->ra_v.maxv)
00000C00 E320 3000 0020          00000000   1245          CG    2,0(0,3)
00000C06 47D0 C0B8               00000C10   1246          BNH   @L80
                                            1247 * ***         ra->ra_v.maxv = v;
00000C0A E320 3000 0024          00000000   1248          STG   2,0(0,3)    ; ra
00000C10                                    1249 @L80     DS    0H
                                            1250 * ***      if (ra->ra_v.minv == 0 || v < ra->ra_v.minv)
00000C10 E558 3008 0000          00000008   1251          CGHSI 8(3),0
00000C16 4780 C0CC               00000C24   1252          BE    @L82
00000C1A E320 3008 0020          00000008   1253          CG    2,8(0,3)
00000C20 47B0 C0D2               00000C2A   1254          BNL   @L81
00000C24                                    1255 @L82     DS    0H
                                            1256 * ***         ra->ra_v.minv = v;
00000C24 E320 3008 0024          00000008   1257          STG   2,8(0,3)    ; offset of minv in 0000035
00000C2A                                    1258 @L81     DS    0H
                                            1259 * ***      ra->ra_v.sum += v;
00000C2A B904 00F2                          1260          LGR   15,2
00000C2E E3F0 3018 0008          00000018   1261          AG    15,24(0,3)
00000C34 E3F0 3018 0024          00000018   1262          STG   15,24(0,3)
                                            1263 * ***      ra->ra_v.cnt++;
00000C3A 58F0 3020               00000020   1264          L     15,32(0,3)
00000C3E A7FA 0001               00000001   1265          AHI   15,1
00000C42 50F0 3020               00000020   1266          ST    15,32(0,3)
                                            1267 * ***
                                            1268 * ***           rd_hdr_histogram_record(ra->ra_hdr, v);
                                                                                                                           Page   30 
  Active Usings: @REGION_1222_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000C46 E3F0 3060 0004          00000060   1269          LG    15,96(0,3)
00000C4C E3F0 D0A8 0024          000000A8   1270          STG   15,168(0,13)
00000C52 E320 D0B0 0024          000000B0   1271          STG   2,176(0,13)
00000C58 4110 D0A8               000000A8   1272          LA    1,168(0,13)
00000C5C E3F0 C0A0 0004          00000BF8   1273          LG    15,@lit_1222_30 ; rd_hdr_histogram_record
00000C62                                    1274 @@gen_label42 DS    0H
00000C62 05EF                               1275          BALR  14,15
00000C64                                    1276 @@gen_label43 DS    0H
                                            1277 * ***
                                            1278 * ***           mtx_unlock(&ra->ra_lock);
00000C64 41F0 3030               00000030   1279          LA    15,48(0,3)
00000C68 E3F0 D0A8 0024          000000A8   1280          STG   15,168(0,13)
00000C6E 4110 D0A8               000000A8   1281          LA    1,168(0,13)
00000C72 E3F0 C098 0004          00000BF0   1282          LG    15,@lit_1222_29 ; mtx_unlock
00000C78                                    1283 @@gen_label44 DS    0H
00000C78 05EF                               1284          BALR  14,15
00000C7A                                    1285 @@gen_label45 DS    0H
                                            1286 * ***   }
00000C7A                                    1287 @ret_lab_1222 DS 0H
                                            1288 * * **** Start of Epilogue
                                            1289          DCCEPIL
00000C7A                                    1290+         ds 0h                                                          01-DCCEP
                                            1291+* Epilog
00000C7A D707 D088 D088 00000088 00000088   1292+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000C80 E3D0 D080 0004          00000080   1293+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000C86 E3C0 D090 0004          00000090   1294+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000C8C E3B0 C018 0004          00000018   1295+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000C92 E3C0 B010 0021          00000010   1296+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C98 E3E0 D008 0004          00000008   1297+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C9E EB1C D020 0004          00000020   1298+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000CA4 078E                               1299+         bcr 8,14                if same dsab, just return              01-DCCEP
00000CA6 E3F0 D010 0024          00000010   1300+         stg 15,16(0,13)         save return code                       01-DCCEP
00000CAC E300 D018 0024          00000018   1301+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000CB2 E3F0 D090 0004          00000090   1302+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000CB8 E3F0 F018 0004          00000018   1303+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000CBE 47F0 F040               00000040   1304+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1305+* End of Epilog
                                            1306 * * **** End of Epilogue
                                            1307          DROP  12
                                            1308 *
                                            1309 *   DSECT for automatic variables in "rd_avg_add"
                                            1310 *      (FUNCTION #1222)
                                            1311 *
00000000                00000000 000000A8   1312 @AUTO#rd_avg_add DSECT
00000000                                    1313          DS    XL168
                                            1314 *
00000CC2                00000000 00007AB2   1315 @CODE    CSECT
                                            1316 *
                                            1317 *
                                            1318 *
                                            1319 * ....... start of rd_buf_write_pos
00000CC2                                    1320 @LNAME1266 DS  0H
                                                                                                                           Page   31 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000CC2 00000010                           1321          DC    X'00000010'
00000CC6 99846D82A4866DA6                   1322          DC    C'rd_buf_write_pos'
00000CD6 00                                 1323          DC    X'00'
                                            1324 rd_buf_write_pos DCCPRLG CINDEX=1266,BASER=12,FRAME=176,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1266
                                            1325          macro
                                            1326          dccextrn &m
                                            1327          gblc    &$dccext(1000)
                                            1328          gbla    &$dccexti
                                            1329          lcla    &i
                                            1330 &$dccext(&$dccexti+1) setc    '&m'
                                            1331 &i       seta    1
                                            1332 .loop    aif    (&i gt &$dccexti).around
                                            1333          aif    ('&$dccext(&i)' eq '&m').getout
                                            1334 &i       seta    &i+1
                                            1335          ago     .loop
                                            1336 .around  anop
                                            1337 &$dccexti seta &$dccexti+1
                                            1338          extrn  &m
                                            1339 .getout  anop
                                            1340          mend
00000CD8                                    1341+$eye0030    ds    0d                                                    02-DCCCA
00000CD8 C4C3C3                             1342+         dc cl3'DCC'                                                    02-DCCCA
00000CDB 01                                 1343+         dc xl1'01' format one                                          02-DCCCA
00000CDC 00000000                           1344+         dc a(0)                                                        02-DCCCA
00000CE0 0000000000000000                   1345+         dc ad(0)                                                       02-DCCCA
00000CE8 00000000000000B0                   1346+         dc ad(176)                                                     02-DCCCA
00000CF0 0000000000000000                   1347+         dc ad(0)                                                       02-DCCCA
00000CF8 0000000000001000                   1348+         dc ad(4096)                                                    02-DCCCA
00000D00 20                                 1349+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D01 03                                 1350+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D02 03                                 1351+         dc al1(3)                                                      02-DCCCA
00000D03 08                                 1352+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D04 00                                 1353+         dc bl.8'00000000'                                              02-DCCCA
00000D05 000000                             1354+         dc al3(0)                                                      02-DCCCA
00000D08 0000000000000CC2                   1355+         dc ad(@LNAME1266)                                              02-DCCCA
00000D10                                    1356+         ds 0d                                                          02-DCCCA
00000D10 0000000000000CD8                   1357+         dc ad($eye0030)                                                02-DCCCA
00000D18 0000000000000000                   1358+         dc ad(0)                                                       02-DCCCA
00000D20                                    1359+         ds    0d                                                       01-DCCPR
00000D20                                    1360+rd_buf_write_pos ds 0d                                                  01-DCCPR
00000D20                                    1361+@REGION_1266_1 ds 0h                                                    01-DCCPR
00000D20 EBEC D008 0024          00000008   1362+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D26 B904 00CF                          1363+         lgr   12,15               set base reg                         01-DCCPR
                        00000D20            1364+         using @REGION_1266_1,12                                        01-DCCPR
                                            1365 * ******* End of Prologue
                                            1366 * *
                                            1367 * ***           const rd_segment_t *seg = rbuf->rbuf_wpos;
00000D2A E3F0 1000 0004          00000000   1368          LG    15,0(0,1)   ; rbuf
00000D30 E3F0 F018 0004          00000018   1369          LG    15,24(0,15) ; offset of rbuf_wpos in rd_buf_s
                                            1370 * ***
                                            1371 * ***           if (((!seg))) {
                                                                                                                           Page   32 
  Active Usings: @REGION_1266_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000D36 B902 001F                          1372          LTGR  1,15
00000D3A 4770 C026               00000D46   1373          BNZ   @L98
                                            1374 * ***
                                            1375 * ***
                                            1376 * ***
                                            1377 * ***                   return 0;
00000D3E A7F9 0000               00000000   1378          LGHI  15,0        ; 0
00000D42 47F0 C036               00000D56   1379          B     @ret_lab_1266
                                            1380 * ***           }
00000D46                                    1381 @L98     DS    0H
                                            1382 * ***
                                            1383 * ***
                                            1384 * ***
                                            1385 * ***           return seg->seg_absof + seg->seg_of;
00000D46 E310 F028 0004          00000028   1386          LG    1,40(0,15)  ; offset of seg_absof in rd_segment_s
00000D4C E310 F018 000A          00000018   1387          ALG   1,24(0,15)
00000D52 B904 00F1                          1388          LGR   15,1
                                            1389 * ***   }
00000D56                                    1390 @ret_lab_1266 DS 0H
                                            1391 * * **** Start of Epilogue
                                            1392          DCCEPIL
00000D56                                    1393+         ds 0h                                                          01-DCCEP
                                            1394+* Epilog
                                            1395+* Epilog
00000D56 E3E0 D008 0004          00000008   1396+         lg    14,8(,13) restore the reg                                01-DCCEP
00000D5C EB1C D020 0004          00000020   1397+         lmg   1,12,32(13)                                              01-DCCEP
00000D62 07FE                               1398+         br   14                                                        01-DCCEP
                                            1399+* End of Epilog
                                            1400 * * **** End of Epilogue
                                            1401          DROP  12
                                            1402 *
                                            1403 *   DSECT for automatic variables in "rd_buf_write_pos"
                                            1404 *      (FUNCTION #1266)
                                            1405 *
00000000                00000000 000000A8   1406 @AUTO#rd_buf_write_pos DSECT
00000000                                    1407          DS    XL168
                                            1408 *
00000D64                00000000 00007AB2   1409 @CODE    CSECT
                                            1410 *
                                            1411 *
                                            1412 *
                                            1413 * ....... start of rd_buf_write_remains
00000D64                                    1414 @LNAME1267 DS  0H
00000D64 00000014                           1415          DC    X'00000014'
00000D68 99846D82A4866DA6                   1416          DC    C'rd_buf_write_remains'
00000D7C 00                                 1417          DC    X'00'
                                            1418 rd_buf_write_remains DCCPRLG CINDEX=1267,BASER=0,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1267
                                            1419          macro
                                            1420          dccextrn &m
                                            1421          gblc    &$dccext(1000)
                                            1422          gbla    &$dccexti
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1423          lcla    &i
                                            1424 &$dccext(&$dccexti+1) setc    '&m'
                                            1425 &i       seta    1
                                            1426 .loop    aif    (&i gt &$dccexti).around
                                            1427          aif    ('&$dccext(&i)' eq '&m').getout
                                            1428 &i       seta    &i+1
                                            1429          ago     .loop
                                            1430 .around  anop
                                            1431 &$dccexti seta &$dccexti+1
                                            1432          extrn  &m
                                            1433 .getout  anop
                                            1434          mend
00000D80                                    1435+$eye0033    ds    0d                                                    02-DCCCA
00000D80 C4C3C3                             1436+         dc cl3'DCC'                                                    02-DCCCA
00000D83 01                                 1437+         dc xl1'01' format one                                          02-DCCCA
00000D84 00000000                           1438+         dc a(0)                                                        02-DCCCA
00000D88 0000000000000000                   1439+         dc ad(0)                                                       02-DCCCA
00000D90 00000000000000A8                   1440+         dc ad(168)                                                     02-DCCCA
00000D98 0000000000000000                   1441+         dc ad(0)                                                       02-DCCCA
00000DA0 0000000000001000                   1442+         dc ad(4096)                                                    02-DCCCA
00000DA8 20                                 1443+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000DA9 03                                 1444+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000DAA 03                                 1445+         dc al1(3)                                                      02-DCCCA
00000DAB 08                                 1446+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000DAC 00                                 1447+         dc bl.8'00000000'                                              02-DCCCA
00000DAD 000000                             1448+         dc al3(0)                                                      02-DCCCA
00000DB0 0000000000000D64                   1449+         dc ad(@LNAME1267)                                              02-DCCCA
00000DB8                                    1450+         ds 0d                                                          02-DCCCA
00000DB8 0000000000000D80                   1451+         dc ad($eye0033)                                                02-DCCCA
00000DC0 0000000000000000                   1452+         dc ad(0)                                                       02-DCCCA
00000DC8                                    1453+         ds    0d                                                       01-DCCPR
00000DC8                                    1454+rd_buf_write_remains ds 0d                                              01-DCCPR
00000DC8                                    1455+@REGION_1267_1 ds 0h                                                    01-DCCPR
00000DC8 EBEC D008 0024          00000008   1456+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1457 * ******* End of Prologue
                                            1458 * *
                                            1459 * ***           return rbuf->rbuf_size - (rbuf->rbuf_len + rbuf->rbuf_\
                                            1460 * erased);
00000DCE E3F0 1000 0004          00000000   1461          LG    15,0(0,1)   ; rbuf
00000DD4 E310 F030 0004          00000030   1462          LG    1,48(0,15)  ; offset of rbuf_size in rd_buf_s
00000DDA E320 F020 0004          00000020   1463          LG    2,32(0,15)  ; offset of rbuf_len in rd_buf_s
00000DE0 E320 F028 000A          00000028   1464          ALG   2,40(0,15)
00000DE6 B90B 0012                          1465          SLGR  1,2
00000DEA B904 00F1                          1466          LGR   15,1
                                            1467 * ***   }
                                            1468 * * **** Start of Epilogue
                                            1469          DCCEPIL
00000DEE                                    1470+         ds 0h                                                          01-DCCEP
                                            1471+* Epilog
                                            1472+* Epilog
00000DEE E3E0 D008 0004          00000008   1473+         lg    14,8(,13) restore the reg                                01-DCCEP
00000DF4 EB1C D020 0004          00000020   1474+         lmg   1,12,32(13)                                              01-DCCEP
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000DFA 07FE                               1475+         br   14                                                        01-DCCEP
                                            1476+* End of Epilog
                                            1477 * * **** End of Epilogue
                                            1478 *
                                            1479 *   DSECT for automatic variables in "rd_buf_write_remains"
                                            1480 *      (FUNCTION #1267)
                                            1481 *
00000000                00000000 000000A8   1482 @AUTO#rd_buf_write_remains DSECT
00000000                                    1483          DS    XL168
                                            1484 *
00000DFC                00000000 00007AB2   1485 @CODE    CSECT
                                            1486 *
                                            1487 *
                                            1488 *
                                            1489 * ....... start of rd_buf_len
00000DFC                                    1490 @LNAME1270 DS  0H
00000DFC 0000000A                           1491          DC    X'0000000A'
00000E00 99846D82A4866D93                   1492          DC    C'rd_buf_len'
00000E0A 00                                 1493          DC    X'00'
                                            1494 rd_buf_len DCCPRLG CINDEX=1270,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1270
                                            1495          macro
                                            1496          dccextrn &m
                                            1497          gblc    &$dccext(1000)
                                            1498          gbla    &$dccexti
                                            1499          lcla    &i
                                            1500 &$dccext(&$dccexti+1) setc    '&m'
                                            1501 &i       seta    1
                                            1502 .loop    aif    (&i gt &$dccexti).around
                                            1503          aif    ('&$dccext(&i)' eq '&m').getout
                                            1504 &i       seta    &i+1
                                            1505          ago     .loop
                                            1506 .around  anop
                                            1507 &$dccexti seta &$dccexti+1
                                            1508          extrn  &m
                                            1509 .getout  anop
                                            1510          mend
00000E10                                    1511+$eye0036    ds    0d                                                    02-DCCCA
00000E10 C4C3C3                             1512+         dc cl3'DCC'                                                    02-DCCCA
00000E13 01                                 1513+         dc xl1'01' format one                                          02-DCCCA
00000E14 00000000                           1514+         dc a(0)                                                        02-DCCCA
00000E18 0000000000000000                   1515+         dc ad(0)                                                       02-DCCCA
00000E20 00000000000000A8                   1516+         dc ad(168)                                                     02-DCCCA
00000E28 0000000000000000                   1517+         dc ad(0)                                                       02-DCCCA
00000E30 0000000000001000                   1518+         dc ad(4096)                                                    02-DCCCA
00000E38 20                                 1519+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E39 03                                 1520+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E3A 03                                 1521+         dc al1(3)                                                      02-DCCCA
00000E3B 08                                 1522+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E3C 00                                 1523+         dc bl.8'00000000'                                              02-DCCCA
00000E3D 000000                             1524+         dc al3(0)                                                      02-DCCCA
00000E40 0000000000000DFC                   1525+         dc ad(@LNAME1270)                                              02-DCCCA
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000E48                                    1526+         ds 0d                                                          02-DCCCA
00000E48 0000000000000E10                   1527+         dc ad($eye0036)                                                02-DCCCA
00000E50 0000000000000000                   1528+         dc ad(0)                                                       02-DCCCA
00000E58                                    1529+         ds    0d                                                       01-DCCPR
00000E58                                    1530+rd_buf_len ds  0d                                                       01-DCCPR
00000E58                                    1531+@REGION_1270_1 ds 0h                                                    01-DCCPR
00000E58 EBEC D008 0024          00000008   1532+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1533 * ******* End of Prologue
                                            1534 * *
                                            1535 * ***           return rbuf->rbuf_len;
00000E5E E3F0 1000 0004          00000000   1536          LG    15,0(0,1)   ; rbuf
00000E64 E3F0 F020 0004          00000020   1537          LG    15,32(0,15) ; offset of rbuf_len in rd_buf_s
                                            1538 * ***   }
                                            1539 * * **** Start of Epilogue
                                            1540          DCCEPIL
00000E6A                                    1541+         ds 0h                                                          01-DCCEP
                                            1542+* Epilog
                                            1543+* Epilog
00000E6A E3E0 D008 0004          00000008   1544+         lg    14,8(,13) restore the reg                                01-DCCEP
00000E70 EB1C D020 0004          00000020   1545+         lmg   1,12,32(13)                                              01-DCCEP
00000E76 07FE                               1546+         br   14                                                        01-DCCEP
                                            1547+* End of Epilog
                                            1548 * * **** End of Epilogue
                                            1549 *
                                            1550 *   DSECT for automatic variables in "rd_buf_len"
                                            1551 *      (FUNCTION #1270)
                                            1552 *
00000000                00000000 000000A8   1553 @AUTO#rd_buf_len DSECT
00000000                                    1554          DS    XL168
                                            1555 *
00000E78                00000000 00007AB2   1556 @CODE    CSECT
                                            1557 *
                                            1558 *
                                            1559 *
                                            1560 * ....... start of rd_slice_abs_offset
00000E78                                    1561 @LNAME1286 DS  0H
00000E78 00000013                           1562          DC    X'00000013'
00000E7C 99846DA293898385                   1563          DC    C'rd_slice_abs_offset'
00000E8F 00                                 1564          DC    X'00'
                                            1565 rd_slice_abs_offset DCCPRLG CINDEX=1286,BASER=12,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1286
                                            1566          macro
                                            1567          dccextrn &m
                                            1568          gblc    &$dccext(1000)
                                            1569          gbla    &$dccexti
                                            1570          lcla    &i
                                            1571 &$dccext(&$dccexti+1) setc    '&m'
                                            1572 &i       seta    1
                                            1573 .loop    aif    (&i gt &$dccexti).around
                                            1574          aif    ('&$dccext(&i)' eq '&m').getout
                                            1575 &i       seta    &i+1
                                            1576          ago     .loop
                                                                                                                           Page   36 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1577 .around  anop
                                            1578 &$dccexti seta &$dccexti+1
                                            1579          extrn  &m
                                            1580 .getout  anop
                                            1581          mend
00000E90                                    1582+$eye0039    ds    0d                                                    02-DCCCA
00000E90 C4C3C3                             1583+         dc cl3'DCC'                                                    02-DCCCA
00000E93 01                                 1584+         dc xl1'01' format one                                          02-DCCCA
00000E94 00000000                           1585+         dc a(0)                                                        02-DCCCA
00000E98 0000000000000000                   1586+         dc ad(0)                                                       02-DCCCA
00000EA0 00000000000000A8                   1587+         dc ad(168)                                                     02-DCCCA
00000EA8 0000000000000000                   1588+         dc ad(0)                                                       02-DCCCA
00000EB0 0000000000001000                   1589+         dc ad(4096)                                                    02-DCCCA
00000EB8 20                                 1590+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000EB9 03                                 1591+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000EBA 03                                 1592+         dc al1(3)                                                      02-DCCCA
00000EBB 08                                 1593+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000EBC 00                                 1594+         dc bl.8'00000000'                                              02-DCCCA
00000EBD 000000                             1595+         dc al3(0)                                                      02-DCCCA
00000EC0 0000000000000E78                   1596+         dc ad(@LNAME1286)                                              02-DCCCA
00000EC8                                    1597+         ds 0d                                                          02-DCCCA
00000EC8 0000000000000E90                   1598+         dc ad($eye0039)                                                02-DCCCA
00000ED0 0000000000000000                   1599+         dc ad(0)                                                       02-DCCCA
00000ED8                                    1600+         ds    0d                                                       01-DCCPR
00000ED8                                    1601+rd_slice_abs_offset ds 0d                                               01-DCCPR
00000ED8                                    1602+@REGION_1286_1 ds 0h                                                    01-DCCPR
00000ED8 EBEC D008 0024          00000008   1603+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000EDE B904 00CF                          1604+         lgr   12,15               set base reg                         01-DCCPR
                        00000ED8            1605+         using @REGION_1286_1,12                                        01-DCCPR
                                            1606 * ******* End of Prologue
                                            1607 * *
                                            1608 * ***           if (((!slice->seg)))
00000EE2 E3F0 1000 0004          00000000   1609          LG    15,0(0,1)   ; slice
00000EE8 E310 F008 0002          00000008   1610          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00000EEE 4770 C024               00000EFC   1611          BNZ   @L102
                                            1612 * ***                   return slice->end;
00000EF2 E3F0 F020 0004          00000020   1613          LG    15,32(0,15) ; offset of end in rd_slice_s
00000EF8 47F0 C03A               00000F12   1614          B     @ret_lab_1286
00000EFC                                    1615 @L102    DS    0H
                                            1616 * ***
                                            1617 * ***           return slice->seg->seg_absof + slice->rof;
00000EFC E310 F008 0004          00000008   1618          LG    1,8(0,15)   ; offset of seg in rd_slice_s
00000F02 E310 1028 0004          00000028   1619          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00000F08 E310 F010 000A          00000010   1620          ALG   1,16(0,15)
00000F0E B904 00F1                          1621          LGR   15,1
                                            1622 * ***   }
00000F12                                    1623 @ret_lab_1286 DS 0H
                                            1624 * * **** Start of Epilogue
                                            1625          DCCEPIL
00000F12                                    1626+         ds 0h                                                          01-DCCEP
                                            1627+* Epilog
                                            1628+* Epilog
                                                                                                                           Page   37 
  Active Usings: @REGION_1286_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000F12 E3E0 D008 0004          00000008   1629+         lg    14,8(,13) restore the reg                                01-DCCEP
00000F18 EB1C D020 0004          00000020   1630+         lmg   1,12,32(13)                                              01-DCCEP
00000F1E 07FE                               1631+         br   14                                                        01-DCCEP
                                            1632+* End of Epilog
                                            1633 * * **** End of Epilogue
                                            1634          DROP  12
                                            1635 *
                                            1636 *   DSECT for automatic variables in "rd_slice_abs_offset"
                                            1637 *      (FUNCTION #1286)
                                            1638 *
00000000                00000000 000000A8   1639 @AUTO#rd_slice_abs_offset DSECT
00000000                                    1640          DS    XL168
                                            1641 *
00000F20                00000000 00007AB2   1642 @CODE    CSECT
                                            1643 *
                                            1644 *
                                            1645 *
                                            1646 * ....... start of rd_uvarint_enc_u64
00000F20                                    1647 @LNAME1308 DS  0H
00000F20 00000012                           1648          DC    X'00000012'
00000F24 99846DA4A5819989                   1649          DC    C'rd_uvarint_enc_u64'
00000F36 00                                 1650          DC    X'00'
                                            1651 rd_uvarint_enc_u64 DCCPRLG CINDEX=1308,BASER=12,FRAME=176,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1308
                                            1652          macro
                                            1653          dccextrn &m
                                            1654          gblc    &$dccext(1000)
                                            1655          gbla    &$dccexti
                                            1656          lcla    &i
                                            1657 &$dccext(&$dccexti+1) setc    '&m'
                                            1658 &i       seta    1
                                            1659 .loop    aif    (&i gt &$dccexti).around
                                            1660          aif    ('&$dccext(&i)' eq '&m').getout
                                            1661 &i       seta    &i+1
                                            1662          ago     .loop
                                            1663 .around  anop
                                            1664 &$dccexti seta &$dccexti+1
                                            1665          extrn  &m
                                            1666 .getout  anop
                                            1667          mend
00000F38                                    1668+$eye0042    ds    0d                                                    02-DCCCA
00000F38 C4C3C3                             1669+         dc cl3'DCC'                                                    02-DCCCA
00000F3B 01                                 1670+         dc xl1'01' format one                                          02-DCCCA
00000F3C 00000000                           1671+         dc a(0)                                                        02-DCCCA
00000F40 0000000000000000                   1672+         dc ad(0)                                                       02-DCCCA
00000F48 00000000000000B0                   1673+         dc ad(176)                                                     02-DCCCA
00000F50 0000000000000000                   1674+         dc ad(0)                                                       02-DCCCA
00000F58 0000000000001000                   1675+         dc ad(4096)                                                    02-DCCCA
00000F60 20                                 1676+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F61 03                                 1677+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F62 03                                 1678+         dc al1(3)                                                      02-DCCCA
00000F63 08                                 1679+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   38 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000F64 00                                 1680+         dc bl.8'00000000'                                              02-DCCCA
00000F65 000000                             1681+         dc al3(0)                                                      02-DCCCA
00000F68 0000000000000F20                   1682+         dc ad(@LNAME1308)                                              02-DCCCA
00000F70                                    1683+         ds 0d                                                          02-DCCCA
00000F70 0000000000000F38                   1684+         dc ad($eye0042)                                                02-DCCCA
00000F78 0000000000000000                   1685+         dc ad(0)                                                       02-DCCCA
00000F80                                    1686+         ds    0d                                                       01-DCCPR
00000F80                                    1687+rd_uvarint_enc_u64 ds 0d                                                01-DCCPR
00000F80                                    1688+@REGION_1308_1 ds 0h                                                    01-DCCPR
00000F80 EBEC D008 0024          00000008   1689+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F86 B904 00CF                          1690+         lgr   12,15               set base reg                         01-DCCPR
                        00000F80            1691+         using @REGION_1308_1,12                                        01-DCCPR
00000F8A B904 0021                          1692          LGR   2,1         ; ptr to parm area
                                            1693 * ******* End of Prologue
                                            1694 * *
                                            1695 * ***           size_t of = 0;
00000F8E E3F0 2010 0004          00000010   1696          LG    15,16(0,2)  ; num
00000F94 A719 0000               00000000   1697          LGHI  1,0         ; 0
                                            1698 * ***
                                            1699 * ***           do {
00000F98                                    1700 @L105    DS    0H
                                            1701 * ***                   if (((of >= dstsize)))
00000F98 E310 2008 0021          00000008   1702          CLG   1,8(0,2)
00000F9E 4740 C038               00000FB8   1703          BL    @L108
                                            1704 * ***                           return 0;
00000FA2 A7F9 0000               00000000   1705          LGHI  15,0        ; 0
00000FA6 47F0 C084               00001004   1706          B     @ret_lab_1308
00000FB0                                    1707          DS    0D
00000FB0 000000000000007F                   1708 @lit_1308_36 DC FD'127' 0x000000000000007f
00000FB8                                    1709 @L108    DS    0H
                                            1710 * ***
                                            1711 * ***                   dst[of++] = (num & 0x7f) | (num > 0x7f ? 0x80 \
                                            1712 * : 0);
00000FB8 E330 2000 0004          00000000   1713          LG    3,0(0,2)    ; dst
00000FBE B904 0041                          1714          LGR   4,1
00000FC2 A71B 0001               00000001   1715          AGHI  1,1
00000FC6 B904 005F                          1716          LGR   5,15
00000FCA E350 C030 0080          00000FB0   1717          NG    5,@lit_1308_36
00000FD0 C2FE 0000 007F                     1718          CLGFI 15,X'0000007F'
00000FD6 47D0 C062               00000FE2   1719          BNH   @L109
00000FDA A768 0080               00000080   1720          LHI   6,128       ; 128
00000FDE 47F0 C066               00000FE6   1721          B     @L110
00000FE2                                    1722 @L109    DS    0H
00000FE2 A768 0000               00000000   1723          LHI   6,0         ; 0
00000FE6                                    1724 @L110    DS    0H
00000FE6 B914 0066                          1725          LGFR  6,6
00000FEA B981 0056                          1726          OGR   5,6
00000FEE 4254 3000               00000000   1727          STC   5,0(4,3)
                                            1728 * ***                   num >>= 7;
00000FF2 EBFF 0007 000C          00000007   1729          SRLG  15,15,7(0)
                                            1730 * ***           } while (num);
00000FF8 B902 003F                          1731          LTGR  3,15
                                                                                                                           Page   39 
  Active Usings: @REGION_1308_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000FFC 4770 C018               00000F98   1732          BNZ   @L105
                                            1733 * ***
                                            1734 * ***           return of;
00001000 B904 00F1                          1735          LGR   15,1
                                            1736 * ***   }
00001004                                    1737 @ret_lab_1308 DS 0H
                                            1738 * * **** Start of Epilogue
                                            1739          DCCEPIL
00001004                                    1740+         ds 0h                                                          01-DCCEP
                                            1741+* Epilog
                                            1742+* Epilog
00001004 E3E0 D008 0004          00000008   1743+         lg    14,8(,13) restore the reg                                01-DCCEP
0000100A EB1C D020 0004          00000020   1744+         lmg   1,12,32(13)                                              01-DCCEP
00001010 07FE                               1745+         br   14                                                        01-DCCEP
                                            1746+* End of Epilog
                                            1747 * * **** End of Epilogue
                                            1748          DROP  12
                                            1749 *
                                            1750 *   DSECT for automatic variables in "rd_uvarint_enc_u64"
                                            1751 *      (FUNCTION #1308)
                                            1752 *
00000000                00000000 000000B0   1753 @AUTO#rd_uvarint_enc_u64 DSECT
00000000                                    1754          DS    XL168
000000A8                                    1755 rd_uvarint_enc_u64#of#0 DS 8XL1 ; of
                                            1756 *
00001012                00000000 00007AB2   1757 @CODE    CSECT
                                            1758 *
                                            1759 *
                                            1760 *
                                            1761 * ....... start of rd_uvarint_enc_i64
00001012                                    1762 @LNAME1309 DS  0H
00001012 00000012                           1763          DC    X'00000012'
00001016 99846DA4A5819989                   1764          DC    C'rd_uvarint_enc_i64'
00001028 00                                 1765          DC    X'00'
                                            1766 rd_uvarint_enc_i64 DCCPRLG CINDEX=1309,BASER=12,FRAME=192,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1309
                                            1767          macro
                                            1768          dccextrn &m
                                            1769          gblc    &$dccext(1000)
                                            1770          gbla    &$dccexti
                                            1771          lcla    &i
                                            1772 &$dccext(&$dccexti+1) setc    '&m'
                                            1773 &i       seta    1
                                            1774 .loop    aif    (&i gt &$dccexti).around
                                            1775          aif    ('&$dccext(&i)' eq '&m').getout
                                            1776 &i       seta    &i+1
                                            1777          ago     .loop
                                            1778 .around  anop
                                            1779 &$dccexti seta &$dccexti+1
                                            1780          extrn  &m
                                            1781 .getout  anop
                                            1782          mend
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001030                                    1783+$eye0045    ds    0d                                                    02-DCCCA
00001030 C4C3C3                             1784+         dc cl3'DCC'                                                    02-DCCCA
00001033 01                                 1785+         dc xl1'01' format one                                          02-DCCCA
00001034 00000000                           1786+         dc a(0)                                                        02-DCCCA
00001038 00000000000010A2                   1787+         dc ad(@PER_1309)                                               02-DCCCA
00001040 00000000000000C0                   1788+         dc ad(192)                                                     02-DCCCA
00001048 0000000000000000                   1789+         dc ad(0)                                                       02-DCCCA
00001050 0000000000001000                   1790+         dc ad(4096)                                                    02-DCCCA
00001058 20                                 1791+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001059 03                                 1792+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000105A 03                                 1793+         dc al1(3)                                                      02-DCCCA
0000105B 08                                 1794+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000105C 00                                 1795+         dc bl.8'00000000'                                              02-DCCCA
0000105D 000000                             1796+         dc al3(0)                                                      02-DCCCA
00001060 0000000000001012                   1797+         dc ad(@LNAME1309)                                              02-DCCCA
00001068                                    1798+         ds 0d                                                          02-DCCCA
00001068 0000000000001030                   1799+         dc ad($eye0045)                                                02-DCCCA
00001070 0000000000000000                   1800+         dc ad(0)                                                       02-DCCCA
00001078                                    1801+         ds    0d                                                       01-DCCPR
00001078                                    1802+rd_uvarint_enc_i64 ds 0d                                                01-DCCPR
00001078                                    1803+@REGION_1309_1 ds 0h                                                    01-DCCPR
00001078 EBEC D008 0024          00000008   1804+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000107E E3E0 D088 0004          00000088   1805+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001084 E3C0 D090 0004          00000090   1806+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000108A B904 002E                          1807+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000108E E3B0 C018 0004          00000018   1808+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001094 A7EB 00C0               000000C0   1809+         aghi  14,192              increase by frame size               01-DCCPR
00001098 E3E0 C020 0021          00000020   1810+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000109E 4720 B020               00000020   1811+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000010A2                                    1812+@PER_1309 ds   0h                                                       01-DCCPR
000010A2 EBDE 2080 0024          00000080   1813+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000010A8 E3C0 2090 0024          00000090   1814+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000010AE B904 00D2                          1815+         lgr   13,2                set real frame pointer               01-DCCPR
000010B2 B904 00CF                          1816+         lgr   12,15               set base reg                         01-DCCPR
                        00001078            1817+         using @REGION_1309_1,12                                        01-DCCPR
                                            1818 * ******* End of Prologue
                                            1819 * *
                                            1820 * ***           return rd_uvarint_enc_u64(dst, dstsize, (num << 1) ^ (\
                                            1821 * num >> 63));
000010B6 E3F0 1000 0004          00000000   1822          LG    15,0(0,1)   ; dst
000010BC E3F0 D0A8 0024          000000A8   1823          STG   15,168(0,13)
000010C2 E3F0 1008 0004          00000008   1824          LG    15,8(0,1)   ; dstsize
000010C8 E3F0 D0B0 0024          000000B0   1825          STG   15,176(0,13)
000010CE E3F0 1010 0004          00000010   1826          LG    15,16(0,1)  ; num
000010D4 EB1F 0001 000D          00000001   1827          SLLG  1,15,1(0)
000010DA EBFF 003F 000A          0000003F   1828          SRAG  15,15,63(0)
000010E0 B982 001F                          1829          XGR   1,15
000010E4 E310 D0B8 0024          000000B8   1830          STG   1,184(0,13)
000010EA 4110 D0A8               000000A8   1831          LA    1,168(0,13)
000010EE E3F0 C0D0 0004          00001148   1832          LG    15,@lit_1309_39 ; rd_uvarint_enc_u64
000010F4                                    1833 @@gen_label51 DS    0H
000010F4 05EF                               1834          BALR  14,15
                                                                                                                           Page   41 
  Active Usings: @REGION_1309_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000010F6                                    1835 @@gen_label52 DS    0H
                                            1836 * ***   }
                                            1837 * * **** Start of Epilogue
                                            1838          DCCEPIL
000010F6                                    1839+         ds 0h                                                          01-DCCEP
                                            1840+* Epilog
000010F6 D707 D088 D088 00000088 00000088   1841+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000010FC E3D0 D080 0004          00000080   1842+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001102 E3C0 D090 0004          00000090   1843+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001108 E3B0 C018 0004          00000018   1844+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000110E E3C0 B010 0021          00000010   1845+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001114 E3E0 D008 0004          00000008   1846+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000111A EB1C D020 0004          00000020   1847+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001120 078E                               1848+         bcr 8,14                if same dsab, just return              01-DCCEP
00001122 E3F0 D010 0024          00000010   1849+         stg 15,16(0,13)         save return code                       01-DCCEP
00001128 E300 D018 0024          00000018   1850+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000112E E3F0 D090 0004          00000090   1851+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001134 E3F0 F018 0004          00000018   1852+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000113A 47F0 F040               00000040   1853+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1854+* End of Epilog
                                            1855 * * **** End of Epilogue
00001140                                    1856          DS    0D
00001140 000000C0                           1857 @FRAMESIZE_1309 DC F'192'
00001144 00000000
00001148 0000000000000F80                   1858 @lit_1309_39 DC AD(rd_uvarint_enc_u64)
                                            1859          DROP  12
                                            1860 *
                                            1861 *   DSECT for automatic variables in "rd_uvarint_enc_i64"
                                            1862 *      (FUNCTION #1309)
                                            1863 *
00000000                00000000 000000A8   1864 @AUTO#rd_uvarint_enc_i64 DSECT
00000000                                    1865          DS    XL168
                                            1866 *
00001150                00000000 00007AB2   1867 @CODE    CSECT
                                            1868 *
                                            1869 *
                                            1870 *
                                            1871 * ....... start of rd_uvarint_enc_i32
00001150                                    1872 @LNAME1310 DS  0H
00001150 00000012                           1873          DC    X'00000012'
00001154 99846DA4A5819989                   1874          DC    C'rd_uvarint_enc_i32'
00001166 00                                 1875          DC    X'00'
                                            1876 rd_uvarint_enc_i32 DCCPRLG CINDEX=1310,BASER=12,FRAME=192,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1310
                                            1877          macro
                                            1878          dccextrn &m
                                            1879          gblc    &$dccext(1000)
                                            1880          gbla    &$dccexti
                                            1881          lcla    &i
                                            1882 &$dccext(&$dccexti+1) setc    '&m'
                                            1883 &i       seta    1
                                            1884 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1885          aif    ('&$dccext(&i)' eq '&m').getout
                                            1886 &i       seta    &i+1
                                            1887          ago     .loop
                                            1888 .around  anop
                                            1889 &$dccexti seta &$dccexti+1
                                            1890          extrn  &m
                                            1891 .getout  anop
                                            1892          mend
00001168                                    1893+$eye0048    ds    0d                                                    02-DCCCA
00001168 C4C3C3                             1894+         dc cl3'DCC'                                                    02-DCCCA
0000116B 01                                 1895+         dc xl1'01' format one                                          02-DCCCA
0000116C 00000000                           1896+         dc a(0)                                                        02-DCCCA
00001170 00000000000011DA                   1897+         dc ad(@PER_1310)                                               02-DCCCA
00001178 00000000000000C0                   1898+         dc ad(192)                                                     02-DCCCA
00001180 0000000000000000                   1899+         dc ad(0)                                                       02-DCCCA
00001188 0000000000001000                   1900+         dc ad(4096)                                                    02-DCCCA
00001190 20                                 1901+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001191 03                                 1902+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001192 03                                 1903+         dc al1(3)                                                      02-DCCCA
00001193 08                                 1904+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001194 00                                 1905+         dc bl.8'00000000'                                              02-DCCCA
00001195 000000                             1906+         dc al3(0)                                                      02-DCCCA
00001198 0000000000001150                   1907+         dc ad(@LNAME1310)                                              02-DCCCA
000011A0                                    1908+         ds 0d                                                          02-DCCCA
000011A0 0000000000001168                   1909+         dc ad($eye0048)                                                02-DCCCA
000011A8 0000000000000000                   1910+         dc ad(0)                                                       02-DCCCA
000011B0                                    1911+         ds    0d                                                       01-DCCPR
000011B0                                    1912+rd_uvarint_enc_i32 ds 0d                                                01-DCCPR
000011B0                                    1913+@REGION_1310_1 ds 0h                                                    01-DCCPR
000011B0 EBEC D008 0024          00000008   1914+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000011B6 E3E0 D088 0004          00000088   1915+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000011BC E3C0 D090 0004          00000090   1916+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000011C2 B904 002E                          1917+         lgr   2,14                copy addr of our savearea            01-DCCPR
000011C6 E3B0 C018 0004          00000018   1918+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000011CC A7EB 00C0               000000C0   1919+         aghi  14,192              increase by frame size               01-DCCPR
000011D0 E3E0 C020 0021          00000020   1920+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000011D6 4720 B020               00000020   1921+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000011DA                                    1922+@PER_1310 ds   0h                                                       01-DCCPR
000011DA EBDE 2080 0024          00000080   1923+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000011E0 E3C0 2090 0024          00000090   1924+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000011E6 B904 00D2                          1925+         lgr   13,2                set real frame pointer               01-DCCPR
000011EA B904 00CF                          1926+         lgr   12,15               set base reg                         01-DCCPR
                        000011B0            1927+         using @REGION_1310_1,12                                        01-DCCPR
                                            1928 * ******* End of Prologue
                                            1929 * *
                                            1930 * ***           return rd_uvarint_enc_i64(dst, dstsize, num);
000011EE E3F0 1000 0004          00000000   1931          LG    15,0(0,1)   ; dst
000011F4 E3F0 D0A8 0024          000000A8   1932          STG   15,168(0,13)
000011FA E3F0 1008 0004          00000008   1933          LG    15,8(0,1)   ; dstsize
00001200 E3F0 D0B0 0024          000000B0   1934          STG   15,176(0,13)
00001206 E3F0 1014 0014          00000014   1935          LGF   15,20(0,1)  ; num
0000120C E3F0 D0B8 0024          000000B8   1936          STG   15,184(0,13)
                                                                                                                           Page   43 
  Active Usings: @REGION_1310_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001212 4110 D0A8               000000A8   1937          LA    1,168(0,13)
00001216 E3F0 C0C0 0004          00001270   1938          LG    15,@lit_1310_41 ; rd_uvarint_enc_i64
0000121C                                    1939 @@gen_label53 DS    0H
0000121C 05EF                               1940          BALR  14,15
0000121E                                    1941 @@gen_label54 DS    0H
                                            1942 * ***   }
                                            1943 * * **** Start of Epilogue
                                            1944          DCCEPIL
0000121E                                    1945+         ds 0h                                                          01-DCCEP
                                            1946+* Epilog
0000121E D707 D088 D088 00000088 00000088   1947+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001224 E3D0 D080 0004          00000080   1948+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000122A E3C0 D090 0004          00000090   1949+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001230 E3B0 C018 0004          00000018   1950+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001236 E3C0 B010 0021          00000010   1951+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000123C E3E0 D008 0004          00000008   1952+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001242 EB1C D020 0004          00000020   1953+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001248 078E                               1954+         bcr 8,14                if same dsab, just return              01-DCCEP
0000124A E3F0 D010 0024          00000010   1955+         stg 15,16(0,13)         save return code                       01-DCCEP
00001250 E300 D018 0024          00000018   1956+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001256 E3F0 D090 0004          00000090   1957+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000125C E3F0 F018 0004          00000018   1958+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001262 47F0 F040               00000040   1959+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1960+* End of Epilog
                                            1961 * * **** End of Epilogue
00001268                                    1962          DS    0D
00001268 000000C0                           1963 @FRAMESIZE_1310 DC F'192'
0000126C 00000000
00001270 0000000000001078                   1964 @lit_1310_41 DC AD(rd_uvarint_enc_i64)
                                            1965          DROP  12
                                            1966 *
                                            1967 *   DSECT for automatic variables in "rd_uvarint_enc_i32"
                                            1968 *      (FUNCTION #1310)
                                            1969 *
00000000                00000000 000000A8   1970 @AUTO#rd_uvarint_enc_i32 DSECT
00000000                                    1971          DS    XL168
                                            1972 *
00001278                00000000 00007AB2   1973 @CODE    CSECT
                                            1974 *
                                            1975 *
                                            1976 *
                                            1977 * ....... start of rd_kafka_pid2str
00001278                                    1978 @LNAME1330 DS  0H
00001278 00000010                           1979          DC    X'00000010'
0000127C 99846D9281869281                   1980          DC    C'rd_kafka_pid2str'
0000128C 00                                 1981          DC    X'00'
                                            1982 rd_kafka_pid2str DCCPRLG CINDEX=1330,BASER=12,FRAME=208,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1330
                                            1983          macro
                                            1984          dccextrn &m
                                            1985          gblc    &$dccext(1000)
                                            1986          gbla    &$dccexti
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1987          lcla    &i
                                            1988 &$dccext(&$dccexti+1) setc    '&m'
                                            1989 &i       seta    1
                                            1990 .loop    aif    (&i gt &$dccexti).around
                                            1991          aif    ('&$dccext(&i)' eq '&m').getout
                                            1992 &i       seta    &i+1
                                            1993          ago     .loop
                                            1994 .around  anop
                                            1995 &$dccexti seta &$dccexti+1
                                            1996          extrn  &m
                                            1997 .getout  anop
                                            1998          mend
00001290                                    1999+$eye0051    ds    0d                                                    02-DCCCA
00001290 C4C3C3                             2000+         dc cl3'DCC'                                                    02-DCCCA
00001293 01                                 2001+         dc xl1'01' format one                                          02-DCCCA
00001294 00000000                           2002+         dc a(0)                                                        02-DCCCA
00001298 0000000000001302                   2003+         dc ad(@PER_1330)                                               02-DCCCA
000012A0 00000000000000D0                   2004+         dc ad(208)                                                     02-DCCCA
000012A8 0000000000000000                   2005+         dc ad(0)                                                       02-DCCCA
000012B0 0000000000001000                   2006+         dc ad(4096)                                                    02-DCCCA
000012B8 20                                 2007+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000012B9 03                                 2008+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000012BA 03                                 2009+         dc al1(3)                                                      02-DCCCA
000012BB 08                                 2010+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000012BC 00                                 2011+         dc bl.8'00000000'                                              02-DCCCA
000012BD 000000                             2012+         dc al3(0)                                                      02-DCCCA
000012C0 0000000000001278                   2013+         dc ad(@LNAME1330)                                              02-DCCCA
000012C8                                    2014+         ds 0d                                                          02-DCCCA
000012C8 0000000000001290                   2015+         dc ad($eye0051)                                                02-DCCCA
000012D0 0000000000000000                   2016+         dc ad(0)                                                       02-DCCCA
000012D8                                    2017+         ds    0d                                                       01-DCCPR
000012D8                                    2018+rd_kafka_pid2str ds 0d                                                  01-DCCPR
000012D8                                    2019+@REGION_1330_1 ds 0h                                                    01-DCCPR
000012D8 EBEC D008 0024          00000008   2020+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000012DE E3E0 D088 0004          00000088   2021+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000012E4 E3C0 D090 0004          00000090   2022+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000012EA B904 002E                          2023+         lgr   2,14                copy addr of our savearea            01-DCCPR
000012EE E3B0 C018 0004          00000018   2024+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000012F4 A7EB 00D0               000000D0   2025+         aghi  14,208              increase by frame size               01-DCCPR
000012F8 E3E0 C020 0021          00000020   2026+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000012FE 4720 B020               00000020   2027+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001302                                    2028+@PER_1330 ds   0h                                                       01-DCCPR
00001302 EBDE 2080 0024          00000080   2029+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001308 E3C0 2090 0024          00000090   2030+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000130E B904 00D2                          2031+         lgr   13,2                set real frame pointer               01-DCCPR
00001312 B904 00CF                          2032+         lgr   12,15               set base reg                         01-DCCPR
                        000012D8            2033+         using @REGION_1330_1,12                                        01-DCCPR
                                            2034          DCCPRV REG=15     ; Get PRV from DVT
00001316 E3F0 B008 0004          00000008   2035+         LG 15,8(0,11)                                                  01-DCCPR
                                            2036 * ******* End of Prologue
                                            2037 * *
                                            2038 * ***           static  char buf[2][64];
                                                                                                                           Page   45 
  Active Usings: @REGION_1330_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2039 * ***           static  int i;
                                            2040 * ***
                                            2041 * ***           if (!((pid).id != -1))
0000131C E558 1000 FFFF          00000000   2042          CGHSI 0(1),-1
00001322 4770 C080               00001358   2043          BNE   @L173
                                            2044 * ***                   return "PID{Invalid}";
00001326 E3F0 C068 0004          00001340   2045          LG    15,@lit_1330_43
0000132C 41F0 F046               00000046   2046          LA    15,70(0,15)
00001330 47F0 C122               000013FA   2047          B     @ret_lab_1330
00001338                                    2048          DS    0D
00001338 000000D0                           2049 @FRAMESIZE_1330 DC F'208'
0000133C 00000000
00001340 0000000000007DEC                   2050 @lit_1330_43 DC AD(@strings@)
00001348 00000000                           2051 @lit_1330_44 DC Q(@@STATIC)
0000134C 00000000
00001350 0000000000000000                   2052 @lit_1330_47 DC AD(snprintf)
00001358                                    2053 @L173    DS    0H
                                            2054 * ***
                                            2055 * ***           i = (i + 1) % 2;
00001358 E320 C070 0014          00001348   2056          LGF   2,@lit_1330_44
0000135E 4122 F000               00000000   2057          LA    2,0(2,15)
00001362 5830 24B8               000004B8   2058          L     3,1208(0,2) ; i
00001366 A73A 0001               00000001   2059          AHI   3,1
0000136A 1843                               2060          LR    4,3
0000136C C04B 0000 0001                     2061          NILF  4,X'00000001'
00001372 1233                               2062          LTR   3,3
00001374 47B0 C0B4               0000138C   2063          BNL   @@gen_label56
00001378 1244                               2064          LTR   4,4
0000137A 4770 C0AE               00001386   2065          BNE   @@gen_label57
0000137E A748 0000               00000000   2066          LHI   4,0
00001382 47F0 C0B4               0000138C   2067          B     @@gen_label56
00001386                                    2068 @@gen_label57 DS 0H
00001386 C04D FFFF FFFE                     2069          OILF  4,X'FFFFFFFE'
0000138C                                    2070 @@gen_label56 DS 0H
0000138C 5040 24B8               000004B8   2071          ST    4,1208(0,2) ; i
                                            2072 * ***
                                            2073 * ***           snprintf(buf[i], sizeof(buf[i]), "PID{Id:%" "lld" ",Ep\
                                            2074 * och:%hd}", pid.id, pid.epoch);
00001390 B914 0024                          2075          LGFR  2,4
00001394 E330 C070 0014          00001348   2076          LGF   3,@lit_1330_44
0000139A 4133 F000               00000000   2077          LA    3,0(3,15)
0000139E EBF2 0006 000D          00000006   2078          SLLG  15,2,6(0)   ; *0x40
000013A4 41FF 3438               00000438   2079          LA    15,1080(15,3)
000013A8 E3F0 D0A8 0024          000000A8   2080          STG   15,168(0,13)
000013AE E548 D0B0 0040          000000B0   2081          MVGHI 176(13),64
000013B4 E3F0 C068 0004          00001340   2082          LG    15,@lit_1330_43
000013BA 41F0 F054               00000054   2083          LA    15,84(0,15)
000013BE E3F0 D0B8 0024          000000B8   2084          STG   15,184(0,13)
000013C4 E3F0 1000 0004          00000000   2085          LG    15,0(0,1)
000013CA E3F0 D0C0 0024          000000C0   2086          STG   15,192(0,13)
000013D0 48F0 1008               00000008   2087          LH    15,8(0,1)
000013D4 B914 00FF                          2088          LGFR  15,15
                                                                                                                           Page   46 
  Active Usings: @REGION_1330_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000013D8 E3F0 D0C8 0024          000000C8   2089          STG   15,200(0,13)
000013DE 4110 D0A8               000000A8   2090          LA    1,168(0,13)
000013E2 E3F0 C078 0004          00001350   2091          LG    15,@lit_1330_47 ; snprintf
000013E8                                    2092 @@gen_label58 DS    0H
000013E8 05EF                               2093          BALR  14,15
000013EA                                    2094 @@gen_label59 DS    0H
                                            2095 * ***
                                            2096 * ***
                                            2097 * ***           return buf[i];
000013EA E3F0 34B8 0014          000004B8   2098          LGF   15,1208(0,3) ; i
000013F0 EBFF 0006 000D          00000006   2099          SLLG  15,15,6(0)  ; *0x40
000013F6 41FF 3438               00000438   2100          LA    15,1080(15,3)
                                            2101 * ***   }
000013FA                                    2102 @ret_lab_1330 DS 0H
                                            2103 * * **** Start of Epilogue
                                            2104          DCCEPIL
000013FA                                    2105+         ds 0h                                                          01-DCCEP
                                            2106+* Epilog
000013FA D707 D088 D088 00000088 00000088   2107+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001400 E3D0 D080 0004          00000080   2108+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001406 E3C0 D090 0004          00000090   2109+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000140C E3B0 C018 0004          00000018   2110+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001412 E3C0 B010 0021          00000010   2111+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001418 E3E0 D008 0004          00000008   2112+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000141E EB1C D020 0004          00000020   2113+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001424 078E                               2114+         bcr 8,14                if same dsab, just return              01-DCCEP
00001426 E3F0 D010 0024          00000010   2115+         stg 15,16(0,13)         save return code                       01-DCCEP
0000142C E300 D018 0024          00000018   2116+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001432 E3F0 D090 0004          00000090   2117+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001438 E3F0 F018 0004          00000018   2118+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000143E 47F0 F040               00000040   2119+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2120+* End of Epilog
                                            2121 * * **** End of Epilogue
                                            2122          DROP  12
                                            2123 *
                                            2124 *   DSECT for automatic variables in "rd_kafka_pid2str"
                                            2125 *      (FUNCTION #1330)
                                            2126 *
00000000                00000000 000000A8   2127 @AUTO#rd_kafka_pid2str DSECT
00000000                                    2128          DS    XL168
                                            2129 *
00001442                00000000 00007AB2   2130 @CODE    CSECT
                                            2131 *
                                            2132 *
                                            2133 *
                                            2134 * ....... start of rd_kafka_headers_serialized_size
00001442                                    2135 @LNAME1333 DS  0H
00001442 00000020                           2136          DC    X'00000020'
00001446 99846D9281869281                   2137          DC    C'rd_kafka_headers_serialized_size'
00001466 00                                 2138          DC    X'00'
                                            2139 rd_kafka_headers_serialized_size DCCPRLG CINDEX=1333,BASER=0,FRAME=168,*
                                                                SAVEAREA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1333
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2140          macro
                                            2141          dccextrn &m
                                            2142          gblc    &$dccext(1000)
                                            2143          gbla    &$dccexti
                                            2144          lcla    &i
                                            2145 &$dccext(&$dccexti+1) setc    '&m'
                                            2146 &i       seta    1
                                            2147 .loop    aif    (&i gt &$dccexti).around
                                            2148          aif    ('&$dccext(&i)' eq '&m').getout
                                            2149 &i       seta    &i+1
                                            2150          ago     .loop
                                            2151 .around  anop
                                            2152 &$dccexti seta &$dccexti+1
                                            2153          extrn  &m
                                            2154 .getout  anop
                                            2155          mend
00001468                                    2156+$eye0055    ds    0d                                                    02-DCCCA
00001468 C4C3C3                             2157+         dc cl3'DCC'                                                    02-DCCCA
0000146B 01                                 2158+         dc xl1'01' format one                                          02-DCCCA
0000146C 00000000                           2159+         dc a(0)                                                        02-DCCCA
00001470 0000000000000000                   2160+         dc ad(0)                                                       02-DCCCA
00001478 00000000000000A8                   2161+         dc ad(168)                                                     02-DCCCA
00001480 0000000000000000                   2162+         dc ad(0)                                                       02-DCCCA
00001488 0000000000001000                   2163+         dc ad(4096)                                                    02-DCCCA
00001490 20                                 2164+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001491 03                                 2165+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001492 03                                 2166+         dc al1(3)                                                      02-DCCCA
00001493 08                                 2167+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001494 00                                 2168+         dc bl.8'00000000'                                              02-DCCCA
00001495 000000                             2169+         dc al3(0)                                                      02-DCCCA
00001498 0000000000001442                   2170+         dc ad(@LNAME1333)                                              02-DCCCA
000014A0                                    2171+         ds 0d                                                          02-DCCCA
000014A0 0000000000001468                   2172+         dc ad($eye0055)                                                02-DCCCA
000014A8 0000000000000000                   2173+         dc ad(0)                                                       02-DCCCA
000014B0                                    2174+         ds    0d                                                       01-DCCPR
000014B0                                    2175+rd_kafka_headers_serialized_size ds 0d                                  01-DCCPR
000014B0                                    2176+@REGION_1333_1 ds 0h                                                    01-DCCPR
000014B0 EBEC D008 0024          00000008   2177+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2178 * ******* End of Prologue
                                            2179 * *
                                            2180 * ***           return hdrs->rkhdrs_ser_size;
000014B6 E3F0 1000 0004          00000000   2181          LG    15,0(0,1)   ; hdrs
000014BC E3F0 F028 0004          00000028   2182          LG    15,40(0,15) ; offset of rkhdrs_ser_size in rd_kafka_head*
                                                                ers_s
                                            2183 * ***   }
                                            2184 * * **** Start of Epilogue
                                            2185          DCCEPIL
000014C2                                    2186+         ds 0h                                                          01-DCCEP
                                            2187+* Epilog
                                            2188+* Epilog
000014C2 E3E0 D008 0004          00000008   2189+         lg    14,8(,13) restore the reg                                01-DCCEP
000014C8 EB1C D020 0004          00000020   2190+         lmg   1,12,32(13)                                              01-DCCEP
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000014CE 07FE                               2191+         br   14                                                        01-DCCEP
                                            2192+* End of Epilog
                                            2193 * * **** End of Epilogue
                                            2194 *
                                            2195 *   DSECT for automatic variables in "rd_kafka_headers_serialized_size"
                                            2196 *      (FUNCTION #1333)
                                            2197 *
00000000                00000000 000000A8   2198 @AUTO#rd_kafka_headers_serialized_size DSECT
00000000                                    2199          DS    XL168
                                            2200 *
000014D0                00000000 00007AB2   2201 @CODE    CSECT
                                            2202 *
                                            2203 *
                                            2204 *
                                            2205 * ....... start of rd_kafka_msg_wire_size
000014D0                                    2206 @LNAME1334 DS  0H
000014D0 00000016                           2207          DC    X'00000016'
000014D4 99846D9281869281                   2208          DC    C'rd_kafka_msg_wire_size'
000014EA 00                                 2209          DC    X'00'
                                            2210 rd_kafka_msg_wire_size DCCPRLG CINDEX=1334,BASER=12,FRAME=184,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1334
                                            2211          macro
                                            2212          dccextrn &m
                                            2213          gblc    &$dccext(1000)
                                            2214          gbla    &$dccexti
                                            2215          lcla    &i
                                            2216 &$dccext(&$dccexti+1) setc    '&m'
                                            2217 &i       seta    1
                                            2218 .loop    aif    (&i gt &$dccexti).around
                                            2219          aif    ('&$dccext(&i)' eq '&m').getout
                                            2220 &i       seta    &i+1
                                            2221          ago     .loop
                                            2222 .around  anop
                                            2223 &$dccexti seta &$dccexti+1
                                            2224          extrn  &m
                                            2225 .getout  anop
                                            2226          mend
000014F0                                    2227+$eye0058    ds    0d                                                    02-DCCCA
000014F0 C4C3C3                             2228+         dc cl3'DCC'                                                    02-DCCCA
000014F3 01                                 2229+         dc xl1'01' format one                                          02-DCCCA
000014F4 00000000                           2230+         dc a(0)                                                        02-DCCCA
000014F8 0000000000001562                   2231+         dc ad(@PER_1334)                                               02-DCCCA
00001500 00000000000000B8                   2232+         dc ad(184)                                                     02-DCCCA
00001508 0000000000000000                   2233+         dc ad(0)                                                       02-DCCCA
00001510 0000000000001000                   2234+         dc ad(4096)                                                    02-DCCCA
00001518 20                                 2235+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001519 03                                 2236+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000151A 03                                 2237+         dc al1(3)                                                      02-DCCCA
0000151B 08                                 2238+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000151C 00                                 2239+         dc bl.8'00000000'                                              02-DCCCA
0000151D 000000                             2240+         dc al3(0)                                                      02-DCCCA
00001520 00000000000014D0                   2241+         dc ad(@LNAME1334)                                              02-DCCCA
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001528                                    2242+         ds 0d                                                          02-DCCCA
00001528 00000000000014F0                   2243+         dc ad($eye0058)                                                02-DCCCA
00001530 0000000000000000                   2244+         dc ad(0)                                                       02-DCCCA
00001538                                    2245+         ds    0d                                                       01-DCCPR
00001538                                    2246+rd_kafka_msg_wire_size ds 0d                                            01-DCCPR
00001538                                    2247+@REGION_1334_1 ds 0h                                                    01-DCCPR
00001538 EBEC D008 0024          00000008   2248+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000153E E3E0 D088 0004          00000088   2249+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001544 E3C0 D090 0004          00000090   2250+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000154A B904 002E                          2251+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000154E E3B0 C018 0004          00000018   2252+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001554 A7EB 00B8               000000B8   2253+         aghi  14,184              increase by frame size               01-DCCPR
00001558 E3E0 C020 0021          00000020   2254+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000155E 4720 B020               00000020   2255+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001562                                    2256+@PER_1334 ds   0h                                                       01-DCCPR
00001562 EBDE 2080 0024          00000080   2257+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001568 E3C0 2090 0024          00000090   2258+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000156E B904 00D2                          2259+         lgr   13,2                set real frame pointer               01-DCCPR
00001572 B904 00CF                          2260+         lgr   12,15               set base reg                         01-DCCPR
                        00001538            2261+         using @REGION_1334_1,12                                        01-DCCPR
00001576 B904 0021                          2262          LGR   2,1         ; ptr to parm area
                                            2263 * ******* End of Prologue
                                            2264 * *
0000157A E3F0 2000 0004          00000000   2265          LG    15,0(0,2)   ; rkm
                                            2266 * ***           static const size_t overheads[] = {
                                            2267 * ***                   [0] = ((8+4) + (4+1+1+4+4)),
                                            2268 * ***                   [1] = ((8+4) + (4+1+1+8+4+4)),
                                            2269 * ***                   [2] = ( (sizeof(int32_t) + 1 + (sizeof(int32_t\
                                            2270 * )/7)) + 1 + (sizeof(int64_t) + 1 + (sizeof(int64_t)/7)) + (sizeof(in\
                                            2271 * t32_t) + 1 + (sizeof(int32_t)/7)) + (sizeof(int32_t) + 1 + (sizeof(i\
                                            2272 * nt32_t)/7)) + (sizeof(int32_t) + 1 + (sizeof(int32_t)/7)) + (sizeof(\
                                            2273 * int32_t) + 1 + (sizeof(int32_t)/7)) )
                                            2274 * ***           size_t size;
                                            2275 * ***           do {} while (0);
00001580                                    2276 @L174    DS    0H
                                            2277 * ***
                                            2278 * ***           size = overheads[MsgVersion] + rkm->rkm_rkmessage.len \
                                            2279 * + rkm->rkm_rkmessage.key_len;
00001580 E310 200C 0014          0000000C   2280          LGF   1,12(0,2)   ; MsgVersion
00001586 E330 C0F8 0004          00001630   2281          LG    3,@lit_1334_49
0000158C EB11 0003 000D          00000003   2282          SLLG  1,1,3(0)    ; *0x8
00001592 E311 3048 0004          00000048   2283          LG    1,72(1,3)
00001598 E310 F020 000A          00000020   2284          ALG   1,32(0,15)
0000159E E310 F030 000A          00000030   2285          ALG   1,48(0,15)
                                            2286 * ***           if (MsgVersion == 2 && rkm->rkm_headers)
000015A4 E55C 200C 0002          0000000C   2287          CHSI  12(2),2
000015AA 4770 C0A4               000015DC   2288          BNE   @L177
000015AE E320 F068 0002          00000068   2289          LTG   2,104(0,15) ; offset of rkm_headers in rd_kafka_msg_s
000015B4 4780 C0A4               000015DC   2290          BZ    @L177
                                            2291 * ***                   size += rd_kafka_headers_serialized_size(rkm->\
                                            2292 * rkm_headers);
000015B8 B904 0021                          2293          LGR   2,1
                                                                                                                           Page   50 
  Active Usings: @REGION_1334_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000015BC E3F0 F068 0004          00000068   2294          LG    15,104(0,15)
000015C2 E3F0 D0B0 0024          000000B0   2295          STG   15,176(0,13)
000015C8 4110 D0B0               000000B0   2296          LA    1,176(0,13)
000015CC E3F0 C100 0004          00001638   2297          LG    15,@lit_1334_50 ; rd_kafka_headers_serialized_size
000015D2                                    2298 @@gen_label62 DS    0H
000015D2 05EF                               2299          BALR  14,15
000015D4                                    2300 @@gen_label63 DS    0H
000015D4 B90A 002F                          2301          ALGR  2,15
000015D8 B904 0012                          2302          LGR   1,2         ; size
000015DC                                    2303 @L177    DS    0H
                                            2304 * ***
                                            2305 * ***           return size;
000015DC B904 00F1                          2306          LGR   15,1
                                            2307 * ***   }
                                            2308 * * **** Start of Epilogue
                                            2309          DCCEPIL
000015E0                                    2310+         ds 0h                                                          01-DCCEP
                                            2311+* Epilog
000015E0 D707 D088 D088 00000088 00000088   2312+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000015E6 E3D0 D080 0004          00000080   2313+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000015EC E3C0 D090 0004          00000090   2314+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000015F2 E3B0 C018 0004          00000018   2315+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000015F8 E3C0 B010 0021          00000010   2316+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000015FE E3E0 D008 0004          00000008   2317+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001604 EB1C D020 0004          00000020   2318+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000160A 078E                               2319+         bcr 8,14                if same dsab, just return              01-DCCEP
0000160C E3F0 D010 0024          00000010   2320+         stg 15,16(0,13)         save return code                       01-DCCEP
00001612 E300 D018 0024          00000018   2321+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001618 E3F0 D090 0004          00000090   2322+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000161E E3F0 F018 0004          00000018   2323+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001624 47F0 F040               00000040   2324+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2325+* End of Epilog
                                            2326 * * **** End of Epilogue
00001628                                    2327          DS    0D
00001628 000000B8                           2328 @FRAMESIZE_1334 DC F'184'
0000162C 00000000
00001630 0000000000007AB8                   2329 @lit_1334_49 DC AD(@DATA)
00001638 00000000000014B0                   2330 @lit_1334_50 DC AD(rd_kafka_headers_serialized_size)
                                            2331          DROP  12
                                            2332 *
                                            2333 *   DSECT for automatic variables in "rd_kafka_msg_wire_size"
                                            2334 *      (FUNCTION #1334)
                                            2335 *
00000000                00000000 000000B0   2336 @AUTO#rd_kafka_msg_wire_size DSECT
00000000                                    2337          DS    XL168
000000A8                                    2338 rd_kafka_msg_wire_size#size#0 DS 8XL1 ; size
                                            2339 *
00001640                00000000 00007AB2   2340 @CODE    CSECT
                                            2341 *
                                            2342 *
                                            2343 *
                                            2344 * ....... start of rd_kafka_msgq_len
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001640                                    2345 @LNAME1337 DS  0H
00001640 00000011                           2346          DC    X'00000011'
00001644 99846D9281869281                   2347          DC    C'rd_kafka_msgq_len'
00001655 00                                 2348          DC    X'00'
                                            2349 rd_kafka_msgq_len DCCPRLG CINDEX=1337,BASER=0,FRAME=168,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1337
                                            2350          macro
                                            2351          dccextrn &m
                                            2352          gblc    &$dccext(1000)
                                            2353          gbla    &$dccexti
                                            2354          lcla    &i
                                            2355 &$dccext(&$dccexti+1) setc    '&m'
                                            2356 &i       seta    1
                                            2357 .loop    aif    (&i gt &$dccexti).around
                                            2358          aif    ('&$dccext(&i)' eq '&m').getout
                                            2359 &i       seta    &i+1
                                            2360          ago     .loop
                                            2361 .around  anop
                                            2362 &$dccexti seta &$dccexti+1
                                            2363          extrn  &m
                                            2364 .getout  anop
                                            2365          mend
00001658                                    2366+$eye0061    ds    0d                                                    02-DCCCA
00001658 C4C3C3                             2367+         dc cl3'DCC'                                                    02-DCCCA
0000165B 01                                 2368+         dc xl1'01' format one                                          02-DCCCA
0000165C 00000000                           2369+         dc a(0)                                                        02-DCCCA
00001660 0000000000000000                   2370+         dc ad(0)                                                       02-DCCCA
00001668 00000000000000A8                   2371+         dc ad(168)                                                     02-DCCCA
00001670 0000000000000000                   2372+         dc ad(0)                                                       02-DCCCA
00001678 0000000000001000                   2373+         dc ad(4096)                                                    02-DCCCA
00001680 20                                 2374+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001681 03                                 2375+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001682 03                                 2376+         dc al1(3)                                                      02-DCCCA
00001683 08                                 2377+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001684 00                                 2378+         dc bl.8'00000000'                                              02-DCCCA
00001685 000000                             2379+         dc al3(0)                                                      02-DCCCA
00001688 0000000000001640                   2380+         dc ad(@LNAME1337)                                              02-DCCCA
00001690                                    2381+         ds 0d                                                          02-DCCCA
00001690 0000000000001658                   2382+         dc ad($eye0061)                                                02-DCCCA
00001698 0000000000000000                   2383+         dc ad(0)                                                       02-DCCCA
000016A0                                    2384+         ds    0d                                                       01-DCCPR
000016A0                                    2385+rd_kafka_msgq_len ds 0d                                                 01-DCCPR
000016A0                                    2386+@REGION_1337_1 ds 0h                                                    01-DCCPR
000016A0 EBEC D008 0024          00000008   2387+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2388 * ******* End of Prologue
                                            2389 * *
                                            2390 * ***           return (int)rkmq->rkmq_msg_cnt;
000016A6 E3F0 1000 0004          00000000   2391          LG    15,0(0,1)   ; rkmq
000016AC E3F0 F010 0014          00000010   2392          LGF   15,16(0,15)
                                            2393 * ***   }
                                            2394 * * **** Start of Epilogue
                                            2395          DCCEPIL
                                                                                                                           Page   52 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000016B2                                    2396+         ds 0h                                                          01-DCCEP
                                            2397+* Epilog
                                            2398+* Epilog
000016B2 E3E0 D008 0004          00000008   2399+         lg    14,8(,13) restore the reg                                01-DCCEP
000016B8 EB1C D020 0004          00000020   2400+         lmg   1,12,32(13)                                              01-DCCEP
000016BE 07FE                               2401+         br   14                                                        01-DCCEP
                                            2402+* End of Epilog
                                            2403 * * **** End of Epilogue
                                            2404 *
                                            2405 *   DSECT for automatic variables in "rd_kafka_msgq_len"
                                            2406 *      (FUNCTION #1337)
                                            2407 *
00000000                00000000 000000A8   2408 @AUTO#rd_kafka_msgq_len DSECT
00000000                                    2409          DS    XL168
                                            2410 *
000016C0                00000000 00007AB2   2411 @CODE    CSECT
                                            2412 *
                                            2413 *
                                            2414 *
                                            2415 * ....... start of rd_kafka_msgq_size
000016C0                                    2416 @LNAME1338 DS  0H
000016C0 00000012                           2417          DC    X'00000012'
000016C4 99846D9281869281                   2418          DC    C'rd_kafka_msgq_size'
000016D6 00                                 2419          DC    X'00'
                                            2420 rd_kafka_msgq_size DCCPRLG CINDEX=1338,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1338
                                            2421          macro
                                            2422          dccextrn &m
                                            2423          gblc    &$dccext(1000)
                                            2424          gbla    &$dccexti
                                            2425          lcla    &i
                                            2426 &$dccext(&$dccexti+1) setc    '&m'
                                            2427 &i       seta    1
                                            2428 .loop    aif    (&i gt &$dccexti).around
                                            2429          aif    ('&$dccext(&i)' eq '&m').getout
                                            2430 &i       seta    &i+1
                                            2431          ago     .loop
                                            2432 .around  anop
                                            2433 &$dccexti seta &$dccexti+1
                                            2434          extrn  &m
                                            2435 .getout  anop
                                            2436          mend
000016D8                                    2437+$eye0064    ds    0d                                                    02-DCCCA
000016D8 C4C3C3                             2438+         dc cl3'DCC'                                                    02-DCCCA
000016DB 01                                 2439+         dc xl1'01' format one                                          02-DCCCA
000016DC 00000000                           2440+         dc a(0)                                                        02-DCCCA
000016E0 0000000000000000                   2441+         dc ad(0)                                                       02-DCCCA
000016E8 00000000000000A8                   2442+         dc ad(168)                                                     02-DCCCA
000016F0 0000000000000000                   2443+         dc ad(0)                                                       02-DCCCA
000016F8 0000000000001000                   2444+         dc ad(4096)                                                    02-DCCCA
00001700 20                                 2445+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001701 03                                 2446+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001702 03                                 2447+         dc al1(3)                                                      02-DCCCA
00001703 08                                 2448+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001704 00                                 2449+         dc bl.8'00000000'                                              02-DCCCA
00001705 000000                             2450+         dc al3(0)                                                      02-DCCCA
00001708 00000000000016C0                   2451+         dc ad(@LNAME1338)                                              02-DCCCA
00001710                                    2452+         ds 0d                                                          02-DCCCA
00001710 00000000000016D8                   2453+         dc ad($eye0064)                                                02-DCCCA
00001718 0000000000000000                   2454+         dc ad(0)                                                       02-DCCCA
00001720                                    2455+         ds    0d                                                       01-DCCPR
00001720                                    2456+rd_kafka_msgq_size ds 0d                                                01-DCCPR
00001720                                    2457+@REGION_1338_1 ds 0h                                                    01-DCCPR
00001720 EBEC D008 0024          00000008   2458+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2459 * ******* End of Prologue
                                            2460 * *
                                            2461 * ***           return (size_t)rkmq->rkmq_msg_bytes;
00001726 E3F0 1000 0004          00000000   2462          LG    15,0(0,1)   ; rkmq
0000172C E3F0 F018 0004          00000018   2463          LG    15,24(0,15) ; offset of rkmq_msg_bytes in rd_kafka_msgq_*
                                                                s
                                            2464 * ***   }
                                            2465 * * **** Start of Epilogue
                                            2466          DCCEPIL
00001732                                    2467+         ds 0h                                                          01-DCCEP
                                            2468+* Epilog
                                            2469+* Epilog
00001732 E3E0 D008 0004          00000008   2470+         lg    14,8(,13) restore the reg                                01-DCCEP
00001738 EB1C D020 0004          00000020   2471+         lmg   1,12,32(13)                                              01-DCCEP
0000173E 07FE                               2472+         br   14                                                        01-DCCEP
                                            2473+* End of Epilog
                                            2474 * * **** End of Epilogue
                                            2475 *
                                            2476 *   DSECT for automatic variables in "rd_kafka_msgq_size"
                                            2477 *      (FUNCTION #1338)
                                            2478 *
00000000                00000000 000000A8   2479 @AUTO#rd_kafka_msgq_size DSECT
00000000                                    2480          DS    XL168
                                            2481 *
00001740                00000000 00007AB2   2482 @CODE    CSECT
                                            2483 *
                                            2484 *
                                            2485 *
                                            2486 * ....... start of rd_kafka_msgq_deq
00001740                                    2487 @LNAME1347 DS  0H
00001740 00000011                           2488          DC    X'00000011'
00001744 99846D9281869281                   2489          DC    C'rd_kafka_msgq_deq'
00001755 00                                 2490          DC    X'00'
                                            2491 rd_kafka_msgq_deq DCCPRLG CINDEX=1347,BASER=12,FRAME=208,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1347
                                            2492          macro
                                            2493          dccextrn &m
                                            2494          gblc    &$dccext(1000)
                                            2495          gbla    &$dccexti
                                            2496          lcla    &i
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2497 &$dccext(&$dccexti+1) setc    '&m'
                                            2498 &i       seta    1
                                            2499 .loop    aif    (&i gt &$dccexti).around
                                            2500          aif    ('&$dccext(&i)' eq '&m').getout
                                            2501 &i       seta    &i+1
                                            2502          ago     .loop
                                            2503 .around  anop
                                            2504 &$dccexti seta &$dccexti+1
                                            2505          extrn  &m
                                            2506 .getout  anop
                                            2507          mend
00001758                                    2508+$eye0067    ds    0d                                                    02-DCCCA
00001758 C4C3C3                             2509+         dc cl3'DCC'                                                    02-DCCCA
0000175B 01                                 2510+         dc xl1'01' format one                                          02-DCCCA
0000175C 00000000                           2511+         dc a(0)                                                        02-DCCCA
00001760 00000000000017CA                   2512+         dc ad(@PER_1347)                                               02-DCCCA
00001768 00000000000000D0                   2513+         dc ad(208)                                                     02-DCCCA
00001770 0000000000000000                   2514+         dc ad(0)                                                       02-DCCCA
00001778 0000000000001000                   2515+         dc ad(4096)                                                    02-DCCCA
00001780 20                                 2516+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001781 03                                 2517+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001782 03                                 2518+         dc al1(3)                                                      02-DCCCA
00001783 08                                 2519+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001784 00                                 2520+         dc bl.8'00000000'                                              02-DCCCA
00001785 000000                             2521+         dc al3(0)                                                      02-DCCCA
00001788 0000000000001740                   2522+         dc ad(@LNAME1347)                                              02-DCCCA
00001790                                    2523+         ds 0d                                                          02-DCCCA
00001790 0000000000001758                   2524+         dc ad($eye0067)                                                02-DCCCA
00001798 0000000000000000                   2525+         dc ad(0)                                                       02-DCCCA
000017A0                                    2526+         ds    0d                                                       01-DCCPR
000017A0                                    2527+rd_kafka_msgq_deq ds 0d                                                 01-DCCPR
000017A0                                    2528+@REGION_1347_1 ds 0h                                                    01-DCCPR
000017A0 EBEC D008 0024          00000008   2529+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000017A6 E3E0 D088 0004          00000088   2530+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000017AC E3C0 D090 0004          00000090   2531+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000017B2 B904 002E                          2532+         lgr   2,14                copy addr of our savearea            01-DCCPR
000017B6 E3B0 C018 0004          00000018   2533+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000017BC A7EB 00D0               000000D0   2534+         aghi  14,208              increase by frame size               01-DCCPR
000017C0 E3E0 C020 0021          00000020   2535+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000017C6 4720 B020               00000020   2536+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000017CA                                    2537+@PER_1347 ds   0h                                                       01-DCCPR
000017CA EBDE 2080 0024          00000080   2538+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000017D0 E3C0 2090 0024          00000090   2539+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000017D6 B904 00D2                          2540+         lgr   13,2                set real frame pointer               01-DCCPR
000017DA B904 00CF                          2541+         lgr   12,15               set base reg                         01-DCCPR
                        000017A0            2542+         using @REGION_1347_1,12                                        01-DCCPR
                                            2543 * ******* End of Prologue
                                            2544 * *
                                            2545 * ***      if (((do_count))) {
000017DE EB23 1000 0004          00000000   2546          LMG   2,3,0(1)    ; rkmq
000017E4 E3F0 1014 0012          00000014   2547          LT    15,20(0,1)  ; do_count
000017EA 4780 C11E               000018BE   2548          BZ    @L221
                                                                                                                           Page   55 
  Active Usings: @REGION_1347_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2549 * ***         do { if (((!(rkmq->rkmq_msg_cnt > 0)))) rd_kafka_crash("\
                                            2550 * C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.h",327, __FUNCTION__, (((\
                                            2551 * void *)0)), "assert: " "rkmq->rkmq_msg_cnt > 0"); } while (0);
000017EE                                    2552 @L213    DS    0H
000017EE E55C 2010 0000          00000010   2553          CHSI  16(2),0
000017F4 4720 C09A               0000183A   2554          BH    @L216
000017F8 E3F0 C158 0004          000018F8   2555          LG    15,@lit_1347_52
000017FE 4110 F06C               0000006C   2556          LA    1,108(0,15)
00001802 E310 D0A8 0024          000000A8   2557          STG   1,168(0,13)
00001808 E548 D0B0 0147          000000B0   2558          MVGHI 176(13),327
0000180E E310 C150 0004          000018F0   2559          LG    1,@lit_1347_53
00001814 4110 1060               00000060   2560          LA    1,96(0,1)
00001818 E310 D0B8 0024          000000B8   2561          STG   1,184(0,13)
0000181E D707 D0C0 D0C0 000000C0 000000C0   2562          XC    192(8,13),192(13)
00001824 41F0 F096               00000096   2563          LA    15,150(0,15)
00001828 E3F0 D0C8 0024          000000C8   2564          STG   15,200(0,13)
0000182E 4110 D0A8               000000A8   2565          LA    1,168(0,13)
00001832 E3F0 C148 0004          000018E8   2566          LG    15,@lit_1347_54 ; rd_kafka_crash
00001838                                    2567 @@gen_label66 DS    0H
00001838 05EF                               2568          BALR  14,15
0000183A                                    2569 @@gen_label67 DS    0H
0000183A                                    2570 @L216    DS    0H
                                            2571 * ***                   do { if (((!(rkmq->rkmq_msg_bytes >= (int64_t)\
                                            2572 * (rkm->rkm_rkmessage.len+rkm->rkm_rkmessage.key_len))))) rd_kafka_cra\
                                            2573 * sh("C:\\asgkafka\\librdkafka\\src\\rdkafka_msg.h",328, __FUNCTION__,\
                                            2574 *  (((void *)0)), "assert: " "rkmq->rkmq_msg_bytes >= (int64_t)(rkm->r\
                                            2575 * km_len+rkm->rkm_key_len)"); } while (0);
0000183A                                    2576 @L217    DS    0H
0000183A E3F0 2018 0004          00000018   2577          LG    15,24(0,2)  ; offset of rkmq_msg_bytes in rd_kafka_msgq_*
                                                                s
00001840 E310 3020 0004          00000020   2578          LG    1,32(0,3)   ; offset of len in rd_kafka_message_s
00001846 E310 3030 000A          00000030   2579          ALG   1,48(0,3)
0000184C B920 00F1                          2580          CGR   15,1
00001850 47B0 C0F6               00001896   2581          BNL   @L220
00001854 E3F0 C158 0004          000018F8   2582          LG    15,@lit_1347_52
0000185A 4110 F06C               0000006C   2583          LA    1,108(0,15)
0000185E E310 D0A8 0024          000000A8   2584          STG   1,168(0,13)
00001864 E548 D0B0 0148          000000B0   2585          MVGHI 176(13),328
0000186A E310 C150 0004          000018F0   2586          LG    1,@lit_1347_53
00001870 4110 1060               00000060   2587          LA    1,96(0,1)
00001874 E310 D0B8 0024          000000B8   2588          STG   1,184(0,13)
0000187A D707 D0C0 D0C0 000000C0 000000C0   2589          XC    192(8,13),192(13)
00001880 41F0 F0B6               000000B6   2590          LA    15,182(0,15)
00001884 E3F0 D0C8 0024          000000C8   2591          STG   15,200(0,13)
0000188A 4110 D0A8               000000A8   2592          LA    1,168(0,13)
0000188E E3F0 C148 0004          000018E8   2593          LG    15,@lit_1347_54 ; rd_kafka_crash
00001894                                    2594 @@gen_label69 DS    0H
00001894 05EF                               2595          BALR  14,15
00001896                                    2596 @@gen_label70 DS    0H
00001896                                    2597 @L220    DS    0H
                                            2598 * ***
                                            2599 * ***                   rkmq->rkmq_msg_cnt--;
                                                                                                                           Page   56 
  Active Usings: @REGION_1347_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001896 58F0 2010               00000010   2600          L     15,16(0,2)
0000189A A7FA FFFF               0000FFFF   2601          AHI   15,-1
0000189E 50F0 2010               00000010   2602          ST    15,16(0,2)
                                            2603 * ***                   rkmq->rkmq_msg_bytes -= rkm->rkm_rkmessage.len\
                                            2604 * +rkm->rkm_rkmessage.key_len;
000018A2 E3F0 2018 0004          00000018   2605          LG    15,24(0,2)
000018A8 E310 3020 0004          00000020   2606          LG    1,32(0,3)   ; offset of len in rd_kafka_message_s
000018AE E310 3030 000A          00000030   2607          ALG   1,48(0,3)
000018B4 B90B 00F1                          2608          SLGR  15,1
000018B8 E3F0 2018 0024          00000018   2609          STG   15,24(0,2)
                                            2610 * ***      }
000018BE                                    2611 @L212    DS    0H
                                            2612 * ***
                                            2613 * ***      do {   if (((rkm)->rkm_link .tqe_next) != (((void *)0))) (r\
                                            2614 * km)->rkm_link .tqe_next->rkm_link .tqe_prev = (rkm)->rkm_link .tqe_p\
                                            2615 * rev; else (&rkmq->rkmq_msgs)->tqh_last = (rkm)->rkm_link .tqe_prev; \
                                            2616 * *(rkm)->rkm_link .tqe_prev = (rkm)->rkm_link .tqe_next; ; } while ( \
                                            2617 * 0);
000018BE                                    2618 @L221    DS    0H
000018BE E3F0 3048 0002          00000048   2619          LTG   15,72(0,3)  ; offset of rkm_link in rd_kafka_msg_s
000018C4 4780 C160               00001900   2620          BE    @L224
000018C8 E3F0 3048 0004          00000048   2621          LG    15,72(0,3)  ; offset of rkm_link in rd_kafka_msg_s
000018CE E310 3050 0004          00000050   2622          LG    1,80(0,3)   ; offset of tqe_prev in 0000040
000018D4 E310 F050 0024          00000050   2623          STG   1,80(0,15)  ; offset of tqe_prev in 0000040
000018DA 47F0 C16C               0000190C   2624          B     @L225
000018E0                                    2625          DS    0D
000018E0 000000D0                           2626 @FRAMESIZE_1347 DC F'208'
000018E4 00000000
000018E8 0000000000000000                   2627 @lit_1347_54 DC AD(rd_kafka_crash)
000018F0 0000000000007AB8                   2628 @lit_1347_53 DC AD(@DATA)
000018F8 0000000000007DEC                   2629 @lit_1347_52 DC AD(@strings@)
00001900                                    2630 @L224    DS    0H
00001900 E3F0 3050 0004          00000050   2631          LG    15,80(0,3)  ; offset of tqe_prev in 0000040
00001906 E3F0 2008 0024          00000008   2632          STG   15,8(0,2)   ; offset of tqh_last in rd_kafka_msgs_head_s
0000190C                                    2633 @L225    DS    0H
0000190C E3F0 3050 0004          00000050   2634          LG    15,80(0,3)  ; offset of tqe_prev in 0000040
00001912 E310 3048 0004          00000048   2635          LG    1,72(0,3)   ; offset of rkm_link in rd_kafka_msg_s
00001918 E310 F000 0024          00000000   2636          STG   1,0(0,15)
                                            2637 * ***
                                            2638 * ***      return rkm;
0000191E B904 00F3                          2639          LGR   15,3
                                            2640 * ***   }
                                            2641 * * **** Start of Epilogue
                                            2642          DCCEPIL
00001922                                    2643+         ds 0h                                                          01-DCCEP
                                            2644+* Epilog
00001922 D707 D088 D088 00000088 00000088   2645+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001928 E3D0 D080 0004          00000080   2646+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000192E E3C0 D090 0004          00000090   2647+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001934 E3B0 C018 0004          00000018   2648+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000193A E3C0 B010 0021          00000010   2649+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001940 E3E0 D008 0004          00000008   2650+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page   57 
  Active Usings: @REGION_1347_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001946 EB1C D020 0004          00000020   2651+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000194C 078E                               2652+         bcr 8,14                if same dsab, just return              01-DCCEP
0000194E E3F0 D010 0024          00000010   2653+         stg 15,16(0,13)         save return code                       01-DCCEP
00001954 E300 D018 0024          00000018   2654+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000195A E3F0 D090 0004          00000090   2655+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001960 E3F0 F018 0004          00000018   2656+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001966 47F0 F040               00000040   2657+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2658+* End of Epilog
                                            2659 * * **** End of Epilogue
                                            2660          DROP  12
                                            2661 *
                                            2662 *   DSECT for automatic variables in "rd_kafka_msgq_deq"
                                            2663 *      (FUNCTION #1347)
                                            2664 *
00000000                00000000 000000A8   2665 @AUTO#rd_kafka_msgq_deq DSECT
00000000                                    2666          DS    XL168
                                            2667 *
0000196A                00000000 00007AB2   2668 @CODE    CSECT
                                            2669 *
                                            2670 *
                                            2671 *
                                            2672 * ....... start of rd_kafka_msgq_first
0000196A                                    2673 @LNAME1349 DS  0H
0000196A 00000013                           2674          DC    X'00000013'
0000196E 99846D9281869281                   2675          DC    C'rd_kafka_msgq_first'
00001981 00                                 2676          DC    X'00'
                                            2677 rd_kafka_msgq_first DCCPRLG CINDEX=1349,BASER=0,FRAME=168,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1349
                                            2678          macro
                                            2679          dccextrn &m
                                            2680          gblc    &$dccext(1000)
                                            2681          gbla    &$dccexti
                                            2682          lcla    &i
                                            2683 &$dccext(&$dccexti+1) setc    '&m'
                                            2684 &i       seta    1
                                            2685 .loop    aif    (&i gt &$dccexti).around
                                            2686          aif    ('&$dccext(&i)' eq '&m').getout
                                            2687 &i       seta    &i+1
                                            2688          ago     .loop
                                            2689 .around  anop
                                            2690 &$dccexti seta &$dccexti+1
                                            2691          extrn  &m
                                            2692 .getout  anop
                                            2693          mend
00001988                                    2694+$eye0070    ds    0d                                                    02-DCCCA
00001988 C4C3C3                             2695+         dc cl3'DCC'                                                    02-DCCCA
0000198B 01                                 2696+         dc xl1'01' format one                                          02-DCCCA
0000198C 00000000                           2697+         dc a(0)                                                        02-DCCCA
00001990 0000000000000000                   2698+         dc ad(0)                                                       02-DCCCA
00001998 00000000000000A8                   2699+         dc ad(168)                                                     02-DCCCA
000019A0 0000000000000000                   2700+         dc ad(0)                                                       02-DCCCA
000019A8 0000000000001000                   2701+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000019B0 20                                 2702+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000019B1 03                                 2703+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000019B2 03                                 2704+         dc al1(3)                                                      02-DCCCA
000019B3 08                                 2705+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000019B4 00                                 2706+         dc bl.8'00000000'                                              02-DCCCA
000019B5 000000                             2707+         dc al3(0)                                                      02-DCCCA
000019B8 000000000000196A                   2708+         dc ad(@LNAME1349)                                              02-DCCCA
000019C0                                    2709+         ds 0d                                                          02-DCCCA
000019C0 0000000000001988                   2710+         dc ad($eye0070)                                                02-DCCCA
000019C8 0000000000000000                   2711+         dc ad(0)                                                       02-DCCCA
000019D0                                    2712+         ds    0d                                                       01-DCCPR
000019D0                                    2713+rd_kafka_msgq_first ds 0d                                               01-DCCPR
000019D0                                    2714+@REGION_1349_1 ds 0h                                                    01-DCCPR
000019D0 EBEC D008 0024          00000008   2715+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2716 * ******* End of Prologue
                                            2717 * *
                                            2718 * ***           return ((&rkmq->rkmq_msgs)->tqh_first);
000019D6 E3F0 1000 0004          00000000   2719          LG    15,0(0,1)   ; rkmq
000019DC E3F0 F000 0004          00000000   2720          LG    15,0(0,15)  ; rkmq
                                            2721 * ***   }
                                            2722 * * **** Start of Epilogue
                                            2723          DCCEPIL
000019E2                                    2724+         ds 0h                                                          01-DCCEP
                                            2725+* Epilog
                                            2726+* Epilog
000019E2 E3E0 D008 0004          00000008   2727+         lg    14,8(,13) restore the reg                                01-DCCEP
000019E8 EB1C D020 0004          00000020   2728+         lmg   1,12,32(13)                                              01-DCCEP
000019EE 07FE                               2729+         br   14                                                        01-DCCEP
                                            2730+* End of Epilog
                                            2731 * * **** End of Epilogue
                                            2732 *
                                            2733 *   DSECT for automatic variables in "rd_kafka_msgq_first"
                                            2734 *      (FUNCTION #1349)
                                            2735 *
00000000                00000000 000000A8   2736 @AUTO#rd_kafka_msgq_first DSECT
00000000                                    2737          DS    XL168
                                            2738 *
000019F0                00000000 00007AB2   2739 @CODE    CSECT
                                            2740 *
                                            2741 *
                                            2742 *
                                            2743 * ....... start of rd_kafka_msgq_last
000019F0                                    2744 @LNAME1350 DS  0H
000019F0 00000012                           2745          DC    X'00000012'
000019F4 99846D9281869281                   2746          DC    C'rd_kafka_msgq_last'
00001A06 00                                 2747          DC    X'00'
                                            2748 rd_kafka_msgq_last DCCPRLG CINDEX=1350,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1350
                                            2749          macro
                                            2750          dccextrn &m
                                            2751          gblc    &$dccext(1000)
                                            2752          gbla    &$dccexti
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2753          lcla    &i
                                            2754 &$dccext(&$dccexti+1) setc    '&m'
                                            2755 &i       seta    1
                                            2756 .loop    aif    (&i gt &$dccexti).around
                                            2757          aif    ('&$dccext(&i)' eq '&m').getout
                                            2758 &i       seta    &i+1
                                            2759          ago     .loop
                                            2760 .around  anop
                                            2761 &$dccexti seta &$dccexti+1
                                            2762          extrn  &m
                                            2763 .getout  anop
                                            2764          mend
00001A08                                    2765+$eye0073    ds    0d                                                    02-DCCCA
00001A08 C4C3C3                             2766+         dc cl3'DCC'                                                    02-DCCCA
00001A0B 01                                 2767+         dc xl1'01' format one                                          02-DCCCA
00001A0C 00000000                           2768+         dc a(0)                                                        02-DCCCA
00001A10 0000000000000000                   2769+         dc ad(0)                                                       02-DCCCA
00001A18 00000000000000A8                   2770+         dc ad(168)                                                     02-DCCCA
00001A20 0000000000000000                   2771+         dc ad(0)                                                       02-DCCCA
00001A28 0000000000001000                   2772+         dc ad(4096)                                                    02-DCCCA
00001A30 20                                 2773+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001A31 03                                 2774+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001A32 03                                 2775+         dc al1(3)                                                      02-DCCCA
00001A33 08                                 2776+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001A34 00                                 2777+         dc bl.8'00000000'                                              02-DCCCA
00001A35 000000                             2778+         dc al3(0)                                                      02-DCCCA
00001A38 00000000000019F0                   2779+         dc ad(@LNAME1350)                                              02-DCCCA
00001A40                                    2780+         ds 0d                                                          02-DCCCA
00001A40 0000000000001A08                   2781+         dc ad($eye0073)                                                02-DCCCA
00001A48 0000000000000000                   2782+         dc ad(0)                                                       02-DCCCA
00001A50                                    2783+         ds    0d                                                       01-DCCPR
00001A50                                    2784+rd_kafka_msgq_last ds 0d                                                01-DCCPR
00001A50                                    2785+@REGION_1350_1 ds 0h                                                    01-DCCPR
00001A50 EBEC D008 0024          00000008   2786+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2787 * ******* End of Prologue
                                            2788 * *
                                            2789 * ***           return (*(((struct rd_kafka_msgs_head_s *)((&rkmq->rkm\
                                            2790 * q_msgs)->tqh_last))->tqh_last));
00001A56 E3F0 1000 0004          00000000   2791          LG    15,0(0,1)   ; rkmq
00001A5C E3F0 F008 0004          00000008   2792          LG    15,8(0,15)  ; offset of tqh_last in rd_kafka_msgs_head_s
00001A62 E3F0 F008 0004          00000008   2793          LG    15,8(0,15)  ; offset of tqh_last in rd_kafka_msgs_head_s
00001A68 E3F0 F000 0004          00000000   2794          LG    15,0(0,15)
                                            2795 * ***   }
                                            2796 * * **** Start of Epilogue
                                            2797          DCCEPIL
00001A6E                                    2798+         ds 0h                                                          01-DCCEP
                                            2799+* Epilog
                                            2800+* Epilog
00001A6E E3E0 D008 0004          00000008   2801+         lg    14,8(,13) restore the reg                                01-DCCEP
00001A74 EB1C D020 0004          00000020   2802+         lmg   1,12,32(13)                                              01-DCCEP
00001A7A 07FE                               2803+         br   14                                                        01-DCCEP
                                            2804+* End of Epilog
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2805 * * **** End of Epilogue
                                            2806 *
                                            2807 *   DSECT for automatic variables in "rd_kafka_msgq_last"
                                            2808 *      (FUNCTION #1350)
                                            2809 *
00000000                00000000 000000A8   2810 @AUTO#rd_kafka_msgq_last DSECT
00000000                                    2811          DS    XL168
                                            2812 *
00001A7C                00000000 00007AB2   2813 @CODE    CSECT
                                            2814 *
                                            2815 *
                                            2816 *
                                            2817 * ....... start of rd_kafka_msgq_enq
00001A7C                                    2818 @LNAME1357 DS  0H
00001A7C 00000011                           2819          DC    X'00000011'
00001A80 99846D9281869281                   2820          DC    C'rd_kafka_msgq_enq'
00001A91 00                                 2821          DC    X'00'
                                            2822 rd_kafka_msgq_enq DCCPRLG CINDEX=1357,BASER=0,FRAME=168,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1357
                                            2823          macro
                                            2824          dccextrn &m
                                            2825          gblc    &$dccext(1000)
                                            2826          gbla    &$dccexti
                                            2827          lcla    &i
                                            2828 &$dccext(&$dccexti+1) setc    '&m'
                                            2829 &i       seta    1
                                            2830 .loop    aif    (&i gt &$dccexti).around
                                            2831          aif    ('&$dccext(&i)' eq '&m').getout
                                            2832 &i       seta    &i+1
                                            2833          ago     .loop
                                            2834 .around  anop
                                            2835 &$dccexti seta &$dccexti+1
                                            2836          extrn  &m
                                            2837 .getout  anop
                                            2838          mend
00001A98                                    2839+$eye0076    ds    0d                                                    02-DCCCA
00001A98 C4C3C3                             2840+         dc cl3'DCC'                                                    02-DCCCA
00001A9B 01                                 2841+         dc xl1'01' format one                                          02-DCCCA
00001A9C 00000000                           2842+         dc a(0)                                                        02-DCCCA
00001AA0 0000000000000000                   2843+         dc ad(0)                                                       02-DCCCA
00001AA8 00000000000000A8                   2844+         dc ad(168)                                                     02-DCCCA
00001AB0 0000000000000000                   2845+         dc ad(0)                                                       02-DCCCA
00001AB8 0000000000001000                   2846+         dc ad(4096)                                                    02-DCCCA
00001AC0 20                                 2847+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001AC1 03                                 2848+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001AC2 03                                 2849+         dc al1(3)                                                      02-DCCCA
00001AC3 08                                 2850+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001AC4 00                                 2851+         dc bl.8'00000000'                                              02-DCCCA
00001AC5 000000                             2852+         dc al3(0)                                                      02-DCCCA
00001AC8 0000000000001A7C                   2853+         dc ad(@LNAME1357)                                              02-DCCCA
00001AD0                                    2854+         ds 0d                                                          02-DCCCA
00001AD0 0000000000001A98                   2855+         dc ad($eye0076)                                                02-DCCCA
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001AD8 0000000000000000                   2856+         dc ad(0)                                                       02-DCCCA
00001AE0                                    2857+         ds    0d                                                       01-DCCPR
00001AE0                                    2858+rd_kafka_msgq_enq ds 0d                                                 01-DCCPR
00001AE0                                    2859+@REGION_1357_1 ds 0h                                                    01-DCCPR
00001AE0 EBEC D008 0024          00000008   2860+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2861 * ******* End of Prologue
                                            2862 * *
                                            2863 * ***           do {  (rkm)->rkm_link .tqe_next = (((void *)0)); (rkm)\
                                            2864 * ->rkm_link .tqe_prev = (&rkmq->rkmq_msgs)->tqh_last; *(&rkmq->rkmq_m\
                                            2865 * sgs)->tqh_last = (rkm); (&rkmq->rkmq_msgs)->tqh_last = &(rkm)->rkm_l\
                                            2866 * ink .tqe_next; } while ( 0);
00001AE6 E3F0 1000 0004          00000000   2867          LG    15,0(0,1)   ; rkmq
00001AEC E310 1008 0004          00000008   2868          LG    1,8(0,1)    ; rkm
00001AF2                                    2869 @L244    DS    0H
00001AF2 A729 0000               00000000   2870          LGHI  2,0         ; 0
00001AF6 E320 1048 0024          00000048   2871          STG   2,72(0,1)   ; offset of rkm_link in rd_kafka_msg_s
00001AFC E320 F008 0004          00000008   2872          LG    2,8(0,15)   ; offset of tqh_last in rd_kafka_msgs_head_s
00001B02 E320 1050 0024          00000050   2873          STG   2,80(0,1)   ; offset of tqe_prev in 0000040
00001B08 E320 F008 0004          00000008   2874          LG    2,8(0,15)   ; offset of tqh_last in rd_kafka_msgs_head_s
00001B0E E310 2000 0024          00000000   2875          STG   1,0(0,2)
00001B14 4120 1048               00000048   2876          LA    2,72(0,1)
00001B18 E320 F008 0024          00000008   2877          STG   2,8(0,15)   ; offset of tqh_last in rd_kafka_msgs_head_s
                                            2878 * ***           rkmq->rkmq_msg_bytes += rkm->rkm_rkmessage.len+rkm->rk\
                                            2879 * m_rkmessage.key_len;
00001B1E E320 F018 0004          00000018   2880          LG    2,24(0,15)
00001B24 E330 1020 0004          00000020   2881          LG    3,32(0,1)   ; offset of len in rd_kafka_message_s
00001B2A E330 1030 000A          00000030   2882          ALG   3,48(0,1)
00001B30 B90A 0023                          2883          ALGR  2,3
00001B34 E320 F018 0024          00000018   2884          STG   2,24(0,15)
                                            2885 * ***           return (int)++rkmq->rkmq_msg_cnt;
00001B3A 5810 F010               00000010   2886          L     1,16(0,15)
00001B3E A71A 0001               00000001   2887          AHI   1,1
00001B42 5010 F010               00000010   2888          ST    1,16(0,15)
00001B46 B914 00F1                          2889          LGFR  15,1
                                            2890 * ***   }
                                            2891 * * **** Start of Epilogue
                                            2892          DCCEPIL
00001B4A                                    2893+         ds 0h                                                          01-DCCEP
                                            2894+* Epilog
                                            2895+* Epilog
00001B4A E3E0 D008 0004          00000008   2896+         lg    14,8(,13) restore the reg                                01-DCCEP
00001B50 EB1C D020 0004          00000020   2897+         lmg   1,12,32(13)                                              01-DCCEP
00001B56 07FE                               2898+         br   14                                                        01-DCCEP
                                            2899+* End of Epilog
                                            2900 * * **** End of Epilogue
                                            2901 *
                                            2902 *   DSECT for automatic variables in "rd_kafka_msgq_enq"
                                            2903 *      (FUNCTION #1357)
                                            2904 *
00000000                00000000 000000A8   2905 @AUTO#rd_kafka_msgq_enq DSECT
00000000                                    2906          DS    XL168
                                            2907 *
                                                                                                                           Page   62 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001B58                00000000 00007AB2   2908 @CODE    CSECT
                                            2909 *
                                            2910 *
                                            2911 *
                                            2912 * ....... start of rd_strlcpy
00001B58                                    2913 @LNAME1384 DS  0H
00001B58 0000000A                           2914          DC    X'0000000A'
00001B5C 99846DA2A3999383                   2915          DC    C'rd_strlcpy'
00001B66 00                                 2916          DC    X'00'
                                            2917 rd_strlcpy DCCPRLG CINDEX=1384,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1384
                                            2918          macro
                                            2919          dccextrn &m
                                            2920          gblc    &$dccext(1000)
                                            2921          gbla    &$dccexti
                                            2922          lcla    &i
                                            2923 &$dccext(&$dccexti+1) setc    '&m'
                                            2924 &i       seta    1
                                            2925 .loop    aif    (&i gt &$dccexti).around
                                            2926          aif    ('&$dccext(&i)' eq '&m').getout
                                            2927 &i       seta    &i+1
                                            2928          ago     .loop
                                            2929 .around  anop
                                            2930 &$dccexti seta &$dccexti+1
                                            2931          extrn  &m
                                            2932 .getout  anop
                                            2933          mend
00001B68                                    2934+$eye0079    ds    0d                                                    02-DCCCA
00001B68 C4C3C3                             2935+         dc cl3'DCC'                                                    02-DCCCA
00001B6B 01                                 2936+         dc xl1'01' format one                                          02-DCCCA
00001B6C 00000000                           2937+         dc a(0)                                                        02-DCCCA
00001B70 0000000000000000                   2938+         dc ad(0)                                                       02-DCCCA
00001B78 00000000000000B0                   2939+         dc ad(176)                                                     02-DCCCA
00001B80 0000000000000000                   2940+         dc ad(0)                                                       02-DCCCA
00001B88 0000000000001000                   2941+         dc ad(4096)                                                    02-DCCCA
00001B90 20                                 2942+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001B91 03                                 2943+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001B92 03                                 2944+         dc al1(3)                                                      02-DCCCA
00001B93 08                                 2945+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001B94 00                                 2946+         dc bl.8'00000000'                                              02-DCCCA
00001B95 000000                             2947+         dc al3(0)                                                      02-DCCCA
00001B98 0000000000001B58                   2948+         dc ad(@LNAME1384)                                              02-DCCCA
00001BA0                                    2949+         ds 0d                                                          02-DCCCA
00001BA0 0000000000001B68                   2950+         dc ad($eye0079)                                                02-DCCCA
00001BA8 0000000000000000                   2951+         dc ad(0)                                                       02-DCCCA
00001BB0                                    2952+         ds    0d                                                       01-DCCPR
00001BB0                                    2953+rd_strlcpy ds  0d                                                       01-DCCPR
00001BB0                                    2954+@REGION_1384_1 ds 0h                                                    01-DCCPR
00001BB0 EBEC D008 0024          00000008   2955+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001BB6 B904 00CF                          2956+         lgr   12,15               set base reg                         01-DCCPR
                        00001BB0            2957+         using @REGION_1384_1,12                                        01-DCCPR
                                            2958 * ******* End of Prologue
                                                                                                                           Page   63 
  Active Usings: @REGION_1384_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2959 * *
00001BBA E3F0 1010 0004          00000010   2960          LG    15,16(0,1)  ; dstsize
                                            2961 * ***
                                            2962 * ***
                                            2963 * ***
                                            2964 * ***           if (((dstsize > 0))) {
00001BC0 C2FE 0000 0000                     2965          CLGFI 15,X'00000000'
00001BC6 47D0 C0A6               00001C56   2966          BNH   @ret_lab_1384
                                            2967 * ***                   size_t srclen = __strlen(src);
00001BCA E320 1008 0004          00000008   2968          LG    2,8(0,1)
00001BD0 B904 0032                          2969          LGR   3,2
00001BD4 A709 0000               00000000   2970          LGHI  0,0
00001BD8                                    2971 @@gen_label73 DS 0H
00001BD8 B25E 0002                          2972          SRST  0,2
00001BDC 4710 C028               00001BD8   2973          BC  1,@@gen_label73
00001BE0 B90B 0003                          2974          SLGR  0,3
                                            2975 * ***                   size_t copylen = ((srclen) < (dstsize-1) ? (sr\
                                            2976 * clen) : (dstsize-1));
00001BE4 B904 002F                          2977          LGR   2,15
00001BE8 A72B FFFF               0000FFFF   2978          AGHI  2,-1
00001BEC B921 0002                          2979          CLGR  0,2
00001BF0 47B0 C056               00001C06   2980          BNL   @L252
00001BF4 B904 00F0                          2981          LGR   15,0
00001BF8 47F0 C05A               00001C0A   2982          B     @L253
00001C00                                    2983          DS    0D
00001C00 D200 4000 3000 00000000 00000000   2984 @lit_1384_60          MVC 0(1,4),0(3)
00001C06                                    2985 @L252    DS    0H
00001C06 A7FB FFFF               0000FFFF   2986          AGHI  15,-1
00001C0A                                    2987 @L253    DS    0H
                                            2988 * ***                   __memcpy(dst,src,copylen);
00001C0A E330 1008 0004          00000008   2989          LG    3,8(0,1)
00001C10 E340 1000 0004          00000000   2990          LG    4,0(0,1)
00001C16 B902 002F                          2991          LTGR  2,15
00001C1A 4780 C098               00001C48   2992          BZ    @@gen_label77
00001C1E A72B FFFF               0000FFFF   2993          AGHI  2,-1
00001C22 EB52 0008 000A          00000008   2994          SRAG  5,2,8(0)
00001C28 B902 0055                          2995          LTGR  5,5
00001C2C 4780 C094               00001C44   2996          BZ    @@gen_label76
00001C30                                    2997 @@gen_label75 DS 0H
00001C30 D2FF 4000 3000 00000000 00000000   2998          MVC   0(256,4),0(3)
00001C36 4140 4100               00000100   2999          LA    4,256(0,4)
00001C3A 4130 3100               00000100   3000          LA    3,256(0,3)
00001C3E E350 C080 0046          00001C30   3001          BCTG  5,@@gen_label75
00001C44                                    3002 @@gen_label76 DS 0H
00001C44 4420 C050               00001C00   3003          EX    2,@lit_1384_60
00001C48                                    3004 @@gen_label77 DS 0H
                                            3005 * ***                   dst[copylen] = '\0';
00001C48 E310 1000 0004          00000000   3006          LG    1,0(0,1)    ; dst
00001C4E 41FF 1000               00000000   3007          LA    15,0(15,1)
00001C52 9200 F000      00000000 00000000   3008          MVI   0(15),0
                                            3009 * ***           }
00001C56                                    3010 @L251    DS    0H
                                                                                                                           Page   64 
  Active Usings: @REGION_1384_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3011 * ***
                                            3012 * ***   }
00001C56                                    3013 @ret_lab_1384 DS 0H
                                            3014 * * **** Start of Epilogue
                                            3015          DCCEPIL
00001C56                                    3016+         ds 0h                                                          01-DCCEP
                                            3017+* Epilog
                                            3018+* Epilog
00001C56 E3E0 D008 0004          00000008   3019+         lg    14,8(,13) restore the reg                                01-DCCEP
00001C5C EB1C D020 0004          00000020   3020+         lmg   1,12,32(13)                                              01-DCCEP
00001C62 07FE                               3021+         br   14                                                        01-DCCEP
                                            3022+* End of Epilog
                                            3023 * * **** End of Epilogue
                                            3024          DROP  12
                                            3025 *
                                            3026 *   DSECT for automatic variables in "rd_strlcpy"
                                            3027 *      (FUNCTION #1384)
                                            3028 *
00000000                00000000 000000B0   3029 @AUTO#rd_strlcpy DSECT
00000000                                    3030          DS    XL168
000000A8                                    3031 rd_strlcpy#copylen#1 DS 8XL1 ; copylen
000000B0                000000B0 000000A8   3032          ORG   @AUTO#rd_strlcpy+168
000000A8                                    3033 rd_strlcpy#srclen#1 DS 8XL1 ; srclen
                                            3034 *
00001C64                00000000 00007AB2   3035 @CODE    CSECT
                                            3036 *
                                            3037 *
                                            3038 *
                                            3039 * ....... start of rd_crc32_init
00001C64                                    3040 @LNAME1484 DS  0H
00001C64 0000000D                           3041          DC    X'0000000D'
00001C68 99846D839983F3F2                   3042          DC    C'rd_crc32_init'
00001C75 00                                 3043          DC    X'00'
                                            3044 rd_crc32_init DCCPRLG CINDEX=1484,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1484
                                            3045          macro
                                            3046          dccextrn &m
                                            3047          gblc    &$dccext(1000)
                                            3048          gbla    &$dccexti
                                            3049          lcla    &i
                                            3050 &$dccext(&$dccexti+1) setc    '&m'
                                            3051 &i       seta    1
                                            3052 .loop    aif    (&i gt &$dccexti).around
                                            3053          aif    ('&$dccext(&i)' eq '&m').getout
                                            3054 &i       seta    &i+1
                                            3055          ago     .loop
                                            3056 .around  anop
                                            3057 &$dccexti seta &$dccexti+1
                                            3058          extrn  &m
                                            3059 .getout  anop
                                            3060          mend
00001C78                                    3061+$eye0082    ds    0d                                                    02-DCCCA
                                                                                                                           Page   65 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001C78 C4C3C3                             3062+         dc cl3'DCC'                                                    02-DCCCA
00001C7B 01                                 3063+         dc xl1'01' format one                                          02-DCCCA
00001C7C 00000000                           3064+         dc a(0)                                                        02-DCCCA
00001C80 0000000000000000                   3065+         dc ad(0)                                                       02-DCCCA
00001C88 00000000000000A8                   3066+         dc ad(168)                                                     02-DCCCA
00001C90 0000000000000000                   3067+         dc ad(0)                                                       02-DCCCA
00001C98 0000000000001000                   3068+         dc ad(4096)                                                    02-DCCCA
00001CA0 20                                 3069+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001CA1 03                                 3070+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001CA2 03                                 3071+         dc al1(3)                                                      02-DCCCA
00001CA3 08                                 3072+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001CA4 00                                 3073+         dc bl.8'00000000'                                              02-DCCCA
00001CA5 000000                             3074+         dc al3(0)                                                      02-DCCCA
00001CA8 0000000000001C64                   3075+         dc ad(@LNAME1484)                                              02-DCCCA
00001CB0                                    3076+         ds 0d                                                          02-DCCCA
00001CB0 0000000000001C78                   3077+         dc ad($eye0082)                                                02-DCCCA
00001CB8 0000000000000000                   3078+         dc ad(0)                                                       02-DCCCA
00001CC0                                    3079+         ds    0d                                                       01-DCCPR
00001CC0                                    3080+rd_crc32_init ds 0d                                                     01-DCCPR
00001CC0                                    3081+@REGION_1484_1 ds 0h                                                    01-DCCPR
00001CC0 EBEC D008 0024          00000008   3082+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3083 * ******* End of Prologue
                                            3084 * *
                                            3085 * ***
                                            3086 * ***
                                            3087 * ***
                                            3088 * ***       return 0xffffffff;
00001CC6 C0FF FFFF FFFF                     3089          LLILF 15,X'FFFFFFFF' ; 4294967295
                                            3090 * ***
                                            3091 * ***   }
                                            3092 * * **** Start of Epilogue
                                            3093          DCCEPIL
00001CCC                                    3094+         ds 0h                                                          01-DCCEP
                                            3095+* Epilog
                                            3096+* Epilog
00001CCC E3E0 D008 0004          00000008   3097+         lg    14,8(,13) restore the reg                                01-DCCEP
00001CD2 EB1C D020 0004          00000020   3098+         lmg   1,12,32(13)                                              01-DCCEP
00001CD8 07FE                               3099+         br   14                                                        01-DCCEP
                                            3100+* End of Epilog
                                            3101 * * **** End of Epilogue
                                            3102 *
                                            3103 *   DSECT for automatic variables in "rd_crc32_init"
                                            3104 *      (FUNCTION #1484)
                                            3105 *
00000000                00000000 000000A8   3106 @AUTO#rd_crc32_init DSECT
00000000                                    3107          DS    XL168
                                            3108 *
00001CDA                00000000 00007AB2   3109 @CODE    CSECT
                                            3110 *
                                            3111 *
                                            3112 *
                                            3113 * ....... start of rd_crc32_update
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001CDA                                    3114 @LNAME1485 DS  0H
00001CDA 0000000F                           3115          DC    X'0000000F'
00001CDE 99846D839983F3F2                   3116          DC    C'rd_crc32_update'
00001CED 00                                 3117          DC    X'00'
                                            3118 rd_crc32_update DCCPRLG CINDEX=1485,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1485
                                            3119          macro
                                            3120          dccextrn &m
                                            3121          gblc    &$dccext(1000)
                                            3122          gbla    &$dccexti
                                            3123          lcla    &i
                                            3124 &$dccext(&$dccexti+1) setc    '&m'
                                            3125 &i       seta    1
                                            3126 .loop    aif    (&i gt &$dccexti).around
                                            3127          aif    ('&$dccext(&i)' eq '&m').getout
                                            3128 &i       seta    &i+1
                                            3129          ago     .loop
                                            3130 .around  anop
                                            3131 &$dccexti seta &$dccexti+1
                                            3132          extrn  &m
                                            3133 .getout  anop
                                            3134          mend
00001CF0                                    3135+$eye0085    ds    0d                                                    02-DCCCA
00001CF0 C4C3C3                             3136+         dc cl3'DCC'                                                    02-DCCCA
00001CF3 01                                 3137+         dc xl1'01' format one                                          02-DCCCA
00001CF4 00000000                           3138+         dc a(0)                                                        02-DCCCA
00001CF8 0000000000001D62                   3139+         dc ad(@PER_1485)                                               02-DCCCA
00001D00 00000000000000B0                   3140+         dc ad(176)                                                     02-DCCCA
00001D08 0000000000000000                   3141+         dc ad(0)                                                       02-DCCCA
00001D10 0000000000001000                   3142+         dc ad(4096)                                                    02-DCCCA
00001D18 20                                 3143+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001D19 03                                 3144+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001D1A 03                                 3145+         dc al1(3)                                                      02-DCCCA
00001D1B 08                                 3146+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001D1C 00                                 3147+         dc bl.8'00000000'                                              02-DCCCA
00001D1D 000000                             3148+         dc al3(0)                                                      02-DCCCA
00001D20 0000000000001CDA                   3149+         dc ad(@LNAME1485)                                              02-DCCCA
00001D28                                    3150+         ds 0d                                                          02-DCCCA
00001D28 0000000000001CF0                   3151+         dc ad($eye0085)                                                02-DCCCA
00001D30 0000000000000000                   3152+         dc ad(0)                                                       02-DCCCA
00001D38                                    3153+         ds    0d                                                       01-DCCPR
00001D38                                    3154+rd_crc32_update ds 0d                                                   01-DCCPR
00001D38                                    3155+@REGION_1485_1 ds 0h                                                    01-DCCPR
00001D38 EBEC D008 0024          00000008   3156+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001D3E E3E0 D088 0004          00000088   3157+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001D44 E3C0 D090 0004          00000090   3158+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001D4A B904 002E                          3159+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001D4E E3B0 C018 0004          00000018   3160+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001D54 A7EB 00B0               000000B0   3161+         aghi  14,176              increase by frame size               01-DCCPR
00001D58 E3E0 C020 0021          00000020   3162+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001D5E 4720 B020               00000020   3163+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001D62                                    3164+@PER_1485 ds   0h                                                       01-DCCPR
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001D62 EBDE 2080 0024          00000080   3165+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001D68 E3C0 2090 0024          00000090   3166+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001D6E B904 00D2                          3167+         lgr   13,2                set real frame pointer               01-DCCPR
00001D72 B904 00CF                          3168+         lgr   12,15               set base reg                         01-DCCPR
                        00001D38            3169+         using @REGION_1485_1,12                                        01-DCCPR
                                            3170          DCCPRV REG=2      ; Get PRV from DVT
00001D76 E320 B008 0004          00000008   3171+         LG 2,8(0,11)                                                   01-DCCPR
00001D7C B904 0031                          3172          LGR   3,1         ; ptr to parm area
                                            3173 * ******* End of Prologue
                                            3174 * *
00001D80 58F0 3004               00000004   3175          L     15,4(0,3)   ; crc
00001D84 E310 3008 0004          00000008   3176          LG    1,8(0,3)    ; data
                                            3177 * ***
                                            3178 * ***
                                            3179 * ***
                                            3180 * ***
                                            3181 * ***       unsigned int tbl_idx;
                                            3182 * ***
                                            3183 * ***       while (data_len--) {
00001D8A 47F0 C090               00001DC8   3184          B     @L483
00001D90                                    3185          DS    0D
00001D90 000000B0                           3186 @FRAMESIZE_1485 DC F'176'
00001D94 00000000                           3187 @lit_1485_62 DC Q(crc_table)
00001D98                                    3188 @L482    DS    0H
                                            3189 * ***           tbl_idx = (crc ^ *data) & 0xff;
00001D98 E340 1000 0094          00000000   3190          LLC   4,0(0,1)
00001D9E 185F                               3191          LR    5,15
00001DA0 1754                               3192          XR    5,4
00001DA2 C05B 0000 00FF                     3193          NILF  5,X'000000FF'
                                            3194 * ***           crc = (crc_table[tbl_idx] ^ (crc >> 8)) & 0xffffffff;
00001DA8 B916 0045                          3195          LLGFR 4,5
00001DAC E350 C05C 0016          00001D94   3196          LLGF  5,@lit_1485_62 ; crc_table
00001DB2 EB44 0002 000D          00000002   3197          SLLG  4,4,2(0)    ; *0x4
00001DB8 4145 4000               00000000   3198          LA    4,0(5,4)
00001DBC 88F0 0008               00000008   3199          SRL   15,8(0)
00001DC0 57F4 2000               00000000   3200          X     15,0(4,2)
                                            3201 * ***
                                            3202 * ***           data++;
00001DC4 4110 1001               00000001   3203          LA    1,1(0,1)
                                            3204 * ***       }
00001DC8                                    3205 @L483    DS    0H
00001DC8 E340 3010 0004          00000010   3206          LG    4,16(0,3)   ; data_len
00001DCE B904 0054                          3207          LGR   5,4
00001DD2 A75B FFFF               0000FFFF   3208          AGHI  5,-1
00001DD6 E350 3010 0024          00000010   3209          STG   5,16(0,3)   ; data_len
00001DDC B902 0044                          3210          LTGR  4,4
00001DE0 4770 C060               00001D98   3211          BNZ   @L482
                                            3212 * ***       return crc & 0xffffffff;
00001DE4 B916 00FF                          3213          LLGFR 15,15
                                            3214 * ***
                                            3215 * ***   }
                                            3216 * * **** Start of Epilogue
                                                                                                                           Page   68 
  Active Usings: @REGION_1485_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3217          DCCEPIL
00001DE8                                    3218+         ds 0h                                                          01-DCCEP
                                            3219+* Epilog
00001DE8 D707 D088 D088 00000088 00000088   3220+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001DEE E3D0 D080 0004          00000080   3221+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001DF4 E3C0 D090 0004          00000090   3222+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001DFA E3B0 C018 0004          00000018   3223+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001E00 E3C0 B010 0021          00000010   3224+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001E06 E3E0 D008 0004          00000008   3225+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001E0C EB1C D020 0004          00000020   3226+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001E12 078E                               3227+         bcr 8,14                if same dsab, just return              01-DCCEP
00001E14 E3F0 D010 0024          00000010   3228+         stg 15,16(0,13)         save return code                       01-DCCEP
00001E1A E300 D018 0024          00000018   3229+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001E20 E3F0 D090 0004          00000090   3230+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001E26 E3F0 F018 0004          00000018   3231+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E2C 47F0 F040               00000040   3232+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3233+* End of Epilog
                                            3234 * * **** End of Epilogue
                                            3235          DROP  12
                                            3236 *
                                            3237 *   DSECT for automatic variables in "rd_crc32_update"
                                            3238 *      (FUNCTION #1485)
                                            3239 *
00000000                00000000 000000AC   3240 @AUTO#rd_crc32_update DSECT
00000000                                    3241          DS    XL168
000000A8                                    3242 rd_crc32_update#tbl_idx#0 DS 1F ; tbl_idx
                                            3243 *
00001E30                00000000 00007AB2   3244 @CODE    CSECT
                                            3245 *
                                            3246 *
                                            3247 *
                                            3248 * ....... start of rd_crc32_finalize
00001E30                                    3249 @LNAME1486 DS  0H
00001E30 00000011                           3250          DC    X'00000011'
00001E34 99846D839983F3F2                   3251          DC    C'rd_crc32_finalize'
00001E45 00                                 3252          DC    X'00'
                                            3253 rd_crc32_finalize DCCPRLG CINDEX=1486,BASER=0,FRAME=168,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1486
                                            3254          macro
                                            3255          dccextrn &m
                                            3256          gblc    &$dccext(1000)
                                            3257          gbla    &$dccexti
                                            3258          lcla    &i
                                            3259 &$dccext(&$dccexti+1) setc    '&m'
                                            3260 &i       seta    1
                                            3261 .loop    aif    (&i gt &$dccexti).around
                                            3262          aif    ('&$dccext(&i)' eq '&m').getout
                                            3263 &i       seta    &i+1
                                            3264          ago     .loop
                                            3265 .around  anop
                                            3266 &$dccexti seta &$dccexti+1
                                            3267          extrn  &m
                                                                                                                           Page   69 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3268 .getout  anop
                                            3269          mend
00001E48                                    3270+$eye0089    ds    0d                                                    02-DCCCA
00001E48 C4C3C3                             3271+         dc cl3'DCC'                                                    02-DCCCA
00001E4B 01                                 3272+         dc xl1'01' format one                                          02-DCCCA
00001E4C 00000000                           3273+         dc a(0)                                                        02-DCCCA
00001E50 0000000000000000                   3274+         dc ad(0)                                                       02-DCCCA
00001E58 00000000000000A8                   3275+         dc ad(168)                                                     02-DCCCA
00001E60 0000000000000000                   3276+         dc ad(0)                                                       02-DCCCA
00001E68 0000000000001000                   3277+         dc ad(4096)                                                    02-DCCCA
00001E70 20                                 3278+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E71 03                                 3279+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E72 03                                 3280+         dc al1(3)                                                      02-DCCCA
00001E73 08                                 3281+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E74 00                                 3282+         dc bl.8'00000000'                                              02-DCCCA
00001E75 000000                             3283+         dc al3(0)                                                      02-DCCCA
00001E78 0000000000001E30                   3284+         dc ad(@LNAME1486)                                              02-DCCCA
00001E80                                    3285+         ds 0d                                                          02-DCCCA
00001E80 0000000000001E48                   3286+         dc ad($eye0089)                                                02-DCCCA
00001E88 0000000000000000                   3287+         dc ad(0)                                                       02-DCCCA
00001E90                                    3288+         ds    0d                                                       01-DCCPR
00001E90                                    3289+rd_crc32_finalize ds 0d                                                 01-DCCPR
00001E90                                    3290+@REGION_1486_1 ds 0h                                                    01-DCCPR
00001E90 EBEC D008 0024          00000008   3291+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3292 * ******* End of Prologue
                                            3293 * *
                                            3294 * ***
                                            3295 * ***
                                            3296 * ***
                                            3297 * ***       return crc ^ 0xffffffff;
00001E96 58F0 1004               00000004   3298          L     15,4(0,1)   ; crc
00001E9A C0F7 FFFF FFFF                     3299          XILF  15,X'FFFFFFFF'
00001EA0 B916 00FF                          3300          LLGFR 15,15
                                            3301 * ***
                                            3302 * ***   }
                                            3303 * * **** Start of Epilogue
                                            3304          DCCEPIL
00001EA4                                    3305+         ds 0h                                                          01-DCCEP
                                            3306+* Epilog
                                            3307+* Epilog
00001EA4 E3E0 D008 0004          00000008   3308+         lg    14,8(,13) restore the reg                                01-DCCEP
00001EAA EB1C D020 0004          00000020   3309+         lmg   1,12,32(13)                                              01-DCCEP
00001EB0 07FE                               3310+         br   14                                                        01-DCCEP
                                            3311+* End of Epilog
                                            3312 * * **** End of Epilogue
                                            3313 *
                                            3314 *   DSECT for automatic variables in "rd_crc32_finalize"
                                            3315 *      (FUNCTION #1486)
                                            3316 *
00000000                00000000 000000A8   3317 @AUTO#rd_crc32_finalize DSECT
00000000                                    3318          DS    XL168
                                            3319 *
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001EB2                00000000 00007AB2   3320 @CODE    CSECT
                                            3321 *
                                            3322 *
                                            3323 *
                                            3324 * ....... start of rd_kafka_buf_ApiVersion_set
00001EB2                                    3325 @LNAME1516 DS  0H
00001EB2 0000001B                           3326          DC    X'0000001B'
00001EB6 99846D9281869281                   3327          DC    C'rd_kafka_buf_ApiVersion_set'
00001ED1 00                                 3328          DC    X'00'
                                            3329 rd_kafka_buf_$Api$Version_set DCCPRLG CINDEX=1516,BASER=0,FRAME=168,SAV*
                                                                EAREA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1516
                                            3330          macro
                                            3331          dccextrn &m
                                            3332          gblc    &$dccext(1000)
                                            3333          gbla    &$dccexti
                                            3334          lcla    &i
                                            3335 &$dccext(&$dccexti+1) setc    '&m'
                                            3336 &i       seta    1
                                            3337 .loop    aif    (&i gt &$dccexti).around
                                            3338          aif    ('&$dccext(&i)' eq '&m').getout
                                            3339 &i       seta    &i+1
                                            3340          ago     .loop
                                            3341 .around  anop
                                            3342 &$dccexti seta &$dccexti+1
                                            3343          extrn  &m
                                            3344 .getout  anop
                                            3345          mend
00001ED8                                    3346+$eye0092    ds    0d                                                    02-DCCCA
00001ED8 C4C3C3                             3347+         dc cl3'DCC'                                                    02-DCCCA
00001EDB 01                                 3348+         dc xl1'01' format one                                          02-DCCCA
00001EDC 00000000                           3349+         dc a(0)                                                        02-DCCCA
00001EE0 0000000000000000                   3350+         dc ad(0)                                                       02-DCCCA
00001EE8 00000000000000A8                   3351+         dc ad(168)                                                     02-DCCCA
00001EF0 0000000000000000                   3352+         dc ad(0)                                                       02-DCCCA
00001EF8 0000000000001000                   3353+         dc ad(4096)                                                    02-DCCCA
00001F00 20                                 3354+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001F01 03                                 3355+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001F02 03                                 3356+         dc al1(3)                                                      02-DCCCA
00001F03 08                                 3357+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001F04 00                                 3358+         dc bl.8'00000000'                                              02-DCCCA
00001F05 000000                             3359+         dc al3(0)                                                      02-DCCCA
00001F08 0000000000001EB2                   3360+         dc ad(@LNAME1516)                                              02-DCCCA
00001F10                                    3361+         ds 0d                                                          02-DCCCA
00001F10 0000000000001ED8                   3362+         dc ad($eye0092)                                                02-DCCCA
00001F18 0000000000000000                   3363+         dc ad(0)                                                       02-DCCCA
00001F20                                    3364+         ds    0d                                                       01-DCCPR
00001F20                                    3365+rd_kafka_buf_$Api$Version_set ds 0d                                     01-DCCPR
00001F20                                    3366+@REGION_1516_1 ds 0h                                                    01-DCCPR
00001F20 EBEC D008 0024          00000008   3367+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3368 * ******* End of Prologue
                                            3369 * *
                                            3370 * ***       rkbuf->rkbuf_reqhdr.ApiVersion = version;
                                                                                                                           Page   71 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001F26 E3F0 1000 0004          00000000   3371          LG    15,0(0,1)   ; rkbuf
00001F2C D201 F0BA 100E 000000BA 0000000E   3372          MVC   186(2,15),14(1)
                                            3373 * ***       rkbuf->rkbuf_features = features;
00001F32 5810 1014               00000014   3374          L     1,20(0,1)   ; features
00001F36 5010 F148               00000148   3375          ST    1,328(0,15) ; offset of rkbuf_features in rd_kafka_buf_s
                                            3376 * ***   }
00001F3A                                    3377 @ret_lab_1516 DS 0H
                                            3378 * * **** Start of Epilogue
                                            3379          DCCEPIL
00001F3A                                    3380+         ds 0h                                                          01-DCCEP
                                            3381+* Epilog
                                            3382+* Epilog
00001F3A E3E0 D008 0004          00000008   3383+         lg    14,8(,13) restore the reg                                01-DCCEP
00001F40 EB1C D020 0004          00000020   3384+         lmg   1,12,32(13)                                              01-DCCEP
00001F46 07FE                               3385+         br   14                                                        01-DCCEP
                                            3386+* End of Epilog
                                            3387 * * **** End of Epilogue
                                            3388 *
                                            3389 *   DSECT for automatic variables in "rd_kafka_buf_ApiVersion_set"
                                            3390 *      (FUNCTION #1516)
                                            3391 *
00000000                00000000 000000A8   3392 @AUTO#rd_kafka_buf_$Api$Version_set DSECT
00000000                                    3393          DS    XL168
                                            3394 *
00001F48                00000000 00007AB2   3395 @CODE    CSECT
                                            3396 *
                                            3397 *
                                            3398 *
                                            3399 * ....... start of rd_kafka_buf_write
00001F48                                    3400 @LNAME1517 DS  0H
00001F48 00000012                           3401          DC    X'00000012'
00001F4C 99846D9281869281                   3402          DC    C'rd_kafka_buf_write'
00001F5E 00                                 3403          DC    X'00'
                                            3404 rd_kafka_buf_write DCCPRLG CINDEX=1517,BASER=12,FRAME=200,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1517
                                            3405          macro
                                            3406          dccextrn &m
                                            3407          gblc    &$dccext(1000)
                                            3408          gbla    &$dccexti
                                            3409          lcla    &i
                                            3410 &$dccext(&$dccexti+1) setc    '&m'
                                            3411 &i       seta    1
                                            3412 .loop    aif    (&i gt &$dccexti).around
                                            3413          aif    ('&$dccext(&i)' eq '&m').getout
                                            3414 &i       seta    &i+1
                                            3415          ago     .loop
                                            3416 .around  anop
                                            3417 &$dccexti seta &$dccexti+1
                                            3418          extrn  &m
                                            3419 .getout  anop
                                            3420          mend
00001F60                                    3421+$eye0095    ds    0d                                                    02-DCCCA
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001F60 C4C3C3                             3422+         dc cl3'DCC'                                                    02-DCCCA
00001F63 01                                 3423+         dc xl1'01' format one                                          02-DCCCA
00001F64 00000000                           3424+         dc a(0)                                                        02-DCCCA
00001F68 0000000000001FD2                   3425+         dc ad(@PER_1517)                                               02-DCCCA
00001F70 00000000000000C8                   3426+         dc ad(200)                                                     02-DCCCA
00001F78 0000000000000000                   3427+         dc ad(0)                                                       02-DCCCA
00001F80 0000000000001000                   3428+         dc ad(4096)                                                    02-DCCCA
00001F88 20                                 3429+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001F89 03                                 3430+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001F8A 03                                 3431+         dc al1(3)                                                      02-DCCCA
00001F8B 08                                 3432+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001F8C 00                                 3433+         dc bl.8'00000000'                                              02-DCCCA
00001F8D 000000                             3434+         dc al3(0)                                                      02-DCCCA
00001F90 0000000000001F48                   3435+         dc ad(@LNAME1517)                                              02-DCCCA
00001F98                                    3436+         ds 0d                                                          02-DCCCA
00001F98 0000000000001F60                   3437+         dc ad($eye0095)                                                02-DCCCA
00001FA0 0000000000000000                   3438+         dc ad(0)                                                       02-DCCCA
00001FA8                                    3439+         ds    0d                                                       01-DCCPR
00001FA8                                    3440+rd_kafka_buf_write ds 0d                                                01-DCCPR
00001FA8                                    3441+@REGION_1517_1 ds 0h                                                    01-DCCPR
00001FA8 EBEC D008 0024          00000008   3442+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001FAE E3E0 D088 0004          00000088   3443+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001FB4 E3C0 D090 0004          00000090   3444+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001FBA B904 002E                          3445+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001FBE E3B0 C018 0004          00000018   3446+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001FC4 A7EB 00C8               000000C8   3447+         aghi  14,200              increase by frame size               01-DCCPR
00001FC8 E3E0 C020 0021          00000020   3448+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001FCE 4720 B020               00000020   3449+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001FD2                                    3450+@PER_1517 ds   0h                                                       01-DCCPR
00001FD2 EBDE 2080 0024          00000080   3451+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001FD8 E3C0 2090 0024          00000090   3452+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001FDE B904 00D2                          3453+         lgr   13,2                set real frame pointer               01-DCCPR
00001FE2 B904 00CF                          3454+         lgr   12,15               set base reg                         01-DCCPR
                        00001FA8            3455+         using @REGION_1517_1,12                                        01-DCCPR
00001FE6 B904 0041                          3456          LGR   4,1         ; ptr to parm area
                                            3457 * ******* End of Prologue
                                            3458 * *
00001FEA E320 4000 0004          00000000   3459          LG    2,0(0,4)    ; rkbuf
                                            3460 * ***       size_t r;
                                            3461 * ***
                                            3462 * ***       r = rd_buf_write(&rkbuf->rkbuf_buf, data, len);
00001FF0 41F0 2028               00000028   3463          LA    15,40(0,2)
00001FF4 E3F0 D0B0 0024          000000B0   3464          STG   15,176(0,13)
00001FFA E3F0 4008 0004          00000008   3465          LG    15,8(0,4)   ; data
00002000 E3F0 D0B8 0024          000000B8   3466          STG   15,184(0,13)
00002006 E3F0 4010 0004          00000010   3467          LG    15,16(0,4)  ; len
0000200C E3F0 D0C0 0024          000000C0   3468          STG   15,192(0,13)
00002012 4110 D0B0               000000B0   3469          LA    1,176(0,13)
00002016 E3F0 C110 0004          000020B8   3470          LG    15,@lit_1517_64 ; rd_buf_write
0000201C                                    3471 @@gen_label79 DS    0H
0000201C 05EF                               3472          BALR  14,15
0000201E                                    3473 @@gen_label80 DS    0H
                                                                                                                           Page   73 
  Active Usings: @REGION_1517_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000201E B904 003F                          3474          LGR   3,15
                                            3475 * ***
                                            3476 * ***       if (rkbuf->rkbuf_flags & 0x4)
00002022 9104 2023      00000023 00000004   3477          TM    35(2),4
00002026 4780 C0B6               0000205E   3478          BZ    @L492
                                            3479 * ***           rkbuf->rkbuf_crc = rd_crc32_update(rkbuf->rkbuf_crc, d\
                                            3480 * ata, len);
0000202A E3F0 20B0 0016          000000B0   3481          LLGF  15,176(0,2)
00002030 E3F0 D0B0 0024          000000B0   3482          STG   15,176(0,13)
00002036 E3F0 4008 0004          00000008   3483          LG    15,8(0,4)   ; data
0000203C E3F0 D0B8 0024          000000B8   3484          STG   15,184(0,13)
00002042 E3F0 4010 0004          00000010   3485          LG    15,16(0,4)  ; len
00002048 E3F0 D0C0 0024          000000C0   3486          STG   15,192(0,13)
0000204E 4110 D0B0               000000B0   3487          LA    1,176(0,13)
00002052 E3F0 C118 0004          000020C0   3488          LG    15,@lit_1517_65 ; rd_crc32_update
00002058                                    3489 @@gen_label82 DS    0H
00002058 05EF                               3490          BALR  14,15
0000205A                                    3491 @@gen_label83 DS    0H
0000205A 50F0 20B0               000000B0   3492          ST    15,176(0,2)
0000205E                                    3493 @L492    DS    0H
                                            3494 * ***
                                            3495 * ***       return r;
0000205E B904 00F3                          3496          LGR   15,3
                                            3497 * ***   }
                                            3498 * * **** Start of Epilogue
                                            3499          DCCEPIL
00002062                                    3500+         ds 0h                                                          01-DCCEP
                                            3501+* Epilog
00002062 D707 D088 D088 00000088 00000088   3502+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002068 E3D0 D080 0004          00000080   3503+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000206E E3C0 D090 0004          00000090   3504+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002074 E3B0 C018 0004          00000018   3505+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000207A E3C0 B010 0021          00000010   3506+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002080 E3E0 D008 0004          00000008   3507+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002086 EB1C D020 0004          00000020   3508+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000208C 078E                               3509+         bcr 8,14                if same dsab, just return              01-DCCEP
0000208E E3F0 D010 0024          00000010   3510+         stg 15,16(0,13)         save return code                       01-DCCEP
00002094 E300 D018 0024          00000018   3511+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000209A E3F0 D090 0004          00000090   3512+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000020A0 E3F0 F018 0004          00000018   3513+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000020A6 47F0 F040               00000040   3514+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3515+* End of Epilog
                                            3516 * * **** End of Epilogue
000020B0                                    3517          DS    0D
000020B0 000000C8                           3518 @FRAMESIZE_1517 DC F'200'
000020B4 00000000
000020B8 0000000000000000                   3519 @lit_1517_64 DC AD(rd_buf_write)
000020C0 0000000000001D38                   3520 @lit_1517_65 DC AD(rd_crc32_update)
                                            3521          DROP  12
                                            3522 *
                                            3523 *   DSECT for automatic variables in "rd_kafka_buf_write"
                                            3524 *      (FUNCTION #1517)
                                                                                                                           Page   74 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3525 *
00000000                00000000 000000B0   3526 @AUTO#rd_kafka_buf_write DSECT
00000000                                    3527          DS    XL168
000000A8                                    3528 rd_kafka_buf_write#r#0 DS 8XL1 ; r
                                            3529 *
000020C8                00000000 00007AB2   3530 @CODE    CSECT
                                            3531 *
                                            3532 *
                                            3533 *
                                            3534 * ....... start of rd_kafka_buf_update
000020C8                                    3535 @LNAME1518 DS  0H
000020C8 00000013                           3536          DC    X'00000013'
000020CC 99846D9281869281                   3537          DC    C'rd_kafka_buf_update'
000020DF 00                                 3538          DC    X'00'
                                            3539 rd_kafka_buf_update DCCPRLG CINDEX=1518,BASER=12,FRAME=208,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1518
                                            3540          macro
                                            3541          dccextrn &m
                                            3542          gblc    &$dccext(1000)
                                            3543          gbla    &$dccexti
                                            3544          lcla    &i
                                            3545 &$dccext(&$dccexti+1) setc    '&m'
                                            3546 &i       seta    1
                                            3547 .loop    aif    (&i gt &$dccexti).around
                                            3548          aif    ('&$dccext(&i)' eq '&m').getout
                                            3549 &i       seta    &i+1
                                            3550          ago     .loop
                                            3551 .around  anop
                                            3552 &$dccexti seta &$dccexti+1
                                            3553          extrn  &m
                                            3554 .getout  anop
                                            3555          mend
000020E0                                    3556+$eye0098    ds    0d                                                    02-DCCCA
000020E0 C4C3C3                             3557+         dc cl3'DCC'                                                    02-DCCCA
000020E3 01                                 3558+         dc xl1'01' format one                                          02-DCCCA
000020E4 00000000                           3559+         dc a(0)                                                        02-DCCCA
000020E8 0000000000002152                   3560+         dc ad(@PER_1518)                                               02-DCCCA
000020F0 00000000000000D0                   3561+         dc ad(208)                                                     02-DCCCA
000020F8 0000000000000000                   3562+         dc ad(0)                                                       02-DCCCA
00002100 0000000000001000                   3563+         dc ad(4096)                                                    02-DCCCA
00002108 20                                 3564+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002109 03                                 3565+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000210A 03                                 3566+         dc al1(3)                                                      02-DCCCA
0000210B 08                                 3567+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000210C 00                                 3568+         dc bl.8'00000000'                                              02-DCCCA
0000210D 000000                             3569+         dc al3(0)                                                      02-DCCCA
00002110 00000000000020C8                   3570+         dc ad(@LNAME1518)                                              02-DCCCA
00002118                                    3571+         ds 0d                                                          02-DCCCA
00002118 00000000000020E0                   3572+         dc ad($eye0098)                                                02-DCCCA
00002120 0000000000000000                   3573+         dc ad(0)                                                       02-DCCCA
00002128                                    3574+         ds    0d                                                       01-DCCPR
00002128                                    3575+rd_kafka_buf_update ds 0d                                               01-DCCPR
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002128                                    3576+@REGION_1518_1 ds 0h                                                    01-DCCPR
00002128 EBEC D008 0024          00000008   3577+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000212E E3E0 D088 0004          00000088   3578+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002134 E3C0 D090 0004          00000090   3579+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000213A B904 002E                          3580+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000213E E3B0 C018 0004          00000018   3581+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002144 A7EB 00D0               000000D0   3582+         aghi  14,208              increase by frame size               01-DCCPR
00002148 E3E0 C020 0021          00000020   3583+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000214E 4720 B020               00000020   3584+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002152                                    3585+@PER_1518 ds   0h                                                       01-DCCPR
00002152 EBDE 2080 0024          00000080   3586+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002158 E3C0 2090 0024          00000090   3587+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000215E B904 00D2                          3588+         lgr   13,2                set real frame pointer               01-DCCPR
00002162 B904 00CF                          3589+         lgr   12,15               set base reg                         01-DCCPR
                        00002128            3590+         using @REGION_1518_1,12                                        01-DCCPR
00002166 B904 0021                          3591          LGR   2,1         ; ptr to parm area
                                            3592 * ******* End of Prologue
                                            3593 * *
                                            3594 * ***       do { if (((!(!(rkbuf->rkbuf_flags & 0x4))))) rd_kafka_cras\
                                            3595 * h("C:\\asgkafka\\librdkafka\\src\\rdkafka_buf.h",944, __FUNCTION__, \
                                            3596 * (((void *)0)), "assert: " "!(rkbuf->rkbuf_flags & RD_KAFKA_OP_F_CRC)\
                                            3597 * "); } while (0);
0000216A                                    3598 @L493    DS    0H
0000216A E330 2000 0004          00000000   3599          LG    3,0(0,2)    ; rkbuf
00002170 9104 3023      00000023 00000004   3600          TM    35(3),4
00002174 4780 C092               000021BA   3601          BZ    @L496
00002178 E3F0 C130 0004          00002258   3602          LG    15,@lit_1518_67
0000217E 4110 F100               00000100   3603          LA    1,256(0,15)
00002182 E310 D0A8 0024          000000A8   3604          STG   1,168(0,13)
00002188 E548 D0B0 03B0          000000B0   3605          MVGHI 176(13),944
0000218E E310 C128 0004          00002250   3606          LG    1,@lit_1518_68
00002194 4110 1144               00000144   3607          LA    1,324(0,1)
00002198 E310 D0B8 0024          000000B8   3608          STG   1,184(0,13)
0000219E D707 D0C0 D0C0 000000C0 000000C0   3609          XC    192(8,13),192(13)
000021A4 41F0 F12A               0000012A   3610          LA    15,298(0,15)
000021A8 E3F0 D0C8 0024          000000C8   3611          STG   15,200(0,13)
000021AE 4110 D0A8               000000A8   3612          LA    1,168(0,13)
000021B2 E3F0 C120 0004          00002248   3613          LG    15,@lit_1518_69 ; rd_kafka_crash
000021B8                                    3614 @@gen_label85 DS    0H
000021B8 05EF                               3615          BALR  14,15
000021BA                                    3616 @@gen_label86 DS    0H
000021BA                                    3617 @L496    DS    0H
                                            3618 * ***       rd_buf_write_update(&rkbuf->rkbuf_buf, of, data, len);
000021BA 41F0 3028               00000028   3619          LA    15,40(0,3)
000021BE E3F0 D0A8 0024          000000A8   3620          STG   15,168(0,13)
000021C4 E3F0 2008 0004          00000008   3621          LG    15,8(0,2)   ; of
000021CA E3F0 D0B0 0024          000000B0   3622          STG   15,176(0,13)
000021D0 E3F0 2010 0004          00000010   3623          LG    15,16(0,2)  ; data
000021D6 E3F0 D0B8 0024          000000B8   3624          STG   15,184(0,13)
000021DC E3F0 2018 0004          00000018   3625          LG    15,24(0,2)  ; len
000021E2 E3F0 D0C0 0024          000000C0   3626          STG   15,192(0,13)
000021E8 4110 D0A8               000000A8   3627          LA    1,168(0,13)
                                                                                                                           Page   76 
  Active Usings: @REGION_1518_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000021EC E3F0 C138 0004          00002260   3628          LG    15,@lit_1518_70 ; rd_buf_write_update
000021F2                                    3629 @@gen_label87 DS    0H
000021F2 05EF                               3630          BALR  14,15
000021F4                                    3631 @@gen_label88 DS    0H
                                            3632 * ***   }
000021F4                                    3633 @ret_lab_1518 DS 0H
                                            3634 * * **** Start of Epilogue
                                            3635          DCCEPIL
000021F4                                    3636+         ds 0h                                                          01-DCCEP
                                            3637+* Epilog
000021F4 D707 D088 D088 00000088 00000088   3638+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000021FA E3D0 D080 0004          00000080   3639+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002200 E3C0 D090 0004          00000090   3640+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002206 E3B0 C018 0004          00000018   3641+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000220C E3C0 B010 0021          00000010   3642+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002212 E3E0 D008 0004          00000008   3643+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002218 EB1C D020 0004          00000020   3644+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000221E 078E                               3645+         bcr 8,14                if same dsab, just return              01-DCCEP
00002220 E3F0 D010 0024          00000010   3646+         stg 15,16(0,13)         save return code                       01-DCCEP
00002226 E300 D018 0024          00000018   3647+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000222C E3F0 D090 0004          00000090   3648+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002232 E3F0 F018 0004          00000018   3649+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002238 47F0 F040               00000040   3650+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3651+* End of Epilog
                                            3652 * * **** End of Epilogue
00002240                                    3653          DS    0D
00002240 000000D0                           3654 @FRAMESIZE_1518 DC F'208'
00002244 00000000
00002248 0000000000000000                   3655 @lit_1518_69 DC AD(rd_kafka_crash)
00002250 0000000000007AB8                   3656 @lit_1518_68 DC AD(@DATA)
00002258 0000000000007DEC                   3657 @lit_1518_67 DC AD(@strings@)
00002260 0000000000000000                   3658 @lit_1518_70 DC AD(rd_buf_write_update)
                                            3659          DROP  12
                                            3660 *
                                            3661 *   DSECT for automatic variables in "rd_kafka_buf_update"
                                            3662 *      (FUNCTION #1518)
                                            3663 *
00000000                00000000 000000A8   3664 @AUTO#rd_kafka_buf_update DSECT
00000000                                    3665          DS    XL168
                                            3666 *
00002268                00000000 00007AB2   3667 @CODE    CSECT
                                            3668 *
                                            3669 *
                                            3670 *
                                            3671 * ....... start of rd_kafka_buf_write_i8
00002268                                    3672 @LNAME1519 DS  0H
00002268 00000015                           3673          DC    X'00000015'
0000226C 99846D9281869281                   3674          DC    C'rd_kafka_buf_write_i8'
00002281 00                                 3675          DC    X'00'
                                            3676 rd_kafka_buf_write_i8 DCCPRLG CINDEX=1519,BASER=12,FRAME=192,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1519
                                            3677          macro
                                                                                                                           Page   77 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3678          dccextrn &m
                                            3679          gblc    &$dccext(1000)
                                            3680          gbla    &$dccexti
                                            3681          lcla    &i
                                            3682 &$dccext(&$dccexti+1) setc    '&m'
                                            3683 &i       seta    1
                                            3684 .loop    aif    (&i gt &$dccexti).around
                                            3685          aif    ('&$dccext(&i)' eq '&m').getout
                                            3686 &i       seta    &i+1
                                            3687          ago     .loop
                                            3688 .around  anop
                                            3689 &$dccexti seta &$dccexti+1
                                            3690          extrn  &m
                                            3691 .getout  anop
                                            3692          mend
00002288                                    3693+$eye0101    ds    0d                                                    02-DCCCA
00002288 C4C3C3                             3694+         dc cl3'DCC'                                                    02-DCCCA
0000228B 01                                 3695+         dc xl1'01' format one                                          02-DCCCA
0000228C 00000000                           3696+         dc a(0)                                                        02-DCCCA
00002290 00000000000022FA                   3697+         dc ad(@PER_1519)                                               02-DCCCA
00002298 00000000000000C0                   3698+         dc ad(192)                                                     02-DCCCA
000022A0 0000000000000000                   3699+         dc ad(0)                                                       02-DCCCA
000022A8 0000000000001000                   3700+         dc ad(4096)                                                    02-DCCCA
000022B0 20                                 3701+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000022B1 03                                 3702+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000022B2 03                                 3703+         dc al1(3)                                                      02-DCCCA
000022B3 08                                 3704+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000022B4 00                                 3705+         dc bl.8'00000000'                                              02-DCCCA
000022B5 000000                             3706+         dc al3(0)                                                      02-DCCCA
000022B8 0000000000002268                   3707+         dc ad(@LNAME1519)                                              02-DCCCA
000022C0                                    3708+         ds 0d                                                          02-DCCCA
000022C0 0000000000002288                   3709+         dc ad($eye0101)                                                02-DCCCA
000022C8 0000000000000000                   3710+         dc ad(0)                                                       02-DCCCA
000022D0                                    3711+         ds    0d                                                       01-DCCPR
000022D0                                    3712+rd_kafka_buf_write_i8 ds 0d                                             01-DCCPR
000022D0                                    3713+@REGION_1519_1 ds 0h                                                    01-DCCPR
000022D0 EBEC D008 0024          00000008   3714+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000022D6 E3E0 D088 0004          00000088   3715+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000022DC E3C0 D090 0004          00000090   3716+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000022E2 B904 002E                          3717+         lgr   2,14                copy addr of our savearea            01-DCCPR
000022E6 E3B0 C018 0004          00000018   3718+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000022EC A7EB 00C0               000000C0   3719+         aghi  14,192              increase by frame size               01-DCCPR
000022F0 E3E0 C020 0021          00000020   3720+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000022F6 4720 B020               00000020   3721+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000022FA                                    3722+@PER_1519 ds   0h                                                       01-DCCPR
000022FA EBDE 2080 0024          00000080   3723+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002300 E3C0 2090 0024          00000090   3724+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002306 B904 00D2                          3725+         lgr   13,2                set real frame pointer               01-DCCPR
0000230A B904 00CF                          3726+         lgr   12,15               set base reg                         01-DCCPR
                        000022D0            3727+         using @REGION_1519_1,12                                        01-DCCPR
                                            3728 * ******* End of Prologue
                                            3729 * *
                                                                                                                           Page   78 
  Active Usings: @REGION_1519_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3730 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
0000230E E3F0 1000 0004          00000000   3731          LG    15,0(0,1)   ; rkbuf
00002314 E3F0 D0A8 0024          000000A8   3732          STG   15,168(0,13)
0000231A 41F0 100F               0000000F   3733          LA    15,15(0,1)
0000231E E3F0 D0B0 0024          000000B0   3734          STG   15,176(0,13)
00002324 E548 D0B8 0001          000000B8   3735          MVGHI 184(13),1
0000232A 4110 D0A8               000000A8   3736          LA    1,168(0,13)
0000232E E3F0 C0B8 0004          00002388   3737          LG    15,@lit_1519_72 ; rd_kafka_buf_write
00002334                                    3738 @@gen_label89 DS    0H
00002334 05EF                               3739          BALR  14,15
00002336                                    3740 @@gen_label90 DS    0H
                                            3741 * ***   }
                                            3742 * * **** Start of Epilogue
                                            3743          DCCEPIL
00002336                                    3744+         ds 0h                                                          01-DCCEP
                                            3745+* Epilog
00002336 D707 D088 D088 00000088 00000088   3746+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000233C E3D0 D080 0004          00000080   3747+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002342 E3C0 D090 0004          00000090   3748+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002348 E3B0 C018 0004          00000018   3749+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000234E E3C0 B010 0021          00000010   3750+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002354 E3E0 D008 0004          00000008   3751+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000235A EB1C D020 0004          00000020   3752+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002360 078E                               3753+         bcr 8,14                if same dsab, just return              01-DCCEP
00002362 E3F0 D010 0024          00000010   3754+         stg 15,16(0,13)         save return code                       01-DCCEP
00002368 E300 D018 0024          00000018   3755+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000236E E3F0 D090 0004          00000090   3756+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002374 E3F0 F018 0004          00000018   3757+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000237A 47F0 F040               00000040   3758+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3759+* End of Epilog
                                            3760 * * **** End of Epilogue
00002380                                    3761          DS    0D
00002380 000000C0                           3762 @FRAMESIZE_1519 DC F'192'
00002384 00000000
00002388 0000000000001FA8                   3763 @lit_1519_72 DC AD(rd_kafka_buf_write)
                                            3764          DROP  12
                                            3765 *
                                            3766 *   DSECT for automatic variables in "rd_kafka_buf_write_i8"
                                            3767 *      (FUNCTION #1519)
                                            3768 *
00000000                00000000 000000A8   3769 @AUTO#rd_kafka_buf_write_i8 DSECT
00000000                                    3770          DS    XL168
                                            3771 *
00002390                00000000 00007AB2   3772 @CODE    CSECT
                                            3773 *
                                            3774 *
                                            3775 *
                                            3776 * ....... start of rd_kafka_buf_write_i16
00002390                                    3777 @LNAME1521 DS  0H
00002390 00000016                           3778          DC    X'00000016'
00002394 99846D9281869281                   3779          DC    C'rd_kafka_buf_write_i16'
000023AA 00                                 3780          DC    X'00'
                                                                                                                           Page   79 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3781 rd_kafka_buf_write_i16 DCCPRLG CINDEX=1521,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1521
                                            3782          macro
                                            3783          dccextrn &m
                                            3784          gblc    &$dccext(1000)
                                            3785          gbla    &$dccexti
                                            3786          lcla    &i
                                            3787 &$dccext(&$dccexti+1) setc    '&m'
                                            3788 &i       seta    1
                                            3789 .loop    aif    (&i gt &$dccexti).around
                                            3790          aif    ('&$dccext(&i)' eq '&m').getout
                                            3791 &i       seta    &i+1
                                            3792          ago     .loop
                                            3793 .around  anop
                                            3794 &$dccexti seta &$dccexti+1
                                            3795          extrn  &m
                                            3796 .getout  anop
                                            3797          mend
000023B0                                    3798+$eye0104    ds    0d                                                    02-DCCCA
000023B0 C4C3C3                             3799+         dc cl3'DCC'                                                    02-DCCCA
000023B3 01                                 3800+         dc xl1'01' format one                                          02-DCCCA
000023B4 00000000                           3801+         dc a(0)                                                        02-DCCCA
000023B8 0000000000002422                   3802+         dc ad(@PER_1521)                                               02-DCCCA
000023C0 00000000000000C0                   3803+         dc ad(192)                                                     02-DCCCA
000023C8 0000000000000000                   3804+         dc ad(0)                                                       02-DCCCA
000023D0 0000000000001000                   3805+         dc ad(4096)                                                    02-DCCCA
000023D8 20                                 3806+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000023D9 03                                 3807+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000023DA 03                                 3808+         dc al1(3)                                                      02-DCCCA
000023DB 08                                 3809+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000023DC 00                                 3810+         dc bl.8'00000000'                                              02-DCCCA
000023DD 000000                             3811+         dc al3(0)                                                      02-DCCCA
000023E0 0000000000002390                   3812+         dc ad(@LNAME1521)                                              02-DCCCA
000023E8                                    3813+         ds 0d                                                          02-DCCCA
000023E8 00000000000023B0                   3814+         dc ad($eye0104)                                                02-DCCCA
000023F0 0000000000000000                   3815+         dc ad(0)                                                       02-DCCCA
000023F8                                    3816+         ds    0d                                                       01-DCCPR
000023F8                                    3817+rd_kafka_buf_write_i16 ds 0d                                            01-DCCPR
000023F8                                    3818+@REGION_1521_1 ds 0h                                                    01-DCCPR
000023F8 EBEC D008 0024          00000008   3819+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000023FE E3E0 D088 0004          00000088   3820+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002404 E3C0 D090 0004          00000090   3821+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000240A B904 002E                          3822+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000240E E3B0 C018 0004          00000018   3823+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002414 A7EB 00C0               000000C0   3824+         aghi  14,192              increase by frame size               01-DCCPR
00002418 E3E0 C020 0021          00000020   3825+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000241E 4720 B020               00000020   3826+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002422                                    3827+@PER_1521 ds   0h                                                       01-DCCPR
00002422 EBDE 2080 0024          00000080   3828+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002428 E3C0 2090 0024          00000090   3829+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000242E B904 00D2                          3830+         lgr   13,2                set real frame pointer               01-DCCPR
00002432 B904 00CF                          3831+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   80 
  Active Usings: @REGION_1521_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        000023F8            3832+         using @REGION_1521_1,12                                        01-DCCPR
                                            3833 * ******* End of Prologue
                                            3834 * *
                                            3835 * ***       v = (v);
00002436 48F0 100E               0000000E   3836          LH    15,14(0,1)  ; v
0000243A 40F0 100E               0000000E   3837          STH   15,14(0,1)  ; v
                                            3838 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
0000243E E3F0 1000 0004          00000000   3839          LG    15,0(0,1)   ; rkbuf
00002444 E3F0 D0A8 0024          000000A8   3840          STG   15,168(0,13)
0000244A 41F0 100E               0000000E   3841          LA    15,14(0,1)
0000244E E3F0 D0B0 0024          000000B0   3842          STG   15,176(0,13)
00002454 E548 D0B8 0002          000000B8   3843          MVGHI 184(13),2
0000245A 4110 D0A8               000000A8   3844          LA    1,168(0,13)
0000245E E3F0 C0C0 0004          000024B8   3845          LG    15,@lit_1521_74 ; rd_kafka_buf_write
00002464                                    3846 @@gen_label91 DS    0H
00002464 05EF                               3847          BALR  14,15
00002466                                    3848 @@gen_label92 DS    0H
                                            3849 * ***   }
                                            3850 * * **** Start of Epilogue
                                            3851          DCCEPIL
00002466                                    3852+         ds 0h                                                          01-DCCEP
                                            3853+* Epilog
00002466 D707 D088 D088 00000088 00000088   3854+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000246C E3D0 D080 0004          00000080   3855+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002472 E3C0 D090 0004          00000090   3856+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002478 E3B0 C018 0004          00000018   3857+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000247E E3C0 B010 0021          00000010   3858+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002484 E3E0 D008 0004          00000008   3859+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000248A EB1C D020 0004          00000020   3860+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002490 078E                               3861+         bcr 8,14                if same dsab, just return              01-DCCEP
00002492 E3F0 D010 0024          00000010   3862+         stg 15,16(0,13)         save return code                       01-DCCEP
00002498 E300 D018 0024          00000018   3863+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000249E E3F0 D090 0004          00000090   3864+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000024A4 E3F0 F018 0004          00000018   3865+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000024AA 47F0 F040               00000040   3866+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3867+* End of Epilog
                                            3868 * * **** End of Epilogue
000024B0                                    3869          DS    0D
000024B0 000000C0                           3870 @FRAMESIZE_1521 DC F'192'
000024B4 00000000
000024B8 0000000000001FA8                   3871 @lit_1521_74 DC AD(rd_kafka_buf_write)
                                            3872          DROP  12
                                            3873 *
                                            3874 *   DSECT for automatic variables in "rd_kafka_buf_write_i16"
                                            3875 *      (FUNCTION #1521)
                                            3876 *
00000000                00000000 000000A8   3877 @AUTO#rd_kafka_buf_write_i16 DSECT
00000000                                    3878          DS    XL168
                                            3879 *
000024C0                00000000 00007AB2   3880 @CODE    CSECT
                                            3881 *
                                            3882 *
                                                                                                                           Page   81 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3883 *
                                            3884 * ....... start of rd_kafka_buf_update_i16
000024C0                                    3885 @LNAME1522 DS  0H
000024C0 00000017                           3886          DC    X'00000017'
000024C4 99846D9281869281                   3887          DC    C'rd_kafka_buf_update_i16'
000024DB 00                                 3888          DC    X'00'
                                            3889 rd_kafka_buf_update_i16 DCCPRLG CINDEX=1522,BASER=12,FRAME=200,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1522
                                            3890          macro
                                            3891          dccextrn &m
                                            3892          gblc    &$dccext(1000)
                                            3893          gbla    &$dccexti
                                            3894          lcla    &i
                                            3895 &$dccext(&$dccexti+1) setc    '&m'
                                            3896 &i       seta    1
                                            3897 .loop    aif    (&i gt &$dccexti).around
                                            3898          aif    ('&$dccext(&i)' eq '&m').getout
                                            3899 &i       seta    &i+1
                                            3900          ago     .loop
                                            3901 .around  anop
                                            3902 &$dccexti seta &$dccexti+1
                                            3903          extrn  &m
                                            3904 .getout  anop
                                            3905          mend
000024E0                                    3906+$eye0107    ds    0d                                                    02-DCCCA
000024E0 C4C3C3                             3907+         dc cl3'DCC'                                                    02-DCCCA
000024E3 01                                 3908+         dc xl1'01' format one                                          02-DCCCA
000024E4 00000000                           3909+         dc a(0)                                                        02-DCCCA
000024E8 0000000000002552                   3910+         dc ad(@PER_1522)                                               02-DCCCA
000024F0 00000000000000C8                   3911+         dc ad(200)                                                     02-DCCCA
000024F8 0000000000000000                   3912+         dc ad(0)                                                       02-DCCCA
00002500 0000000000001000                   3913+         dc ad(4096)                                                    02-DCCCA
00002508 20                                 3914+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002509 03                                 3915+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000250A 03                                 3916+         dc al1(3)                                                      02-DCCCA
0000250B 08                                 3917+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000250C 00                                 3918+         dc bl.8'00000000'                                              02-DCCCA
0000250D 000000                             3919+         dc al3(0)                                                      02-DCCCA
00002510 00000000000024C0                   3920+         dc ad(@LNAME1522)                                              02-DCCCA
00002518                                    3921+         ds 0d                                                          02-DCCCA
00002518 00000000000024E0                   3922+         dc ad($eye0107)                                                02-DCCCA
00002520 0000000000000000                   3923+         dc ad(0)                                                       02-DCCCA
00002528                                    3924+         ds    0d                                                       01-DCCPR
00002528                                    3925+rd_kafka_buf_update_i16 ds 0d                                           01-DCCPR
00002528                                    3926+@REGION_1522_1 ds 0h                                                    01-DCCPR
00002528 EBEC D008 0024          00000008   3927+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000252E E3E0 D088 0004          00000088   3928+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002534 E3C0 D090 0004          00000090   3929+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000253A B904 002E                          3930+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000253E E3B0 C018 0004          00000018   3931+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002544 A7EB 00C8               000000C8   3932+         aghi  14,200              increase by frame size               01-DCCPR
00002548 E3E0 C020 0021          00000020   3933+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   82 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000254E 4720 B020               00000020   3934+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002552                                    3935+@PER_1522 ds   0h                                                       01-DCCPR
00002552 EBDE 2080 0024          00000080   3936+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002558 E3C0 2090 0024          00000090   3937+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000255E B904 00D2                          3938+         lgr   13,2                set real frame pointer               01-DCCPR
00002562 B904 00CF                          3939+         lgr   12,15               set base reg                         01-DCCPR
                        00002528            3940+         using @REGION_1522_1,12                                        01-DCCPR
                                            3941 * ******* End of Prologue
                                            3942 * *
                                            3943 * ***       v = (v);
00002566 48F0 1016               00000016   3944          LH    15,22(0,1)  ; v
0000256A 40F0 1016               00000016   3945          STH   15,22(0,1)  ; v
                                            3946 * ***       rd_kafka_buf_update(rkbuf, of, &v, sizeof(v));
0000256E E3F0 1000 0004          00000000   3947          LG    15,0(0,1)   ; rkbuf
00002574 E3F0 D0A8 0024          000000A8   3948          STG   15,168(0,13)
0000257A E3F0 1008 0004          00000008   3949          LG    15,8(0,1)   ; of
00002580 E3F0 D0B0 0024          000000B0   3950          STG   15,176(0,13)
00002586 41F0 1016               00000016   3951          LA    15,22(0,1)
0000258A E3F0 D0B8 0024          000000B8   3952          STG   15,184(0,13)
00002590 E548 D0C0 0002          000000C0   3953          MVGHI 192(13),2
00002596 4110 D0A8               000000A8   3954          LA    1,168(0,13)
0000259A E3F0 C0D0 0004          000025F8   3955          LG    15,@lit_1522_76 ; rd_kafka_buf_update
000025A0                                    3956 @@gen_label93 DS    0H
000025A0 05EF                               3957          BALR  14,15
000025A2                                    3958 @@gen_label94 DS    0H
                                            3959 * ***   }
000025A2                                    3960 @ret_lab_1522 DS 0H
                                            3961 * * **** Start of Epilogue
                                            3962          DCCEPIL
000025A2                                    3963+         ds 0h                                                          01-DCCEP
                                            3964+* Epilog
000025A2 D707 D088 D088 00000088 00000088   3965+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000025A8 E3D0 D080 0004          00000080   3966+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000025AE E3C0 D090 0004          00000090   3967+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000025B4 E3B0 C018 0004          00000018   3968+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000025BA E3C0 B010 0021          00000010   3969+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000025C0 E3E0 D008 0004          00000008   3970+         lg  14,8(0,13)          load up return address                 01-DCCEP
000025C6 EB1C D020 0004          00000020   3971+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000025CC 078E                               3972+         bcr 8,14                if same dsab, just return              01-DCCEP
000025CE E3F0 D010 0024          00000010   3973+         stg 15,16(0,13)         save return code                       01-DCCEP
000025D4 E300 D018 0024          00000018   3974+         stg 0,24(0,13)          save more return code                  01-DCCEP
000025DA E3F0 D090 0004          00000090   3975+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000025E0 E3F0 F018 0004          00000018   3976+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000025E6 47F0 F040               00000040   3977+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3978+* End of Epilog
                                            3979 * * **** End of Epilogue
000025F0                                    3980          DS    0D
000025F0 000000C8                           3981 @FRAMESIZE_1522 DC F'200'
000025F4 00000000
000025F8 0000000000002128                   3982 @lit_1522_76 DC AD(rd_kafka_buf_update)
                                            3983          DROP  12
                                            3984 *
                                                                                                                           Page   83 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3985 *   DSECT for automatic variables in "rd_kafka_buf_update_i16"
                                            3986 *      (FUNCTION #1522)
                                            3987 *
00000000                00000000 000000A8   3988 @AUTO#rd_kafka_buf_update_i16 DSECT
00000000                                    3989          DS    XL168
                                            3990 *
00002600                00000000 00007AB2   3991 @CODE    CSECT
                                            3992 *
                                            3993 *
                                            3994 *
                                            3995 * ....... start of rd_kafka_buf_write_i32
00002600                                    3996 @LNAME1523 DS  0H
00002600 00000016                           3997          DC    X'00000016'
00002604 99846D9281869281                   3998          DC    C'rd_kafka_buf_write_i32'
0000261A 00                                 3999          DC    X'00'
                                            4000 rd_kafka_buf_write_i32 DCCPRLG CINDEX=1523,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1523
                                            4001          macro
                                            4002          dccextrn &m
                                            4003          gblc    &$dccext(1000)
                                            4004          gbla    &$dccexti
                                            4005          lcla    &i
                                            4006 &$dccext(&$dccexti+1) setc    '&m'
                                            4007 &i       seta    1
                                            4008 .loop    aif    (&i gt &$dccexti).around
                                            4009          aif    ('&$dccext(&i)' eq '&m').getout
                                            4010 &i       seta    &i+1
                                            4011          ago     .loop
                                            4012 .around  anop
                                            4013 &$dccexti seta &$dccexti+1
                                            4014          extrn  &m
                                            4015 .getout  anop
                                            4016          mend
00002620                                    4017+$eye0110    ds    0d                                                    02-DCCCA
00002620 C4C3C3                             4018+         dc cl3'DCC'                                                    02-DCCCA
00002623 01                                 4019+         dc xl1'01' format one                                          02-DCCCA
00002624 00000000                           4020+         dc a(0)                                                        02-DCCCA
00002628 0000000000002692                   4021+         dc ad(@PER_1523)                                               02-DCCCA
00002630 00000000000000C0                   4022+         dc ad(192)                                                     02-DCCCA
00002638 0000000000000000                   4023+         dc ad(0)                                                       02-DCCCA
00002640 0000000000001000                   4024+         dc ad(4096)                                                    02-DCCCA
00002648 20                                 4025+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002649 03                                 4026+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000264A 03                                 4027+         dc al1(3)                                                      02-DCCCA
0000264B 08                                 4028+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000264C 00                                 4029+         dc bl.8'00000000'                                              02-DCCCA
0000264D 000000                             4030+         dc al3(0)                                                      02-DCCCA
00002650 0000000000002600                   4031+         dc ad(@LNAME1523)                                              02-DCCCA
00002658                                    4032+         ds 0d                                                          02-DCCCA
00002658 0000000000002620                   4033+         dc ad($eye0110)                                                02-DCCCA
00002660 0000000000000000                   4034+         dc ad(0)                                                       02-DCCCA
00002668                                    4035+         ds    0d                                                       01-DCCPR
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002668                                    4036+rd_kafka_buf_write_i32 ds 0d                                            01-DCCPR
00002668                                    4037+@REGION_1523_1 ds 0h                                                    01-DCCPR
00002668 EBEC D008 0024          00000008   4038+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000266E E3E0 D088 0004          00000088   4039+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002674 E3C0 D090 0004          00000090   4040+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000267A B904 002E                          4041+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000267E E3B0 C018 0004          00000018   4042+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002684 A7EB 00C0               000000C0   4043+         aghi  14,192              increase by frame size               01-DCCPR
00002688 E3E0 C020 0021          00000020   4044+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000268E 4720 B020               00000020   4045+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002692                                    4046+@PER_1523 ds   0h                                                       01-DCCPR
00002692 EBDE 2080 0024          00000080   4047+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002698 E3C0 2090 0024          00000090   4048+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000269E B904 00D2                          4049+         lgr   13,2                set real frame pointer               01-DCCPR
000026A2 B904 00CF                          4050+         lgr   12,15               set base reg                         01-DCCPR
                        00002668            4051+         using @REGION_1523_1,12                                        01-DCCPR
                                            4052 * ******* End of Prologue
                                            4053 * *
                                            4054 * ***       v = (int32_t)(v);
000026A6 58F0 100C               0000000C   4055          L     15,12(0,1)  ; v
                                            4056 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
000026AA E3F0 1000 0004          00000000   4057          LG    15,0(0,1)   ; rkbuf
000026B0 E3F0 D0A8 0024          000000A8   4058          STG   15,168(0,13)
000026B6 41F0 100C               0000000C   4059          LA    15,12(0,1)
000026BA E3F0 D0B0 0024          000000B0   4060          STG   15,176(0,13)
000026C0 E548 D0B8 0004          000000B8   4061          MVGHI 184(13),4
000026C6 4110 D0A8               000000A8   4062          LA    1,168(0,13)
000026CA E3F0 C0C0 0004          00002728   4063          LG    15,@lit_1523_78 ; rd_kafka_buf_write
000026D0                                    4064 @@gen_label95 DS    0H
000026D0 05EF                               4065          BALR  14,15
000026D2                                    4066 @@gen_label96 DS    0H
                                            4067 * ***   }
                                            4068 * * **** Start of Epilogue
                                            4069          DCCEPIL
000026D2                                    4070+         ds 0h                                                          01-DCCEP
                                            4071+* Epilog
000026D2 D707 D088 D088 00000088 00000088   4072+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000026D8 E3D0 D080 0004          00000080   4073+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000026DE E3C0 D090 0004          00000090   4074+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000026E4 E3B0 C018 0004          00000018   4075+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000026EA E3C0 B010 0021          00000010   4076+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000026F0 E3E0 D008 0004          00000008   4077+         lg  14,8(0,13)          load up return address                 01-DCCEP
000026F6 EB1C D020 0004          00000020   4078+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000026FC 078E                               4079+         bcr 8,14                if same dsab, just return              01-DCCEP
000026FE E3F0 D010 0024          00000010   4080+         stg 15,16(0,13)         save return code                       01-DCCEP
00002704 E300 D018 0024          00000018   4081+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000270A E3F0 D090 0004          00000090   4082+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002710 E3F0 F018 0004          00000018   4083+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002716 47F0 F040               00000040   4084+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4085+* End of Epilog
                                            4086 * * **** End of Epilogue
00002720                                    4087          DS    0D
                                                                                                                           Page   85 
  Active Usings: @REGION_1523_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002720 000000C0                           4088 @FRAMESIZE_1523 DC F'192'
00002724 00000000
00002728 0000000000001FA8                   4089 @lit_1523_78 DC AD(rd_kafka_buf_write)
                                            4090          DROP  12
                                            4091 *
                                            4092 *   DSECT for automatic variables in "rd_kafka_buf_write_i32"
                                            4093 *      (FUNCTION #1523)
                                            4094 *
00000000                00000000 000000A8   4095 @AUTO#rd_kafka_buf_write_i32 DSECT
00000000                                    4096          DS    XL168
                                            4097 *
00002730                00000000 00007AB2   4098 @CODE    CSECT
                                            4099 *
                                            4100 *
                                            4101 *
                                            4102 * ....... start of rd_kafka_buf_update_i32
00002730                                    4103 @LNAME1524 DS  0H
00002730 00000017                           4104          DC    X'00000017'
00002734 99846D9281869281                   4105          DC    C'rd_kafka_buf_update_i32'
0000274B 00                                 4106          DC    X'00'
                                            4107 rd_kafka_buf_update_i32 DCCPRLG CINDEX=1524,BASER=12,FRAME=200,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1524
                                            4108          macro
                                            4109          dccextrn &m
                                            4110          gblc    &$dccext(1000)
                                            4111          gbla    &$dccexti
                                            4112          lcla    &i
                                            4113 &$dccext(&$dccexti+1) setc    '&m'
                                            4114 &i       seta    1
                                            4115 .loop    aif    (&i gt &$dccexti).around
                                            4116          aif    ('&$dccext(&i)' eq '&m').getout
                                            4117 &i       seta    &i+1
                                            4118          ago     .loop
                                            4119 .around  anop
                                            4120 &$dccexti seta &$dccexti+1
                                            4121          extrn  &m
                                            4122 .getout  anop
                                            4123          mend
00002750                                    4124+$eye0113    ds    0d                                                    02-DCCCA
00002750 C4C3C3                             4125+         dc cl3'DCC'                                                    02-DCCCA
00002753 01                                 4126+         dc xl1'01' format one                                          02-DCCCA
00002754 00000000                           4127+         dc a(0)                                                        02-DCCCA
00002758 00000000000027C2                   4128+         dc ad(@PER_1524)                                               02-DCCCA
00002760 00000000000000C8                   4129+         dc ad(200)                                                     02-DCCCA
00002768 0000000000000000                   4130+         dc ad(0)                                                       02-DCCCA
00002770 0000000000001000                   4131+         dc ad(4096)                                                    02-DCCCA
00002778 20                                 4132+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002779 03                                 4133+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000277A 03                                 4134+         dc al1(3)                                                      02-DCCCA
0000277B 08                                 4135+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000277C 00                                 4136+         dc bl.8'00000000'                                              02-DCCCA
0000277D 000000                             4137+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002780 0000000000002730                   4138+         dc ad(@LNAME1524)                                              02-DCCCA
00002788                                    4139+         ds 0d                                                          02-DCCCA
00002788 0000000000002750                   4140+         dc ad($eye0113)                                                02-DCCCA
00002790 0000000000000000                   4141+         dc ad(0)                                                       02-DCCCA
00002798                                    4142+         ds    0d                                                       01-DCCPR
00002798                                    4143+rd_kafka_buf_update_i32 ds 0d                                           01-DCCPR
00002798                                    4144+@REGION_1524_1 ds 0h                                                    01-DCCPR
00002798 EBEC D008 0024          00000008   4145+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000279E E3E0 D088 0004          00000088   4146+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000027A4 E3C0 D090 0004          00000090   4147+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000027AA B904 002E                          4148+         lgr   2,14                copy addr of our savearea            01-DCCPR
000027AE E3B0 C018 0004          00000018   4149+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000027B4 A7EB 00C8               000000C8   4150+         aghi  14,200              increase by frame size               01-DCCPR
000027B8 E3E0 C020 0021          00000020   4151+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000027BE 4720 B020               00000020   4152+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000027C2                                    4153+@PER_1524 ds   0h                                                       01-DCCPR
000027C2 EBDE 2080 0024          00000080   4154+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000027C8 E3C0 2090 0024          00000090   4155+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000027CE B904 00D2                          4156+         lgr   13,2                set real frame pointer               01-DCCPR
000027D2 B904 00CF                          4157+         lgr   12,15               set base reg                         01-DCCPR
                        00002798            4158+         using @REGION_1524_1,12                                        01-DCCPR
                                            4159 * ******* End of Prologue
                                            4160 * *
                                            4161 * ***       v = (v);
000027D6 58F0 1014               00000014   4162          L     15,20(0,1)  ; v
                                            4163 * ***       rd_kafka_buf_update(rkbuf, of, &v, sizeof(v));
000027DA E3F0 1000 0004          00000000   4164          LG    15,0(0,1)   ; rkbuf
000027E0 E3F0 D0A8 0024          000000A8   4165          STG   15,168(0,13)
000027E6 E3F0 1008 0004          00000008   4166          LG    15,8(0,1)   ; of
000027EC E3F0 D0B0 0024          000000B0   4167          STG   15,176(0,13)
000027F2 41F0 1014               00000014   4168          LA    15,20(0,1)
000027F6 E3F0 D0B8 0024          000000B8   4169          STG   15,184(0,13)
000027FC E548 D0C0 0004          000000C0   4170          MVGHI 192(13),4
00002802 4110 D0A8               000000A8   4171          LA    1,168(0,13)
00002806 E3F0 C0C8 0004          00002860   4172          LG    15,@lit_1524_80 ; rd_kafka_buf_update
0000280C                                    4173 @@gen_label97 DS    0H
0000280C 05EF                               4174          BALR  14,15
0000280E                                    4175 @@gen_label98 DS    0H
                                            4176 * ***   }
0000280E                                    4177 @ret_lab_1524 DS 0H
                                            4178 * * **** Start of Epilogue
                                            4179          DCCEPIL
0000280E                                    4180+         ds 0h                                                          01-DCCEP
                                            4181+* Epilog
0000280E D707 D088 D088 00000088 00000088   4182+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002814 E3D0 D080 0004          00000080   4183+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000281A E3C0 D090 0004          00000090   4184+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002820 E3B0 C018 0004          00000018   4185+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002826 E3C0 B010 0021          00000010   4186+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000282C E3E0 D008 0004          00000008   4187+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002832 EB1C D020 0004          00000020   4188+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002838 078E                               4189+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page   87 
  Active Usings: @REGION_1524_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000283A E3F0 D010 0024          00000010   4190+         stg 15,16(0,13)         save return code                       01-DCCEP
00002840 E300 D018 0024          00000018   4191+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002846 E3F0 D090 0004          00000090   4192+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000284C E3F0 F018 0004          00000018   4193+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002852 47F0 F040               00000040   4194+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4195+* End of Epilog
                                            4196 * * **** End of Epilogue
00002858                                    4197          DS    0D
00002858 000000C8                           4198 @FRAMESIZE_1524 DC F'200'
0000285C 00000000
00002860 0000000000002128                   4199 @lit_1524_80 DC AD(rd_kafka_buf_update)
                                            4200          DROP  12
                                            4201 *
                                            4202 *   DSECT for automatic variables in "rd_kafka_buf_update_i32"
                                            4203 *      (FUNCTION #1524)
                                            4204 *
00000000                00000000 000000A8   4205 @AUTO#rd_kafka_buf_update_i32 DSECT
00000000                                    4206          DS    XL168
                                            4207 *
00002868                00000000 00007AB2   4208 @CODE    CSECT
                                            4209 *
                                            4210 *
                                            4211 *
                                            4212 * ....... start of rd_kafka_buf_update_u32
00002868                                    4213 @LNAME1525 DS  0H
00002868 00000017                           4214          DC    X'00000017'
0000286C 99846D9281869281                   4215          DC    C'rd_kafka_buf_update_u32'
00002883 00                                 4216          DC    X'00'
                                            4217 rd_kafka_buf_update_u32 DCCPRLG CINDEX=1525,BASER=12,FRAME=200,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1525
                                            4218          macro
                                            4219          dccextrn &m
                                            4220          gblc    &$dccext(1000)
                                            4221          gbla    &$dccexti
                                            4222          lcla    &i
                                            4223 &$dccext(&$dccexti+1) setc    '&m'
                                            4224 &i       seta    1
                                            4225 .loop    aif    (&i gt &$dccexti).around
                                            4226          aif    ('&$dccext(&i)' eq '&m').getout
                                            4227 &i       seta    &i+1
                                            4228          ago     .loop
                                            4229 .around  anop
                                            4230 &$dccexti seta &$dccexti+1
                                            4231          extrn  &m
                                            4232 .getout  anop
                                            4233          mend
00002888                                    4234+$eye0116    ds    0d                                                    02-DCCCA
00002888 C4C3C3                             4235+         dc cl3'DCC'                                                    02-DCCCA
0000288B 01                                 4236+         dc xl1'01' format one                                          02-DCCCA
0000288C 00000000                           4237+         dc a(0)                                                        02-DCCCA
00002890 00000000000028FA                   4238+         dc ad(@PER_1525)                                               02-DCCCA
00002898 00000000000000C8                   4239+         dc ad(200)                                                     02-DCCCA
                                                                                                                           Page   88 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000028A0 0000000000000000                   4240+         dc ad(0)                                                       02-DCCCA
000028A8 0000000000001000                   4241+         dc ad(4096)                                                    02-DCCCA
000028B0 20                                 4242+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000028B1 03                                 4243+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000028B2 03                                 4244+         dc al1(3)                                                      02-DCCCA
000028B3 08                                 4245+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000028B4 00                                 4246+         dc bl.8'00000000'                                              02-DCCCA
000028B5 000000                             4247+         dc al3(0)                                                      02-DCCCA
000028B8 0000000000002868                   4248+         dc ad(@LNAME1525)                                              02-DCCCA
000028C0                                    4249+         ds 0d                                                          02-DCCCA
000028C0 0000000000002888                   4250+         dc ad($eye0116)                                                02-DCCCA
000028C8 0000000000000000                   4251+         dc ad(0)                                                       02-DCCCA
000028D0                                    4252+         ds    0d                                                       01-DCCPR
000028D0                                    4253+rd_kafka_buf_update_u32 ds 0d                                           01-DCCPR
000028D0                                    4254+@REGION_1525_1 ds 0h                                                    01-DCCPR
000028D0 EBEC D008 0024          00000008   4255+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000028D6 E3E0 D088 0004          00000088   4256+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000028DC E3C0 D090 0004          00000090   4257+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000028E2 B904 002E                          4258+         lgr   2,14                copy addr of our savearea            01-DCCPR
000028E6 E3B0 C018 0004          00000018   4259+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000028EC A7EB 00C8               000000C8   4260+         aghi  14,200              increase by frame size               01-DCCPR
000028F0 E3E0 C020 0021          00000020   4261+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000028F6 4720 B020               00000020   4262+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000028FA                                    4263+@PER_1525 ds   0h                                                       01-DCCPR
000028FA EBDE 2080 0024          00000080   4264+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002900 E3C0 2090 0024          00000090   4265+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002906 B904 00D2                          4266+         lgr   13,2                set real frame pointer               01-DCCPR
0000290A B904 00CF                          4267+         lgr   12,15               set base reg                         01-DCCPR
                        000028D0            4268+         using @REGION_1525_1,12                                        01-DCCPR
                                            4269 * ******* End of Prologue
                                            4270 * *
                                            4271 * ***       v = (v);
0000290E 58F0 1014               00000014   4272          L     15,20(0,1)  ; v
                                            4273 * ***       rd_kafka_buf_update(rkbuf, of, &v, sizeof(v));
00002912 E3F0 1000 0004          00000000   4274          LG    15,0(0,1)   ; rkbuf
00002918 E3F0 D0A8 0024          000000A8   4275          STG   15,168(0,13)
0000291E E3F0 1008 0004          00000008   4276          LG    15,8(0,1)   ; of
00002924 E3F0 D0B0 0024          000000B0   4277          STG   15,176(0,13)
0000292A 41F0 1014               00000014   4278          LA    15,20(0,1)
0000292E E3F0 D0B8 0024          000000B8   4279          STG   15,184(0,13)
00002934 E548 D0C0 0004          000000C0   4280          MVGHI 192(13),4
0000293A 4110 D0A8               000000A8   4281          LA    1,168(0,13)
0000293E E3F0 C0C8 0004          00002998   4282          LG    15,@lit_1525_82 ; rd_kafka_buf_update
00002944                                    4283 @@gen_label99 DS    0H
00002944 05EF                               4284          BALR  14,15
00002946                                    4285 @@gen_label100 DS    0H
                                            4286 * ***   }
00002946                                    4287 @ret_lab_1525 DS 0H
                                            4288 * * **** Start of Epilogue
                                            4289          DCCEPIL
00002946                                    4290+         ds 0h                                                          01-DCCEP
                                            4291+* Epilog
                                                                                                                           Page   89 
  Active Usings: @REGION_1525_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002946 D707 D088 D088 00000088 00000088   4292+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000294C E3D0 D080 0004          00000080   4293+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002952 E3C0 D090 0004          00000090   4294+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002958 E3B0 C018 0004          00000018   4295+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000295E E3C0 B010 0021          00000010   4296+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002964 E3E0 D008 0004          00000008   4297+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000296A EB1C D020 0004          00000020   4298+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002970 078E                               4299+         bcr 8,14                if same dsab, just return              01-DCCEP
00002972 E3F0 D010 0024          00000010   4300+         stg 15,16(0,13)         save return code                       01-DCCEP
00002978 E300 D018 0024          00000018   4301+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000297E E3F0 D090 0004          00000090   4302+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002984 E3F0 F018 0004          00000018   4303+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000298A 47F0 F040               00000040   4304+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4305+* End of Epilog
                                            4306 * * **** End of Epilogue
00002990                                    4307          DS    0D
00002990 000000C8                           4308 @FRAMESIZE_1525 DC F'200'
00002994 00000000
00002998 0000000000002128                   4309 @lit_1525_82 DC AD(rd_kafka_buf_update)
                                            4310          DROP  12
                                            4311 *
                                            4312 *   DSECT for automatic variables in "rd_kafka_buf_update_u32"
                                            4313 *      (FUNCTION #1525)
                                            4314 *
00000000                00000000 000000A8   4315 @AUTO#rd_kafka_buf_update_u32 DSECT
00000000                                    4316          DS    XL168
                                            4317 *
000029A0                00000000 00007AB2   4318 @CODE    CSECT
                                            4319 *
                                            4320 *
                                            4321 *
                                            4322 * ....... start of rd_kafka_buf_write_i64
000029A0                                    4323 @LNAME1527 DS  0H
000029A0 00000016                           4324          DC    X'00000016'
000029A4 99846D9281869281                   4325          DC    C'rd_kafka_buf_write_i64'
000029BA 00                                 4326          DC    X'00'
                                            4327 rd_kafka_buf_write_i64 DCCPRLG CINDEX=1527,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1527
                                            4328          macro
                                            4329          dccextrn &m
                                            4330          gblc    &$dccext(1000)
                                            4331          gbla    &$dccexti
                                            4332          lcla    &i
                                            4333 &$dccext(&$dccexti+1) setc    '&m'
                                            4334 &i       seta    1
                                            4335 .loop    aif    (&i gt &$dccexti).around
                                            4336          aif    ('&$dccext(&i)' eq '&m').getout
                                            4337 &i       seta    &i+1
                                            4338          ago     .loop
                                            4339 .around  anop
                                            4340 &$dccexti seta &$dccexti+1
                                            4341          extrn  &m
                                                                                                                           Page   90 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4342 .getout  anop
                                            4343          mend
000029C0                                    4344+$eye0119    ds    0d                                                    02-DCCCA
000029C0 C4C3C3                             4345+         dc cl3'DCC'                                                    02-DCCCA
000029C3 01                                 4346+         dc xl1'01' format one                                          02-DCCCA
000029C4 00000000                           4347+         dc a(0)                                                        02-DCCCA
000029C8 0000000000002A32                   4348+         dc ad(@PER_1527)                                               02-DCCCA
000029D0 00000000000000C0                   4349+         dc ad(192)                                                     02-DCCCA
000029D8 0000000000000000                   4350+         dc ad(0)                                                       02-DCCCA
000029E0 0000000000001000                   4351+         dc ad(4096)                                                    02-DCCCA
000029E8 20                                 4352+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000029E9 03                                 4353+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000029EA 03                                 4354+         dc al1(3)                                                      02-DCCCA
000029EB 08                                 4355+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000029EC 00                                 4356+         dc bl.8'00000000'                                              02-DCCCA
000029ED 000000                             4357+         dc al3(0)                                                      02-DCCCA
000029F0 00000000000029A0                   4358+         dc ad(@LNAME1527)                                              02-DCCCA
000029F8                                    4359+         ds 0d                                                          02-DCCCA
000029F8 00000000000029C0                   4360+         dc ad($eye0119)                                                02-DCCCA
00002A00 0000000000000000                   4361+         dc ad(0)                                                       02-DCCCA
00002A08                                    4362+         ds    0d                                                       01-DCCPR
00002A08                                    4363+rd_kafka_buf_write_i64 ds 0d                                            01-DCCPR
00002A08                                    4364+@REGION_1527_1 ds 0h                                                    01-DCCPR
00002A08 EBEC D008 0024          00000008   4365+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002A0E E3E0 D088 0004          00000088   4366+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002A14 E3C0 D090 0004          00000090   4367+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002A1A B904 002E                          4368+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002A1E E3B0 C018 0004          00000018   4369+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002A24 A7EB 00C0               000000C0   4370+         aghi  14,192              increase by frame size               01-DCCPR
00002A28 E3E0 C020 0021          00000020   4371+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002A2E 4720 B020               00000020   4372+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002A32                                    4373+@PER_1527 ds   0h                                                       01-DCCPR
00002A32 EBDE 2080 0024          00000080   4374+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002A38 E3C0 2090 0024          00000090   4375+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002A3E B904 00D2                          4376+         lgr   13,2                set real frame pointer               01-DCCPR
00002A42 B904 00CF                          4377+         lgr   12,15               set base reg                         01-DCCPR
                        00002A08            4378+         using @REGION_1527_1,12                                        01-DCCPR
                                            4379 * ******* End of Prologue
                                            4380 * *
                                            4381 * ***       v = (v);
00002A46 E3F0 1008 0004          00000008   4382          LG    15,8(0,1)   ; v
                                            4383 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
00002A4C E3F0 1000 0004          00000000   4384          LG    15,0(0,1)   ; rkbuf
00002A52 E3F0 D0A8 0024          000000A8   4385          STG   15,168(0,13)
00002A58 41F0 1008               00000008   4386          LA    15,8(0,1)
00002A5C E3F0 D0B0 0024          000000B0   4387          STG   15,176(0,13)
00002A62 E548 D0B8 0008          000000B8   4388          MVGHI 184(13),8
00002A68 4110 D0A8               000000A8   4389          LA    1,168(0,13)
00002A6C E3F0 C0C0 0004          00002AC8   4390          LG    15,@lit_1527_84 ; rd_kafka_buf_write
00002A72                                    4391 @@gen_label101 DS    0H
00002A72 05EF                               4392          BALR  14,15
00002A74                                    4393 @@gen_label102 DS    0H
                                                                                                                           Page   91 
  Active Usings: @REGION_1527_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4394 * ***   }
                                            4395 * * **** Start of Epilogue
                                            4396          DCCEPIL
00002A74                                    4397+         ds 0h                                                          01-DCCEP
                                            4398+* Epilog
00002A74 D707 D088 D088 00000088 00000088   4399+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002A7A E3D0 D080 0004          00000080   4400+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002A80 E3C0 D090 0004          00000090   4401+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002A86 E3B0 C018 0004          00000018   4402+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002A8C E3C0 B010 0021          00000010   4403+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002A92 E3E0 D008 0004          00000008   4404+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002A98 EB1C D020 0004          00000020   4405+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002A9E 078E                               4406+         bcr 8,14                if same dsab, just return              01-DCCEP
00002AA0 E3F0 D010 0024          00000010   4407+         stg 15,16(0,13)         save return code                       01-DCCEP
00002AA6 E300 D018 0024          00000018   4408+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002AAC E3F0 D090 0004          00000090   4409+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002AB2 E3F0 F018 0004          00000018   4410+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002AB8 47F0 F040               00000040   4411+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4412+* End of Epilog
                                            4413 * * **** End of Epilogue
00002AC0                                    4414          DS    0D
00002AC0 000000C0                           4415 @FRAMESIZE_1527 DC F'192'
00002AC4 00000000
00002AC8 0000000000001FA8                   4416 @lit_1527_84 DC AD(rd_kafka_buf_write)
                                            4417          DROP  12
                                            4418 *
                                            4419 *   DSECT for automatic variables in "rd_kafka_buf_write_i64"
                                            4420 *      (FUNCTION #1527)
                                            4421 *
00000000                00000000 000000A8   4422 @AUTO#rd_kafka_buf_write_i64 DSECT
00000000                                    4423          DS    XL168
                                            4424 *
00002AD0                00000000 00007AB2   4425 @CODE    CSECT
                                            4426 *
                                            4427 *
                                            4428 *
                                            4429 * ....... start of rd_kafka_buf_update_i64
00002AD0                                    4430 @LNAME1528 DS  0H
00002AD0 00000017                           4431          DC    X'00000017'
00002AD4 99846D9281869281                   4432          DC    C'rd_kafka_buf_update_i64'
00002AEB 00                                 4433          DC    X'00'
                                            4434 rd_kafka_buf_update_i64 DCCPRLG CINDEX=1528,BASER=12,FRAME=200,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1528
                                            4435          macro
                                            4436          dccextrn &m
                                            4437          gblc    &$dccext(1000)
                                            4438          gbla    &$dccexti
                                            4439          lcla    &i
                                            4440 &$dccext(&$dccexti+1) setc    '&m'
                                            4441 &i       seta    1
                                            4442 .loop    aif    (&i gt &$dccexti).around
                                            4443          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4444 &i       seta    &i+1
                                            4445          ago     .loop
                                            4446 .around  anop
                                            4447 &$dccexti seta &$dccexti+1
                                            4448          extrn  &m
                                            4449 .getout  anop
                                            4450          mend
00002AF0                                    4451+$eye0122    ds    0d                                                    02-DCCCA
00002AF0 C4C3C3                             4452+         dc cl3'DCC'                                                    02-DCCCA
00002AF3 01                                 4453+         dc xl1'01' format one                                          02-DCCCA
00002AF4 00000000                           4454+         dc a(0)                                                        02-DCCCA
00002AF8 0000000000002B62                   4455+         dc ad(@PER_1528)                                               02-DCCCA
00002B00 00000000000000C8                   4456+         dc ad(200)                                                     02-DCCCA
00002B08 0000000000000000                   4457+         dc ad(0)                                                       02-DCCCA
00002B10 0000000000001000                   4458+         dc ad(4096)                                                    02-DCCCA
00002B18 20                                 4459+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002B19 03                                 4460+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002B1A 03                                 4461+         dc al1(3)                                                      02-DCCCA
00002B1B 08                                 4462+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002B1C 00                                 4463+         dc bl.8'00000000'                                              02-DCCCA
00002B1D 000000                             4464+         dc al3(0)                                                      02-DCCCA
00002B20 0000000000002AD0                   4465+         dc ad(@LNAME1528)                                              02-DCCCA
00002B28                                    4466+         ds 0d                                                          02-DCCCA
00002B28 0000000000002AF0                   4467+         dc ad($eye0122)                                                02-DCCCA
00002B30 0000000000000000                   4468+         dc ad(0)                                                       02-DCCCA
00002B38                                    4469+         ds    0d                                                       01-DCCPR
00002B38                                    4470+rd_kafka_buf_update_i64 ds 0d                                           01-DCCPR
00002B38                                    4471+@REGION_1528_1 ds 0h                                                    01-DCCPR
00002B38 EBEC D008 0024          00000008   4472+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002B3E E3E0 D088 0004          00000088   4473+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002B44 E3C0 D090 0004          00000090   4474+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002B4A B904 002E                          4475+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002B4E E3B0 C018 0004          00000018   4476+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002B54 A7EB 00C8               000000C8   4477+         aghi  14,200              increase by frame size               01-DCCPR
00002B58 E3E0 C020 0021          00000020   4478+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002B5E 4720 B020               00000020   4479+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002B62                                    4480+@PER_1528 ds   0h                                                       01-DCCPR
00002B62 EBDE 2080 0024          00000080   4481+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002B68 E3C0 2090 0024          00000090   4482+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002B6E B904 00D2                          4483+         lgr   13,2                set real frame pointer               01-DCCPR
00002B72 B904 00CF                          4484+         lgr   12,15               set base reg                         01-DCCPR
                        00002B38            4485+         using @REGION_1528_1,12                                        01-DCCPR
                                            4486 * ******* End of Prologue
                                            4487 * *
                                            4488 * ***       v = (v);
00002B76 E3F0 1010 0004          00000010   4489          LG    15,16(0,1)  ; v
                                            4490 * ***       rd_kafka_buf_update(rkbuf, of, &v, sizeof(v));
00002B7C E3F0 1000 0004          00000000   4491          LG    15,0(0,1)   ; rkbuf
00002B82 E3F0 D0A8 0024          000000A8   4492          STG   15,168(0,13)
00002B88 E3F0 1008 0004          00000008   4493          LG    15,8(0,1)   ; of
00002B8E E3F0 D0B0 0024          000000B0   4494          STG   15,176(0,13)
00002B94 41F0 1010               00000010   4495          LA    15,16(0,1)
                                                                                                                           Page   93 
  Active Usings: @REGION_1528_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002B98 E3F0 D0B8 0024          000000B8   4496          STG   15,184(0,13)
00002B9E E548 D0C0 0008          000000C0   4497          MVGHI 192(13),8
00002BA4 4110 D0A8               000000A8   4498          LA    1,168(0,13)
00002BA8 E3F0 C0C8 0004          00002C00   4499          LG    15,@lit_1528_86 ; rd_kafka_buf_update
00002BAE                                    4500 @@gen_label103 DS    0H
00002BAE 05EF                               4501          BALR  14,15
00002BB0                                    4502 @@gen_label104 DS    0H
                                            4503 * ***   }
00002BB0                                    4504 @ret_lab_1528 DS 0H
                                            4505 * * **** Start of Epilogue
                                            4506          DCCEPIL
00002BB0                                    4507+         ds 0h                                                          01-DCCEP
                                            4508+* Epilog
00002BB0 D707 D088 D088 00000088 00000088   4509+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002BB6 E3D0 D080 0004          00000080   4510+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002BBC E3C0 D090 0004          00000090   4511+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002BC2 E3B0 C018 0004          00000018   4512+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002BC8 E3C0 B010 0021          00000010   4513+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002BCE E3E0 D008 0004          00000008   4514+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002BD4 EB1C D020 0004          00000020   4515+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002BDA 078E                               4516+         bcr 8,14                if same dsab, just return              01-DCCEP
00002BDC E3F0 D010 0024          00000010   4517+         stg 15,16(0,13)         save return code                       01-DCCEP
00002BE2 E300 D018 0024          00000018   4518+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002BE8 E3F0 D090 0004          00000090   4519+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002BEE E3F0 F018 0004          00000018   4520+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002BF4 47F0 F040               00000040   4521+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4522+* End of Epilog
                                            4523 * * **** End of Epilogue
00002BF8                                    4524          DS    0D
00002BF8 000000C8                           4525 @FRAMESIZE_1528 DC F'200'
00002BFC 00000000
00002C00 0000000000002128                   4526 @lit_1528_86 DC AD(rd_kafka_buf_update)
                                            4527          DROP  12
                                            4528 *
                                            4529 *   DSECT for automatic variables in "rd_kafka_buf_update_i64"
                                            4530 *      (FUNCTION #1528)
                                            4531 *
00000000                00000000 000000A8   4532 @AUTO#rd_kafka_buf_update_i64 DSECT
00000000                                    4533          DS    XL168
                                            4534 *
00002C08                00000000 00007AB2   4535 @CODE    CSECT
                                            4536 *
                                            4537 *
                                            4538 *
                                            4539 * ....... start of rd_kafka_buf_write_varint
00002C08                                    4540 @LNAME1529 DS  0H
00002C08 00000019                           4541          DC    X'00000019'
00002C0C 99846D9281869281                   4542          DC    C'rd_kafka_buf_write_varint'
00002C25 00                                 4543          DC    X'00'
                                            4544 rd_kafka_buf_write_varint DCCPRLG CINDEX=1529,BASER=12,FRAME=208,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1529
                                            4545          macro
                                                                                                                           Page   94 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4546          dccextrn &m
                                            4547          gblc    &$dccext(1000)
                                            4548          gbla    &$dccexti
                                            4549          lcla    &i
                                            4550 &$dccext(&$dccexti+1) setc    '&m'
                                            4551 &i       seta    1
                                            4552 .loop    aif    (&i gt &$dccexti).around
                                            4553          aif    ('&$dccext(&i)' eq '&m').getout
                                            4554 &i       seta    &i+1
                                            4555          ago     .loop
                                            4556 .around  anop
                                            4557 &$dccexti seta &$dccexti+1
                                            4558          extrn  &m
                                            4559 .getout  anop
                                            4560          mend
00002C28                                    4561+$eye0125    ds    0d                                                    02-DCCCA
00002C28 C4C3C3                             4562+         dc cl3'DCC'                                                    02-DCCCA
00002C2B 01                                 4563+         dc xl1'01' format one                                          02-DCCCA
00002C2C 00000000                           4564+         dc a(0)                                                        02-DCCCA
00002C30 0000000000002C9A                   4565+         dc ad(@PER_1529)                                               02-DCCCA
00002C38 00000000000000D0                   4566+         dc ad(208)                                                     02-DCCCA
00002C40 0000000000000000                   4567+         dc ad(0)                                                       02-DCCCA
00002C48 0000000000001000                   4568+         dc ad(4096)                                                    02-DCCCA
00002C50 20                                 4569+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002C51 03                                 4570+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002C52 03                                 4571+         dc al1(3)                                                      02-DCCCA
00002C53 08                                 4572+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002C54 00                                 4573+         dc bl.8'00000000'                                              02-DCCCA
00002C55 000000                             4574+         dc al3(0)                                                      02-DCCCA
00002C58 0000000000002C08                   4575+         dc ad(@LNAME1529)                                              02-DCCCA
00002C60                                    4576+         ds 0d                                                          02-DCCCA
00002C60 0000000000002C28                   4577+         dc ad($eye0125)                                                02-DCCCA
00002C68 0000000000000000                   4578+         dc ad(0)                                                       02-DCCCA
00002C70                                    4579+         ds    0d                                                       01-DCCPR
00002C70                                    4580+rd_kafka_buf_write_varint ds 0d                                         01-DCCPR
00002C70                                    4581+@REGION_1529_1 ds 0h                                                    01-DCCPR
00002C70 EBEC D008 0024          00000008   4582+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002C76 E3E0 D088 0004          00000088   4583+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002C7C E3C0 D090 0004          00000090   4584+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002C82 B904 002E                          4585+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002C86 E3B0 C018 0004          00000018   4586+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002C8C A7EB 00D0               000000D0   4587+         aghi  14,208              increase by frame size               01-DCCPR
00002C90 E3E0 C020 0021          00000020   4588+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002C96 4720 B020               00000020   4589+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002C9A                                    4590+@PER_1529 ds   0h                                                       01-DCCPR
00002C9A EBDE 2080 0024          00000080   4591+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002CA0 E3C0 2090 0024          00000090   4592+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002CA6 B904 00D2                          4593+         lgr   13,2                set real frame pointer               01-DCCPR
00002CAA B904 00CF                          4594+         lgr   12,15               set base reg                         01-DCCPR
                        00002C70            4595+         using @REGION_1529_1,12                                        01-DCCPR
00002CAE B904 0021                          4596          LGR   2,1         ; ptr to parm area
                                            4597 * ******* End of Prologue
                                                                                                                           Page   95 
  Active Usings: @REGION_1529_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4598 * *
                                            4599 * ***       char varint[(sizeof(v) + 1 + (sizeof(v)/7))];
                                            4600 * ***       size_t sz;
                                            4601 * ***
                                            4602 * ***       sz = rd_uvarint_enc_i64(varint, sizeof(varint), v);
00002CB2 41F0 D0A8               000000A8   4603          LA    15,168(0,13)
00002CB6 E3F0 D0B8 0024          000000B8   4604          STG   15,184(0,13)
00002CBC E548 D0C0 000A          000000C0   4605          MVGHI 192(13),10
00002CC2 E3F0 2008 0004          00000008   4606          LG    15,8(0,2)   ; v
00002CC8 E3F0 D0C8 0024          000000C8   4607          STG   15,200(0,13)
00002CCE 4110 D0B8               000000B8   4608          LA    1,184(0,13)
00002CD2 E3F0 C0E8 0004          00002D58   4609          LG    15,@lit_1529_88 ; rd_uvarint_enc_i64
00002CD8                                    4610 @@gen_label105 DS    0H
00002CD8 05EF                               4611          BALR  14,15
00002CDA                                    4612 @@gen_label106 DS    0H
                                            4613 * ***
                                            4614 * ***       return rd_kafka_buf_write(rkbuf, varint, sz);
00002CDA E310 2000 0004          00000000   4615          LG    1,0(0,2)    ; rkbuf
00002CE0 E310 D0B8 0024          000000B8   4616          STG   1,184(0,13)
00002CE6 4110 D0A8               000000A8   4617          LA    1,168(0,13)
00002CEA E310 D0C0 0024          000000C0   4618          STG   1,192(0,13)
00002CF0 E3F0 D0C8 0024          000000C8   4619          STG   15,200(0,13)
00002CF6 4110 D0B8               000000B8   4620          LA    1,184(0,13)
00002CFA E3F0 C0F0 0004          00002D60   4621          LG    15,@lit_1529_89 ; rd_kafka_buf_write
00002D00                                    4622 @@gen_label107 DS    0H
00002D00 05EF                               4623          BALR  14,15
00002D02                                    4624 @@gen_label108 DS    0H
                                            4625 * ***   }
                                            4626 * * **** Start of Epilogue
                                            4627          DCCEPIL
00002D02                                    4628+         ds 0h                                                          01-DCCEP
                                            4629+* Epilog
00002D02 D707 D088 D088 00000088 00000088   4630+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002D08 E3D0 D080 0004          00000080   4631+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002D0E E3C0 D090 0004          00000090   4632+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002D14 E3B0 C018 0004          00000018   4633+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002D1A E3C0 B010 0021          00000010   4634+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002D20 E3E0 D008 0004          00000008   4635+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002D26 EB1C D020 0004          00000020   4636+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002D2C 078E                               4637+         bcr 8,14                if same dsab, just return              01-DCCEP
00002D2E E3F0 D010 0024          00000010   4638+         stg 15,16(0,13)         save return code                       01-DCCEP
00002D34 E300 D018 0024          00000018   4639+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002D3A E3F0 D090 0004          00000090   4640+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002D40 E3F0 F018 0004          00000018   4641+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002D46 47F0 F040               00000040   4642+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4643+* End of Epilog
                                            4644 * * **** End of Epilogue
00002D50                                    4645          DS    0D
00002D50 000000D0                           4646 @FRAMESIZE_1529 DC F'208'
00002D54 00000000
00002D58 0000000000001078                   4647 @lit_1529_88 DC AD(rd_uvarint_enc_i64)
00002D60 0000000000001FA8                   4648 @lit_1529_89 DC AD(rd_kafka_buf_write)
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4649          DROP  12
                                            4650 *
                                            4651 *   DSECT for automatic variables in "rd_kafka_buf_write_varint"
                                            4652 *      (FUNCTION #1529)
                                            4653 *
00000000                00000000 000000B2   4654 @AUTO#rd_kafka_buf_write_varint DSECT
00000000                                    4655          DS    XL168
000000A8                                    4656 rd_kafka_buf_write_varint#sz#0 DS 8XL1 ; sz
000000B0                000000B0 000000A8   4657          ORG   @AUTO#rd_kafka_buf_write_varint+168
000000A8                                    4658 rd_kafka_buf_write_varint#varint#0 DS 10XL1 ; varint
                                            4659 *
00002D68                00000000 00007AB2   4660 @CODE    CSECT
                                            4661 *
                                            4662 *
                                            4663 *
                                            4664 * ....... start of rd_kafka_buf_write_uvarint
00002D68                                    4665 @LNAME1530 DS  0H
00002D68 0000001A                           4666          DC    X'0000001A'
00002D6C 99846D9281869281                   4667          DC    C'rd_kafka_buf_write_uvarint'
00002D86 00                                 4668          DC    X'00'
                                            4669 rd_kafka_buf_write_uvarint DCCPRLG CINDEX=1530,BASER=12,FRAME=208,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1530
                                            4670          macro
                                            4671          dccextrn &m
                                            4672          gblc    &$dccext(1000)
                                            4673          gbla    &$dccexti
                                            4674          lcla    &i
                                            4675 &$dccext(&$dccexti+1) setc    '&m'
                                            4676 &i       seta    1
                                            4677 .loop    aif    (&i gt &$dccexti).around
                                            4678          aif    ('&$dccext(&i)' eq '&m').getout
                                            4679 &i       seta    &i+1
                                            4680          ago     .loop
                                            4681 .around  anop
                                            4682 &$dccexti seta &$dccexti+1
                                            4683          extrn  &m
                                            4684 .getout  anop
                                            4685          mend
00002D88                                    4686+$eye0128    ds    0d                                                    02-DCCCA
00002D88 C4C3C3                             4687+         dc cl3'DCC'                                                    02-DCCCA
00002D8B 01                                 4688+         dc xl1'01' format one                                          02-DCCCA
00002D8C 00000000                           4689+         dc a(0)                                                        02-DCCCA
00002D90 0000000000002DFA                   4690+         dc ad(@PER_1530)                                               02-DCCCA
00002D98 00000000000000D0                   4691+         dc ad(208)                                                     02-DCCCA
00002DA0 0000000000000000                   4692+         dc ad(0)                                                       02-DCCCA
00002DA8 0000000000001000                   4693+         dc ad(4096)                                                    02-DCCCA
00002DB0 20                                 4694+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002DB1 03                                 4695+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002DB2 03                                 4696+         dc al1(3)                                                      02-DCCCA
00002DB3 08                                 4697+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002DB4 00                                 4698+         dc bl.8'00000000'                                              02-DCCCA
00002DB5 000000                             4699+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   97 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002DB8 0000000000002D68                   4700+         dc ad(@LNAME1530)                                              02-DCCCA
00002DC0                                    4701+         ds 0d                                                          02-DCCCA
00002DC0 0000000000002D88                   4702+         dc ad($eye0128)                                                02-DCCCA
00002DC8 0000000000000000                   4703+         dc ad(0)                                                       02-DCCCA
00002DD0                                    4704+         ds    0d                                                       01-DCCPR
00002DD0                                    4705+rd_kafka_buf_write_uvarint ds 0d                                        01-DCCPR
00002DD0                                    4706+@REGION_1530_1 ds 0h                                                    01-DCCPR
00002DD0 EBEC D008 0024          00000008   4707+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002DD6 E3E0 D088 0004          00000088   4708+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002DDC E3C0 D090 0004          00000090   4709+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002DE2 B904 002E                          4710+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002DE6 E3B0 C018 0004          00000018   4711+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002DEC A7EB 00D0               000000D0   4712+         aghi  14,208              increase by frame size               01-DCCPR
00002DF0 E3E0 C020 0021          00000020   4713+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002DF6 4720 B020               00000020   4714+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002DFA                                    4715+@PER_1530 ds   0h                                                       01-DCCPR
00002DFA EBDE 2080 0024          00000080   4716+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002E00 E3C0 2090 0024          00000090   4717+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002E06 B904 00D2                          4718+         lgr   13,2                set real frame pointer               01-DCCPR
00002E0A B904 00CF                          4719+         lgr   12,15               set base reg                         01-DCCPR
                        00002DD0            4720+         using @REGION_1530_1,12                                        01-DCCPR
00002E0E B904 0021                          4721          LGR   2,1         ; ptr to parm area
                                            4722 * ******* End of Prologue
                                            4723 * *
                                            4724 * ***       char varint[(sizeof(v) + 1 + (sizeof(v)/7))];
                                            4725 * ***       size_t sz;
                                            4726 * ***
                                            4727 * ***       sz = rd_uvarint_enc_u64(varint, sizeof(varint), v);
00002E12 41F0 D0A8               000000A8   4728          LA    15,168(0,13)
00002E16 E3F0 D0B8 0024          000000B8   4729          STG   15,184(0,13)
00002E1C E548 D0C0 000A          000000C0   4730          MVGHI 192(13),10
00002E22 E3F0 2008 0004          00000008   4731          LG    15,8(0,2)   ; v
00002E28 E3F0 D0C8 0024          000000C8   4732          STG   15,200(0,13)
00002E2E 4110 D0B8               000000B8   4733          LA    1,184(0,13)
00002E32 E3F0 C0E8 0004          00002EB8   4734          LG    15,@lit_1530_91 ; rd_uvarint_enc_u64
00002E38                                    4735 @@gen_label109 DS    0H
00002E38 05EF                               4736          BALR  14,15
00002E3A                                    4737 @@gen_label110 DS    0H
                                            4738 * ***
                                            4739 * ***       return rd_kafka_buf_write(rkbuf, varint, sz);
00002E3A E310 2000 0004          00000000   4740          LG    1,0(0,2)    ; rkbuf
00002E40 E310 D0B8 0024          000000B8   4741          STG   1,184(0,13)
00002E46 4110 D0A8               000000A8   4742          LA    1,168(0,13)
00002E4A E310 D0C0 0024          000000C0   4743          STG   1,192(0,13)
00002E50 E3F0 D0C8 0024          000000C8   4744          STG   15,200(0,13)
00002E56 4110 D0B8               000000B8   4745          LA    1,184(0,13)
00002E5A E3F0 C0F0 0004          00002EC0   4746          LG    15,@lit_1530_92 ; rd_kafka_buf_write
00002E60                                    4747 @@gen_label111 DS    0H
00002E60 05EF                               4748          BALR  14,15
00002E62                                    4749 @@gen_label112 DS    0H
                                            4750 * ***   }
                                            4751 * * **** Start of Epilogue
                                                                                                                           Page   98 
  Active Usings: @REGION_1530_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4752          DCCEPIL
00002E62                                    4753+         ds 0h                                                          01-DCCEP
                                            4754+* Epilog
00002E62 D707 D088 D088 00000088 00000088   4755+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002E68 E3D0 D080 0004          00000080   4756+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002E6E E3C0 D090 0004          00000090   4757+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002E74 E3B0 C018 0004          00000018   4758+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002E7A E3C0 B010 0021          00000010   4759+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002E80 E3E0 D008 0004          00000008   4760+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002E86 EB1C D020 0004          00000020   4761+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002E8C 078E                               4762+         bcr 8,14                if same dsab, just return              01-DCCEP
00002E8E E3F0 D010 0024          00000010   4763+         stg 15,16(0,13)         save return code                       01-DCCEP
00002E94 E300 D018 0024          00000018   4764+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002E9A E3F0 D090 0004          00000090   4765+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002EA0 E3F0 F018 0004          00000018   4766+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002EA6 47F0 F040               00000040   4767+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4768+* End of Epilog
                                            4769 * * **** End of Epilogue
00002EB0                                    4770          DS    0D
00002EB0 000000D0                           4771 @FRAMESIZE_1530 DC F'208'
00002EB4 00000000
00002EB8 0000000000000F80                   4772 @lit_1530_91 DC AD(rd_uvarint_enc_u64)
00002EC0 0000000000001FA8                   4773 @lit_1530_92 DC AD(rd_kafka_buf_write)
                                            4774          DROP  12
                                            4775 *
                                            4776 *   DSECT for automatic variables in "rd_kafka_buf_write_uvarint"
                                            4777 *      (FUNCTION #1530)
                                            4778 *
00000000                00000000 000000B2   4779 @AUTO#rd_kafka_buf_write_uvarint DSECT
00000000                                    4780          DS    XL168
000000A8                                    4781 rd_kafka_buf_write_uvarint#sz#0 DS 8XL1 ; sz
000000B0                000000B0 000000A8   4782          ORG   @AUTO#rd_kafka_buf_write_uvarint+168
000000A8                                    4783 rd_kafka_buf_write_uvarint#varint#0 DS 10XL1 ; varint
                                            4784 *
00002EC8                00000000 00007AB2   4785 @CODE    CSECT
                                            4786 *
                                            4787 *
                                            4788 *
                                            4789 * ....... start of rd_kafka_buf_write_kstr
00002EC8                                    4790 @LNAME1531 DS  0H
00002EC8 00000017                           4791          DC    X'00000017'
00002ECC 99846D9281869281                   4792          DC    C'rd_kafka_buf_write_kstr'
00002EE3 00                                 4793          DC    X'00'
                                            4794 rd_kafka_buf_write_kstr DCCPRLG CINDEX=1531,BASER=12,FRAME=216,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1531
                                            4795          macro
                                            4796          dccextrn &m
                                            4797          gblc    &$dccext(1000)
                                            4798          gbla    &$dccexti
                                            4799          lcla    &i
                                            4800 &$dccext(&$dccexti+1) setc    '&m'
                                            4801 &i       seta    1
                                                                                                                           Page   99 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4802 .loop    aif    (&i gt &$dccexti).around
                                            4803          aif    ('&$dccext(&i)' eq '&m').getout
                                            4804 &i       seta    &i+1
                                            4805          ago     .loop
                                            4806 .around  anop
                                            4807 &$dccexti seta &$dccexti+1
                                            4808          extrn  &m
                                            4809 .getout  anop
                                            4810          mend
00002EE8                                    4811+$eye0131    ds    0d                                                    02-DCCCA
00002EE8 C4C3C3                             4812+         dc cl3'DCC'                                                    02-DCCCA
00002EEB 01                                 4813+         dc xl1'01' format one                                          02-DCCCA
00002EEC 00000000                           4814+         dc a(0)                                                        02-DCCCA
00002EF0 0000000000002F5A                   4815+         dc ad(@PER_1531)                                               02-DCCCA
00002EF8 00000000000000D8                   4816+         dc ad(216)                                                     02-DCCCA
00002F00 0000000000000000                   4817+         dc ad(0)                                                       02-DCCCA
00002F08 0000000000001000                   4818+         dc ad(4096)                                                    02-DCCCA
00002F10 20                                 4819+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002F11 03                                 4820+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002F12 03                                 4821+         dc al1(3)                                                      02-DCCCA
00002F13 08                                 4822+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002F14 00                                 4823+         dc bl.8'00000000'                                              02-DCCCA
00002F15 000000                             4824+         dc al3(0)                                                      02-DCCCA
00002F18 0000000000002EC8                   4825+         dc ad(@LNAME1531)                                              02-DCCCA
00002F20                                    4826+         ds 0d                                                          02-DCCCA
00002F20 0000000000002EE8                   4827+         dc ad($eye0131)                                                02-DCCCA
00002F28 0000000000000000                   4828+         dc ad(0)                                                       02-DCCCA
00002F30                                    4829+         ds    0d                                                       01-DCCPR
00002F30                                    4830+rd_kafka_buf_write_kstr ds 0d                                           01-DCCPR
00002F30                                    4831+@REGION_1531_1 ds 0h                                                    01-DCCPR
00002F30 EBEC D008 0024          00000008   4832+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002F36 E3E0 D088 0004          00000088   4833+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002F3C E3C0 D090 0004          00000090   4834+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002F42 B904 002E                          4835+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002F46 E3B0 C018 0004          00000018   4836+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002F4C A7EB 00D8               000000D8   4837+         aghi  14,216              increase by frame size               01-DCCPR
00002F50 E3E0 C020 0021          00000020   4838+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002F56 4720 B020               00000020   4839+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002F5A                                    4840+@PER_1531 ds   0h                                                       01-DCCPR
00002F5A EBDE 2080 0024          00000080   4841+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002F60 E3C0 2090 0024          00000090   4842+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002F66 B904 00D2                          4843+         lgr   13,2                set real frame pointer               01-DCCPR
00002F6A B904 00CF                          4844+         lgr   12,15               set base reg                         01-DCCPR
                        00002F30            4845+         using @REGION_1531_1,12                                        01-DCCPR
                                            4846 * ******* End of Prologue
                                            4847 * *
00002F6E E340 1000 0004          00000000   4848          LG    4,0(0,1)    ; rkbuf
00002F74 E320 1008 0004          00000008   4849          LG    2,8(0,1)    ; kstr
                                            4850 * ***       size_t len, r;
                                            4851 * ***
                                            4852 * ***       size_t ulen;
                                            4853 * ***       size_t alen;
                                                                                                                           Page  100 
  Active Usings: @REGION_1531_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4854 * ***       char* cbuf;
                                            4855 * ***       if (kstr &&
00002F7A B902 00F2                          4856          LTGR  15,2
00002F7E 4780 C120               00003050   4857          BZ    @L505
                                            4858 * ***           !(((kstr)->len == -1)))
00002F82 E55C 2000 FFFF          00000000   4859          CHSI  0(2),-1
00002F88 4780 C120               00003050   4860          BE    @L505
                                            4861 * ***       {
                                            4862 * ***           alen = (((kstr)->len) == -1 ? __strlen((kstr)->str) : \
                                            4863 * ((kstr)->len));
00002F8C E55C 2000 FFFF          00000000   4864          CHSI  0(2),-1
00002F92 4770 C0C0               00002FF0   4865          BNE   @L506
00002F96 E3F0 2008 0004          00000008   4866          LG    15,8(0,2)
00002F9C B904 001F                          4867          LGR   1,15
00002FA0 A709 0000               00000000   4868          LGHI  0,0
00002FA4                                    4869 @@gen_label116 DS 0H
00002FA4 B25E 000F                          4870          SRST  0,15
00002FA8 4710 C074               00002FA4   4871          BC  1,@@gen_label116
00002FAC B90B 0001                          4872          SLGR  0,1
00002FB0 47F0 C0C6               00002FF6   4873          B     @L507
00002FB8                                    4874          DS    0D
00002FB8 000000D8                           4875 @FRAMESIZE_1531 DC F'216'
00002FBC 00000000
00002FC0 0000000000000000                   4876 @lit_1531_94 DC AD(calloc)
00002FC8 0000000000000060                   4877 @lit_1531_95 DC AD(ebcdic_2_utf8)
00002FD0 00000000000023F8                   4878 @lit_1531_96 DC AD(rd_kafka_buf_write_i16)
00002FD8 0000000000001FA8                   4879 @lit_1531_98 DC AD(rd_kafka_buf_write)
00002FE0 0000000000000000                   4880 @lit_1531_99 DC AD(free)
00002FE8 0000000000002DD0                   4881 @lit_1531_101 DC AD(rd_kafka_buf_write_uvarint)
00002FF0                                    4882 @L506    DS    0H
00002FF0 E300 2000 0014          00000000   4883          LGF   0,0(0,2)
00002FF6                                    4884 @L507    DS    0H
00002FF6 E300 D0B0 0024          000000B0   4885          STG   0,176(0,13) ; alen
                                            4886 * ***           ulen = alen;
00002FFC E300 D0A8 0024          000000A8   4887          STG   0,168(0,13) ; ulen
                                            4888 * ***           cbuf = calloc(1, ulen);
00003002 E548 D0B8 0001          000000B8   4889          MVGHI 184(13),1
00003008 E300 D0C0 0024          000000C0   4890          STG   0,192(0,13)
0000300E 4110 D0B8               000000B8   4891          LA    1,184(0,13)
00003012 E3F0 C090 0004          00002FC0   4892          LG    15,@lit_1531_94 ; calloc
00003018                                    4893 @@gen_label117 DS    0H
00003018 05EF                               4894          BALR  14,15
0000301A                                    4895 @@gen_label118 DS    0H
0000301A B904 005F                          4896          LGR   5,15
                                            4897 * ***           ebcdic_2_utf8(cbuf, &ulen, kstr->str, &alen);
0000301E E350 D0B8 0024          000000B8   4898          STG   5,184(0,13)
00003024 41F0 D0A8               000000A8   4899          LA    15,168(0,13)
00003028 E3F0 D0C0 0024          000000C0   4900          STG   15,192(0,13)
0000302E E3F0 2008 0004          00000008   4901          LG    15,8(0,2)
00003034 E3F0 D0C8 0024          000000C8   4902          STG   15,200(0,13)
0000303A 41F0 D0B0               000000B0   4903          LA    15,176(0,13)
0000303E E3F0 D0D0 0024          000000D0   4904          STG   15,208(0,13)
                                                                                                                           Page  101 
  Active Usings: @REGION_1531_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003044 4110 D0B8               000000B8   4905          LA    1,184(0,13)
00003048 E3F0 C098 0004          00002FC8   4906          LG    15,@lit_1531_95 ; ebcdic_2_utf8
0000304E                                    4907 @@gen_label119 DS    0H
0000304E 05EF                               4908          BALR  14,15
00003050                                    4909 @@gen_label120 DS    0H
                                            4910 * ***       }
00003050                                    4911 @L505    DS    0H
                                            4912 * ***
                                            4913 * ***
                                            4914 * ***       if (!(rkbuf->rkbuf_flags & 0x40)) {
00003050 9140 4023      00000023 00000040   4915          TM    35(4),64
00003054 4770 C1AE               000030DE   4916          BNZ   @L508
                                            4917 * ***
                                            4918 * ***           if (!kstr || ((kstr)->len == -1))
00003058 B902 00F2                          4919          LTGR  15,2
0000305C 4780 C13A               0000306A   4920          BZ    @L510
00003060 E55C 2000 FFFF          00000000   4921          CHSI  0(2),-1
00003066 4770 C156               00003086   4922          BNE   @L509
0000306A                                    4923 @L510    DS    0H
                                            4924 * ***               return rd_kafka_buf_write_i16(rkbuf, -1);
0000306A E340 D0B8 0024          000000B8   4925          STG   4,184(0,13)
00003070 E548 D0C0 FFFF          000000C0   4926          MVGHI 192(13),-1
00003076 4110 D0B8               000000B8   4927          LA    1,184(0,13)
0000307A E3F0 C0A0 0004          00002FD0   4928          LG    15,@lit_1531_96 ; rd_kafka_buf_write_i16
00003080                                    4929 @@gen_label124 DS    0H
00003080 05EF                               4930          BALR  14,15
00003082                                    4931 @@gen_label125 DS    0H
00003082 47F0 C22A               0000315A   4932          B     @ret_lab_1531
00003086                                    4933 @L509    DS    0H
                                            4934 * ***
                                            4935 * ***   # 1148 "C:\asgkafka\librdkafka\src\rdkafka_buf.h"
                                            4936 * ***           len = ulen;
00003086 E320 D0A8 0004          000000A8   4937          LG    2,168(0,13) ; ulen
                                            4938 * ***
                                            4939 * ***           r = rd_kafka_buf_write_i16(rkbuf, (int16_t)len);
0000308C E340 D0B8 0024          000000B8   4940          STG   4,184(0,13)
00003092 B907 00F2                          4941          LGHR  15,2
00003096 E3F0 D0C0 0024          000000C0   4942          STG   15,192(0,13)
0000309C 4110 D0B8               000000B8   4943          LA    1,184(0,13)
000030A0 E3F0 C0A0 0004          00002FD0   4944          LG    15,@lit_1531_96 ; rd_kafka_buf_write_i16
000030A6                                    4945 @@gen_label126 DS    0H
000030A6 05EF                               4946          BALR  14,15
000030A8                                    4947 @@gen_label127 DS    0H
000030A8 B904 003F                          4948          LGR   3,15        ; r
                                            4949 * ***
                                            4950 * ***           rd_kafka_buf_write(rkbuf, cbuf, len);
000030AC EB45 D0B8 0024          000000B8   4951          STMG  4,5,184(13)
000030B2 E320 D0C8 0024          000000C8   4952          STG   2,200(0,13)
000030B8 4110 D0B8               000000B8   4953          LA    1,184(0,13)
000030BC E3F0 C0A8 0004          00002FD8   4954          LG    15,@lit_1531_98 ; rd_kafka_buf_write
000030C2                                    4955 @@gen_label128 DS    0H
000030C2 05EF                               4956          BALR  14,15
                                                                                                                           Page  102 
  Active Usings: @REGION_1531_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000030C4                                    4957 @@gen_label129 DS    0H
                                            4958 * ***           free(cbuf);
000030C4 E350 D0B8 0024          000000B8   4959          STG   5,184(0,13)
000030CA 4110 D0B8               000000B8   4960          LA    1,184(0,13)
000030CE E3F0 C0B0 0004          00002FE0   4961          LG    15,@lit_1531_99 ; free
000030D4                                    4962 @@gen_label130 DS    0H
000030D4 05EF                               4963          BALR  14,15
000030D6                                    4964 @@gen_label131 DS    0H
                                            4965 * ***
                                            4966 * ***
                                            4967 * ***
                                            4968 * ***
                                            4969 * ***           return r;
000030D6 B904 00F3                          4970          LGR   15,3
000030DA 47F0 C22A               0000315A   4971          B     @ret_lab_1531
                                            4972 * ***       }
000030DE                                    4973 @L508    DS    0H
                                            4974 * ***
                                            4975 * ***
                                            4976 * ***
                                            4977 * ***
                                            4978 * ***
                                            4979 * ***
                                            4980 * ***       if (!kstr || ((kstr)->len == -1))
000030DE B902 00F2                          4981          LTGR  15,2
000030E2 4780 C1C0               000030F0   4982          BZ    @L512
000030E6 E55C 2000 FFFF          00000000   4983          CHSI  0(2),-1
000030EC 4770 C1C8               000030F8   4984          BNE   @L511
000030F0                                    4985 @L512    DS    0H
                                            4986 * ***           len = 0;
000030F0 A729 0000               00000000   4987          LGHI  2,0         ; 0
000030F4 47F0 C1D2               00003102   4988          B     @L513
                                            4989 * ***       else
000030F8                                    4990 @L511    DS    0H
                                            4991 * ***       {
                                            4992 * ***
                                            4993 * ***           len = ulen + 1;
000030F8 E320 D0A8 0004          000000A8   4994          LG    2,168(0,13) ; ulen
000030FE A72B 0001               00000001   4995          AGHI  2,1
                                            4996 * ***
                                            4997 * ***
                                            4998 * ***
                                            4999 * ***
                                            5000 * ***       }
00003102                                    5001 @L513    DS    0H
                                            5002 * ***       r = rd_kafka_buf_write_uvarint(rkbuf, (uint64_t)len);
00003102 E340 D0B8 0024          000000B8   5003          STG   4,184(0,13)
00003108 E320 D0C0 0024          000000C0   5004          STG   2,192(0,13)
0000310E 4110 D0B8               000000B8   5005          LA    1,184(0,13)
00003112 E3F0 C0B8 0004          00002FE8   5006          LG    15,@lit_1531_101 ; rd_kafka_buf_write_uvarint
00003118                                    5007 @@gen_label134 DS    0H
00003118 05EF                               5008          BALR  14,15
                                                                                                                           Page  103 
  Active Usings: @REGION_1531_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000311A                                    5009 @@gen_label135 DS    0H
0000311A B904 003F                          5010          LGR   3,15        ; r
                                            5011 * ***       if (len > 1)
0000311E C22E 0000 0001                     5012          CLGFI 2,X'00000001'
00003124 47D0 C214               00003144   5013          BNH   @L514
                                            5014 * ***
                                            5015 * ***           rd_kafka_buf_write(rkbuf, cbuf, len - 1);
00003128 EB45 D0B8 0024          000000B8   5016          STMG  4,5,184(13)
0000312E A72B FFFF               0000FFFF   5017          AGHI  2,-1
00003132 E320 D0C8 0024          000000C8   5018          STG   2,200(0,13)
00003138 4110 D0B8               000000B8   5019          LA    1,184(0,13)
0000313C E3F0 C0A8 0004          00002FD8   5020          LG    15,@lit_1531_98 ; rd_kafka_buf_write
00003142                                    5021 @@gen_label137 DS    0H
00003142 05EF                               5022          BALR  14,15
00003144                                    5023 @@gen_label138 DS    0H
00003144                                    5024 @L514    DS    0H
                                            5025 * ***       free(cbuf);
00003144 E350 D0B8 0024          000000B8   5026          STG   5,184(0,13)
0000314A 4110 D0B8               000000B8   5027          LA    1,184(0,13)
0000314E E3F0 C0B0 0004          00002FE0   5028          LG    15,@lit_1531_99 ; free
00003154                                    5029 @@gen_label139 DS    0H
00003154 05EF                               5030          BALR  14,15
00003156                                    5031 @@gen_label140 DS    0H
                                            5032 * ***
                                            5033 * ***
                                            5034 * ***
                                            5035 * ***       return r;
00003156 B904 00F3                          5036          LGR   15,3
                                            5037 * ***   }
0000315A                                    5038 @ret_lab_1531 DS 0H
                                            5039 * * **** Start of Epilogue
                                            5040          DCCEPIL
0000315A                                    5041+         ds 0h                                                          01-DCCEP
                                            5042+* Epilog
0000315A D707 D088 D088 00000088 00000088   5043+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003160 E3D0 D080 0004          00000080   5044+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003166 E3C0 D090 0004          00000090   5045+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000316C E3B0 C018 0004          00000018   5046+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003172 E3C0 B010 0021          00000010   5047+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003178 E3E0 D008 0004          00000008   5048+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000317E EB1C D020 0004          00000020   5049+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003184 078E                               5050+         bcr 8,14                if same dsab, just return              01-DCCEP
00003186 E3F0 D010 0024          00000010   5051+         stg 15,16(0,13)         save return code                       01-DCCEP
0000318C E300 D018 0024          00000018   5052+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003192 E3F0 D090 0004          00000090   5053+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003198 E3F0 F018 0004          00000018   5054+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000319E 47F0 F040               00000040   5055+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5056+* End of Epilog
                                            5057 * * **** End of Epilogue
                                            5058          DROP  12
                                            5059 *
                                            5060 *   DSECT for automatic variables in "rd_kafka_buf_write_kstr"
                                                                                                                           Page  104 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5061 *      (FUNCTION #1531)
                                            5062 *
00000000                00000000 000000B8   5063 @AUTO#rd_kafka_buf_write_kstr DSECT
00000000                                    5064          DS    XL168
000000A8                                    5065 rd_kafka_buf_write_kstr#ulen#0 DS 8XL1 ; ulen
000000B0                000000B0 000000A8   5066          ORG   @AUTO#rd_kafka_buf_write_kstr+168
000000A8                                    5067 rd_kafka_buf_write_kstr#r#0 DS 8XL1 ; r
000000B0                000000B0 000000A8   5068          ORG   @AUTO#rd_kafka_buf_write_kstr+168
000000A8                                    5069 rd_kafka_buf_write_kstr#len#0 DS 8XL1 ; len
000000B0                000000B0 000000B0   5070          ORG   @AUTO#rd_kafka_buf_write_kstr+176
000000B0                                    5071 rd_kafka_buf_write_kstr#alen#0 DS 8XL1 ; alen
                                            5072 *
000031A2                00000000 00007AB2   5073 @CODE    CSECT
                                            5074 *
                                            5075 *
                                            5076 *
                                            5077 * ....... start of rd_kafka_buf_write_bytes
000031A2                                    5078 @LNAME1536 DS  0H
000031A2 00000018                           5079          DC    X'00000018'
000031A6 99846D9281869281                   5080          DC    C'rd_kafka_buf_write_bytes'
000031BE 00                                 5081          DC    X'00'
                                            5082 rd_kafka_buf_write_bytes DCCPRLG CINDEX=1536,BASER=12,FRAME=200,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1536
                                            5083          macro
                                            5084          dccextrn &m
                                            5085          gblc    &$dccext(1000)
                                            5086          gbla    &$dccexti
                                            5087          lcla    &i
                                            5088 &$dccext(&$dccexti+1) setc    '&m'
                                            5089 &i       seta    1
                                            5090 .loop    aif    (&i gt &$dccexti).around
                                            5091          aif    ('&$dccext(&i)' eq '&m').getout
                                            5092 &i       seta    &i+1
                                            5093          ago     .loop
                                            5094 .around  anop
                                            5095 &$dccexti seta &$dccexti+1
                                            5096          extrn  &m
                                            5097 .getout  anop
                                            5098          mend
000031C0                                    5099+$eye0134    ds    0d                                                    02-DCCCA
000031C0 C4C3C3                             5100+         dc cl3'DCC'                                                    02-DCCCA
000031C3 01                                 5101+         dc xl1'01' format one                                          02-DCCCA
000031C4 00000000                           5102+         dc a(0)                                                        02-DCCCA
000031C8 0000000000003232                   5103+         dc ad(@PER_1536)                                               02-DCCCA
000031D0 00000000000000C8                   5104+         dc ad(200)                                                     02-DCCCA
000031D8 0000000000000000                   5105+         dc ad(0)                                                       02-DCCCA
000031E0 0000000000001000                   5106+         dc ad(4096)                                                    02-DCCCA
000031E8 20                                 5107+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000031E9 03                                 5108+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000031EA 03                                 5109+         dc al1(3)                                                      02-DCCCA
000031EB 08                                 5110+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000031EC 00                                 5111+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page  105 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000031ED 000000                             5112+         dc al3(0)                                                      02-DCCCA
000031F0 00000000000031A2                   5113+         dc ad(@LNAME1536)                                              02-DCCCA
000031F8                                    5114+         ds 0d                                                          02-DCCCA
000031F8 00000000000031C0                   5115+         dc ad($eye0134)                                                02-DCCCA
00003200 0000000000000000                   5116+         dc ad(0)                                                       02-DCCCA
00003208                                    5117+         ds    0d                                                       01-DCCPR
00003208                                    5118+rd_kafka_buf_write_bytes ds 0d                                          01-DCCPR
00003208                                    5119+@REGION_1536_1 ds 0h                                                    01-DCCPR
00003208 EBEC D008 0024          00000008   5120+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000320E E3E0 D088 0004          00000088   5121+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003214 E3C0 D090 0004          00000090   5122+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000321A B904 002E                          5123+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000321E E3B0 C018 0004          00000018   5124+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003224 A7EB 00C8               000000C8   5125+         aghi  14,200              increase by frame size               01-DCCPR
00003228 E3E0 C020 0021          00000020   5126+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000322E 4720 B020               00000020   5127+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003232                                    5128+@PER_1536 ds   0h                                                       01-DCCPR
00003232 EBDE 2080 0024          00000080   5129+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003238 E3C0 2090 0024          00000090   5130+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000323E B904 00D2                          5131+         lgr   13,2                set real frame pointer               01-DCCPR
00003242 B904 00CF                          5132+         lgr   12,15               set base reg                         01-DCCPR
                        00003208            5133+         using @REGION_1536_1,12                                        01-DCCPR
00003246 B904 0051                          5134          LGR   5,1         ; ptr to parm area
                                            5135 * ******* End of Prologue
                                            5136 * *
0000324A E330 5008 0004          00000008   5137          LG    3,8(0,5)    ; payload
00003250 E320 5010 0004          00000010   5138          LG    2,16(0,5)   ; size
                                            5139 * ***       size_t r;
                                            5140 * ***       if (!payload)
00003256 B902 00F3                          5141          LTGR  15,3
0000325A 4770 C05A               00003262   5142          BNZ   @L535
                                            5143 * ***           size = -1;
0000325E A729 FFFF               0000FFFF   5144          LGHI  2,-1        ; -1
00003262                                    5145 @L535    DS    0H
                                            5146 * ***       r = rd_kafka_buf_write_i32(rkbuf, (int32_t)size);
00003262 E3F0 5000 0004          00000000   5147          LG    15,0(0,5)   ; rkbuf
00003268 E3F0 D0B0 0024          000000B0   5148          STG   15,176(0,13)
0000326E B914 00F2                          5149          LGFR  15,2
00003272 E3F0 D0B8 0024          000000B8   5150          STG   15,184(0,13)
00003278 4110 D0B0               000000B0   5151          LA    1,176(0,13)
0000327C E3F0 C100 0004          00003308   5152          LG    15,@lit_1536_106 ; rd_kafka_buf_write_i32
00003282                                    5153 @@gen_label142 DS    0H
00003282 05EF                               5154          BALR  14,15
00003284                                    5155 @@gen_label143 DS    0H
00003284 B904 004F                          5156          LGR   4,15
                                            5157 * ***       if (payload)
00003288 B902 00F3                          5158          LTGR  15,3
0000328C 4780 C0AC               000032B4   5159          BZ    @L536
                                            5160 * ***           rd_kafka_buf_write(rkbuf, payload, size);
00003290 E3F0 5000 0004          00000000   5161          LG    15,0(0,5)   ; rkbuf
00003296 E3F0 D0B0 0024          000000B0   5162          STG   15,176(0,13)
0000329C E330 D0B8 0024          000000B8   5163          STG   3,184(0,13)
                                                                                                                           Page  106 
  Active Usings: @REGION_1536_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000032A2 E320 D0C0 0024          000000C0   5164          STG   2,192(0,13)
000032A8 4110 D0B0               000000B0   5165          LA    1,176(0,13)
000032AC E3F0 C108 0004          00003310   5166          LG    15,@lit_1536_107 ; rd_kafka_buf_write
000032B2                                    5167 @@gen_label145 DS    0H
000032B2 05EF                               5168          BALR  14,15
000032B4                                    5169 @@gen_label146 DS    0H
000032B4                                    5170 @L536    DS    0H
                                            5171 * ***       return r;
000032B4 B904 00F4                          5172          LGR   15,4
                                            5173 * ***   }
                                            5174 * * **** Start of Epilogue
                                            5175          DCCEPIL
000032B8                                    5176+         ds 0h                                                          01-DCCEP
                                            5177+* Epilog
000032B8 D707 D088 D088 00000088 00000088   5178+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000032BE E3D0 D080 0004          00000080   5179+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000032C4 E3C0 D090 0004          00000090   5180+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000032CA E3B0 C018 0004          00000018   5181+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000032D0 E3C0 B010 0021          00000010   5182+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000032D6 E3E0 D008 0004          00000008   5183+         lg  14,8(0,13)          load up return address                 01-DCCEP
000032DC EB1C D020 0004          00000020   5184+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000032E2 078E                               5185+         bcr 8,14                if same dsab, just return              01-DCCEP
000032E4 E3F0 D010 0024          00000010   5186+         stg 15,16(0,13)         save return code                       01-DCCEP
000032EA E300 D018 0024          00000018   5187+         stg 0,24(0,13)          save more return code                  01-DCCEP
000032F0 E3F0 D090 0004          00000090   5188+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000032F6 E3F0 F018 0004          00000018   5189+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000032FC 47F0 F040               00000040   5190+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5191+* End of Epilog
                                            5192 * * **** End of Epilogue
00003300                                    5193          DS    0D
00003300 000000C8                           5194 @FRAMESIZE_1536 DC F'200'
00003304 00000000
00003308 0000000000002668                   5195 @lit_1536_106 DC AD(rd_kafka_buf_write_i32)
00003310 0000000000001FA8                   5196 @lit_1536_107 DC AD(rd_kafka_buf_write)
                                            5197          DROP  12
                                            5198 *
                                            5199 *   DSECT for automatic variables in "rd_kafka_buf_write_bytes"
                                            5200 *      (FUNCTION #1536)
                                            5201 *
00000000                00000000 000000B0   5202 @AUTO#rd_kafka_buf_write_bytes DSECT
00000000                                    5203          DS    XL168
000000A8                                    5204 rd_kafka_buf_write_bytes#r#0 DS 8XL1 ; r
                                            5205 *
00003318                00000000 00007AB2   5206 @CODE    CSECT
                                            5207 *
                                            5208 *
                                            5209 *
                                            5210 * ....... start of rd_kafka_buf_crc_init
00003318                                    5211 @LNAME1539 DS  0H
00003318 00000015                           5212          DC    X'00000015'
0000331C 99846D9281869281                   5213          DC    C'rd_kafka_buf_crc_init'
00003331 00                                 5214          DC    X'00'
                                                                                                                           Page  107 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5215 rd_kafka_buf_crc_init DCCPRLG CINDEX=1539,BASER=12,FRAME=208,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1539
                                            5216          macro
                                            5217          dccextrn &m
                                            5218          gblc    &$dccext(1000)
                                            5219          gbla    &$dccexti
                                            5220          lcla    &i
                                            5221 &$dccext(&$dccexti+1) setc    '&m'
                                            5222 &i       seta    1
                                            5223 .loop    aif    (&i gt &$dccexti).around
                                            5224          aif    ('&$dccext(&i)' eq '&m').getout
                                            5225 &i       seta    &i+1
                                            5226          ago     .loop
                                            5227 .around  anop
                                            5228 &$dccexti seta &$dccexti+1
                                            5229          extrn  &m
                                            5230 .getout  anop
                                            5231          mend
00003338                                    5232+$eye0137    ds    0d                                                    02-DCCCA
00003338 C4C3C3                             5233+         dc cl3'DCC'                                                    02-DCCCA
0000333B 01                                 5234+         dc xl1'01' format one                                          02-DCCCA
0000333C 00000000                           5235+         dc a(0)                                                        02-DCCCA
00003340 00000000000033AA                   5236+         dc ad(@PER_1539)                                               02-DCCCA
00003348 00000000000000D0                   5237+         dc ad(208)                                                     02-DCCCA
00003350 0000000000000000                   5238+         dc ad(0)                                                       02-DCCCA
00003358 0000000000001000                   5239+         dc ad(4096)                                                    02-DCCCA
00003360 20                                 5240+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003361 03                                 5241+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003362 03                                 5242+         dc al1(3)                                                      02-DCCCA
00003363 08                                 5243+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003364 00                                 5244+         dc bl.8'00000000'                                              02-DCCCA
00003365 000000                             5245+         dc al3(0)                                                      02-DCCCA
00003368 0000000000003318                   5246+         dc ad(@LNAME1539)                                              02-DCCCA
00003370                                    5247+         ds 0d                                                          02-DCCCA
00003370 0000000000003338                   5248+         dc ad($eye0137)                                                02-DCCCA
00003378 0000000000000000                   5249+         dc ad(0)                                                       02-DCCCA
00003380                                    5250+         ds    0d                                                       01-DCCPR
00003380                                    5251+rd_kafka_buf_crc_init ds 0d                                             01-DCCPR
00003380                                    5252+@REGION_1539_1 ds 0h                                                    01-DCCPR
00003380 EBEC D008 0024          00000008   5253+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003386 E3E0 D088 0004          00000088   5254+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000338C E3C0 D090 0004          00000090   5255+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003392 B904 002E                          5256+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003396 E3B0 C018 0004          00000018   5257+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000339C A7EB 00D0               000000D0   5258+         aghi  14,208              increase by frame size               01-DCCPR
000033A0 E3E0 C020 0021          00000020   5259+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000033A6 4720 B020               00000020   5260+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000033AA                                    5261+@PER_1539 ds   0h                                                       01-DCCPR
000033AA EBDE 2080 0024          00000080   5262+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000033B0 E3C0 2090 0024          00000090   5263+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000033B6 B904 00D2                          5264+         lgr   13,2                set real frame pointer               01-DCCPR
000033BA B904 00CF                          5265+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page  108 
  Active Usings: @REGION_1539_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00003380            5266+         using @REGION_1539_1,12                                        01-DCCPR
                                            5267 * ******* End of Prologue
                                            5268 * *
                                            5269 * ***       do { if (((!(!(rkbuf->rkbuf_flags & 0x4))))) rd_kafka_cras\
                                            5270 * h("C:\\asgkafka\\librdkafka\\src\\rdkafka_buf.h",1351, __FUNCTION__,\
                                            5271 *  (((void *)0)), "assert: " "!(rkbuf->rkbuf_flags & RD_KAFKA_OP_F_CRC\
                                            5272 * )"); } while (0);
000033BE E320 1000 0004          00000000   5273          LG    2,0(0,1)    ; rkbuf
000033C4                                    5274 @L537    DS    0H
000033C4 9104 2023      00000023 00000004   5275          TM    35(2),4
000033C8 4780 C08E               0000340E   5276          BZ    @L540
000033CC E3F0 C108 0004          00003488   5277          LG    15,@lit_1539_109
000033D2 4110 F100               00000100   5278          LA    1,256(0,15)
000033D6 E310 D0A8 0024          000000A8   5279          STG   1,168(0,13)
000033DC E548 D0B0 0547          000000B0   5280          MVGHI 176(13),1351
000033E2 E310 C100 0004          00003480   5281          LG    1,@lit_1539_110
000033E8 4110 1178               00000178   5282          LA    1,376(0,1)
000033EC E310 D0B8 0024          000000B8   5283          STG   1,184(0,13)
000033F2 D707 D0C0 D0C0 000000C0 000000C0   5284          XC    192(8,13),192(13)
000033F8 41F0 F12A               0000012A   5285          LA    15,298(0,15)
000033FC E3F0 D0C8 0024          000000C8   5286          STG   15,200(0,13)
00003402 4110 D0A8               000000A8   5287          LA    1,168(0,13)
00003406 E3F0 C0F8 0004          00003478   5288          LG    15,@lit_1539_111 ; rd_kafka_crash
0000340C                                    5289 @@gen_label148 DS    0H
0000340C 05EF                               5290          BALR  14,15
0000340E                                    5291 @@gen_label149 DS    0H
0000340E                                    5292 @L540    DS    0H
                                            5293 * ***       rkbuf->rkbuf_flags |= 0x4;
0000340E 58F0 2020               00000020   5294          L     15,32(0,2)
00003412 A5FB 0004               00000004   5295          OILL  15,4
00003416 50F0 2020               00000020   5296          ST    15,32(0,2)
                                            5297 * ***       rkbuf->rkbuf_crc = rd_crc32_init();
0000341A E3F0 C110 0004          00003490   5298          LG    15,@lit_1539_112 ; rd_crc32_init
00003420                                    5299 @@gen_label150 DS    0H
00003420 05EF                               5300          BALR  14,15
00003422                                    5301 @@gen_label151 DS    0H
00003422 50F0 20B0               000000B0   5302          ST    15,176(0,2)
                                            5303 * ***   }
00003426                                    5304 @ret_lab_1539 DS 0H
                                            5305 * * **** Start of Epilogue
                                            5306          DCCEPIL
00003426                                    5307+         ds 0h                                                          01-DCCEP
                                            5308+* Epilog
00003426 D707 D088 D088 00000088 00000088   5309+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000342C E3D0 D080 0004          00000080   5310+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003432 E3C0 D090 0004          00000090   5311+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003438 E3B0 C018 0004          00000018   5312+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000343E E3C0 B010 0021          00000010   5313+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003444 E3E0 D008 0004          00000008   5314+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000344A EB1C D020 0004          00000020   5315+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003450 078E                               5316+         bcr 8,14                if same dsab, just return              01-DCCEP
00003452 E3F0 D010 0024          00000010   5317+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page  109 
  Active Usings: @REGION_1539_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003458 E300 D018 0024          00000018   5318+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000345E E3F0 D090 0004          00000090   5319+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003464 E3F0 F018 0004          00000018   5320+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000346A 47F0 F040               00000040   5321+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5322+* End of Epilog
                                            5323 * * **** End of Epilogue
00003470                                    5324          DS    0D
00003470 000000D0                           5325 @FRAMESIZE_1539 DC F'208'
00003474 00000000
00003478 0000000000000000                   5326 @lit_1539_111 DC AD(rd_kafka_crash)
00003480 0000000000007AB8                   5327 @lit_1539_110 DC AD(@DATA)
00003488 0000000000007DEC                   5328 @lit_1539_109 DC AD(@strings@)
00003490 0000000000001CC0                   5329 @lit_1539_112 DC AD(rd_crc32_init)
                                            5330          DROP  12
                                            5331 *
                                            5332 *   DSECT for automatic variables in "rd_kafka_buf_crc_init"
                                            5333 *      (FUNCTION #1539)
                                            5334 *
00000000                00000000 000000A8   5335 @AUTO#rd_kafka_buf_crc_init DSECT
00000000                                    5336          DS    XL168
                                            5337 *
00003498                00000000 00007AB2   5338 @CODE    CSECT
                                            5339 *
                                            5340 *
                                            5341 *
                                            5342 * ....... start of rd_kafka_buf_crc_finalize
00003498                                    5343 @LNAME1540 DS  0H
00003498 00000019                           5344          DC    X'00000019'
0000349C 99846D9281869281                   5345          DC    C'rd_kafka_buf_crc_finalize'
000034B5 00                                 5346          DC    X'00'
                                            5347 rd_kafka_buf_crc_finalize DCCPRLG CINDEX=1540,BASER=12,FRAME=176,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1540
                                            5348          macro
                                            5349          dccextrn &m
                                            5350          gblc    &$dccext(1000)
                                            5351          gbla    &$dccexti
                                            5352          lcla    &i
                                            5353 &$dccext(&$dccexti+1) setc    '&m'
                                            5354 &i       seta    1
                                            5355 .loop    aif    (&i gt &$dccexti).around
                                            5356          aif    ('&$dccext(&i)' eq '&m').getout
                                            5357 &i       seta    &i+1
                                            5358          ago     .loop
                                            5359 .around  anop
                                            5360 &$dccexti seta &$dccexti+1
                                            5361          extrn  &m
                                            5362 .getout  anop
                                            5363          mend
000034B8                                    5364+$eye0140    ds    0d                                                    02-DCCCA
000034B8 C4C3C3                             5365+         dc cl3'DCC'                                                    02-DCCCA
000034BB 01                                 5366+         dc xl1'01' format one                                          02-DCCCA
000034BC 00000000                           5367+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page  110 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000034C0 000000000000352A                   5368+         dc ad(@PER_1540)                                               02-DCCCA
000034C8 00000000000000B0                   5369+         dc ad(176)                                                     02-DCCCA
000034D0 0000000000000000                   5370+         dc ad(0)                                                       02-DCCCA
000034D8 0000000000001000                   5371+         dc ad(4096)                                                    02-DCCCA
000034E0 20                                 5372+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000034E1 03                                 5373+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000034E2 03                                 5374+         dc al1(3)                                                      02-DCCCA
000034E3 08                                 5375+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000034E4 00                                 5376+         dc bl.8'00000000'                                              02-DCCCA
000034E5 000000                             5377+         dc al3(0)                                                      02-DCCCA
000034E8 0000000000003498                   5378+         dc ad(@LNAME1540)                                              02-DCCCA
000034F0                                    5379+         ds 0d                                                          02-DCCCA
000034F0 00000000000034B8                   5380+         dc ad($eye0140)                                                02-DCCCA
000034F8 0000000000000000                   5381+         dc ad(0)                                                       02-DCCCA
00003500                                    5382+         ds    0d                                                       01-DCCPR
00003500                                    5383+rd_kafka_buf_crc_finalize ds 0d                                         01-DCCPR
00003500                                    5384+@REGION_1540_1 ds 0h                                                    01-DCCPR
00003500 EBEC D008 0024          00000008   5385+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003506 E3E0 D088 0004          00000088   5386+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000350C E3C0 D090 0004          00000090   5387+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003512 B904 002E                          5388+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003516 E3B0 C018 0004          00000018   5389+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000351C A7EB 00B0               000000B0   5390+         aghi  14,176              increase by frame size               01-DCCPR
00003520 E3E0 C020 0021          00000020   5391+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003526 4720 B020               00000020   5392+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000352A                                    5393+@PER_1540 ds   0h                                                       01-DCCPR
0000352A EBDE 2080 0024          00000080   5394+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003530 E3C0 2090 0024          00000090   5395+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003536 B904 00D2                          5396+         lgr   13,2                set real frame pointer               01-DCCPR
0000353A B904 00CF                          5397+         lgr   12,15               set base reg                         01-DCCPR
                        00003500            5398+         using @REGION_1540_1,12                                        01-DCCPR
                                            5399 * ******* End of Prologue
                                            5400 * *
                                            5401 * ***       rkbuf->rkbuf_flags &= ~0x4;
0000353E E3F0 1000 0004          00000000   5402          LG    15,0(0,1)   ; rkbuf
00003544 5810 F020               00000020   5403          L     1,32(0,15)
00003548 A517 FFFB               0000FFFB   5404          NILL  1,65531
0000354C 5010 F020               00000020   5405          ST    1,32(0,15)
                                            5406 * ***       return rd_crc32_finalize(rkbuf->rkbuf_crc);
00003550 E3F0 F0B0 0016          000000B0   5407          LLGF  15,176(0,15)
00003556 E3F0 D0A8 0024          000000A8   5408          STG   15,168(0,13)
0000355C 4110 D0A8               000000A8   5409          LA    1,168(0,13)
00003560 E3F0 C0C0 0004          000035C0   5410          LG    15,@lit_1540_114 ; rd_crc32_finalize
00003566                                    5411 @@gen_label152 DS    0H
00003566 05EF                               5412          BALR  14,15
00003568                                    5413 @@gen_label153 DS    0H
00003568 B916 00FF                          5414          LLGFR 15,15
                                            5415 * ***   }
                                            5416 * * **** Start of Epilogue
                                            5417          DCCEPIL
0000356C                                    5418+         ds 0h                                                          01-DCCEP
                                            5419+* Epilog
                                                                                                                           Page  111 
  Active Usings: @REGION_1540_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000356C D707 D088 D088 00000088 00000088   5420+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003572 E3D0 D080 0004          00000080   5421+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003578 E3C0 D090 0004          00000090   5422+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000357E E3B0 C018 0004          00000018   5423+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003584 E3C0 B010 0021          00000010   5424+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000358A E3E0 D008 0004          00000008   5425+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003590 EB1C D020 0004          00000020   5426+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003596 078E                               5427+         bcr 8,14                if same dsab, just return              01-DCCEP
00003598 E3F0 D010 0024          00000010   5428+         stg 15,16(0,13)         save return code                       01-DCCEP
0000359E E300 D018 0024          00000018   5429+         stg 0,24(0,13)          save more return code                  01-DCCEP
000035A4 E3F0 D090 0004          00000090   5430+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000035AA E3F0 F018 0004          00000018   5431+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000035B0 47F0 F040               00000040   5432+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5433+* End of Epilog
                                            5434 * * **** End of Epilogue
000035B8                                    5435          DS    0D
000035B8 000000B0                           5436 @FRAMESIZE_1540 DC F'176'
000035BC 00000000
000035C0 0000000000001E90                   5437 @lit_1540_114 DC AD(rd_crc32_finalize)
                                            5438          DROP  12
                                            5439 *
                                            5440 *   DSECT for automatic variables in "rd_kafka_buf_crc_finalize"
                                            5441 *      (FUNCTION #1540)
                                            5442 *
00000000                00000000 000000A8   5443 @AUTO#rd_kafka_buf_crc_finalize DSECT
00000000                                    5444          DS    XL168
                                            5445 *
000035C8                00000000 00007AB2   5446 @CODE    CSECT
                                            5447 *
                                            5448 *
                                            5449 *
                                            5450 * ....... start of rd_kafka_compression2str
000035C8                                    5451 @LNAME1559 DS  0H
000035C8 00000018                           5452          DC    X'00000018'
000035CC 99846D9281869281                   5453          DC    C'rd_kafka_compression2str'
000035E4 00                                 5454          DC    X'00'
                                            5455 rd_kafka_compression2str DCCPRLG CINDEX=1559,BASER=12,FRAME=200,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1559
                                            5456          macro
                                            5457          dccextrn &m
                                            5458          gblc    &$dccext(1000)
                                            5459          gbla    &$dccexti
                                            5460          lcla    &i
                                            5461 &$dccext(&$dccexti+1) setc    '&m'
                                            5462 &i       seta    1
                                            5463 .loop    aif    (&i gt &$dccexti).around
                                            5464          aif    ('&$dccext(&i)' eq '&m').getout
                                            5465 &i       seta    &i+1
                                            5466          ago     .loop
                                            5467 .around  anop
                                            5468 &$dccexti seta &$dccexti+1
                                            5469          extrn  &m
                                                                                                                           Page  112 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5470 .getout  anop
                                            5471          mend
000035E8                                    5472+$eye0143    ds    0d                                                    02-DCCCA
000035E8 C4C3C3                             5473+         dc cl3'DCC'                                                    02-DCCCA
000035EB 01                                 5474+         dc xl1'01' format one                                          02-DCCCA
000035EC 00000000                           5475+         dc a(0)                                                        02-DCCCA
000035F0 000000000000365A                   5476+         dc ad(@PER_1559)                                               02-DCCCA
000035F8 00000000000000C8                   5477+         dc ad(200)                                                     02-DCCCA
00003600 0000000000000000                   5478+         dc ad(0)                                                       02-DCCCA
00003608 0000000000001000                   5479+         dc ad(4096)                                                    02-DCCCA
00003610 20                                 5480+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003611 03                                 5481+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003612 03                                 5482+         dc al1(3)                                                      02-DCCCA
00003613 08                                 5483+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003614 00                                 5484+         dc bl.8'00000000'                                              02-DCCCA
00003615 000000                             5485+         dc al3(0)                                                      02-DCCCA
00003618 00000000000035C8                   5486+         dc ad(@LNAME1559)                                              02-DCCCA
00003620                                    5487+         ds 0d                                                          02-DCCCA
00003620 00000000000035E8                   5488+         dc ad($eye0143)                                                02-DCCCA
00003628 0000000000000000                   5489+         dc ad(0)                                                       02-DCCCA
00003630                                    5490+         ds    0d                                                       01-DCCPR
00003630                                    5491+rd_kafka_compression2str ds 0d                                          01-DCCPR
00003630                                    5492+@REGION_1559_1 ds 0h                                                    01-DCCPR
00003630 EBEC D008 0024          00000008   5493+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003636 E3E0 D088 0004          00000088   5494+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000363C E3C0 D090 0004          00000090   5495+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003642 B904 002E                          5496+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003646 E3B0 C018 0004          00000018   5497+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000364C A7EB 00C8               000000C8   5498+         aghi  14,200              increase by frame size               01-DCCPR
00003650 E3E0 C020 0021          00000020   5499+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003656 4720 B020               00000020   5500+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000365A                                    5501+@PER_1559 ds   0h                                                       01-DCCPR
0000365A EBDE 2080 0024          00000080   5502+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003660 E3C0 2090 0024          00000090   5503+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003666 B904 00D2                          5504+         lgr   13,2                set real frame pointer               01-DCCPR
0000366A B904 00CF                          5505+         lgr   12,15               set base reg                         01-DCCPR
                        00003630            5506+         using @REGION_1559_1,12                                        01-DCCPR
                                            5507          DCCPRV REG=2      ; Get PRV from DVT
0000366E E320 B008 0004          00000008   5508+         LG 2,8(0,11)                                                   01-DCCPR
                                            5509 * ******* End of Prologue
                                            5510 * *
                                            5511 * ***           static const char *names[RD_KAFKA_COMPRESSION_NUM] = {
                                            5512 * ***                   [RD_KAFKA_COMPRESSION_NONE] = "none",
                                            5513 * ***                   [RD_KAFKA_COMPRESSION_GZIP] = "gzip",
                                            5514 * ***                   [RD_KAFKA_COMPRESSION_SNAPPY] = "snappy",
                                            5515 * ***                   [RD_KAFKA_COMPRESSION_LZ4] = "lz4",
                                            5516 * ***                   [RD_KAFKA_COMPRESSION_ZSTD] = "zstd",
00003674 E3F0 1004 0012          00000004   5517          LT    15,4(0,1)   ; compr
                                            5518 * ***                   [RD_KAFKA_COMPRESSION_INHERIT] = "inherit"
                                            5519 * ***           static  char ret[32];
                                            5520 * ***
                                            5521 * ***           if ((int)compr < 0 || compr >= RD_KAFKA_COMPRESSION_NU\
                                                                                                                           Page  113 
  Active Usings: @REGION_1559_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5522 * M) {
0000367A 4740 C056               00003686   5523          BL    @L544
0000367E A7FE 0006               00000006   5524          CHI   15,6
00003682 4740 C0BC               000036EC   5525          BL    @L543
00003686                                    5526 @L544    DS    0H
                                            5527 * ***                   snprintf(ret, sizeof(ret), "codec0x%x?", (int)\
                                            5528 * compr);
00003686 E310 C0B8 0014          000036E8   5529          LGF   1,@lit_1559_116
0000368C 4121 2000               00000000   5530          LA    2,0(1,2)
00003690 4110 24F0               000004F0   5531          LA    1,1264(0,2)
00003694 E310 D0A8 0024          000000A8   5532          STG   1,168(0,13)
0000369A E548 D0B0 0020          000000B0   5533          MVGHI 176(13),32
000036A0 E310 C0B0 0004          000036E0   5534          LG    1,@lit_1559_117
000036A6 4110 115C               0000015C   5535          LA    1,348(0,1)
000036AA E310 D0B8 0024          000000B8   5536          STG   1,184(0,13)
000036B0 B914 00FF                          5537          LGFR  15,15
000036B4 E3F0 D0C0 0024          000000C0   5538          STG   15,192(0,13)
000036BA 4110 D0A8               000000A8   5539          LA    1,168(0,13)
000036BE E3F0 C0A8 0004          000036D8   5540          LG    15,@lit_1559_118 ; snprintf
000036C4                                    5541 @@gen_label156 DS    0H
000036C4 05EF                               5542          BALR  14,15
000036C6                                    5543 @@gen_label157 DS    0H
                                            5544 * ***
                                            5545 * ***                   return ret;
000036C6 41F0 24F0               000004F0   5546          LA    15,1264(0,2)
000036CA 47F0 C0D6               00003706   5547          B     @ret_lab_1559
000036D0                                    5548          DS    0D
000036D0 000000C8                           5549 @FRAMESIZE_1559 DC F'200'
000036D4 00000000
000036D8 0000000000000000                   5550 @lit_1559_118 DC AD(snprintf)
000036E0 0000000000007DEC                   5551 @lit_1559_117 DC AD(@strings@)
000036E8 00000000                           5552 @lit_1559_116 DC Q(@@STATIC)
                                            5553 * ***           }
000036EC                                    5554 @L543    DS    0H
                                            5555 * ***
                                            5556 * ***           return names[compr];
000036EC B914 00FF                          5557          LGFR  15,15
000036F0 E310 C0B8 0014          000036E8   5558          LGF   1,@lit_1559_116
000036F6 4111 2000               00000000   5559          LA    1,0(1,2)
000036FA EBFF 0003 000D          00000003   5560          SLLG  15,15,3(0)  ; *0x8
00003700 E3FF 14C0 0004          000004C0   5561          LG    15,1216(15,1)
                                            5562 * ***   }
00003706                                    5563 @ret_lab_1559 DS 0H
                                            5564 * * **** Start of Epilogue
                                            5565          DCCEPIL
00003706                                    5566+         ds 0h                                                          01-DCCEP
                                            5567+* Epilog
00003706 D707 D088 D088 00000088 00000088   5568+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000370C E3D0 D080 0004          00000080   5569+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003712 E3C0 D090 0004          00000090   5570+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003718 E3B0 C018 0004          00000018   5571+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000371E E3C0 B010 0021          00000010   5572+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  114 
  Active Usings: @REGION_1559_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003724 E3E0 D008 0004          00000008   5573+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000372A EB1C D020 0004          00000020   5574+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003730 078E                               5575+         bcr 8,14                if same dsab, just return              01-DCCEP
00003732 E3F0 D010 0024          00000010   5576+         stg 15,16(0,13)         save return code                       01-DCCEP
00003738 E300 D018 0024          00000018   5577+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000373E E3F0 D090 0004          00000090   5578+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003744 E3F0 F018 0004          00000018   5579+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000374A 47F0 F040               00000040   5580+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5581+* End of Epilog
                                            5582 * * **** End of Epilogue
                                            5583          DROP  12
                                            5584 *
                                            5585 *   DSECT for automatic variables in "rd_kafka_compression2str"
                                            5586 *      (FUNCTION #1559)
                                            5587 *
00000000                00000000 000000A8   5588 @AUTO#rd_kafka_compression2str DSECT
00000000                                    5589          DS    XL168
                                            5590 *
0000374E                00000000 00007AB2   5591 @CODE    CSECT
                                            5592 *
                                            5593 *
                                            5594 *
                                            5595 * ....... start of rd_kafka_msgset_writer_select_MsgVersion
0000374E                                    5596 @LNAME1938 DS  0H
0000374E 00000028                           5597          DC    X'00000028'
00003752 99846D9281869281                   5598          DC    C'rd_kafka_msgset_writer_select_Ms'
00003772 87E58599A2899695                   5599          DC    C'gVersion'
0000377A 00                                 5600          DC    X'00'
                                            5601 rd_kafka_msgset_writer_select_$Msg$Version DCCPRLG CINDEX=1938,BASER=12*
                                                                ,FRAME=528,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1938
                                            5602          macro
                                            5603          dccextrn &m
                                            5604          gblc    &$dccext(1000)
                                            5605          gbla    &$dccexti
                                            5606          lcla    &i
                                            5607 &$dccext(&$dccexti+1) setc    '&m'
                                            5608 &i       seta    1
                                            5609 .loop    aif    (&i gt &$dccexti).around
                                            5610          aif    ('&$dccext(&i)' eq '&m').getout
                                            5611 &i       seta    &i+1
                                            5612          ago     .loop
                                            5613 .around  anop
                                            5614 &$dccexti seta &$dccexti+1
                                            5615          extrn  &m
                                            5616 .getout  anop
                                            5617          mend
00003780                                    5618+$eye0147    ds    0d                                                    02-DCCCA
00003780 C4C3C3                             5619+         dc cl3'DCC'                                                    02-DCCCA
00003783 01                                 5620+         dc xl1'01' format one                                          02-DCCCA
00003784 00000000                           5621+         dc a(0)                                                        02-DCCCA
00003788 00000000000037F2                   5622+         dc ad(@PER_1938)                                               02-DCCCA
00003790 0000000000000210                   5623+         dc ad(528)                                                     02-DCCCA
                                                                                                                           Page  115 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003798 0000000000000000                   5624+         dc ad(0)                                                       02-DCCCA
000037A0 0000000000001000                   5625+         dc ad(4096)                                                    02-DCCCA
000037A8 20                                 5626+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000037A9 03                                 5627+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000037AA 03                                 5628+         dc al1(3)                                                      02-DCCCA
000037AB 08                                 5629+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000037AC 00                                 5630+         dc bl.8'00000000'                                              02-DCCCA
000037AD 000000                             5631+         dc al3(0)                                                      02-DCCCA
000037B0 000000000000374E                   5632+         dc ad(@LNAME1938)                                              02-DCCCA
000037B8                                    5633+         ds 0d                                                          02-DCCCA
000037B8 0000000000003780                   5634+         dc ad($eye0147)                                                02-DCCCA
000037C0 0000000000000000                   5635+         dc ad(0)                                                       02-DCCCA
000037C8                                    5636+         ds    0d                                                       01-DCCPR
000037C8                                    5637+rd_kafka_msgset_writer_select_$Msg$Version ds 0d                        01-DCCPR
000037C8                                    5638+@REGION_1938_1 ds 0h                                                    01-DCCPR
000037C8 EBEC D008 0024          00000008   5639+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000037CE E3E0 D088 0004          00000088   5640+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000037D4 E3C0 D090 0004          00000090   5641+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000037DA B904 002E                          5642+         lgr   2,14                copy addr of our savearea            01-DCCPR
000037DE E3B0 C018 0004          00000018   5643+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000037E4 A7EB 0210               00000210   5644+         aghi  14,528              increase by frame size               01-DCCPR
000037E8 E3E0 C020 0021          00000020   5645+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000037EE 4720 B020               00000020   5646+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000037F2                                    5647+@PER_1938 ds   0h                                                       01-DCCPR
000037F2 EBDE 2080 0024          00000080   5648+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000037F8 E3C0 2090 0024          00000090   5649+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000037FE B904 00D2                          5650+         lgr   13,2                set real frame pointer               01-DCCPR
00003802 B904 00CF                          5651+         lgr   12,15               set base reg                         01-DCCPR
                        000037C8            5652+         using @REGION_1938_1,12                                        01-DCCPR
                                            5653 * ******* End of Prologue
                                            5654 * *
                                            5655 * ***           rd_kafka_broker_t *rkb = msetw->msetw_rkb;
00003806 E320 1000 0004          00000000   5656          LG    2,0(0,1)    ; msetw
0000380C EB34 2088 0004          00000088   5657          LMG   3,4,136(2)  ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
                                            5658 * ***           rd_kafka_toppar_t *rktp = msetw->msetw_rktp;
                                            5659 * ***           const int16_t max_ApiVersion = rd_kafka_ProduceRequest\
                                            5660 * _max_version;
00003812 E350 C090 0004          00003858   5661          LG    5,@lit_1938_121
00003818 48F0 51A6               000001A6   5662          LH    15,422(0,5) ; rd_kafka_ProduceRequest_max_version
0000381C 40F0 D1A8               000001A8   5663          STH   15,424(0,13) ; max_ApiVersion
                                            5664 * ***           int16_t min_ApiVersion = 0;
00003820 E544 D1AA 0000          000001AA   5665          MVHHI 426(13),0   ; min_ApiVersion
                                            5666 * ***           int feature;
                                            5667 * ***
                                            5668 * ***           static const struct {
                                            5669 * ***                   int feature;
                                            5670 * ***                   int16_t ApiVersion;
                                            5671 * ***           } compr_req[RD_KAFKA_COMPRESSION_NUM] = {
                                            5672 * ***                   [RD_KAFKA_COMPRESSION_LZ4] = { 0x80, 0 },
                                            5673 * ***
                                            5674 * ***
                                                                                                                           Page  116 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5675 * ***
                                            5676 * ***           };
                                            5677 * ***
                                            5678 * ***           if ((feature = rkb->rkb_features & 0x200)) {
00003826 58F0 3118               00000118   5679          L     15,280(0,3) ; offset of rkb_features in rd_kafka_broker_*
                                                                s
0000382A C0FB 0000 0200                     5680          NILF  15,X'00000200'
00003830 12FF                               5681          LTR   15,15
00003832 4780 C0F8               000038C0   5682          BZ    @L630
                                            5683 * ***                   min_ApiVersion = 3;
00003836 E544 D1AA 0003          000001AA   5684          MVHHI 426(13),3   ; min_ApiVersion
                                            5685 * ***                   msetw->msetw_MsgVersion = 2;
0000383C E54C 200C 0002          0000000C   5686          MVHI  12(2),2     ; offset of msetw_MsgVersion in rd_kafka_msg*
                                                                set_writer_s
                                            5687 * ***                   msetw->msetw_features |= feature;
00003842 56F0 2010               00000010   5688          O     15,16(0,2)
00003846 50F0 2010               00000010   5689          ST    15,16(0,2)
                                            5690 * ***           } else if ((feature = rkb->rkb_features & 0x1)) {
0000384A 47F0 C14E               00003916   5691          B     @L631
00003850                                    5692          DS    0D
00003850 00000210                           5693 @FRAMESIZE_1938 DC F'528'
00003854 00000000
00003858 0000000000007AB8                   5694 @lit_1938_121 DC AD(@DATA)
00003860 0000000000000000                   5695 @lit_1938_122 DC AD(rd_kafka_broker_$Api$Version_supported)
00003868 00000000000009E8                   5696 @lit_1938_126 DC AD(rd_interval0)
00003870 000000141DD76000                   5697 @lit_1938_125 DC FD'86400000000' 0x000000141dd76000
00003878 0000000000000000                   5698 @lit_1938_128 DC AD(mtx_lock)
00003880 0000000000001BB0                   5699 @lit_1938_130 DC AD(rd_strlcpy)
00003888 0000000000000000                   5700 @lit_1938_132 DC AD(mtx_unlock)
00003890 0000000000003630                   5701 @lit_1938_134 DC AD(rd_kafka_compression2str)
00003898 0000000000000000                   5702 @lit_1938_136 DC AD(rd_kafka_log0)
000038A0 0000000000007DEC                   5703 @lit_1938_135 DC AD(@strings@)
000038A8 00000000000019D0                   5704 @lit_1938_157 DC AD(rd_kafka_msgq_first)
000038B0 0000000000000000                   5705 @lit_1938_159 DC AD(__assert)
000038B8 00000000000008C0                   5706 @lit_1938_160 DC AD(rd_clock)
000038C0                                    5707 @L630    DS    0H
000038C0 58F0 3118               00000118   5708          L     15,280(0,3) ; offset of rkb_features in rd_kafka_broker_*
                                                                s
000038C4 C0FB 0000 0001                     5709          NILF  15,X'00000001'
000038CA 12FF                               5710          LTR   15,15
000038CC 4780 C120               000038E8   5711          BZ    @L632
                                            5712 * ***                   min_ApiVersion = 2;
000038D0 E544 D1AA 0002          000001AA   5713          MVHHI 426(13),2   ; min_ApiVersion
                                            5714 * ***                   msetw->msetw_MsgVersion = 1;
000038D6 E54C 200C 0001          0000000C   5715          MVHI  12(2),1     ; offset of msetw_MsgVersion in rd_kafka_msg*
                                                                set_writer_s
                                            5716 * ***                   msetw->msetw_features |= feature;
000038DC 56F0 2010               00000010   5717          O     15,16(0,2)
000038E0 50F0 2010               00000010   5718          ST    15,16(0,2)
                                            5719 * ***           } else {
000038E4 47F0 C14E               00003916   5720          B     @L631
000038E8                                    5721 @L632    DS    0H
                                                                                                                           Page  117 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5722 * ***                   if ((feature =
                                            5723 * ***                        rkb->rkb_features & 0x8)) {
000038E8 58F0 3118               00000118   5724          L     15,280(0,3) ; offset of rkb_features in rd_kafka_broker_*
                                                                s
000038EC C0FB 0000 0008                     5725          NILF  15,X'00000008'
000038F2 12FF                               5726          LTR   15,15
000038F4 4780 C142               0000390A   5727          BZ    @L634
                                            5728 * ***                           min_ApiVersion = 1;
000038F8 E544 D1AA 0001          000001AA   5729          MVHHI 426(13),1   ; min_ApiVersion
                                            5730 * ***                           msetw->msetw_features |= feature;
000038FE 56F0 2010               00000010   5731          O     15,16(0,2)
00003902 50F0 2010               00000010   5732          ST    15,16(0,2)
                                            5733 * ***                   } else
00003906 47F0 C148               00003910   5734          B     @L635
0000390A                                    5735 @L634    DS    0H
                                            5736 * ***                           min_ApiVersion = 0;
0000390A E544 D1AA 0000          000001AA   5737          MVHHI 426(13),0   ; min_ApiVersion
00003910                                    5738 @L635    DS    0H
                                            5739 * ***                   msetw->msetw_MsgVersion = 0;
00003910 E54C 200C 0000          0000000C   5740          MVHI  12(2),0     ; offset of msetw_MsgVersion in rd_kafka_msg*
                                                                set_writer_s
                                            5741 * ***           }
00003916                                    5742 @L633    DS    0H
                                            5743 * ***
                                            5744 * ***           msetw->msetw_compression = rktp->rktp_rkt->rkt_conf.co\
                                            5745 * mpression_codec;
00003916                                    5746 @L631    DS    0H
00003916 E3F0 4060 0004          00000060   5747          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000391C 58F0 F3D0               000003D0   5748          L     15,976(0,15) ; offset of compression_codec in rd_kafka_t*
                                                                opic_conf_s
00003920 50F0 2014               00000014   5749          ST    15,20(0,2)  ; offset of msetw_compression in rd_kafka_ms*
                                                                gset_writer_s
                                            5750 * ***
                                            5751 * ***
                                            5752 * ***
                                            5753 * ***
                                            5754 * ***
                                            5755 * ***           if (msetw->msetw_compression &&
00003924 12FF                               5756          LTR   15,15
00003926 4780 C484               00003C4C   5757          BZ    @L636
                                            5758 * ***               (rd_kafka_broker_ApiVersion_supported(
                                            5759 * ***                       rkb, 0,
                                            5760 * ***                       0, compr_req[msetw->msetw_compression].Api\
                                            5761 * Version,
                                            5762 * ***                       ((void *)0)) == -1 ||
0000392A E330 D1B0 0024          000001B0   5763          STG   3,432(0,13)
00003930 D70F D1B8 D1B8 000001B8 000001B8   5764          XC    440(16,13),440(13)
00003936 E3F0 2014 0014          00000014   5765          LGF   15,20(0,2)
0000393C EBFF 0003 000D          00000003   5766          SLLG  15,15,3(0)  ; *0x8
00003942 E3FF 51AC 0015          000001AC   5767          LGH   15,428(15,5)
00003948 E3F0 D1C8 0024          000001C8   5768          STG   15,456(0,13)
0000394E D707 D1D0 D1D0 000001D0 000001D0   5769          XC    464(8,13),464(13)
                                                                                                                           Page  118 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003954 4110 D1B0               000001B0   5770          LA    1,432(0,13)
00003958 E3F0 C098 0004          00003860   5771          LG    15,@lit_1938_122 ; rd_kafka_broker_ApiVersion_supported
0000395E                                    5772 @@gen_label162 DS    0H
0000395E 05EF                               5773          BALR  14,15
00003960                                    5774 @@gen_label163 DS    0H
00003960 B927 00FF                          5775          LHR   15,15
00003964 A7FE FFFF               0000FFFF   5776          CHI   15,-1
00003968 4780 C1D8               000039A0   5777          BE    @L637
                                            5778 * ***                (compr_req[msetw->msetw_compression].feature &&
0000396C E3F0 2014 0014          00000014   5779          LGF   15,20(0,2)
00003972 EBFF 0003 000D          00000003   5780          SLLG  15,15,3(0)  ; *0x8
00003978 E3FF 51A8 0012          000001A8   5781          LT    15,424(15,5)
0000397E 4780 C484               00003C4C   5782          BZ    @L636
                                            5783 * ***                 !(msetw->msetw_rkb->rkb_features &
                                            5784 * ***                   compr_req[msetw->msetw_compression].feature)))\
                                            5785 * ) {
00003982 E3F0 2088 0004          00000088   5786          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00003988 58F0 F118               00000118   5787          L     15,280(0,15) ; offset of rkb_features in rd_kafka_broker*
                                                                _s
0000398C E310 2014 0014          00000014   5788          LGF   1,20(0,2)
00003992 EB11 0003 000D          00000003   5789          SLLG  1,1,3(0)    ; *0x8
00003998 54F1 51A8               000001A8   5790          N     15,424(1,5)
0000399C 4770 C484               00003C4C   5791          BNZ   @L636
000039A0                                    5792 @L637    DS    0H
                                            5793 * ***                   if (((rd_interval0(&rkb->rkb_suppress.unsuppor\
                                            5794 * ted_compression,(rd_ts_t)86400 * 1000 * 1000,0,0) > 0)))
000039A0 A7F9 1728               00001728   5795          LGHI  15,5928     ; 5928
000039A4 41FF 3000               00000000   5796          LA    15,0(15,3)
000039A8 E3F0 D1B0 0024          000001B0   5797          STG   15,432(0,13)
000039AE E3F0 C0A8 0004          00003870   5798          LG    15,@lit_1938_125 ; 86400000000
000039B4 E3F0 D1B8 0024          000001B8   5799          STG   15,440(0,13)
000039BA D70F D1C0 D1C0 000001C0 000001C0   5800          XC    448(16,13),448(13)
000039C0 4110 D1B0               000001B0   5801          LA    1,432(0,13)
000039C4 E3F0 C0A0 0004          00003868   5802          LG    15,@lit_1938_126 ; rd_interval0
000039CA                                    5803 @@gen_label167 DS    0H
000039CA 05EF                               5804          BALR  14,15
000039CC                                    5805 @@gen_label168 DS    0H
000039CC B902 00FF                          5806          LTGR  15,15
000039D0 47D0 C33E               00003B06   5807          BNH   @L645
                                            5808 * ***
                                            5809 * ***
                                            5810 * ***
                                            5811 * ***                           do { char _logname[256]; mtx_lock(&(rk\
                                            5812 * b)->rkb_logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof\
                                            5813 * (_logname)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(r\
                                            5814 * kb)->rkb_rk->rk_conf, (rkb)->rkb_rk, _logname, 5, 0x0, "COMPRESSION"\
                                            5815 * , "%.*s [%" "d" "]: " "Broker does not support compression " "type %\
                                            5816 * s: not compressing batch", (int)((rktp->rktp_rkt->rkt_topic)->len ==\
                                            5817 *  -1 ? 0 : (rktp->rktp_rkt->rkt_topic)->len), (rktp->rktp_rkt->rkt_to\
                                            5818 * pic)->str, rktp->rktp_partition, rd_kafka_compression2str( msetw->ms\
                                            5819 * etw_compression)); } while (0);
                                                                                                                           Page  119 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000039D4                                    5820 @L639    DS    0H
000039D4 A759 1638               00001638   5821          LGHI  5,5688      ; 5688
000039D8 41F5 3000               00000000   5822          LA    15,0(5,3)
000039DC E3F0 D1B0 0024          000001B0   5823          STG   15,432(0,13)
000039E2 4110 D1B0               000001B0   5824          LA    1,432(0,13)
000039E6 E3F0 C0B0 0004          00003878   5825          LG    15,@lit_1938_128 ; mtx_lock
000039EC                                    5826 @@gen_label170 DS    0H
000039EC 05EF                               5827          BALR  14,15
000039EE                                    5828 @@gen_label171 DS    0H
000039EE 41F0 D0A8               000000A8   5829          LA    15,168(0,13)
000039F2 E3F0 D1B0 0024          000001B0   5830          STG   15,432(0,13)
000039F8 A7F9 1630               00001630   5831          LGHI  15,5680     ; 5680
000039FC E3FF 3000 0004          00000000   5832          LG    15,0(15,3)
00003A02 E3F0 D1B8 0024          000001B8   5833          STG   15,440(0,13)
00003A08 E548 D1C0 0100          000001C0   5834          MVGHI 448(13),256
00003A0E 4110 D1B0               000001B0   5835          LA    1,432(0,13)
00003A12 E3F0 C0B8 0004          00003880   5836          LG    15,@lit_1938_130 ; rd_strlcpy
00003A18                                    5837 @@gen_label172 DS    0H
00003A18 05EF                               5838          BALR  14,15
00003A1A                                    5839 @@gen_label173 DS    0H
00003A1A 41F5 3000               00000000   5840          LA    15,0(5,3)
00003A1E E3F0 D1B0 0024          000001B0   5841          STG   15,432(0,13)
00003A24 4110 D1B0               000001B0   5842          LA    1,432(0,13)
00003A28 E3F0 C0C0 0004          00003888   5843          LG    15,@lit_1938_132 ; mtx_unlock
00003A2E                                    5844 @@gen_label174 DS    0H
00003A2E 05EF                               5845          BALR  14,15
00003A30                                    5846 @@gen_label175 DS    0H
00003A30 E3F0 4060 0004          00000060   5847          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003A36 E3F0 F080 0004          00000080   5848          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003A3C E55C F000 FFFF          00000000   5849          CHSI  0(15),-1
00003A42 4770 C286               00003A4E   5850          BNE   @L642
00003A46 A758 0000               00000000   5851          LHI   5,0         ; 0
00003A4A 47F0 C296               00003A5E   5852          B     @L643
00003A4E                                    5853 @L642    DS    0H
00003A4E E3F0 4060 0004          00000060   5854          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003A54 E3F0 F080 0004          00000080   5855          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003A5A 5850 F000               00000000   5856          L     5,0(0,15)
00003A5E                                    5857 @L643    DS    0H
00003A5E E3F0 2014 0014          00000014   5858          LGF   15,20(0,2)
00003A64 E3F0 D1B0 0024          000001B0   5859          STG   15,432(0,13)
00003A6A 4110 D1B0               000001B0   5860          LA    1,432(0,13)
00003A6E E3F0 C0C8 0004          00003890   5861          LG    15,@lit_1938_134 ; rd_kafka_compression2str
00003A74                                    5862 @@gen_label177 DS    0H
00003A74 05EF                               5863          BALR  14,15
00003A76                                    5864 @@gen_label178 DS    0H
00003A76 E310 3FD0 0004          00000FD0   5865          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00003A7C 4110 1210               00000210   5866          LA    1,528(0,1)
00003A80 E310 D1B0 0024          000001B0   5867          STG   1,432(0,13)
00003A86 E310 3FD0 0004          00000FD0   5868          LG    1,4048(0,3)
00003A8C E310 D1B8 0024          000001B8   5869          STG   1,440(0,13)
00003A92 4110 D0A8               000000A8   5870          LA    1,168(0,13)
00003A96 E310 D1C0 0024          000001C0   5871          STG   1,448(0,13)
                                                                                                                           Page  120 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003A9C E548 D1C8 0005          000001C8   5872          MVGHI 456(13),5
00003AA2 D707 D1D0 D1D0 000001D0 000001D0   5873          XC    464(8,13),464(13)
00003AA8 E310 C0D8 0004          000038A0   5874          LG    1,@lit_1938_135
00003AAE 4160 1168               00000168   5875          LA    6,360(0,1)
00003AB2 E360 D1D8 0024          000001D8   5876          STG   6,472(0,13)
00003AB8 4110 1174               00000174   5877          LA    1,372(0,1)
00003ABC E310 D1E0 0024          000001E0   5878          STG   1,480(0,13)
00003AC2 B914 0015                          5879          LGFR  1,5
00003AC6 E310 D1E8 0024          000001E8   5880          STG   1,488(0,13)
00003ACC E310 4060 0004          00000060   5881          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
00003AD2 E310 1080 0004          00000080   5882          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00003AD8 E310 1008 0004          00000008   5883          LG    1,8(0,1)
00003ADE E310 D1F0 0024          000001F0   5884          STG   1,496(0,13)
00003AE4 E310 4068 0014          00000068   5885          LGF   1,104(0,4)
00003AEA E310 D1F8 0024          000001F8   5886          STG   1,504(0,13)
00003AF0 E3F0 D200 0024          00000200   5887          STG   15,512(0,13)
00003AF6 4110 D1B0               000001B0   5888          LA    1,432(0,13)
00003AFA E3F0 C0D0 0004          00003898   5889          LG    15,@lit_1938_136 ; rd_kafka_log0
00003B00                                    5890 @@gen_label179 DS    0H
00003B00 05EF                               5891          BALR  14,15
00003B02                                    5892 @@gen_label180 DS    0H
                                            5893 * ***   # 166 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            5894 * ***                   else
00003B02 47F0 C47A               00003C42   5895          B     @L644
                                            5896 * ***                           do { if ((((rkb)->rkb_rk->rk_conf.debu\
                                            5897 * g & (0x40)))) { do { char _logname[256]; mtx_lock(&(rkb)->rkb_lognam\
                                            5898 * e_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); m\
                                            5899 * tx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->r\
                                            5900 * k_conf, (rkb)->rkb_rk, _logname, 7, (0x40), "PRODUCE", "%.*s [%" "d"\
                                            5901 *  "]: " "Broker does not support compression " "type %s: not compress\
                                            5902 * ing batch", (int)((rktp->rktp_rkt->rkt_topic)->len == -1 ? 0 : (rktp\
                                            5903 * ->rktp_rkt->rkt_topic)->len), (rktp->rktp_rkt->rkt_topic)->str, rktp\
                                            5904 * ->rktp_partition, rd_kafka_compression2str( msetw->msetw_compression\
                                            5905 * )); } while (0); } } while (0);
00003B06                                    5906 @L645    DS    0H
00003B06 E3F0 3FD0 0004          00000FD0   5907          LG    15,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00003B0C 9140 F323      00000323 00000040   5908          TM    803(15),64
00003B10 4780 C47A               00003C42   5909          BZ    @L648
00003B14                                    5910 @L649    DS    0H
00003B14 A759 1638               00001638   5911          LGHI  5,5688      ; 5688
00003B18 41F5 3000               00000000   5912          LA    15,0(5,3)
00003B1C E3F0 D1B0 0024          000001B0   5913          STG   15,432(0,13)
00003B22 4110 D1B0               000001B0   5914          LA    1,432(0,13)
00003B26 E3F0 C0B0 0004          00003878   5915          LG    15,@lit_1938_128 ; mtx_lock
00003B2C                                    5916 @@gen_label182 DS    0H
00003B2C 05EF                               5917          BALR  14,15
00003B2E                                    5918 @@gen_label183 DS    0H
00003B2E 41F0 D0A8               000000A8   5919          LA    15,168(0,13)
00003B32 E3F0 D1B0 0024          000001B0   5920          STG   15,432(0,13)
00003B38 A7F9 1630               00001630   5921          LGHI  15,5680     ; 5680
00003B3C E3FF 3000 0004          00000000   5922          LG    15,0(15,3)
00003B42 E3F0 D1B8 0024          000001B8   5923          STG   15,440(0,13)
                                                                                                                           Page  121 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003B48 E548 D1C0 0100          000001C0   5924          MVGHI 448(13),256
00003B4E 4110 D1B0               000001B0   5925          LA    1,432(0,13)
00003B52 E3F0 C0B8 0004          00003880   5926          LG    15,@lit_1938_130 ; rd_strlcpy
00003B58                                    5927 @@gen_label184 DS    0H
00003B58 05EF                               5928          BALR  14,15
00003B5A                                    5929 @@gen_label185 DS    0H
00003B5A 41F5 3000               00000000   5930          LA    15,0(5,3)
00003B5E E3F0 D1B0 0024          000001B0   5931          STG   15,432(0,13)
00003B64 4110 D1B0               000001B0   5932          LA    1,432(0,13)
00003B68 E3F0 C0C0 0004          00003888   5933          LG    15,@lit_1938_132 ; mtx_unlock
00003B6E                                    5934 @@gen_label186 DS    0H
00003B6E 05EF                               5935          BALR  14,15
00003B70                                    5936 @@gen_label187 DS    0H
00003B70 E3F0 4060 0004          00000060   5937          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003B76 E3F0 F080 0004          00000080   5938          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003B7C E55C F000 FFFF          00000000   5939          CHSI  0(15),-1
00003B82 4770 C3C6               00003B8E   5940          BNE   @L652
00003B86 A758 0000               00000000   5941          LHI   5,0         ; 0
00003B8A 47F0 C3D6               00003B9E   5942          B     @L653
00003B8E                                    5943 @L652    DS    0H
00003B8E E3F0 4060 0004          00000060   5944          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003B94 E3F0 F080 0004          00000080   5945          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003B9A 5850 F000               00000000   5946          L     5,0(0,15)
00003B9E                                    5947 @L653    DS    0H
00003B9E E3F0 2014 0014          00000014   5948          LGF   15,20(0,2)
00003BA4 E3F0 D1B0 0024          000001B0   5949          STG   15,432(0,13)
00003BAA 4110 D1B0               000001B0   5950          LA    1,432(0,13)
00003BAE E3F0 C0C8 0004          00003890   5951          LG    15,@lit_1938_134 ; rd_kafka_compression2str
00003BB4                                    5952 @@gen_label189 DS    0H
00003BB4 05EF                               5953          BALR  14,15
00003BB6                                    5954 @@gen_label190 DS    0H
00003BB6 E310 3FD0 0004          00000FD0   5955          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00003BBC 4110 1210               00000210   5956          LA    1,528(0,1)
00003BC0 E310 D1B0 0024          000001B0   5957          STG   1,432(0,13)
00003BC6 E310 3FD0 0004          00000FD0   5958          LG    1,4048(0,3)
00003BCC E310 D1B8 0024          000001B8   5959          STG   1,440(0,13)
00003BD2 4110 D0A8               000000A8   5960          LA    1,168(0,13)
00003BD6 E310 D1C0 0024          000001C0   5961          STG   1,448(0,13)
00003BDC E548 D1C8 0007          000001C8   5962          MVGHI 456(13),7
00003BE2 E548 D1D0 0040          000001D0   5963          MVGHI 464(13),64
00003BE8 E310 C0D8 0004          000038A0   5964          LG    1,@lit_1938_135
00003BEE 4160 11C2               000001C2   5965          LA    6,450(0,1)
00003BF2 E360 D1D8 0024          000001D8   5966          STG   6,472(0,13)
00003BF8 4110 1174               00000174   5967          LA    1,372(0,1)
00003BFC E310 D1E0 0024          000001E0   5968          STG   1,480(0,13)
00003C02 B914 0015                          5969          LGFR  1,5
00003C06 E310 D1E8 0024          000001E8   5970          STG   1,488(0,13)
00003C0C E310 4060 0004          00000060   5971          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
00003C12 E310 1080 0004          00000080   5972          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00003C18 E310 1008 0004          00000008   5973          LG    1,8(0,1)
00003C1E E310 D1F0 0024          000001F0   5974          STG   1,496(0,13)
00003C24 E310 4068 0014          00000068   5975          LGF   1,104(0,4)
                                                                                                                           Page  122 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003C2A E310 D1F8 0024          000001F8   5976          STG   1,504(0,13)
00003C30 E3F0 D200 0024          00000200   5977          STG   15,512(0,13)
00003C36 4110 D1B0               000001B0   5978          LA    1,432(0,13)
00003C3A E3F0 C0D0 0004          00003898   5979          LG    15,@lit_1938_136 ; rd_kafka_log0
00003C40                                    5980 @@gen_label191 DS    0H
00003C40 05EF                               5981          BALR  14,15
00003C42                                    5982 @@gen_label192 DS    0H
00003C42                                    5983 @L648    DS    0H
                                            5984 * ***
                                            5985 * ***   # 176 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            5986 * ***                   msetw->msetw_compression = RD_KAFKA_COMPRESSIO\
                                            5987 * N_NONE;
00003C42                                    5988 @L644    DS    0H
00003C42 E54C 2014 0000          00000014   5989          MVHI  20(2),0     ; offset of msetw_compression in rd_kafka_ms*
                                                                gset_writer_s
                                            5990 * ***           } else {
00003C48 47F0 C4EA               00003CB2   5991          B     @L656
00003C4C                                    5992 @L636    DS    0H
                                            5993 * ***
                                            5994 * ***                   msetw->msetw_features |=
                                            5995 * ***                           compr_req[msetw->msetw_compression].fe\
                                            5996 * ature;
00003C4C 58F0 2010               00000010   5997          L     15,16(0,2)
00003C50 E310 2014 0014          00000014   5998          LGF   1,20(0,2)
00003C56 EB11 0003 000D          00000003   5999          SLLG  1,1,3(0)    ; *0x8
00003C5C 56F1 51A8               000001A8   6000          O     15,424(1,5)
00003C60 50F0 2010               00000010   6001          ST    15,16(0,2)
                                            6002 * ***
                                            6003 * ***                   if (min_ApiVersion <
                                            6004 * ***                       compr_req[msetw->msetw_compression].ApiVer\
                                            6005 * sion)
00003C64 48F0 D1AA               000001AA   6006          LH    15,426(0,13) ; min_ApiVersion
00003C68 E310 2014 0014          00000014   6007          LGF   1,20(0,2)
00003C6E EB11 0003 000D          00000003   6008          SLLG  1,1,3(0)    ; *0x8
00003C74 49F1 51AC               000001AC   6009          CH    15,428(1,5)
00003C78 47B0 C4EA               00003CB2   6010          BNL   @L656
                                            6011 * ***                           min_ApiVersion =
                                            6012 * ***                                   compr_req[msetw->msetw_compres\
                                            6013 * sion].ApiVersion;
00003C7C E3F0 2014 0014          00000014   6014          LGF   15,20(0,2)
00003C82 EBFF 0003 000D          00000003   6015          SLLG  15,15,3(0)  ; *0x8
00003C88 48FF 51AC               000001AC   6016          LH    15,428(15,5) ; offset of ApiVersion in 0000156
00003C8C 40F0 D1AA               000001AA   6017          STH   15,426(0,13) ; min_ApiVersion
00003C90                                    6018 @L655    DS    0H
                                            6019 * ***           }
00003C90                                    6020 @L654    DS    0H
                                            6021 * ***
                                            6022 * ***
                                            6023 * ***           switch (msetw->msetw_MsgVersion)
00003C90 47F0 C4EA               00003CB2   6024          B     @L656
                                            6025 * ***           {
                                            6026 * ***           case 2:
                                                                                                                           Page  123 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003C94                                    6027 @L658    DS    0H
                                            6028 * ***                   msetw->msetw_relative_offsets = 1;
00003C94 E54C 2048 0001          00000048   6029          MVHI  72(2),1     ; offset of msetw_relative_offsets in rd_kaf*
                                                                ka_msgset_writer_s
                                            6030 * ***                   break;
00003C9A 47F0 C506               00003CCE   6031          B     @L657
                                            6032 * ***           case 1:
00003C9E                                    6033 @L659    DS    0H
                                            6034 * ***                   if (msetw->msetw_compression != RD_KAFKA_COMPR\
                                            6035 * ESSION_NONE)
00003C9E E55C 2014 0000          00000014   6036          CHSI  20(2),0
00003CA4 4780 C506               00003CCE   6037          BE    @L657
                                            6038 * ***                           msetw->msetw_relative_offsets = 1;
00003CA8 E54C 2048 0001          00000048   6039          MVHI  72(2),1     ; offset of msetw_relative_offsets in rd_kaf*
                                                                ka_msgset_writer_s
00003CAE                                    6040 @L660    DS    0H
                                            6041 * ***                   break;
00003CAE 47F0 C506               00003CCE   6042          B     @L657
                                            6043 * ***           }
00003CB2                                    6044 @L656    DS    0H
00003CB2 58F0 200C               0000000C   6045          L     15,12(0,2)  ; offset of msetw_MsgVersion in rd_kafka_msg*
                                                                set_writer_s
00003CB6 A7FE 0001               00000001   6046          CHI   15,1
00003CBA 4740 C506               00003CCE   6047          BL    @L657
00003CBE A7FE 0001               00000001   6048          CHI   15,1
00003CC2 4780 C4D6               00003C9E   6049          BE    @L659
00003CC6 A7FE 0002               00000002   6050          CHI   15,2
00003CCA 4780 C4CC               00003C94   6051          BE    @L658
00003CCE                                    6052 @L657    DS    0H
                                            6053 * ***
                                            6054 * ***
                                            6055 * ***           msetw->msetw_ApiVersion = rd_kafka_broker_ApiVersion_s\
                                            6056 * upported(
                                            6057 * ***                   rkb,
                                            6058 * ***                   0, min_ApiVersion, max_ApiVersion, ((void *)0)\
                                            6059 * );
00003CCE E330 D1B0 0024          000001B0   6060          STG   3,432(0,13)
00003CD4 D707 D1B8 D1B8 000001B8 000001B8   6061          XC    440(8,13),440(13)
00003CDA E3F0 D1AA 0015          000001AA   6062          LGH   15,426(0,13) ; min_ApiVersion
00003CE0 E3F0 D1C0 0024          000001C0   6063          STG   15,448(0,13)
00003CE6 E3F0 D1A8 0015          000001A8   6064          LGH   15,424(0,13) ; max_ApiVersion
00003CEC E3F0 D1C8 0024          000001C8   6065          STG   15,456(0,13)
00003CF2 D707 D1D0 D1D0 000001D0 000001D0   6066          XC    464(8,13),464(13)
00003CF8 4110 D1B0               000001B0   6067          LA    1,432(0,13)
00003CFC E3F0 C098 0004          00003860   6068          LG    15,@lit_1938_122 ; rd_kafka_broker_ApiVersion_supported
00003D02                                    6069 @@gen_label195 DS    0H
00003D02 05EF                               6070          BALR  14,15
00003D04                                    6071 @@gen_label196 DS    0H
00003D04 40F0 2008               00000008   6072          STH   15,8(0,2)
                                            6073 * ***
                                            6074 * ***           if (msetw->msetw_ApiVersion == -1) {
00003D08 48F0 2008               00000008   6075          LH    15,8(0,2)
                                                                                                                           Page  124 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003D0C A7FE FFFF               0000FFFF   6076          CHI   15,-1
00003D10 4770 C6EE               00003EB6   6077          BNE   @L661
                                            6078 * ***                   rd_kafka_msg_t *rkm;
                                            6079 * ***
                                            6080 * ***
                                            6081 * ***
                                            6082 * ***                   do { char _logname[256]; mtx_lock(&(rkb)->rkb_\
                                            6083 * logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_lognam\
                                            6084 * e)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb\
                                            6085 * _rk->rk_conf, (rkb)->rkb_rk, _logname, 3, 0x0, "PRODUCE", "%.*s [%" \
                                            6086 * "d" "]: " "No viable ProduceRequest ApiVersions (v%d..%d) " "support\
                                            6087 * ed by broker: unable to produce", (int)((rktp->rktp_rkt->rkt_topic)-\
                                            6088 * >len == -1 ? 0 : (rktp->rktp_rkt->rkt_topic)->len), (rktp->rktp_rkt-\
                                            6089 * >rkt_topic)->str, rktp->rktp_partition, min_ApiVersion, max_ApiVersi\
                                            6090 * on); } while (0);
00003D14                                    6091 @L662    DS    0H
00003D14 A759 1638               00001638   6092          LGHI  5,5688      ; 5688
00003D18 41F5 3000               00000000   6093          LA    15,0(5,3)
00003D1C E3F0 D1B0 0024          000001B0   6094          STG   15,432(0,13)
00003D22 4110 D1B0               000001B0   6095          LA    1,432(0,13)
00003D26 E3F0 C0B0 0004          00003878   6096          LG    15,@lit_1938_128 ; mtx_lock
00003D2C                                    6097 @@gen_label198 DS    0H
00003D2C 05EF                               6098          BALR  14,15
00003D2E                                    6099 @@gen_label199 DS    0H
00003D2E 41F0 D0A8               000000A8   6100          LA    15,168(0,13)
00003D32 E3F0 D1B0 0024          000001B0   6101          STG   15,432(0,13)
00003D38 A7F9 1630               00001630   6102          LGHI  15,5680     ; 5680
00003D3C E3FF 3000 0004          00000000   6103          LG    15,0(15,3)
00003D42 E3F0 D1B8 0024          000001B8   6104          STG   15,440(0,13)
00003D48 E548 D1C0 0100          000001C0   6105          MVGHI 448(13),256
00003D4E 4110 D1B0               000001B0   6106          LA    1,432(0,13)
00003D52 E3F0 C0B8 0004          00003880   6107          LG    15,@lit_1938_130 ; rd_strlcpy
00003D58                                    6108 @@gen_label200 DS    0H
00003D58 05EF                               6109          BALR  14,15
00003D5A                                    6110 @@gen_label201 DS    0H
00003D5A 41F5 3000               00000000   6111          LA    15,0(5,3)
00003D5E E3F0 D1B0 0024          000001B0   6112          STG   15,432(0,13)
00003D64 4110 D1B0               000001B0   6113          LA    1,432(0,13)
00003D68 E3F0 C0C0 0004          00003888   6114          LG    15,@lit_1938_132 ; mtx_unlock
00003D6E                                    6115 @@gen_label202 DS    0H
00003D6E 05EF                               6116          BALR  14,15
00003D70                                    6117 @@gen_label203 DS    0H
00003D70 E3F0 4060 0004          00000060   6118          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003D76 E3F0 F080 0004          00000080   6119          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003D7C E55C F000 FFFF          00000000   6120          CHSI  0(15),-1
00003D82 4770 C5C6               00003D8E   6121          BNE   @L665
00003D86 A7F8 0000               00000000   6122          LHI   15,0        ; 0
00003D8A 47F0 C5D6               00003D9E   6123          B     @L666
00003D8E                                    6124 @L665    DS    0H
00003D8E E3F0 4060 0004          00000060   6125          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003D94 E3F0 F080 0004          00000080   6126          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003D9A 58F0 F000               00000000   6127          L     15,0(0,15)
                                                                                                                           Page  125 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003D9E                                    6128 @L666    DS    0H
00003D9E E310 3FD0 0004          00000FD0   6129          LG    1,4048(0,3) ; offset of rkb_rk in rd_kafka_broker_s
00003DA4 4110 1210               00000210   6130          LA    1,528(0,1)
00003DA8 E310 D1B0 0024          000001B0   6131          STG   1,432(0,13)
00003DAE E310 3FD0 0004          00000FD0   6132          LG    1,4048(0,3)
00003DB4 E310 D1B8 0024          000001B8   6133          STG   1,440(0,13)
00003DBA 4110 D0A8               000000A8   6134          LA    1,168(0,13)
00003DBE E310 D1C0 0024          000001C0   6135          STG   1,448(0,13)
00003DC4 E548 D1C8 0003          000001C8   6136          MVGHI 456(13),3
00003DCA D707 D1D0 D1D0 000001D0 000001D0   6137          XC    464(8,13),464(13)
00003DD0 E330 C0D8 0004          000038A0   6138          LG    3,@lit_1938_135
00003DD6 4110 31C2               000001C2   6139          LA    1,450(0,3)
00003DDA E310 D1D8 0024          000001D8   6140          STG   1,472(0,13)
00003DE0 4110 31CA               000001CA   6141          LA    1,458(0,3)
00003DE4 E310 D1E0 0024          000001E0   6142          STG   1,480(0,13)
00003DEA B914 00FF                          6143          LGFR  15,15
00003DEE E3F0 D1E8 0024          000001E8   6144          STG   15,488(0,13)
00003DF4 E3F0 4060 0004          00000060   6145          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003DFA E3F0 F080 0004          00000080   6146          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003E00 E3F0 F008 0004          00000008   6147          LG    15,8(0,15)
00003E06 E3F0 D1F0 0024          000001F0   6148          STG   15,496(0,13)
00003E0C E3F0 4068 0014          00000068   6149          LGF   15,104(0,4)
00003E12 E3F0 D1F8 0024          000001F8   6150          STG   15,504(0,13)
00003E18 48F0 D1AA               000001AA   6151          LH    15,426(0,13) ; min_ApiVersion
00003E1C B914 00FF                          6152          LGFR  15,15
00003E20 E3F0 D200 0024          00000200   6153          STG   15,512(0,13)
00003E26 48F0 D1A8               000001A8   6154          LH    15,424(0,13) ; max_ApiVersion
00003E2A B914 00FF                          6155          LGFR  15,15
00003E2E E3F0 D208 0024          00000208   6156          STG   15,520(0,13)
00003E34 4110 D1B0               000001B0   6157          LA    1,432(0,13)
00003E38 E3F0 C0D0 0004          00003898   6158          LG    15,@lit_1938_136 ; rd_kafka_log0
00003E3E                                    6159 @@gen_label205 DS    0H
00003E3E 05EF                               6160          BALR  14,15
00003E40                                    6161 @@gen_label206 DS    0H
                                            6162 * ***
                                            6163 * ***   # 218 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            6164 * ***
                                            6165 * ***                   rkm = rd_kafka_msgq_first(msetw->msetw_msgq);
00003E40 E3F0 2098 0004          00000098   6166          LG    15,152(0,2)
00003E46 E3F0 D1B0 0024          000001B0   6167          STG   15,432(0,13)
00003E4C 4110 D1B0               000001B0   6168          LA    1,432(0,13)
00003E50 E3F0 C0E0 0004          000038A8   6169          LG    15,@lit_1938_157 ; rd_kafka_msgq_first
00003E56                                    6170 @@gen_label207 DS    0H
00003E56 05EF                               6171          BALR  14,15
00003E58                                    6172 @@gen_label208 DS    0H
00003E58 B904 002F                          6173          LGR   2,15
                                            6174 * ***                   ((rkm) ? (void)0 : __assert(__func__, "C:\\asg\
                                            6175 * kafka\\librdkafka\\src\\rdkafka_msgset_writer.c", 220, "rkm"));
00003E5C B902 00F2                          6176          LTGR  15,2
00003E60 4770 C6D2               00003E9A   6177          BNZ   @L668
00003E64                                    6178 @L667    DS    0H
00003E64 E3F0 C090 0004          00003858   6179          LG    15,@lit_1938_121
                                                                                                                           Page  126 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003E6A 41F0 F1D8               000001D8   6180          LA    15,472(0,15)
00003E6E E3F0 D1B0 0024          000001B0   6181          STG   15,432(0,13)
00003E74 41F0 322C               0000022C   6182          LA    15,556(0,3)
00003E78 E3F0 D1B8 0024          000001B8   6183          STG   15,440(0,13)
00003E7E E548 D1C0 00DC          000001C0   6184          MVGHI 448(13),220
00003E84 41F0 3260               00000260   6185          LA    15,608(0,3)
00003E88 E3F0 D1C8 0024          000001C8   6186          STG   15,456(0,13)
00003E8E 4110 D1B0               000001B0   6187          LA    1,432(0,13)
00003E92 E3F0 C0E8 0004          000038B0   6188          LG    15,@lit_1938_159 ; __assert
00003E98                                    6189 @@gen_label210 DS    0H
00003E98 05EF                               6190          BALR  14,15
00003E9A                                    6191 @@gen_label211 DS    0H
00003E9A                                    6192 @L668    DS    0H
                                            6193 * ***                   rkm->rkm_u.producer.ts_backoff = rd_clock() + \
                                            6194 * (5 * 1000*1000);
00003E9A E3F0 C0F0 0004          000038B8   6195          LG    15,@lit_1938_160 ; rd_clock
00003EA0                                    6196 @@gen_label212 DS    0H
00003EA0 05EF                               6197          BALR  14,15
00003EA2                                    6198 @@gen_label213 DS    0H
00003EA2 C2F8 004C 4B40                     6199          AGFI  15,X'004C4B40'
00003EA8 E3F0 2088 0024          00000088   6200          STG   15,136(0,2)
                                            6201 * ***                   return -1;
00003EAE A7F9 FFFF               0000FFFF   6202          LGHI  15,-1       ; -1
00003EB2 47F0 C73A               00003F02   6203          B     @ret_lab_1938
                                            6204 * ***           }
00003EB6                                    6205 @L661    DS    0H
                                            6206 * ***
                                            6207 * ***
                                            6208 * ***
                                            6209 * ***           ((msetw->msetw_ApiVersion >= min_ApiVersion) ? (void)0\
                                            6210 *  : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset\
                                            6211 * _writer.c", 227, "msetw->msetw_ApiVersion >= min_ApiVersion"));
00003EB6 48F0 2008               00000008   6212          LH    15,8(0,2)
00003EBA 49F0 D1AA               000001AA   6213          CH    15,426(0,13)
00003EBE 47B0 C736               00003EFE   6214          BNL   @L670
00003EC2                                    6215 @L669    DS    0H
00003EC2 E3F0 C090 0004          00003858   6216          LG    15,@lit_1938_121
00003EC8 41F0 F1D8               000001D8   6217          LA    15,472(0,15)
00003ECC E3F0 D1B0 0024          000001B0   6218          STG   15,432(0,13)
00003ED2 E3F0 C0D8 0004          000038A0   6219          LG    15,@lit_1938_135
00003ED8 4110 F22C               0000022C   6220          LA    1,556(0,15)
00003EDC E310 D1B8 0024          000001B8   6221          STG   1,440(0,13)
00003EE2 E548 D1C0 00E3          000001C0   6222          MVGHI 448(13),227
00003EE8 41F0 F264               00000264   6223          LA    15,612(0,15)
00003EEC E3F0 D1C8 0024          000001C8   6224          STG   15,456(0,13)
00003EF2 4110 D1B0               000001B0   6225          LA    1,432(0,13)
00003EF6 E3F0 C0E8 0004          000038B0   6226          LG    15,@lit_1938_159 ; __assert
00003EFC                                    6227 @@gen_label215 DS    0H
00003EFC 05EF                               6228          BALR  14,15
00003EFE                                    6229 @@gen_label216 DS    0H
00003EFE                                    6230 @L670    DS    0H
                                            6231 * ***
                                                                                                                           Page  127 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6232 * ***           return 0;
00003EFE A7F9 0000               00000000   6233          LGHI  15,0        ; 0
                                            6234 * ***   }
00003F02                                    6235 @ret_lab_1938 DS 0H
                                            6236 * * **** Start of Epilogue
                                            6237          DCCEPIL
00003F02                                    6238+         ds 0h                                                          01-DCCEP
                                            6239+* Epilog
00003F02 D707 D088 D088 00000088 00000088   6240+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003F08 E3D0 D080 0004          00000080   6241+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003F0E E3C0 D090 0004          00000090   6242+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003F14 E3B0 C018 0004          00000018   6243+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003F1A E3C0 B010 0021          00000010   6244+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003F20 E3E0 D008 0004          00000008   6245+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003F26 EB1C D020 0004          00000020   6246+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003F2C 078E                               6247+         bcr 8,14                if same dsab, just return              01-DCCEP
00003F2E E3F0 D010 0024          00000010   6248+         stg 15,16(0,13)         save return code                       01-DCCEP
00003F34 E300 D018 0024          00000018   6249+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003F3A E3F0 D090 0004          00000090   6250+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003F40 E3F0 F018 0004          00000018   6251+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003F46 47F0 F040               00000040   6252+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6253+* End of Epilog
                                            6254 * * **** End of Epilogue
                                            6255          DROP  12
                                            6256 *
                                            6257 *   DSECT for automatic variables in "rd_kafka_msgset_writer_select_Ms
                                            6258 *           gVersion"
                                            6259 *      (FUNCTION #1938)
                                            6260 *
00000000                00000000 000001AC   6261 @AUTO#rd_kafka_msgset_writer_select_$Msg$Version DSECT
00000000                                    6262          DS    XL168
000000A8                                    6263 rd_kafka_msgset_writer_select_$Msg$Version#_logname#13 DS 256XL1 ; _log*
                                                                name
000001A8                000001A8 000000A8   6264          ORG   @AUTO#rd_kafka_msgset_writer_select_$Msg$Version+168
000000A8                                    6265 rd_kafka_msgset_writer_select_$Msg$Version#_logname#9 DS 256XL1 ; _logn*
                                                                ame
000001A8                000001A8 000000A8   6266          ORG   @AUTO#rd_kafka_msgset_writer_select_$Msg$Version+168
000000A8                                    6267 rd_kafka_msgset_writer_select_$Msg$Version#_logname#6 DS 256XL1 ; _logn*
                                                                ame
000001A8                000001A8 000000A8   6268          ORG   @AUTO#rd_kafka_msgset_writer_select_$Msg$Version+168
000000A8                                    6269 rd_kafka_msgset_writer_select_$Msg$Version#feature#0 DS 1F ; feature
000000AC                000000AC 000001A8   6270          ORG   @AUTO#rd_kafka_msgset_writer_select_$Msg$Version+424
000001A8                                    6271 rd_kafka_msgset_writer_select_$Msg$Version#max_$Api$Version#0 DS 2XL1 ;*
                                                                 max_ApiVersion
000001AA                000001AA 000001AA   6272          ORG   @AUTO#rd_kafka_msgset_writer_select_$Msg$Version+426
000001AA                                    6273 rd_kafka_msgset_writer_select_$Msg$Version#min_$Api$Version#0 DS 2XL1 ;*
                                                                 min_ApiVersion
                                            6274 *
00003F4A                00000000 00007AB2   6275 @CODE    CSECT
                                            6276 *
                                            6277 *
                                            6278 *
                                                                                                                           Page  128 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6279 * ....... start of rd_kafka_msgset_writer_alloc_buf
00003F4A                                    6280 @LNAME1939 DS  0H
00003F4A 00000020                           6281          DC    X'00000020'
00003F4E 99846D9281869281                   6282          DC    C'rd_kafka_msgset_writer_alloc_buf'
00003F6E 00                                 6283          DC    X'00'
                                            6284 rd_kafka_msgset_writer_alloc_buf DCCPRLG CINDEX=1939,BASER=12,FRAME=216*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1939
                                            6285          macro
                                            6286          dccextrn &m
                                            6287          gblc    &$dccext(1000)
                                            6288          gbla    &$dccexti
                                            6289          lcla    &i
                                            6290 &$dccext(&$dccexti+1) setc    '&m'
                                            6291 &i       seta    1
                                            6292 .loop    aif    (&i gt &$dccexti).around
                                            6293          aif    ('&$dccext(&i)' eq '&m').getout
                                            6294 &i       seta    &i+1
                                            6295          ago     .loop
                                            6296 .around  anop
                                            6297 &$dccexti seta &$dccexti+1
                                            6298          extrn  &m
                                            6299 .getout  anop
                                            6300          mend
00003F70                                    6301+$eye0150    ds    0d                                                    02-DCCCA
00003F70 C4C3C3                             6302+         dc cl3'DCC'                                                    02-DCCCA
00003F73 01                                 6303+         dc xl1'01' format one                                          02-DCCCA
00003F74 00000000                           6304+         dc a(0)                                                        02-DCCCA
00003F78 0000000000003FE2                   6305+         dc ad(@PER_1939)                                               02-DCCCA
00003F80 00000000000000D8                   6306+         dc ad(216)                                                     02-DCCCA
00003F88 0000000000000000                   6307+         dc ad(0)                                                       02-DCCCA
00003F90 0000000000001000                   6308+         dc ad(4096)                                                    02-DCCCA
00003F98 20                                 6309+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003F99 03                                 6310+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003F9A 03                                 6311+         dc al1(3)                                                      02-DCCCA
00003F9B 08                                 6312+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003F9C 00                                 6313+         dc bl.8'00000000'                                              02-DCCCA
00003F9D 000000                             6314+         dc al3(0)                                                      02-DCCCA
00003FA0 0000000000003F4A                   6315+         dc ad(@LNAME1939)                                              02-DCCCA
00003FA8                                    6316+         ds 0d                                                          02-DCCCA
00003FA8 0000000000003F70                   6317+         dc ad($eye0150)                                                02-DCCCA
00003FB0 0000000000000000                   6318+         dc ad(0)                                                       02-DCCCA
00003FB8                                    6319+         ds    0d                                                       01-DCCPR
00003FB8                                    6320+rd_kafka_msgset_writer_alloc_buf ds 0d                                  01-DCCPR
00003FB8                                    6321+@REGION_1939_1 ds 0h                                                    01-DCCPR
00003FB8 EBEC D008 0024          00000008   6322+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003FBE E3E0 D088 0004          00000088   6323+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003FC4 E3C0 D090 0004          00000090   6324+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003FCA B904 002E                          6325+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003FCE E3B0 C018 0004          00000018   6326+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003FD4 A7EB 00D8               000000D8   6327+         aghi  14,216              increase by frame size               01-DCCPR
00003FD8 E3E0 C020 0021          00000020   6328+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003FDE 4720 B020               00000020   6329+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page  129 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003FE2                                    6330+@PER_1939 ds   0h                                                       01-DCCPR
00003FE2 EBDE 2080 0024          00000080   6331+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003FE8 E3C0 2090 0024          00000090   6332+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003FEE B904 00D2                          6333+         lgr   13,2                set real frame pointer               01-DCCPR
00003FF2 B904 00CF                          6334+         lgr   12,15               set base reg                         01-DCCPR
                        00003FB8            6335+         using @REGION_1939_1,12                                        01-DCCPR
                                            6336 * ******* End of Prologue
                                            6337 * *
                                            6338 * ***           rd_kafka_t *rk = msetw->msetw_rkb->rkb_rk;
00003FF6 E350 1000 0004          00000000   6339          LG    5,0(0,1)    ; msetw
00003FFC E3F0 5088 0004          00000088   6340          LG    15,136(0,5) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00004002 E360 FFD0 0004          00000FD0   6341          LG    6,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
                                            6342 * ***           size_t msg_overhead = 0;
00004008 A749 0000               00000000   6343          LGHI  4,0         ; 0
                                            6344 * ***           size_t hdrsize = 0;
0000400C B904 0024                          6345          LGR   2,4         ; hdrsize
                                            6346 * ***           size_t msgsetsize = 0;
00004010 B904 0034                          6347          LGR   3,4         ; msgsetsize
                                            6348 * ***           size_t bufsize;
                                            6349 * ***
                                            6350 * ***           do { if (((!(!msetw->msetw_rkbuf)))) rd_kafka_crash("C\
                                            6351 * :\\asgkafka\\librdkafka\\src\\rdkafka_msgset_writer.c",250, __FUNCTI\
                                            6352 * ON__, (((void *)0)), "assert: " "!msetw->msetw_rkbuf"); } while (0);
00004014                                    6353 @L671    DS    0H
00004014 E3F0 5000 0002          00000000   6354          LTG   15,0(0,5)   ; msetw
0000401A 4780 C1D8               00004190   6355          BZ    @L675
0000401E E3F0 C0C8 0004          00004080   6356          LG    15,@lit_1939_170
00004024 4110 F22C               0000022C   6357          LA    1,556(0,15)
00004028 E310 D0B0 0024          000000B0   6358          STG   1,176(0,13)
0000402E E548 D0B8 00FA          000000B8   6359          MVGHI 184(13),250
00004034 E310 C0C0 0004          00004078   6360          LG    1,@lit_1939_171
0000403A 4110 1202               00000202   6361          LA    1,514(0,1)
0000403E E310 D0C0 0024          000000C0   6362          STG   1,192(0,13)
00004044 D707 D0C8 D0C8 000000C8 000000C8   6363          XC    200(8,13),200(13)
0000404A 41F0 F28E               0000028E   6364          LA    15,654(0,15)
0000404E E3F0 D0D0 0024          000000D0   6365          STG   15,208(0,13)
00004054 4110 D0B0               000000B0   6366          LA    1,176(0,13)
00004058 E3F0 C0B8 0004          00004070   6367          LG    15,@lit_1939_172 ; rd_kafka_crash
0000405E                                    6368 @@gen_label218 DS    0H
0000405E 05EF                               6369          BALR  14,15
00004060                                    6370 @@gen_label219 DS    0H
00004060                                    6371 @L674    DS    0H
                                            6372 * ***
                                            6373 * ***
                                            6374 * ***
                                            6375 * ***   # 267 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            6376 * ***
                                            6377 * ***
                                            6378 * ***
                                            6379 * ***           switch (msetw->msetw_ApiVersion)
00004060 47F0 C1D8               00004190   6380          B     @L675
                                                                                                                           Page  130 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004068                                    6381          DS    0D
00004068 000000D8                           6382 @FRAMESIZE_1939 DC F'216'
0000406C 00000000
00004070 0000000000000000                   6383 @lit_1939_172 DC AD(rd_kafka_crash)
00004078 0000000000007AB8                   6384 @lit_1939_171 DC AD(@DATA)
00004080 0000000000007DEC                   6385 @lit_1939_170 DC AD(@strings@)
00004088 0000000000000000                   6386 @lit_1939_177 DC AD(__assert)
00004090 0000000000000007                   6387 @lit_1939_178 DC FD'7' 0x0000000000000007
00004098 00000000000000F8                   6388 @lit_1939_179 DC FD'248' 0x00000000000000f8
000040A0 0000000000001720                   6389 @lit_1939_185 DC AD(rd_kafka_msgq_size)
000040A8 0000000000000000                   6390 @lit_1939_186 DC AD(rd_kafka_buf_new_request0)
000040B0 0000000000001F20                   6391 @lit_1939_187 DC AD(rd_kafka_buf_$Api$Version_set)
                                            6392 * ***           {
                                            6393 * ***           case 7:
                                            6394 * ***           case 6:
                                            6395 * ***           case 5:
                                            6396 * ***           case 4:
                                            6397 * ***           case 3:
000040B8                                    6398 @L681    DS    0H
                                            6399 * ***
                                            6400 * ***                   hdrsize += (2 + (((rk->rk_eos.transactional_id\
                                            6401 * )->len) == -1 ? 0 : ((rk->rk_eos.transactional_id)->len)));
000040B8 E3F0 6D30 0004          00000D30   6402          LG    15,3376(0,6) ; offset of transactional_id in 0000146
000040BE E55C F000 FFFF          00000000   6403          CHSI  0(15),-1
000040C4 4770 C118               000040D0   6404          BNE   @L682
000040C8 A7F8 0000               00000000   6405          LHI   15,0        ; 0
000040CC 47F0 C122               000040DA   6406          B     @L683
000040D0                                    6407 @L682    DS    0H
000040D0 E3F0 6D30 0004          00000D30   6408          LG    15,3376(0,6) ; offset of transactional_id in 0000146
000040D6 58F0 F000               00000000   6409          L     15,0(0,15)
000040DA                                    6410 @L683    DS    0H
000040DA A7FA 0002               00000002   6411          AHI   15,2
000040DE B914 00FF                          6412          LGFR  15,15
000040E2 B90A 002F                          6413          ALGR  2,15
                                            6414 * ***
                                            6415 * ***           case 0:
000040E6                                    6416 @L684    DS    0H
                                            6417 * ***           case 1:
000040E6                                    6418 @L685    DS    0H
                                            6419 * ***           case 2:
000040E6                                    6420 @L686    DS    0H
                                            6421 * ***                   hdrsize +=
                                            6422 * ***
                                            6423 * ***                           2 + 4 + 4 +
                                            6424 * ***
                                            6425 * ***                           (2 + (((msetw->msetw_rktp-> rktp_rkt->\
                                            6426 * rkt_topic)->len) == -1 ? 0 : ((msetw->msetw_rktp-> rktp_rkt->rkt_top\
                                            6427 * ic)->len))) +
000040E6 E3F0 5090 0004          00000090   6428          LG    15,144(0,5) ; offset of msetw_rktp in rd_kafka_msgset_wr*
                                                                iter_s
000040EC E3F0 F060 0004          00000060   6429          LG    15,96(0,15) ; offset of rktp_rkt in rd_kafka_toppar_s
000040F2 E3F0 F080 0004          00000080   6430          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
                                                                                                                           Page  131 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000040F8 E55C F000 FFFF          00000000   6431          CHSI  0(15),-1
000040FE 4770 C152               0000410A   6432          BNE   @L687
00004102 A7F8 0000               00000000   6433          LHI   15,0        ; 0
00004106 47F0 C168               00004120   6434          B     @L688
0000410A                                    6435 @L687    DS    0H
0000410A E3F0 5090 0004          00000090   6436          LG    15,144(0,5) ; offset of msetw_rktp in rd_kafka_msgset_wr*
                                                                iter_s
00004110 E3F0 F060 0004          00000060   6437          LG    15,96(0,15) ; offset of rktp_rkt in rd_kafka_toppar_s
00004116 E3F0 F080 0004          00000080   6438          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000411C 58F0 F000               00000000   6439          L     15,0(0,15)
00004120                                    6440 @L688    DS    0H
                                            6441 * ***
                                            6442 * ***
                                            6443 * ***                           4 + 4 + 4;
00004120 A7FA 0002               00000002   6444          AHI   15,2
00004124 A7FA 000A               0000000A   6445          AHI   15,10
00004128 A7FA 0004               00000004   6446          AHI   15,4
0000412C A7FA 0004               00000004   6447          AHI   15,4
00004130 A7FA 0004               00000004   6448          AHI   15,4
00004134 B914 00FF                          6449          LGFR  15,15
00004138 B90A 002F                          6450          ALGR  2,15
                                            6451 * ***                   msgsetsize += 4;
0000413C A73B 0004               00000004   6452          AGHI  3,4
                                            6453 * ***                   break;
00004140 47F0 C278               00004230   6454          B     @L692
                                            6455 * ***
                                            6456 * ***           default:
                                            6457 * ***                   ((!*"/* NOTREACHED */ violated") ? (void)0 : _\
                                            6458 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_wri\
                                            6459 * ter.c", 295, "!*\"/* NOTREACHED */ violated\""));
00004144                                    6460 @L689    DS    0H
00004144 E3F0 C0C8 0004          00004080   6461          LG    15,@lit_1939_170
0000414A 4110 F2AA               000002AA   6462          LA    1,682(0,15)
0000414E 9500 1000      00000000 00000000   6463          CLI   0(1),0
00004152 4780 C278               00004230   6464          BE    @L692
00004156                                    6465 @L690    DS    0H
00004156 E310 C0C0 0004          00004078   6466          LG    1,@lit_1939_171
0000415C 4110 1202               00000202   6467          LA    1,514(0,1)
00004160 E310 D0B0 0024          000000B0   6468          STG   1,176(0,13)
00004166 4110 F22C               0000022C   6469          LA    1,556(0,15)
0000416A E310 D0B8 0024          000000B8   6470          STG   1,184(0,13)
00004170 E548 D0C0 0127          000000C0   6471          MVGHI 192(13),295
00004176 41F0 F2C4               000002C4   6472          LA    15,708(0,15)
0000417A E3F0 D0C8 0024          000000C8   6473          STG   15,200(0,13)
00004180 4110 D0B0               000000B0   6474          LA    1,176(0,13)
00004184 E3F0 C0D0 0004          00004088   6475          LG    15,@lit_1939_177 ; __assert
0000418A                                    6476 @@gen_label223 DS    0H
0000418A 05EF                               6477          BALR  14,15
0000418C                                    6478 @@gen_label224 DS    0H
0000418C                                    6479 @L691    DS    0H
                                            6480 * ***           }
0000418C 47F0 C278               00004230   6481          B     @L692
                                                                                                                           Page  132 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004190                                    6482 @L675    DS    0H
00004190 48F0 5008               00000008   6483          LH    15,8(0,5)
00004194 C2FF 0000 0007                     6484          CLFI  15,X'00000007'
0000419A 4720 C18C               00004144   6485          BH    @L689
0000419E B914 00FF                          6486          LGFR  15,15
000041A2 A719 0001               00000001   6487          LGHI  1,1
000041A6 EB11 F000 000D          00000000   6488          SLLG  1,1,0(15)
000041AC B904 00F1                          6489          LGR   15,1
000041B0 E3F0 C0D8 0080          00004090   6490          NG    15,@lit_1939_178
000041B6 4770 C12E               000040E6   6491          BNZ   @L686
000041BA E310 C0E0 0080          00004098   6492          NG    1,@lit_1939_179
000041C0 4770 C100               000040B8   6493          BNZ   @L681
000041C4 47F0 C18C               00004144   6494          B     @L689
                                            6495 * ***
                                            6496 * ***
                                            6497 * ***
                                            6498 * ***
                                            6499 * ***
                                            6500 * ***
                                            6501 * ***           switch (msetw->msetw_MsgVersion)
                                            6502 * ***           {
                                            6503 * ***           case 0:
000041C8                                    6504 @L694    DS    0H
                                            6505 * ***
                                            6506 * ***                   msg_overhead = ((8+4) + (4+1+1+4+4));
000041C8 A749 001A               0000001A   6507          LGHI  4,26        ; 26
                                            6508 * ***                   break;
000041CC 47F0 C29C               00004254   6509          B     @L693
                                            6510 * ***           case 1:
000041D0                                    6511 @L695    DS    0H
                                            6512 * ***
                                            6513 * ***                   msg_overhead = ((8+4) + (4+1+1+8+4+4));
000041D0 A749 0022               00000022   6514          LGHI  4,34        ; 34
                                            6515 * ***                   break;
000041D4 47F0 C29C               00004254   6516          B     @L693
                                            6517 * ***
                                            6518 * ***           case 2:
000041D8                                    6519 @L696    DS    0H
                                            6520 * ***
                                            6521 * ***                   msg_overhead += ( (sizeof(int32_t) + 1 + (size\
                                            6522 * of(int32_t)/7)) + 1 + (sizeof(int64_t) + 1 + (sizeof(int64_t)/7)) + \
                                            6523 * (sizeof(int32_t) + 1 + (sizeof(int32_t)/7)) + (sizeof(int32_t) + 1 +\
                                            6524 *  (sizeof(int32_t)/7)) + (sizeof(int32_t) + 1 + (sizeof(int32_t)/7)) \
                                            6525 * + (sizeof(int32_t) + 1 + (sizeof(int32_t)/7)) );
000041D8 A74B 0024               00000024   6526          AGHI  4,36
                                            6527 * ***
                                            6528 * ***
                                            6529 * ***                   msgsetsize +=
                                            6530 * ***                           8  +
                                            6531 * ***                           4  +
                                            6532 * ***                           4  +
                                            6533 * ***                           1  +
                                                                                                                           Page  133 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6534 * ***                           4  +
                                            6535 * ***                           2  +
                                            6536 * ***                           4  +
                                            6537 * ***                           8  +
                                            6538 * ***                           8  +
                                            6539 * ***                           8  +
                                            6540 * ***                           2  +
                                            6541 * ***                           4  +
                                            6542 * ***                           4 ;
000041DC A73B 003D               0000003D   6543          AGHI  3,61
                                            6544 * ***                   break;
000041E0 47F0 C29C               00004254   6545          B     @L693
                                            6546 * ***
                                            6547 * ***           default:
                                            6548 * ***                   ((!*"/* NOTREACHED */ violated") ? (void)0 : _\
                                            6549 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_wri\
                                            6550 * ter.c", 336, "!*\"/* NOTREACHED */ violated\""));
000041E4                                    6551 @L697    DS    0H
000041E4 E3F0 C0C8 0004          00004080   6552          LG    15,@lit_1939_170
000041EA 4110 F2AA               000002AA   6553          LA    1,682(0,15)
000041EE 9500 1000      00000000 00000000   6554          CLI   0(1),0
000041F2 4780 C29C               00004254   6555          BE    @L693
000041F6                                    6556 @L698    DS    0H
000041F6 E310 C0C0 0004          00004078   6557          LG    1,@lit_1939_171
000041FC 4110 1202               00000202   6558          LA    1,514(0,1)
00004200 E310 D0B0 0024          000000B0   6559          STG   1,176(0,13)
00004206 4110 F22C               0000022C   6560          LA    1,556(0,15)
0000420A E310 D0B8 0024          000000B8   6561          STG   1,184(0,13)
00004210 E548 D0C0 0150          000000C0   6562          MVGHI 192(13),336
00004216 41F0 F2C4               000002C4   6563          LA    15,708(0,15)
0000421A E3F0 D0C8 0024          000000C8   6564          STG   15,200(0,13)
00004220 4110 D0B0               000000B0   6565          LA    1,176(0,13)
00004224 E3F0 C0D0 0004          00004088   6566          LG    15,@lit_1939_177 ; __assert
0000422A                                    6567 @@gen_label226 DS    0H
0000422A 05EF                               6568          BALR  14,15
0000422C                                    6569 @@gen_label227 DS    0H
0000422C                                    6570 @L699    DS    0H
                                            6571 * ***           }
0000422C 47F0 C29C               00004254   6572          B     @L693
00004230                                    6573 @L692    DS    0H
00004230 E3F0 500C 0012          0000000C   6574          LT    15,12(0,5)  ; offset of msetw_MsgVersion in rd_kafka_msg*
                                                                set_writer_s
00004236 4740 C22C               000041E4   6575          BL    @L697
0000423A 12FF                               6576          LTR   15,15
0000423C 4780 C210               000041C8   6577          BE    @L694
00004240 A7FE 0001               00000001   6578          CHI   15,1
00004244 4780 C218               000041D0   6579          BE    @L695
00004248 A7FE 0002               00000002   6580          CHI   15,2
0000424C 4780 C220               000041D8   6581          BE    @L696
00004250 47F0 C22C               000041E4   6582          B     @L697
00004254                                    6583 @L693    DS    0H
                                            6584 * ***
                                                                                                                           Page  134 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6585 * ***
                                            6586 * ***
                                            6587 * ***
                                            6588 * ***           bufsize = hdrsize + msgsetsize;
00004254 B90A 0023                          6589          ALGR  2,3
                                            6590 * ***
                                            6591 * ***
                                            6592 * ***
                                            6593 * ***
                                            6594 * ***           if (rk->rk_conf.msg_copy_max_size > 0) {
00004258 E55C 62F8 0000          000002F8   6595          CHSI  760(6),0
0000425E 47D0 C2F2               000042AA   6596          BNH   @L700
                                            6597 * ***                   size_t queued_bytes = rd_kafka_msgq_size(msetw\
                                            6598 * ->msetw_msgq);
00004262 E3F0 5098 0004          00000098   6599          LG    15,152(0,5)
00004268 E3F0 D0B0 0024          000000B0   6600          STG   15,176(0,13)
0000426E 4110 D0B0               000000B0   6601          LA    1,176(0,13)
00004272 E3F0 C0E8 0004          000040A0   6602          LG    15,@lit_1939_185 ; rd_kafka_msgq_size
00004278                                    6603 @@gen_label229 DS    0H
00004278 05EF                               6604          BALR  14,15
0000427A                                    6605 @@gen_label230 DS    0H
                                            6606 * ***                   bufsize += ((queued_bytes) < ((size_t)rk->rk_c\
                                            6607 * onf.msg_copy_max_size * msetw->msetw_msgcntmax) ? (queued_bytes) : (\
                                            6608 * (size_t)rk->rk_conf.msg_copy_max_size * msetw->msetw_msgcntmax));
0000427A E310 62F8 0014          000002F8   6609          LGF   1,760(0,6)
00004280 E330 5018 0014          00000018   6610          LGF   3,24(0,5)
00004286 B90C 0013                          6611          MSGR  1,3
0000428A B921 00F1                          6612          CLGR  15,1
0000428E 47B0 C2DE               00004296   6613          BNL   @L701
00004292 47F0 C2EE               000042A6   6614          B     @L702
00004296                                    6615 @L701    DS    0H
00004296 E3F0 62F8 0014          000002F8   6616          LGF   15,760(0,6)
0000429C E310 5018 0014          00000018   6617          LGF   1,24(0,5)
000042A2 B90C 00F1                          6618          MSGR  15,1
000042A6                                    6619 @L702    DS    0H
000042A6 B90A 002F                          6620          ALGR  2,15
                                            6621 * ***
                                            6622 * ***
                                            6623 * ***           }
000042AA                                    6624 @L700    DS    0H
                                            6625 * ***
                                            6626 * ***
                                            6627 * ***           bufsize += msg_overhead * msetw->msetw_msgcntmax;
000042AA E3F0 5018 0014          00000018   6628          LGF   15,24(0,5)
000042B0 B90C 004F                          6629          MSGR  4,15
000042B4 B90A 0024                          6630          ALGR  2,4
                                            6631 * ***
                                            6632 * ***
                                            6633 * ***           if (bufsize > (size_t)rk->rk_conf.max_msg_size)
000042B8 E3F0 62F4 0014          000002F4   6634          LGF   15,756(0,6)
000042BE B921 002F                          6635          CLGR  2,15
000042C2 47D0 C314               000042CC   6636          BNH   @L703
                                                                                                                           Page  135 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6637 * ***                   bufsize = (size_t)rk->rk_conf.max_msg_size;
000042C6 E320 62F4 0014          000002F4   6638          LGF   2,756(0,6)
000042CC                                    6639 @L703    DS    0H
                                            6640 * ***
                                            6641 * ***
                                            6642 * ***
                                            6643 * ***
                                            6644 * ***
                                            6645 * ***           msetw->msetw_rkbuf =
                                            6646 * ***                   rd_kafka_buf_new_request0(msetw->msetw_rkb,0,m\
                                            6647 * setw->msetw_msgcntmax/2 + 10,bufsize,0);
000042CC E3F0 5088 0004          00000088   6648          LG    15,136(0,5)
000042D2 E3F0 D0B0 0024          000000B0   6649          STG   15,176(0,13)
000042D8 D707 D0B8 D0B8 000000B8 000000B8   6650          XC    184(8,13),184(13)
000042DE 58F0 5018               00000018   6651          L     15,24(0,5)  ; offset of msetw_msgcntmax in rd_kafka_msgs*
                                                                et_writer_s
000042E2 181F                               6652          LR    1,15        ; /0x2
000042E4 8810 001F               0000001F   6653          SRL   1,31(0)     ;   .
000042E8 1A1F                               6654          AR    1,15        ;   .
000042EA 8A10 0001               00000001   6655          SRA   1,1(0)      ;   .
000042EE A71A 000A               0000000A   6656          AHI   1,10
000042F2 B914 00F1                          6657          LGFR  15,1
000042F6 E3F0 D0C0 0024          000000C0   6658          STG   15,192(0,13)
000042FC E320 D0C8 0024          000000C8   6659          STG   2,200(0,13)
00004302 D707 D0D0 D0D0 000000D0 000000D0   6660          XC    208(8,13),208(13)
00004308 4110 D0B0               000000B0   6661          LA    1,176(0,13)
0000430C E3F0 C0F0 0004          000040A8   6662          LG    15,@lit_1939_186 ; rd_kafka_buf_new_request0
00004312                                    6663 @@gen_label233 DS    0H
00004312 05EF                               6664          BALR  14,15
00004314                                    6665 @@gen_label234 DS    0H
00004314 E3F0 5000 0024          00000000   6666          STG   15,0(0,5)
                                            6667 * ***
                                            6668 * ***
                                            6669 * ***
                                            6670 * ***           rd_kafka_buf_ApiVersion_set(msetw->msetw_rkbuf,
                                            6671 * ***                                       msetw->msetw_ApiVersion,
                                            6672 * ***                                       msetw->msetw_features);
0000431A E3F0 D0B0 0024          000000B0   6673          STG   15,176(0,13)
00004320 E3F0 5008 0015          00000008   6674          LGH   15,8(0,5)
00004326 E3F0 D0B8 0024          000000B8   6675          STG   15,184(0,13)
0000432C E3F0 5010 0014          00000010   6676          LGF   15,16(0,5)
00004332 E3F0 D0C0 0024          000000C0   6677          STG   15,192(0,13)
00004338 4110 D0B0               000000B0   6678          LA    1,176(0,13)
0000433C E3F0 C0F8 0004          000040B0   6679          LG    15,@lit_1939_187 ; rd_kafka_buf_ApiVersion_set
00004342                                    6680 @@gen_label235 DS    0H
00004342 05EF                               6681          BALR  14,15
00004344                                    6682 @@gen_label236 DS    0H
                                            6683 * ***   }
00004344                                    6684 @ret_lab_1939 DS 0H
                                            6685 * * **** Start of Epilogue
                                            6686          DCCEPIL
00004344                                    6687+         ds 0h                                                          01-DCCEP
                                                                                                                           Page  136 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6688+* Epilog
00004344 D707 D088 D088 00000088 00000088   6689+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000434A E3D0 D080 0004          00000080   6690+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004350 E3C0 D090 0004          00000090   6691+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004356 E3B0 C018 0004          00000018   6692+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000435C E3C0 B010 0021          00000010   6693+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004362 E3E0 D008 0004          00000008   6694+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004368 EB1C D020 0004          00000020   6695+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000436E 078E                               6696+         bcr 8,14                if same dsab, just return              01-DCCEP
00004370 E3F0 D010 0024          00000010   6697+         stg 15,16(0,13)         save return code                       01-DCCEP
00004376 E300 D018 0024          00000018   6698+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000437C E3F0 D090 0004          00000090   6699+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004382 E3F0 F018 0004          00000018   6700+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004388 47F0 F040               00000040   6701+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6702+* End of Epilog
                                            6703 * * **** End of Epilogue
                                            6704          DROP  12
                                            6705 *
                                            6706 *   DSECT for automatic variables in "rd_kafka_msgset_writer_alloc_buf"
                                            6707 *      (FUNCTION #1939)
                                            6708 *
00000000                00000000 000000B0   6709 @AUTO#rd_kafka_msgset_writer_alloc_buf DSECT
00000000                                    6710          DS    XL168
000000A8                                    6711 rd_kafka_msgset_writer_alloc_buf#queued_bytes#4 DS 8XL1 ; queued_bytes
000000B0                000000B0 000000A8   6712          ORG   @AUTO#rd_kafka_msgset_writer_alloc_buf+168
000000A8                                    6713 rd_kafka_msgset_writer_alloc_buf#bufsize#0 DS 8XL1 ; bufsize
000000B0                000000B0 000000A8   6714          ORG   @AUTO#rd_kafka_msgset_writer_alloc_buf+168
000000A8                                    6715 rd_kafka_msgset_writer_alloc_buf#msgsetsize#0 DS 8XL1 ; msgsetsize
000000B0                000000B0 000000A8   6716          ORG   @AUTO#rd_kafka_msgset_writer_alloc_buf+168
000000A8                                    6717 rd_kafka_msgset_writer_alloc_buf#hdrsize#0 DS 8XL1 ; hdrsize
000000B0                000000B0 000000A8   6718          ORG   @AUTO#rd_kafka_msgset_writer_alloc_buf+168
000000A8                                    6719 rd_kafka_msgset_writer_alloc_buf#msg_overhead#0 DS 8XL1 ; msg_overhead
                                            6720 *
0000438C                00000000 00007AB2   6721 @CODE    CSECT
                                            6722 *
                                            6723 *
                                            6724 *
                                            6725 * ....... start of rd_kafka_msgset_writer_write_MessageSet_v2_header
0000438C                                    6726 @LNAME1940 DS  0H
0000438C 00000031                           6727          DC    X'00000031'
00004390 99846D9281869281                   6728          DC    C'rd_kafka_msgset_writer_write_Mes'
000043B0 A2818785E285A36D                   6729          DC    C'sageSet_v2_header'
000043C1 00                                 6730          DC    X'00'
                                            6731 rd_kafka_msgset_writer_write_$Message$Set_v2_header DCCPRLG CINDEX=1940*
                                                                ,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME*
                                                                1940
                                            6732          macro
                                            6733          dccextrn &m
                                            6734          gblc    &$dccext(1000)
                                            6735          gbla    &$dccexti
                                            6736          lcla    &i
                                            6737 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page  137 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6738 &i       seta    1
                                            6739 .loop    aif    (&i gt &$dccexti).around
                                            6740          aif    ('&$dccext(&i)' eq '&m').getout
                                            6741 &i       seta    &i+1
                                            6742          ago     .loop
                                            6743 .around  anop
                                            6744 &$dccexti seta &$dccexti+1
                                            6745          extrn  &m
                                            6746 .getout  anop
                                            6747          mend
000043C8                                    6748+$eye0153    ds    0d                                                    02-DCCCA
000043C8 C4C3C3                             6749+         dc cl3'DCC'                                                    02-DCCCA
000043CB 01                                 6750+         dc xl1'01' format one                                          02-DCCCA
000043CC 00000000                           6751+         dc a(0)                                                        02-DCCCA
000043D0 000000000000443A                   6752+         dc ad(@PER_1940)                                               02-DCCCA
000043D8 00000000000000D8                   6753+         dc ad(216)                                                     02-DCCCA
000043E0 0000000000000000                   6754+         dc ad(0)                                                       02-DCCCA
000043E8 0000000000001000                   6755+         dc ad(4096)                                                    02-DCCCA
000043F0 20                                 6756+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000043F1 03                                 6757+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000043F2 03                                 6758+         dc al1(3)                                                      02-DCCCA
000043F3 08                                 6759+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000043F4 00                                 6760+         dc bl.8'00000000'                                              02-DCCCA
000043F5 000000                             6761+         dc al3(0)                                                      02-DCCCA
000043F8 000000000000438C                   6762+         dc ad(@LNAME1940)                                              02-DCCCA
00004400                                    6763+         ds 0d                                                          02-DCCCA
00004400 00000000000043C8                   6764+         dc ad($eye0153)                                                02-DCCCA
00004408 0000000000000000                   6765+         dc ad(0)                                                       02-DCCCA
00004410                                    6766+         ds    0d                                                       01-DCCPR
00004410                                    6767+rd_kafka_msgset_writer_write_$Message$Set_v2_header ds 0d               01-DCCPR
00004410                                    6768+@REGION_1940_1 ds 0h                                                    01-DCCPR
00004410 EBEC D008 0024          00000008   6769+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004416 E3E0 D088 0004          00000088   6770+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000441C E3C0 D090 0004          00000090   6771+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004422 B904 002E                          6772+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004426 E3B0 C018 0004          00000018   6773+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000442C A7EB 00D8               000000D8   6774+         aghi  14,216              increase by frame size               01-DCCPR
00004430 E3E0 C020 0021          00000020   6775+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004436 4720 B020               00000020   6776+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000443A                                    6777+@PER_1940 ds   0h                                                       01-DCCPR
0000443A EBDE 2080 0024          00000080   6778+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004440 E3C0 2090 0024          00000090   6779+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004446 B904 00D2                          6780+         lgr   13,2                set real frame pointer               01-DCCPR
0000444A B904 00CF                          6781+         lgr   12,15               set base reg                         01-DCCPR
                        00004410            6782+         using @REGION_1940_1,12                                        01-DCCPR
                                            6783 * ******* End of Prologue
                                            6784 * *
                                            6785 * ***           rd_kafka_buf_t *rkbuf = msetw->msetw_rkbuf;
0000444E E320 1000 0004          00000000   6786          LG    2,0(0,1)    ; msetw
00004454 E330 2000 0004          00000000   6787          LG    3,0(0,2)    ; msetw
                                            6788 * ***
                                            6789 * ***           do { if (((!(msetw->msetw_ApiVersion >= 3)))) rd_kafka\
                                                                                                                           Page  138 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6790 * _crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_writer.c",385,\
                                            6791 *  __FUNCTION__, (((void *)0)), "assert: " "msetw->msetw_ApiVersion >=\
                                            6792 *  3"); } while (0);
0000445A                                    6793 @L704    DS    0H
0000445A 48F0 2008               00000008   6794          LH    15,8(0,2)
0000445E A7FE 0003               00000003   6795          CHI   15,3
00004462 47B0 C098               000044A8   6796          BNL   @L707
00004466 E3F0 C2A0 0004          000046B0   6797          LG    15,@lit_1940_189
0000446C 4110 F22C               0000022C   6798          LA    1,556(0,15)
00004470 E310 D0B0 0024          000000B0   6799          STG   1,176(0,13)
00004476 E548 D0B8 0181          000000B8   6800          MVGHI 184(13),385
0000447C E310 C298 0004          000046A8   6801          LG    1,@lit_1940_190
00004482 4110 1224               00000224   6802          LA    1,548(0,1)
00004486 E310 D0C0 0024          000000C0   6803          STG   1,192(0,13)
0000448C D707 D0C8 D0C8 000000C8 000000C8   6804          XC    200(8,13),200(13)
00004492 41F0 F2E2               000002E2   6805          LA    15,738(0,15)
00004496 E3F0 D0D0 0024          000000D0   6806          STG   15,208(0,13)
0000449C 4110 D0B0               000000B0   6807          LA    1,176(0,13)
000044A0 E3F0 C290 0004          000046A0   6808          LG    15,@lit_1940_191 ; rd_kafka_crash
000044A6                                    6809 @@gen_label238 DS    0H
000044A6 05EF                               6810          BALR  14,15
000044A8                                    6811 @@gen_label239 DS    0H
000044A8                                    6812 @L707    DS    0H
                                            6813 * ***           do { if (((!(msetw->msetw_MsgVersion == 2)))) rd_kafka\
                                            6814 * _crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_writer.c",386,\
                                            6815 *  __FUNCTION__, (((void *)0)), "assert: " "msetw->msetw_MsgVersion ==\
                                            6816 *  2"); } while (0);
000044A8                                    6817 @L708    DS    0H
000044A8 E55C 200C 0002          0000000C   6818          CHSI  12(2),2
000044AE 4780 C0E4               000044F4   6819          BE    @L711
000044B2 E3F0 C2A0 0004          000046B0   6820          LG    15,@lit_1940_189
000044B8 4110 F22C               0000022C   6821          LA    1,556(0,15)
000044BC E310 D0B0 0024          000000B0   6822          STG   1,176(0,13)
000044C2 E548 D0B8 0182          000000B8   6823          MVGHI 184(13),386
000044C8 E310 C298 0004          000046A8   6824          LG    1,@lit_1940_190
000044CE 4110 1224               00000224   6825          LA    1,548(0,1)
000044D2 E310 D0C0 0024          000000C0   6826          STG   1,192(0,13)
000044D8 D707 D0C8 D0C8 000000C8 000000C8   6827          XC    200(8,13),200(13)
000044DE 41F0 F308               00000308   6828          LA    15,776(0,15)
000044E2 E3F0 D0D0 0024          000000D0   6829          STG   15,208(0,13)
000044E8 4110 D0B0               000000B0   6830          LA    1,176(0,13)
000044EC E3F0 C290 0004          000046A0   6831          LG    15,@lit_1940_191 ; rd_kafka_crash
000044F2                                    6832 @@gen_label241 DS    0H
000044F2 05EF                               6833          BALR  14,15
000044F4                                    6834 @@gen_label242 DS    0H
000044F4                                    6835 @L711    DS    0H
                                            6836 * ***
                                            6837 * ***
                                            6838 * ***
                                            6839 * ***           msetw->msetw_of_start = rd_kafka_buf_write_i64(rkbuf, \
                                            6840 * 0);
000044F4 E330 D0B0 0024          000000B0   6841          STG   3,176(0,13)
                                                                                                                           Page  139 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000044FA D707 D0B8 D0B8 000000B8 000000B8   6842          XC    184(8,13),184(13)
00004500 4110 D0B0               000000B0   6843          LA    1,176(0,13)
00004504 E340 C2A8 0004          000046B8   6844          LG    4,@lit_1940_195 ; rd_kafka_buf_write_i64
0000450A B904 00F4                          6845          LGR   15,4
0000450E                                    6846 @@gen_label243 DS    0H
0000450E 05EF                               6847          BALR  14,15
00004510                                    6848 @@gen_label244 DS    0H
00004510 E3F0 2040 0024          00000040   6849          STG   15,64(0,2)
                                            6850 * ***
                                            6851 * ***
                                            6852 * ***           rd_kafka_buf_write_i32(rkbuf, 0);
00004516 E330 D0B0 0024          000000B0   6853          STG   3,176(0,13)
0000451C D707 D0B8 D0B8 000000B8 000000B8   6854          XC    184(8,13),184(13)
00004522 4110 D0B0               000000B0   6855          LA    1,176(0,13)
00004526 E350 C2B0 0004          000046C0   6856          LG    5,@lit_1940_196 ; rd_kafka_buf_write_i32
0000452C B904 00F5                          6857          LGR   15,5
00004530                                    6858 @@gen_label245 DS    0H
00004530 05EF                               6859          BALR  14,15
00004532                                    6860 @@gen_label246 DS    0H
                                            6861 * ***
                                            6862 * ***
                                            6863 * ***           rd_kafka_buf_write_i32(rkbuf, 0);
00004532 E330 D0B0 0024          000000B0   6864          STG   3,176(0,13)
00004538 D707 D0B8 D0B8 000000B8 000000B8   6865          XC    184(8,13),184(13)
0000453E 4110 D0B0               000000B0   6866          LA    1,176(0,13)
00004542 B904 00F5                          6867          LGR   15,5
00004546                                    6868 @@gen_label247 DS    0H
00004546 05EF                               6869          BALR  14,15
00004548                                    6870 @@gen_label248 DS    0H
                                            6871 * ***
                                            6872 * ***
                                            6873 * ***           rd_kafka_buf_write_i8(rkbuf, msetw->msetw_MsgVersion);
00004548 E330 D0B0 0024          000000B0   6874          STG   3,176(0,13)
0000454E 58F0 200C               0000000C   6875          L     15,12(0,2)  ; offset of msetw_MsgVersion in rd_kafka_msg*
                                                                set_writer_s
00004552 EBFF 0038 000D          00000038   6876          SLLG  15,15,56(0)
00004558 EBFF 0038 000A          00000038   6877          SRAG  15,15,56(0)
0000455E E3F0 D0B8 0024          000000B8   6878          STG   15,184(0,13)
00004564 4110 D0B0               000000B0   6879          LA    1,176(0,13)
00004568 E3F0 C2B8 0004          000046C8   6880          LG    15,@lit_1940_198 ; rd_kafka_buf_write_i8
0000456E                                    6881 @@gen_label249 DS    0H
0000456E 05EF                               6882          BALR  14,15
00004570                                    6883 @@gen_label250 DS    0H
                                            6884 * ***
                                            6885 * ***
                                            6886 * ***
                                            6887 * ***
                                            6888 * ***
                                            6889 * ***           msetw->msetw_of_CRC = rd_kafka_buf_write_i32(rkbuf, 0)\
                                            6890 * ;
00004570 E330 D0B0 0024          000000B0   6891          STG   3,176(0,13)
00004576 D707 D0B8 D0B8 000000B8 000000B8   6892          XC    184(8,13),184(13)
                                                                                                                           Page  140 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000457C 4110 D0B0               000000B0   6893          LA    1,176(0,13)
00004580 B904 00F5                          6894          LGR   15,5
00004584                                    6895 @@gen_label251 DS    0H
00004584 05EF                               6896          BALR  14,15
00004586                                    6897 @@gen_label252 DS    0H
00004586 E3F0 2058 0024          00000058   6898          STG   15,88(0,2)
                                            6899 * ***
                                            6900 * ***
                                            6901 * ***           rd_kafka_buf_write_i16(rkbuf, 0);
0000458C E330 D0B0 0024          000000B0   6902          STG   3,176(0,13)
00004592 D707 D0B8 D0B8 000000B8 000000B8   6903          XC    184(8,13),184(13)
00004598 4110 D0B0               000000B0   6904          LA    1,176(0,13)
0000459C E360 C2C0 0004          000046D0   6905          LG    6,@lit_1940_200 ; rd_kafka_buf_write_i16
000045A2 B904 00F6                          6906          LGR   15,6
000045A6                                    6907 @@gen_label253 DS    0H
000045A6 05EF                               6908          BALR  14,15
000045A8                                    6909 @@gen_label254 DS    0H
                                            6910 * ***
                                            6911 * ***
                                            6912 * ***           rd_kafka_buf_write_i32(rkbuf, 0);
000045A8 E330 D0B0 0024          000000B0   6913          STG   3,176(0,13)
000045AE D707 D0B8 D0B8 000000B8 000000B8   6914          XC    184(8,13),184(13)
000045B4 4110 D0B0               000000B0   6915          LA    1,176(0,13)
000045B8 B904 00F5                          6916          LGR   15,5
000045BC                                    6917 @@gen_label255 DS    0H
000045BC 05EF                               6918          BALR  14,15
000045BE                                    6919 @@gen_label256 DS    0H
                                            6920 * ***
                                            6921 * ***
                                            6922 * ***           rd_kafka_buf_write_i64(rkbuf, 0);
000045BE E330 D0B0 0024          000000B0   6923          STG   3,176(0,13)
000045C4 D707 D0B8 D0B8 000000B8 000000B8   6924          XC    184(8,13),184(13)
000045CA 4110 D0B0               000000B0   6925          LA    1,176(0,13)
000045CE B904 00F4                          6926          LGR   15,4
000045D2                                    6927 @@gen_label257 DS    0H
000045D2 05EF                               6928          BALR  14,15
000045D4                                    6929 @@gen_label258 DS    0H
                                            6930 * ***
                                            6931 * ***
                                            6932 * ***           rd_kafka_buf_write_i64(rkbuf, 0);
000045D4 E330 D0B0 0024          000000B0   6933          STG   3,176(0,13)
000045DA D707 D0B8 D0B8 000000B8 000000B8   6934          XC    184(8,13),184(13)
000045E0 4110 D0B0               000000B0   6935          LA    1,176(0,13)
000045E4 B904 00F4                          6936          LGR   15,4
000045E8                                    6937 @@gen_label259 DS    0H
000045E8 05EF                               6938          BALR  14,15
000045EA                                    6939 @@gen_label260 DS    0H
                                            6940 * ***
                                            6941 * ***
                                            6942 * ***           rd_kafka_buf_write_i64(rkbuf, msetw->msetw_pid.id);
000045EA E330 D0B0 0024          000000B0   6943          STG   3,176(0,13)
000045F0 E3F0 2078 0004          00000078   6944          LG    15,120(0,2)
                                                                                                                           Page  141 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000045F6 E3F0 D0B8 0024          000000B8   6945          STG   15,184(0,13)
000045FC 4110 D0B0               000000B0   6946          LA    1,176(0,13)
00004600 B904 00F4                          6947          LGR   15,4
00004604                                    6948 @@gen_label261 DS    0H
00004604 05EF                               6949          BALR  14,15
00004606                                    6950 @@gen_label262 DS    0H
                                            6951 * ***
                                            6952 * ***
                                            6953 * ***           rd_kafka_buf_write_i16(rkbuf, msetw->msetw_pid.epoch);
00004606 E330 D0B0 0024          000000B0   6954          STG   3,176(0,13)
0000460C E3F0 2080 0015          00000080   6955          LGH   15,128(0,2)
00004612 E3F0 D0B8 0024          000000B8   6956          STG   15,184(0,13)
00004618 4110 D0B0               000000B0   6957          LA    1,176(0,13)
0000461C B904 00F6                          6958          LGR   15,6
00004620                                    6959 @@gen_label263 DS    0H
00004620 05EF                               6960          BALR  14,15
00004622                                    6961 @@gen_label264 DS    0H
                                            6962 * ***
                                            6963 * ***
                                            6964 * ***           rd_kafka_buf_write_i32(rkbuf, -1);
00004622 E330 D0B0 0024          000000B0   6965          STG   3,176(0,13)
00004628 E548 D0B8 FFFF          000000B8   6966          MVGHI 184(13),-1
0000462E 4110 D0B0               000000B0   6967          LA    1,176(0,13)
00004632 B904 00F5                          6968          LGR   15,5
00004636                                    6969 @@gen_label265 DS    0H
00004636 05EF                               6970          BALR  14,15
00004638                                    6971 @@gen_label266 DS    0H
                                            6972 * ***
                                            6973 * ***
                                            6974 * ***           rd_kafka_buf_write_i32(rkbuf, 0);
00004638 E330 D0B0 0024          000000B0   6975          STG   3,176(0,13)
0000463E D707 D0B8 D0B8 000000B8 000000B8   6976          XC    184(8,13),184(13)
00004644 4110 D0B0               000000B0   6977          LA    1,176(0,13)
00004648 B904 00F5                          6978          LGR   15,5
0000464C                                    6979 @@gen_label267 DS    0H
0000464C 05EF                               6980          BALR  14,15
0000464E                                    6981 @@gen_label268 DS    0H
                                            6982 * ***
                                            6983 * ***   }
0000464E                                    6984 @ret_lab_1940 DS 0H
                                            6985 * * **** Start of Epilogue
                                            6986          DCCEPIL
0000464E                                    6987+         ds 0h                                                          01-DCCEP
                                            6988+* Epilog
0000464E D707 D088 D088 00000088 00000088   6989+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004654 E3D0 D080 0004          00000080   6990+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000465A E3C0 D090 0004          00000090   6991+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004660 E3B0 C018 0004          00000018   6992+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004666 E3C0 B010 0021          00000010   6993+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000466C E3E0 D008 0004          00000008   6994+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004672 EB1C D020 0004          00000020   6995+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004678 078E                               6996+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page  142 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000467A E3F0 D010 0024          00000010   6997+         stg 15,16(0,13)         save return code                       01-DCCEP
00004680 E300 D018 0024          00000018   6998+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004686 E3F0 D090 0004          00000090   6999+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000468C E3F0 F018 0004          00000018   7000+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004692 47F0 F040               00000040   7001+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7002+* End of Epilog
                                            7003 * * **** End of Epilogue
00004698                                    7004          DS    0D
00004698 000000D8                           7005 @FRAMESIZE_1940 DC F'216'
0000469C 00000000
000046A0 0000000000000000                   7006 @lit_1940_191 DC AD(rd_kafka_crash)
000046A8 0000000000007AB8                   7007 @lit_1940_190 DC AD(@DATA)
000046B0 0000000000007DEC                   7008 @lit_1940_189 DC AD(@strings@)
000046B8 0000000000002A08                   7009 @lit_1940_195 DC AD(rd_kafka_buf_write_i64)
000046C0 0000000000002668                   7010 @lit_1940_196 DC AD(rd_kafka_buf_write_i32)
000046C8 00000000000022D0                   7011 @lit_1940_198 DC AD(rd_kafka_buf_write_i8)
000046D0 00000000000023F8                   7012 @lit_1940_200 DC AD(rd_kafka_buf_write_i16)
                                            7013          DROP  12
                                            7014 *
                                            7015 *   DSECT for automatic variables in "rd_kafka_msgset_writer_write_Mes
                                            7016 *           sageSet_v2_header"
                                            7017 *      (FUNCTION #1940)
                                            7018 *
00000000                00000000 000000A8   7019 @AUTO#rd_kafka_msgset_writer_write_$Message$Set_v2_header DSECT
00000000                                    7020          DS    XL168
                                            7021 *
000046D8                00000000 00007AB2   7022 @CODE    CSECT
                                            7023 *
                                            7024 *
                                            7025 *
                                            7026 * ....... start of rd_kafka_msgset_writer_write_Produce_header
000046D8                                    7027 @LNAME1941 DS  0H
000046D8 0000002B                           7028          DC    X'0000002B'
000046DC 99846D9281869281                   7029          DC    C'rd_kafka_msgset_writer_write_Pro'
000046FC 84A483856D888581                   7030          DC    C'duce_header'
00004707 00                                 7031          DC    X'00'
                                            7032 rd_kafka_msgset_writer_write_$Produce_header DCCPRLG CINDEX=1941,BASER=*
                                                                12,FRAME=192,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1941
                                            7033          macro
                                            7034          dccextrn &m
                                            7035          gblc    &$dccext(1000)
                                            7036          gbla    &$dccexti
                                            7037          lcla    &i
                                            7038 &$dccext(&$dccexti+1) setc    '&m'
                                            7039 &i       seta    1
                                            7040 .loop    aif    (&i gt &$dccexti).around
                                            7041          aif    ('&$dccext(&i)' eq '&m').getout
                                            7042 &i       seta    &i+1
                                            7043          ago     .loop
                                            7044 .around  anop
                                            7045 &$dccexti seta &$dccexti+1
                                            7046          extrn  &m
                                                                                                                           Page  143 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7047 .getout  anop
                                            7048          mend
00004708                                    7049+$eye0156    ds    0d                                                    02-DCCCA
00004708 C4C3C3                             7050+         dc cl3'DCC'                                                    02-DCCCA
0000470B 01                                 7051+         dc xl1'01' format one                                          02-DCCCA
0000470C 00000000                           7052+         dc a(0)                                                        02-DCCCA
00004710 000000000000477A                   7053+         dc ad(@PER_1941)                                               02-DCCCA
00004718 00000000000000C0                   7054+         dc ad(192)                                                     02-DCCCA
00004720 0000000000000000                   7055+         dc ad(0)                                                       02-DCCCA
00004728 0000000000001000                   7056+         dc ad(4096)                                                    02-DCCCA
00004730 20                                 7057+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004731 03                                 7058+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004732 03                                 7059+         dc al1(3)                                                      02-DCCCA
00004733 08                                 7060+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004734 00                                 7061+         dc bl.8'00000000'                                              02-DCCCA
00004735 000000                             7062+         dc al3(0)                                                      02-DCCCA
00004738 00000000000046D8                   7063+         dc ad(@LNAME1941)                                              02-DCCCA
00004740                                    7064+         ds 0d                                                          02-DCCCA
00004740 0000000000004708                   7065+         dc ad($eye0156)                                                02-DCCCA
00004748 0000000000000000                   7066+         dc ad(0)                                                       02-DCCCA
00004750                                    7067+         ds    0d                                                       01-DCCPR
00004750                                    7068+rd_kafka_msgset_writer_write_$Produce_header ds 0d                      01-DCCPR
00004750                                    7069+@REGION_1941_1 ds 0h                                                    01-DCCPR
00004750 EBEC D008 0024          00000008   7070+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004756 E3E0 D088 0004          00000088   7071+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000475C E3C0 D090 0004          00000090   7072+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004762 B904 002E                          7073+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004766 E3B0 C018 0004          00000018   7074+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000476C A7EB 00C0               000000C0   7075+         aghi  14,192              increase by frame size               01-DCCPR
00004770 E3E0 C020 0021          00000020   7076+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004776 4720 B020               00000020   7077+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000477A                                    7078+@PER_1941 ds   0h                                                       01-DCCPR
0000477A EBDE 2080 0024          00000080   7079+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004780 E3C0 2090 0024          00000090   7080+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004786 B904 00D2                          7081+         lgr   13,2                set real frame pointer               01-DCCPR
0000478A B904 00CF                          7082+         lgr   12,15               set base reg                         01-DCCPR
                        00004750            7083+         using @REGION_1941_1,12                                        01-DCCPR
                                            7084 * ******* End of Prologue
                                            7085 * *
0000478E E320 1000 0004          00000000   7086          LG    2,0(0,1)    ; msetw
                                            7087 * ***
                                            7088 * ***           rd_kafka_buf_t *rkbuf = msetw->msetw_rkbuf;
00004794 E330 2000 0004          00000000   7089          LG    3,0(0,2)    ; msetw
                                            7090 * ***           rd_kafka_t *rk = msetw->msetw_rkb->rkb_rk;
0000479A E3F0 2088 0004          00000088   7091          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
000047A0 E3F0 FFD0 0004          00000FD0   7092          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
                                            7093 * ***           rd_kafka_topic_t *rkt = msetw->msetw_rktp->rktp_rkt;
000047A6 E310 2090 0004          00000090   7094          LG    1,144(0,2)  ; offset of msetw_rktp in rd_kafka_msgset_wr*
                                                                iter_s
000047AC E340 1060 0004          00000060   7095          LG    4,96(0,1)   ; offset of rktp_rkt in rd_kafka_toppar_s
                                            7096 * ***
                                                                                                                           Page  144 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7097 * ***
                                            7098 * ***           if (msetw->msetw_ApiVersion >= 3)
000047B2 4810 2008               00000008   7099          LH    1,8(0,2)
000047B6 A71E 0003               00000003   7100          CHI   1,3
000047BA 4740 C08C               000047DC   7101          BL    @L712
                                            7102 * ***                   rd_kafka_buf_write_kstr(rkbuf, rk->rk_eos.tran\
                                            7103 * sactional_id);
000047BE E330 D0B0 0024          000000B0   7104          STG   3,176(0,13)
000047C4 E3F0 FD30 0004          00000D30   7105          LG    15,3376(0,15)
000047CA E3F0 D0B8 0024          000000B8   7106          STG   15,184(0,13)
000047D0 4110 D0B0               000000B0   7107          LA    1,176(0,13)
000047D4 E3F0 C188 0004          000048D8   7108          LG    15,@lit_1941_209 ; rd_kafka_buf_write_kstr
000047DA                                    7109 @@gen_label270 DS    0H
000047DA 05EF                               7110          BALR  14,15
000047DC                                    7111 @@gen_label271 DS    0H
000047DC                                    7112 @L712    DS    0H
                                            7113 * ***
                                            7114 * ***
                                            7115 * ***           rd_kafka_buf_write_i16(rkbuf, rkt->rkt_conf.required_a\
                                            7116 * cks);
000047DC E330 D0B0 0024          000000B0   7117          STG   3,176(0,13)
000047E2 58F0 43A0               000003A0   7118          L     15,928(0,4) ; offset of required_acks in rd_kafka_topic_*
                                                                conf_s
000047E6 B907 00FF                          7119          LGHR  15,15
000047EA E3F0 D0B8 0024          000000B8   7120          STG   15,184(0,13)
000047F0 4110 D0B0               000000B0   7121          LA    1,176(0,13)
000047F4 E3F0 C190 0004          000048E0   7122          LG    15,@lit_1941_210 ; rd_kafka_buf_write_i16
000047FA                                    7123 @@gen_label272 DS    0H
000047FA 05EF                               7124          BALR  14,15
000047FC                                    7125 @@gen_label273 DS    0H
                                            7126 * ***
                                            7127 * ***
                                            7128 * ***           rd_kafka_buf_write_i32(rkbuf, rkt->rkt_conf.request_ti\
                                            7129 * meout_ms);
000047FC E330 D0B0 0024          000000B0   7130          STG   3,176(0,13)
00004802 E3F0 43A4 0014          000003A4   7131          LGF   15,932(0,4)
00004808 E3F0 D0B8 0024          000000B8   7132          STG   15,184(0,13)
0000480E 4110 D0B0               000000B0   7133          LA    1,176(0,13)
00004812 E350 C198 0004          000048E8   7134          LG    5,@lit_1941_211 ; rd_kafka_buf_write_i32
00004818 B904 00F5                          7135          LGR   15,5
0000481C                                    7136 @@gen_label274 DS    0H
0000481C 05EF                               7137          BALR  14,15
0000481E                                    7138 @@gen_label275 DS    0H
                                            7139 * ***
                                            7140 * ***
                                            7141 * ***           rd_kafka_buf_write_i32(rkbuf, 1);
0000481E E330 D0B0 0024          000000B0   7142          STG   3,176(0,13)
00004824 E548 D0B8 0001          000000B8   7143          MVGHI 184(13),1
0000482A 4110 D0B0               000000B0   7144          LA    1,176(0,13)
0000482E B904 00F5                          7145          LGR   15,5
00004832                                    7146 @@gen_label276 DS    0H
00004832 05EF                               7147          BALR  14,15
                                                                                                                           Page  145 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004834                                    7148 @@gen_label277 DS    0H
                                            7149 * ***
                                            7150 * ***
                                            7151 * ***           rd_kafka_buf_write_kstr(rkbuf, rkt->rkt_topic);
00004834 E330 D0B0 0024          000000B0   7152          STG   3,176(0,13)
0000483A E3F0 4080 0004          00000080   7153          LG    15,128(0,4)
00004840 E3F0 D0B8 0024          000000B8   7154          STG   15,184(0,13)
00004846 4110 D0B0               000000B0   7155          LA    1,176(0,13)
0000484A E3F0 C188 0004          000048D8   7156          LG    15,@lit_1941_209 ; rd_kafka_buf_write_kstr
00004850                                    7157 @@gen_label278 DS    0H
00004850 05EF                               7158          BALR  14,15
00004852                                    7159 @@gen_label279 DS    0H
                                            7160 * ***
                                            7161 * ***
                                            7162 * ***           rd_kafka_buf_write_i32(rkbuf, 1);
00004852 E330 D0B0 0024          000000B0   7163          STG   3,176(0,13)
00004858 E548 D0B8 0001          000000B8   7164          MVGHI 184(13),1
0000485E 4110 D0B0               000000B0   7165          LA    1,176(0,13)
00004862 B904 00F5                          7166          LGR   15,5
00004866                                    7167 @@gen_label280 DS    0H
00004866 05EF                               7168          BALR  14,15
00004868                                    7169 @@gen_label281 DS    0H
                                            7170 * ***
                                            7171 * ***
                                            7172 * ***           rd_kafka_buf_write_i32(rkbuf, msetw->msetw_rktp->rktp_\
                                            7173 * partition);
00004868 E330 D0B0 0024          000000B0   7174          STG   3,176(0,13)
0000486E E3F0 2090 0004          00000090   7175          LG    15,144(0,2) ; offset of msetw_rktp in rd_kafka_msgset_wr*
                                                                iter_s
00004874 E3F0 F068 0014          00000068   7176          LGF   15,104(0,15)
0000487A E3F0 D0B8 0024          000000B8   7177          STG   15,184(0,13)
00004880 4110 D0B0               000000B0   7178          LA    1,176(0,13)
00004884 B904 00F5                          7179          LGR   15,5
00004888                                    7180 @@gen_label282 DS    0H
00004888 05EF                               7181          BALR  14,15
0000488A                                    7182 @@gen_label283 DS    0H
                                            7183 * ***
                                            7184 * ***
                                            7185 * ***           msetw->msetw_of_MessageSetSize = rd_kafka_buf_write_i3\
                                            7186 * 2(rkbuf, 0);
0000488A E330 D0B0 0024          000000B0   7187          STG   3,176(0,13)
00004890 D707 D0B8 D0B8 000000B8 000000B8   7188          XC    184(8,13),184(13)
00004896 4110 D0B0               000000B0   7189          LA    1,176(0,13)
0000489A B904 00F5                          7190          LGR   15,5
0000489E                                    7191 @@gen_label284 DS    0H
0000489E 05EF                               7192          BALR  14,15
000048A0                                    7193 @@gen_label285 DS    0H
000048A0 E3F0 2038 0024          00000038   7194          STG   15,56(0,2)
                                            7195 * ***
                                            7196 * ***           if (msetw->msetw_MsgVersion == 2) {
000048A6 E55C 200C 0002          0000000C   7197          CHSI  12(2),2
000048AC 4770 C1A8               000048F8   7198          BNE   @L713
                                                                                                                           Page  146 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7199 * ***
                                            7200 * ***                   rd_kafka_msgset_writer_write_MessageSet_v2_hea\
                                            7201 * der(msetw);
000048B0 E320 D0B0 0024          000000B0   7202          STG   2,176(0,13)
000048B6 4110 D0B0               000000B0   7203          LA    1,176(0,13)
000048BA E3F0 C1A0 0004          000048F0   7204          LG    15,@lit_1941_217 ; rd_kafka_msgset_writer_write_MessageS*
                                                                et_v2_header
000048C0                                    7205 @@gen_label287 DS    0H
000048C0 05EF                               7206          BALR  14,15
000048C2                                    7207 @@gen_label288 DS    0H
                                            7208 * ***                   msetw->msetw_MessageSetSize = (8+4+4+1+4+2+4+8\
                                            7209 * +8+8+2+4+4);
000048C2 E548 2030 003D          00000030   7210          MVGHI 48(2),61    ; offset of msetw_MessageSetSize in rd_kafka*
                                                                _msgset_writer_s
                                            7211 * ***           } else {
000048C8 47F0 C1AE               000048FE   7212          B     @L714
000048D0                                    7213          DS    0D
000048D0 000000C0                           7214 @FRAMESIZE_1941 DC F'192'
000048D4 00000000
000048D8 0000000000002F30                   7215 @lit_1941_209 DC AD(rd_kafka_buf_write_kstr)
000048E0 00000000000023F8                   7216 @lit_1941_210 DC AD(rd_kafka_buf_write_i16)
000048E8 0000000000002668                   7217 @lit_1941_211 DC AD(rd_kafka_buf_write_i32)
000048F0 0000000000004410                   7218 @lit_1941_217 DC AD(rd_kafka_msgset_writer_write_$Message$Set_v2_header*
                                                                )
000048F8                                    7219 @L713    DS    0H
                                            7220 * ***
                                            7221 * ***                   msetw->msetw_MessageSetSize = 0;
000048F8 E548 2030 0000          00000030   7222          MVGHI 48(2),0     ; offset of msetw_MessageSetSize in rd_kafka*
                                                                _msgset_writer_s
                                            7223 * ***           }
000048FE                                    7224 @L714    DS    0H
                                            7225 * ***   }
000048FE                                    7226 @ret_lab_1941 DS 0H
                                            7227 * * **** Start of Epilogue
                                            7228          DCCEPIL
000048FE                                    7229+         ds 0h                                                          01-DCCEP
                                            7230+* Epilog
000048FE D707 D088 D088 00000088 00000088   7231+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004904 E3D0 D080 0004          00000080   7232+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000490A E3C0 D090 0004          00000090   7233+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004910 E3B0 C018 0004          00000018   7234+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004916 E3C0 B010 0021          00000010   7235+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000491C E3E0 D008 0004          00000008   7236+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004922 EB1C D020 0004          00000020   7237+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004928 078E                               7238+         bcr 8,14                if same dsab, just return              01-DCCEP
0000492A E3F0 D010 0024          00000010   7239+         stg 15,16(0,13)         save return code                       01-DCCEP
00004930 E300 D018 0024          00000018   7240+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004936 E3F0 D090 0004          00000090   7241+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000493C E3F0 F018 0004          00000018   7242+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004942 47F0 F040               00000040   7243+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7244+* End of Epilog
                                            7245 * * **** End of Epilogue
                                                                                                                           Page  147 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7246          DROP  12
                                            7247 *
                                            7248 *   DSECT for automatic variables in "rd_kafka_msgset_writer_write_Pro
                                            7249 *           duce_header"
                                            7250 *      (FUNCTION #1941)
                                            7251 *
00000000                00000000 000000A8   7252 @AUTO#rd_kafka_msgset_writer_write_$Produce_header DSECT
00000000                                    7253          DS    XL168
                                            7254 *
00004946                00000000 00007AB2   7255 @CODE    CSECT
                                            7256 *
                                            7257 *
                                            7258 *
                                            7259 * ....... start of rd_kafka_msgset_writer_init
00004946                                    7260 @LNAME1942 DS  0H
00004946 0000001B                           7261          DC    X'0000001B'
0000494A 99846D9281869281                   7262          DC    C'rd_kafka_msgset_writer_init'
00004965 00                                 7263          DC    X'00'
                                            7264 rd_kafka_msgset_writer_init DCCPRLG CINDEX=1942,BASER=12,FRAME=216,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1942
                                            7265          macro
                                            7266          dccextrn &m
                                            7267          gblc    &$dccext(1000)
                                            7268          gbla    &$dccexti
                                            7269          lcla    &i
                                            7270 &$dccext(&$dccexti+1) setc    '&m'
                                            7271 &i       seta    1
                                            7272 .loop    aif    (&i gt &$dccexti).around
                                            7273          aif    ('&$dccext(&i)' eq '&m').getout
                                            7274 &i       seta    &i+1
                                            7275          ago     .loop
                                            7276 .around  anop
                                            7277 &$dccexti seta &$dccexti+1
                                            7278          extrn  &m
                                            7279 .getout  anop
                                            7280          mend
00004968                                    7281+$eye0159    ds    0d                                                    02-DCCCA
00004968 C4C3C3                             7282+         dc cl3'DCC'                                                    02-DCCCA
0000496B 01                                 7283+         dc xl1'01' format one                                          02-DCCCA
0000496C 00000000                           7284+         dc a(0)                                                        02-DCCCA
00004970 00000000000049DA                   7285+         dc ad(@PER_1942)                                               02-DCCCA
00004978 00000000000000D8                   7286+         dc ad(216)                                                     02-DCCCA
00004980 0000000000000000                   7287+         dc ad(0)                                                       02-DCCCA
00004988 0000000000001000                   7288+         dc ad(4096)                                                    02-DCCCA
00004990 20                                 7289+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004991 03                                 7290+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004992 03                                 7291+         dc al1(3)                                                      02-DCCCA
00004993 08                                 7292+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004994 00                                 7293+         dc bl.8'00000000'                                              02-DCCCA
00004995 000000                             7294+         dc al3(0)                                                      02-DCCCA
00004998 0000000000004946                   7295+         dc ad(@LNAME1942)                                              02-DCCCA
000049A0                                    7296+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  148 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000049A0 0000000000004968                   7297+         dc ad($eye0159)                                                02-DCCCA
000049A8 0000000000000000                   7298+         dc ad(0)                                                       02-DCCCA
000049B0                                    7299+         ds    0d                                                       01-DCCPR
000049B0                                    7300+rd_kafka_msgset_writer_init ds 0d                                       01-DCCPR
000049B0                                    7301+@REGION_1942_1 ds 0h                                                    01-DCCPR
000049B0 EBEC D008 0024          00000008   7302+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000049B6 E3E0 D088 0004          00000088   7303+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000049BC E3C0 D090 0004          00000090   7304+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000049C2 B904 002E                          7305+         lgr   2,14                copy addr of our savearea            01-DCCPR
000049C6 E3B0 C018 0004          00000018   7306+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000049CC A7EB 00D8               000000D8   7307+         aghi  14,216              increase by frame size               01-DCCPR
000049D0 E3E0 C020 0021          00000020   7308+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000049D6 4720 B020               00000020   7309+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000049DA                                    7310+@PER_1942 ds   0h                                                       01-DCCPR
000049DA EBDE 2080 0024          00000080   7311+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000049E0 E3C0 2090 0024          00000090   7312+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000049E6 B904 00D2                          7313+         lgr   13,2                set real frame pointer               01-DCCPR
000049EA B904 00CF                          7314+         lgr   12,15               set base reg                         01-DCCPR
                        000049B0            7315+         using @REGION_1942_1,12                                        01-DCCPR
000049EE B904 0041                          7316          LGR   4,1         ; ptr to parm area
                                            7317 * ******* End of Prologue
                                            7318 * *
                                            7319 * ***           int msgcnt = rd_kafka_msgq_len(rkmq);
000049F2 E320 4008 0004          00000008   7320          LG    2,8(0,4)    ; rkb
000049F8 E330 4000 0004          00000000   7321          LG    3,0(0,4)    ; msetw
000049FE E3F0 4018 0004          00000018   7322          LG    15,24(0,4)  ; rkmq
00004A04 E3F0 D0B0 0024          000000B0   7323          STG   15,176(0,13)
00004A0A 4110 D0B0               000000B0   7324          LA    1,176(0,13)
00004A0E E3F0 C080 0004          00004A30   7325          LG    15,@lit_1942_219 ; rd_kafka_msgq_len
00004A14                                    7326 @@gen_label289 DS    0H
00004A14 05EF                               7327          BALR  14,15
00004A16                                    7328 @@gen_label290 DS    0H
                                            7329 * ***
                                            7330 * ***           if (msgcnt == 0)
00004A16 12FF                               7331          LTR   15,15
00004A18 4770 C0B0               00004A60   7332          BNE   @L715
                                            7333 * ***                   return 0;
00004A1C A7F9 0000               00000000   7334          LGHI  15,0        ; 0
00004A20 47F0 C1B2               00004B62   7335          B     @ret_lab_1942
00004A28                                    7336          DS    0D
00004A28 000000D8                           7337 @FRAMESIZE_1942 DC F'216'
00004A2C 00000000
00004A30 00000000000016A0                   7338 @lit_1942_219 DC AD(rd_kafka_msgq_len)
00004A38 00000000000037C8                   7339 @lit_1942_221 DC AD(rd_kafka_msgset_writer_select_$Msg$Version)
00004A40 0000000000003FB8                   7340 @lit_1942_223 DC AD(rd_kafka_msgset_writer_alloc_buf)
00004A48 0000000000004750                   7341 @lit_1942_224 DC AD(rd_kafka_msgset_writer_write_$Produce_header)
00004A50 0000000000000D20                   7342 @lit_1942_225 DC AD(rd_buf_write_pos)
00004A58 0000000000000000                   7343 @lit_1942_226 DC AD(rd_kafka_msgbatch_init)
00004A60                                    7344 @L715    DS    0H
                                            7345 * ***
                                            7346 * ***           __memset(msetw,0,sizeof(*msetw));
                                            7347 * setting 160 bytes to 0x00
                                                                                                                           Page  149 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004A60 D79F 3000 3000 00000000 00000000   7348          XC    0(160,3),0(3)
                                            7349 * ***
                                            7350 * ***           msetw->msetw_rktp = rktp;
00004A66 E310 4010 0004          00000010   7351          LG    1,16(0,4)   ; rktp
00004A6C E310 3090 0024          00000090   7352          STG   1,144(0,3)  ; offset of msetw_rktp in rd_kafka_msgset_wr*
                                                                iter_s
                                            7353 * ***           msetw->msetw_rkb = rkb;
00004A72 E320 3088 0024          00000088   7354          STG   2,136(0,3)  ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
                                            7355 * ***           msetw->msetw_msgq = rkmq;
00004A78 E310 4018 0004          00000018   7356          LG    1,24(0,4)   ; rkmq
00004A7E E310 3098 0024          00000098   7357          STG   1,152(0,3)  ; offset of msetw_msgq in rd_kafka_msgset_wr*
                                                                iter_s
                                            7358 * ***           msetw->msetw_pid = pid;
00004A84 D20F 3078 4020 00000078 00000020   7359          MVC   120(16,3),32(4)
                                            7360 * ***
                                            7361 * ***
                                            7362 * ***
                                            7363 * ***
                                            7364 * ***           msetw->msetw_msgcntmax = ((msgcnt) < (rkb->rkb_rk->rk_\
                                            7365 * conf. batch_num_messages) ? (msgcnt) : (rkb->rkb_rk->rk_conf. batch_\
                                            7366 * num_messages));
00004A8A E310 2FD0 0004          00000FD0   7367          LG    1,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00004A90 59F0 181C               0000081C   7368          C     15,2076(0,1)
00004A94 47B0 C0EC               00004A9C   7369          BNL   @L716
00004A98 47F0 C0F6               00004AA6   7370          B     @L717
00004A9C                                    7371 @L716    DS    0H
00004A9C E3F0 2FD0 0004          00000FD0   7372          LG    15,4048(0,2) ; offset of rkb_rk in rd_kafka_broker_s
00004AA2 58F0 F81C               0000081C   7373          L     15,2076(0,15) ; offset of batch_num_messages in rd_kafka*
                                                                _conf_s
00004AA6                                    7374 @L717    DS    0H
00004AA6 50F0 3018               00000018   7375          ST    15,24(0,3)
                                            7376 * ***
                                            7377 * ***
                                            7378 * ***           do {} while (0);
00004AAA                                    7379 @L718    DS    0H
                                            7380 * ***
                                            7381 * ***
                                            7382 * ***           if (rd_kafka_msgset_writer_select_MsgVersion(msetw) ==\
                                            7383 *  -1)
00004AAA E330 D0B0 0024          000000B0   7384          STG   3,176(0,13)
00004AB0 4110 D0B0               000000B0   7385          LA    1,176(0,13)
00004AB4 E3F0 C088 0004          00004A38   7386          LG    15,@lit_1942_221 ; rd_kafka_msgset_writer_select_MsgVers*
                                                                ion
00004ABA                                    7387 @@gen_label293 DS    0H
00004ABA 05EF                               7388          BALR  14,15
00004ABC                                    7389 @@gen_label294 DS    0H
00004ABC A7FE FFFF               0000FFFF   7390          CHI   15,-1
00004AC0 4770 C11C               00004ACC   7391          BNE   @L721
                                            7392 * ***                   return -1;
00004AC4 A7F9 FFFF               0000FFFF   7393          LGHI  15,-1       ; -1
00004AC8 47F0 C1B2               00004B62   7394          B     @ret_lab_1942
                                                                                                                           Page  150 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004ACC                                    7395 @L721    DS    0H
                                            7396 * ***
                                            7397 * ***
                                            7398 * ***           rd_kafka_msgset_writer_alloc_buf(msetw);
00004ACC E330 D0B0 0024          000000B0   7399          STG   3,176(0,13)
00004AD2 4110 D0B0               000000B0   7400          LA    1,176(0,13)
00004AD6 E3F0 C090 0004          00004A40   7401          LG    15,@lit_1942_223 ; rd_kafka_msgset_writer_alloc_buf
00004ADC                                    7402 @@gen_label296 DS    0H
00004ADC 05EF                               7403          BALR  14,15
00004ADE                                    7404 @@gen_label297 DS    0H
                                            7405 * ***
                                            7406 * ***
                                            7407 * ***           rd_kafka_msgset_writer_write_Produce_header(msetw);
00004ADE E330 D0B0 0024          000000B0   7408          STG   3,176(0,13)
00004AE4 4110 D0B0               000000B0   7409          LA    1,176(0,13)
00004AE8 E3F0 C098 0004          00004A48   7410          LG    15,@lit_1942_224 ; rd_kafka_msgset_writer_write_Produce_*
                                                                header
00004AEE                                    7411 @@gen_label298 DS    0H
00004AEE 05EF                               7412          BALR  14,15
00004AF0                                    7413 @@gen_label299 DS    0H
                                            7414 * ***
                                            7415 * ***
                                            7416 * ***
                                            7417 * ***
                                            7418 * ***
                                            7419 * ***           msetw->msetw_firstmsg.of = rd_buf_write_pos(&msetw->ms\
                                            7420 * etw_rkbuf->
                                            7421 * ***                                                       rkbuf_buf)\
                                            7422 * ;
00004AF0 E3F0 3000 0004          00000000   7423          LG    15,0(0,3)   ; msetw
00004AF6 41F0 F028               00000028   7424          LA    15,40(0,15)
00004AFA E3F0 D0B0 0024          000000B0   7425          STG   15,176(0,13)
00004B00 4110 D0B0               000000B0   7426          LA    1,176(0,13)
00004B04 E3F0 C0A0 0004          00004A50   7427          LG    15,@lit_1942_225 ; rd_buf_write_pos
00004B0A                                    7428 @@gen_label300 DS    0H
00004B0A 05EF                               7429          BALR  14,15
00004B0C                                    7430 @@gen_label301 DS    0H
00004B0C E3F0 3068 0024          00000068   7431          STG   15,104(0,3)
                                            7432 * ***
                                            7433 * ***           rd_kafka_msgbatch_init(&msetw->msetw_rkbuf->rkbuf_u.Pr\
                                            7434 * oduce.batch,
                                            7435 * ***                                  rktp, pid, epoch_base_msgid);
00004B12 E3F0 3000 0004          00000000   7436          LG    15,0(0,3)   ; msetw
00004B18 41F0 F190               00000190   7437          LA    15,400(0,15)
00004B1C E3F0 D0B0 0024          000000B0   7438          STG   15,176(0,13)
00004B22 E3F0 4010 0004          00000010   7439          LG    15,16(0,4)  ; rktp
00004B28 E3F0 D0B8 0024          000000B8   7440          STG   15,184(0,13)
00004B2E D20F D0C0 4020 000000C0 00000020   7441          MVC   192(16,13),32(4)
00004B34 E3F0 4030 0004          00000030   7442          LG    15,48(0,4)  ; epoch_base_msgid
00004B3A E3F0 D0D0 0024          000000D0   7443          STG   15,208(0,13)
00004B40 4110 D0B0               000000B0   7444          LA    1,176(0,13)
00004B44 E3F0 C0A8 0004          00004A58   7445          LG    15,@lit_1942_226 ; rd_kafka_msgbatch_init
                                                                                                                           Page  151 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004B4A                                    7446 @@gen_label302 DS    0H
00004B4A 05EF                               7447          BALR  14,15
00004B4C                                    7448 @@gen_label303 DS    0H
                                            7449 * ***           msetw->msetw_batch = &msetw->msetw_rkbuf->rkbuf_u.Prod\
                                            7450 * uce.batch;
00004B4C E3F0 3000 0004          00000000   7451          LG    15,0(0,3)   ; msetw
00004B52 41F0 F190               00000190   7452          LA    15,400(0,15)
00004B56 E3F0 3060 0024          00000060   7453          STG   15,96(0,3)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
                                            7454 * ***
                                            7455 * ***           return msetw->msetw_msgcntmax;
00004B5C E3F0 3018 0014          00000018   7456          LGF   15,24(0,3)
                                            7457 * ***   }
00004B62                                    7458 @ret_lab_1942 DS 0H
                                            7459 * * **** Start of Epilogue
                                            7460          DCCEPIL
00004B62                                    7461+         ds 0h                                                          01-DCCEP
                                            7462+* Epilog
00004B62 D707 D088 D088 00000088 00000088   7463+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004B68 E3D0 D080 0004          00000080   7464+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004B6E E3C0 D090 0004          00000090   7465+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004B74 E3B0 C018 0004          00000018   7466+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004B7A E3C0 B010 0021          00000010   7467+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004B80 E3E0 D008 0004          00000008   7468+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004B86 EB1C D020 0004          00000020   7469+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004B8C 078E                               7470+         bcr 8,14                if same dsab, just return              01-DCCEP
00004B8E E3F0 D010 0024          00000010   7471+         stg 15,16(0,13)         save return code                       01-DCCEP
00004B94 E300 D018 0024          00000018   7472+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004B9A E3F0 D090 0004          00000090   7473+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004BA0 E3F0 F018 0004          00000018   7474+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004BA6 47F0 F040               00000040   7475+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7476+* End of Epilog
                                            7477 * * **** End of Epilogue
                                            7478          DROP  12
                                            7479 *
                                            7480 *   DSECT for automatic variables in "rd_kafka_msgset_writer_init"
                                            7481 *      (FUNCTION #1942)
                                            7482 *
00000000                00000000 000000AC   7483 @AUTO#rd_kafka_msgset_writer_init DSECT
00000000                                    7484          DS    XL168
000000A8                                    7485 rd_kafka_msgset_writer_init#msgcnt#0 DS 1F ; msgcnt
                                            7486 *
00004BAA                00000000 00007AB2   7487 @CODE    CSECT
                                            7488 *
                                            7489 *
                                            7490 *
                                            7491 * ....... start of rd_kafka_msgset_writer_write_msg_payload
00004BAA                                    7492 @LNAME1943 DS  0H
00004BAA 00000028                           7493          DC    X'00000028'
00004BAE 99846D9281869281                   7494          DC    C'rd_kafka_msgset_writer_write_msg'
00004BCE 6D9781A893968184                   7495          DC    C'_payload'
00004BD6 00                                 7496          DC    X'00'
                                                                                                                           Page  152 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7497 rd_kafka_msgset_writer_write_msg_payload DCCPRLG CINDEX=1943,BASER=12,F*
                                                                RAME=216,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1943
                                            7498          macro
                                            7499          dccextrn &m
                                            7500          gblc    &$dccext(1000)
                                            7501          gbla    &$dccexti
                                            7502          lcla    &i
                                            7503 &$dccext(&$dccexti+1) setc    '&m'
                                            7504 &i       seta    1
                                            7505 .loop    aif    (&i gt &$dccexti).around
                                            7506          aif    ('&$dccext(&i)' eq '&m').getout
                                            7507 &i       seta    &i+1
                                            7508          ago     .loop
                                            7509 .around  anop
                                            7510 &$dccexti seta &$dccexti+1
                                            7511          extrn  &m
                                            7512 .getout  anop
                                            7513          mend
00004BD8                                    7514+$eye0162    ds    0d                                                    02-DCCCA
00004BD8 C4C3C3                             7515+         dc cl3'DCC'                                                    02-DCCCA
00004BDB 01                                 7516+         dc xl1'01' format one                                          02-DCCCA
00004BDC 00000000                           7517+         dc a(0)                                                        02-DCCCA
00004BE0 0000000000004C4A                   7518+         dc ad(@PER_1943)                                               02-DCCCA
00004BE8 00000000000000D8                   7519+         dc ad(216)                                                     02-DCCCA
00004BF0 0000000000000000                   7520+         dc ad(0)                                                       02-DCCCA
00004BF8 0000000000001000                   7521+         dc ad(4096)                                                    02-DCCCA
00004C00 20                                 7522+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004C01 03                                 7523+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004C02 03                                 7524+         dc al1(3)                                                      02-DCCCA
00004C03 08                                 7525+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004C04 00                                 7526+         dc bl.8'00000000'                                              02-DCCCA
00004C05 000000                             7527+         dc al3(0)                                                      02-DCCCA
00004C08 0000000000004BAA                   7528+         dc ad(@LNAME1943)                                              02-DCCCA
00004C10                                    7529+         ds 0d                                                          02-DCCCA
00004C10 0000000000004BD8                   7530+         dc ad($eye0162)                                                02-DCCCA
00004C18 0000000000000000                   7531+         dc ad(0)                                                       02-DCCCA
00004C20                                    7532+         ds    0d                                                       01-DCCPR
00004C20                                    7533+rd_kafka_msgset_writer_write_msg_payload ds 0d                          01-DCCPR
00004C20                                    7534+@REGION_1943_1 ds 0h                                                    01-DCCPR
00004C20 EBEC D008 0024          00000008   7535+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004C26 E3E0 D088 0004          00000088   7536+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004C2C E3C0 D090 0004          00000090   7537+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004C32 B904 002E                          7538+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004C36 E3B0 C018 0004          00000018   7539+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004C3C A7EB 00D8               000000D8   7540+         aghi  14,216              increase by frame size               01-DCCPR
00004C40 E3E0 C020 0021          00000020   7541+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004C46 4720 B020               00000020   7542+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004C4A                                    7543+@PER_1943 ds   0h                                                       01-DCCPR
00004C4A EBDE 2080 0024          00000080   7544+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004C50 E3C0 2090 0024          00000090   7545+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004C56 B904 00D2                          7546+         lgr   13,2                set real frame pointer               01-DCCPR
00004C5A B904 00CF                          7547+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page  153 
  Active Usings: @REGION_1943_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00004C20            7548+         using @REGION_1943_1,12                                        01-DCCPR
                                            7549 * ******* End of Prologue
                                            7550 * *
                                            7551 * ***           const rd_kafka_t *rk = msetw->msetw_rkb->rkb_rk;
00004C5E EB23 1008 0004          00000008   7552          LMG   2,3,8(1)    ; rkm
00004C64 E3F0 1000 0004          00000000   7553          LG    15,0(0,1)   ; msetw
00004C6A E310 F088 0004          00000088   7554          LG    1,136(0,15) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00004C70 E310 1FD0 0004          00000FD0   7555          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
                                            7556 * ***           rd_kafka_buf_t *rkbuf = msetw->msetw_rkbuf;
00004C76 E340 F000 0004          00000000   7557          LG    4,0(0,15)   ; msetw
                                            7558 * ***
                                            7559 * ***
                                            7560 * ***
                                            7561 * ***
                                            7562 * ***           if (rkm->rkm_rkmessage.len <= (size_t)rk->rk_conf.msg_\
                                            7563 * copy_max_size &&
00004C7C E3F0 2020 0004          00000020   7564          LG    15,32(0,2)  ; offset of len in rd_kafka_message_s
00004C82 E310 12F8 0014          000002F8   7565          LGF   1,760(0,1)
00004C88 B921 00F1                          7566          CLGR  15,1
00004C8C 4720 C100               00004D20   7567          BH    @L722
                                            7568 * ***               rd_buf_write_remains(&rkbuf->rkbuf_buf) > rkm->rkm\
                                            7569 * _rkmessage.len) {
00004C90 41F0 4028               00000028   7570          LA    15,40(0,4)
00004C94 E3F0 D0B0 0024          000000B0   7571          STG   15,176(0,13)
00004C9A 4110 D0B0               000000B0   7572          LA    1,176(0,13)
00004C9E E3F0 C0E8 0004          00004D08   7573          LG    15,@lit_1943_228 ; rd_buf_write_remains
00004CA4                                    7574 @@gen_label305 DS    0H
00004CA4 05EF                               7575          BALR  14,15
00004CA6                                    7576 @@gen_label306 DS    0H
00004CA6 E3F0 2020 0021          00000020   7577          CLG   15,32(0,2)
00004CAC 47D0 C100               00004D20   7578          BNH   @L722
                                            7579 * ***                   rd_kafka_buf_write(rkbuf,
                                            7580 * ***                                      rkm->rkm_rkmessage.payload,\
                                            7581 *  rkm->rkm_rkmessage.len);
00004CB0 E340 D0B0 0024          000000B0   7582          STG   4,176(0,13)
00004CB6 E3F0 2018 0004          00000018   7583          LG    15,24(0,2)
00004CBC E3F0 D0B8 0024          000000B8   7584          STG   15,184(0,13)
00004CC2 E3F0 2020 0004          00000020   7585          LG    15,32(0,2)
00004CC8 E3F0 D0C0 0024          000000C0   7586          STG   15,192(0,13)
00004CCE 4110 D0B0               000000B0   7587          LA    1,176(0,13)
00004CD2 E3F0 C0F0 0004          00004D10   7588          LG    15,@lit_1943_229 ; rd_kafka_buf_write
00004CD8                                    7589 @@gen_label308 DS    0H
00004CD8 05EF                               7590          BALR  14,15
00004CDA                                    7591 @@gen_label309 DS    0H
                                            7592 * ***                   if (free_cb)
00004CDA B902 00F3                          7593          LTGR  15,3
00004CDE 4780 C136               00004D56   7594          BZ    @L724
                                            7595 * ***                           free_cb(rkm->rkm_rkmessage.payload);
00004CE2 E3F0 2018 0004          00000018   7596          LG    15,24(0,2)
00004CE8 E3F0 D0B0 0024          000000B0   7597          STG   15,176(0,13)
00004CEE 4110 D0B0               000000B0   7598          LA    1,176(0,13)
                                                                                                                           Page  154 
  Active Usings: @REGION_1943_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004CF2 B904 00F3                          7599          LGR   15,3
00004CF6                                    7600 @@gen_label311 DS    0H
00004CF6 05EF                               7601          BALR  14,15
00004CF8                                    7602 @@gen_label312 DS    0H
00004CF8                                    7603 @L723    DS    0H
                                            7604 * ***           } else
00004CF8 47F0 C136               00004D56   7605          B     @L724
00004D00                                    7606          DS    0D
00004D00 000000D8                           7607 @FRAMESIZE_1943 DC F'216'
00004D04 00000000
00004D08 0000000000000DC8                   7608 @lit_1943_228 DC AD(rd_buf_write_remains)
00004D10 0000000000001FA8                   7609 @lit_1943_229 DC AD(rd_kafka_buf_write)
00004D18 0000000000000000                   7610 @lit_1943_230 DC AD(rd_kafka_buf_push0)
00004D20                                    7611 @L722    DS    0H
                                            7612 * ***                   rd_kafka_buf_push0(rkbuf,rkm->rkm_rkmessage.pa\
                                            7613 * yload,rkm->rkm_rkmessage.len,1 ,free_cb);
00004D20 E340 D0B0 0024          000000B0   7614          STG   4,176(0,13)
00004D26 E3F0 2018 0004          00000018   7615          LG    15,24(0,2)
00004D2C E3F0 D0B8 0024          000000B8   7616          STG   15,184(0,13)
00004D32 E3F0 2020 0004          00000020   7617          LG    15,32(0,2)
00004D38 E3F0 D0C0 0024          000000C0   7618          STG   15,192(0,13)
00004D3E E548 D0C8 0001          000000C8   7619          MVGHI 200(13),1
00004D44 E330 D0D0 0024          000000D0   7620          STG   3,208(0,13)
00004D4A 4110 D0B0               000000B0   7621          LA    1,176(0,13)
00004D4E E3F0 C0F8 0004          00004D18   7622          LG    15,@lit_1943_230 ; rd_kafka_buf_push0
00004D54                                    7623 @@gen_label313 DS    0H
00004D54 05EF                               7624          BALR  14,15
00004D56                                    7625 @@gen_label314 DS    0H
00004D56                                    7626 @L724    DS    0H
                                            7627 * ***
                                            7628 * ***   }
00004D56                                    7629 @ret_lab_1943 DS 0H
                                            7630 * * **** Start of Epilogue
                                            7631          DCCEPIL
00004D56                                    7632+         ds 0h                                                          01-DCCEP
                                            7633+* Epilog
00004D56 D707 D088 D088 00000088 00000088   7634+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004D5C E3D0 D080 0004          00000080   7635+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004D62 E3C0 D090 0004          00000090   7636+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004D68 E3B0 C018 0004          00000018   7637+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004D6E E3C0 B010 0021          00000010   7638+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004D74 E3E0 D008 0004          00000008   7639+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004D7A EB1C D020 0004          00000020   7640+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004D80 078E                               7641+         bcr 8,14                if same dsab, just return              01-DCCEP
00004D82 E3F0 D010 0024          00000010   7642+         stg 15,16(0,13)         save return code                       01-DCCEP
00004D88 E300 D018 0024          00000018   7643+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004D8E E3F0 D090 0004          00000090   7644+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004D94 E3F0 F018 0004          00000018   7645+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004D9A 47F0 F040               00000040   7646+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7647+* End of Epilog
                                            7648 * * **** End of Epilogue
                                            7649          DROP  12
                                                                                                                           Page  155 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7650 *
                                            7651 *   DSECT for automatic variables in "rd_kafka_msgset_writer_write_msg
                                            7652 *           _payload"
                                            7653 *      (FUNCTION #1943)
                                            7654 *
00000000                00000000 000000A8   7655 @AUTO#rd_kafka_msgset_writer_write_msg_payload DSECT
00000000                                    7656          DS    XL168
                                            7657 *
00004D9E                00000000 00007AB2   7658 @CODE    CSECT
                                            7659 *
                                            7660 *
                                            7661 *
                                            7662 * ....... start of rd_kafka_msgset_writer_write_msg_headers
00004D9E                                    7663 @LNAME1944 DS  0H
00004D9E 00000028                           7664          DC    X'00000028'
00004DA2 99846D9281869281                   7665          DC    C'rd_kafka_msgset_writer_write_msg'
00004DC2 6D888581848599A2                   7666          DC    C'_headers'
00004DCA 00                                 7667          DC    X'00'
                                            7668 rd_kafka_msgset_writer_write_msg_headers DCCPRLG CINDEX=1944,BASER=12,F*
                                                                RAME=200,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1944
                                            7669          macro
                                            7670          dccextrn &m
                                            7671          gblc    &$dccext(1000)
                                            7672          gbla    &$dccexti
                                            7673          lcla    &i
                                            7674 &$dccext(&$dccexti+1) setc    '&m'
                                            7675 &i       seta    1
                                            7676 .loop    aif    (&i gt &$dccexti).around
                                            7677          aif    ('&$dccext(&i)' eq '&m').getout
                                            7678 &i       seta    &i+1
                                            7679          ago     .loop
                                            7680 .around  anop
                                            7681 &$dccexti seta &$dccexti+1
                                            7682          extrn  &m
                                            7683 .getout  anop
                                            7684          mend
00004DD0                                    7685+$eye0165    ds    0d                                                    02-DCCCA
00004DD0 C4C3C3                             7686+         dc cl3'DCC'                                                    02-DCCCA
00004DD3 01                                 7687+         dc xl1'01' format one                                          02-DCCCA
00004DD4 00000000                           7688+         dc a(0)                                                        02-DCCCA
00004DD8 0000000000004E42                   7689+         dc ad(@PER_1944)                                               02-DCCCA
00004DE0 00000000000000C8                   7690+         dc ad(200)                                                     02-DCCCA
00004DE8 0000000000000000                   7691+         dc ad(0)                                                       02-DCCCA
00004DF0 0000000000001000                   7692+         dc ad(4096)                                                    02-DCCCA
00004DF8 20                                 7693+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004DF9 03                                 7694+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004DFA 03                                 7695+         dc al1(3)                                                      02-DCCCA
00004DFB 08                                 7696+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004DFC 00                                 7697+         dc bl.8'00000000'                                              02-DCCCA
00004DFD 000000                             7698+         dc al3(0)                                                      02-DCCCA
00004E00 0000000000004D9E                   7699+         dc ad(@LNAME1944)                                              02-DCCCA
00004E08                                    7700+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  156 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004E08 0000000000004DD0                   7701+         dc ad($eye0165)                                                02-DCCCA
00004E10 0000000000000000                   7702+         dc ad(0)                                                       02-DCCCA
00004E18                                    7703+         ds    0d                                                       01-DCCPR
00004E18                                    7704+rd_kafka_msgset_writer_write_msg_headers ds 0d                          01-DCCPR
00004E18                                    7705+@REGION_1944_1 ds 0h                                                    01-DCCPR
00004E18 EBEC D008 0024          00000008   7706+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004E1E E3E0 D088 0004          00000088   7707+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004E24 E3C0 D090 0004          00000090   7708+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004E2A B904 002E                          7709+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004E2E E3B0 C018 0004          00000018   7710+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004E34 A7EB 00C8               000000C8   7711+         aghi  14,200              increase by frame size               01-DCCPR
00004E38 E3E0 C020 0021          00000020   7712+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004E3E 4720 B020               00000020   7713+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004E42                                    7714+@PER_1944 ds   0h                                                       01-DCCPR
00004E42 EBDE 2080 0024          00000080   7715+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004E48 E3C0 2090 0024          00000090   7716+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004E4E B904 00D2                          7717+         lgr   13,2                set real frame pointer               01-DCCPR
00004E52 B904 00CF                          7718+         lgr   12,15               set base reg                         01-DCCPR
                        00004E18            7719+         using @REGION_1944_1,12                                        01-DCCPR
00004E56 B904 0061                          7720          LGR   6,1         ; ptr to parm area
                                            7721 * ******* End of Prologue
                                            7722 * *
                                            7723 * ***           rd_kafka_buf_t *rkbuf = msetw->msetw_rkbuf;
00004E5A E3F0 6000 0004          00000000   7724          LG    15,0(0,6)   ; msetw
00004E60 E330 F000 0004          00000000   7725          LG    3,0(0,15)   ; msetw
                                            7726 * ***           const rd_kafka_header_t *hdr;
                                            7727 * ***           int i;
                                            7728 * ***           size_t start_pos = rd_buf_write_pos(&rkbuf->rkbuf_buf)\
                                            7729 * ;
00004E66 41F0 3028               00000028   7730          LA    15,40(0,3)
00004E6A E3F0 D0B0 0024          000000B0   7731          STG   15,176(0,13)
00004E70 4110 D0B0               000000B0   7732          LA    1,176(0,13)
00004E74 E3F0 C078 0004          00004E90   7733          LG    15,@lit_1944_232 ; rd_buf_write_pos
00004E7A                                    7734 @@gen_label315 DS    0H
00004E7A 05EF                               7735          BALR  14,15
00004E7C                                    7736 @@gen_label316 DS    0H
00004E7C B904 005F                          7737          LGR   5,15
                                            7738 * ***           size_t written;
                                            7739 * ***
                                            7740 * ***           for (i = 0 ; (hdr = rd_list_elem(&hdrs->rkhdrs_list, i\
                                            7741 * )) ; i++) {
00004E80 A728 0000               00000000   7742          LHI   2,0         ; 0
00004E84 47F0 C140               00004F58   7743          B     @L726
00004E88                                    7744          DS    0D
00004E88 000000C8                           7745 @FRAMESIZE_1944 DC F'200'
00004E8C 00000000
00004E90 0000000000000D20                   7746 @lit_1944_232 DC AD(rd_buf_write_pos)
00004E98 0000000000002C70                   7747 @lit_1944_234 DC AD(rd_kafka_buf_write_varint)
00004EA0 0000000000001FA8                   7748 @lit_1944_235 DC AD(rd_kafka_buf_write)
00004EA8 0000000000000000                   7749 @lit_1944_239 DC AD(rd_list_elem)
00004EB0                                    7750 @L725    DS    0H
                                            7751 * ***                   rd_kafka_buf_write_varint(rkbuf, hdr->rkhdr_na\
                                                                                                                           Page  157 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7752 * me_size);
00004EB0 E330 D0B0 0024          000000B0   7753          STG   3,176(0,13)
00004EB6 E3F0 4010 0004          00000010   7754          LG    15,16(0,4)  ; offset of rkhdr_name_size in rd_kafka_head*
                                                                er_s
00004EBC E3F0 D0B8 0024          000000B8   7755          STG   15,184(0,13)
00004EC2 4110 D0B0               000000B0   7756          LA    1,176(0,13)
00004EC6 E370 C080 0004          00004E98   7757          LG    7,@lit_1944_234 ; rd_kafka_buf_write_varint
00004ECC B904 00F7                          7758          LGR   15,7
00004ED0                                    7759 @@gen_label317 DS    0H
00004ED0 05EF                               7760          BALR  14,15
00004ED2                                    7761 @@gen_label318 DS    0H
                                            7762 * ***                   rd_kafka_buf_write(rkbuf,
                                            7763 * ***                                      hdr->rkhdr_name, hdr->rkhdr\
                                            7764 * _name_size);
00004ED2 E330 D0B0 0024          000000B0   7765          STG   3,176(0,13)
00004ED8 41F0 4020               00000020   7766          LA    15,32(0,4)
00004EDC E3F0 D0B8 0024          000000B8   7767          STG   15,184(0,13)
00004EE2 E3F0 4010 0004          00000010   7768          LG    15,16(0,4)
00004EE8 E3F0 D0C0 0024          000000C0   7769          STG   15,192(0,13)
00004EEE 4110 D0B0               000000B0   7770          LA    1,176(0,13)
00004EF2 E380 C088 0004          00004EA0   7771          LG    8,@lit_1944_235 ; rd_kafka_buf_write
00004EF8 B904 00F8                          7772          LGR   15,8
00004EFC                                    7773 @@gen_label319 DS    0H
00004EFC 05EF                               7774          BALR  14,15
00004EFE                                    7775 @@gen_label320 DS    0H
                                            7776 * ***                   rd_kafka_buf_write_varint(rkbuf,
                                            7777 * ***                                             hdr->rkhdr_value ?
00004EFE E3F0 4018 0002          00000018   7778          LTG   15,24(0,4)  ; offset of rkhdr_value in rd_kafka_header_s
00004F04 4780 C0FA               00004F12   7779          BZ    @L729
                                            7780 * ***                                             (int64_t)hdr->rkhdr_\
                                            7781 * value_size : -1);
00004F08 E3F0 4008 0004          00000008   7782          LG    15,8(0,4)   ; offset of rkhdr_value_size in rd_kafka_hea*
                                                                der_s
00004F0E 47F0 C0FE               00004F16   7783          B     @L730
00004F12                                    7784 @L729    DS    0H
00004F12 A7F9 FFFF               0000FFFF   7785          LGHI  15,-1       ; -1
00004F16                                    7786 @L730    DS    0H
00004F16 E330 D0B0 0024          000000B0   7787          STG   3,176(0,13)
00004F1C E3F0 D0B8 0024          000000B8   7788          STG   15,184(0,13)
00004F22 4110 D0B0               000000B0   7789          LA    1,176(0,13)
00004F26 B904 00F7                          7790          LGR   15,7
00004F2A                                    7791 @@gen_label322 DS    0H
00004F2A 05EF                               7792          BALR  14,15
00004F2C                                    7793 @@gen_label323 DS    0H
                                            7794 * ***                   rd_kafka_buf_write(rkbuf,
                                            7795 * ***                                      hdr->rkhdr_value,
                                            7796 * ***                                      hdr->rkhdr_value_size);
00004F2C E330 D0B0 0024          000000B0   7797          STG   3,176(0,13)
00004F32 E3F0 4018 0004          00000018   7798          LG    15,24(0,4)
00004F38 E3F0 D0B8 0024          000000B8   7799          STG   15,184(0,13)
00004F3E E3F0 4008 0004          00000008   7800          LG    15,8(0,4)
00004F44 E3F0 D0C0 0024          000000C0   7801          STG   15,192(0,13)
                                                                                                                           Page  158 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004F4A 4110 D0B0               000000B0   7802          LA    1,176(0,13)
00004F4E B904 00F8                          7803          LGR   15,8
00004F52                                    7804 @@gen_label324 DS    0H
00004F52 05EF                               7805          BALR  14,15
00004F54                                    7806 @@gen_label325 DS    0H
                                            7807 * ***           }
00004F54 A72A 0001               00000001   7808          AHI   2,1
00004F58                                    7809 @L726    DS    0H
00004F58 E3F0 6008 0004          00000008   7810          LG    15,8(0,6)   ; hdrs
00004F5E E3F0 D0B0 0024          000000B0   7811          STG   15,176(0,13)
00004F64 B914 00F2                          7812          LGFR  15,2
00004F68 E3F0 D0B8 0024          000000B8   7813          STG   15,184(0,13)
00004F6E 4110 D0B0               000000B0   7814          LA    1,176(0,13)
00004F72 E3F0 C090 0004          00004EA8   7815          LG    15,@lit_1944_239 ; rd_list_elem
00004F78                                    7816 @@gen_label326 DS    0H
00004F78 05EF                               7817          BALR  14,15
00004F7A                                    7818 @@gen_label327 DS    0H
00004F7A B904 004F                          7819          LGR   4,15
00004F7E B902 00F4                          7820          LTGR  15,4
00004F82 4770 C098               00004EB0   7821          BNZ   @L725
                                            7822 * ***
                                            7823 * ***           written = rd_buf_write_pos(&rkbuf->rkbuf_buf) - start_\
                                            7824 * pos;
00004F86 41F0 3028               00000028   7825          LA    15,40(0,3)
00004F8A E3F0 D0B0 0024          000000B0   7826          STG   15,176(0,13)
00004F90 4110 D0B0               000000B0   7827          LA    1,176(0,13)
00004F94 E3F0 C078 0004          00004E90   7828          LG    15,@lit_1944_232 ; rd_buf_write_pos
00004F9A                                    7829 @@gen_label329 DS    0H
00004F9A 05EF                               7830          BALR  14,15
00004F9C                                    7831 @@gen_label330 DS    0H
00004F9C B90B 00F5                          7832          SLGR  15,5
                                            7833 * ***           do {} while (0);
00004FA0                                    7834 @L731    DS    0H
                                            7835 * ***
                                            7836 * ***           return written;
                                            7837 * ***   }
                                            7838 * * **** Start of Epilogue
                                            7839          DCCEPIL
00004FA0                                    7840+         ds 0h                                                          01-DCCEP
                                            7841+* Epilog
00004FA0 D707 D088 D088 00000088 00000088   7842+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004FA6 E3D0 D080 0004          00000080   7843+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004FAC E3C0 D090 0004          00000090   7844+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004FB2 E3B0 C018 0004          00000018   7845+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004FB8 E3C0 B010 0021          00000010   7846+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004FBE E3E0 D008 0004          00000008   7847+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004FC4 EB1C D020 0004          00000020   7848+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004FCA 078E                               7849+         bcr 8,14                if same dsab, just return              01-DCCEP
00004FCC E3F0 D010 0024          00000010   7850+         stg 15,16(0,13)         save return code                       01-DCCEP
00004FD2 E300 D018 0024          00000018   7851+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004FD8 E3F0 D090 0004          00000090   7852+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004FDE E3F0 F018 0004          00000018   7853+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page  159 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004FE4 47F0 F040               00000040   7854+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7855+* End of Epilog
                                            7856 * * **** End of Epilogue
                                            7857          DROP  12
                                            7858 *
                                            7859 *   DSECT for automatic variables in "rd_kafka_msgset_writer_write_msg
                                            7860 *           _headers"
                                            7861 *      (FUNCTION #1944)
                                            7862 *
00000000                00000000 000000B0   7863 @AUTO#rd_kafka_msgset_writer_write_msg_headers DSECT
00000000                                    7864          DS    XL168
000000A8                                    7865 rd_kafka_msgset_writer_write_msg_headers#written#0 DS 8XL1 ; written
000000B0                000000B0 000000A8   7866          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_headers+168
000000A8                                    7867 rd_kafka_msgset_writer_write_msg_headers#start_pos#0 DS 8XL1 ; start_po*
                                                                s
000000B0                000000B0 000000A8   7868          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_headers+168
000000A8                                    7869 rd_kafka_msgset_writer_write_msg_headers#i#0 DS 1F ; i
                                            7870 *
00004FE8                00000000 00007AB2   7871 @CODE    CSECT
                                            7872 *
                                            7873 *
                                            7874 *
                                            7875 * ....... start of rd_kafka_msgset_writer_write_msg_v0_1
00004FE8                                    7876 @LNAME1945 DS  0H
00004FE8 00000025                           7877          DC    X'00000025'
00004FEC 99846D9281869281                   7878          DC    C'rd_kafka_msgset_writer_write_msg'
0000500C 6DA5F06DF1                         7879          DC    C'_v0_1'
00005011 00                                 7880          DC    X'00'
                                            7881 rd_kafka_msgset_writer_write_msg_v0_1 DCCPRLG CINDEX=1945,BASER=12,FRAM*
                                                                E=200,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1945
                                            7882          macro
                                            7883          dccextrn &m
                                            7884          gblc    &$dccext(1000)
                                            7885          gbla    &$dccexti
                                            7886          lcla    &i
                                            7887 &$dccext(&$dccexti+1) setc    '&m'
                                            7888 &i       seta    1
                                            7889 .loop    aif    (&i gt &$dccexti).around
                                            7890          aif    ('&$dccext(&i)' eq '&m').getout
                                            7891 &i       seta    &i+1
                                            7892          ago     .loop
                                            7893 .around  anop
                                            7894 &$dccexti seta &$dccexti+1
                                            7895          extrn  &m
                                            7896 .getout  anop
                                            7897          mend
00005018                                    7898+$eye0168    ds    0d                                                    02-DCCCA
00005018 C4C3C3                             7899+         dc cl3'DCC'                                                    02-DCCCA
0000501B 01                                 7900+         dc xl1'01' format one                                          02-DCCCA
0000501C 00000000                           7901+         dc a(0)                                                        02-DCCCA
00005020 000000000000508A                   7902+         dc ad(@PER_1945)                                               02-DCCCA
00005028 00000000000000C8                   7903+         dc ad(200)                                                     02-DCCCA
                                                                                                                           Page  160 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005030 0000000000000000                   7904+         dc ad(0)                                                       02-DCCCA
00005038 0000000000001000                   7905+         dc ad(4096)                                                    02-DCCCA
00005040 20                                 7906+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005041 03                                 7907+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005042 03                                 7908+         dc al1(3)                                                      02-DCCCA
00005043 08                                 7909+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005044 00                                 7910+         dc bl.8'00000000'                                              02-DCCCA
00005045 000000                             7911+         dc al3(0)                                                      02-DCCCA
00005048 0000000000004FE8                   7912+         dc ad(@LNAME1945)                                              02-DCCCA
00005050                                    7913+         ds 0d                                                          02-DCCCA
00005050 0000000000005018                   7914+         dc ad($eye0168)                                                02-DCCCA
00005058 0000000000000000                   7915+         dc ad(0)                                                       02-DCCCA
00005060                                    7916+         ds    0d                                                       01-DCCPR
00005060                                    7917+rd_kafka_msgset_writer_write_msg_v0_1 ds 0d                             01-DCCPR
00005060                                    7918+@REGION_1945_1 ds 0h                                                    01-DCCPR
00005060 EBEC D008 0024          00000008   7919+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005066 E3E0 D088 0004          00000088   7920+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000506C E3C0 D090 0004          00000090   7921+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005072 B904 002E                          7922+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005076 E3B0 C018 0004          00000018   7923+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000507C A7EB 00C8               000000C8   7924+         aghi  14,200              increase by frame size               01-DCCPR
00005080 E3E0 C020 0021          00000020   7925+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005086 4720 B020               00000020   7926+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000508A                                    7927+@PER_1945 ds   0h                                                       01-DCCPR
0000508A EBDE 2080 0024          00000080   7928+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005090 E3C0 2090 0024          00000090   7929+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005096 B904 00D2                          7930+         lgr   13,2                set real frame pointer               01-DCCPR
0000509A B904 00CF                          7931+         lgr   12,15               set base reg                         01-DCCPR
                        00005060            7932+         using @REGION_1945_1,12                                        01-DCCPR
0000509E B904 0071                          7933          LGR   7,1         ; ptr to parm area
                                            7934 * ******* End of Prologue
                                            7935 * *
                                            7936 * ***           rd_kafka_buf_t *rkbuf = msetw->msetw_rkbuf;
000050A2 EB34 7000 0004          00000000   7937          LMG   3,4,0(7)    ; msetw
000050A8 E350 3000 0004          00000000   7938          LG    5,0(0,3)    ; msetw
                                            7939 * ***           size_t MessageSize;
                                            7940 * ***           size_t of_Crc;
                                            7941 * ***
                                            7942 * ***
                                            7943 * ***
                                            7944 * ***
                                            7945 * ***
                                            7946 * ***
                                            7947 * ***           rd_kafka_buf_write_i64(rkbuf, Offset);
000050AE E350 D0B0 0024          000000B0   7948          STG   5,176(0,13)
000050B4 E3F0 7010 0004          00000010   7949          LG    15,16(0,7)  ; Offset
000050BA E3F0 D0B8 0024          000000B8   7950          STG   15,184(0,13)
000050C0 4110 D0B0               000000B0   7951          LA    1,176(0,13)
000050C4 E380 C1C8 0004          00005228   7952          LG    8,@lit_1945_242 ; rd_kafka_buf_write_i64
000050CA B904 00F8                          7953          LGR   15,8
000050CE                                    7954 @@gen_label331 DS    0H
000050CE 05EF                               7955          BALR  14,15
                                                                                                                           Page  161 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000050D0                                    7956 @@gen_label332 DS    0H
                                            7957 * ***
                                            7958 * ***
                                            7959 * ***           MessageSize =
                                            7960 * ***                   4 + 1 + 1 +
                                            7961 * ***                   4  + rkm->rkm_rkmessage.key_len +
                                            7962 * ***                   4  + rkm->rkm_rkmessage.len;
000050D0 E320 4030 0004          00000030   7963          LG    2,48(0,4)   ; offset of key_len in rd_kafka_message_s
000050D6 A72B 000A               0000000A   7964          AGHI  2,10
000050DA A72B 0004               00000004   7965          AGHI  2,4
000050DE E320 4020 000A          00000020   7966          ALG   2,32(0,4)
                                            7967 * ***
                                            7968 * ***           if (msetw->msetw_MsgVersion == 1)
000050E4 E55C 300C 0001          0000000C   7969          CHSI  12(3),1
000050EA 4770 C092               000050F2   7970          BNE   @L734
                                            7971 * ***                   MessageSize += 8;
000050EE A72B 0008               00000008   7972          AGHI  2,8
000050F2                                    7973 @L734    DS    0H
                                            7974 * ***
                                            7975 * ***           rd_kafka_buf_write_i32(rkbuf, (int32_t)MessageSize);
000050F2 E350 D0B0 0024          000000B0   7976          STG   5,176(0,13)
000050F8 B914 00F2                          7977          LGFR  15,2
000050FC E3F0 D0B8 0024          000000B8   7978          STG   15,184(0,13)
00005102 4110 D0B0               000000B0   7979          LA    1,176(0,13)
00005106 E390 C1D0 0004          00005230   7980          LG    9,@lit_1945_243 ; rd_kafka_buf_write_i32
0000510C B904 00F9                          7981          LGR   15,9
00005110                                    7982 @@gen_label334 DS    0H
00005110 05EF                               7983          BALR  14,15
00005112                                    7984 @@gen_label335 DS    0H
                                            7985 * ***
                                            7986 * ***
                                            7987 * ***
                                            7988 * ***
                                            7989 * ***
                                            7990 * ***           of_Crc = rd_kafka_buf_write_i32(rkbuf, 0);
00005112 E350 D0B0 0024          000000B0   7991          STG   5,176(0,13)
00005118 D707 D0B8 D0B8 000000B8 000000B8   7992          XC    184(8,13),184(13)
0000511E 4110 D0B0               000000B0   7993          LA    1,176(0,13)
00005122 B904 00F9                          7994          LGR   15,9
00005126                                    7995 @@gen_label336 DS    0H
00005126 05EF                               7996          BALR  14,15
00005128                                    7997 @@gen_label337 DS    0H
00005128 B904 006F                          7998          LGR   6,15
                                            7999 * ***
                                            8000 * ***
                                            8001 * ***           rd_kafka_buf_crc_init(rkbuf);
0000512C E350 D0B0 0024          000000B0   8002          STG   5,176(0,13)
00005132 4110 D0B0               000000B0   8003          LA    1,176(0,13)
00005136 E3F0 C1D8 0004          00005238   8004          LG    15,@lit_1945_245 ; rd_kafka_buf_crc_init
0000513C                                    8005 @@gen_label338 DS    0H
0000513C 05EF                               8006          BALR  14,15
0000513E                                    8007 @@gen_label339 DS    0H
                                                                                                                           Page  162 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8008 * ***
                                            8009 * ***
                                            8010 * ***           rd_kafka_buf_write_i8(rkbuf, msetw->msetw_MsgVersion);
0000513E E350 D0B0 0024          000000B0   8011          STG   5,176(0,13)
00005144 58F0 300C               0000000C   8012          L     15,12(0,3)  ; offset of msetw_MsgVersion in rd_kafka_msg*
                                                                set_writer_s
00005148 EBFF 0038 000D          00000038   8013          SLLG  15,15,56(0)
0000514E EBFF 0038 000A          00000038   8014          SRAG  15,15,56(0)
00005154 E3F0 D0B8 0024          000000B8   8015          STG   15,184(0,13)
0000515A 4110 D0B0               000000B0   8016          LA    1,176(0,13)
0000515E E3A0 C1E0 0004          00005240   8017          LG    10,@lit_1945_246 ; rd_kafka_buf_write_i8
00005164 B904 00FA                          8018          LGR   15,10
00005168                                    8019 @@gen_label340 DS    0H
00005168 05EF                               8020          BALR  14,15
0000516A                                    8021 @@gen_label341 DS    0H
                                            8022 * ***
                                            8023 * ***
                                            8024 * ***           rd_kafka_buf_write_i8(rkbuf, MsgAttributes);
0000516A E350 D0B0 0024          000000B0   8025          STG   5,176(0,13)
00005170 E3F0 701F 0077          0000001F   8026          LGB   15,31(0,7)  ; MsgAttributes
00005176 E3F0 D0B8 0024          000000B8   8027          STG   15,184(0,13)
0000517C 4110 D0B0               000000B0   8028          LA    1,176(0,13)
00005180 B904 00FA                          8029          LGR   15,10
00005184                                    8030 @@gen_label342 DS    0H
00005184 05EF                               8031          BALR  14,15
00005186                                    8032 @@gen_label343 DS    0H
                                            8033 * ***
                                            8034 * ***
                                            8035 * ***           if (msetw->msetw_MsgVersion == 1)
00005186 E55C 300C 0001          0000000C   8036          CHSI  12(3),1
0000518C 4770 C14C               000051AC   8037          BNE   @L735
                                            8038 * ***                   rd_kafka_buf_write_i64(rkbuf, rkm->rkm_timesta\
                                            8039 * mp);
00005190 E350 D0B0 0024          000000B0   8040          STG   5,176(0,13)
00005196 E3F0 4060 0004          00000060   8041          LG    15,96(0,4)
0000519C E3F0 D0B8 0024          000000B8   8042          STG   15,184(0,13)
000051A2 4110 D0B0               000000B0   8043          LA    1,176(0,13)
000051A6 B904 00F8                          8044          LGR   15,8
000051AA                                    8045 @@gen_label345 DS    0H
000051AA 05EF                               8046          BALR  14,15
000051AC                                    8047 @@gen_label346 DS    0H
000051AC                                    8048 @L735    DS    0H
                                            8049 * ***
                                            8050 * ***
                                            8051 * ***           rd_kafka_buf_write_bytes(rkbuf, rkm->rkm_rkmessage.key\
                                            8052 * , rkm->rkm_rkmessage.key_len);
000051AC E350 D0B0 0024          000000B0   8053          STG   5,176(0,13)
000051B2 E3F0 4028 0004          00000028   8054          LG    15,40(0,4)
000051B8 E3F0 D0B8 0024          000000B8   8055          STG   15,184(0,13)
000051BE E3F0 4030 0004          00000030   8056          LG    15,48(0,4)
000051C4 E3F0 D0C0 0024          000000C0   8057          STG   15,192(0,13)
000051CA 4110 D0B0               000000B0   8058          LA    1,176(0,13)
                                                                                                                           Page  163 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000051CE E3F0 C1E8 0004          00005248   8059          LG    15,@lit_1945_249 ; rd_kafka_buf_write_bytes
000051D4                                    8060 @@gen_label347 DS    0H
000051D4 05EF                               8061          BALR  14,15
000051D6                                    8062 @@gen_label348 DS    0H
                                            8063 * ***
                                            8064 * ***
                                            8065 * ***           if (rkm->rkm_rkmessage.payload) {
000051D6 E3F0 4018 0002          00000018   8066          LTG   15,24(0,4)  ; offset of payload in rd_kafka_message_s
000051DC 4780 C208               00005268   8067          BZ    @L736
                                            8068 * ***                   rd_kafka_buf_write_i32(rkbuf, (int32_t)rkm->rk\
                                            8069 * m_rkmessage.len);
000051E0 E350 D0B0 0024          000000B0   8070          STG   5,176(0,13)
000051E6 E3F0 4024 0014          00000024   8071          LGF   15,36(0,4)
000051EC E3F0 D0B8 0024          000000B8   8072          STG   15,184(0,13)
000051F2 4110 D0B0               000000B0   8073          LA    1,176(0,13)
000051F6 B904 00F9                          8074          LGR   15,9
000051FA                                    8075 @@gen_label350 DS    0H
000051FA 05EF                               8076          BALR  14,15
000051FC                                    8077 @@gen_label351 DS    0H
                                            8078 * ***                   rd_kafka_msgset_writer_write_msg_payload(msetw\
                                            8079 * , rkm, free_cb);
000051FC EB34 D0B0 0024          000000B0   8080          STMG  3,4,176(13)
00005202 E3F0 7020 0004          00000020   8081          LG    15,32(0,7)  ; free_cb
00005208 E3F0 D0C0 0024          000000C0   8082          STG   15,192(0,13)
0000520E 4110 D0B0               000000B0   8083          LA    1,176(0,13)
00005212 E3F0 C1F0 0004          00005250   8084          LG    15,@lit_1945_251 ; rd_kafka_msgset_writer_write_msg_payl*
                                                                oad
00005218                                    8085 @@gen_label352 DS    0H
00005218 05EF                               8086          BALR  14,15
0000521A                                    8087 @@gen_label353 DS    0H
                                            8088 * ***           } else
0000521A 47F0 C21E               0000527E   8089          B     @L737
00005220                                    8090          DS    0D
00005220 000000C8                           8091 @FRAMESIZE_1945 DC F'200'
00005224 00000000
00005228 0000000000002A08                   8092 @lit_1945_242 DC AD(rd_kafka_buf_write_i64)
00005230 0000000000002668                   8093 @lit_1945_243 DC AD(rd_kafka_buf_write_i32)
00005238 0000000000003380                   8094 @lit_1945_245 DC AD(rd_kafka_buf_crc_init)
00005240 00000000000022D0                   8095 @lit_1945_246 DC AD(rd_kafka_buf_write_i8)
00005248 0000000000003208                   8096 @lit_1945_249 DC AD(rd_kafka_buf_write_bytes)
00005250 0000000000004C20                   8097 @lit_1945_251 DC AD(rd_kafka_msgset_writer_write_msg_payload)
00005258 0000000000003500                   8098 @lit_1945_253 DC AD(rd_kafka_buf_crc_finalize)
00005260 00000000000028D0                   8099 @lit_1945_254 DC AD(rd_kafka_buf_update_u32)
00005268                                    8100 @L736    DS    0H
                                            8101 * ***                   rd_kafka_buf_write_i32(rkbuf, -1);
00005268 E350 D0B0 0024          000000B0   8102          STG   5,176(0,13)
0000526E E548 D0B8 FFFF          000000B8   8103          MVGHI 184(13),-1
00005274 4110 D0B0               000000B0   8104          LA    1,176(0,13)
00005278 B904 00F9                          8105          LGR   15,9
0000527C                                    8106 @@gen_label354 DS    0H
0000527C 05EF                               8107          BALR  14,15
0000527E                                    8108 @@gen_label355 DS    0H
                                                                                                                           Page  164 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000527E                                    8109 @L737    DS    0H
                                            8110 * ***
                                            8111 * ***
                                            8112 * ***           rd_kafka_buf_update_u32(rkbuf, of_Crc,
                                            8113 * ***                                   rd_kafka_buf_crc_finalize(rkbu\
                                            8114 * f));
0000527E E350 D0B0 0024          000000B0   8115          STG   5,176(0,13)
00005284 4110 D0B0               000000B0   8116          LA    1,176(0,13)
00005288 E3F0 C1F8 0004          00005258   8117          LG    15,@lit_1945_253 ; rd_kafka_buf_crc_finalize
0000528E                                    8118 @@gen_label356 DS    0H
0000528E 05EF                               8119          BALR  14,15
00005290                                    8120 @@gen_label357 DS    0H
00005290 EB56 D0B0 0024          000000B0   8121          STMG  5,6,176(13)
00005296 B916 00FF                          8122          LLGFR 15,15
0000529A E3F0 D0C0 0024          000000C0   8123          STG   15,192(0,13)
000052A0 4110 D0B0               000000B0   8124          LA    1,176(0,13)
000052A4 E3F0 C200 0004          00005260   8125          LG    15,@lit_1945_254 ; rd_kafka_buf_update_u32
000052AA                                    8126 @@gen_label358 DS    0H
000052AA 05EF                               8127          BALR  14,15
000052AC                                    8128 @@gen_label359 DS    0H
                                            8129 * ***
                                            8130 * ***
                                            8131 * ***
                                            8132 * ***           return 8 + 4 + MessageSize;
000052AC A72B 000C               0000000C   8133          AGHI  2,12
000052B0 B904 00F2                          8134          LGR   15,2
                                            8135 * ***   }
                                            8136 * * **** Start of Epilogue
                                            8137          DCCEPIL
000052B4                                    8138+         ds 0h                                                          01-DCCEP
                                            8139+* Epilog
000052B4 D707 D088 D088 00000088 00000088   8140+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000052BA E3D0 D080 0004          00000080   8141+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000052C0 E3C0 D090 0004          00000090   8142+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000052C6 E3B0 C018 0004          00000018   8143+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000052CC E3C0 B010 0021          00000010   8144+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000052D2 E3E0 D008 0004          00000008   8145+         lg  14,8(0,13)          load up return address                 01-DCCEP
000052D8 EB1C D020 0004          00000020   8146+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000052DE 078E                               8147+         bcr 8,14                if same dsab, just return              01-DCCEP
000052E0 E3F0 D010 0024          00000010   8148+         stg 15,16(0,13)         save return code                       01-DCCEP
000052E6 E300 D018 0024          00000018   8149+         stg 0,24(0,13)          save more return code                  01-DCCEP
000052EC E3F0 D090 0004          00000090   8150+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000052F2 E3F0 F018 0004          00000018   8151+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000052F8 47F0 F040               00000040   8152+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8153+* End of Epilog
                                            8154 * * **** End of Epilogue
                                            8155          DROP  12
                                            8156 *
                                            8157 *   DSECT for automatic variables in "rd_kafka_msgset_writer_write_msg
                                            8158 *           _v0_1"
                                            8159 *      (FUNCTION #1945)
                                            8160 *
                                                                                                                           Page  165 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                00000000 000000B0   8161 @AUTO#rd_kafka_msgset_writer_write_msg_v0_1 DSECT
00000000                                    8162          DS    XL168
000000A8                                    8163 rd_kafka_msgset_writer_write_msg_v0_1#of_$Crc#0 DS 8XL1 ; of_Crc
000000B0                000000B0 000000A8   8164          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v0_1+168
000000A8                                    8165 rd_kafka_msgset_writer_write_msg_v0_1#$Message$Size#0 DS 8XL1 ; Message*
                                                                Size
                                            8166 *
000052FC                00000000 00007AB2   8167 @CODE    CSECT
                                            8168 *
                                            8169 *
                                            8170 *
                                            8171 * ....... start of rd_kafka_msgset_writer_write_msg_v2
000052FC                                    8172 @LNAME1946 DS  0H
000052FC 00000023                           8173          DC    X'00000023'
00005300 99846D9281869281                   8174          DC    C'rd_kafka_msgset_writer_write_msg'
00005320 6DA5F2                             8175          DC    C'_v2'
00005323 00                                 8176          DC    X'00'
                                            8177 rd_kafka_msgset_writer_write_msg_v2 DCCPRLG CINDEX=1946,BASER=12,FRAME=*
                                                                240,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1946
                                            8178          macro
                                            8179          dccextrn &m
                                            8180          gblc    &$dccext(1000)
                                            8181          gbla    &$dccexti
                                            8182          lcla    &i
                                            8183 &$dccext(&$dccexti+1) setc    '&m'
                                            8184 &i       seta    1
                                            8185 .loop    aif    (&i gt &$dccexti).around
                                            8186          aif    ('&$dccext(&i)' eq '&m').getout
                                            8187 &i       seta    &i+1
                                            8188          ago     .loop
                                            8189 .around  anop
                                            8190 &$dccexti seta &$dccexti+1
                                            8191          extrn  &m
                                            8192 .getout  anop
                                            8193          mend
00005328                                    8194+$eye0171    ds    0d                                                    02-DCCCA
00005328 C4C3C3                             8195+         dc cl3'DCC'                                                    02-DCCCA
0000532B 01                                 8196+         dc xl1'01' format one                                          02-DCCCA
0000532C 00000000                           8197+         dc a(0)                                                        02-DCCCA
00005330 000000000000539A                   8198+         dc ad(@PER_1946)                                               02-DCCCA
00005338 00000000000000F0                   8199+         dc ad(240)                                                     02-DCCCA
00005340 0000000000000000                   8200+         dc ad(0)                                                       02-DCCCA
00005348 0000000000001000                   8201+         dc ad(4096)                                                    02-DCCCA
00005350 20                                 8202+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005351 03                                 8203+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005352 03                                 8204+         dc al1(3)                                                      02-DCCCA
00005353 08                                 8205+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005354 00                                 8206+         dc bl.8'00000000'                                              02-DCCCA
00005355 000000                             8207+         dc al3(0)                                                      02-DCCCA
00005358 00000000000052FC                   8208+         dc ad(@LNAME1946)                                              02-DCCCA
00005360                                    8209+         ds 0d                                                          02-DCCCA
00005360 0000000000005328                   8210+         dc ad($eye0171)                                                02-DCCCA
                                                                                                                           Page  166 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005368 0000000000000000                   8211+         dc ad(0)                                                       02-DCCCA
00005370                                    8212+         ds    0d                                                       01-DCCPR
00005370                                    8213+rd_kafka_msgset_writer_write_msg_v2 ds 0d                               01-DCCPR
00005370                                    8214+@REGION_1946_1 ds 0h                                                    01-DCCPR
00005370 EBEC D008 0024          00000008   8215+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005376 E3E0 D088 0004          00000088   8216+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000537C E3C0 D090 0004          00000090   8217+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005382 B904 002E                          8218+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005386 E3B0 C018 0004          00000018   8219+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000538C A7EB 00F0               000000F0   8220+         aghi  14,240              increase by frame size               01-DCCPR
00005390 E3E0 C020 0021          00000020   8221+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005396 4720 B020               00000020   8222+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000539A                                    8223+@PER_1946 ds   0h                                                       01-DCCPR
0000539A EBDE 2080 0024          00000080   8224+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000053A0 E3C0 2090 0024          00000090   8225+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000053A6 B904 00D2                          8226+         lgr   13,2                set real frame pointer               01-DCCPR
000053AA B904 00CF                          8227+         lgr   12,15               set base reg                         01-DCCPR
                        00005370            8228+         using @REGION_1946_1,12                                        01-DCCPR
000053AE B904 0041                          8229          LGR   4,1
                                            8230 * ******* End of Prologue
                                            8231 * *
                                            8232 * ***           rd_kafka_buf_t *rkbuf = msetw->msetw_rkbuf;
000053B2 E350 4000 0004          00000000   8233          LG    5,0(0,4)    ; msetw
000053B8 E320 4008 0004          00000008   8234          LG    2,8(0,4)    ; rkm
000053BE E330 5000 0004          00000000   8235          LG    3,0(0,5)    ; msetw
                                            8236 * ***           size_t MessageSize = 0;
000053C4 A7A9 0000               00000000   8237          LGHI  10,0        ; 0
                                            8238 * ***           char varint_Length[(sizeof(int32_t) + 1 + (sizeof(int3\
                                            8239 * 2_t)/7))];
                                            8240 * ***           char varint_TimestampDelta[(sizeof(int64_t) + 1 + (siz\
                                            8241 * eof(int64_t)/7))];
                                            8242 * ***           char varint_OffsetDelta[(sizeof(int64_t) + 1 + (sizeof\
                                            8243 * (int64_t)/7))];
                                            8244 * ***           char varint_KeyLen[(sizeof(int32_t) + 1 + (sizeof(int3\
                                            8245 * 2_t)/7))];
                                            8246 * ***           char varint_ValueLen[(sizeof(int32_t) + 1 + (sizeof(in\
                                            8247 * t32_t)/7))];
                                            8248 * ***           char varint_HeaderCount[(sizeof(int32_t) + 1 + (sizeof\
                                            8249 * (int32_t)/7))];
                                            8250 * ***           size_t sz_Length;
                                            8251 * ***           size_t sz_TimestampDelta;
                                            8252 * ***           size_t sz_OffsetDelta;
                                            8253 * ***           size_t sz_KeyLen;
                                            8254 * ***           size_t sz_ValueLen;
                                            8255 * ***           size_t sz_HeaderCount;
                                            8256 * ***           int    HeaderCount = 0;
000053C8 A768 0000               00000000   8257          LHI   6,0         ; 0
                                            8258 * ***           size_t HeaderSize = 0;
                                            8259 * ***
                                            8260 * ***           if (rkm->rkm_headers) {
000053CC E3F0 2068 0002          00000068   8261          LTG   15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
000053D2 4780 C07C               000053EC   8262          BZ    @L738
                                                                                                                           Page  167 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8263 * ***                   HeaderCount = rkm->rkm_headers->rkhdrs_list.rl\
                                            8264 * _cnt;
000053D6 E3F0 2068 0004          00000068   8265          LG    15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
000053DC 5860 F004               00000004   8266          L     6,4(0,15)   ; offset of rl_cnt in rd_list_s
                                            8267 * ***                   HeaderSize  = rkm->rkm_headers->rkhdrs_ser_siz\
                                            8268 * e;
000053E0 E3F0 2068 0004          00000068   8269          LG    15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
000053E6 E3A0 F028 0004          00000028   8270          LG    10,40(0,15) ; offset of rkhdrs_ser_size in rd_kafka_head*
                                                                ers_s
                                            8271 * ***           }
000053EC                                    8272 @L738    DS    0H
                                            8273 * ***
                                            8274 * ***
                                            8275 * ***
                                            8276 * ***
                                            8277 * ***
                                            8278 * ***           sz_TimestampDelta = rd_uvarint_enc_i64(
                                            8279 * ***                   varint_TimestampDelta, sizeof(varint_Timestamp\
                                            8280 * Delta),
                                            8281 * ***                   rkm->rkm_timestamp - msetw->msetw_firstmsg.tim\
                                            8282 * estamp);
000053EC 41F0 D0A8               000000A8   8283          LA    15,168(0,13)
000053F0 E3F0 D0D0 0024          000000D0   8284          STG   15,208(0,13)
000053F6 E548 D0D8 000A          000000D8   8285          MVGHI 216(13),10
000053FC E3F0 2060 0004          00000060   8286          LG    15,96(0,2)  ; offset of rkm_timestamp in rd_kafka_msg_s
00005402 E3F0 5070 0009          00000070   8287          SG    15,112(0,5)
00005408 E3F0 D0E0 0024          000000E0   8288          STG   15,224(0,13)
0000540E 4110 D0D0               000000D0   8289          LA    1,208(0,13)
00005412 E3F0 C0F8 0004          00005468   8290          LG    15,@lit_1946_277 ; rd_uvarint_enc_i64
00005418                                    8291 @@gen_label361 DS    0H
00005418 05EF                               8292          BALR  14,15
0000541A                                    8293 @@gen_label362 DS    0H
0000541A B904 007F                          8294          LGR   7,15
                                            8295 * ***           sz_OffsetDelta = rd_uvarint_enc_i64(
                                            8296 * ***                   varint_OffsetDelta, sizeof(varint_OffsetDelta)\
                                            8297 * , Offset);
0000541E 41F0 D0B2               000000B2   8298          LA    15,178(0,13)
00005422 E3F0 D0D0 0024          000000D0   8299          STG   15,208(0,13)
00005428 E548 D0D8 000A          000000D8   8300          MVGHI 216(13),10
0000542E E3F0 4010 0004          00000010   8301          LG    15,16(0,4)  ; Offset
00005434 E3F0 D0E0 0024          000000E0   8302          STG   15,224(0,13)
0000543A 4110 D0D0               000000D0   8303          LA    1,208(0,13)
0000543E E3F0 C0F8 0004          00005468   8304          LG    15,@lit_1946_277 ; rd_uvarint_enc_i64
00005444                                    8305 @@gen_label363 DS    0H
00005444 05EF                               8306          BALR  14,15
00005446                                    8307 @@gen_label364 DS    0H
00005446 B904 008F                          8308          LGR   8,15
                                            8309 * ***           sz_KeyLen = rd_uvarint_enc_i32(
                                            8310 * ***                   varint_KeyLen, sizeof(varint_KeyLen),
                                            8311 * ***                   rkm->rkm_rkmessage.key ? (int32_t)rkm->rkm_rkm\
                                            8312 * essage.key_len :
0000544A E3F0 2028 0002          00000028   8313          LTG   15,40(0,2)  ; offset of key in rd_kafka_message_s
                                                                                                                           Page  168 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005450 4780 C128               00005498   8314          BZ    @L739
00005454 E3F0 2030 0004          00000030   8315          LG    15,48(0,2)  ; offset of key_len in rd_kafka_message_s
0000545A 47F0 C12C               0000549C   8316          B     @L740
00005460                                    8317          DS    0D
00005460 000000F0                           8318 @FRAMESIZE_1946 DC F'240'
00005464 00000000
00005468 0000000000001078                   8319 @lit_1946_277 DC AD(rd_uvarint_enc_i64)
00005470 00000000000011B0                   8320 @lit_1946_287 DC AD(rd_uvarint_enc_i32)
00005478 0000000000001FA8                   8321 @lit_1946_280 DC AD(rd_kafka_buf_write)
00005480 00000000000022D0                   8322 @lit_1946_268 DC AD(rd_kafka_buf_write_i8)
00005488 0000000000004C20                   8323 @lit_1946_274 DC AD(rd_kafka_msgset_writer_write_msg_payload)
00005490 0000000000004E18                   8324 @lit_1946_276 DC AD(rd_kafka_msgset_writer_write_msg_headers)
00005498                                    8325 @L739    DS    0H
                                            8326 * ***                   (int32_t)-1);
00005498 A7F8 FFFF               0000FFFF   8327          LHI   15,-1       ; -1
0000549C                                    8328 @L740    DS    0H
0000549C 4110 D0BC               000000BC   8329          LA    1,188(0,13)
000054A0 E310 D0D0 0024          000000D0   8330          STG   1,208(0,13)
000054A6 E548 D0D8 0005          000000D8   8331          MVGHI 216(13),5
000054AC B914 00FF                          8332          LGFR  15,15
000054B0 E3F0 D0E0 0024          000000E0   8333          STG   15,224(0,13)
000054B6 4110 D0D0               000000D0   8334          LA    1,208(0,13)
000054BA E3F0 C100 0004          00005470   8335          LG    15,@lit_1946_287 ; rd_uvarint_enc_i32
000054C0                                    8336 @@gen_label366 DS    0H
000054C0 05EF                               8337          BALR  14,15
000054C2                                    8338 @@gen_label367 DS    0H
000054C2 B904 009F                          8339          LGR   9,15
                                            8340 * ***           sz_ValueLen = rd_uvarint_enc_i32(
                                            8341 * ***                   varint_ValueLen, sizeof(varint_ValueLen),
                                            8342 * ***                   rkm->rkm_rkmessage.payload ? (int32_t)rkm->rkm\
                                            8343 * _rkmessage.len :
000054C6 E3F0 2018 0002          00000018   8344          LTG   15,24(0,2)  ; offset of payload in rd_kafka_message_s
000054CC 4780 C16A               000054DA   8345          BZ    @L741
000054D0 E3F0 2020 0004          00000020   8346          LG    15,32(0,2)  ; offset of len in rd_kafka_message_s
000054D6 47F0 C16E               000054DE   8347          B     @L742
000054DA                                    8348 @L741    DS    0H
                                            8349 * ***                   (int32_t)-1);
000054DA A7F8 FFFF               0000FFFF   8350          LHI   15,-1       ; -1
000054DE                                    8351 @L742    DS    0H
000054DE 4110 D0C1               000000C1   8352          LA    1,193(0,13)
000054E2 E310 D0D0 0024          000000D0   8353          STG   1,208(0,13)
000054E8 E548 D0D8 0005          000000D8   8354          MVGHI 216(13),5
000054EE B914 00FF                          8355          LGFR  15,15
000054F2 E3F0 D0E0 0024          000000E0   8356          STG   15,224(0,13)
000054F8 4110 D0D0               000000D0   8357          LA    1,208(0,13)
000054FC E3F0 C100 0004          00005470   8358          LG    15,@lit_1946_287 ; rd_uvarint_enc_i32
00005502                                    8359 @@gen_label369 DS    0H
00005502 05EF                               8360          BALR  14,15
00005504                                    8361 @@gen_label370 DS    0H
00005504 B904 00BF                          8362          LGR   11,15
                                            8363 * ***           sz_HeaderCount = rd_uvarint_enc_i32(
                                            8364 * ***                   varint_HeaderCount, sizeof(varint_HeaderCount)\
                                                                                                                           Page  169 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8365 * ,
                                            8366 * ***                   (int32_t)HeaderCount);
00005508 41F0 D0C6               000000C6   8367          LA    15,198(0,13)
0000550C E3F0 D0D0 0024          000000D0   8368          STG   15,208(0,13)
00005512 E548 D0D8 0005          000000D8   8369          MVGHI 216(13),5
00005518 B914 00F6                          8370          LGFR  15,6
0000551C E3F0 D0E0 0024          000000E0   8371          STG   15,224(0,13)
00005522 4110 D0D0               000000D0   8372          LA    1,208(0,13)
00005526 E3F0 C100 0004          00005470   8373          LG    15,@lit_1946_287 ; rd_uvarint_enc_i32
0000552C                                    8374 @@gen_label371 DS    0H
0000552C 05EF                               8375          BALR  14,15
0000552E                                    8376 @@gen_label372 DS    0H
0000552E E3F0 D0E8 0024          000000E8   8377          STG   15,232(0,13) ; spill
                                            8378 * ***
                                            8379 * ***
                                            8380 * ***
                                            8381 * ***           MessageSize =
                                            8382 * ***                   1  +
                                            8383 * ***                   sz_TimestampDelta +
                                            8384 * ***                   sz_OffsetDelta +
                                            8385 * ***                   sz_KeyLen +
                                            8386 * ***                   rkm->rkm_rkmessage.key_len +
                                            8387 * ***                   sz_ValueLen +
                                            8388 * ***                   rkm->rkm_rkmessage.len +
                                            8389 * ***                   sz_HeaderCount +
                                            8390 * ***                   HeaderSize;
00005534 B904 0017                          8391          LGR   1,7
00005538 A71B 0001               00000001   8392          AGHI  1,1
0000553C B90A 0018                          8393          ALGR  1,8
00005540 B90A 0019                          8394          ALGR  1,9
00005544 E310 2030 000A          00000030   8395          ALG   1,48(0,2)
0000554A B90A 001B                          8396          ALGR  1,11
0000554E E310 2020 000A          00000020   8397          ALG   1,32(0,2)
00005554 B90A 001F                          8398          ALGR  1,15
00005558 B90A 001A                          8399          ALGR  1,10
0000555C B904 0061                          8400          LGR   6,1         ; MessageSize
                                            8401 * ***
                                            8402 * ***
                                            8403 * ***           sz_Length = rd_uvarint_enc_i64(varint_Length, sizeof(v\
                                            8404 * arint_Length),
                                            8405 * ***                                          MessageSize);
00005560 41F0 D0CB               000000CB   8406          LA    15,203(0,13)
00005564 E3F0 D0D0 0024          000000D0   8407          STG   15,208(0,13)
0000556A E548 D0D8 0005          000000D8   8408          MVGHI 216(13),5
00005570 E310 D0E0 0024          000000E0   8409          STG   1,224(0,13)
00005576 4110 D0D0               000000D0   8410          LA    1,208(0,13)
0000557A E3F0 C0F8 0004          00005468   8411          LG    15,@lit_1946_277 ; rd_uvarint_enc_i64
00005580                                    8412 @@gen_label373 DS    0H
00005580 05EF                               8413          BALR  14,15
00005582                                    8414 @@gen_label374 DS    0H
00005582 B904 00AF                          8415          LGR   10,15
                                            8416 * ***           rd_kafka_buf_write(rkbuf, varint_Length, sz_Length);
                                                                                                                           Page  170 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005586 E330 D0D0 0024          000000D0   8417          STG   3,208(0,13)
0000558C 4110 D0CB               000000CB   8418          LA    1,203(0,13)
00005590 E310 D0D8 0024          000000D8   8419          STG   1,216(0,13)
00005596 E3A0 D0E0 0024          000000E0   8420          STG   10,224(0,13)
0000559C 4110 D0D0               000000D0   8421          LA    1,208(0,13)
000055A0 E3F0 C108 0004          00005478   8422          LG    15,@lit_1946_280 ; rd_kafka_buf_write
000055A6                                    8423 @@gen_label375 DS    0H
000055A6 05EF                               8424          BALR  14,15
000055A8                                    8425 @@gen_label376 DS    0H
                                            8426 * ***           MessageSize += sz_Length;
000055A8 B90A 006A                          8427          ALGR  6,10
                                            8428 * ***
                                            8429 * ***
                                            8430 * ***
                                            8431 * ***           rd_kafka_buf_write_i8(rkbuf, 0);
000055AC E330 D0D0 0024          000000D0   8432          STG   3,208(0,13)
000055B2 D707 D0D8 D0D8 000000D8 000000D8   8433          XC    216(8,13),216(13)
000055B8 4110 D0D0               000000D0   8434          LA    1,208(0,13)
000055BC E3F0 C110 0004          00005480   8435          LG    15,@lit_1946_268 ; rd_kafka_buf_write_i8
000055C2                                    8436 @@gen_label377 DS    0H
000055C2 05EF                               8437          BALR  14,15
000055C4                                    8438 @@gen_label378 DS    0H
                                            8439 * ***
                                            8440 * ***
                                            8441 * ***           rd_kafka_buf_write(rkbuf, varint_TimestampDelta, sz_Ti\
                                            8442 * mestampDelta);
000055C4 E330 D0D0 0024          000000D0   8443          STG   3,208(0,13)
000055CA 41F0 D0A8               000000A8   8444          LA    15,168(0,13)
000055CE E3F0 D0D8 0024          000000D8   8445          STG   15,216(0,13)
000055D4 E370 D0E0 0024          000000E0   8446          STG   7,224(0,13)
000055DA 4110 D0D0               000000D0   8447          LA    1,208(0,13)
000055DE E3F0 C108 0004          00005478   8448          LG    15,@lit_1946_280 ; rd_kafka_buf_write
000055E4                                    8449 @@gen_label379 DS    0H
000055E4 05EF                               8450          BALR  14,15
000055E6                                    8451 @@gen_label380 DS    0H
                                            8452 * ***
                                            8453 * ***
                                            8454 * ***           rd_kafka_buf_write(rkbuf, varint_OffsetDelta, sz_Offse\
                                            8455 * tDelta);
000055E6 E330 D0D0 0024          000000D0   8456          STG   3,208(0,13)
000055EC 41F0 D0B2               000000B2   8457          LA    15,178(0,13)
000055F0 E3F0 D0D8 0024          000000D8   8458          STG   15,216(0,13)
000055F6 E380 D0E0 0024          000000E0   8459          STG   8,224(0,13)
000055FC 4110 D0D0               000000D0   8460          LA    1,208(0,13)
00005600 E3F0 C108 0004          00005478   8461          LG    15,@lit_1946_280 ; rd_kafka_buf_write
00005606                                    8462 @@gen_label381 DS    0H
00005606 05EF                               8463          BALR  14,15
00005608                                    8464 @@gen_label382 DS    0H
                                            8465 * ***
                                            8466 * ***
                                            8467 * ***           rd_kafka_buf_write(rkbuf, varint_KeyLen, sz_KeyLen);
00005608 E330 D0D0 0024          000000D0   8468          STG   3,208(0,13)
                                                                                                                           Page  171 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000560E 41F0 D0BC               000000BC   8469          LA    15,188(0,13)
00005612 E3F0 D0D8 0024          000000D8   8470          STG   15,216(0,13)
00005618 E390 D0E0 0024          000000E0   8471          STG   9,224(0,13)
0000561E 4110 D0D0               000000D0   8472          LA    1,208(0,13)
00005622 E3F0 C108 0004          00005478   8473          LG    15,@lit_1946_280 ; rd_kafka_buf_write
00005628                                    8474 @@gen_label383 DS    0H
00005628 05EF                               8475          BALR  14,15
0000562A                                    8476 @@gen_label384 DS    0H
                                            8477 * ***
                                            8478 * ***
                                            8479 * ***           if (rkm->rkm_rkmessage.key)
0000562A E3F0 2028 0002          00000028   8480          LTG   15,40(0,2)  ; offset of key in rd_kafka_message_s
00005630 4780 C2EE               0000565E   8481          BZ    @L743
                                            8482 * ***                   rd_kafka_buf_write(rkbuf, rkm->rkm_rkmessage.k\
                                            8483 * ey, rkm->rkm_rkmessage.key_len);
00005634 E330 D0D0 0024          000000D0   8484          STG   3,208(0,13)
0000563A E3F0 2028 0004          00000028   8485          LG    15,40(0,2)
00005640 E3F0 D0D8 0024          000000D8   8486          STG   15,216(0,13)
00005646 E3F0 2030 0004          00000030   8487          LG    15,48(0,2)
0000564C E3F0 D0E0 0024          000000E0   8488          STG   15,224(0,13)
00005652 4110 D0D0               000000D0   8489          LA    1,208(0,13)
00005656 E3F0 C108 0004          00005478   8490          LG    15,@lit_1946_280 ; rd_kafka_buf_write
0000565C                                    8491 @@gen_label386 DS    0H
0000565C 05EF                               8492          BALR  14,15
0000565E                                    8493 @@gen_label387 DS    0H
0000565E                                    8494 @L743    DS    0H
                                            8495 * ***
                                            8496 * ***
                                            8497 * ***           rd_kafka_buf_write(rkbuf, varint_ValueLen, sz_ValueLen\
                                            8498 * );
0000565E E330 D0D0 0024          000000D0   8499          STG   3,208(0,13)
00005664 41F0 D0C1               000000C1   8500          LA    15,193(0,13)
00005668 E3F0 D0D8 0024          000000D8   8501          STG   15,216(0,13)
0000566E E3B0 D0E0 0024          000000E0   8502          STG   11,224(0,13)
00005674 4110 D0D0               000000D0   8503          LA    1,208(0,13)
00005678 E3F0 C108 0004          00005478   8504          LG    15,@lit_1946_280 ; rd_kafka_buf_write
0000567E                                    8505 @@gen_label388 DS    0H
0000567E 05EF                               8506          BALR  14,15
00005680                                    8507 @@gen_label389 DS    0H
                                            8508 * ***
                                            8509 * ***
                                            8510 * ***           if (rkm->rkm_rkmessage.payload)
00005680 E3F0 2018 0002          00000018   8511          LTG   15,24(0,2)  ; offset of payload in rd_kafka_message_s
00005686 4780 C33E               000056AE   8512          BZ    @L744
                                            8513 * ***                   rd_kafka_msgset_writer_write_msg_payload(msetw\
                                            8514 * , rkm, free_cb);
0000568A E350 D0D0 0024          000000D0   8515          STG   5,208(0,13)
00005690 E320 D0D8 0024          000000D8   8516          STG   2,216(0,13)
00005696 E3F0 4020 0004          00000020   8517          LG    15,32(0,4)  ; free_cb
0000569C E3F0 D0E0 0024          000000E0   8518          STG   15,224(0,13)
000056A2 4110 D0D0               000000D0   8519          LA    1,208(0,13)
000056A6 E3F0 C118 0004          00005488   8520          LG    15,@lit_1946_274 ; rd_kafka_msgset_writer_write_msg_payl*
                                                                                                                           Page  172 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                oad
000056AC                                    8521 @@gen_label391 DS    0H
000056AC 05EF                               8522          BALR  14,15
000056AE                                    8523 @@gen_label392 DS    0H
000056AE                                    8524 @L744    DS    0H
                                            8525 * ***
                                            8526 * ***
                                            8527 * ***           rd_kafka_buf_write(rkbuf, varint_HeaderCount, sz_Heade\
                                            8528 * rCount);
000056AE E330 D0D0 0024          000000D0   8529          STG   3,208(0,13)
000056B4 41F0 D0C6               000000C6   8530          LA    15,198(0,13)
000056B8 E3F0 D0D8 0024          000000D8   8531          STG   15,216(0,13)
000056BE E3F0 D0E8 0004          000000E8   8532          LG    15,232(0,13) ; spill
000056C4 E3F0 D0E0 0024          000000E0   8533          STG   15,224(0,13)
000056CA 4110 D0D0               000000D0   8534          LA    1,208(0,13)
000056CE E3F0 C108 0004          00005478   8535          LG    15,@lit_1946_280 ; rd_kafka_buf_write
000056D4                                    8536 @@gen_label393 DS    0H
000056D4 05EF                               8537          BALR  14,15
000056D6                                    8538 @@gen_label394 DS    0H
                                            8539 * ***
                                            8540 * ***
                                            8541 * ***           if (rkm->rkm_headers)
000056D6 E3F0 2068 0002          00000068   8542          LTG   15,104(0,2) ; offset of rkm_headers in rd_kafka_msg_s
000056DC 4780 C38E               000056FE   8543          BZ    @L745
                                            8544 * ***                   rd_kafka_msgset_writer_write_msg_headers(msetw\
                                            8545 * ,
                                            8546 * ***                                                            rkm->\
                                            8547 * rkm_headers);
000056E0 E350 D0D0 0024          000000D0   8548          STG   5,208(0,13)
000056E6 E3F0 2068 0004          00000068   8549          LG    15,104(0,2)
000056EC E3F0 D0D8 0024          000000D8   8550          STG   15,216(0,13)
000056F2 4110 D0D0               000000D0   8551          LA    1,208(0,13)
000056F6 E3F0 C120 0004          00005490   8552          LG    15,@lit_1946_276 ; rd_kafka_msgset_writer_write_msg_head*
                                                                ers
000056FC                                    8553 @@gen_label396 DS    0H
000056FC 05EF                               8554          BALR  14,15
000056FE                                    8555 @@gen_label397 DS    0H
000056FE                                    8556 @L745    DS    0H
                                            8557 * ***
                                            8558 * ***
                                            8559 * ***           return MessageSize;
000056FE B904 00F6                          8560          LGR   15,6
                                            8561 * ***   }
                                            8562 * * **** Start of Epilogue
                                            8563          DCCEPIL
00005702                                    8564+         ds 0h                                                          01-DCCEP
                                            8565+* Epilog
00005702 D707 D088 D088 00000088 00000088   8566+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005708 E3D0 D080 0004          00000080   8567+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000570E E3C0 D090 0004          00000090   8568+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005714 E3B0 C018 0004          00000018   8569+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000571A E3C0 B010 0021          00000010   8570+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  173 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005720 E3E0 D008 0004          00000008   8571+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005726 EB1C D020 0004          00000020   8572+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000572C 078E                               8573+         bcr 8,14                if same dsab, just return              01-DCCEP
0000572E E3F0 D010 0024          00000010   8574+         stg 15,16(0,13)         save return code                       01-DCCEP
00005734 E300 D018 0024          00000018   8575+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000573A E3F0 D090 0004          00000090   8576+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005740 E3F0 F018 0004          00000018   8577+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005746 47F0 F040               00000040   8578+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8579+* End of Epilog
                                            8580 * * **** End of Epilogue
                                            8581          DROP  12
                                            8582 *
                                            8583 *   DSECT for automatic variables in "rd_kafka_msgset_writer_write_msg
                                            8584 *           _v2"
                                            8585 *      (FUNCTION #1946)
                                            8586 *
00000000                00000000 000000D0   8587 @AUTO#rd_kafka_msgset_writer_write_msg_v2 DSECT
00000000                                    8588          DS    XL168
000000A8                                    8589 rd_kafka_msgset_writer_write_msg_v2#$Header$Size#0 DS 8XL1 ; HeaderSize
000000B0                000000B0 000000A8   8590          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+168
000000A8                                    8591 rd_kafka_msgset_writer_write_msg_v2#$Header$Count#0 DS 1F ; HeaderCount
000000AC                000000AC 000000A8   8592          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+168
000000A8                                    8593 rd_kafka_msgset_writer_write_msg_v2#sz_$Header$Count#0 DS 8XL1 ; sz_Hea*
                                                                derCount
000000B0                000000B0 000000A8   8594          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+168
000000A8                                    8595 rd_kafka_msgset_writer_write_msg_v2#sz_$Value$Len#0 DS 8XL1 ; sz_ValueL*
                                                                en
000000B0                000000B0 000000A8   8596          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+168
000000A8                                    8597 rd_kafka_msgset_writer_write_msg_v2#sz_$Key$Len#0 DS 8XL1 ; sz_KeyLen
000000B0                000000B0 000000A8   8598          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+168
000000A8                                    8599 rd_kafka_msgset_writer_write_msg_v2#sz_$Offset$Delta#0 DS 8XL1 ; sz_Off*
                                                                setDelta
000000B0                000000B0 000000A8   8600          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+168
000000A8                                    8601 rd_kafka_msgset_writer_write_msg_v2#sz_$Timestamp$Delta#0 DS 8XL1 ; sz_*
                                                                TimestampDelta
000000B0                000000B0 000000A8   8602          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+168
000000A8                                    8603 rd_kafka_msgset_writer_write_msg_v2#sz_$Length#0 DS 8XL1 ; sz_Length
000000B0                000000B0 000000A8   8604          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+168
000000A8                                    8605 rd_kafka_msgset_writer_write_msg_v2#varint_$Timestamp$Delta#0 DS 10XL1 *
                                                                ; varint_TimestampDelta
000000B2                000000B2 000000A8   8606          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+168
000000A8                                    8607 rd_kafka_msgset_writer_write_msg_v2#$Message$Size#0 DS 8XL1 ; MessageSi*
                                                                ze
000000B0                000000B0 000000B2   8608          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+178
000000B2                                    8609 rd_kafka_msgset_writer_write_msg_v2#varint_$Offset$Delta#0 DS 10XL1 ; v*
                                                                arint_OffsetDelta
000000BC                000000BC 000000BC   8610          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+188
000000BC                                    8611 rd_kafka_msgset_writer_write_msg_v2#varint_$Key$Len#0 DS 5XL1 ; varint_*
                                                                KeyLen
000000C1                000000C1 000000C1   8612          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+193
000000C1                                    8613 rd_kafka_msgset_writer_write_msg_v2#varint_$Value$Len#0 DS 5XL1 ; varin*
                                                                t_ValueLen
                                                                                                                           Page  174 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000C6                000000C6 000000C6   8614          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+198
000000C6                                    8615 rd_kafka_msgset_writer_write_msg_v2#varint_$Header$Count#0 DS 5XL1 ; va*
                                                                rint_HeaderCount
000000CB                000000CB 000000CB   8616          ORG   @AUTO#rd_kafka_msgset_writer_write_msg_v2+203
000000CB                                    8617 rd_kafka_msgset_writer_write_msg_v2#varint_$Length#0 DS 5XL1 ; varint_L*
                                                                ength
                                            8618 *
0000574A                00000000 00007AB2   8619 @CODE    CSECT
                                            8620 *
                                            8621 *
                                            8622 *
                                            8623 * ....... start of rd_kafka_msgset_writer_write_msg
0000574A                                    8624 @LNAME1947 DS  0H
0000574A 00000020                           8625          DC    X'00000020'
0000574E 99846D9281869281                   8626          DC    C'rd_kafka_msgset_writer_write_msg'
0000576E 00                                 8627          DC    X'00'
                                            8628 rd_kafka_msgset_writer_write_msg DCCPRLG CINDEX=1947,BASER=12,FRAME=232*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1947
                                            8629          macro
                                            8630          dccextrn &m
                                            8631          gblc    &$dccext(1000)
                                            8632          gbla    &$dccexti
                                            8633          lcla    &i
                                            8634 &$dccext(&$dccexti+1) setc    '&m'
                                            8635 &i       seta    1
                                            8636 .loop    aif    (&i gt &$dccexti).around
                                            8637          aif    ('&$dccext(&i)' eq '&m').getout
                                            8638 &i       seta    &i+1
                                            8639          ago     .loop
                                            8640 .around  anop
                                            8641 &$dccexti seta &$dccexti+1
                                            8642          extrn  &m
                                            8643 .getout  anop
                                            8644          mend
00005770                                    8645+$eye0174    ds    0d                                                    02-DCCCA
00005770 C4C3C3                             8646+         dc cl3'DCC'                                                    02-DCCCA
00005773 01                                 8647+         dc xl1'01' format one                                          02-DCCCA
00005774 00000000                           8648+         dc a(0)                                                        02-DCCCA
00005778 00000000000057E2                   8649+         dc ad(@PER_1947)                                               02-DCCCA
00005780 00000000000000E8                   8650+         dc ad(232)                                                     02-DCCCA
00005788 0000000000000000                   8651+         dc ad(0)                                                       02-DCCCA
00005790 0000000000001000                   8652+         dc ad(4096)                                                    02-DCCCA
00005798 20                                 8653+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005799 03                                 8654+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000579A 03                                 8655+         dc al1(3)                                                      02-DCCCA
0000579B 08                                 8656+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000579C 00                                 8657+         dc bl.8'00000000'                                              02-DCCCA
0000579D 000000                             8658+         dc al3(0)                                                      02-DCCCA
000057A0 000000000000574A                   8659+         dc ad(@LNAME1947)                                              02-DCCCA
000057A8                                    8660+         ds 0d                                                          02-DCCCA
000057A8 0000000000005770                   8661+         dc ad($eye0174)                                                02-DCCCA
000057B0 0000000000000000                   8662+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  175 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000057B8                                    8663+         ds    0d                                                       01-DCCPR
000057B8                                    8664+rd_kafka_msgset_writer_write_msg ds 0d                                  01-DCCPR
000057B8                                    8665+@REGION_1947_1 ds 0h                                                    01-DCCPR
000057B8 EBEC D008 0024          00000008   8666+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000057BE E3E0 D088 0004          00000088   8667+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000057C4 E3C0 D090 0004          00000090   8668+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000057CA B904 002E                          8669+         lgr   2,14                copy addr of our savearea            01-DCCPR
000057CE E3B0 C018 0004          00000018   8670+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000057D4 A7EB 00E8               000000E8   8671+         aghi  14,232              increase by frame size               01-DCCPR
000057D8 E3E0 C020 0021          00000020   8672+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000057DE 4720 B020               00000020   8673+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000057E2                                    8674+@PER_1947 ds   0h                                                       01-DCCPR
000057E2 EBDE 2080 0024          00000080   8675+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000057E8 E3C0 2090 0024          00000090   8676+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000057EE B904 00D2                          8677+         lgr   13,2                set real frame pointer               01-DCCPR
000057F2 B904 00CF                          8678+         lgr   12,15               set base reg                         01-DCCPR
                        000057B8            8679+         using @REGION_1947_1,12                                        01-DCCPR
000057F6 B904 0041                          8680          LGR   4,1         ; ptr to parm area
                                            8681 * ******* End of Prologue
                                            8682 * *
000057FA EB23 4000 0004          00000000   8683          LMG   2,3,0(4)    ; msetw
                                            8684 * ***           size_t outlen;
                                            8685 * ***           size_t (*writer[]) (rd_kafka_msgset_writer_t *,
                                            8686 * ***                               rd_kafka_msg_t *, int64_t, int8_t,
                                            8687 * ***                               void (*)(void *)) = {
                                            8688 * ***                   [0] = rd_kafka_msgset_writer_write_msg_v0_1,
00005800 E3F0 C208 0004          000059C0   8689          LG    15,@lit_1947_291 ; rd_kafka_msgset_writer_write_msg_v0_1
00005806 E3F0 D0A8 0024          000000A8   8690          STG   15,168(0,13)
                                            8691 * ***                   [1] = rd_kafka_msgset_writer_write_msg_v0_1,
0000580C E3F0 D0B0 0024          000000B0   8692          STG   15,176(0,13)
                                            8693 * ***                   [2] = rd_kafka_msgset_writer_write_msg_v2
                                            8694 * ***           };
00005812 E3F0 C200 0004          000059B8   8695          LG    15,@lit_1947_293 ; rd_kafka_msgset_writer_write_msg_v2
00005818 E3F0 D0B8 0024          000000B8   8696          STG   15,184(0,13)
                                            8697 * ***           size_t actual_written;
                                            8698 * ***           size_t pre_pos;
                                            8699 * ***
                                            8700 * ***           if (((rkm->rkm_timestamp)))
0000581E E3F0 3060 0002          00000060   8701          LTG   15,96(0,3)  ; offset of rkm_timestamp in rd_kafka_msg_s
00005824 4780 C07A               00005832   8702          BZ    @L746
                                            8703 * ***                   MsgAttributes |= (0 << 3);
00005828 E3F0 401F 0076          0000001F   8704          LB    15,31(0,4)  ; MsgAttributes
0000582E 42F0 401F               0000001F   8705          STC   15,31(0,4)  ; MsgAttributes
00005832                                    8706 @L746    DS    0H
                                            8707 * ***
                                            8708 * ***           pre_pos = rd_buf_write_pos(&msetw->msetw_rkbuf->rkbuf_\
                                            8709 * buf);
00005832 E3F0 2000 0004          00000000   8710          LG    15,0(0,2)   ; msetw
00005838 41F0 F028               00000028   8711          LA    15,40(0,15)
0000583C E3F0 D0C0 0024          000000C0   8712          STG   15,192(0,13)
00005842 4110 D0C0               000000C0   8713          LA    1,192(0,13)
00005846 E360 C210 0004          000059C8   8714          LG    6,@lit_1947_294 ; rd_buf_write_pos
                                                                                                                           Page  176 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000584C B904 00F6                          8715          LGR   15,6
00005850                                    8716 @@gen_label399 DS    0H
00005850 05EF                               8717          BALR  14,15
00005852                                    8718 @@gen_label400 DS    0H
00005852 B904 005F                          8719          LGR   5,15
                                            8720 * ***
                                            8721 * ***           outlen = writer[msetw->msetw_MsgVersion](msetw, rkm,
                                            8722 * ***                                                    Offset, MsgAt\
                                            8723 * tributes,
                                            8724 * ***                                                    free_cb);
00005856 EB23 D0C0 0024          000000C0   8725          STMG  2,3,192(13)
0000585C E3F0 4010 0004          00000010   8726          LG    15,16(0,4)  ; Offset
00005862 E3F0 D0D0 0024          000000D0   8727          STG   15,208(0,13)
00005868 E3F0 401F 0077          0000001F   8728          LGB   15,31(0,4)  ; MsgAttributes
0000586E E3F0 D0D8 0024          000000D8   8729          STG   15,216(0,13)
00005874 E3F0 4020 0004          00000020   8730          LG    15,32(0,4)  ; free_cb
0000587A E3F0 D0E0 0024          000000E0   8731          STG   15,224(0,13)
00005880 E3F0 200C 0014          0000000C   8732          LGF   15,12(0,2)
00005886 EBFF 0003 000D          00000003   8733          SLLG  15,15,3(0)  ; *0x8
0000588C E3FF D0A8 0004          000000A8   8734          LG    15,168(15,13)
00005892 4110 D0C0               000000C0   8735          LA    1,192(0,13)
00005896                                    8736 @@gen_label401 DS    0H
00005896 05EF                               8737          BALR  14,15
00005898                                    8738 @@gen_label402 DS    0H
00005898 B904 004F                          8739          LGR   4,15
                                            8740 * ***
                                            8741 * ***           actual_written = rd_buf_write_pos(&msetw->msetw_rkbuf-\
                                            8742 * >rkbuf_buf) -
0000589C E3F0 2000 0004          00000000   8743          LG    15,0(0,2)   ; msetw
000058A2 41F0 F028               00000028   8744          LA    15,40(0,15)
000058A6 E3F0 D0C0 0024          000000C0   8745          STG   15,192(0,13)
000058AC 4110 D0C0               000000C0   8746          LA    1,192(0,13)
000058B0 B904 00F6                          8747          LGR   15,6
000058B4                                    8748 @@gen_label403 DS    0H
000058B4 05EF                               8749          BALR  14,15
000058B6                                    8750 @@gen_label404 DS    0H
                                            8751 * ***                   pre_pos;
000058B6 B90B 00F5                          8752          SLGR  15,5
000058BA B904 005F                          8753          LGR   5,15        ; actual_written
                                            8754 * ***           ((outlen <= rd_kafka_msg_wire_size(rkm, msetw->msetw_M\
                                            8755 * sgVersion)) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\
                                            8756 * \\src\\rdkafka_msgset_writer.c", 818, "outlen <= rd_kafka_msg_wire_s\
                                            8757 * ize(rkm, msetw->msetw_MsgVersion)"));
000058BE E330 D0C0 0024          000000C0   8758          STG   3,192(0,13)
000058C4 E3F0 200C 0014          0000000C   8759          LGF   15,12(0,2)
000058CA E3F0 D0C8 0024          000000C8   8760          STG   15,200(0,13)
000058D0 4110 D0C0               000000C0   8761          LA    1,192(0,13)
000058D4 E3F0 C218 0004          000059D0   8762          LG    15,@lit_1947_296 ; rd_kafka_msg_wire_size
000058DA                                    8763 @@gen_label405 DS    0H
000058DA 05EF                               8764          BALR  14,15
000058DC                                    8765 @@gen_label406 DS    0H
000058DC B921 004F                          8766          CLGR  4,15
                                                                                                                           Page  177 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000058E0 47D0 C168               00005920   8767          BNH   @L748
000058E4                                    8768 @L747    DS    0H
000058E4 E3F0 C230 0004          000059E8   8769          LG    15,@lit_1947_297
000058EA 41F0 F256               00000256   8770          LA    15,598(0,15)
000058EE E3F0 D0C0 0024          000000C0   8771          STG   15,192(0,13)
000058F4 E3F0 C228 0004          000059E0   8772          LG    15,@lit_1947_298
000058FA 4110 F22C               0000022C   8773          LA    1,556(0,15)
000058FE E310 D0C8 0024          000000C8   8774          STG   1,200(0,13)
00005904 E548 D0D0 0332          000000D0   8775          MVGHI 208(13),818
0000590A 41F0 F32E               0000032E   8776          LA    15,814(0,15)
0000590E E3F0 D0D8 0024          000000D8   8777          STG   15,216(0,13)
00005914 4110 D0C0               000000C0   8778          LA    1,192(0,13)
00005918 E3F0 C220 0004          000059D8   8779          LG    15,@lit_1947_299 ; __assert
0000591E                                    8780 @@gen_label408 DS    0H
0000591E 05EF                               8781          BALR  14,15
00005920                                    8782 @@gen_label409 DS    0H
00005920                                    8783 @L748    DS    0H
                                            8784 * ***
                                            8785 * ***           ((outlen == actual_written) ? (void)0 : __assert(__fun\
                                            8786 * c__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_writer.c", 820, \
                                            8787 * "outlen == actual_written"));
00005920 B921 0045                          8788          CLGR  4,5
00005924 4780 C1AC               00005964   8789          BE    @L750
00005928                                    8790 @L749    DS    0H
00005928 E3F0 C230 0004          000059E8   8791          LG    15,@lit_1947_297
0000592E 41F0 F256               00000256   8792          LA    15,598(0,15)
00005932 E3F0 D0C0 0024          000000C0   8793          STG   15,192(0,13)
00005938 E3F0 C228 0004          000059E0   8794          LG    15,@lit_1947_298
0000593E 4110 F22C               0000022C   8795          LA    1,556(0,15)
00005942 E310 D0C8 0024          000000C8   8796          STG   1,200(0,13)
00005948 E548 D0D0 0334          000000D0   8797          MVGHI 208(13),820
0000594E 41F0 F36E               0000036E   8798          LA    15,878(0,15)
00005952 E3F0 D0D8 0024          000000D8   8799          STG   15,216(0,13)
00005958 4110 D0C0               000000C0   8800          LA    1,192(0,13)
0000595C E3F0 C220 0004          000059D8   8801          LG    15,@lit_1947_299 ; __assert
00005962                                    8802 @@gen_label411 DS    0H
00005962 05EF                               8803          BALR  14,15
00005964                                    8804 @@gen_label412 DS    0H
00005964                                    8805 @L750    DS    0H
                                            8806 * ***
                                            8807 * ***           return outlen;
00005964 B904 00F4                          8808          LGR   15,4
                                            8809 * ***
                                            8810 * ***   }
                                            8811 * * **** Start of Epilogue
                                            8812          DCCEPIL
00005968                                    8813+         ds 0h                                                          01-DCCEP
                                            8814+* Epilog
00005968 D707 D088 D088 00000088 00000088   8815+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000596E E3D0 D080 0004          00000080   8816+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005974 E3C0 D090 0004          00000090   8817+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000597A E3B0 C018 0004          00000018   8818+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  178 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005980 E3C0 B010 0021          00000010   8819+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005986 E3E0 D008 0004          00000008   8820+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000598C EB1C D020 0004          00000020   8821+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005992 078E                               8822+         bcr 8,14                if same dsab, just return              01-DCCEP
00005994 E3F0 D010 0024          00000010   8823+         stg 15,16(0,13)         save return code                       01-DCCEP
0000599A E300 D018 0024          00000018   8824+         stg 0,24(0,13)          save more return code                  01-DCCEP
000059A0 E3F0 D090 0004          00000090   8825+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000059A6 E3F0 F018 0004          00000018   8826+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000059AC 47F0 F040               00000040   8827+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8828+* End of Epilog
                                            8829 * * **** End of Epilogue
000059B0                                    8830          DS    0D
000059B0 000000E8                           8831 @FRAMESIZE_1947 DC F'232'
000059B4 00000000
000059B8 0000000000005370                   8832 @lit_1947_293 DC AD(rd_kafka_msgset_writer_write_msg_v2)
000059C0 0000000000005060                   8833 @lit_1947_291 DC AD(rd_kafka_msgset_writer_write_msg_v0_1)
000059C8 0000000000000D20                   8834 @lit_1947_294 DC AD(rd_buf_write_pos)
000059D0 0000000000001538                   8835 @lit_1947_296 DC AD(rd_kafka_msg_wire_size)
000059D8 0000000000000000                   8836 @lit_1947_299 DC AD(__assert)
000059E0 0000000000007DEC                   8837 @lit_1947_298 DC AD(@strings@)
000059E8 0000000000007AB8                   8838 @lit_1947_297 DC AD(@DATA)
                                            8839          DROP  12
                                            8840 *
                                            8841 *   DSECT for automatic variables in "rd_kafka_msgset_writer_write_msg"
                                            8842 *      (FUNCTION #1947)
                                            8843 *
00000000                00000000 000000C0   8844 @AUTO#rd_kafka_msgset_writer_write_msg DSECT
00000000                                    8845          DS    XL168
000000A8                                    8846 rd_kafka_msgset_writer_write_msg#pre_pos#0 DS 8XL1 ; pre_pos
000000B0                000000B0 000000A8   8847          ORG   @AUTO#rd_kafka_msgset_writer_write_msg+168
000000A8                                    8848 rd_kafka_msgset_writer_write_msg#actual_written#0 DS 8XL1 ; actual_writ*
                                                                ten
000000B0                000000B0 000000A8   8849          ORG   @AUTO#rd_kafka_msgset_writer_write_msg+168
000000A8                                    8850 rd_kafka_msgset_writer_write_msg#writer#0 DS 24XL1 ; writer
000000C0                000000C0 000000A8   8851          ORG   @AUTO#rd_kafka_msgset_writer_write_msg+168
000000A8                                    8852 rd_kafka_msgset_writer_write_msg#outlen#0 DS 8XL1 ; outlen
                                            8853 *
000059F0                00000000 00007AB2   8854 @CODE    CSECT
                                            8855 *
                                            8856 *
                                            8857 *
                                            8858 * ....... start of rd_kafka_msgset_writer_write_msgq
000059F0                                    8859 @LNAME1948 DS  0H
000059F0 00000021                           8860          DC    X'00000021'
000059F4 99846D9281869281                   8861          DC    C'rd_kafka_msgset_writer_write_msg'
00005A14 98                                 8862          DC    C'q'
00005A15 00                                 8863          DC    X'00'
                                            8864 rd_kafka_msgset_writer_write_msgq DCCPRLG CINDEX=1948,BASER=12,FRAME=54*
                                                                4,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1948
                                            8865          macro
                                            8866          dccextrn &m
                                            8867          gblc    &$dccext(1000)
                                                                                                                           Page  179 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8868          gbla    &$dccexti
                                            8869          lcla    &i
                                            8870 &$dccext(&$dccexti+1) setc    '&m'
                                            8871 &i       seta    1
                                            8872 .loop    aif    (&i gt &$dccexti).around
                                            8873          aif    ('&$dccext(&i)' eq '&m').getout
                                            8874 &i       seta    &i+1
                                            8875          ago     .loop
                                            8876 .around  anop
                                            8877 &$dccexti seta &$dccexti+1
                                            8878          extrn  &m
                                            8879 .getout  anop
                                            8880          mend
00005A18                                    8881+$eye0177    ds    0d                                                    02-DCCCA
00005A18 C4C3C3                             8882+         dc cl3'DCC'                                                    02-DCCCA
00005A1B 01                                 8883+         dc xl1'01' format one                                          02-DCCCA
00005A1C 00000000                           8884+         dc a(0)                                                        02-DCCCA
00005A20 0000000000005A8A                   8885+         dc ad(@PER_1948)                                               02-DCCCA
00005A28 0000000000000220                   8886+         dc ad(544)                                                     02-DCCCA
00005A30 0000000000000000                   8887+         dc ad(0)                                                       02-DCCCA
00005A38 0000000000001000                   8888+         dc ad(4096)                                                    02-DCCCA
00005A40 20                                 8889+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005A41 03                                 8890+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005A42 03                                 8891+         dc al1(3)                                                      02-DCCCA
00005A43 08                                 8892+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005A44 00                                 8893+         dc bl.8'00000000'                                              02-DCCCA
00005A45 000000                             8894+         dc al3(0)                                                      02-DCCCA
00005A48 00000000000059F0                   8895+         dc ad(@LNAME1948)                                              02-DCCCA
00005A50                                    8896+         ds 0d                                                          02-DCCCA
00005A50 0000000000005A18                   8897+         dc ad($eye0177)                                                02-DCCCA
00005A58 0000000000000000                   8898+         dc ad(0)                                                       02-DCCCA
00005A60                                    8899+         ds    0d                                                       01-DCCPR
00005A60                                    8900+rd_kafka_msgset_writer_write_msgq ds 0d                                 01-DCCPR
00005A60                                    8901+@REGION_1948_1 ds 0h                                                    01-DCCPR
00005A60 EBEC D008 0024          00000008   8902+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005A66 E3E0 D088 0004          00000088   8903+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005A6C E3C0 D090 0004          00000090   8904+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005A72 B904 002E                          8905+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005A76 E3B0 C018 0004          00000018   8906+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005A7C A7EB 0220               00000220   8907+         aghi  14,544              increase by frame size               01-DCCPR
00005A80 E3E0 C020 0021          00000020   8908+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005A86 4720 B020               00000020   8909+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005A8A                                    8910+@PER_1948 ds   0h                                                       01-DCCPR
00005A8A EBDE 2080 0024          00000080   8911+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005A90 E3C0 2090 0024          00000090   8912+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005A96 B904 00D2                          8913+         lgr   13,2                set real frame pointer               01-DCCPR
00005A9A B904 00CF                          8914+         lgr   12,15               set base reg                         01-DCCPR
                        00005A60            8915+         using @REGION_1948_1,12                                        01-DCCPR
                                            8916 * ******* End of Prologue
                                            8917 * *
                                            8918 * ***           rd_kafka_toppar_t *rktp = msetw->msetw_rktp;
00005A9E E320 1000 0004          00000000   8919          LG    2,0(0,1)    ; msetw
                                                                                                                           Page  180 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005AA4 E380 1008 0004          00000008   8920          LG    8,8(0,1)    ; rkmq
00005AAA EB45 2088 0004          00000088   8921          LMG   4,5,136(2)  ; offset of msetw_rktp in rd_kafka_msgset_wr*
                                                                iter_s
                                            8922 * ***           rd_kafka_broker_t *rkb = msetw->msetw_rkb;
                                            8923 * ***           size_t len = rd_buf_len(&msetw->msetw_rkbuf->rkbuf_buf\
                                            8924 * );
00005AB0 E3F0 2000 0004          00000000   8925          LG    15,0(0,2)   ; msetw
00005AB6 41F0 F028               00000028   8926          LA    15,40(0,15)
00005ABA E3F0 D1A8 0024          000001A8   8927          STG   15,424(0,13)
00005AC0 4110 D1A8               000001A8   8928          LA    1,424(0,13)
00005AC4 E3F0 C0C0 0004          00005B20   8929          LG    15,@lit_1948_304 ; rd_buf_len
00005ACA                                    8930 @@gen_label413 DS    0H
00005ACA 05EF                               8931          BALR  14,15
00005ACC                                    8932 @@gen_label414 DS    0H
00005ACC B904 007F                          8933          LGR   7,15        ; len
                                            8934 * ***           size_t max_msg_size = (((size_t)msetw->msetw_rkb->rkb_\
                                            8935 * rk-> rk_conf.max_msg_size) < ((size_t)msetw->msetw_rkb->rkb_rk-> rk_\
                                            8936 * conf.batch_size) ? ((size_t)msetw->msetw_rkb->rkb_rk-> rk_conf.max_m\
                                            8937 * sg_size) : ((size_t)msetw->msetw_rkb->rkb_rk-> rk_conf.batch_size));
00005AD0 E3F0 2088 0004          00000088   8938          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00005AD6 E3F0 FFD0 0004          00000FD0   8939          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00005ADC E3F0 F2F4 0014          000002F4   8940          LGF   15,756(0,15)
00005AE2 E310 2088 0004          00000088   8941          LG    1,136(0,2)  ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00005AE8 E310 1FD0 0004          00000FD0   8942          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00005AEE E310 1820 0014          00000820   8943          LGF   1,2080(0,1)
00005AF4 B921 00F1                          8944          CLGR  15,1
00005AF8 47B0 C150               00005BB0   8945          BNL   @L751
00005AFC E3F0 2088 0004          00000088   8946          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00005B02 E3F0 FFD0 0004          00000FD0   8947          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00005B08 E3A0 F2F4 0014          000002F4   8948          LGF   10,756(0,15)
00005B0E 47F0 C162               00005BC2   8949          B     @L752
00005B18                                    8950          DS    0D
00005B18 00000220                           8951 @FRAMESIZE_1948 DC F'544'
00005B1C 00000000
00005B20 0000000000000E58                   8952 @lit_1948_304 DC AD(rd_buf_len)
00005B28 00000000000008C0                   8953 @lit_1948_307 DC AD(rd_clock)
00005B30 0000000000000000                   8954 @lit_1948_310 DC AD(rd_kafka_crash)
00005B38 0000000000007AB8                   8955 @lit_1948_309 DC AD(@DATA)
00005B40 0000000000007DEC                   8956 @lit_1948_308 DC AD(@strings@)
00005B48 0000000000000000                   8957 @lit_1948_311 DC AD(rd_kafka_msgbatch_set_first_msg)
00005B50 0000000000000000                   8958 @lit_1948_313 DC AD(mtx_lock)
00005B58 0000000000001BB0                   8959 @lit_1948_315 DC AD(rd_strlcpy)
00005B60 0000000000000000                   8960 @lit_1948_317 DC AD(mtx_unlock)
00005B68 0000000000000000                   8961 @lit_1948_320 DC AD(rd_kafka_log0)
00005B70 0000000000001538                   8962 @lit_1948_321 DC AD(rd_kafka_msg_wire_size)
00005B78 00000000000017A0                   8963 @lit_1948_331 DC AD(rd_kafka_msgq_deq)
00005B80 0000000000001AE0                   8964 @lit_1948_332 DC AD(rd_kafka_msgq_enq)
00005B88 0000000000000B58                   8965 @lit_1948_334 DC AD(rd_avg_add)
00005B90 00000000000057B8                   8966 @lit_1948_335 DC AD(rd_kafka_msgset_writer_write_msg)
                                                                                                                           Page  181 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005B98 0000000000001A50                   8967 @lit_1948_336 DC AD(rd_kafka_msgq_last)
00005BA0 0000000000000000                   8968 @lit_1948_339 DC AD(__assert)
00005BA8 0000000000000000                   8969 @lit_1948_341 DC AD(rd_kafka_set_fatal_error0)
00005BB0                                    8970 @L751    DS    0H
00005BB0 E3F0 2088 0004          00000088   8971          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00005BB6 E3F0 FFD0 0004          00000FD0   8972          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00005BBC E3A0 F820 0014          00000820   8973          LGF   10,2080(0,15)
00005BC2                                    8974 @L752    DS    0H
                                            8975 * ***
                                            8976 * ***
                                            8977 * ***
                                            8978 * ***           rd_ts_t int_latency_base;
                                            8979 * ***           rd_ts_t MaxTimestamp = 0;
00005BC2 A799 0000               00000000   8980          LGHI  9,0         ; 0
                                            8981 * ***           rd_kafka_msg_t *rkm;
                                            8982 * ***           int msgcnt = 0;
00005BC6 A768 0000               00000000   8983          LHI   6,0         ; 0
                                            8984 * ***           const rd_ts_t now = rd_clock();
00005BCA E3F0 C0C8 0004          00005B28   8985          LG    15,@lit_1948_307 ; rd_clock
00005BD0                                    8986 @@gen_label416 DS    0H
00005BD0 05EF                               8987          BALR  14,15
00005BD2                                    8988 @@gen_label417 DS    0H
00005BD2 E3F0 D218 0024          00000218   8989          STG   15,536(0,13) ; spill
                                            8990 * ***
                                            8991 * ***
                                            8992 * ***
                                            8993 * ***           int_latency_base = now +
                                            8994 * ***                   ((rd_ts_t) rktp->rktp_rkt->rkt_conf.message_ti\
                                            8995 * meout_ms * 1000);
00005BD8 E310 5060 0004          00000060   8996          LG    1,96(0,5)   ; offset of rktp_rkt in rd_kafka_toppar_s
00005BDE E310 13A8 0014          000003A8   8997          LGF   1,936(0,1)
00005BE4 A71D 03E8               000003E8   8998          MGHI  1,1000
00005BE8 B908 00F1                          8999          AGR   15,1
00005BEC B904 00BF                          9000          LGR   11,15
                                            9001 * ***
                                            9002 * ***
                                            9003 * ***           rkm = ((&rkmq->rkmq_msgs)->tqh_first);
00005BF0 E330 8000 0004          00000000   9004          LG    3,0(0,8)    ; rkmq
                                            9005 * ***           do { if (((!(rkm)))) rd_kafka_crash("C:\\asgkafka\\lib\
                                            9006 * rdkafka\\src\\rdkafka_msgset_writer.c",857, __FUNCTION__, (((void *)\
                                            9007 * 0)), "assert: " "rkm"); } while (0);
00005BF6                                    9008 @L753    DS    0H
00005BF6 B902 00F3                          9009          LTGR  15,3
00005BFA 4770 C1E0               00005C40   9010          BNZ   @L756
00005BFE E3F0 C0E0 0004          00005B40   9011          LG    15,@lit_1948_308
00005C04 4110 F22C               0000022C   9012          LA    1,556(0,15)
00005C08 E310 D1A8 0024          000001A8   9013          STG   1,424(0,13)
00005C0E E548 D1B0 0359          000001B0   9014          MVGHI 432(13),857
00005C14 E310 C0D8 0004          00005B38   9015          LG    1,@lit_1948_309
00005C1A 4110 1278               00000278   9016          LA    1,632(0,1)
00005C1E E310 D1B8 0024          000001B8   9017          STG   1,440(0,13)
                                                                                                                           Page  182 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005C24 D707 D1C0 D1C0 000001C0 000001C0   9018          XC    448(8,13),448(13)
00005C2A 41F0 F388               00000388   9019          LA    15,904(0,15)
00005C2E E3F0 D1C8 0024          000001C8   9020          STG   15,456(0,13)
00005C34 4110 D1A8               000001A8   9021          LA    1,424(0,13)
00005C38 E3F0 C0D0 0004          00005B30   9022          LG    15,@lit_1948_310 ; rd_kafka_crash
00005C3E                                    9023 @@gen_label419 DS    0H
00005C3E 05EF                               9024          BALR  14,15
00005C40                                    9025 @@gen_label420 DS    0H
00005C40                                    9026 @L756    DS    0H
                                            9027 * ***           msetw->msetw_firstmsg.timestamp = rkm->rkm_timestamp;
00005C40 E3F0 3060 0004          00000060   9028          LG    15,96(0,3)  ; offset of rkm_timestamp in rd_kafka_msg_s
00005C46 E3F0 2070 0024          00000070   9029          STG   15,112(0,2) ; offset of timestamp in 0000155
                                            9030 * ***
                                            9031 * ***           rd_kafka_msgbatch_set_first_msg(msetw->msetw_batch, rk\
                                            9032 * m);
00005C4C E3F0 2060 0004          00000060   9033          LG    15,96(0,2)
00005C52 E3F0 D1A8 0024          000001A8   9034          STG   15,424(0,13)
00005C58 E330 D1B0 0024          000001B0   9035          STG   3,432(0,13)
00005C5E 4110 D1A8               000001A8   9036          LA    1,424(0,13)
00005C62 E3F0 C0E8 0004          00005B48   9037          LG    15,@lit_1948_311 ; rd_kafka_msgbatch_set_first_msg
00005C68                                    9038 @@gen_label421 DS    0H
00005C68 05EF                               9039          BALR  14,15
00005C6A                                    9040 @@gen_label422 DS    0H
                                            9041 * ***
                                            9042 * ***
                                            9043 * ***
                                            9044 * ***
                                            9045 * ***
                                            9046 * ***           do {
00005C6A                                    9047 @L757    DS    0H
                                            9048 * ***                   if (((msetw->msetw_batch->last_msgid && msetw-\
                                            9049 * >msetw_batch->last_msgid < rkm->rkm_u.producer.msgid))) {
00005C6A E3F0 2060 0004          00000060   9050          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00005C70 E3F0 F050 0002          00000050   9051          LTG   15,80(0,15) ; offset of last_msgid in rd_kafka_msgbatch_*
                                                                s
00005C76 4780 C386               00005DE6   9052          BZ    @L760
00005C7A E3F0 2060 0004          00000060   9053          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00005C80 E3F0 F050 0004          00000050   9054          LG    15,80(0,15) ; offset of last_msgid in rd_kafka_msgbatch_*
                                                                s
00005C86 E3F0 3090 0021          00000090   9055          CLG   15,144(0,3)
00005C8C 47B0 C386               00005DE6   9056          BNL   @L760
                                            9057 * ***
                                            9058 * ***
                                            9059 * ***                           do { if ((((rkb)->rkb_rk->rk_conf.debu\
                                            9060 * g & (0x40)))) { do { char _logname[256]; mtx_lock(&(rkb)->rkb_lognam\
                                            9061 * e_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); m\
                                            9062 * tx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->r\
                                            9063 * k_conf, (rkb)->rkb_rk, _logname, 7, (0x40), "PRODUCE", "%.*s [%" "d"\
                                            9064 *  "]: " "Reconstructed MessageSet " "(%d message(s), %" "zu" " bytes,\
                                            9065 *  " "MsgIds %" "llu" "..%" "llu" ")", (int)((rktp->rktp_rkt->rkt_topi\
                                                                                                                           Page  183 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9066 * c)->len == -1 ? 0 : (rktp->rktp_rkt->rkt_topic)->len), (rktp->rktp_r\
                                            9067 * kt->rkt_topic)->str, rktp->rktp_partition, msgcnt, len, msetw->msetw\
                                            9068 * _batch->first_msgid, msetw->msetw_batch->last_msgid); } while (0); }\
                                            9069 *  } while (0);
00005C90                                    9070 @L761    DS    0H
00005C90 E3F0 4FD0 0004          00000FD0   9071          LG    15,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
00005C96 9140 F323      00000323 00000040   9072          TM    803(15),64
00005C9A 4780 C5D6               00006036   9073          BZ    @L758
00005C9E                                    9074 @L765    DS    0H
00005C9E A739 1638               00001638   9075          LGHI  3,5688      ; 5688
00005CA2 41F3 4000               00000000   9076          LA    15,0(3,4)
00005CA6 E3F0 D1A8 0024          000001A8   9077          STG   15,424(0,13)
00005CAC 4110 D1A8               000001A8   9078          LA    1,424(0,13)
00005CB0 E3F0 C0F0 0004          00005B50   9079          LG    15,@lit_1948_313 ; mtx_lock
00005CB6                                    9080 @@gen_label426 DS    0H
00005CB6 05EF                               9081          BALR  14,15
00005CB8                                    9082 @@gen_label427 DS    0H
00005CB8 41F0 D0A8               000000A8   9083          LA    15,168(0,13)
00005CBC E3F0 D1A8 0024          000001A8   9084          STG   15,424(0,13)
00005CC2 A7F9 1630               00001630   9085          LGHI  15,5680     ; 5680
00005CC6 E3FF 4000 0004          00000000   9086          LG    15,0(15,4)
00005CCC E3F0 D1B0 0024          000001B0   9087          STG   15,432(0,13)
00005CD2 E548 D1B8 0100          000001B8   9088          MVGHI 440(13),256
00005CD8 4110 D1A8               000001A8   9089          LA    1,424(0,13)
00005CDC E3F0 C0F8 0004          00005B58   9090          LG    15,@lit_1948_315 ; rd_strlcpy
00005CE2                                    9091 @@gen_label428 DS    0H
00005CE2 05EF                               9092          BALR  14,15
00005CE4                                    9093 @@gen_label429 DS    0H
00005CE4 41F3 4000               00000000   9094          LA    15,0(3,4)
00005CE8 E3F0 D1A8 0024          000001A8   9095          STG   15,424(0,13)
00005CEE 4110 D1A8               000001A8   9096          LA    1,424(0,13)
00005CF2 E3F0 C100 0004          00005B60   9097          LG    15,@lit_1948_317 ; mtx_unlock
00005CF8                                    9098 @@gen_label430 DS    0H
00005CF8 05EF                               9099          BALR  14,15
00005CFA                                    9100 @@gen_label431 DS    0H
00005CFA E3F0 5060 0004          00000060   9101          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005D00 E3F0 F080 0004          00000080   9102          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00005D06 E55C F000 FFFF          00000000   9103          CHSI  0(15),-1
00005D0C 4770 C2B8               00005D18   9104          BNE   @L768
00005D10 A7F8 0000               00000000   9105          LHI   15,0        ; 0
00005D14 47F0 C2C8               00005D28   9106          B     @L769
00005D18                                    9107 @L768    DS    0H
00005D18 E3F0 5060 0004          00000060   9108          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005D1E E3F0 F080 0004          00000080   9109          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00005D24 58F0 F000               00000000   9110          L     15,0(0,15)
00005D28                                    9111 @L769    DS    0H
00005D28 E310 4FD0 0004          00000FD0   9112          LG    1,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
00005D2E 4110 1210               00000210   9113          LA    1,528(0,1)
00005D32 E310 D1A8 0024          000001A8   9114          STG   1,424(0,13)
00005D38 E310 4FD0 0004          00000FD0   9115          LG    1,4048(0,4)
00005D3E E310 D1B0 0024          000001B0   9116          STG   1,432(0,13)
00005D44 4110 D0A8               000000A8   9117          LA    1,168(0,13)
                                                                                                                           Page  184 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005D48 E310 D1B8 0024          000001B8   9118          STG   1,440(0,13)
00005D4E E548 D1C0 0007          000001C0   9119          MVGHI 448(13),7
00005D54 E548 D1C8 0040          000001C8   9120          MVGHI 456(13),64
00005D5A E310 C0E0 0004          00005B40   9121          LG    1,@lit_1948_308
00005D60 4130 11C2               000001C2   9122          LA    3,450(0,1)
00005D64 E330 D1D0 0024          000001D0   9123          STG   3,464(0,13)
00005D6A 4110 1394               00000394   9124          LA    1,916(0,1)
00005D6E E310 D1D8 0024          000001D8   9125          STG   1,472(0,13)
00005D74 B914 00FF                          9126          LGFR  15,15
00005D78 E3F0 D1E0 0024          000001E0   9127          STG   15,480(0,13)
00005D7E E3F0 5060 0004          00000060   9128          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005D84 E3F0 F080 0004          00000080   9129          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00005D8A E3F0 F008 0004          00000008   9130          LG    15,8(0,15)
00005D90 E3F0 D1E8 0024          000001E8   9131          STG   15,488(0,13)
00005D96 E3F0 5068 0014          00000068   9132          LGF   15,104(0,5)
00005D9C E3F0 D1F0 0024          000001F0   9133          STG   15,496(0,13)
00005DA2 B914 00F6                          9134          LGFR  15,6
00005DA6 E3F0 D1F8 0024          000001F8   9135          STG   15,504(0,13)
00005DAC E370 D200 0024          00000200   9136          STG   7,512(0,13)
00005DB2 E3F0 2060 0004          00000060   9137          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00005DB8 E3F0 F040 0004          00000040   9138          LG    15,64(0,15)
00005DBE E3F0 D208 0024          00000208   9139          STG   15,520(0,13)
00005DC4 E3F0 2060 0004          00000060   9140          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00005DCA E3F0 F050 0004          00000050   9141          LG    15,80(0,15)
00005DD0 E3F0 D210 0024          00000210   9142          STG   15,528(0,13)
00005DD6 4110 D1A8               000001A8   9143          LA    1,424(0,13)
00005DDA E3F0 C108 0004          00005B68   9144          LG    15,@lit_1948_320 ; rd_kafka_log0
00005DE0                                    9145 @@gen_label433 DS    0H
00005DE0 05EF                               9146          BALR  14,15
00005DE2                                    9147 @@gen_label434 DS    0H
00005DE2                                    9148 @L764    DS    0H
                                            9149 * ***   # 880 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            9150 * ***                           break;
00005DE2 47F0 C5D6               00006036   9151          B     @L758
                                            9152 * ***                   }
00005DE6                                    9153 @L760    DS    0H
                                            9154 * ***
                                            9155 * ***
                                            9156 * ***   # 891 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            9157 * ***                   if (((msgcnt == msetw->msetw_msgcntmax || (msg\
                                            9158 * cnt > 0 && len + rd_kafka_msg_wire_size(rkm, msetw-> msetw_MsgVersio\
                                            9159 * n) > max_msg_size)))) {
00005DE6 5960 2018               00000018   9160          C     6,24(0,2)
00005DEA 4780 C3C2               00005E22   9161          BE    @L772
00005DEE 1266                               9162          LTR   6,6
00005DF0 47D0 C4F4               00005F54   9163          BNH   @L770
00005DF4 E330 D1A8 0024          000001A8   9164          STG   3,424(0,13)
00005DFA E3F0 200C 0014          0000000C   9165          LGF   15,12(0,2)
00005E00 E3F0 D1B0 0024          000001B0   9166          STG   15,432(0,13)
00005E06 4110 D1A8               000001A8   9167          LA    1,424(0,13)
                                                                                                                           Page  185 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005E0A E3F0 C110 0004          00005B70   9168          LG    15,@lit_1948_321 ; rd_kafka_msg_wire_size
00005E10                                    9169 @@gen_label437 DS    0H
00005E10 05EF                               9170          BALR  14,15
00005E12                                    9171 @@gen_label438 DS    0H
00005E12 B904 0017                          9172          LGR   1,7
00005E16 B90A 001F                          9173          ALGR  1,15
00005E1A B921 001A                          9174          CLGR  1,10
00005E1E 47D0 C4F4               00005F54   9175          BNH   @L770
00005E22                                    9176 @L771    DS    0H
                                            9177 * ***
                                            9178 * ***
                                            9179 * ***
                                            9180 * ***
                                            9181 * ***                           do { if ((((rkb)->rkb_rk->rk_conf.debu\
                                            9182 * g & (0x40)))) { do { char _logname[256]; mtx_lock(&(rkb)->rkb_lognam\
                                            9183 * e_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_logname)); m\
                                            9184 * tx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb_rk->r\
                                            9185 * k_conf, (rkb)->rkb_rk, _logname, 7, (0x40), "PRODUCE", "%.*s [%" "d"\
                                            9186 *  "]: " "No more space in current MessageSet " "(%i message(s), %" "z\
                                            9187 * u" " bytes)", (int)((rktp->rktp_rkt->rkt_topic)->len == -1 ? 0 : (rk\
                                            9188 * tp->rktp_rkt->rkt_topic)->len), (rktp->rktp_rkt->rkt_topic)->str, rk\
                                            9189 * tp->rktp_partition, msgcnt, len); } while (0); } } while (0);
00005E22                                    9190 @L772    DS    0H
00005E22 E3F0 4FD0 0004          00000FD0   9191          LG    15,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
00005E28 9140 F323      00000323 00000040   9192          TM    803(15),64
00005E2C 4780 C5D6               00006036   9193          BZ    @L758
00005E30                                    9194 @L776    DS    0H
00005E30 A739 1638               00001638   9195          LGHI  3,5688      ; 5688
00005E34 41F3 4000               00000000   9196          LA    15,0(3,4)
00005E38 E3F0 D1A8 0024          000001A8   9197          STG   15,424(0,13)
00005E3E 4110 D1A8               000001A8   9198          LA    1,424(0,13)
00005E42 E3F0 C0F0 0004          00005B50   9199          LG    15,@lit_1948_313 ; mtx_lock
00005E48                                    9200 @@gen_label441 DS    0H
00005E48 05EF                               9201          BALR  14,15
00005E4A                                    9202 @@gen_label442 DS    0H
00005E4A 41F0 D0A8               000000A8   9203          LA    15,168(0,13)
00005E4E E3F0 D1A8 0024          000001A8   9204          STG   15,424(0,13)
00005E54 A7F9 1630               00001630   9205          LGHI  15,5680     ; 5680
00005E58 E3FF 4000 0004          00000000   9206          LG    15,0(15,4)
00005E5E E3F0 D1B0 0024          000001B0   9207          STG   15,432(0,13)
00005E64 E548 D1B8 0100          000001B8   9208          MVGHI 440(13),256
00005E6A 4110 D1A8               000001A8   9209          LA    1,424(0,13)
00005E6E E3F0 C0F8 0004          00005B58   9210          LG    15,@lit_1948_315 ; rd_strlcpy
00005E74                                    9211 @@gen_label443 DS    0H
00005E74 05EF                               9212          BALR  14,15
00005E76                                    9213 @@gen_label444 DS    0H
00005E76 41F3 4000               00000000   9214          LA    15,0(3,4)
00005E7A E3F0 D1A8 0024          000001A8   9215          STG   15,424(0,13)
00005E80 4110 D1A8               000001A8   9216          LA    1,424(0,13)
00005E84 E3F0 C100 0004          00005B60   9217          LG    15,@lit_1948_317 ; mtx_unlock
00005E8A                                    9218 @@gen_label445 DS    0H
00005E8A 05EF                               9219          BALR  14,15
                                                                                                                           Page  186 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005E8C                                    9220 @@gen_label446 DS    0H
00005E8C E3F0 5060 0004          00000060   9221          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005E92 E3F0 F080 0004          00000080   9222          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00005E98 E55C F000 FFFF          00000000   9223          CHSI  0(15),-1
00005E9E 4770 C44A               00005EAA   9224          BNE   @L779
00005EA2 A7F8 0000               00000000   9225          LHI   15,0        ; 0
00005EA6 47F0 C45A               00005EBA   9226          B     @L780
00005EAA                                    9227 @L779    DS    0H
00005EAA E3F0 5060 0004          00000060   9228          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005EB0 E3F0 F080 0004          00000080   9229          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00005EB6 58F0 F000               00000000   9230          L     15,0(0,15)
00005EBA                                    9231 @L780    DS    0H
00005EBA E310 4FD0 0004          00000FD0   9232          LG    1,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
00005EC0 4110 1210               00000210   9233          LA    1,528(0,1)
00005EC4 E310 D1A8 0024          000001A8   9234          STG   1,424(0,13)
00005ECA E310 4FD0 0004          00000FD0   9235          LG    1,4048(0,4)
00005ED0 E310 D1B0 0024          000001B0   9236          STG   1,432(0,13)
00005ED6 4110 D0A8               000000A8   9237          LA    1,168(0,13)
00005EDA E310 D1B8 0024          000001B8   9238          STG   1,440(0,13)
00005EE0 E548 D1C0 0007          000001C0   9239          MVGHI 448(13),7
00005EE6 E548 D1C8 0040          000001C8   9240          MVGHI 456(13),64
00005EEC E310 C0E0 0004          00005B40   9241          LG    1,@lit_1948_308
00005EF2 4130 11C2               000001C2   9242          LA    3,450(0,1)
00005EF6 E330 D1D0 0024          000001D0   9243          STG   3,464(0,13)
00005EFC 4110 13E6               000003E6   9244          LA    1,998(0,1)
00005F00 E310 D1D8 0024          000001D8   9245          STG   1,472(0,13)
00005F06 B914 00FF                          9246          LGFR  15,15
00005F0A E3F0 D1E0 0024          000001E0   9247          STG   15,480(0,13)
00005F10 E3F0 5060 0004          00000060   9248          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005F16 E3F0 F080 0004          00000080   9249          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00005F1C E3F0 F008 0004          00000008   9250          LG    15,8(0,15)
00005F22 E3F0 D1E8 0024          000001E8   9251          STG   15,488(0,13)
00005F28 E3F0 5068 0014          00000068   9252          LGF   15,104(0,5)
00005F2E E3F0 D1F0 0024          000001F0   9253          STG   15,496(0,13)
00005F34 B914 00F6                          9254          LGFR  15,6
00005F38 E3F0 D1F8 0024          000001F8   9255          STG   15,504(0,13)
00005F3E E370 D200 0024          00000200   9256          STG   7,512(0,13)
00005F44 4110 D1A8               000001A8   9257          LA    1,424(0,13)
00005F48 E3F0 C108 0004          00005B68   9258          LG    15,@lit_1948_320 ; rd_kafka_log0
00005F4E                                    9259 @@gen_label448 DS    0H
00005F4E 05EF                               9260          BALR  14,15
00005F50                                    9261 @@gen_label449 DS    0H
00005F50                                    9262 @L775    DS    0H
                                            9263 * ***   # 903 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            9264 * ***                           break;
00005F50 47F0 C5D6               00006036   9265          B     @L758
                                            9266 * ***                   }
00005F54                                    9267 @L770    DS    0H
                                            9268 * ***
                                            9269 * ***                   if (((rkm->rkm_u.producer.ts_backoff > now))) \
                                            9270 * {
00005F54 E3F0 3088 0004          00000088   9271          LG    15,136(0,3) ; offset of ts_backoff in 0000042
                                                                                                                           Page  187 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005F5A E310 D218 0004          00000218   9272          LG    1,536(0,13) ; spill
00005F60 B920 00F1                          9273          CGR   15,1
00005F64 47D0 C50C               00005F6C   9274          BNH   @L781
                                            9275 * ***
                                            9276 * ***
                                            9277 * ***                           break;
00005F68 47F0 C5D6               00006036   9278          B     @L758
                                            9279 * ***                   }
00005F6C                                    9280 @L781    DS    0H
                                            9281 * ***
                                            9282 * ***
                                            9283 * ***                   rd_kafka_msgq_deq(rkmq, rkm, 1);
00005F6C E380 D1A8 0024          000001A8   9284          STG   8,424(0,13)
00005F72 E330 D1B0 0024          000001B0   9285          STG   3,432(0,13)
00005F78 E548 D1B8 0001          000001B8   9286          MVGHI 440(13),1
00005F7E 4110 D1A8               000001A8   9287          LA    1,424(0,13)
00005F82 E3F0 C118 0004          00005B78   9288          LG    15,@lit_1948_331 ; rd_kafka_msgq_deq
00005F88                                    9289 @@gen_label451 DS    0H
00005F88 05EF                               9290          BALR  14,15
00005F8A                                    9291 @@gen_label452 DS    0H
                                            9292 * ***                   rd_kafka_msgq_enq(&msetw->msetw_batch->msgq, r\
                                            9293 * km);
00005F8A E3F0 2060 0004          00000060   9294          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00005F90 41F0 F008               00000008   9295          LA    15,8(0,15)
00005F94 E3F0 D1A8 0024          000001A8   9296          STG   15,424(0,13)
00005F9A E330 D1B0 0024          000001B0   9297          STG   3,432(0,13)
00005FA0 4110 D1A8               000001A8   9298          LA    1,424(0,13)
00005FA4 E3F0 C120 0004          00005B80   9299          LG    15,@lit_1948_332 ; rd_kafka_msgq_enq
00005FAA                                    9300 @@gen_label453 DS    0H
00005FAA 05EF                               9301          BALR  14,15
00005FAC                                    9302 @@gen_label454 DS    0H
                                            9303 * ***
                                            9304 * ***                   msetw->msetw_messages_kvlen += rkm->rkm_rkmess\
                                            9305 * age.len + rkm->rkm_rkmessage.key_len;
00005FAC E3F0 3020 0004          00000020   9306          LG    15,32(0,3)  ; offset of len in rd_kafka_message_s
00005FB2 E3F0 3030 000A          00000030   9307          ALG   15,48(0,3)
00005FB8 E3F0 2028 000A          00000028   9308          ALG   15,40(0,2)
00005FBE E3F0 2028 0024          00000028   9309          STG   15,40(0,2)
                                            9310 * ***
                                            9311 * ***
                                            9312 * ***                   rd_avg_add(&rkb->rkb_avg_int_latency,
                                            9313 * ***                              int_latency_base - rkm->rkm_u.produ\
                                            9314 * cer.ts_timeout);
00005FC4 A7F9 1138               00001138   9315          LGHI  15,4408     ; 4408
00005FC8 41FF 4000               00000000   9316          LA    15,0(15,4)
00005FCC E3F0 D1A8 0024          000001A8   9317          STG   15,424(0,13)
00005FD2 B904 00FB                          9318          LGR   15,11
00005FD6 E3F0 3078 0009          00000078   9319          SG    15,120(0,3)
00005FDC E3F0 D1B0 0024          000001B0   9320          STG   15,432(0,13)
00005FE2 4110 D1A8               000001A8   9321          LA    1,424(0,13)
00005FE6 E3F0 C128 0004          00005B88   9322          LG    15,@lit_1948_334 ; rd_avg_add
                                                                                                                           Page  188 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005FEC                                    9323 @@gen_label455 DS    0H
00005FEC 05EF                               9324          BALR  14,15
00005FEE                                    9325 @@gen_label456 DS    0H
                                            9326 * ***
                                            9327 * ***
                                            9328 * ***                   if (((MaxTimestamp < rkm->rkm_timestamp)))
00005FEE E390 3060 0020          00000060   9329          CG    9,96(0,3)
00005FF4 47B0 C59E               00005FFE   9330          BNL   @L782
                                            9331 * ***                           MaxTimestamp = rkm->rkm_timestamp;
00005FF8 E390 3060 0004          00000060   9332          LG    9,96(0,3)   ; offset of rkm_timestamp in rd_kafka_msg_s
00005FFE                                    9333 @L782    DS    0H
                                            9334 * ***
                                            9335 * ***
                                            9336 * ***                   len += rd_kafka_msgset_writer_write_msg(msetw,\
                                            9337 *  rkm, msgcnt, 0,
                                            9338 * ***                                                           ((void\
                                            9339 *  *)0));
00005FFE EB23 D1A8 0024          000001A8   9340          STMG  2,3,424(13)
00006004 B914 00F6                          9341          LGFR  15,6
00006008 E3F0 D1B8 0024          000001B8   9342          STG   15,440(0,13)
0000600E D70F D1C0 D1C0 000001C0 000001C0   9343          XC    448(16,13),448(13)
00006014 4110 D1A8               000001A8   9344          LA    1,424(0,13)
00006018 E3F0 C130 0004          00005B90   9345          LG    15,@lit_1948_335 ; rd_kafka_msgset_writer_write_msg
0000601E                                    9346 @@gen_label458 DS    0H
0000601E 05EF                               9347          BALR  14,15
00006020                                    9348 @@gen_label459 DS    0H
00006020 B90A 007F                          9349          ALGR  7,15
                                            9350 * ***
                                            9351 * ***                   msgcnt++;
00006024 A76A 0001               00000001   9352          AHI   6,1
                                            9353 * ***
                                            9354 * ***           } while ((rkm = ((&rkmq->rkmq_msgs)->tqh_first)));
00006028 E330 8000 0004          00000000   9355          LG    3,0(0,8)    ; rkmq
0000602E B902 00F3                          9356          LTGR  15,3
00006032 4770 C20A               00005C6A   9357          BNZ   @L757
00006036                                    9358 @L758    DS    0H
                                            9359 * ***
                                            9360 * ***           msetw->msetw_MaxTimestamp = MaxTimestamp;
00006036 E390 2050 0024          00000050   9361          STG   9,80(0,2)   ; offset of msetw_MaxTimestamp in rd_kafka_m*
                                                                sgset_writer_s
                                            9362 * ***
                                            9363 * ***
                                            9364 * ***   # 945 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            9365 * ***           if (msgcnt > 0 && msetw->msetw_batch->last_msgid) {
0000603C 1266                               9366          LTR   6,6
0000603E 47D0 C6E2               00006142   9367          BNH   @L783
00006042 E3F0 2060 0004          00000060   9368          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00006048 E3F0 F050 0002          00000050   9369          LTG   15,80(0,15) ; offset of last_msgid in rd_kafka_msgbatch_*
                                                                s
0000604E 4780 C6E2               00006142   9370          BZ    @L783
                                            9371 * ***                   rd_kafka_msg_t *lastmsg;
                                                                                                                           Page  189 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9372 * ***
                                            9373 * ***                   lastmsg = rd_kafka_msgq_last(&msetw->msetw_bat\
                                            9374 * ch->msgq);
00006052 E3F0 2060 0004          00000060   9375          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00006058 41F0 F008               00000008   9376          LA    15,8(0,15)
0000605C E3F0 D1A8 0024          000001A8   9377          STG   15,424(0,13)
00006062 4110 D1A8               000001A8   9378          LA    1,424(0,13)
00006066 E3F0 C138 0004          00005B98   9379          LG    15,@lit_1948_336 ; rd_kafka_msgq_last
0000606C                                    9380 @@gen_label463 DS    0H
0000606C 05EF                               9381          BALR  14,15
0000606E                                    9382 @@gen_label464 DS    0H
0000606E B904 003F                          9383          LGR   3,15
                                            9384 * ***                   ((lastmsg) ? (void)0 : __assert(__func__, "C:\\
                                            9385 * \asgkafka\\librdkafka\\src\\rdkafka_msgset_writer.c", 949, "lastmsg"\
                                            9386 * ));
00006072 B902 00F3                          9387          LTGR  15,3
00006076 4770 C656               000060B6   9388          BNZ   @L785
0000607A                                    9389 @L784    DS    0H
0000607A E3F0 C0D8 0004          00005B38   9390          LG    15,@lit_1948_309
00006080 41F0 F278               00000278   9391          LA    15,632(0,15)
00006084 E3F0 D1A8 0024          000001A8   9392          STG   15,424(0,13)
0000608A E3F0 C0E0 0004          00005B40   9393          LG    15,@lit_1948_308
00006090 4110 F22C               0000022C   9394          LA    1,556(0,15)
00006094 E310 D1B0 0024          000001B0   9395          STG   1,432(0,13)
0000609A E548 D1B8 03B5          000001B8   9396          MVGHI 440(13),949
000060A0 41F0 F430               00000430   9397          LA    15,1072(0,15)
000060A4 E3F0 D1C0 0024          000001C0   9398          STG   15,448(0,13)
000060AA 4110 D1A8               000001A8   9399          LA    1,424(0,13)
000060AE E3F0 C140 0004          00005BA0   9400          LG    15,@lit_1948_339 ; __assert
000060B4                                    9401 @@gen_label466 DS    0H
000060B4 05EF                               9402          BALR  14,15
000060B6                                    9403 @@gen_label467 DS    0H
000060B6                                    9404 @L785    DS    0H
                                            9405 * ***
                                            9406 * ***                   if (((lastmsg->rkm_u.producer.msgid != msetw->\
                                            9407 * msetw_batch->last_msgid))) {
000060B6 E3F0 3090 0004          00000090   9408          LG    15,144(0,3) ; offset of msgid in 0000042
000060BC E310 2060 0004          00000060   9409          LG    1,96(0,2)   ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
000060C2 E3F0 1050 0021          00000050   9410          CLG   15,80(0,1)
000060C8 4780 C6E2               00006142   9411          BE    @L786
                                            9412 * ***
                                            9413 * ***                           rd_kafka_set_fatal_error0(rkb->rkb_rk,\
                                            9414 *  RD_DO_LOCK, RD_KAFKA_RESP_ERR__INCONSISTENT, "Unable to reconstruct\
                                            9415 *  MessageSet " "(currently with %d message(s)) " "with msgid range %"\
                                            9416 *  "llu" "..%" "llu" ": " "last message added has msgid %" "llu" ": " \
                                            9417 * "unable to guarantee consistency", msgcnt, msetw->msetw_batch->first\
                                            9418 * _msgid, msetw->msetw_batch->last_msgid, lastmsg->rkm_u.producer.msgi\
                                            9419 * d);
000060CC E3F0 4FD0 0004          00000FD0   9420          LG    15,4048(0,4)
000060D2 E3F0 D1A8 0024          000001A8   9421          STG   15,424(0,13)
                                                                                                                           Page  190 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000060D8 E548 D1B0 0001          000001B0   9422          MVGHI 432(13),1
000060DE E548 D1B8 FF6B          000001B8   9423          MVGHI 440(13),-149
000060E4 E3F0 C0E0 0004          00005B40   9424          LG    15,@lit_1948_308
000060EA 41F0 F438               00000438   9425          LA    15,1080(0,15)
000060EE E3F0 D1C0 0024          000001C0   9426          STG   15,448(0,13)
000060F4 B914 00F6                          9427          LGFR  15,6
000060F8 E3F0 D1C8 0024          000001C8   9428          STG   15,456(0,13)
000060FE E3F0 2060 0004          00000060   9429          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00006104 E3F0 F040 0004          00000040   9430          LG    15,64(0,15)
0000610A E3F0 D1D0 0024          000001D0   9431          STG   15,464(0,13)
00006110 E3F0 2060 0004          00000060   9432          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00006116 E3F0 F050 0004          00000050   9433          LG    15,80(0,15)
0000611C E3F0 D1D8 0024          000001D8   9434          STG   15,472(0,13)
00006122 E3F0 3090 0004          00000090   9435          LG    15,144(0,3)
00006128 E3F0 D1E0 0024          000001E0   9436          STG   15,480(0,13)
0000612E 4110 D1A8               000001A8   9437          LA    1,424(0,13)
00006132 E3F0 C148 0004          00005BA8   9438          LG    15,@lit_1948_341 ; rd_kafka_set_fatal_error0
00006138                                    9439 @@gen_label469 DS    0H
00006138 05EF                               9440          BALR  14,15
0000613A                                    9441 @@gen_label470 DS    0H
                                            9442 * ***   # 965 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            9443 * ***                           return 0;
0000613A A7F9 0000               00000000   9444          LGHI  15,0        ; 0
0000613E 47F0 C6E6               00006146   9445          B     @ret_lab_1948
                                            9446 * ***                   }
00006142                                    9447 @L786    DS    0H
                                            9448 * ***           }
00006142                                    9449 @L783    DS    0H
                                            9450 * ***           return 1;
00006142 A7F9 0001               00000001   9451          LGHI  15,1        ; 1
                                            9452 * ***   }
00006146                                    9453 @ret_lab_1948 DS 0H
                                            9454 * * **** Start of Epilogue
                                            9455          DCCEPIL
00006146                                    9456+         ds 0h                                                          01-DCCEP
                                            9457+* Epilog
00006146 D707 D088 D088 00000088 00000088   9458+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000614C E3D0 D080 0004          00000080   9459+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006152 E3C0 D090 0004          00000090   9460+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006158 E3B0 C018 0004          00000018   9461+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000615E E3C0 B010 0021          00000010   9462+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006164 E3E0 D008 0004          00000008   9463+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000616A EB1C D020 0004          00000020   9464+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006170 078E                               9465+         bcr 8,14                if same dsab, just return              01-DCCEP
00006172 E3F0 D010 0024          00000010   9466+         stg 15,16(0,13)         save return code                       01-DCCEP
00006178 E300 D018 0024          00000018   9467+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000617E E3F0 D090 0004          00000090   9468+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006184 E3F0 F018 0004          00000018   9469+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000618A 47F0 F040               00000040   9470+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9471+* End of Epilog
                                                                                                                           Page  191 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9472 * * **** End of Epilogue
                                            9473          DROP  12
                                            9474 *
                                            9475 *   DSECT for automatic variables in "rd_kafka_msgset_writer_write_msg
                                            9476 *           q"
                                            9477 *      (FUNCTION #1948)
                                            9478 *
00000000                00000000 000001A8   9479 @AUTO#rd_kafka_msgset_writer_write_msgq DSECT
00000000                                    9480          DS    XL168
000000A8                                    9481 rd_kafka_msgset_writer_write_msgq#_logname#10 DS 256XL1 ; _logname
000001A8                000001A8 000000A8   9482          ORG   @AUTO#rd_kafka_msgset_writer_write_msgq+168
000000A8                                    9483 rd_kafka_msgset_writer_write_msgq#_logname#6 DS 256XL1 ; _logname
000001A8                000001A8 000000A8   9484          ORG   @AUTO#rd_kafka_msgset_writer_write_msgq+168
000000A8                                    9485 rd_kafka_msgset_writer_write_msgq#now#0 DS 8XL1 ; now
000000B0                000000B0 000000A8   9486          ORG   @AUTO#rd_kafka_msgset_writer_write_msgq+168
000000A8                                    9487 rd_kafka_msgset_writer_write_msgq#msgcnt#0 DS 1F ; msgcnt
000000AC                000000AC 000000A8   9488          ORG   @AUTO#rd_kafka_msgset_writer_write_msgq+168
000000A8                                    9489 rd_kafka_msgset_writer_write_msgq#$Max$Timestamp#0 DS 8XL1 ; MaxTimesta*
                                                                mp
000000B0                000000B0 000000A8   9490          ORG   @AUTO#rd_kafka_msgset_writer_write_msgq+168
000000A8                                    9491 rd_kafka_msgset_writer_write_msgq#int_latency_base#0 DS 8XL1 ; int_late*
                                                                ncy_base
000000B0                000000B0 000000A8   9492          ORG   @AUTO#rd_kafka_msgset_writer_write_msgq+168
000000A8                                    9493 rd_kafka_msgset_writer_write_msgq#max_msg_size#0 DS 8XL1 ; max_msg_size
000000B0                000000B0 000000A8   9494          ORG   @AUTO#rd_kafka_msgset_writer_write_msgq+168
000000A8                                    9495 rd_kafka_msgset_writer_write_msgq#len#0 DS 8XL1 ; len
                                            9496 *
0000618E                00000000 00007AB2   9497 @CODE    CSECT
                                            9498 *
                                            9499 *
                                            9500 *
                                            9501 * ....... start of rd_kafka_msgset_writer_compress_snappy
0000618E                                    9502 @LNAME1949 DS  0H
0000618E 00000026                           9503          DC    X'00000026'
00006192 99846D9281869281                   9504          DC    C'rd_kafka_msgset_writer_compress_'
000061B2 A295819797A8                       9505          DC    C'snappy'
000061B8 00                                 9506          DC    X'00'
                                            9507 rd_kafka_msgset_writer_compress_snappy DCCPRLG CINDEX=1949,BASER=12,FRA*
                                                                ME=552,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1949
                                            9508          macro
                                            9509          dccextrn &m
                                            9510          gblc    &$dccext(1000)
                                            9511          gbla    &$dccexti
                                            9512          lcla    &i
                                            9513 &$dccext(&$dccexti+1) setc    '&m'
                                            9514 &i       seta    1
                                            9515 .loop    aif    (&i gt &$dccexti).around
                                            9516          aif    ('&$dccext(&i)' eq '&m').getout
                                            9517 &i       seta    &i+1
                                            9518          ago     .loop
                                            9519 .around  anop
                                            9520 &$dccexti seta &$dccexti+1
                                                                                                                           Page  192 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9521          extrn  &m
                                            9522 .getout  anop
                                            9523          mend
000061C0                                    9524+$eye0180    ds    0d                                                    02-DCCCA
000061C0 C4C3C3                             9525+         dc cl3'DCC'                                                    02-DCCCA
000061C3 01                                 9526+         dc xl1'01' format one                                          02-DCCCA
000061C4 00000000                           9527+         dc a(0)                                                        02-DCCCA
000061C8 0000000000006232                   9528+         dc ad(@PER_1949)                                               02-DCCCA
000061D0 0000000000000228                   9529+         dc ad(552)                                                     02-DCCCA
000061D8 0000000000000000                   9530+         dc ad(0)                                                       02-DCCCA
000061E0 0000000000001000                   9531+         dc ad(4096)                                                    02-DCCCA
000061E8 20                                 9532+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000061E9 03                                 9533+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000061EA 03                                 9534+         dc al1(3)                                                      02-DCCCA
000061EB 08                                 9535+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000061EC 00                                 9536+         dc bl.8'00000000'                                              02-DCCCA
000061ED 000000                             9537+         dc al3(0)                                                      02-DCCCA
000061F0 000000000000618E                   9538+         dc ad(@LNAME1949)                                              02-DCCCA
000061F8                                    9539+         ds 0d                                                          02-DCCCA
000061F8 00000000000061C0                   9540+         dc ad($eye0180)                                                02-DCCCA
00006200 0000000000000000                   9541+         dc ad(0)                                                       02-DCCCA
00006208                                    9542+         ds    0d                                                       01-DCCPR
00006208                                    9543+rd_kafka_msgset_writer_compress_snappy ds 0d                            01-DCCPR
00006208                                    9544+@REGION_1949_1 ds 0h                                                    01-DCCPR
00006208 EBEC D008 0024          00000008   9545+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000620E E3E0 D088 0004          00000088   9546+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006214 E3C0 D090 0004          00000090   9547+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000621A B904 002E                          9548+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000621E E3B0 C018 0004          00000018   9549+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006224 A7EB 0228               00000228   9550+         aghi  14,552              increase by frame size               01-DCCPR
00006228 E3E0 C020 0021          00000020   9551+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000622E 4720 B020               00000020   9552+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006232                                    9553+@PER_1949 ds   0h                                                       01-DCCPR
00006232 EBDE 2080 0024          00000080   9554+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006238 E3C0 2090 0024          00000090   9555+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000623E B904 00D2                          9556+         lgr   13,2                set real frame pointer               01-DCCPR
00006242 B904 00CF                          9557+         lgr   12,15               set base reg                         01-DCCPR
                        00006208            9558+         using @REGION_1949_1,12                                        01-DCCPR
                                            9559 * ******* End of Prologue
                                            9560 * *
                                            9561 * ***           rd_kafka_broker_t *rkb = msetw->msetw_rkb;
00006246 EB23 1008 0004          00000008   9562          LMG   2,3,8(1)    ; slice
0000624C E3F0 1000 0004          00000000   9563          LG    15,0(0,1)   ; msetw
00006252 EB45 F088 0004          00000088   9564          LMG   4,5,136(15) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
                                            9565 * ***           rd_kafka_toppar_t *rktp = msetw->msetw_rktp;
                                            9566 * ***           struct iovec *iov;
                                            9567 * ***           size_t iov_max, iov_cnt;
                                            9568 * ***           struct snappy_env senv;
                                            9569 * ***           size_t len = ((slice)->end - rd_slice_abs_offset(slice\
                                            9570 * ));
00006258 E380 2020 0004          00000020   9571          LG    8,32(0,2)   ; offset of end in rd_slice_s
                                                                                                                           Page  193 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000625E E320 D1C8 0024          000001C8   9572          STG   2,456(0,13)
00006264 4110 D1C8               000001C8   9573          LA    1,456(0,13)
00006268 E3F0 C1C8 0004          000063D0   9574          LG    15,@lit_1949_345 ; rd_slice_abs_offset
0000626E                                    9575 @@gen_label471 DS    0H
0000626E 05EF                               9576          BALR  14,15
00006270                                    9577 @@gen_label472 DS    0H
00006270 B90B 008F                          9578          SLGR  8,15
                                            9579 * ***           int r;
                                            9580 * ***
                                            9581 * ***
                                            9582 * ***           rd_kafka_snappy_init_env_sg(&senv, 1);
00006274 41F0 D0B0               000000B0   9583          LA    15,176(0,13)
00006278 E3F0 D1C8 0024          000001C8   9584          STG   15,456(0,13)
0000627E E548 D1D0 0001          000001D0   9585          MVGHI 464(13),1
00006284 4110 D1C8               000001C8   9586          LA    1,456(0,13)
00006288 E3F0 C1D0 0004          000063D8   9587          LG    15,@lit_1949_346 ; rd_kafka_snappy_init_env_sg
0000628E                                    9588 @@gen_label473 DS    0H
0000628E 05EF                               9589          BALR  14,15
00006290                                    9590 @@gen_label474 DS    0H
                                            9591 * ***
                                            9592 * ***
                                            9593 * ***
                                            9594 * ***           ciov->iov_len = rd_kafka_snappy_max_compressed_length(\
                                            9595 * len);
00006290 E380 D1C8 0024          000001C8   9596          STG   8,456(0,13)
00006296 4110 D1C8               000001C8   9597          LA    1,456(0,13)
0000629A E3F0 C1D8 0004          000063E0   9598          LG    15,@lit_1949_347 ; rd_kafka_snappy_max_compressed_length
000062A0                                    9599 @@gen_label475 DS    0H
000062A0 05EF                               9600          BALR  14,15
000062A2                                    9601 @@gen_label476 DS    0H
000062A2 E3F0 3008 0024          00000008   9602          STG   15,8(0,3)
                                            9603 * ***           ciov->iov_base = rd_malloc(ciov->iov_len);
000062A8 E3F0 D1C8 0024          000001C8   9604          STG   15,456(0,13)
000062AE 4110 D1C8               000001C8   9605          LA    1,456(0,13)
000062B2 E3F0 C1E0 0004          000063E8   9606          LG    15,@lit_1949_348 ; rd_malloc
000062B8                                    9607 @@gen_label477 DS    0H
000062B8 05EF                               9608          BALR  14,15
000062BA                                    9609 @@gen_label478 DS    0H
000062BA E3F0 3000 0024          00000000   9610          STG   15,0(0,3)
                                            9611 * ***
                                            9612 * ***           iov_max = slice->buf->rbuf_segment_cnt;
000062C0 E3F0 2000 0004          00000000   9613          LG    15,0(0,2)   ; slice
000062C6 E370 F010 0004          00000010   9614          LG    7,16(0,15)  ; offset of rbuf_segment_cnt in rd_buf_s
                                            9615 * ***           iov = __builtin_alloca(sizeof(*iov) * iov_max);
000062CC EBF7 0004 000D          00000004   9616          SLLG  15,7,4(0)   ; *0x10
000062D2 E3F0 D1C8 0024          000001C8   9617          STG   15,456(0,13)
000062D8 4110 D1C8               000001C8   9618          LA    1,456(0,13)
000062DC E3F0 C1E8 0004          000063F0   9619          LG    15,@lit_1949_349 ; @@ALLOCA
000062E2                                    9620 @@gen_label479 DS    0H
000062E2 05EF                               9621          BALR  14,15
000062E4                                    9622 @@gen_label480 DS    0H
000062E4 B904 006F                          9623          LGR   6,15
                                                                                                                           Page  194 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9624 * ***
                                            9625 * ***           rd_slice_get_iov(slice, iov, &iov_cnt, iov_max, len);
000062E8 E320 D1C8 0024          000001C8   9626          STG   2,456(0,13)
000062EE E360 D1D0 0024          000001D0   9627          STG   6,464(0,13)
000062F4 41F0 D0A8               000000A8   9628          LA    15,168(0,13)
000062F8 E3F0 D1D8 0024          000001D8   9629          STG   15,472(0,13)
000062FE EB78 D1E0 0024          000001E0   9630          STMG  7,8,480(13)
00006304 4110 D1C8               000001C8   9631          LA    1,456(0,13)
00006308 E3F0 C1F0 0004          000063F8   9632          LG    15,@lit_1949_350 ; rd_slice_get_iov
0000630E                                    9633 @@gen_label481 DS    0H
0000630E 05EF                               9634          BALR  14,15
00006310                                    9635 @@gen_label482 DS    0H
                                            9636 * ***
                                            9637 * ***
                                            9638 * ***           if ((r = rd_kafka_snappy_compress_iov(&senv, iov, iov_\
                                            9639 * cnt, len,
                                            9640 * ***                                                 ciov)) != 0) {
00006310 41F0 D0B0               000000B0   9641          LA    15,176(0,13)
00006314 E3F0 D1C8 0024          000001C8   9642          STG   15,456(0,13)
0000631A E360 D1D0 0024          000001D0   9643          STG   6,464(0,13)
00006320 E3F0 D0A8 0004          000000A8   9644          LG    15,168(0,13) ; iov_cnt
00006326 E3F0 D1D8 0024          000001D8   9645          STG   15,472(0,13)
0000632C E380 D1E0 0024          000001E0   9646          STG   8,480(0,13)
00006332 E330 D1E8 0024          000001E8   9647          STG   3,488(0,13)
00006338 4110 D1C8               000001C8   9648          LA    1,456(0,13)
0000633C E3F0 C1F8 0004          00006400   9649          LG    15,@lit_1949_351 ; rd_kafka_snappy_compress_iov
00006342                                    9650 @@gen_label483 DS    0H
00006342 05EF                               9651          BALR  14,15
00006344                                    9652 @@gen_label484 DS    0H
00006344 122F                               9653          LTR   2,15
00006346 4780 C31A               00006522   9654          BE    @L787
                                            9655 * ***                   do { char _logname[256]; mtx_lock(&(rkb)->rkb_\
                                            9656 * logname_lock); rd_strlcpy(_logname, rkb->rkb_logname, sizeof(_lognam\
                                            9657 * e)); mtx_unlock(&(rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb)->rkb\
                                            9658 * _rk->rk_conf, (rkb)->rkb_rk, _logname, 3, 0x0, "SNAPPY", "Failed to \
                                            9659 * snappy-compress " "%" "zu" " bytes for " "topic %.*s [%" "d" "]: %s:\
                                            9660 *  " "sending uncompressed", len, (int)((rktp->rktp_rkt->rkt_topic)->l\
                                            9661 * en == -1 ? 0 : (rktp->rktp_rkt->rkt_topic)->len), (rktp->rktp_rkt->r\
                                            9662 * kt_topic)->str, rktp->rktp_partition, strerror(-r)); } while (0);
0000634A                                    9663 @L788    DS    0H
0000634A A769 1638               00001638   9664          LGHI  6,5688      ; 5688
0000634E 41F6 4000               00000000   9665          LA    15,0(6,4)
00006352 E3F0 D1C8 0024          000001C8   9666          STG   15,456(0,13)
00006358 4110 D1C8               000001C8   9667          LA    1,456(0,13)
0000635C E3F0 C200 0004          00006408   9668          LG    15,@lit_1949_353 ; mtx_lock
00006362                                    9669 @@gen_label486 DS    0H
00006362 05EF                               9670          BALR  14,15
00006364                                    9671 @@gen_label487 DS    0H
00006364 41F0 D0C8               000000C8   9672          LA    15,200(0,13)
00006368 E3F0 D1C8 0024          000001C8   9673          STG   15,456(0,13)
0000636E A7F9 1630               00001630   9674          LGHI  15,5680     ; 5680
00006372 E3FF 4000 0004          00000000   9675          LG    15,0(15,4)
                                                                                                                           Page  195 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006378 E3F0 D1D0 0024          000001D0   9676          STG   15,464(0,13)
0000637E E548 D1D8 0100          000001D8   9677          MVGHI 472(13),256
00006384 4110 D1C8               000001C8   9678          LA    1,456(0,13)
00006388 E3F0 C208 0004          00006410   9679          LG    15,@lit_1949_355 ; rd_strlcpy
0000638E                                    9680 @@gen_label488 DS    0H
0000638E 05EF                               9681          BALR  14,15
00006390                                    9682 @@gen_label489 DS    0H
00006390 41F6 4000               00000000   9683          LA    15,0(6,4)
00006394 E3F0 D1C8 0024          000001C8   9684          STG   15,456(0,13)
0000639A 4110 D1C8               000001C8   9685          LA    1,456(0,13)
0000639E E3F0 C210 0004          00006418   9686          LG    15,@lit_1949_357 ; mtx_unlock
000063A4                                    9687 @@gen_label490 DS    0H
000063A4 05EF                               9688          BALR  14,15
000063A6                                    9689 @@gen_label491 DS    0H
000063A6 E3F0 5060 0004          00000060   9690          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
000063AC E3F0 F080 0004          00000080   9691          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
000063B2 E55C F000 FFFF          00000000   9692          CHSI  0(15),-1
000063B8 4770 C240               00006448   9693          BNE   @L791
000063BC A768 0000               00000000   9694          LHI   6,0         ; 0
000063C0 47F0 C250               00006458   9695          B     @L792
000063C8                                    9696          DS    0D
000063C8 00000228                           9697 @FRAMESIZE_1949 DC F'552'
000063CC 00000000
000063D0 0000000000000ED8                   9698 @lit_1949_345 DC AD(rd_slice_abs_offset)
000063D8 0000000000000000                   9699 @lit_1949_346 DC AD(rd_kafka_snappy_init_env_sg)
000063E0 0000000000000000                   9700 @lit_1949_347 DC AD(rd_kafka_snappy_max_compressed_length)
000063E8 00000000000004D0                   9701 @lit_1949_348 DC AD(rd_malloc)
000063F0 0000000000000000                   9702 @lit_1949_349 DC AD(@@ALLOCA)
000063F8 0000000000000000                   9703 @lit_1949_350 DC AD(rd_slice_get_iov)
00006400 0000000000000000                   9704 @lit_1949_351 DC AD(rd_kafka_snappy_compress_iov)
00006408 0000000000000000                   9705 @lit_1949_353 DC AD(mtx_lock)
00006410 0000000000001BB0                   9706 @lit_1949_355 DC AD(rd_strlcpy)
00006418 0000000000000000                   9707 @lit_1949_357 DC AD(mtx_unlock)
00006420 0000000000000000                   9708 @lit_1949_359 DC AD(strerror)
00006428 0000000000000000                   9709 @lit_1949_361 DC AD(rd_kafka_log0)
00006430 0000000000007DEC                   9710 @lit_1949_360 DC AD(@strings@)
00006438 0000000000000638                   9711 @lit_1949_362 DC AD(rd_free)
00006440 0000000000000000                   9712 @lit_1949_364 DC AD(rd_kafka_snappy_free_env)
00006448                                    9713 @L791    DS    0H
00006448 E3F0 5060 0004          00000060   9714          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000644E E3F0 F080 0004          00000080   9715          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00006454 5860 F000               00000000   9716          L     6,0(0,15)
00006458                                    9717 @L792    DS    0H
00006458 13F2                               9718          LCR   15,2
0000645A B914 00FF                          9719          LGFR  15,15
0000645E E3F0 D1C8 0024          000001C8   9720          STG   15,456(0,13)
00006464 4110 D1C8               000001C8   9721          LA    1,456(0,13)
00006468 E3F0 C218 0004          00006420   9722          LG    15,@lit_1949_359 ; strerror
0000646E                                    9723 @@gen_label493 DS    0H
0000646E 05EF                               9724          BALR  14,15
00006470                                    9725 @@gen_label494 DS    0H
00006470 E310 4FD0 0004          00000FD0   9726          LG    1,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
                                                                                                                           Page  196 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006476 4110 1210               00000210   9727          LA    1,528(0,1)
0000647A E310 D1C8 0024          000001C8   9728          STG   1,456(0,13)
00006480 E310 4FD0 0004          00000FD0   9729          LG    1,4048(0,4)
00006486 E310 D1D0 0024          000001D0   9730          STG   1,464(0,13)
0000648C 4110 D0C8               000000C8   9731          LA    1,200(0,13)
00006490 E310 D1D8 0024          000001D8   9732          STG   1,472(0,13)
00006496 E548 D1E0 0003          000001E0   9733          MVGHI 480(13),3
0000649C D707 D1E8 D1E8 000001E8 000001E8   9734          XC    488(8,13),488(13)
000064A2 E310 C228 0004          00006430   9735          LG    1,@lit_1949_360
000064A8 4120 14D8               000004D8   9736          LA    2,1240(0,1)
000064AC E320 D1F0 0024          000001F0   9737          STG   2,496(0,13)
000064B2 4110 14E0               000004E0   9738          LA    1,1248(0,1)
000064B6 E310 D1F8 0024          000001F8   9739          STG   1,504(0,13)
000064BC E380 D200 0024          00000200   9740          STG   8,512(0,13)
000064C2 B914 0016                          9741          LGFR  1,6
000064C6 E310 D208 0024          00000208   9742          STG   1,520(0,13)
000064CC E310 5060 0004          00000060   9743          LG    1,96(0,5)   ; offset of rktp_rkt in rd_kafka_toppar_s
000064D2 E310 1080 0004          00000080   9744          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
000064D8 E310 1008 0004          00000008   9745          LG    1,8(0,1)
000064DE E310 D210 0024          00000210   9746          STG   1,528(0,13)
000064E4 E310 5068 0014          00000068   9747          LGF   1,104(0,5)
000064EA E310 D218 0024          00000218   9748          STG   1,536(0,13)
000064F0 E3F0 D220 0024          00000220   9749          STG   15,544(0,13)
000064F6 4110 D1C8               000001C8   9750          LA    1,456(0,13)
000064FA E3F0 C220 0004          00006428   9751          LG    15,@lit_1949_361 ; rd_kafka_log0
00006500                                    9752 @@gen_label495 DS    0H
00006500 05EF                               9753          BALR  14,15
00006502                                    9754 @@gen_label496 DS    0H
                                            9755 * ***   # 1109 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                            9756 * ***                   rd_free(ciov->iov_base);
00006502 E3F0 3000 0004          00000000   9757          LG    15,0(0,3)
00006508 E3F0 D1C8 0024          000001C8   9758          STG   15,456(0,13)
0000650E 4110 D1C8               000001C8   9759          LA    1,456(0,13)
00006512 E3F0 C230 0004          00006438   9760          LG    15,@lit_1949_362 ; rd_free
00006518                                    9761 @@gen_label497 DS    0H
00006518 05EF                               9762          BALR  14,15
0000651A                                    9763 @@gen_label498 DS    0H
                                            9764 * ***                   return -1;
0000651A A7F9 FFFF               0000FFFF   9765          LGHI  15,-1       ; -1
0000651E 47F0 C334               0000653C   9766          B     @ret_lab_1949
                                            9767 * ***           }
00006522                                    9768 @L787    DS    0H
                                            9769 * ***
                                            9770 * ***
                                            9771 * ***           rd_kafka_snappy_free_env(&senv);
00006522 41F0 D0B0               000000B0   9772          LA    15,176(0,13)
00006526 E3F0 D1C8 0024          000001C8   9773          STG   15,456(0,13)
0000652C 4110 D1C8               000001C8   9774          LA    1,456(0,13)
00006530 E3F0 C238 0004          00006440   9775          LG    15,@lit_1949_364 ; rd_kafka_snappy_free_env
00006536                                    9776 @@gen_label499 DS    0H
00006536 05EF                               9777          BALR  14,15
00006538                                    9778 @@gen_label500 DS    0H
                                                                                                                           Page  197 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9779 * ***
                                            9780 * ***           return 0;
00006538 A7F9 0000               00000000   9781          LGHI  15,0        ; 0
                                            9782 * ***   }
0000653C                                    9783 @ret_lab_1949 DS 0H
                                            9784 * * **** Start of Epilogue
                                            9785          DCCEPIL
0000653C                                    9786+         ds 0h                                                          01-DCCEP
                                            9787+* Epilog
0000653C D707 D088 D088 00000088 00000088   9788+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006542 E3D0 D080 0004          00000080   9789+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006548 E3C0 D090 0004          00000090   9790+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000654E E3B0 C018 0004          00000018   9791+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006554 E3C0 B010 0021          00000010   9792+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000655A E3E0 D008 0004          00000008   9793+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006560 EB1C D020 0004          00000020   9794+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006566 078E                               9795+         bcr 8,14                if same dsab, just return              01-DCCEP
00006568 E3F0 D010 0024          00000010   9796+         stg 15,16(0,13)         save return code                       01-DCCEP
0000656E E300 D018 0024          00000018   9797+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006574 E3F0 D090 0004          00000090   9798+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000657A E3F0 F018 0004          00000018   9799+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006580 47F0 F040               00000040   9800+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9801+* End of Epilog
                                            9802 * * **** End of Epilogue
                                            9803          DROP  12
                                            9804 *
                                            9805 *   DSECT for automatic variables in "rd_kafka_msgset_writer_compress_
                                            9806 *           snappy"
                                            9807 *      (FUNCTION #1949)
                                            9808 *
00000000                00000000 000001C8   9809 @AUTO#rd_kafka_msgset_writer_compress_snappy DSECT
00000000                                    9810          DS    XL168
000000A8                                    9811 rd_kafka_msgset_writer_compress_snappy#r#0 DS 1F ; r
000000AC                000000AC 000000A8   9812          ORG   @AUTO#rd_kafka_msgset_writer_compress_snappy+168
000000A8                                    9813 rd_kafka_msgset_writer_compress_snappy#len#0 DS 8XL1 ; len
000000B0                000000B0 000000A8   9814          ORG   @AUTO#rd_kafka_msgset_writer_compress_snappy+168
000000A8                                    9815 rd_kafka_msgset_writer_compress_snappy#iov_cnt#0 DS 8XL1 ; iov_cnt
000000B0                000000B0 000000A8   9816          ORG   @AUTO#rd_kafka_msgset_writer_compress_snappy+168
000000A8                                    9817 rd_kafka_msgset_writer_compress_snappy#iov_max#0 DS 8XL1 ; iov_max
000000B0                000000B0 000000B0   9818          ORG   @AUTO#rd_kafka_msgset_writer_compress_snappy+176
000000B0                                    9819 rd_kafka_msgset_writer_compress_snappy#senv#0 DS 24XL1 ; senv
000000C8                000000C8 000000C8   9820          ORG   @AUTO#rd_kafka_msgset_writer_compress_snappy+200
000000C8                                    9821 rd_kafka_msgset_writer_compress_snappy#_logname#2 DS 256XL1 ; _logname
                                            9822 *
00006584                00000000 00007AB2   9823 @CODE    CSECT
                                            9824 *
                                            9825 *
                                            9826 *
                                            9827 * ....... start of rd_kafka_msgset_writer_compress_lz4
00006584                                    9828 @LNAME1950 DS  0H
00006584 00000023                           9829          DC    X'00000023'
00006588 99846D9281869281                   9830          DC    C'rd_kafka_msgset_writer_compress_'
                                                                                                                           Page  198 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000065A8 93A9F4                             9831          DC    C'lz4'
000065AB 00                                 9832          DC    X'00'
                                            9833 rd_kafka_msgset_writer_compress_lz4 DCCPRLG CINDEX=1950,BASER=12,FRAME=*
                                                                224,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1950
                                            9834          macro
                                            9835          dccextrn &m
                                            9836          gblc    &$dccext(1000)
                                            9837          gbla    &$dccexti
                                            9838          lcla    &i
                                            9839 &$dccext(&$dccexti+1) setc    '&m'
                                            9840 &i       seta    1
                                            9841 .loop    aif    (&i gt &$dccexti).around
                                            9842          aif    ('&$dccext(&i)' eq '&m').getout
                                            9843 &i       seta    &i+1
                                            9844          ago     .loop
                                            9845 .around  anop
                                            9846 &$dccexti seta &$dccexti+1
                                            9847          extrn  &m
                                            9848 .getout  anop
                                            9849          mend
000065B0                                    9850+$eye0183    ds    0d                                                    02-DCCCA
000065B0 C4C3C3                             9851+         dc cl3'DCC'                                                    02-DCCCA
000065B3 01                                 9852+         dc xl1'01' format one                                          02-DCCCA
000065B4 00000000                           9853+         dc a(0)                                                        02-DCCCA
000065B8 0000000000006622                   9854+         dc ad(@PER_1950)                                               02-DCCCA
000065C0 00000000000000E0                   9855+         dc ad(224)                                                     02-DCCCA
000065C8 0000000000000000                   9856+         dc ad(0)                                                       02-DCCCA
000065D0 0000000000001000                   9857+         dc ad(4096)                                                    02-DCCCA
000065D8 20                                 9858+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000065D9 03                                 9859+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000065DA 03                                 9860+         dc al1(3)                                                      02-DCCCA
000065DB 08                                 9861+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000065DC 00                                 9862+         dc bl.8'00000000'                                              02-DCCCA
000065DD 000000                             9863+         dc al3(0)                                                      02-DCCCA
000065E0 0000000000006584                   9864+         dc ad(@LNAME1950)                                              02-DCCCA
000065E8                                    9865+         ds 0d                                                          02-DCCCA
000065E8 00000000000065B0                   9866+         dc ad($eye0183)                                                02-DCCCA
000065F0 0000000000000000                   9867+         dc ad(0)                                                       02-DCCCA
000065F8                                    9868+         ds    0d                                                       01-DCCPR
000065F8                                    9869+rd_kafka_msgset_writer_compress_lz4 ds 0d                               01-DCCPR
000065F8                                    9870+@REGION_1950_1 ds 0h                                                    01-DCCPR
000065F8 EBEC D008 0024          00000008   9871+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000065FE E3E0 D088 0004          00000088   9872+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006604 E3C0 D090 0004          00000090   9873+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000660A B904 002E                          9874+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000660E E3B0 C018 0004          00000018   9875+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006614 A7EB 00E0               000000E0   9876+         aghi  14,224              increase by frame size               01-DCCPR
00006618 E3E0 C020 0021          00000020   9877+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000661E 4720 B020               00000020   9878+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006622                                    9879+@PER_1950 ds   0h                                                       01-DCCPR
00006622 EBDE 2080 0024          00000080   9880+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006628 E3C0 2090 0024          00000090   9881+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page  199 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000662E B904 00D2                          9882+         lgr   13,2                set real frame pointer               01-DCCPR
00006632 B904 00CF                          9883+         lgr   12,15               set base reg                         01-DCCPR
                        000065F8            9884+         using @REGION_1950_1,12                                        01-DCCPR
00006636 B904 0021                          9885          LGR   2,1         ; ptr to parm area
                                            9886 * ******* End of Prologue
                                            9887 * *
0000663A E3F0 2000 0004          00000000   9888          LG    15,0(0,2)   ; msetw
                                            9889 * ***           rd_kafka_resp_err_t err;
                                            9890 * ***           int comp_level =
                                            9891 * ***                   msetw->msetw_rktp->rktp_rkt->rkt_conf.compress\
                                            9892 * ion_level;
00006640 E310 F090 0004          00000090   9893          LG    1,144(0,15) ; offset of msetw_rktp in rd_kafka_msgset_wr*
                                                                iter_s
00006646 E310 1060 0004          00000060   9894          LG    1,96(0,1)   ; offset of rktp_rkt in rd_kafka_toppar_s
0000664C 5810 13D4               000003D4   9895          L     1,980(0,1)  ; offset of compression_level in rd_kafka_to*
                                                                pic_conf_s
                                            9896 * ***           err = rd_kafka_lz4_compress(msetw->msetw_rkb,
                                            9897 * ***
                                            9898 * ***                                       msetw->msetw_MsgVersion >=\
                                            9899 *  1 ? 1 : 0,
                                            9900 * ***                                       comp_level,
                                            9901 * ***                                       slice, &ciov->iov_base, &c\
                                            9902 * iov->iov_len);
00006650 E55C F00C 0001          0000000C   9903          CHSI  12(15),1
00006656 4740 C080               00006678   9904          BL    @L793
0000665A A738 0001               00000001   9905          LHI   3,1         ; 1
0000665E 47F0 C084               0000667C   9906          B     @L794
00006668                                    9907          DS    0D
00006668 000000E0                           9908 @FRAMESIZE_1950 DC F'224'
0000666C 00000000
00006670 0000000000000000                   9909 @lit_1950_369 DC AD(rd_kafka_lz4_compress)
00006678                                    9910 @L793    DS    0H
00006678 A738 0000               00000000   9911          LHI   3,0         ; 0
0000667C                                    9912 @L794    DS    0H
0000667C E3F0 F088 0004          00000088   9913          LG    15,136(0,15)
00006682 E3F0 D0B0 0024          000000B0   9914          STG   15,176(0,13)
00006688 B914 00F3                          9915          LGFR  15,3
0000668C E3F0 D0B8 0024          000000B8   9916          STG   15,184(0,13)
00006692 B914 00F1                          9917          LGFR  15,1
00006696 E3F0 D0C0 0024          000000C0   9918          STG   15,192(0,13)
0000669C E3F0 2008 0004          00000008   9919          LG    15,8(0,2)   ; slice
000066A2 E3F0 D0C8 0024          000000C8   9920          STG   15,200(0,13)
000066A8 E3F0 2010 0004          00000010   9921          LG    15,16(0,2)  ; ciov
000066AE E3F0 D0D0 0024          000000D0   9922          STG   15,208(0,13)
000066B4 E3F0 2010 0004          00000010   9923          LG    15,16(0,2)  ; ciov
000066BA 41F0 F008               00000008   9924          LA    15,8(0,15)
000066BE E3F0 D0D8 0024          000000D8   9925          STG   15,216(0,13)
000066C4 4110 D0B0               000000B0   9926          LA    1,176(0,13)
000066C8 E3F0 C078 0004          00006670   9927          LG    15,@lit_1950_369 ; rd_kafka_lz4_compress
000066CE                                    9928 @@gen_label502 DS    0H
000066CE 05EF                               9929          BALR  14,15
000066D0                                    9930 @@gen_label503 DS    0H
                                                                                                                           Page  200 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9931 * ***           return (err ? -1 : 0);
000066D0 12FF                               9932          LTR   15,15
000066D2 4780 C0E6               000066DE   9933          BZ    @L795
000066D6 A7F8 FFFF               0000FFFF   9934          LHI   15,-1       ; -1
000066DA 47F0 C0EA               000066E2   9935          B     @L796
000066DE                                    9936 @L795    DS    0H
000066DE A7F8 0000               00000000   9937          LHI   15,0        ; 0
000066E2                                    9938 @L796    DS    0H
000066E2 B914 00FF                          9939          LGFR  15,15
                                            9940 * ***   }
                                            9941 * * **** Start of Epilogue
                                            9942          DCCEPIL
000066E6                                    9943+         ds 0h                                                          01-DCCEP
                                            9944+* Epilog
000066E6 D707 D088 D088 00000088 00000088   9945+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000066EC E3D0 D080 0004          00000080   9946+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000066F2 E3C0 D090 0004          00000090   9947+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000066F8 E3B0 C018 0004          00000018   9948+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000066FE E3C0 B010 0021          00000010   9949+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006704 E3E0 D008 0004          00000008   9950+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000670A EB1C D020 0004          00000020   9951+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006710 078E                               9952+         bcr 8,14                if same dsab, just return              01-DCCEP
00006712 E3F0 D010 0024          00000010   9953+         stg 15,16(0,13)         save return code                       01-DCCEP
00006718 E300 D018 0024          00000018   9954+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000671E E3F0 D090 0004          00000090   9955+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006724 E3F0 F018 0004          00000018   9956+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000672A 47F0 F040               00000040   9957+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9958+* End of Epilog
                                            9959 * * **** End of Epilogue
                                            9960          DROP  12
                                            9961 *
                                            9962 *   DSECT for automatic variables in "rd_kafka_msgset_writer_compress_
                                            9963 *           lz4"
                                            9964 *      (FUNCTION #1950)
                                            9965 *
00000000                00000000 000000AC   9966 @AUTO#rd_kafka_msgset_writer_compress_lz4 DSECT
00000000                                    9967          DS    XL168
000000A8                                    9968 rd_kafka_msgset_writer_compress_lz4#comp_level#0 DS 1F ; comp_level
000000AC                000000AC 000000A8   9969          ORG   @AUTO#rd_kafka_msgset_writer_compress_lz4+168
000000A8                                    9970 rd_kafka_msgset_writer_compress_lz4#err#0 DS 1F ; err
                                            9971 *
0000672E                00000000 00007AB2   9972 @CODE    CSECT
                                            9973 *
                                            9974 *
                                            9975 *
                                            9976 * ....... start of rd_kafka_msgset_writer_compress
0000672E                                    9977 @LNAME1951 DS  0H
0000672E 0000001F                           9978          DC    X'0000001F'
00006732 99846D9281869281                   9979          DC    C'rd_kafka_msgset_writer_compress'
00006751 00                                 9980          DC    X'00'
                                            9981 rd_kafka_msgset_writer_compress DCCPRLG CINDEX=1951,BASER=12,FRAME=432,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1951
                                                                                                                           Page  201 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9982          macro
                                            9983          dccextrn &m
                                            9984          gblc    &$dccext(1000)
                                            9985          gbla    &$dccexti
                                            9986          lcla    &i
                                            9987 &$dccext(&$dccexti+1) setc    '&m'
                                            9988 &i       seta    1
                                            9989 .loop    aif    (&i gt &$dccexti).around
                                            9990          aif    ('&$dccext(&i)' eq '&m').getout
                                            9991 &i       seta    &i+1
                                            9992          ago     .loop
                                            9993 .around  anop
                                            9994 &$dccexti seta &$dccexti+1
                                            9995          extrn  &m
                                            9996 .getout  anop
                                            9997          mend
00006758                                    9998+$eye0186    ds    0d                                                    02-DCCCA
00006758 C4C3C3                             9999+         dc cl3'DCC'                                                    02-DCCCA
0000675B 01                                10000+         dc xl1'01' format one                                          02-DCCCA
0000675C 00000000                          10001+         dc a(0)                                                        02-DCCCA
00006760 00000000000067CA                  10002+         dc ad(@PER_1951)                                               02-DCCCA
00006768 00000000000001B0                  10003+         dc ad(432)                                                     02-DCCCA
00006770 0000000000000000                  10004+         dc ad(0)                                                       02-DCCCA
00006778 0000000000001000                  10005+         dc ad(4096)                                                    02-DCCCA
00006780 20                                10006+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006781 03                                10007+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006782 03                                10008+         dc al1(3)                                                      02-DCCCA
00006783 08                                10009+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006784 00                                10010+         dc bl.8'00000000'                                              02-DCCCA
00006785 000000                            10011+         dc al3(0)                                                      02-DCCCA
00006788 000000000000672E                  10012+         dc ad(@LNAME1951)                                              02-DCCCA
00006790                                   10013+         ds 0d                                                          02-DCCCA
00006790 0000000000006758                  10014+         dc ad($eye0186)                                                02-DCCCA
00006798 0000000000000000                  10015+         dc ad(0)                                                       02-DCCCA
000067A0                                   10016+         ds    0d                                                       01-DCCPR
000067A0                                   10017+rd_kafka_msgset_writer_compress ds 0d                                   01-DCCPR
000067A0                                   10018+@REGION_1951_1 ds 0h                                                    01-DCCPR
000067A0 EBEC D008 0024          00000008  10019+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000067A6 E3E0 D088 0004          00000088  10020+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000067AC E3C0 D090 0004          00000090  10021+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000067B2 B904 002E                         10022+         lgr   2,14                copy addr of our savearea            01-DCCPR
000067B6 E3B0 C018 0004          00000018  10023+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000067BC A7EB 01B0               000001B0  10024+         aghi  14,432              increase by frame size               01-DCCPR
000067C0 E3E0 C020 0021          00000020  10025+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000067C6 4720 B020               00000020  10026+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000067CA                                   10027+@PER_1951 ds   0h                                                       01-DCCPR
000067CA EBDE 2080 0024          00000080  10028+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000067D0 E3C0 2090 0024          00000090  10029+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000067D6 B904 00D2                         10030+         lgr   13,2                set real frame pointer               01-DCCPR
000067DA B904 00CF                         10031+         lgr   12,15               set base reg                         01-DCCPR
                        000067A0           10032+         using @REGION_1951_1,12                                        01-DCCPR
000067DE B904 0061                         10033          LGR   6,1         ; ptr to parm area
                                                                                                                           Page  202 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10034 * ******* End of Prologue
                                           10035 * *
                                           10036 * ***           rd_buf_t *rbuf = &msetw->msetw_rkbuf->rkbuf_buf;
000067E2 E330 6000 0004          00000000  10037          LG    3,0(0,6)    ; msetw
000067E8 E3F0 3000 0004          00000000  10038          LG    15,0(0,3)   ; msetw
000067EE 4140 F028               00000028  10039          LA    4,40(0,15)
                                           10040 * ***           rd_slice_t slice;
                                           10041 * ***           size_t len = *outlenp;
000067F2 E3F0 6008 0004          00000008  10042          LG    15,8(0,6)   ; outlenp
000067F8 E350 F000 0004          00000000  10043          LG    5,0(0,15)   ; outlenp
                                           10044 * ***           struct iovec ciov = {};
                                           10045 * setting 16 bytes to 0x00
000067FE D70F D0D0 D0D0 000000D0 000000D0  10046          XC    208(16,13),208(13)
                                           10047 * ***           int r = -1;
                                           10048 * ***           size_t outlen;
                                           10049 * ***
                                           10050 * ***           ((rd_buf_len(rbuf) >= msetw->msetw_firstmsg.of + len) \
                                           10051 * ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkaf\
                                           10052 * ka_msgset_writer.c", 1172, "rd_buf_len(rbuf) >= msetw->msetw_firstms\
                                           10053 * g.of + len"));
00006804 E340 D188 0024          00000188  10054          STG   4,392(0,13)
0000680A 4110 D188               00000188  10055          LA    1,392(0,13)
0000680E E3F0 C118 0004          000068B8  10056          LG    15,@lit_1951_374 ; rd_buf_len
00006814                                   10057 @@gen_label505 DS    0H
00006814 05EF                              10058          BALR  14,15
00006816                                   10059 @@gen_label506 DS    0H
00006816 B904 0015                         10060          LGR   1,5
0000681A E310 3068 000A          00000068  10061          ALG   1,104(0,3)
00006820 B921 00F1                         10062          CLGR  15,1
00006824 47B0 C0C4               00006864  10063          BNL   @L798
00006828                                   10064 @L797    DS    0H
00006828 E3F0 C130 0004          000068D0  10065          LG    15,@lit_1951_375
0000682E 41F0 F29A               0000029A  10066          LA    15,666(0,15)
00006832 E3F0 D188 0024          00000188  10067          STG   15,392(0,13)
00006838 E3F0 C128 0004          000068C8  10068          LG    15,@lit_1951_376
0000683E 4110 F22C               0000022C  10069          LA    1,556(0,15)
00006842 E310 D190 0024          00000190  10070          STG   1,400(0,13)
00006848 E548 D198 0494          00000198  10071          MVGHI 408(13),1172
0000684E 41F0 F532               00000532  10072          LA    15,1330(0,15)
00006852 E3F0 D1A0 0024          000001A0  10073          STG   15,416(0,13)
00006858 4110 D188               00000188  10074          LA    1,392(0,13)
0000685C E3F0 C120 0004          000068C0  10075          LG    15,@lit_1951_377 ; __assert
00006862                                   10076 @@gen_label508 DS    0H
00006862 05EF                              10077          BALR  14,15
00006864                                   10078 @@gen_label509 DS    0H
00006864                                   10079 @L798    DS    0H
                                           10080 * ***
                                           10081 * ***
                                           10082 * ***           r = rd_slice_init(&slice, rbuf, msetw->msetw_firstmsg.\
                                           10083 * of, len);
00006864 41F0 D0A8               000000A8  10084          LA    15,168(0,13)
00006868 E3F0 D188 0024          00000188  10085          STG   15,392(0,13)
                                                                                                                           Page  203 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000686E E340 D190 0024          00000190  10086          STG   4,400(0,13)
00006874 E3F0 3068 0004          00000068  10087          LG    15,104(0,3)
0000687A E3F0 D198 0024          00000198  10088          STG   15,408(0,13)
00006880 E350 D1A0 0024          000001A0  10089          STG   5,416(0,13)
00006886 4110 D188               00000188  10090          LA    1,392(0,13)
0000688A E3F0 C138 0004          000068D8  10091          LG    15,@lit_1951_378 ; rd_slice_init
00006890                                   10092 @@gen_label510 DS    0H
00006890 05EF                              10093          BALR  14,15
00006892                                   10094 @@gen_label511 DS    0H
00006892 122F                              10095          LTR   2,15        ; r
                                           10096 * ***           ((r == 0 || !*"invalid firstmsg position") ? (void)0 :\
                                           10097 *  __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_w\
                                           10098 * riter.c", 1176, "r == 0 || !*\"invalid firstmsg position\""));
00006894 4780 C25C               000069FC  10099          BE    @L802
00006898 E3F0 C128 0004          000068C8  10100          LG    15,@lit_1951_376
0000689E 4110 F566               00000566  10101          LA    1,1382(0,15)
000068A2 9500 1000      00000000 00000000  10102          CLI   0(1),0
000068A6 4770 C178               00006918  10103          BNE   @L799
000068AA                                   10104 @L800    DS    0H
000068AA 47F0 C25C               000069FC  10105          B     @L802
000068B0                                   10106          DS    0D
000068B0 000001B0                          10107 @FRAMESIZE_1951 DC F'432'
000068B4 00000000
000068B8 0000000000000E58                  10108 @lit_1951_374 DC AD(rd_buf_len)
000068C0 0000000000000000                  10109 @lit_1951_377 DC AD(__assert)
000068C8 0000000000007DEC                  10110 @lit_1951_376 DC AD(@strings@)
000068D0 0000000000007AB8                  10111 @lit_1951_375 DC AD(@DATA)
000068D8 0000000000000000                  10112 @lit_1951_378 DC AD(rd_slice_init)
000068E0 0000000000006208                  10113 @lit_1951_382 DC AD(rd_kafka_msgset_writer_compress_snappy)
000068E8 00000000000065F8                  10114 @lit_1951_383 DC AD(rd_kafka_msgset_writer_compress_lz4)
000068F0 0000000000000000                  10115 @lit_1951_386 DC AD(rd_kafka_crash)
000068F8 0000000000000638                  10116 @lit_1951_388 DC AD(rd_free)
00006900 0000000000000000                  10117 @lit_1951_390 DC AD(rd_buf_write_seek)
00006908 0000000000000000                  10118 @lit_1951_395 DC AD(rd_buf_push0)
00006910 00000000000057B8                  10119 @lit_1951_397 DC AD(rd_kafka_msgset_writer_write_msg)
00006918                                   10120 @L799    DS    0H
00006918 E310 C130 0004          000068D0  10121          LG    1,@lit_1951_375
0000691E 4110 129A               0000029A  10122          LA    1,666(0,1)
00006922 E310 D188 0024          00000188  10123          STG   1,392(0,13)
00006928 4110 F22C               0000022C  10124          LA    1,556(0,15)
0000692C E310 D190 0024          00000190  10125          STG   1,400(0,13)
00006932 E548 D198 0498          00000198  10126          MVGHI 408(13),1176
00006938 41F0 F580               00000580  10127          LA    15,1408(0,15)
0000693C E3F0 D1A0 0024          000001A0  10128          STG   15,416(0,13)
00006942 4110 D188               00000188  10129          LA    1,392(0,13)
00006946 E3F0 C120 0004          000068C0  10130          LG    15,@lit_1951_377 ; __assert
0000694C                                   10131 @@gen_label514 DS    0H
0000694C 05EF                              10132          BALR  14,15
0000694E                                   10133 @@gen_label515 DS    0H
0000694E                                   10134 @L801    DS    0H
                                           10135 * ***
                                           10136 * ***           switch (msetw->msetw_compression)
                                                                                                                           Page  204 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000694E 47F0 C25C               000069FC  10137          B     @L802
                                           10138 * ***           {
                                           10139 * ***
                                           10140 * ***   # 1187 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                           10141 * ***           case RD_KAFKA_COMPRESSION_SNAPPY:
00006952                                   10142 @L804    DS    0H
                                           10143 * ***                   r = rd_kafka_msgset_writer_compress_snappy(mse\
                                           10144 * tw, &slice,
                                           10145 * ***                                                              &ci\
                                           10146 * ov);
00006952 E330 D188 0024          00000188  10147          STG   3,392(0,13)
00006958 41F0 D0A8               000000A8  10148          LA    15,168(0,13)
0000695C E3F0 D190 0024          00000190  10149          STG   15,400(0,13)
00006962 41F0 D0D0               000000D0  10150          LA    15,208(0,13)
00006966 E3F0 D198 0024          00000198  10151          STG   15,408(0,13)
0000696C 4110 D188               00000188  10152          LA    1,392(0,13)
00006970 E3F0 C140 0004          000068E0  10153          LG    15,@lit_1951_382 ; rd_kafka_msgset_writer_compress_snapp*
                                                                y
00006976                                   10154 @@gen_label516 DS    0H
00006976 05EF                              10155          BALR  14,15
00006978                                   10156 @@gen_label517 DS    0H
00006978 182F                              10157          LR    2,15        ; r
                                           10158 * ***                   break;
0000697A 47F0 C27C               00006A1C  10159          B     @L803
                                           10160 * ***
                                           10161 * ***
                                           10162 * ***           case RD_KAFKA_COMPRESSION_LZ4:
0000697E                                   10163 @L805    DS    0H
                                           10164 * ***                   r = rd_kafka_msgset_writer_compress_lz4(msetw,\
                                           10165 *  &slice, &ciov);
0000697E E330 D188 0024          00000188  10166          STG   3,392(0,13)
00006984 41F0 D0A8               000000A8  10167          LA    15,168(0,13)
00006988 E3F0 D190 0024          00000190  10168          STG   15,400(0,13)
0000698E 41F0 D0D0               000000D0  10169          LA    15,208(0,13)
00006992 E3F0 D198 0024          00000198  10170          STG   15,408(0,13)
00006998 4110 D188               00000188  10171          LA    1,392(0,13)
0000699C E3F0 C148 0004          000068E8  10172          LG    15,@lit_1951_383 ; rd_kafka_msgset_writer_compress_lz4
000069A2                                   10173 @@gen_label518 DS    0H
000069A2 05EF                              10174          BALR  14,15
000069A4                                   10175 @@gen_label519 DS    0H
000069A4 182F                              10176          LR    2,15        ; r
                                           10177 * ***                   break;
000069A6 47F0 C27C               00006A1C  10178          B     @L803
                                           10179 * ***
                                           10180 * ***
                                           10181 * ***   # 1203 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                           10182 * ***           default:
                                           10183 * ***                   do { if (((!(!*"notreached: unsupported compre\
                                           10184 * ssion.codec")))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdka\
                                           10185 * fka_msgset_writer.c",1204, __FUNCTION__, (((void *)0)), "assert: " "\
                                           10186 * !*\"notreached: unsupported compression.codec\""); } while (0);
000069AA                                   10187 @L807    DS    0H
                                                                                                                           Page  205 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000069AA E3F0 C128 0004          000068C8  10188          LG    15,@lit_1951_376
000069B0 4110 F5A8               000005A8  10189          LA    1,1448(0,15)
000069B4 9500 1000      00000000 00000000  10190          CLI   0(1),0
000069B8 4780 C27C               00006A1C  10191          BE    @L803
000069BC 4110 F22C               0000022C  10192          LA    1,556(0,15)
000069C0 E310 D188 0024          00000188  10193          STG   1,392(0,13)
000069C6 E548 D190 04B4          00000190  10194          MVGHI 400(13),1204
000069CC E310 C130 0004          000068D0  10195          LG    1,@lit_1951_375
000069D2 4110 129A               0000029A  10196          LA    1,666(0,1)
000069D6 E310 D198 0024          00000198  10197          STG   1,408(0,13)
000069DC D707 D1A0 D1A0 000001A0 000001A0  10198          XC    416(8,13),416(13)
000069E2 41F0 F5D2               000005D2  10199          LA    15,1490(0,15)
000069E6 E3F0 D1A8 0024          000001A8  10200          STG   15,424(0,13)
000069EC 4110 D188               00000188  10201          LA    1,392(0,13)
000069F0 E3F0 C150 0004          000068F0  10202          LG    15,@lit_1951_386 ; rd_kafka_crash
000069F6                                   10203 @@gen_label521 DS    0H
000069F6 05EF                              10204          BALR  14,15
000069F8                                   10205 @@gen_label522 DS    0H
000069F8                                   10206 @L810    DS    0H
                                           10207 * ***
                                           10208 * ***                   break;
000069F8 47F0 C27C               00006A1C  10209          B     @L803
                                           10210 * ***           }
000069FC                                   10211 @L802    DS    0H
000069FC 58F0 3014               00000014  10212          L     15,20(0,3)  ; offset of msetw_compression in rd_kafka_ms*
                                                                gset_writer_s
00006A00 A7FE 0002               00000002  10213          CHI   15,2
00006A04 4740 C20A               000069AA  10214          BL    @L807
00006A08 A7FE 0002               00000002  10215          CHI   15,2
00006A0C 4780 C1B2               00006952  10216          BE    @L804
00006A10 A7FE 0003               00000003  10217          CHI   15,3
00006A14 4780 C1DE               0000697E  10218          BE    @L805
00006A18 47F0 C20A               000069AA  10219          B     @L807
00006A1C                                   10220 @L803    DS    0H
                                           10221 * ***
                                           10222 * ***           if (r == -1)
00006A1C A72E FFFF               0000FFFF  10223          CHI   2,-1
00006A20 4770 C28C               00006A2C  10224          BNE   @L811
                                           10225 * ***                   return -1;
00006A24 A7F9 FFFF               0000FFFF  10226          LGHI  15,-1       ; -1
00006A28 47F0 C41C               00006BBC  10227          B     @ret_lab_1951
00006A2C                                   10228 @L811    DS    0H
                                           10229 * ***
                                           10230 * ***
                                           10231 * ***           if (((ciov.iov_len > len))) {
00006A2C E3F0 D0D8 0004          000000D8  10232          LG    15,216(0,13) ; offset of iov_len in iovec
00006A32 B921 00F5                         10233          CLGR  15,5
00006A36 47D0 C2BA               00006A5A  10234          BNH   @L812
                                           10235 * ***
                                           10236 * ***
                                           10237 * ***                   rd_free(ciov.iov_base);
00006A3A E3F0 D0D0 0004          000000D0  10238          LG    15,208(0,13)
                                                                                                                           Page  206 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006A40 E3F0 D188 0024          00000188  10239          STG   15,392(0,13)
00006A46 4110 D188               00000188  10240          LA    1,392(0,13)
00006A4A E3F0 C158 0004          000068F8  10241          LG    15,@lit_1951_388 ; rd_free
00006A50                                   10242 @@gen_label525 DS    0H
00006A50 05EF                              10243          BALR  14,15
00006A52                                   10244 @@gen_label526 DS    0H
                                           10245 * ***                   return -1;
00006A52 A7F9 FFFF               0000FFFF  10246          LGHI  15,-1       ; -1
00006A56 47F0 C41C               00006BBC  10247          B     @ret_lab_1951
                                           10248 * ***           }
00006A5A                                   10249 @L812    DS    0H
                                           10250 * ***
                                           10251 * ***
                                           10252 * ***           msetw->msetw_Attributes |= msetw->msetw_compression;
00006A5A 58F0 304C               0000004C  10253          L     15,76(0,3)
00006A5E 56F0 3014               00000014  10254          O     15,20(0,3)
00006A62 50F0 304C               0000004C  10255          ST    15,76(0,3)
                                           10256 * ***
                                           10257 * ***
                                           10258 * ***
                                           10259 * ***
                                           10260 * ***           rd_buf_write_seek(rbuf, msetw->msetw_firstmsg.of);
00006A66 E340 D188 0024          00000188  10261          STG   4,392(0,13)
00006A6C E3F0 3068 0004          00000068  10262          LG    15,104(0,3)
00006A72 E3F0 D190 0024          00000190  10263          STG   15,400(0,13)
00006A78 4110 D188               00000188  10264          LA    1,392(0,13)
00006A7C E3F0 C160 0004          00006900  10265          LG    15,@lit_1951_390 ; rd_buf_write_seek
00006A82                                   10266 @@gen_label527 DS    0H
00006A82 05EF                              10267          BALR  14,15
00006A84                                   10268 @@gen_label528 DS    0H
                                           10269 * ***
                                           10270 * ***           do { if (((!(ciov.iov_len < 0x7fffffff)))) rd_kafka_cr\
                                           10271 * ash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_writer.c",1228, _\
                                           10272 * _FUNCTION__, (msetw->msetw_rkb->rkb_rk), "assert: " "ciov.iov_len < \
                                           10273 * INT32_MAX"); } while (0);
00006A84                                   10274 @L813    DS    0H
00006A84 E3F0 D0D8 0004          000000D8  10275          LG    15,216(0,13)
00006A8A C2FE 7FFF FFFF                    10276          CLGFI 15,X'7FFFFFFF'
00006A90 4740 C342               00006AE2  10277          BL    @L816
00006A94 E3F0 C128 0004          000068C8  10278          LG    15,@lit_1951_376
00006A9A 4110 F22C               0000022C  10279          LA    1,556(0,15)
00006A9E E310 D188 0024          00000188  10280          STG   1,392(0,13)
00006AA4 E548 D190 04CC          00000190  10281          MVGHI 400(13),1228
00006AAA E310 C130 0004          000068D0  10282          LG    1,@lit_1951_375
00006AB0 4110 129A               0000029A  10283          LA    1,666(0,1)
00006AB4 E310 D198 0024          00000198  10284          STG   1,408(0,13)
00006ABA E310 3088 0004          00000088  10285          LG    1,136(0,3)  ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00006AC0 E310 1FD0 0004          00000FD0  10286          LG    1,4048(0,1)
00006AC6 E310 D1A0 0024          000001A0  10287          STG   1,416(0,13)
00006ACC 41F0 F608               00000608  10288          LA    15,1544(0,15)
00006AD0 E3F0 D1A8 0024          000001A8  10289          STG   15,424(0,13)
                                                                                                                           Page  207 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006AD6 4110 D188               00000188  10290          LA    1,392(0,13)
00006ADA E3F0 C150 0004          000068F0  10291          LG    15,@lit_1951_386 ; rd_kafka_crash
00006AE0                                   10292 @@gen_label530 DS    0H
00006AE0 05EF                              10293          BALR  14,15
00006AE2                                   10294 @@gen_label531 DS    0H
00006AE2                                   10295 @L816    DS    0H
                                           10296 * ***
                                           10297 * ***           if (msetw->msetw_MsgVersion == 2) {
00006AE2 E55C 300C 0002          0000000C  10298          CHSI  12(3),2
00006AE8 4770 C392               00006B32  10299          BNE   @L817
                                           10300 * ***
                                           10301 * ***
                                           10302 * ***
                                           10303 * ***
                                           10304 * ***                   rd_buf_push0(rbuf,ciov.iov_base,ciov.iov_len,r\
                                           10305 * d_free,0 );
00006AEC E340 D188 0024          00000188  10306          STG   4,392(0,13)
00006AF2 E3F0 D0D0 0004          000000D0  10307          LG    15,208(0,13)
00006AF8 E3F0 D190 0024          00000190  10308          STG   15,400(0,13)
00006AFE E3F0 D0D8 0004          000000D8  10309          LG    15,216(0,13)
00006B04 E3F0 D198 0024          00000198  10310          STG   15,408(0,13)
00006B0A E3F0 C158 0004          000068F8  10311          LG    15,@lit_1951_388 ; rd_free
00006B10 E3F0 D1A0 0024          000001A0  10312          STG   15,416(0,13)
00006B16 D707 D1A8 D1A8 000001A8 000001A8  10313          XC    424(8,13),424(13)
00006B1C 4110 D188               00000188  10314          LA    1,392(0,13)
00006B20 E3F0 C168 0004          00006908  10315          LG    15,@lit_1951_395 ; rd_buf_push0
00006B26                                   10316 @@gen_label533 DS    0H
00006B26 05EF                              10317          BALR  14,15
00006B28                                   10318 @@gen_label534 DS    0H
                                           10319 * ***                   outlen = ciov.iov_len;
00006B28 E3F0 D0D8 0004          000000D8  10320          LG    15,216(0,13) ; offset of iov_len in iovec
                                           10321 * ***
                                           10322 * ***           } else {
00006B2E 47F0 C40C               00006BAC  10323          B     @L818
00006B32                                   10324 @L817    DS    0H
                                           10325 * ***
                                           10326 * ***
                                           10327 * ***                   rd_kafka_msg_t rkm = {
                                           10328 * ***                           . rkm_rkmessage.len       = ciov.iov_l\
                                           10329 * en,
00006B32 E3F0 D0D8 0004          000000D8  10330          LG    15,216(0,13) ; offset of iov_len in iovec
00006B38 E3F0 D100 0024          00000100  10331          STG   15,256(0,13)
                                           10332 * ***                           . rkm_rkmessage.payload   = ciov.iov_b\
                                           10333 * ase,
00006B3E E3F0 D0D0 0004          000000D0  10334          LG    15,208(0,13)
00006B44 E3F0 D0F8 0024          000000F8  10335          STG   15,248(0,13)
                                           10336 * ***                           .rkm_timestamp = msetw->msetw_firstmsg\
                                           10337 * .timestamp
                                           10338 * ***                   };
00006B4A E3F0 3070 0004          00000070  10339          LG    15,112(0,3) ; offset of timestamp in 0000155
00006B50 E3F0 D140 0024          00000140  10340          STG   15,320(0,13)
                                           10341 * setting 24 bytes to 0x00
                                                                                                                           Page  208 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006B56 D717 D0E0 D0E0 000000E0 000000E0  10342          XC    224(24,13),224(13)
                                           10343 * setting 56 bytes to 0x00
00006B5C D737 D108 D108 00000108 00000108  10344          XC    264(56,13),264(13)
                                           10345 * setting 64 bytes to 0x00
00006B62 D73F D148 D148 00000148 00000148  10346          XC    328(64,13),328(13)
                                           10347 * ***                   outlen = rd_kafka_msgset_writer_write_msg(
                                           10348 * ***                           msetw, &rkm, 0,
                                           10349 * ***                           msetw->msetw_compression,
                                           10350 * ***                           rd_free);
00006B68 E330 D188 0024          00000188  10351          STG   3,392(0,13)
00006B6E 41F0 D0E0               000000E0  10352          LA    15,224(0,13)
00006B72 E3F0 D190 0024          00000190  10353          STG   15,400(0,13)
00006B78 D707 D198 D198 00000198 00000198  10354          XC    408(8,13),408(13)
00006B7E 58F0 3014               00000014  10355          L     15,20(0,3)  ; offset of msetw_compression in rd_kafka_ms*
                                                                gset_writer_s
00006B82 EBFF 0038 000D          00000038  10356          SLLG  15,15,56(0)
00006B88 EBFF 0038 000A          00000038  10357          SRAG  15,15,56(0)
00006B8E E3F0 D1A0 0024          000001A0  10358          STG   15,416(0,13)
00006B94 E3F0 C158 0004          000068F8  10359          LG    15,@lit_1951_388 ; rd_free
00006B9A E3F0 D1A8 0024          000001A8  10360          STG   15,424(0,13)
00006BA0 4110 D188               00000188  10361          LA    1,392(0,13)
00006BA4 E3F0 C170 0004          00006910  10362          LG    15,@lit_1951_397 ; rd_kafka_msgset_writer_write_msg
00006BAA                                   10363 @@gen_label535 DS    0H
00006BAA 05EF                              10364          BALR  14,15
00006BAC                                   10365 @@gen_label536 DS    0H
                                           10366 * ***           }
00006BAC                                   10367 @L818    DS    0H
                                           10368 * ***
                                           10369 * ***           *outlenp = outlen;
00006BAC E310 6008 0004          00000008  10370          LG    1,8(0,6)    ; outlenp
00006BB2 E3F0 1000 0024          00000000  10371          STG   15,0(0,1)   ; outlenp
                                           10372 * ***
                                           10373 * ***           return 0;
00006BB8 A7F9 0000               00000000  10374          LGHI  15,0        ; 0
                                           10375 * ***   }
00006BBC                                   10376 @ret_lab_1951 DS 0H
                                           10377 * * **** Start of Epilogue
                                           10378          DCCEPIL
00006BBC                                   10379+         ds 0h                                                          01-DCCEP
                                           10380+* Epilog
00006BBC D707 D088 D088 00000088 00000088  10381+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006BC2 E3D0 D080 0004          00000080  10382+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006BC8 E3C0 D090 0004          00000090  10383+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006BCE E3B0 C018 0004          00000018  10384+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006BD4 E3C0 B010 0021          00000010  10385+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006BDA E3E0 D008 0004          00000008  10386+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006BE0 EB1C D020 0004          00000020  10387+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006BE6 078E                              10388+         bcr 8,14                if same dsab, just return              01-DCCEP
00006BE8 E3F0 D010 0024          00000010  10389+         stg 15,16(0,13)         save return code                       01-DCCEP
00006BEE E300 D018 0024          00000018  10390+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006BF4 E3F0 D090 0004          00000090  10391+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006BFA E3F0 F018 0004          00000018  10392+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page  209 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006C00 47F0 F040               00000040  10393+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10394+* End of Epilog
                                           10395 * * **** End of Epilogue
                                           10396          DROP  12
                                           10397 *
                                           10398 *   DSECT for automatic variables in "rd_kafka_msgset_writer_compress"
                                           10399 *      (FUNCTION #1951)
                                           10400 *
00000000                00000000 00000188  10401 @AUTO#rd_kafka_msgset_writer_compress DSECT
00000000                                   10402          DS    XL168
000000A8                                   10403 rd_kafka_msgset_writer_compress#outlen#0 DS 8XL1 ; outlen
000000B0                000000B0 000000A8  10404          ORG   @AUTO#rd_kafka_msgset_writer_compress+168
000000A8                                   10405 rd_kafka_msgset_writer_compress#r#0 DS 1F ; r
000000AC                000000AC 000000A8  10406          ORG   @AUTO#rd_kafka_msgset_writer_compress+168
000000A8                                   10407 rd_kafka_msgset_writer_compress#len#0 DS 8XL1 ; len
000000B0                000000B0 000000A8  10408          ORG   @AUTO#rd_kafka_msgset_writer_compress+168
000000A8                                   10409 rd_kafka_msgset_writer_compress#slice#0 DS 40XL1 ; slice
000000D0                000000D0 000000D0  10410          ORG   @AUTO#rd_kafka_msgset_writer_compress+208
000000D0                                   10411 rd_kafka_msgset_writer_compress#ciov#0 DS 16XL1 ; ciov
000000E0                000000E0 000000E0  10412          ORG   @AUTO#rd_kafka_msgset_writer_compress+224
000000E0                                   10413 rd_kafka_msgset_writer_compress#rkm#6 DS 168XL1 ; rkm
                                           10414 *
00006C04                00000000 00007AB2  10415 @CODE    CSECT
                                           10416 *
                                           10417 *
                                           10418 *
                                           10419 * ....... start of rd_kafka_msgset_writer_calc_crc_v2
00006C04                                   10420 @LNAME1952 DS  0H
00006C04 00000022                          10421          DC    X'00000022'
00006C08 99846D9281869281                  10422          DC    C'rd_kafka_msgset_writer_calc_crc_'
00006C28 A5F2                              10423          DC    C'v2'
00006C2A 00                                10424          DC    X'00'
                                           10425 rd_kafka_msgset_writer_calc_crc_v2 DCCPRLG CINDEX=1952,BASER=12,FRAME=2*
                                                                40,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1952
                                           10426          macro
                                           10427          dccextrn &m
                                           10428          gblc    &$dccext(1000)
                                           10429          gbla    &$dccexti
                                           10430          lcla    &i
                                           10431 &$dccext(&$dccexti+1) setc    '&m'
                                           10432 &i       seta    1
                                           10433 .loop    aif    (&i gt &$dccexti).around
                                           10434          aif    ('&$dccext(&i)' eq '&m').getout
                                           10435 &i       seta    &i+1
                                           10436          ago     .loop
                                           10437 .around  anop
                                           10438 &$dccexti seta &$dccexti+1
                                           10439          extrn  &m
                                           10440 .getout  anop
                                           10441          mend
00006C30                                   10442+$eye0189    ds    0d                                                    02-DCCCA
00006C30 C4C3C3                            10443+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page  210 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006C33 01                                10444+         dc xl1'01' format one                                          02-DCCCA
00006C34 00000000                          10445+         dc a(0)                                                        02-DCCCA
00006C38 0000000000006CA2                  10446+         dc ad(@PER_1952)                                               02-DCCCA
00006C40 00000000000000F0                  10447+         dc ad(240)                                                     02-DCCCA
00006C48 0000000000000000                  10448+         dc ad(0)                                                       02-DCCCA
00006C50 0000000000001000                  10449+         dc ad(4096)                                                    02-DCCCA
00006C58 20                                10450+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006C59 03                                10451+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006C5A 03                                10452+         dc al1(3)                                                      02-DCCCA
00006C5B 08                                10453+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006C5C 00                                10454+         dc bl.8'00000000'                                              02-DCCCA
00006C5D 000000                            10455+         dc al3(0)                                                      02-DCCCA
00006C60 0000000000006C04                  10456+         dc ad(@LNAME1952)                                              02-DCCCA
00006C68                                   10457+         ds 0d                                                          02-DCCCA
00006C68 0000000000006C30                  10458+         dc ad($eye0189)                                                02-DCCCA
00006C70 0000000000000000                  10459+         dc ad(0)                                                       02-DCCCA
00006C78                                   10460+         ds    0d                                                       01-DCCPR
00006C78                                   10461+rd_kafka_msgset_writer_calc_crc_v2 ds 0d                                01-DCCPR
00006C78                                   10462+@REGION_1952_1 ds 0h                                                    01-DCCPR
00006C78 EBEC D008 0024          00000008  10463+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006C7E E3E0 D088 0004          00000088  10464+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006C84 E3C0 D090 0004          00000090  10465+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006C8A B904 002E                         10466+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006C8E E3B0 C018 0004          00000018  10467+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006C94 A7EB 00F0               000000F0  10468+         aghi  14,240              increase by frame size               01-DCCPR
00006C98 E3E0 C020 0021          00000020  10469+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006C9E 4720 B020               00000020  10470+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006CA2                                   10471+@PER_1952 ds   0h                                                       01-DCCPR
00006CA2 EBDE 2080 0024          00000080  10472+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006CA8 E3C0 2090 0024          00000090  10473+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006CAE B904 00D2                         10474+         lgr   13,2                set real frame pointer               01-DCCPR
00006CB2 B904 00CF                         10475+         lgr   12,15               set base reg                         01-DCCPR
                        00006C78           10476+         using @REGION_1952_1,12                                        01-DCCPR
                                           10477 * ******* End of Prologue
                                           10478 * *
00006CB6 E320 1000 0004          00000000  10479          LG    2,0(0,1)    ; msetw
                                           10480 * ***           int32_t crc;
                                           10481 * ***           rd_slice_t slice;
                                           10482 * ***           int r;
                                           10483 * ***
                                           10484 * ***           r = rd_slice_init(&slice, &msetw->msetw_rkbuf->rkbuf_b\
                                           10485 * uf,
                                           10486 * ***                             msetw->msetw_of_CRC+4,
                                           10487 * ***                             rd_buf_write_pos(&msetw->msetw_rkbuf\
                                           10488 * ->rkbuf_buf) -
00006CBC E3F0 2000 0004          00000000  10489          LG    15,0(0,2)   ; msetw
00006CC2 41F0 F028               00000028  10490          LA    15,40(0,15)
00006CC6 E3F0 D0D0 0024          000000D0  10491          STG   15,208(0,13)
00006CCC 4110 D0D0               000000D0  10492          LA    1,208(0,13)
00006CD0 E3F0 C190 0004          00006E08  10493          LG    15,@lit_1952_400 ; rd_buf_write_pos
00006CD6                                   10494 @@gen_label537 DS    0H
00006CD6 05EF                              10495          BALR  14,15
                                                                                                                           Page  211 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006CD8                                   10496 @@gen_label538 DS    0H
                                           10497 * ***                             msetw->msetw_of_CRC-4);
00006CD8 E3F0 2058 000B          00000058  10498          SLG   15,88(0,2)
00006CDE A7FB FFFC               0000FFFC  10499          AGHI  15,-4
00006CE2 4110 D0A8               000000A8  10500          LA    1,168(0,13)
00006CE6 E310 D0D0 0024          000000D0  10501          STG   1,208(0,13)
00006CEC E310 2000 0004          00000000  10502          LG    1,0(0,2)    ; msetw
00006CF2 4110 1028               00000028  10503          LA    1,40(0,1)
00006CF6 E310 D0D8 0024          000000D8  10504          STG   1,216(0,13)
00006CFC E310 2058 0004          00000058  10505          LG    1,88(0,2)   ; offset of msetw_of_CRC in rd_kafka_msgset_*
                                                                writer_s
00006D02 A71B 0004               00000004  10506          AGHI  1,4
00006D06 E310 D0E0 0024          000000E0  10507          STG   1,224(0,13)
00006D0C E3F0 D0E8 0024          000000E8  10508          STG   15,232(0,13)
00006D12 4110 D0D0               000000D0  10509          LA    1,208(0,13)
00006D16 E3F0 C198 0004          00006E10  10510          LG    15,@lit_1952_401 ; rd_slice_init
00006D1C                                   10511 @@gen_label539 DS    0H
00006D1C 05EF                              10512          BALR  14,15
00006D1E                                   10513 @@gen_label540 DS    0H
                                           10514 * ***          ((!r && *"slice_init failed") ? (void)0 : __assert(__fu\
                                           10515 * nc__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_writer.c", 1273\
                                           10516 * , "!r && *\"slice_init failed\""));
00006D1E 12FF                              10517          LTR   15,15
00006D20 4770 C0BE               00006D36  10518          BNZ   @L819
00006D24 E3F0 C1A0 0004          00006E18  10519          LG    15,@lit_1952_402
00006D2A 41F0 F62A               0000062A  10520          LA    15,1578(0,15)
00006D2E 9500 F000      00000000 00000000  10521          CLI   0(15),0
00006D32 4770 C0FA               00006D72  10522          BNE   @L820
00006D36                                   10523 @L819    DS    0H
00006D36 E3F0 C1B0 0004          00006E28  10524          LG    15,@lit_1952_403
00006D3C 41F0 F2BA               000002BA  10525          LA    15,698(0,15)
00006D40 E3F0 D0D0 0024          000000D0  10526          STG   15,208(0,13)
00006D46 E3F0 C1A0 0004          00006E18  10527          LG    15,@lit_1952_402
00006D4C 4110 F22C               0000022C  10528          LA    1,556(0,15)
00006D50 E310 D0D8 0024          000000D8  10529          STG   1,216(0,13)
00006D56 E548 D0E0 04F9          000000E0  10530          MVGHI 224(13),1273
00006D5C 41F0 F63C               0000063C  10531          LA    15,1596(0,15)
00006D60 E3F0 D0E8 0024          000000E8  10532          STG   15,232(0,13)
00006D66 4110 D0D0               000000D0  10533          LA    1,208(0,13)
00006D6A E3F0 C1A8 0004          00006E20  10534          LG    15,@lit_1952_405 ; __assert
00006D70                                   10535 @@gen_label543 DS    0H
00006D70 05EF                              10536          BALR  14,15
00006D72                                   10537 @@gen_label544 DS    0H
00006D72                                   10538 @L820    DS    0H
                                           10539 * ***
                                           10540 * ***
                                           10541 * ***           crc = rd_slice_crc32c(&slice);
00006D72 41F0 D0A8               000000A8  10542          LA    15,168(0,13)
00006D76 E3F0 D0D0 0024          000000D0  10543          STG   15,208(0,13)
00006D7C 4110 D0D0               000000D0  10544          LA    1,208(0,13)
00006D80 E3F0 C1B8 0004          00006E30  10545          LG    15,@lit_1952_406 ; rd_slice_crc32c
00006D86                                   10546 @@gen_label545 DS    0H
                                                                                                                           Page  212 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006D86 05EF                              10547          BALR  14,15
00006D88                                   10548 @@gen_label546 DS    0H
                                           10549 * ***
                                           10550 * ***
                                           10551 * ***           rd_kafka_buf_update_i32(msetw->msetw_rkbuf, msetw->mse\
                                           10552 * tw_of_CRC, crc);
00006D88 E310 2000 0004          00000000  10553          LG    1,0(0,2)
00006D8E E310 D0D0 0024          000000D0  10554          STG   1,208(0,13)
00006D94 E310 2058 0004          00000058  10555          LG    1,88(0,2)
00006D9A E310 D0D8 0024          000000D8  10556          STG   1,216(0,13)
00006DA0 B914 00FF                         10557          LGFR  15,15
00006DA4 E3F0 D0E0 0024          000000E0  10558          STG   15,224(0,13)
00006DAA 4110 D0D0               000000D0  10559          LA    1,208(0,13)
00006DAE E3F0 C1C0 0004          00006E38  10560          LG    15,@lit_1952_407 ; rd_kafka_buf_update_i32
00006DB4                                   10561 @@gen_label547 DS    0H
00006DB4 05EF                              10562          BALR  14,15
00006DB6                                   10563 @@gen_label548 DS    0H
                                           10564 * ***   }
00006DB6                                   10565 @ret_lab_1952 DS 0H
                                           10566 * * **** Start of Epilogue
                                           10567          DCCEPIL
00006DB6                                   10568+         ds 0h                                                          01-DCCEP
                                           10569+* Epilog
00006DB6 D707 D088 D088 00000088 00000088  10570+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006DBC E3D0 D080 0004          00000080  10571+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006DC2 E3C0 D090 0004          00000090  10572+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006DC8 E3B0 C018 0004          00000018  10573+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006DCE E3C0 B010 0021          00000010  10574+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006DD4 E3E0 D008 0004          00000008  10575+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006DDA EB1C D020 0004          00000020  10576+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006DE0 078E                              10577+         bcr 8,14                if same dsab, just return              01-DCCEP
00006DE2 E3F0 D010 0024          00000010  10578+         stg 15,16(0,13)         save return code                       01-DCCEP
00006DE8 E300 D018 0024          00000018  10579+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006DEE E3F0 D090 0004          00000090  10580+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006DF4 E3F0 F018 0004          00000018  10581+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006DFA 47F0 F040               00000040  10582+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10583+* End of Epilog
                                           10584 * * **** End of Epilogue
00006E00                                   10585          DS    0D
00006E00 000000F0                          10586 @FRAMESIZE_1952 DC F'240'
00006E04 00000000
00006E08 0000000000000D20                  10587 @lit_1952_400 DC AD(rd_buf_write_pos)
00006E10 0000000000000000                  10588 @lit_1952_401 DC AD(rd_slice_init)
00006E18 0000000000007DEC                  10589 @lit_1952_402 DC AD(@strings@)
00006E20 0000000000000000                  10590 @lit_1952_405 DC AD(__assert)
00006E28 0000000000007AB8                  10591 @lit_1952_403 DC AD(@DATA)
00006E30 0000000000000000                  10592 @lit_1952_406 DC AD(rd_slice_crc32c)
00006E38 0000000000002798                  10593 @lit_1952_407 DC AD(rd_kafka_buf_update_i32)
                                           10594          DROP  12
                                           10595 *
                                           10596 *   DSECT for automatic variables in "rd_kafka_msgset_writer_calc_crc_
                                           10597 *           v2"
                                                                                                                           Page  213 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10598 *      (FUNCTION #1952)
                                           10599 *
00000000                00000000 000000D0  10600 @AUTO#rd_kafka_msgset_writer_calc_crc_v2 DSECT
00000000                                   10601          DS    XL168
000000A8                                   10602 rd_kafka_msgset_writer_calc_crc_v2#r#0 DS 1F ; r
000000AC                000000AC 000000A8  10603          ORG   @AUTO#rd_kafka_msgset_writer_calc_crc_v2+168
000000A8                                   10604 rd_kafka_msgset_writer_calc_crc_v2#slice#0 DS 40XL1 ; slice
000000D0                000000D0 000000A8  10605          ORG   @AUTO#rd_kafka_msgset_writer_calc_crc_v2+168
000000A8                                   10606 rd_kafka_msgset_writer_calc_crc_v2#crc#0 DS 1F ; crc
                                           10607 *
00006E40                00000000 00007AB2  10608 @CODE    CSECT
                                           10609 *
                                           10610 *
                                           10611 *
                                           10612 * ....... start of rd_kafka_msgset_writer_finalize_MessageSet_v2_heade\
                                           10613 * r
00006E40                                   10614 @LNAME1953 DS  0H
00006E40 00000034                          10615          DC    X'00000034'
00006E44 99846D9281869281                  10616          DC    C'rd_kafka_msgset_writer_finalize_'
00006E64 D485A2A2818785E2                  10617          DC    C'MessageSet_v2_header'
00006E78 00                                10618          DC    X'00'
                                           10619 rd_kafka_msgset_writer_finalize_$Message$Set_v2_header DCCPRLG CINDEX=1*
                                                                953,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LN*
                                                                AME1953
                                           10620          macro
                                           10621          dccextrn &m
                                           10622          gblc    &$dccext(1000)
                                           10623          gbla    &$dccexti
                                           10624          lcla    &i
                                           10625 &$dccext(&$dccexti+1) setc    '&m'
                                           10626 &i       seta    1
                                           10627 .loop    aif    (&i gt &$dccexti).around
                                           10628          aif    ('&$dccext(&i)' eq '&m').getout
                                           10629 &i       seta    &i+1
                                           10630          ago     .loop
                                           10631 .around  anop
                                           10632 &$dccexti seta &$dccexti+1
                                           10633          extrn  &m
                                           10634 .getout  anop
                                           10635          mend
00006E80                                   10636+$eye0192    ds    0d                                                    02-DCCCA
00006E80 C4C3C3                            10637+         dc cl3'DCC'                                                    02-DCCCA
00006E83 01                                10638+         dc xl1'01' format one                                          02-DCCCA
00006E84 00000000                          10639+         dc a(0)                                                        02-DCCCA
00006E88 0000000000006EF2                  10640+         dc ad(@PER_1953)                                               02-DCCCA
00006E90 00000000000000D8                  10641+         dc ad(216)                                                     02-DCCCA
00006E98 0000000000000000                  10642+         dc ad(0)                                                       02-DCCCA
00006EA0 0000000000001000                  10643+         dc ad(4096)                                                    02-DCCCA
00006EA8 20                                10644+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006EA9 03                                10645+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006EAA 03                                10646+         dc al1(3)                                                      02-DCCCA
00006EAB 08                                10647+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  214 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006EAC 00                                10648+         dc bl.8'00000000'                                              02-DCCCA
00006EAD 000000                            10649+         dc al3(0)                                                      02-DCCCA
00006EB0 0000000000006E40                  10650+         dc ad(@LNAME1953)                                              02-DCCCA
00006EB8                                   10651+         ds 0d                                                          02-DCCCA
00006EB8 0000000000006E80                  10652+         dc ad($eye0192)                                                02-DCCCA
00006EC0 0000000000000000                  10653+         dc ad(0)                                                       02-DCCCA
00006EC8                                   10654+         ds    0d                                                       01-DCCPR
00006EC8                                   10655+rd_kafka_msgset_writer_finalize_$Message$Set_v2_header ds 0d            01-DCCPR
00006EC8                                   10656+@REGION_1953_1 ds 0h                                                    01-DCCPR
00006EC8 EBEC D008 0024          00000008  10657+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006ECE E3E0 D088 0004          00000088  10658+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006ED4 E3C0 D090 0004          00000090  10659+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006EDA B904 002E                         10660+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006EDE E3B0 C018 0004          00000018  10661+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006EE4 A7EB 00D8               000000D8  10662+         aghi  14,216              increase by frame size               01-DCCPR
00006EE8 E3E0 C020 0021          00000020  10663+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006EEE 4720 B020               00000020  10664+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006EF2                                   10665+@PER_1953 ds   0h                                                       01-DCCPR
00006EF2 EBDE 2080 0024          00000080  10666+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006EF8 E3C0 2090 0024          00000090  10667+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006EFE B904 00D2                         10668+         lgr   13,2                set real frame pointer               01-DCCPR
00006F02 B904 00CF                         10669+         lgr   12,15               set base reg                         01-DCCPR
                        00006EC8           10670+         using @REGION_1953_1,12                                        01-DCCPR
                                           10671 * ******* End of Prologue
                                           10672 * *
                                           10673 * ***           rd_kafka_buf_t *rkbuf = msetw->msetw_rkbuf;
00006F06 E320 1000 0004          00000000  10674          LG    2,0(0,1)    ; msetw
00006F0C E330 2000 0004          00000000  10675          LG    3,0(0,2)    ; msetw
                                           10676 * ***           int msgcnt = rd_kafka_msgq_len(&rkbuf->rkbuf_u.Produce\
                                           10677 * .batch .msgq);
00006F12 41F0 3198               00000198  10678          LA    15,408(0,3)
00006F16 E3F0 D0B0 0024          000000B0  10679          STG   15,176(0,13)
00006F1C 4110 D0B0               000000B0  10680          LA    1,176(0,13)
00006F20 E3F0 C2E8 0004          000071B0  10681          LG    15,@lit_1953_409 ; rd_kafka_msgq_len
00006F26                                   10682 @@gen_label549 DS    0H
00006F26 05EF                              10683          BALR  14,15
00006F28                                   10684 @@gen_label550 DS    0H
00006F28 184F                              10685          LR    4,15
                                           10686 * ***
                                           10687 * ***           do { if (((!(msgcnt > 0)))) rd_kafka_crash("C:\\asgkaf\
                                           10688 * ka\\librdkafka\\src\\rdkafka_msgset_writer.c",1291, __FUNCTION__, ((\
                                           10689 * (void *)0)), "assert: " "msgcnt > 0"); } while (0);
00006F2A                                   10690 @L821    DS    0H
00006F2A 1244                              10691          LTR   4,4
00006F2C 4720 C0AA               00006F72  10692          BH    @L824
00006F30 E3F0 C300 0004          000071C8  10693          LG    15,@lit_1953_410
00006F36 4110 F22C               0000022C  10694          LA    1,556(0,15)
00006F3A E310 D0B0 0024          000000B0  10695          STG   1,176(0,13)
00006F40 E548 D0B8 050B          000000B8  10696          MVGHI 184(13),1291
00006F46 E310 C2F8 0004          000071C0  10697          LG    1,@lit_1953_411
00006F4C 4110 12DE               000002DE  10698          LA    1,734(0,1)
00006F50 E310 D0C0 0024          000000C0  10699          STG   1,192(0,13)
                                                                                                                           Page  215 
  Active Usings: @REGION_1953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006F56 D707 D0C8 D0C8 000000C8 000000C8  10700          XC    200(8,13),200(13)
00006F5C 41F0 F658               00000658  10701          LA    15,1624(0,15)
00006F60 E3F0 D0D0 0024          000000D0  10702          STG   15,208(0,13)
00006F66 4110 D0B0               000000B0  10703          LA    1,176(0,13)
00006F6A E3F0 C2F0 0004          000071B8  10704          LG    15,@lit_1953_412 ; rd_kafka_crash
00006F70                                   10705 @@gen_label552 DS    0H
00006F70 05EF                              10706          BALR  14,15
00006F72                                   10707 @@gen_label553 DS    0H
00006F72                                   10708 @L824    DS    0H
                                           10709 * ***           do { if (((!(msetw->msetw_ApiVersion >= 3)))) rd_kafka\
                                           10710 * _crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_writer.c",1292\
                                           10711 * , __FUNCTION__, (((void *)0)), "assert: " "msetw->msetw_ApiVersion >\
                                           10712 * = 3"); } while (0);
00006F72                                   10713 @L825    DS    0H
00006F72 48F0 2008               00000008  10714          LH    15,8(0,2)
00006F76 A7FE 0003               00000003  10715          CHI   15,3
00006F7A 47B0 C0F8               00006FC0  10716          BNL   @L828
00006F7E E3F0 C300 0004          000071C8  10717          LG    15,@lit_1953_410
00006F84 4110 F22C               0000022C  10718          LA    1,556(0,15)
00006F88 E310 D0B0 0024          000000B0  10719          STG   1,176(0,13)
00006F8E E548 D0B8 050C          000000B8  10720          MVGHI 184(13),1292
00006F94 E310 C2F8 0004          000071C0  10721          LG    1,@lit_1953_411
00006F9A 4110 12DE               000002DE  10722          LA    1,734(0,1)
00006F9E E310 D0C0 0024          000000C0  10723          STG   1,192(0,13)
00006FA4 D707 D0C8 D0C8 000000C8 000000C8  10724          XC    200(8,13),200(13)
00006FAA 41F0 F2E2               000002E2  10725          LA    15,738(0,15)
00006FAE E3F0 D0D0 0024          000000D0  10726          STG   15,208(0,13)
00006FB4 4110 D0B0               000000B0  10727          LA    1,176(0,13)
00006FB8 E3F0 C2F0 0004          000071B8  10728          LG    15,@lit_1953_412 ; rd_kafka_crash
00006FBE                                   10729 @@gen_label555 DS    0H
00006FBE 05EF                              10730          BALR  14,15
00006FC0                                   10731 @@gen_label556 DS    0H
00006FC0                                   10732 @L828    DS    0H
                                           10733 * ***
                                           10734 * ***           msetw->msetw_MessageSetSize = (8+4+4+1+4+2+4+8+8+8+2+4\
                                           10735 * +4) +
                                           10736 * ***                   msetw->msetw_messages_len;
00006FC0 E3F0 2020 0004          00000020  10737          LG    15,32(0,2)  ; offset of msetw_messages_len in rd_kafka_m*
                                                                sgset_writer_s
00006FC6 A7FB 003D               0000003D  10738          AGHI  15,61
00006FCA E3F0 2030 0024          00000030  10739          STG   15,48(0,2)  ; offset of msetw_MessageSetSize in rd_kafka*
                                                                _msgset_writer_s
                                           10740 * ***
                                           10741 * ***
                                           10742 * ***
                                           10743 * ***           rd_kafka_buf_update_i32(rkbuf, msetw->msetw_of_start +
                                           10744 * ***                                   (int32_t)msetw->msetw_MessageS\
                                           10745 * etSize - (8+4));
00006FD0 E330 D0B0 0024          000000B0  10746          STG   3,176(0,13)
                                           10747 * ***                                   (8),
00006FD6 E3F0 2040 0004          00000040  10748          LG    15,64(0,2)  ; offset of msetw_of_start in rd_kafka_msgse*
                                                                t_writer_s
                                                                                                                           Page  216 
  Active Usings: @REGION_1953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006FDC A7FB 0008               00000008  10749          AGHI  15,8
00006FE0 E3F0 D0B8 0024          000000B8  10750          STG   15,184(0,13)
00006FE6 E3F0 2030 0004          00000030  10751          LG    15,48(0,2)  ; offset of msetw_MessageSetSize in rd_kafka*
                                                                _msgset_writer_s
00006FEC A7FA FFF4               0000FFF4  10752          AHI   15,-12
00006FF0 B914 00FF                         10753          LGFR  15,15
00006FF4 E3F0 D0C0 0024          000000C0  10754          STG   15,192(0,13)
00006FFA 4110 D0B0               000000B0  10755          LA    1,176(0,13)
00006FFE E350 C308 0004          000071D0  10756          LG    5,@lit_1953_416 ; rd_kafka_buf_update_i32
00007004 B904 00F5                         10757          LGR   15,5
00007008                                   10758 @@gen_label557 DS    0H
00007008 05EF                              10759          BALR  14,15
0000700A                                   10760 @@gen_label558 DS    0H
                                           10761 * ***
                                           10762 * ***           msetw->msetw_Attributes |= (0 << 3);
0000700A 58F0 204C               0000004C  10763          L     15,76(0,2)
                                           10764 * ***
                                           10765 * ***           if (((msetw->msetw_rkb->rkb_rk)->rk_conf.eos.transacti\
                                           10766 * onal_id != ((void *)0)))
0000700E E3F0 2088 0004          00000088  10767          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00007014 E3F0 FFD0 0004          00000FD0  10768          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000701A E3F0 F7E8 0002          000007E8  10769          LTG   15,2024(0,15) ; offset of transactional_id in 0000105
00007020 4780 C168               00007030  10770          BE    @L829
                                           10771 * ***                   msetw->msetw_Attributes |=
                                           10772 * ***                           (1 << 4);
00007024 58F0 204C               0000004C  10773          L     15,76(0,2)
00007028 A5FB 0010               00000010  10774          OILL  15,16
0000702C 50F0 204C               0000004C  10775          ST    15,76(0,2)
00007030                                   10776 @L829    DS    0H
                                           10777 * ***
                                           10778 * ***           rd_kafka_buf_update_i16(rkbuf, msetw->msetw_of_start +
                                           10779 * ***                                   msetw->msetw_Attributes);
00007030 E330 D0B0 0024          000000B0  10780          STG   3,176(0,13)
                                           10781 * ***                                   (8+4+4+1+4),
00007036 E3F0 2040 0004          00000040  10782          LG    15,64(0,2)  ; offset of msetw_of_start in rd_kafka_msgse*
                                                                t_writer_s
0000703C A7FB 0015               00000015  10783          AGHI  15,21
00007040 E3F0 D0B8 0024          000000B8  10784          STG   15,184(0,13)
00007046 58F0 204C               0000004C  10785          L     15,76(0,2)  ; offset of msetw_Attributes in rd_kafka_msg*
                                                                set_writer_s
0000704A B907 00FF                         10786          LGHR  15,15
0000704E E3F0 D0C0 0024          000000C0  10787          STG   15,192(0,13)
00007054 4110 D0B0               000000B0  10788          LA    1,176(0,13)
00007058 E3F0 C310 0004          000071D8  10789          LG    15,@lit_1953_417 ; rd_kafka_buf_update_i16
0000705E                                   10790 @@gen_label560 DS    0H
0000705E 05EF                              10791          BALR  14,15
00007060                                   10792 @@gen_label561 DS    0H
                                           10793 * ***
                                           10794 * ***           rd_kafka_buf_update_i32(rkbuf, msetw->msetw_of_start +
                                           10795 * ***                                   msgcnt-1);
00007060 E330 D0B0 0024          000000B0  10796          STG   3,176(0,13)
                                                                                                                           Page  217 
  Active Usings: @REGION_1953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10797 * ***                                   (8+4+4+1+4+2),
00007066 E3F0 2040 0004          00000040  10798          LG    15,64(0,2)  ; offset of msetw_of_start in rd_kafka_msgse*
                                                                t_writer_s
0000706C A7FB 0017               00000017  10799          AGHI  15,23
00007070 E3F0 D0B8 0024          000000B8  10800          STG   15,184(0,13)
00007076 18F4                              10801          LR    15,4
00007078 A7FA FFFF               0000FFFF  10802          AHI   15,-1
0000707C B914 00FF                         10803          LGFR  15,15
00007080 E3F0 D0C0 0024          000000C0  10804          STG   15,192(0,13)
00007086 4110 D0B0               000000B0  10805          LA    1,176(0,13)
0000708A B904 00F5                         10806          LGR   15,5
0000708E                                   10807 @@gen_label562 DS    0H
0000708E 05EF                              10808          BALR  14,15
00007090                                   10809 @@gen_label563 DS    0H
                                           10810 * ***
                                           10811 * ***           rd_kafka_buf_update_i64(rkbuf, msetw->msetw_of_start +
                                           10812 * ***                                   msetw->msetw_firstmsg.timestam\
                                           10813 * p);
00007090 E330 D0B0 0024          000000B0  10814          STG   3,176(0,13)
                                           10815 * ***                                   (8+4+4+1+4+2+4),
00007096 E3F0 2040 0004          00000040  10816          LG    15,64(0,2)  ; offset of msetw_of_start in rd_kafka_msgse*
                                                                t_writer_s
0000709C A7FB 001B               0000001B  10817          AGHI  15,27
000070A0 E3F0 D0B8 0024          000000B8  10818          STG   15,184(0,13)
000070A6 E3F0 2070 0004          00000070  10819          LG    15,112(0,2)
000070AC E3F0 D0C0 0024          000000C0  10820          STG   15,192(0,13)
000070B2 4110 D0B0               000000B0  10821          LA    1,176(0,13)
000070B6 E360 C318 0004          000071E0  10822          LG    6,@lit_1953_419 ; rd_kafka_buf_update_i64
000070BC B904 00F6                         10823          LGR   15,6
000070C0                                   10824 @@gen_label564 DS    0H
000070C0 05EF                              10825          BALR  14,15
000070C2                                   10826 @@gen_label565 DS    0H
                                           10827 * ***
                                           10828 * ***           rd_kafka_buf_update_i64(rkbuf, msetw->msetw_of_start +
                                           10829 * ***                                   msetw->msetw_MaxTimestamp);
000070C2 E330 D0B0 0024          000000B0  10830          STG   3,176(0,13)
                                           10831 * ***                                   (8+4+4+1+4+2+4+8),
000070C8 E3F0 2040 0004          00000040  10832          LG    15,64(0,2)  ; offset of msetw_of_start in rd_kafka_msgse*
                                                                t_writer_s
000070CE A7FB 0023               00000023  10833          AGHI  15,35
000070D2 E3F0 D0B8 0024          000000B8  10834          STG   15,184(0,13)
000070D8 E3F0 2050 0004          00000050  10835          LG    15,80(0,2)
000070DE E3F0 D0C0 0024          000000C0  10836          STG   15,192(0,13)
000070E4 4110 D0B0               000000B0  10837          LA    1,176(0,13)
000070E8 B904 00F6                         10838          LGR   15,6
000070EC                                   10839 @@gen_label566 DS    0H
000070EC 05EF                              10840          BALR  14,15
000070EE                                   10841 @@gen_label567 DS    0H
                                           10842 * ***
                                           10843 * ***           rd_kafka_buf_update_i32(rkbuf, msetw->msetw_of_start +
                                           10844 * ***                                   msetw->msetw_batch->first_seq)\
                                           10845 * ;
                                                                                                                           Page  218 
  Active Usings: @REGION_1953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000070EE E330 D0B0 0024          000000B0  10846          STG   3,176(0,13)
                                           10847 * ***                                   (8+4+4+1+4+2+4+8+8+8+2),
000070F4 E3F0 2040 0004          00000040  10848          LG    15,64(0,2)  ; offset of msetw_of_start in rd_kafka_msgse*
                                                                t_writer_s
000070FA A7FB 0035               00000035  10849          AGHI  15,53
000070FE E3F0 D0B8 0024          000000B8  10850          STG   15,184(0,13)
00007104 E3F0 2060 0004          00000060  10851          LG    15,96(0,2)  ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
0000710A E3F0 F038 0014          00000038  10852          LGF   15,56(0,15)
00007110 E3F0 D0C0 0024          000000C0  10853          STG   15,192(0,13)
00007116 4110 D0B0               000000B0  10854          LA    1,176(0,13)
0000711A B904 00F5                         10855          LGR   15,5
0000711E                                   10856 @@gen_label568 DS    0H
0000711E 05EF                              10857          BALR  14,15
00007120                                   10858 @@gen_label569 DS    0H
                                           10859 * ***
                                           10860 * ***           rd_kafka_buf_update_i32(rkbuf, msetw->msetw_of_start +
00007120 E330 D0B0 0024          000000B0  10861          STG   3,176(0,13)
                                           10862 * ***                                   (8+4+4+1+4+2+4+8+8+8+2+4), msg\
                                           10863 * cnt);
00007126 E3F0 2040 0004          00000040  10864          LG    15,64(0,2)  ; offset of msetw_of_start in rd_kafka_msgse*
                                                                t_writer_s
0000712C A7FB 0039               00000039  10865          AGHI  15,57
00007130 E3F0 D0B8 0024          000000B8  10866          STG   15,184(0,13)
00007136 B914 00F4                         10867          LGFR  15,4
0000713A E3F0 D0C0 0024          000000C0  10868          STG   15,192(0,13)
00007140 4110 D0B0               000000B0  10869          LA    1,176(0,13)
00007144 B904 00F5                         10870          LGR   15,5
00007148                                   10871 @@gen_label570 DS    0H
00007148 05EF                              10872          BALR  14,15
0000714A                                   10873 @@gen_label571 DS    0H
                                           10874 * ***
                                           10875 * ***           rd_kafka_msgset_writer_calc_crc_v2(msetw);
0000714A E320 D0B0 0024          000000B0  10876          STG   2,176(0,13)
00007150 4110 D0B0               000000B0  10877          LA    1,176(0,13)
00007154 E3F0 C320 0004          000071E8  10878          LG    15,@lit_1953_423 ; rd_kafka_msgset_writer_calc_crc_v2
0000715A                                   10879 @@gen_label572 DS    0H
0000715A 05EF                              10880          BALR  14,15
0000715C                                   10881 @@gen_label573 DS    0H
                                           10882 * ***   }
0000715C                                   10883 @ret_lab_1953 DS 0H
                                           10884 * * **** Start of Epilogue
                                           10885          DCCEPIL
0000715C                                   10886+         ds 0h                                                          01-DCCEP
                                           10887+* Epilog
0000715C D707 D088 D088 00000088 00000088  10888+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007162 E3D0 D080 0004          00000080  10889+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007168 E3C0 D090 0004          00000090  10890+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000716E E3B0 C018 0004          00000018  10891+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007174 E3C0 B010 0021          00000010  10892+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000717A E3E0 D008 0004          00000008  10893+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007180 EB1C D020 0004          00000020  10894+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  219 
  Active Usings: @REGION_1953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007186 078E                              10895+         bcr 8,14                if same dsab, just return              01-DCCEP
00007188 E3F0 D010 0024          00000010  10896+         stg 15,16(0,13)         save return code                       01-DCCEP
0000718E E300 D018 0024          00000018  10897+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007194 E3F0 D090 0004          00000090  10898+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000719A E3F0 F018 0004          00000018  10899+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000071A0 47F0 F040               00000040  10900+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10901+* End of Epilog
                                           10902 * * **** End of Epilogue
000071A8                                   10903          DS    0D
000071A8 000000D8                          10904 @FRAMESIZE_1953 DC F'216'
000071AC 00000000
000071B0 00000000000016A0                  10905 @lit_1953_409 DC AD(rd_kafka_msgq_len)
000071B8 0000000000000000                  10906 @lit_1953_412 DC AD(rd_kafka_crash)
000071C0 0000000000007AB8                  10907 @lit_1953_411 DC AD(@DATA)
000071C8 0000000000007DEC                  10908 @lit_1953_410 DC AD(@strings@)
000071D0 0000000000002798                  10909 @lit_1953_416 DC AD(rd_kafka_buf_update_i32)
000071D8 0000000000002528                  10910 @lit_1953_417 DC AD(rd_kafka_buf_update_i16)
000071E0 0000000000002B38                  10911 @lit_1953_419 DC AD(rd_kafka_buf_update_i64)
000071E8 0000000000006C78                  10912 @lit_1953_423 DC AD(rd_kafka_msgset_writer_calc_crc_v2)
                                           10913          DROP  12
                                           10914 *
                                           10915 *   DSECT for automatic variables in "rd_kafka_msgset_writer_finalize_
                                           10916 *           MessageSet_v2_header"
                                           10917 *      (FUNCTION #1953)
                                           10918 *
00000000                00000000 000000AC  10919 @AUTO#F#1953 DSECT
00000000                                   10920          DS    XL168
000000A8                                   10921 rd_kafka_msgset_writer_finalize_$Message$Set_v2_header#msgcnt#0 DS 1F ;*
                                                                 msgcnt
                                           10922 *
000071F0                00000000 00007AB2  10923 @CODE    CSECT
                                           10924 *
                                           10925 *
                                           10926 *
                                           10927 * ....... start of rd_kafka_msgset_writer_finalize_MessageSet
000071F0                                   10928 @LNAME1954 DS  0H
000071F0 0000002A                          10929          DC    X'0000002A'
000071F4 99846D9281869281                  10930          DC    C'rd_kafka_msgset_writer_finalize_'
00007214 D485A2A2818785E2                  10931          DC    C'MessageSet'
0000721E 00                                10932          DC    X'00'
                                           10933 rd_kafka_msgset_writer_finalize_$Message$Set DCCPRLG CINDEX=1954,BASER=*
                                                                12,FRAME=192,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1954
                                           10934          macro
                                           10935          dccextrn &m
                                           10936          gblc    &$dccext(1000)
                                           10937          gbla    &$dccexti
                                           10938          lcla    &i
                                           10939 &$dccext(&$dccexti+1) setc    '&m'
                                           10940 &i       seta    1
                                           10941 .loop    aif    (&i gt &$dccexti).around
                                           10942          aif    ('&$dccext(&i)' eq '&m').getout
                                           10943 &i       seta    &i+1
                                                                                                                           Page  220 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10944          ago     .loop
                                           10945 .around  anop
                                           10946 &$dccexti seta &$dccexti+1
                                           10947          extrn  &m
                                           10948 .getout  anop
                                           10949          mend
00007220                                   10950+$eye0195    ds    0d                                                    02-DCCCA
00007220 C4C3C3                            10951+         dc cl3'DCC'                                                    02-DCCCA
00007223 01                                10952+         dc xl1'01' format one                                          02-DCCCA
00007224 00000000                          10953+         dc a(0)                                                        02-DCCCA
00007228 0000000000007292                  10954+         dc ad(@PER_1954)                                               02-DCCCA
00007230 00000000000000C0                  10955+         dc ad(192)                                                     02-DCCCA
00007238 0000000000000000                  10956+         dc ad(0)                                                       02-DCCCA
00007240 0000000000001000                  10957+         dc ad(4096)                                                    02-DCCCA
00007248 20                                10958+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007249 03                                10959+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000724A 03                                10960+         dc al1(3)                                                      02-DCCCA
0000724B 08                                10961+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000724C 00                                10962+         dc bl.8'00000000'                                              02-DCCCA
0000724D 000000                            10963+         dc al3(0)                                                      02-DCCCA
00007250 00000000000071F0                  10964+         dc ad(@LNAME1954)                                              02-DCCCA
00007258                                   10965+         ds 0d                                                          02-DCCCA
00007258 0000000000007220                  10966+         dc ad($eye0195)                                                02-DCCCA
00007260 0000000000000000                  10967+         dc ad(0)                                                       02-DCCCA
00007268                                   10968+         ds    0d                                                       01-DCCPR
00007268                                   10969+rd_kafka_msgset_writer_finalize_$Message$Set ds 0d                      01-DCCPR
00007268                                   10970+@REGION_1954_1 ds 0h                                                    01-DCCPR
00007268 EBEC D008 0024          00000008  10971+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000726E E3E0 D088 0004          00000088  10972+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00007274 E3C0 D090 0004          00000090  10973+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000727A B904 002E                         10974+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000727E E3B0 C018 0004          00000018  10975+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00007284 A7EB 00C0               000000C0  10976+         aghi  14,192              increase by frame size               01-DCCPR
00007288 E3E0 C020 0021          00000020  10977+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000728E 4720 B020               00000020  10978+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007292                                   10979+@PER_1954 ds   0h                                                       01-DCCPR
00007292 EBDE 2080 0024          00000080  10980+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007298 E3C0 2090 0024          00000090  10981+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000729E B904 00D2                         10982+         lgr   13,2                set real frame pointer               01-DCCPR
000072A2 B904 00CF                         10983+         lgr   12,15               set base reg                         01-DCCPR
                        00007268           10984+         using @REGION_1954_1,12                                        01-DCCPR
                                           10985 * ******* End of Prologue
                                           10986 * *
                                           10987 * ***           do {} while (0);
000072A6 E320 1000 0004          00000000  10988          LG    2,0(0,1)    ; msetw
000072AC                                   10989 @L830    DS    0H
                                           10990 * ***
                                           10991 * ***           if (msetw->msetw_MsgVersion == 2)
000072AC E55C 200C 0002          0000000C  10992          CHSI  12(2),2
000072B2 4770 C080               000072E8  10993          BNE   @L833
                                           10994 * ***                   rd_kafka_msgset_writer_finalize_MessageSet_v2_\
                                           10995 * header(msetw);
                                                                                                                           Page  221 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000072B6 E320 D0A8 0024          000000A8  10996          STG   2,168(0,13)
000072BC 4110 D0A8               000000A8  10997          LA    1,168(0,13)
000072C0 E3F0 C070 0004          000072D8  10998          LG    15,@lit_1954_425 ; rd_kafka_msgset_writer_finalize_Messa*
                                                                geSet_v2_header
000072C6                                   10999 @@gen_label575 DS    0H
000072C6 05EF                              11000          BALR  14,15
000072C8                                   11001 @@gen_label576 DS    0H
000072C8 47F0 C08C               000072F4  11002          B     @L834
000072D0                                   11003          DS    0D
000072D0 000000C0                          11004 @FRAMESIZE_1954 DC F'192'
000072D4 00000000
000072D8 0000000000006EC8                  11005 @lit_1954_425 DC AD(rd_kafka_msgset_writer_finalize_$Message$Set_v2_hea*
                                                                der)
000072E0 0000000000002798                  11006 @lit_1954_426 DC AD(rd_kafka_buf_update_i32)
                                           11007 * ***           else
000072E8                                   11008 @L833    DS    0H
                                           11009 * ***                   msetw->msetw_MessageSetSize = 0 +
                                           11010 * ***                           msetw->msetw_messages_len;
000072E8 E3F0 2020 0004          00000020  11011          LG    15,32(0,2)  ; offset of msetw_messages_len in rd_kafka_m*
                                                                sgset_writer_s
000072EE E3F0 2030 0024          00000030  11012          STG   15,48(0,2)  ; offset of msetw_MessageSetSize in rd_kafka*
                                                                _msgset_writer_s
000072F4                                   11013 @L834    DS    0H
                                           11014 * ***
                                           11015 * ***
                                           11016 * ***           rd_kafka_buf_update_i32(msetw->msetw_rkbuf,
                                           11017 * ***                                   msetw->msetw_of_MessageSetSize\
                                           11018 * ,
                                           11019 * ***                                   (int32_t)msetw->msetw_MessageS\
                                           11020 * etSize);
000072F4 E3F0 2000 0004          00000000  11021          LG    15,0(0,2)
000072FA E3F0 D0A8 0024          000000A8  11022          STG   15,168(0,13)
00007300 E3F0 2038 0004          00000038  11023          LG    15,56(0,2)
00007306 E3F0 D0B0 0024          000000B0  11024          STG   15,176(0,13)
0000730C E3F0 2034 0014          00000034  11025          LGF   15,52(0,2)
00007312 E3F0 D0B8 0024          000000B8  11026          STG   15,184(0,13)
00007318 4110 D0A8               000000A8  11027          LA    1,168(0,13)
0000731C E3F0 C078 0004          000072E0  11028          LG    15,@lit_1954_426 ; rd_kafka_buf_update_i32
00007322                                   11029 @@gen_label577 DS    0H
00007322 05EF                              11030          BALR  14,15
00007324                                   11031 @@gen_label578 DS    0H
                                           11032 * ***
                                           11033 * ***   }
00007324                                   11034 @ret_lab_1954 DS 0H
                                           11035 * * **** Start of Epilogue
                                           11036          DCCEPIL
00007324                                   11037+         ds 0h                                                          01-DCCEP
                                           11038+* Epilog
00007324 D707 D088 D088 00000088 00000088  11039+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000732A E3D0 D080 0004          00000080  11040+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007330 E3C0 D090 0004          00000090  11041+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007336 E3B0 C018 0004          00000018  11042+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  222 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000733C E3C0 B010 0021          00000010  11043+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007342 E3E0 D008 0004          00000008  11044+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007348 EB1C D020 0004          00000020  11045+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000734E 078E                              11046+         bcr 8,14                if same dsab, just return              01-DCCEP
00007350 E3F0 D010 0024          00000010  11047+         stg 15,16(0,13)         save return code                       01-DCCEP
00007356 E300 D018 0024          00000018  11048+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000735C E3F0 D090 0004          00000090  11049+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007362 E3F0 F018 0004          00000018  11050+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007368 47F0 F040               00000040  11051+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11052+* End of Epilog
                                           11053 * * **** End of Epilogue
                                           11054          DROP  12
                                           11055 *
                                           11056 *   DSECT for automatic variables in "rd_kafka_msgset_writer_finalize_
                                           11057 *           MessageSet"
                                           11058 *      (FUNCTION #1954)
                                           11059 *
00000000                00000000 000000A8  11060 @AUTO#rd_kafka_msgset_writer_finalize_$Message$Set DSECT
00000000                                   11061          DS    XL168
                                           11062 *
0000736C                00000000 00007AB2  11063 @CODE    CSECT
                                           11064 *
                                           11065 *
                                           11066 *
                                           11067 * ....... start of rd_kafka_msgset_writer_finalize
0000736C                                   11068 @LNAME1955 DS  0H
0000736C 0000001F                          11069          DC    X'0000001F'
00007370 99846D9281869281                  11070          DC    C'rd_kafka_msgset_writer_finalize'
0000738F 00                                11071          DC    X'00'
                                           11072 rd_kafka_msgset_writer_finalize DCCPRLG CINDEX=1955,BASER=12,FRAME=568,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1955
                                           11073          macro
                                           11074          dccextrn &m
                                           11075          gblc    &$dccext(1000)
                                           11076          gbla    &$dccexti
                                           11077          lcla    &i
                                           11078 &$dccext(&$dccexti+1) setc    '&m'
                                           11079 &i       seta    1
                                           11080 .loop    aif    (&i gt &$dccexti).around
                                           11081          aif    ('&$dccext(&i)' eq '&m').getout
                                           11082 &i       seta    &i+1
                                           11083          ago     .loop
                                           11084 .around  anop
                                           11085 &$dccexti seta &$dccexti+1
                                           11086          extrn  &m
                                           11087 .getout  anop
                                           11088          mend
00007390                                   11089+$eye0198    ds    0d                                                    02-DCCCA
00007390 C4C3C3                            11090+         dc cl3'DCC'                                                    02-DCCCA
00007393 01                                11091+         dc xl1'01' format one                                          02-DCCCA
00007394 00000000                          11092+         dc a(0)                                                        02-DCCCA
00007398 0000000000007402                  11093+         dc ad(@PER_1955)                                               02-DCCCA
                                                                                                                           Page  223 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000073A0 0000000000000238                  11094+         dc ad(568)                                                     02-DCCCA
000073A8 0000000000000000                  11095+         dc ad(0)                                                       02-DCCCA
000073B0 0000000000001000                  11096+         dc ad(4096)                                                    02-DCCCA
000073B8 20                                11097+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000073B9 03                                11098+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000073BA 03                                11099+         dc al1(3)                                                      02-DCCCA
000073BB 08                                11100+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000073BC 00                                11101+         dc bl.8'00000000'                                              02-DCCCA
000073BD 000000                            11102+         dc al3(0)                                                      02-DCCCA
000073C0 000000000000736C                  11103+         dc ad(@LNAME1955)                                              02-DCCCA
000073C8                                   11104+         ds 0d                                                          02-DCCCA
000073C8 0000000000007390                  11105+         dc ad($eye0198)                                                02-DCCCA
000073D0 0000000000000000                  11106+         dc ad(0)                                                       02-DCCCA
000073D8                                   11107+         ds    0d                                                       01-DCCPR
000073D8                                   11108+rd_kafka_msgset_writer_finalize ds 0d                                   01-DCCPR
000073D8                                   11109+@REGION_1955_1 ds 0h                                                    01-DCCPR
000073D8 EBEC D008 0024          00000008  11110+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000073DE E3E0 D088 0004          00000088  11111+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000073E4 E3C0 D090 0004          00000090  11112+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000073EA B904 002E                         11113+         lgr   2,14                copy addr of our savearea            01-DCCPR
000073EE E3B0 C018 0004          00000018  11114+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000073F4 A7EB 0238               00000238  11115+         aghi  14,568              increase by frame size               01-DCCPR
000073F8 E3E0 C020 0021          00000020  11116+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000073FE 4720 B020               00000020  11117+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007402                                   11118+@PER_1955 ds   0h                                                       01-DCCPR
00007402 EBDE 2080 0024          00000080  11119+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007408 E3C0 2090 0024          00000090  11120+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000740E B904 00D2                         11121+         lgr   13,2                set real frame pointer               01-DCCPR
00007412 B904 00CF                         11122+         lgr   12,15               set base reg                         01-DCCPR
                        000073D8           11123+         using @REGION_1955_1,12                                        01-DCCPR
00007416 B904 0061                         11124          LGR   6,1         ; ptr to parm area
                                           11125 * ******* End of Prologue
                                           11126 * *
                                           11127 * ***           rd_kafka_buf_t *rkbuf = msetw->msetw_rkbuf;
0000741A E320 6000 0004          00000000  11128          LG    2,0(0,6)    ; msetw
00007420 E330 2000 0004          00000000  11129          LG    3,0(0,2)    ; msetw
                                           11130 * ***           rd_kafka_toppar_t *rktp = msetw->msetw_rktp;
00007426 E340 2090 0004          00000090  11131          LG    4,144(0,2)  ; offset of msetw_rktp in rd_kafka_msgset_wr*
                                                                iter_s
                                           11132 * ***           size_t len;
                                           11133 * ***           int cnt;
                                           11134 * ***
                                           11135 * ***
                                           11136 * ***           if ((((cnt = rd_kafka_msgq_len(&rkbuf->rkbuf_u.Produce\
                                           11137 * .batch .msgq)) == 0))) {
0000742C 41F0 3198               00000198  11138          LA    15,408(0,3)
00007430 E3F0 D1B0 0024          000001B0  11139          STG   15,432(0,13)
00007436 4110 D1B0               000001B0  11140          LA    1,432(0,13)
0000743A E3F0 C0B0 0004          00007488  11141          LG    15,@lit_1955_428 ; rd_kafka_msgq_len
00007440                                   11142 @@gen_label579 DS    0H
00007440 05EF                              11143          BALR  14,15
00007442                                   11144 @@gen_label580 DS    0H
                                                                                                                           Page  224 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007442 125F                              11145          LTR   5,15
00007444 4770 C138               00007510  11146          BNE   @L835
                                           11147 * ***
                                           11148 * ***                   do { if (rd_refcnt_sub0(&(rkbuf)->rkbuf_refcnt\
                                           11149 * ) > 0) break; rd_kafka_buf_destroy_final(rkbuf); } while (0);
00007448                                   11150 @L836    DS    0H
00007448 41F0 3108               00000108  11151          LA    15,264(0,3)
0000744C E3F0 D1B0 0024          000001B0  11152          STG   15,432(0,13)
00007452 4110 D1B0               000001B0  11153          LA    1,432(0,13)
00007456 E3F0 C0B8 0004          00007490  11154          LG    15,@lit_1955_429 ; rd_refcnt_sub0
0000745C                                   11155 @@gen_label582 DS    0H
0000745C 05EF                              11156          BALR  14,15
0000745E                                   11157 @@gen_label583 DS    0H
0000745E 12FF                              11158          LTR   15,15
00007460 4720 C09E               00007476  11159          BH    @L837
00007464                                   11160 @L839    DS    0H
00007464 E330 D1B0 0024          000001B0  11161          STG   3,432(0,13)
0000746A 4110 D1B0               000001B0  11162          LA    1,432(0,13)
0000746E E3F0 C0C0 0004          00007498  11163          LG    15,@lit_1955_430 ; rd_kafka_buf_destroy_final
00007474                                   11164 @@gen_label585 DS    0H
00007474 05EF                              11165          BALR  14,15
00007476                                   11166 @@gen_label586 DS    0H
00007476                                   11167 @L837    DS    0H
                                           11168 * ***                   return ((void *)0);
00007476 A7F9 0000               00000000  11169          LGHI  15,0        ; 0
0000747A 47F0 C482               0000785A  11170          B     @ret_lab_1955
00007480                                   11171          DS    0D
00007480 00000238                          11172 @FRAMESIZE_1955 DC F'568'
00007484 00000000
00007488 00000000000016A0                  11173 @lit_1955_428 DC AD(rd_kafka_msgq_len)
00007490 0000000000000748                  11174 @lit_1955_429 DC AD(rd_refcnt_sub0)
00007498 0000000000000000                  11175 @lit_1955_430 DC AD(rd_kafka_buf_destroy_final)
000074A0 0000000000000D20                  11176 @lit_1955_432 DC AD(rd_buf_write_pos)
000074A8 0000000000000000                  11177 @lit_1955_435 DC AD(__assert)
000074B0 0000000000007DEC                  11178 @lit_1955_434 DC AD(@strings@)
000074B8 0000000000007AB8                  11179 @lit_1955_433 DC AD(@DATA)
000074C0 0000000000000388                  11180 @lit_1955_439 DC AD(rd_atomic64_add)
000074C8 00000000000067A0                  11181 @lit_1955_441 DC AD(rd_kafka_msgset_writer_compress)
000074D0 0000000000007268                  11182 @lit_1955_442 DC AD(rd_kafka_msgset_writer_finalize_$Message$Set)
000074D8 0000000000000000                  11183 @lit_1955_444 DC AD(mtx_lock)
000074E0 0000000000001BB0                  11184 @lit_1955_446 DC AD(rd_strlcpy)
000074E8 0000000000000000                  11185 @lit_1955_448 DC AD(mtx_unlock)
000074F0 00000000000012D8                  11186 @lit_1955_449 DC AD(rd_kafka_pid2str)
000074F8 0000000000003630                  11187 @lit_1955_450 DC AD(rd_kafka_compression2str)
00007500 0000000000000000                  11188 @lit_1955_453 DC AD(rd_kafka_log0)
00007508 0000000000000000                  11189 @lit_1955_454 DC AD(rd_kafka_msgbatch_ready_produce)
                                           11190 * ***           }
00007510                                   11191 @L835    DS    0H
                                           11192 * ***
                                           11193 * ***
                                           11194 * ***           len = rd_buf_write_pos(&msetw->msetw_rkbuf->rkbuf_buf)\
                                           11195 *  -
                                                                                                                           Page  225 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007510 E3F0 2000 0004          00000000  11196          LG    15,0(0,2)   ; msetw
00007516 41F0 F028               00000028  11197          LA    15,40(0,15)
0000751A E3F0 D1B0 0024          000001B0  11198          STG   15,432(0,13)
00007520 4110 D1B0               000001B0  11199          LA    1,432(0,13)
00007524 E3F0 C0C8 0004          000074A0  11200          LG    15,@lit_1955_432 ; rd_buf_write_pos
0000752A                                   11201 @@gen_label587 DS    0H
0000752A 05EF                              11202          BALR  14,15
0000752C                                   11203 @@gen_label588 DS    0H
                                           11204 * ***                   msetw->msetw_firstmsg.of;
0000752C E3F0 2068 000B          00000068  11205          SLG   15,104(0,2)
00007532 E3F0 D0A8 0024          000000A8  11206          STG   15,168(0,13) ; len
                                           11207 * ***           ((len > 0) ? (void)0 : __assert(__func__, "C:\\asgkafk\
                                           11208 * a\\librdkafka\\src\\rdkafka_msgset_writer.c", 1391, "len > 0"));
00007538 C2FE 0000 0000                    11209          CLGFI 15,X'00000000'
0000753E 4720 C1A6               0000757E  11210          BH    @L841
00007542                                   11211 @L840    DS    0H
00007542 E3F0 C0E0 0004          000074B8  11212          LG    15,@lit_1955_433
00007548 41F0 F314               00000314  11213          LA    15,788(0,15)
0000754C E3F0 D1B0 0024          000001B0  11214          STG   15,432(0,13)
00007552 E3F0 C0D8 0004          000074B0  11215          LG    15,@lit_1955_434
00007558 4110 F22C               0000022C  11216          LA    1,556(0,15)
0000755C E310 D1B8 0024          000001B8  11217          STG   1,440(0,13)
00007562 E548 D1C0 056F          000001C0  11218          MVGHI 448(13),1391
00007568 41F0 F66C               0000066C  11219          LA    15,1644(0,15)
0000756C E3F0 D1C8 0024          000001C8  11220          STG   15,456(0,13)
00007572 4110 D1B0               000001B0  11221          LA    1,432(0,13)
00007576 E3F0 C0D0 0004          000074A8  11222          LG    15,@lit_1955_435 ; __assert
0000757C                                   11223 @@gen_label590 DS    0H
0000757C 05EF                              11224          BALR  14,15
0000757E                                   11225 @@gen_label591 DS    0H
0000757E                                   11226 @L841    DS    0H
                                           11227 * ***           ((len <= (size_t)rktp->rktp_rkt->rkt_rk->rk_conf.max_m\
                                           11228 * sg_size) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\s\
                                           11229 * rc\\rdkafka_msgset_writer.c", 1392, "len <= (size_t)rktp->rktp_rkt->\
                                           11230 * rkt_rk->rk_conf.max_msg_size"));
0000757E E3F0 D0A8 0004          000000A8  11231          LG    15,168(0,13) ; len
00007584 E310 4060 0004          00000060  11232          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
0000758A E310 1148 0004          00000148  11233          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
00007590 E310 12F4 0014          000002F4  11234          LGF   1,756(0,1)
00007596 B921 00F1                         11235          CLGR  15,1
0000759A 47D0 C202               000075DA  11236          BNH   @L843
0000759E                                   11237 @L842    DS    0H
0000759E E3F0 C0E0 0004          000074B8  11238          LG    15,@lit_1955_433
000075A4 41F0 F314               00000314  11239          LA    15,788(0,15)
000075A8 E3F0 D1B0 0024          000001B0  11240          STG   15,432(0,13)
000075AE E3F0 C0D8 0004          000074B0  11241          LG    15,@lit_1955_434
000075B4 4110 F22C               0000022C  11242          LA    1,556(0,15)
000075B8 E310 D1B8 0024          000001B8  11243          STG   1,440(0,13)
000075BE E548 D1C0 0570          000001C0  11244          MVGHI 448(13),1392
000075C4 41F0 F674               00000674  11245          LA    15,1652(0,15)
000075C8 E3F0 D1C8 0024          000001C8  11246          STG   15,456(0,13)
000075CE 4110 D1B0               000001B0  11247          LA    1,432(0,13)
                                                                                                                           Page  226 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000075D2 E3F0 C0D0 0004          000074A8  11248          LG    15,@lit_1955_435 ; __assert
000075D8                                   11249 @@gen_label593 DS    0H
000075D8 05EF                              11250          BALR  14,15
000075DA                                   11251 @@gen_label594 DS    0H
000075DA                                   11252 @L843    DS    0H
                                           11253 * ***
                                           11254 * ***           rd_atomic64_add(&rktp->rktp_c.tx_msgs, cnt);
000075DA 41F0 4420               00000420  11255          LA    15,1056(0,4)
000075DE E3F0 D1B0 0024          000001B0  11256          STG   15,432(0,13)
000075E4 B914 00F5                         11257          LGFR  15,5
000075E8 E3F0 D1B8 0024          000001B8  11258          STG   15,440(0,13)
000075EE 4110 D1B0               000001B0  11259          LA    1,432(0,13)
000075F2 E370 C0E8 0004          000074C0  11260          LG    7,@lit_1955_439 ; rd_atomic64_add
000075F8 B904 00F7                         11261          LGR   15,7
000075FC                                   11262 @@gen_label595 DS    0H
000075FC 05EF                              11263          BALR  14,15
000075FE                                   11264 @@gen_label596 DS    0H
                                           11265 * ***           rd_atomic64_add(&rktp->rktp_c.tx_msg_bytes, msetw->mse\
                                           11266 * tw_messages_kvlen);
000075FE 41F0 4450               00000450  11267          LA    15,1104(0,4)
00007602 E3F0 D1B0 0024          000001B0  11268          STG   15,432(0,13)
00007608 E3F0 2028 0004          00000028  11269          LG    15,40(0,2)  ; offset of msetw_messages_kvlen in rd_kafka*
                                                                _msgset_writer_s
0000760E E3F0 D1B8 0024          000001B8  11270          STG   15,440(0,13)
00007614 4110 D1B0               000001B0  11271          LA    1,432(0,13)
00007618 B904 00F7                         11272          LGR   15,7
0000761C                                   11273 @@gen_label597 DS    0H
0000761C 05EF                              11274          BALR  14,15
0000761E                                   11275 @@gen_label598 DS    0H
                                           11276 * ***
                                           11277 * ***
                                           11278 * ***
                                           11279 * ***
                                           11280 * ***
                                           11281 * ***           msetw->msetw_rkbuf->rkbuf_u.Produce.batch.pid = msetw-\
                                           11282 * >msetw_pid;
0000761E E3F0 2000 0004          00000000  11283          LG    15,0(0,2)   ; msetw
00007624 D20F F1B8 2078 000001B8 00000078  11284          MVC   440(16,15),120(2)
                                           11285 * ***
                                           11286 * ***
                                           11287 * ***           if (msetw->msetw_compression) {
0000762A E3F0 2014 0012          00000014  11288          LT    15,20(0,2)  ; offset of msetw_compression in rd_kafka_ms*
                                                                gset_writer_s
00007630 4780 C286               0000765E  11289          BZ    @L844
                                           11290 * ***                   if (rd_kafka_msgset_writer_compress(msetw, &le\
                                           11291 * n) == -1)
00007634 E320 D1B0 0024          000001B0  11292          STG   2,432(0,13)
0000763A 41F0 D0A8               000000A8  11293          LA    15,168(0,13)
0000763E E3F0 D1B8 0024          000001B8  11294          STG   15,440(0,13)
00007644 4110 D1B0               000001B0  11295          LA    1,432(0,13)
00007648 E3F0 C0F0 0004          000074C8  11296          LG    15,@lit_1955_441 ; rd_kafka_msgset_writer_compress
0000764E                                   11297 @@gen_label600 DS    0H
                                                                                                                           Page  227 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000764E 05EF                              11298          BALR  14,15
00007650                                   11299 @@gen_label601 DS    0H
00007650 A7FE FFFF               0000FFFF  11300          CHI   15,-1
00007654 4770 C286               0000765E  11301          BNE   @L844
                                           11302 * ***                           msetw->msetw_compression = 0;
00007658 E54C 2014 0000          00000014  11303          MVHI  20(2),0     ; offset of msetw_compression in rd_kafka_ms*
                                                                gset_writer_s
0000765E                                   11304 @L845    DS    0H
                                           11305 * ***           }
0000765E                                   11306 @L844    DS    0H
                                           11307 * ***
                                           11308 * ***           msetw->msetw_messages_len = len;
0000765E E3F0 D0A8 0004          000000A8  11309          LG    15,168(0,13) ; len
00007664 E3F0 2020 0024          00000020  11310          STG   15,32(0,2)  ; offset of msetw_messages_len in rd_kafka_m*
                                                                sgset_writer_s
                                           11311 * ***
                                           11312 * ***
                                           11313 * ***           rd_kafka_msgset_writer_finalize_MessageSet(msetw);
0000766A E320 D1B0 0024          000001B0  11314          STG   2,432(0,13)
00007670 4110 D1B0               000001B0  11315          LA    1,432(0,13)
00007674 E3F0 C0F8 0004          000074D0  11316          LG    15,@lit_1955_442 ; rd_kafka_msgset_writer_finalize_Messa*
                                                                geSet
0000767A                                   11317 @@gen_label603 DS    0H
0000767A 05EF                              11318          BALR  14,15
0000767C                                   11319 @@gen_label604 DS    0H
                                           11320 * ***
                                           11321 * ***
                                           11322 * ***           *MessageSetSizep = msetw->msetw_MessageSetSize;
0000767C E3F0 6008 0004          00000008  11323          LG    15,8(0,6)   ; MessageSetSizep
00007682 E310 2030 0004          00000030  11324          LG    1,48(0,2)   ; offset of msetw_MessageSetSize in rd_kafka*
                                                                _msgset_writer_s
00007688 E310 F000 0024          00000000  11325          STG   1,0(0,15)   ; MessageSetSizep
                                           11326 * ***
                                           11327 * ***           do { if ((((msetw->msetw_rkb)->rkb_rk->rk_conf.debug &\
                                           11328 *  (0x40)))) { do { char _logname[256]; mtx_lock(&(msetw->msetw_rkb)->\
                                           11329 * rkb_logname_lock); rd_strlcpy(_logname, msetw->msetw_rkb->rkb_lognam\
                                           11330 * e, sizeof(_logname)); mtx_unlock(&(msetw->msetw_rkb)->rkb_logname_lo\
                                           11331 * ck); rd_kafka_log0(&(msetw->msetw_rkb)->rkb_rk->rk_conf, (msetw->mse\
                                           11332 * tw_rkb)->rkb_rk, _logname, 7, (0x40), "PRODUCE", "%s [%" "d" "]: " "\
                                           11333 * Produce MessageSet with %i message(s) (%" "zu" " bytes, " "ApiVersio\
                                           11334 * n %d, MsgVersion %d, MsgId %" "llu" ", " "BaseSeq %" "d" ", %s, %s)"\
                                           11335 * , rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partition, cnt, msetw->\
                                           11336 * msetw_MessageSetSize, msetw->msetw_ApiVersion, msetw->msetw_MsgVersi\
                                           11337 * on, msetw->msetw_batch->first_msgid, msetw->msetw_batch->first_seq, \
                                           11338 * rd_kafka_pid2str(msetw->msetw_pid), msetw->msetw_compression ? rd_ka\
                                           11339 * fka_compression2str(msetw->msetw_compression) : "uncompressed"); } w\
                                           11340 * hile (0); } } while (0);
0000768E                                   11341 @L846    DS    0H
0000768E E3F0 2088 0004          00000088  11342          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00007694 E3F0 FFD0 0004          00000FD0  11343          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000769A 9140 F323      00000323 00000040  11344          TM    803(15),64
                                                                                                                           Page  228 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000769E 4780 C466               0000783E  11345          BZ    @L849
000076A2                                   11346 @L850    DS    0H
000076A2 E3F0 2088 0004          00000088  11347          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
000076A8 A769 1638               00001638  11348          LGHI  6,5688      ; 5688
000076AC 41F6 F000               00000000  11349          LA    15,0(6,15)
000076B0 E3F0 D1B0 0024          000001B0  11350          STG   15,432(0,13)
000076B6 4110 D1B0               000001B0  11351          LA    1,432(0,13)
000076BA E3F0 C100 0004          000074D8  11352          LG    15,@lit_1955_444 ; mtx_lock
000076C0                                   11353 @@gen_label606 DS    0H
000076C0 05EF                              11354          BALR  14,15
000076C2                                   11355 @@gen_label607 DS    0H
000076C2 41F0 D0B0               000000B0  11356          LA    15,176(0,13)
000076C6 E3F0 D1B0 0024          000001B0  11357          STG   15,432(0,13)
000076CC E3F0 2088 0004          00000088  11358          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
000076D2 A719 1630               00001630  11359          LGHI  1,5680      ; 5680
000076D6 E3F1 F000 0004          00000000  11360          LG    15,0(1,15)
000076DC E3F0 D1B8 0024          000001B8  11361          STG   15,440(0,13)
000076E2 E548 D1C0 0100          000001C0  11362          MVGHI 448(13),256
000076E8 4110 D1B0               000001B0  11363          LA    1,432(0,13)
000076EC E3F0 C108 0004          000074E0  11364          LG    15,@lit_1955_446 ; rd_strlcpy
000076F2                                   11365 @@gen_label608 DS    0H
000076F2 05EF                              11366          BALR  14,15
000076F4                                   11367 @@gen_label609 DS    0H
000076F4 E3F0 2088 0004          00000088  11368          LG    15,136(0,2) ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
000076FA 41F6 F000               00000000  11369          LA    15,0(6,15)
000076FE E3F0 D1B0 0024          000001B0  11370          STG   15,432(0,13)
00007704 4110 D1B0               000001B0  11371          LA    1,432(0,13)
00007708 E3F0 C110 0004          000074E8  11372          LG    15,@lit_1955_448 ; mtx_unlock
0000770E                                   11373 @@gen_label610 DS    0H
0000770E 05EF                              11374          BALR  14,15
00007710                                   11375 @@gen_label611 DS    0H
00007710 D20F D1B0 2078 000001B0 00000078  11376          MVC   432(16,13),120(2)
00007716 4110 D1B0               000001B0  11377          LA    1,432(0,13)
0000771A E3F0 C118 0004          000074F0  11378          LG    15,@lit_1955_449 ; rd_kafka_pid2str
00007720                                   11379 @@gen_label612 DS    0H
00007720 05EF                              11380          BALR  14,15
00007722                                   11381 @@gen_label613 DS    0H
00007722 B904 006F                         11382          LGR   6,15
00007726 E3F0 2014 0012          00000014  11383          LT    15,20(0,2)  ; offset of msetw_compression in rd_kafka_ms*
                                                                gset_writer_s
0000772C 4780 C374               0000774C  11384          BZ    @L853
00007730 E3F0 2014 0014          00000014  11385          LGF   15,20(0,2)
00007736 E3F0 D1B0 0024          000001B0  11386          STG   15,432(0,13)
0000773C 4110 D1B0               000001B0  11387          LA    1,432(0,13)
00007740 E3F0 C120 0004          000074F8  11388          LG    15,@lit_1955_450 ; rd_kafka_compression2str
00007746                                   11389 @@gen_label615 DS    0H
00007746 05EF                              11390          BALR  14,15
00007748                                   11391 @@gen_label616 DS    0H
00007748 47F0 C37E               00007756  11392          B     @L854
                                                                                                                           Page  229 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000774C                                   11393 @L853    DS    0H
0000774C E3F0 C0D8 0004          000074B0  11394          LG    15,@lit_1955_434
00007752 41F0 F6B0               000006B0  11395          LA    15,1712(0,15)
00007756                                   11396 @L854    DS    0H
00007756 E310 2088 0004          00000088  11397          LG    1,136(0,2)  ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
0000775C E310 1FD0 0004          00000FD0  11398          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00007762 4110 1210               00000210  11399          LA    1,528(0,1)
00007766 E310 D1B0 0024          000001B0  11400          STG   1,432(0,13)
0000776C E310 2088 0004          00000088  11401          LG    1,136(0,2)  ; offset of msetw_rkb in rd_kafka_msgset_wri*
                                                                ter_s
00007772 E310 1FD0 0004          00000FD0  11402          LG    1,4048(0,1)
00007778 E310 D1B8 0024          000001B8  11403          STG   1,440(0,13)
0000777E 4110 D0B0               000000B0  11404          LA    1,176(0,13)
00007782 E310 D1C0 0024          000001C0  11405          STG   1,448(0,13)
00007788 E548 D1C8 0007          000001C8  11406          MVGHI 456(13),7
0000778E E548 D1D0 0040          000001D0  11407          MVGHI 464(13),64
00007794 E310 C0D8 0004          000074B0  11408          LG    1,@lit_1955_434
0000779A 4170 11C2               000001C2  11409          LA    7,450(0,1)
0000779E E370 D1D8 0024          000001D8  11410          STG   7,472(0,13)
000077A4 4110 16BE               000006BE  11411          LA    1,1726(0,1)
000077A8 E310 D1E0 0024          000001E0  11412          STG   1,480(0,13)
000077AE E310 4060 0004          00000060  11413          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
000077B4 E310 1080 0004          00000080  11414          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
000077BA E310 1008 0004          00000008  11415          LG    1,8(0,1)
000077C0 E310 D1E8 0024          000001E8  11416          STG   1,488(0,13)
000077C6 E310 4068 0014          00000068  11417          LGF   1,104(0,4)
000077CC E310 D1F0 0024          000001F0  11418          STG   1,496(0,13)
000077D2 B914 0015                         11419          LGFR  1,5
000077D6 E310 D1F8 0024          000001F8  11420          STG   1,504(0,13)
000077DC E310 2030 0004          00000030  11421          LG    1,48(0,2)
000077E2 E310 D200 0024          00000200  11422          STG   1,512(0,13)
000077E8 4810 2008               00000008  11423          LH    1,8(0,2)
000077EC B914 0011                         11424          LGFR  1,1
000077F0 E310 D208 0024          00000208  11425          STG   1,520(0,13)
000077F6 E310 200C 0014          0000000C  11426          LGF   1,12(0,2)
000077FC E310 D210 0024          00000210  11427          STG   1,528(0,13)
00007802 E310 2060 0004          00000060  11428          LG    1,96(0,2)   ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
00007808 E310 1040 0004          00000040  11429          LG    1,64(0,1)
0000780E E310 D218 0024          00000218  11430          STG   1,536(0,13)
00007814 E310 2060 0004          00000060  11431          LG    1,96(0,2)   ; offset of msetw_batch in rd_kafka_msgset_w*
                                                                riter_s
0000781A E310 1038 0014          00000038  11432          LGF   1,56(0,1)
00007820 E310 D220 0024          00000220  11433          STG   1,544(0,13)
00007826 E360 D228 0024          00000228  11434          STG   6,552(0,13)
0000782C E3F0 D230 0024          00000230  11435          STG   15,560(0,13)
00007832 4110 D1B0               000001B0  11436          LA    1,432(0,13)
00007836 E3F0 C128 0004          00007500  11437          LG    15,@lit_1955_453 ; rd_kafka_log0
0000783C                                   11438 @@gen_label617 DS    0H
0000783C 05EF                              11439          BALR  14,15
0000783E                                   11440 @@gen_label618 DS    0H
                                                                                                                           Page  230 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000783E                                   11441 @L849    DS    0H
                                           11442 * ***
                                           11443 * ***   # 1432 "C:\asgkafka\librdkafka\src\rdkafka_msgset_writer.c"
                                           11444 * ***           do { } while (0);
0000783E                                   11445 @L855    DS    0H
                                           11446 * ***
                                           11447 * ***
                                           11448 * ***           rd_kafka_msgbatch_ready_produce(msetw->msetw_batch);
0000783E E3F0 2060 0004          00000060  11449          LG    15,96(0,2)
00007844 E3F0 D1B0 0024          000001B0  11450          STG   15,432(0,13)
0000784A 4110 D1B0               000001B0  11451          LA    1,432(0,13)
0000784E E3F0 C130 0004          00007508  11452          LG    15,@lit_1955_454 ; rd_kafka_msgbatch_ready_produce
00007854                                   11453 @@gen_label619 DS    0H
00007854 05EF                              11454          BALR  14,15
00007856                                   11455 @@gen_label620 DS    0H
                                           11456 * ***
                                           11457 * ***           return rkbuf;
00007856 B904 00F3                         11458          LGR   15,3
                                           11459 * ***   }
0000785A                                   11460 @ret_lab_1955 DS 0H
                                           11461 * * **** Start of Epilogue
                                           11462          DCCEPIL
0000785A                                   11463+         ds 0h                                                          01-DCCEP
                                           11464+* Epilog
0000785A D707 D088 D088 00000088 00000088  11465+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007860 E3D0 D080 0004          00000080  11466+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007866 E3C0 D090 0004          00000090  11467+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000786C E3B0 C018 0004          00000018  11468+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007872 E3C0 B010 0021          00000010  11469+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007878 E3E0 D008 0004          00000008  11470+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000787E EB1C D020 0004          00000020  11471+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007884 078E                              11472+         bcr 8,14                if same dsab, just return              01-DCCEP
00007886 E3F0 D010 0024          00000010  11473+         stg 15,16(0,13)         save return code                       01-DCCEP
0000788C E300 D018 0024          00000018  11474+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007892 E3F0 D090 0004          00000090  11475+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007898 E3F0 F018 0004          00000018  11476+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000789E 47F0 F040               00000040  11477+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11478+* End of Epilog
                                           11479 * * **** End of Epilogue
                                           11480          DROP  12
                                           11481 *
                                           11482 *   DSECT for automatic variables in "rd_kafka_msgset_writer_finalize"
                                           11483 *      (FUNCTION #1955)
                                           11484 *
00000000                00000000 000001B0  11485 @AUTO#rd_kafka_msgset_writer_finalize DSECT
00000000                                   11486          DS    XL168
000000A8                                   11487 rd_kafka_msgset_writer_finalize#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8  11488          ORG   @AUTO#rd_kafka_msgset_writer_finalize+168
000000A8                                   11489 rd_kafka_msgset_writer_finalize#len#0 DS 8XL1 ; len
000000B0                000000B0 000000B0  11490          ORG   @AUTO#rd_kafka_msgset_writer_finalize+176
000000B0                                   11491 rd_kafka_msgset_writer_finalize#_logname#6 DS 256XL1 ; _logname
                                           11492 *
                                                                                                                           Page  231 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000078A2                00000000 00007AB2  11493 @CODE    CSECT
                                           11494 *
                                           11495 *
                                           11496 *
                                           11497 * ....... start of rd_kafka_msgset_create_ProduceRequest
                                           11498 rd_kafka_msgset_create_$Produce$Request ALIAS X'99846D92818692816D94A28*
                                                                7A285A36D83998581A3856DD7999684A48385D98598A485A2A3'
000078A2                                   11499 @LNAME1921 DS  0H
000078A2 00000025                          11500          DC    X'00000025'
000078A6 99846D9281869281                  11501          DC    C'rd_kafka_msgset_create_ProduceRe'
000078C6 98A485A2A3                        11502          DC    C'quest'
000078CB 00                                11503          DC    X'00'
                                           11504 rd_kafka_msgset_create_$Produce$Request DCCPRLG CINDEX=1921,BASER=12,FR*
                                                                AME=384,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1921
                                           11505          macro
                                           11506          dccextrn &m
                                           11507          gblc    &$dccext(1000)
                                           11508          gbla    &$dccexti
                                           11509          lcla    &i
                                           11510 &$dccext(&$dccexti+1) setc    '&m'
                                           11511 &i       seta    1
                                           11512 .loop    aif    (&i gt &$dccexti).around
                                           11513          aif    ('&$dccext(&i)' eq '&m').getout
                                           11514 &i       seta    &i+1
                                           11515          ago     .loop
                                           11516 .around  anop
                                           11517 &$dccexti seta &$dccexti+1
                                           11518          extrn  &m
                                           11519 .getout  anop
                                           11520          mend
000078D0                                   11521+$eye0201    ds    0d                                                    02-DCCCA
000078D0 C4C3C3                            11522+         dc cl3'DCC'                                                    02-DCCCA
000078D3 01                                11523+         dc xl1'01' format one                                          02-DCCCA
000078D4 00000000                          11524+         dc a(0)                                                        02-DCCCA
000078D8 0000000000007942                  11525+         dc ad(@PER_1921)                                               02-DCCCA
000078E0 0000000000000180                  11526+         dc ad(384)                                                     02-DCCCA
000078E8 0000000000000000                  11527+         dc ad(0)                                                       02-DCCCA
000078F0 0000000000001000                  11528+         dc ad(4096)                                                    02-DCCCA
000078F8 20                                11529+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000078F9 03                                11530+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000078FA 03                                11531+         dc al1(3)                                                      02-DCCCA
000078FB 08                                11532+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000078FC 00                                11533+         dc bl.8'00000000'                                              02-DCCCA
000078FD 000000                            11534+         dc al3(0)                                                      02-DCCCA
00007900 00000000000078A2                  11535+         dc ad(@LNAME1921)                                              02-DCCCA
00007908                                   11536+         ds 0d                                                          02-DCCCA
00007908 00000000000078D0                  11537+         dc ad($eye0201)                                                02-DCCCA
00007910 0000000000000000                  11538+         dc ad(0)                                                       02-DCCCA
00007918                                   11539+         ds    0d                                                       01-DCCPR
                                           11540+         entry rd_kafka_msgset_create_$Produce$Request                  01-DCCPR
00007918                                   11541+rd_kafka_msgset_create_$Produce$Request ds 0d                           01-DCCPR
00007918                                   11542+@REGION_1921_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page  232 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007918 EBEC D008 0024          00000008  11543+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000791E E3E0 D088 0004          00000088  11544+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00007924 E3C0 D090 0004          00000090  11545+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000792A B904 002E                         11546+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000792E E3B0 C018 0004          00000018  11547+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00007934 A7EB 0180               00000180  11548+         aghi  14,384              increase by frame size               01-DCCPR
00007938 E3E0 C020 0021          00000020  11549+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000793E 4720 B020               00000020  11550+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007942                                   11551+@PER_1921 ds   0h                                                       01-DCCPR
00007942 EBDE 2080 0024          00000080  11552+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007948 E3C0 2090 0024          00000090  11553+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000794E B904 00D2                         11554+         lgr   13,2                set real frame pointer               01-DCCPR
00007952 B904 00CF                         11555+         lgr   12,15               set base reg                         01-DCCPR
                        00007918           11556+         using @REGION_1921_1,12                                        01-DCCPR
00007956 B904 0021                         11557          LGR   2,1         ; ptr to parm area
                                           11558 * ******* End of Prologue
                                           11559 * *
                                           11560 * ***
                                           11561 * ***           rd_kafka_msgset_writer_t msetw;
                                           11562 * ***
                                           11563 * ***           if (rd_kafka_msgset_writer_init(&msetw, rkb, rktp, rkm\
                                           11564 * q,
                                           11565 * ***                                           pid, epoch_base_msgid)\
                                           11566 *  <= 0)
0000795A 41F0 D0A8               000000A8  11567          LA    15,168(0,13)
0000795E E3F0 D148 0024          00000148  11568          STG   15,328(0,13)
00007964 E3F0 2000 0004          00000000  11569          LG    15,0(0,2)   ; rkb
0000796A E3F0 D150 0024          00000150  11570          STG   15,336(0,13)
00007970 E3F0 2008 0004          00000008  11571          LG    15,8(0,2)   ; rktp
00007976 E3F0 D158 0024          00000158  11572          STG   15,344(0,13)
0000797C E3F0 2010 0004          00000010  11573          LG    15,16(0,2)  ; rkmq
00007982 E3F0 D160 0024          00000160  11574          STG   15,352(0,13)
00007988 D20F D168 2018 00000168 00000018  11575          MVC   360(16,13),24(2)
0000798E E3F0 2028 0004          00000028  11576          LG    15,40(0,2)  ; epoch_base_msgid
00007994 E3F0 D178 0024          00000178  11577          STG   15,376(0,13)
0000799A 4110 D148               00000148  11578          LA    1,328(0,13)
0000799E E3F0 C0A8 0004          000079C0  11579          LG    15,@lit_1921_456 ; rd_kafka_msgset_writer_init
000079A4                                   11580 @@gen_label621 DS    0H
000079A4 05EF                              11581          BALR  14,15
000079A6                                   11582 @@gen_label622 DS    0H
000079A6 12FF                              11583          LTR   15,15
000079A8 4720 C0C8               000079E0  11584          BH    @L858
                                           11585 * ***                   return ((void *)0);
000079AC A7F9 0000               00000000  11586          LGHI  15,0        ; 0
000079B0 47F0 C152               00007A6A  11587          B     @ret_lab_1921
000079B8                                   11588          DS    0D
000079B8 00000180                          11589 @FRAMESIZE_1921 DC F'384'
000079BC 00000000
000079C0 00000000000049B0                  11590 @lit_1921_456 DC AD(rd_kafka_msgset_writer_init)
000079C8 0000000000005A60                  11591 @lit_1921_458 DC AD(rd_kafka_msgset_writer_write_msgq)
000079D0 0000000000000000                  11592 @lit_1921_459 DC AD(rd_kafka_msgq_insert_msgq)
000079D8 00000000000073D8                  11593 @lit_1921_460 DC AD(rd_kafka_msgset_writer_finalize)
                                                                                                                           Page  233 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000079E0                                   11594 @L858    DS    0H
                                           11595 * ***
                                           11596 * ***           if (!rd_kafka_msgset_writer_write_msgq(&msetw, msetw.m\
                                           11597 * setw_msgq)) {
000079E0 41F0 D0A8               000000A8  11598          LA    15,168(0,13)
000079E4 E3F0 D148 0024          00000148  11599          STG   15,328(0,13)
000079EA E3F0 D140 0004          00000140  11600          LG    15,320(0,13)
000079F0 E3F0 D150 0024          00000150  11601          STG   15,336(0,13)
000079F6 4110 D148               00000148  11602          LA    1,328(0,13)
000079FA E3F0 C0B0 0004          000079C8  11603          LG    15,@lit_1921_458 ; rd_kafka_msgset_writer_write_msgq
00007A00                                   11604 @@gen_label624 DS    0H
00007A00 05EF                              11605          BALR  14,15
00007A02                                   11606 @@gen_label625 DS    0H
00007A02 12FF                              11607          LTR   15,15
00007A04 4770 C130               00007A48  11608          BNZ   @L859
                                           11609 * ***
                                           11610 * ***
                                           11611 * ***                   rd_kafka_msgq_insert_msgq(
                                           11612 * ***                           rkmq, &msetw.msetw_batch->msgq,
                                           11613 * ***                           rktp->rktp_rkt->rkt_conf.msg_order_cmp\
                                           11614 * );
00007A08 E3F0 2010 0004          00000010  11615          LG    15,16(0,2)  ; rkmq
00007A0E E3F0 D148 0024          00000148  11616          STG   15,328(0,13)
00007A14 E3F0 D108 0004          00000108  11617          LG    15,264(0,13) ; offset of msetw_batch in rd_kafka_msgset_*
                                                                writer_s
00007A1A 41F0 F008               00000008  11618          LA    15,8(0,15)
00007A1E E3F0 D150 0024          00000150  11619          STG   15,336(0,13)
00007A24 E3F0 2008 0004          00000008  11620          LG    15,8(0,2)   ; rktp
00007A2A E3F0 F060 0004          00000060  11621          LG    15,96(0,15) ; offset of rktp_rkt in rd_kafka_toppar_s
00007A30 E3F0 F3C8 0004          000003C8  11622          LG    15,968(0,15)
00007A36 E3F0 D158 0024          00000158  11623          STG   15,344(0,13)
00007A3C 4110 D148               00000148  11624          LA    1,328(0,13)
00007A40 E3F0 C0B8 0004          000079D0  11625          LG    15,@lit_1921_459 ; rd_kafka_msgq_insert_msgq
00007A46                                   11626 @@gen_label627 DS    0H
00007A46 05EF                              11627          BALR  14,15
00007A48                                   11628 @@gen_label628 DS    0H
                                           11629 * ***           }
00007A48                                   11630 @L859    DS    0H
                                           11631 * ***
                                           11632 * ***           return rd_kafka_msgset_writer_finalize(&msetw, Message\
                                           11633 * SetSizep);
00007A48 41F0 D0A8               000000A8  11634          LA    15,168(0,13)
00007A4C E3F0 D148 0024          00000148  11635          STG   15,328(0,13)
00007A52 E3F0 2030 0004          00000030  11636          LG    15,48(0,2)  ; MessageSetSizep
00007A58 E3F0 D150 0024          00000150  11637          STG   15,336(0,13)
00007A5E 4110 D148               00000148  11638          LA    1,328(0,13)
00007A62 E3F0 C0C0 0004          000079D8  11639          LG    15,@lit_1921_460 ; rd_kafka_msgset_writer_finalize
00007A68                                   11640 @@gen_label629 DS    0H
00007A68 05EF                              11641          BALR  14,15
00007A6A                                   11642 @@gen_label630 DS    0H
                                           11643 * ***   }
00007A6A                                   11644 @ret_lab_1921 DS 0H
                                                                                                                           Page  234 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11645 * * **** Start of Epilogue
                                           11646          DCCEPIL
00007A6A                                   11647+         ds 0h                                                          01-DCCEP
                                           11648+* Epilog
00007A6A D707 D088 D088 00000088 00000088  11649+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007A70 E3D0 D080 0004          00000080  11650+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007A76 E3C0 D090 0004          00000090  11651+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007A7C E3B0 C018 0004          00000018  11652+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007A82 E3C0 B010 0021          00000010  11653+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007A88 E3E0 D008 0004          00000008  11654+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007A8E EB1C D020 0004          00000020  11655+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007A94 078E                              11656+         bcr 8,14                if same dsab, just return              01-DCCEP
00007A96 E3F0 D010 0024          00000010  11657+         stg 15,16(0,13)         save return code                       01-DCCEP
00007A9C E300 D018 0024          00000018  11658+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007AA2 E3F0 D090 0004          00000090  11659+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007AA8 E3F0 F018 0004          00000018  11660+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007AAE 47F0 F040               00000040  11661+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11662+* End of Epilog
                                           11663 * * **** End of Epilogue
                                           11664          DROP  12
                                           11665 *
                                           11666 *   DSECT for automatic variables in "rd_kafka_msgset_create_ProduceRe
                                           11667 *           quest"
                                           11668 *      (FUNCTION #1921)
                                           11669 *
00000000                00000000 00000148  11670 @AUTO#rd_kafka_msgset_create_$Produce$Request DSECT
00000000                                   11671          DS    XL168
000000A8                                   11672 rd_kafka_msgset_create_$Produce$Request#msetw#0 DS 160XL1 ; msetw
                                           11673 *
00007AB2                00000000 00007AB2  11674 @CODE    CSECT
                                           11675 @@STATIC ALIAS X'7C998492818692816D94A287A285A36DA69989A3859950'
                                           11676 @@STATIC DXD   219D
                                           11677 *
                                           11678 *  Non-Re-Entrant Data Section
                                           11679 *
00007AB8                00007AB8 00000FA6  11680 @DATA    CSECT
                                           11681 @DATA    RMODE ANY
                                           11682 @DATA    AMODE ANY
00007AB8 99846D8381939396                  11683 @@T349   DC    X'99846D838193939683'               rd.calloc
00007AC1 00                                11684          DC    1X'00'
00007AC2 99846D9481939396                  11685 @@T34D   DC    X'99846D948193939683'               rd.malloc
00007ACB 00                                11686          DC    1X'00'
00007ACC 99846D9985819393                  11687 @@T352   DC    X'99846D99858193939683'             rd.realloc
00007AD6 0000                              11688          DC    2X'00'
00007AD8 99846DA2A39984A4                  11689 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00007AE1 00                                11690          DC    1X'00'
00007AE2 99846DA2A3999584                  11691 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
00007AEC 0000                              11692          DC    2X'00'
00007AEE 99846D9985868395                  11693 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00007AFC 00000000                          11694          DC    4X'00'
00007B00 00000000                          11695 @@T65A   DC    4X'00'
00007B04 0000001A00000000                  11696          DC    X'0000001A000000000000002200000000' ................
                                                                                                                           Page  235 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007B14 00000024                          11697          DC    X'00000024'                         ....
00007B18 99846D9281869281                  11698 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00007B28 98                                11699          DC    X'98'                               q
00007B29 00                                11700          DC    1X'00'
00007B2A 99846D9281869281                  11701 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
00007B3A 96A8F0                            11702          DC    X'96A8F0'                           oy0
00007B3D 00                                11703          DC    1X'00'
00007B3E 99846D9281869281                  11704 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007B4E 856D8485A2A39996                  11705          DC    X'856D8485A2A39996A8F0'             e.destroy0
00007B58 0000                              11706          DC    2X'00'
00007B5A 99846D9281869281                  11707 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007B6A 856D8485936DA296                  11708          DC    X'856D8485936DA296A4998385'         e.del.source
00007B76 0000                              11709          DC    2X'00'
00007B78 99846D9281869281                  11710 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007B88 856D8485936DA296                  11711          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00007B98 A49995                            11712          DC    X'A49995'                           urn
00007B9B 00                                11713          DC    1X'00'
00007B9C 99846D9281869281                  11714 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007BAC 856DA39989878785                  11715          DC    X'856DA3998987878599'               e.trigger
00007BB5 00                                11716          DC    1X'00'
00007BB6 99846D9281869281                  11717 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007BC6 856D8485A2A39996                  11718          DC    X'856D8485A2A39996A8'               e.destroy
00007BCF 00                                11719          DC    1X'00'
00007BD0 99846D9281869281                  11720 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007BE0 856D8489A2818293                  11721          DC    X'856D8489A281829385'               e.disable
00007BE9 00                                11722          DC    1X'00'
00007BEA 99846DA394978182                  11723 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
00007BFA F0                                11724          DC    X'F0'                               0
00007BFB 00                                11725          DC    1X'00'
00007BFC 99846D9281869281                  11726 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
00007C0C 81A385                            11727          DC    X'81A385'                           ate
00007C0F 00                                11728          DC    1X'00'
00007C10 99846D9281869281                  11729 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
00007C20 819389A9856D8199                  11730          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
00007C2E 0000                              11731          DC    2X'00'
00007C30 99846D9281869281                  11732 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
00007C40 6D899589A3                        11733          DC    X'6D899589A3'                       .init
00007C45 00                                11734          DC    1X'00'
00007C46 99846D9281869281                  11735 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
00007C56 87A26DA2A482                      11736          DC    X'87A26DA2A482'                     gs.sub
00007C5C 0000                              11737          DC    2X'00'
00007C5E 0007                              11738 rd_kafka_$Produce$Request_max_version DC    X'0007' ..
00007C60 0000000000000000                  11739 @@TA6F   DC    24X'00'
00007C78 00000080                          11740          DC    X'00000080'                         ....
00007C7C 0000000000000000                  11741          DC    20X'00'
00007C90 99846D9281869281                  11742 @@TA77   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00007CA0 A69989A385996DA2                  11743          DC    X'A69989A385996DA285938583A36DD4A2' writer.select.Ms
00007CB0 87E58599A2899695                  11744          DC    X'87E58599A2899695'                 gVersion
00007CB8 0000                              11745          DC    2X'00'
00007CBA 99846D9281869281                  11746 @@TA7F   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00007CCA A69989A385996D81                  11747          DC    X'A69989A385996D81939396836D82A486' writer.alloc.buf
00007CDA 0000                              11748          DC    2X'00'
                                                                                                                           Page  236 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007CDC 99846D9281869281                  11749 @@TA87   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00007CEC A69989A385996DA6                  11750          DC    X'A69989A385996DA69989A3856DD485A2' writer.write.Mes
00007CFC A2818785E285A36D                  11751          DC    X'A2818785E285A36DA5F26D8885818485' sageSet.v2.heade
00007D0C 99                                11752          DC    X'99'                               r
00007D0D 00                                11753          DC    1X'00'
00007D0E 99846D9281869281                  11754 @@TAD0   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00007D1E A69989A385996DA6                  11755          DC    X'A69989A385996DA69989A3856D94A287' writer.write.msg
00007D2E 0000                              11756          DC    2X'00'
00007D30 99846D9281869281                  11757 @@TADE   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00007D40 A69989A385996DA6                  11758          DC    X'A69989A385996DA69989A3856D94A287' writer.write.msg
00007D50 98                                11759          DC    X'98'                               q
00007D51 00                                11760          DC    1X'00'
00007D52 99846D9281869281                  11761 @@TB03   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00007D62 A69989A385996D83                  11762          DC    X'A69989A385996D839694979985A2A2'   writer.compress
00007D71 00                                11763          DC    1X'00'
00007D72 99846D9281869281                  11764 @@TB0A   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00007D82 A69989A385996D83                  11765          DC    X'A69989A385996D838193836D8399836D' writer.calc.crc.
00007D92 A5F2                              11766          DC    X'A5F2'                             v2
00007D94 0000                              11767          DC    2X'00'
00007D96 99846D9281869281                  11768 @@TB0F   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00007DA6 A69989A385996D86                  11769          DC    X'A69989A385996D868995819389A9856D' writer.finalize.
00007DB6 D485A2A2818785E2                  11770          DC    X'D485A2A2818785E285A36DA5F26D8885' MessageSet.v2.he
00007DC6 81848599                          11771          DC    X'81848599'                         ader
00007DCA 0000                              11772          DC    2X'00'
00007DCC 99846D9281869281                  11773 @@TB19   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00007DDC A69989A385996D86                  11774          DC    X'A69989A385996D868995819389A985'   writer.finalize
00007DEB 00                                11775          DC    1X'00'
00007DEC                                   11776 @strings@ DS   0H
00007DEC C37AE081A2879281                  11777          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00007DFC 849281869281E0A2                  11778          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00007E0C 97009985868395A3                  11779          DC    X'97009985868395A340A2A48260A98599' p.refcnt.sub.zer
00007E1C 96005A5C7F998586                  11780          DC    X'96005A5C7F9985868395A340A2A48260' o....refcnt.sub.
00007E2C A98599967F00D7C9                  11781          DC    X'A98599967F00D7C9C4C0C995A5819389' zero..PID.Invali
00007E3C 84D00000D7C9C4C0                  11782          DC    X'84D00000D7C9C4C0C9847A6C9393846B' d...PID.Id..lld.
00007E4C C5979683887A6C88                  11783          DC    X'C5979683887A6C8884D00000C37AE081' Epoch..hd...C..a
00007E5C A2879281869281E0                  11784          DC    X'A2879281869281E09389829984928186' sgkafka.librdkaf
00007E6C 9281E0A29983E099                  11785          DC    X'9281E0A29983E0998492818692816D94' ka.src.rdkafka.m
00007E7C A2874B88000081A2                  11786          DC    X'A2874B88000081A2A28599A37A409992' sg.h..assert..rk
00007E8C 9498606E99929498                  11787          DC    X'9498606E999294986D94A2876D8395A3' mq..rkmq.msg.cnt
00007E9C 406E40F0000081A2                  11788          DC    X'406E40F0000081A2A28599A37A409992' ...0..assert..rk
00007EAC 9498606E99929498                  11789          DC    X'9498606E999294986D94A2876D82A8A3' mq..rkmq.msg.byt
00007EBC 85A2406E7E404D89                  11790          DC    X'85A2406E7E404D8995A3F6F46DA35D4D' es.....int64.t..
00007ECC 999294606E999294                  11791          DC    X'999294606E9992946D9385954E999294' rkm..rkm.len.rkm
00007EDC 606E9992946D9285                  11792          DC    X'606E9992946D9285A86D9385955D0000' ..rkm.key.len...
00007EEC C37AE081A2879281                  11793          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00007EFC 849281869281E0A2                  11794          DC    X'849281869281E0A29983E09984928186' dkafka.src.rdkaf
00007F0C 92816D82A4864B88                  11795          DC    X'92816D82A4864B88000081A2A28599A3' ka.buf.h..assert
00007F1C 7A405A4D999282A4                  11796          DC    X'7A405A4D999282A486606E999282A486' ....rkbuf..rkbuf
00007F2C 6D86938187A24050                  11797          DC    X'6D86938187A2405040D9C46DD2C1C6D2' .flags...RD.KAFK
00007F3C C16DD6D76DC66DC3                  11798          DC    X'C16DD6D76DC66DC3D9C35D0083968485' A.OP.F.CRC..code
00007F4C 83F0A76CA76F0000                  11799          DC    X'83F0A76CA76F0000C3D6D4D7D9C5E2E2' c0x.x...COMPRESS
00007F5C C9D6D5006C4B5CA2                  11800          DC    X'C9D6D5006C4B5CA240AD6C84BD7A40C2' ION....s...d...B
                                                                                                                           Page  237 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007F6C 9996928599408496                  11801          DC    X'999692859940849685A2409596A340A2' roker.does.not.s
00007F7C A497979699A34083                  11802          DC    X'A497979699A340839694979985A2A289' upport.compressi
00007F8C 969540A3A8978540                  11803          DC    X'969540A3A89785406CA27A409596A340' on.type..s..not.
00007F9C 839694979985A2A2                  11804          DC    X'839694979985A2A2899587408281A383' compressing.batc
00007FAC 8800D7D9D6C4E4C3                  11805          DC    X'8800D7D9D6C4E4C3C5006C4B5CA240AD' h.PRODUCE....s..
00007FBC 6C84BD7A40D59640                  11806          DC    X'6C84BD7A40D59640A5898182938540D7' .d...No.viable.P
00007FCC 999684A48385D985                  11807          DC    X'999684A48385D98598A485A2A340C197' roduceRequest.Ap
00007FDC 89E58599A2899695                  11808          DC    X'89E58599A2899695A2404DA56C844B4B' iVersions..v.d..
00007FEC 6C845D40A2A49797                  11809          DC    X'6C845D40A2A497979699A385844082A8' .d..supported.by
00007FFC 408299969285997A                  11810          DC    X'408299969285997A40A4958182938540' .broker..unable.
0000800C A3964097999684A4                  11811          DC    X'A3964097999684A483850000C37AE081' to.produce..C..a
0000801C A2879281869281E0                  11812          DC    X'A2879281869281E09389829984928186' sgkafka.librdkaf
0000802C 9281E0A29983E099                  11813          DC    X'9281E0A29983E0998492818692816D94' ka.src.rdkafka.m
0000803C A287A285A36DA699                  11814          DC    X'A287A285A36DA69989A385994B830000' sgset.writer.c..
0000804C 9992940094A285A3                  11815          DC    X'9992940094A285A3A6606E94A285A3A6' rkm.msetw..msetw
0000805C 6DC19789E58599A2                  11816          DC    X'6DC19789E58599A2899695406E7E4094' .ApiVersion....m
0000806C 89956DC19789E585                  11817          DC    X'89956DC19789E58599A28996950081A2' in.ApiVersion.as
0000807C A28599A37A405A94                  11818          DC    X'A28599A37A405A94A285A3A6606E94A2' sert...msetw..ms
0000808C 85A3A66D999282A4                  11819          DC    X'85A3A66D999282A48600615C40D5D6E3' etw.rkbuf....NOT
0000809C D9C5C1C3C8C5C440                  11820          DC    X'D9C5C1C3C8C5C4405C6140A589969381' REACHED....viola
000080AC A38584005A5C7F61                  11821          DC    X'A38584005A5C7F615C40D5D6E3D9C5C1' ted.......NOTREA
000080BC C3C8C5C4405C6140                  11822          DC    X'C3C8C5C4405C6140A589969381A38584' CHED....violated
000080CC 7F0081A2A28599A3                  11823          DC    X'7F0081A2A28599A37A4094A285A3A660' ..assert..msetw.
000080DC 6E94A285A3A66DC1                  11824          DC    X'6E94A285A3A66DC19789E58599A28996' .msetw.ApiVersio
000080EC 95406E7E40F30000                  11825          DC    X'95406E7E40F3000081A2A28599A37A40' n....3..assert..
000080FC 94A285A3A6606E94                  11826          DC    X'94A285A3A6606E94A285A3A66DD4A287' msetw..msetw.Msg
0000810C E58599A289969540                  11827          DC    X'E58599A2899695407E7E40F2000096A4' Version....2..ou
0000811C A3938595404C7E40                  11828          DC    X'A3938595404C7E4099846D9281869281' tlen....rd.kafka
0000812C 6D94A2876DA68999                  11829          DC    X'6D94A2876DA68999856DA289A9854D99' .msg.wire.size.r
0000813C 92946B4094A285A3                  11830          DC    X'92946B4094A285A3A6606E94A285A3A6' km..msetw..msetw
0000814C 6DD4A287E58599A2                  11831          DC    X'6DD4A287E58599A28996955D000096A4' .MsgVersion...ou
0000815C A3938595407E7E40                  11832          DC    X'A3938595407E7E408183A3A481936DA6' tlen....actual.w
0000816C 9989A3A385950000                  11833          DC    X'9989A3A38595000081A2A28599A37A40' ritten..assert..
0000817C 999294006C4B5CA2                  11834          DC    X'999294006C4B5CA240AD6C84BD7A40D9' rkm....s...d...R
0000818C 85839695A2A399A4                  11835          DC    X'85839695A2A399A483A3858440D485A2' econstructed.Mes
0000819C A2818785E285A340                  11836          DC    X'A2818785E285A3404D6C84409485A2A2' sageSet...d.mess
000081AC 8187854DA25D6B40                  11837          DC    X'8187854DA25D6B406CA9A44082A8A385' age.s....zu.byte
000081BC A26B40D4A287C984                  11838          DC    X'A26B40D4A287C984A2406C9393A44B4B' s..MsgIds..llu..
000081CC 6C9393A45D006C4B                  11839          DC    X'6C9393A45D006C4B5CA240AD6C84BD7A' .llu.....s...d..
000081DC 40D5964094969985                  11840          DC    X'40D596409496998540A2978183854089' .No.more.space.i
000081EC 954083A499998595                  11841          DC    X'954083A499998595A340D485A2A28187' n.current.Messag
000081FC 85E285A3404D6C89                  11842          DC    X'85E285A3404D6C89409485A2A2818785' eSet...i.message
0000820C 4DA25D6B406CA9A4                  11843          DC    X'4DA25D6B406CA9A44082A8A385A25D00' .s....zu.bytes..
0000821C 9381A2A394A28700                  11844          DC    X'9381A2A394A28700E4958182938540A3' lastmsg.Unable.t
0000822C 96409985839695A2                  11845          DC    X'96409985839695A2A399A483A340D485' o.reconstruct.Me
0000823C A2A2818785E285A3                  11846          DC    X'A2A2818785E285A3404D83A499998595' ssageSet..curren
0000824C A393A840A689A388                  11847          DC    X'A393A840A689A388406C84409485A2A2' tly.with..d.mess
0000825C 8187854DA25D5D40                  11848          DC    X'8187854DA25D5D40A689A3884094A287' age.s...with.msg
0000826C 8984409981958785                  11849          DC    X'8984409981958785406C9393A44B4B6C' id.range..llu...
0000827C 9393A47A409381A2                  11850          DC    X'9393A47A409381A2A3409485A2A28187' llu..last.messag
0000828C 8540818484858440                  11851          DC    X'85408184848584408881A24094A28789' e.added.has.msgi
0000829C 84406C9393A47A40                  11852          DC    X'84406C9393A47A40A4958182938540A3' d..llu..unable.t
                                                                                                                           Page  238 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000082AC 964087A481998195                  11853          DC    X'964087A481998195A3858540839695A2' o.guarantee.cons
000082BC 89A2A3859583A800                  11854          DC    X'89A2A3859583A800E2D5C1D7D7E80000' istency.SNAPPY..
000082CC C6818993858440A3                  11855          DC    X'C6818993858440A39640A295819797A8' Failed.to.snappy
000082DC 60839694979985A2                  11856          DC    X'60839694979985A2A2406CA9A44082A8' .compress..zu.by
000082EC A385A24086969940                  11857          DC    X'A385A24086969940A396978983406C4B' tes.for.topic...
000082FC 5CA240AD6C84BD7A                  11858          DC    X'5CA240AD6C84BD7A406CA27A40A28595' .s...d....s..sen
0000830C 8489958740A49583                  11859          DC    X'8489958740A495839694979985A2A285' ding.uncompresse
0000831C 840099846D82A486                  11860          DC    X'840099846D82A4866D9385954D9982A4' d.rd.buf.len.rbu
0000832C 865D406E7E4094A2                  11861          DC    X'865D406E7E4094A285A3A6606E94A285' f.....msetw..mse
0000833C A3A66D868999A2A3                  11862          DC    X'A3A66D868999A2A394A2874B9686404E' tw.firstmsg.of..
0000834C 4093859500008995                  11863          DC    X'4093859500008995A581938984408689' .len..invalid.fi
0000835C 99A2A394A2874097                  11864          DC    X'99A2A394A287409796A289A389969500' rstmsg.position.
0000836C 99407E7E40F0404F                  11865          DC    X'99407E7E40F0404F4F405A5C7F8995A5' r....0.......inv
0000837C 8193898440868999                  11866          DC    X'8193898440868999A2A394A287409796' alid.firstmsg.po
0000838C A289A38996957F00                  11867          DC    X'A289A38996957F009596A39985818388' sition..notreach
0000839C 85847A40A495A2A4                  11868          DC    X'85847A40A495A2A497979699A3858440' ed..unsupported.
000083AC 839694979985A2A2                  11869          DC    X'839694979985A2A28996954B83968485' compression.code
000083BC 830081A2A28599A3                  11870          DC    X'830081A2A28599A37A405A5C7F9596A3' c.assert.....not
000083CC 998581838885847A                  11871          DC    X'998581838885847A40A495A2A4979796' reached..unsuppo
000083DC 99A3858440839694                  11872          DC    X'99A3858440839694979985A2A2899695' rted.compression
000083EC 4B83968485837F00                  11873          DC    X'4B83968485837F0081A2A28599A37A40' .codec..assert..
000083FC 838996A54B8996A5                  11874          DC    X'838996A54B8996A56D938595404C40C9' ciov.iov.len...I
0000840C D5E3F3F26DD4C1E7                  11875          DC    X'D5E3F3F26DD4C1E70000A2938983856D' NT32.MAX..slice.
0000841C 899589A340868189                  11876          DC    X'899589A340868189938584005A994050' init.failed..r..
0000842C 50405C7FA2938983                  11877          DC    X'50405C7FA2938983856D899589A34086' ....slice.init.f
0000843C 81899385847F0000                  11878          DC    X'81899385847F000081A2A28599A37A40' ailed...assert..
0000844C 94A2878395A3406E                  11879          DC    X'94A2878395A3406E40F0000093859540' msgcnt...0..len.
0000845C 6E40F00093859540                  11880          DC    X'6E40F000938595404C7E404DA289A985' ..0.len.....size
0000846C 6DA35D9992A39760                  11881          DC    X'6DA35D9992A397606E9992A3976D9992' .t.rktp..rktp.rk
0000847C A3606E9992A36D99                  11882          DC    X'A3606E9992A36D9992606E99926D8396' t..rkt.rk..rk.co
0000848C 95864B9481A76D94                  11883          DC    X'95864B9481A76D94A2876DA289A98500' nf.max.msg.size.
0000849C A495839694979985                  11884          DC    X'A495839694979985A2A2858400006CA2' uncompressed...s
000084AC 40AD6C84BD7A40D7                  11885          DC    X'40AD6C84BD7A40D7999684A4838540D4' ...d...Produce.M
000084BC 85A2A2818785E285                  11886          DC    X'85A2A2818785E285A340A689A388406C' essageSet.with..
000084CC 89409485A2A28187                  11887          DC    X'89409485A2A28187854DA25D404D6CA9' i.message.s....z
000084DC A44082A8A385A26B                  11888          DC    X'A44082A8A385A26B40C19789E58599A2' u.bytes..ApiVers
000084EC 899695406C846B40                  11889          DC    X'899695406C846B40D4A287E58599A289' ion..d..MsgVersi
000084FC 9695406C846B40D4                  11890          DC    X'9695406C846B40D4A287C984406C9393' on..d..MsgId..ll
0000850C A46B40C281A285E2                  11891          DC    X'A46B40C281A285E28598406C846B406C' u..BaseSeq..d...
0000851C A26B406CA25D0000                  11892          DC    X'A26B406CA25D0000D7999684A4838500' s...s...Produce.
0000852C C685A3838800D686                  11893          DC    X'C685A3838800D68686A285A30000D485' Fetch.Offset..Me
0000853C A3818481A3810000                  11894          DC    X'A3818481A3810000D38581848599C195' tadata..LeaderAn
0000854C 84C9A2990000E2A3                  11895          DC    X'84C9A2990000E2A39697D98597938983' dIsr..StopReplic
0000855C 8100E4978481A385                  11896          DC    X'8100E4978481A385D485A3818481A381' a.UpdateMetadata
0000856C 0000C39695A39996                  11897          DC    X'0000C39695A3999693938584E288A4A3' ..ControlledShut
0000857C 8496A6950000D686                  11898          DC    X'8496A6950000D68686A285A3C3969494' down..OffsetComm
0000858C 89A30000D68686A2                  11899          DC    X'89A30000D68686A285A3C685A3838800' it..OffsetFetch.
0000859C C6899584C3969699                  11900          DC    X'C6899584C396969984899581A3969900' FindCoordinator.
000085AC D1968995C79996A4                  11901          DC    X'D1968995C79996A49700C8858199A382' JoinGroup.Heartb
000085BC 8581A300D38581A5                  11902          DC    X'8581A300D38581A585C79996A4970000' eat.LeaveGroup..
000085CC E2A89583C79996A4                  11903          DC    X'E2A89583C79996A49700C485A2839989' SyncGroup.Descri
000085DC 8285C79996A497A2                  11904          DC    X'8285C79996A497A20000D389A2A3C799' beGroups..ListGr
                                                                                                                           Page  239 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000085EC 96A497A20000E281                  11905          DC    X'96A497A20000E281A293C8819584A288' oups..SaslHandsh
000085FC 81928500C19789E5                  11906          DC    X'81928500C19789E58599A28996950000' ake.ApiVersion..
0000860C C3998581A385E396                  11907          DC    X'C3998581A385E396978983A20000C485' CreateTopics..De
0000861C 9385A385E3969789                  11908          DC    X'9385A385E396978983A20000C4859385' leteTopics..Dele
0000862C A385D98583969984                  11909          DC    X'A385D98583969984A200C99589A3D799' teRecords.InitPr
0000863C 9684A4838599C984                  11910          DC    X'9684A4838599C9840000D68686A285A3' oducerId..Offset
0000864C C69699D385818485                  11911          DC    X'C69699D38581848599C5979683880000' ForLeaderEpoch..
0000865C C18484D78199A389                  11912          DC    X'C18484D78199A389A3899695A2E396E3' AddPartitionsToT
0000866C A7950000C18484D6                  11913          DC    X'A7950000C18484D68686A285A3A2E396' xn..AddOffsetsTo
0000867C E3A79500C59584E3                  11914          DC    X'E3A79500C59584E3A7950000E69989A3' Txn.EndTxn..Writ
0000868C 85E3A795D4819992                  11915          DC    X'85E3A795D48199928599A200E3A795D6' eTxnMarkers.TxnO
0000869C 8686A285A3C39694                  11916          DC    X'8686A285A3C396949489A300C485A283' ffsetCommit.Desc
000086AC 99898285C18393A2                  11917          DC    X'99898285C18393A20000C3998581A385' ribeAcls..Create
000086BC C18393A20000C485                  11918          DC    X'C18393A20000C4859385A385C18393A2' Acls..DeleteAcls
000086CC 0000C485A2839989                  11919          DC    X'0000C485A28399898285C39695868987' ..DescribeConfig
000086DC A200C193A38599C3                  11920          DC    X'A200C193A38599C39695868987A20000' s.AlterConfigs..
000086EC C193A38599D98597                  11921          DC    X'C193A38599D9859793898381D39687C4' AlterReplicaLogD
000086FC 8999A200C485A283                  11922          DC    X'8999A200C485A28399898285D39687C4' irs.DescribeLogD
0000870C 8999A200E281A293                  11923          DC    X'8999A200E281A293C1A4A3888595A389' irs.SaslAuthenti
0000871C 8381A3850000C399                  11924          DC    X'8381A3850000C3998581A385D78199A3' cate..CreatePart
0000872C 89A3899695A20000                  11925          DC    X'89A3899695A20000C3998581A385C485' itions..CreateDe
0000873C 93858781A3899695                  11926          DC    X'93858781A3899695E39692859500D985' legationToken.Re
0000874C 9585A6C485938587                  11927          DC    X'9585A6C48593858781A3899695E39692' newDelegationTok
0000875C 85950000C5A79789                  11928          DC    X'85950000C5A797899985C48593858781' en..ExpireDelega
0000876C A3899695E3969285                  11929          DC    X'A3899695E39692859500C485A2839989' tionToken.Descri
0000877C 8285C48593858781                  11930          DC    X'8285C48593858781A3899695E3969285' beDelegationToke
0000878C 9500C4859385A385                  11931          DC    X'9500C4859385A385C79996A497A20000' n.DeleteGroups..
0000879C C5938583A3D38581                  11932          DC    X'C5938583A3D38581848599A2D98598A4' ElectLeadersRequ
000087AC 85A2A300C9958399                  11933          DC    X'85A2A300C995839985948595A38193C1' est.IncrementalA
000087BC 93A38599C3969586                  11934          DC    X'93A38599C39695868987A2D98598A485' lterConfigsReque
000087CC A2A30000C193A385                  11935          DC    X'A2A30000C193A38599D78199A389A389' st..AlterPartiti
000087DC 9695D98581A2A289                  11936          DC    X'9695D98581A2A2898795948595A3A2D9' onReassignmentsR
000087EC 8598A485A2A30000                  11937          DC    X'8598A485A2A30000D389A2A3D78199A3' equest..ListPart
000087FC 89A3899695D98581                  11938          DC    X'89A3899695D98581A2A2898795948595' itionReassignmen
0000880C A3A2D98598A485A2                  11939          DC    X'A3A2D98598A485A2A300D68686A285A3' tsRequest.Offset
0000881C C4859385A385D985                  11940          DC    X'C4859385A385D98598A485A2A300C485' DeleteRequest.De
0000882C A28399898285C393                  11941          DC    X'A28399898285C393898595A3D8A496A3' scribeClientQuot
0000883C 81A2D98598A485A2                  11942          DC    X'81A2D98598A485A2A300C193A38599C3' asRequest.AlterC
0000884C 93898595A3D8A496                  11943          DC    X'93898595A3D8A496A381A2D98598A485' lientQuotasReque
0000885C A2A30000C485A283                  11944          DC    X'A2A30000C485A28399898285E4A28599' st..DescribeUser
0000886C E283998194C39985                  11945          DC    X'E283998194C39985848595A3898193A2' ScramCredentials
0000887C D98598A485A2A300                  11946          DC    X'D98598A485A2A300C193A38599E4A285' Request.AlterUse
0000888C 99E283998194C399                  11947          DC    X'99E283998194C39985848595A3898193' rScramCredential
0000889C A2D98598A485A2A3                  11948          DC    X'A2D98598A485A2A30000E596A385D985' sRequest..VoteRe
000088AC 98A485A2A300C285                  11949          DC    X'98A485A2A300C285878995D8A49699A4' quest.BeginQuoru
000088BC 94C597968388D985                  11950          DC    X'94C597968388D98598A485A2A300C595' mEpochRequest.En
000088CC 84D8A49699A494C5                  11951          DC    X'84D8A49699A494C597968388D98598A4' dQuorumEpochRequ
000088DC 85A2A300C485A283                  11952          DC    X'85A2A300C485A28399898285D8A49699' est.DescribeQuor
000088EC A494D98598A485A2                  11953          DC    X'A494D98598A485A2A300C193A38599C9' umRequest.AlterI
000088FC A299D98598A485A2                  11954          DC    X'A299D98598A485A2A300E4978481A385' srRequest.Update
0000890C C68581A3A49985A2                  11955          DC    X'C68581A3A49985A2D98598A485A2A300' FeaturesRequest.
0000891C C595A58593969785                  11956          DC    X'C595A58593969785D98598A485A2A300' EnvelopeRequest.
                                                                                                                           Page  240 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000892C 95969585000087A9                  11957          DC    X'95969585000087A989970000A2958197' none..gzip..snap
0000893C 97A8000093A9F400                  11958          DC    X'97A8000093A9F400A9A2A38400008995' py..lz4.zstd..in
0000894C 88859989A3008396                  11959          DC    X'88859989A300839695868987A4998584' herit.configured
0000895C 0000938581999585                  11960          DC    X'000093858199958584008995A3859995' ..learned.intern
0000896C 8193000093968789                  11961          DC    X'819300009396878983819300C99589A3' al..logical.Init
0000897C 0000E38599948995                  11962          DC    X'0000E3859994899581A38500C681A381' ..Terminate.Fata
0000898C 93C5999996990000                  11963          DC    X'93C5999996990000D98598A485A2A3D7' lError..RequestP
0000899C C9C40000E68189A3                  11964          DC    X'C9C40000E68189A3E3998195A2979699' ID..WaitTranspor
000089AC A300E68189A3D7C9                  11965          DC    X'A300E68189A3D7C9C400C1A2A2898795' t.WaitPID.Assign
000089BC 85840000C4998189                  11966          DC    X'85840000C499818995D985A285A30000' ed..DrainReset..
000089CC C499818995C2A494                  11967          DC    X'C499818995C2A4949700D9858184A8D5' DrainBump.ReadyN
000089DC 96A3C18392858400                  11968          DC    X'96A3C18392858400D9858184A800C995' otAcked.Ready.In
000089EC E3998195A28183A3                  11969          DC    X'E3998195A28183A389969500C2858789' Transaction.Begi
000089FC 95C396949489A300                  11970          DC    X'95C396949489A300C396949489A3A389' nCommit.Committi
00008A0C 9587E3998195A281                  11971          DC    X'9587E3998195A28183A389969500C396' ngTransaction.Co
00008A1C 949489A3D596A3C1                  11972          DC    X'949489A3D596A3C1839285840000C182' mmitNotAcked..Ab
00008A2C 9699A3899587E399                  11973          DC    X'9699A3899587E3998195A28183A38996' ortingTransactio
00008A3C 9500C1829699A385                  11974          DC    X'9500C1829699A38584D596A3C1839285' n.AbortedNotAcke
00008A4C 8400C1829699A381                  11975          DC    X'8400C1829699A381829385C599999699' d.AbortableError
00008A5C 0000                              11976          DC    X'0000'                             ..
                                           11977 @Ecrc_table ALIAS X'8399836DA381829385'
                                           11978          EXTRN @Ecrc_table
                                           11979 *
                                           11980 *
                                           11981 *   Re-entrant Data Initialization Section
                                           11982 *
                                           11983 @@INIT@  ALIAS C'rdkafka_msgset_writer:'
00008A60                00008A60 00001040  11984 @@INIT@  CSECT
                                           11985 @@INIT@  AMODE ANY
                                           11986 @@INIT@  RMODE ANY
00008A60 05                                11987          DC    XL1'5'
00008A61 000000                            11988          DC    AL3(0)
00008A64 00000120                          11989          DC    AL4(288)
00008A68 00000000                          11990          DC    4X'00'
00008A6C 00000000                          11991          DC    Q(@@STATIC)
00008A70 00000000                          11992          DC    X'00000000'
00008A74 00000001                          11993          DC    X'00000001'
00008A78 00000000                          11994          DC    X'00000000'
00008A7C 000000FF                          11995          DC    X'000000FF'
00008A80 0102039C09867F97                  11996          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00008A90 1112139D85088718                  11997          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00008AA0 818283840A171B88                  11998          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00008AB0 9116939495960498                  11999          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00008AC0 A0E2E4E0E1E3E5E7                  12000          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00008AD0 E9EAEBE8EDEEEFEC                  12001          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00008AE0 2FC2C4C0C1C3C5C7                  12002          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00008AF0 C9CACBC8CDCECFCC                  12003          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00008B00 6162636465666768                  12004          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00008B10 6A6B6C6D6E6F7071                  12005          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00008B20 7E73747576777879                  12006          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00008B30 A3A5B7A9A7B6BCBD                  12007          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00008B40 4142434445464748                  12008          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
                                                                                                                           Page  241 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008B50 4A4B4C4D4E4F5051                  12009          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00008B60 F753545556575859                  12010          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00008B70 3132333435363738                  12011          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                           12012 *
00008B80 05                                12013          DC    XL1'5'
00008B81 000000                            12014          DC    AL3(0)
00008B84 000001E0                          12015          DC    AL4(480)
00008B88 00000000                          12016          DC    4X'00'
00008B8C 00000000                          12017          DC    Q(@@STATIC)
00008B90 00000000                          12018          DC    X'00000000'
00008B94 00000101                          12019          DC    X'00000101'
00008B98 00000000                          12020          DC    X'00000000'
00008B9C 000000A0                          12021          DC    X'000000A0'
00008BA0 010203372D2E2F16                  12022          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00008BB0 1112133C3D322618                  12023          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00008BC0 5A7F7B5B6C507D4D                  12024          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00008BD0 F1F2F3F4F5F6F7F8                  12025          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00008BE0 C1C2C3C4C5C6C7C8                  12026          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00008BF0 D8D9E2E3E4E5E6E7                  12027          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00008C00 8182838485868788                  12028          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00008C10 9899A2A3A4A5A6A7                  12029          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00008C20 2122232425061728                  12030          DC    X'2122232425061728292A2B2C090A1B30' ................
00008C30 311A333435360838                  12031          DC    X'311A333435360838393A3B04143EFF80' ................
                                           12032 *
00008C40 05                                12033          DC    XL1'5'
00008C41 000000                            12034          DC    AL3(0)
00008C44 00000208                          12035          DC    AL4(520)
00008C48 00000000                          12036          DC    4X'00'
00008C4C 00000000                          12037          DC    Q(@@STATIC)
00008C50 00000000                          12038          DC    X'00000000'
00008C54 000001C0                          12039          DC    X'000001C0'
00008C58 00000000                          12040          DC    X'00000000'
00008C5C 00000001                          12041          DC    X'00000001'
00008C60 8A40404040404040                  12042          DC    X'8A40404040404040'                 ........
                                           12043 *
00008C68 05                                12044          DC    XL1'5'
00008C69 000000                            12045          DC    AL3(0)
00008C6C 00000230                          12046          DC    AL4(560)
00008C70 00000000                          12047          DC    4X'00'
00008C74 00000000                          12048          DC    Q(@@STATIC)
00008C78 00000000                          12049          DC    X'00000000'
00008C7C 000001E0                          12050          DC    X'000001E0'
00008C80 00000000                          12051          DC    X'00000000'
00008C84 00000001                          12052          DC    X'00000001'
00008C88 8B40404040404040                  12053          DC    X'8B40404040404040'                 ........
                                           12054 *
00008C90 0D                                12055          DC    XL1'D'
00008C91 000000                            12056          DC    AL3(0)
00008C94 00000258                          12057          DC    AL4(600)
00008C98 00000000                          12058          DC    4X'00'
00008C9C 00000000                          12059          DC    Q(@@STATIC)
00008CA0 00000000                          12060          DC    X'00000000'
                                                                                                                           Page  242 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008CA4 00000220                          12061          DC    X'00000220'
00008CA8 0000000000007AB8                  12062          DC    ADL8(@DATA)
00008CB0 00000000                          12063          DC    X'00000000'
00008CB4 00000A6C                          12064          DC    X'00000A6C'
                                           12065 *
00008CB8 0D                                12066          DC    XL1'D'
00008CB9 000000                            12067          DC    AL3(0)
00008CBC 00000280                          12068          DC    AL4(640)
00008CC0 00000000                          12069          DC    4X'00'
00008CC4 00000000                          12070          DC    Q(@@STATIC)
00008CC8 00000000                          12071          DC    X'00000000'
00008CCC 00000228                          12072          DC    X'00000228'
00008CD0 0000000000007AB8                  12073          DC    ADL8(@DATA)
00008CD8 00000000                          12074          DC    X'00000000'
00008CDC 00000A74                          12075          DC    X'00000A74'
                                           12076 *
00008CE0 0D                                12077          DC    XL1'D'
00008CE1 000000                            12078          DC    AL3(0)
00008CE4 000002A8                          12079          DC    AL4(680)
00008CE8 00000000                          12080          DC    4X'00'
00008CEC 00000000                          12081          DC    Q(@@STATIC)
00008CF0 00000000                          12082          DC    X'00000000'
00008CF4 00000230                          12083          DC    X'00000230'
00008CF8 0000000000007AB8                  12084          DC    ADL8(@DATA)
00008D00 00000000                          12085          DC    X'00000000'
00008D04 00000A7A                          12086          DC    X'00000A7A'
                                           12087 *
00008D08 0D                                12088          DC    XL1'D'
00008D09 000000                            12089          DC    AL3(0)
00008D0C 000002D0                          12090          DC    AL4(720)
00008D10 00000000                          12091          DC    4X'00'
00008D14 00000000                          12092          DC    Q(@@STATIC)
00008D18 00000000                          12093          DC    X'00000000'
00008D1C 00000238                          12094          DC    X'00000238'
00008D20 0000000000007AB8                  12095          DC    ADL8(@DATA)
00008D28 00000000                          12096          DC    X'00000000'
00008D2C 00000A82                          12097          DC    X'00000A82'
                                           12098 *
00008D30 0D                                12099          DC    XL1'D'
00008D31 000000                            12100          DC    AL3(0)
00008D34 000002F8                          12101          DC    AL4(760)
00008D38 00000000                          12102          DC    4X'00'
00008D3C 00000000                          12103          DC    Q(@@STATIC)
00008D40 00000000                          12104          DC    X'00000000'
00008D44 00000240                          12105          DC    X'00000240'
00008D48 0000000000007AB8                  12106          DC    ADL8(@DATA)
00008D50 00000000                          12107          DC    X'00000000'
00008D54 00000A8C                          12108          DC    X'00000A8C'
                                           12109 *
00008D58 0D                                12110          DC    XL1'D'
00008D59 000000                            12111          DC    AL3(0)
00008D5C 00000320                          12112          DC    AL4(800)
                                                                                                                           Page  243 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008D60 00000000                          12113          DC    4X'00'
00008D64 00000000                          12114          DC    Q(@@STATIC)
00008D68 00000000                          12115          DC    X'00000000'
00008D6C 00000248                          12116          DC    X'00000248'
00008D70 0000000000007AB8                  12117          DC    ADL8(@DATA)
00008D78 00000000                          12118          DC    X'00000000'
00008D7C 00000A9A                          12119          DC    X'00000A9A'
                                           12120 *
00008D80 0D                                12121          DC    XL1'D'
00008D81 000000                            12122          DC    AL3(0)
00008D84 00000348                          12123          DC    AL4(840)
00008D88 00000000                          12124          DC    4X'00'
00008D8C 00000000                          12125          DC    Q(@@STATIC)
00008D90 00000000                          12126          DC    X'00000000'
00008D94 00000250                          12127          DC    X'00000250'
00008D98 0000000000007AB8                  12128          DC    ADL8(@DATA)
00008DA0 00000000                          12129          DC    X'00000000'
00008DA4 00000AA6                          12130          DC    X'00000AA6'
                                           12131 *
00008DA8 0D                                12132          DC    XL1'D'
00008DA9 000000                            12133          DC    AL3(0)
00008DAC 00000370                          12134          DC    AL4(880)
00008DB0 00000000                          12135          DC    4X'00'
00008DB4 00000000                          12136          DC    Q(@@STATIC)
00008DB8 00000000                          12137          DC    X'00000000'
00008DBC 00000258                          12138          DC    X'00000258'
00008DC0 0000000000007AB8                  12139          DC    ADL8(@DATA)
00008DC8 00000000                          12140          DC    X'00000000'
00008DCC 00000AB6                          12141          DC    X'00000AB6'
                                           12142 *
00008DD0 0D                                12143          DC    XL1'D'
00008DD1 000000                            12144          DC    AL3(0)
00008DD4 00000398                          12145          DC    AL4(920)
00008DD8 00000000                          12146          DC    4X'00'
00008DDC 00000000                          12147          DC    Q(@@STATIC)
00008DE0 00000000                          12148          DC    X'00000000'
00008DE4 00000260                          12149          DC    X'00000260'
00008DE8 0000000000007AB8                  12150          DC    ADL8(@DATA)
00008DF0 00000000                          12151          DC    X'00000000'
00008DF4 00000ACA                          12152          DC    X'00000ACA'
                                           12153 *
00008DF8 0D                                12154          DC    XL1'D'
00008DF9 000000                            12155          DC    AL3(0)
00008DFC 000003C0                          12156          DC    AL4(960)
00008E00 00000000                          12157          DC    4X'00'
00008E04 00000000                          12158          DC    Q(@@STATIC)
00008E08 00000000                          12159          DC    X'00000000'
00008E0C 00000268                          12160          DC    X'00000268'
00008E10 0000000000007AB8                  12161          DC    ADL8(@DATA)
00008E18 00000000                          12162          DC    X'00000000'
00008E1C 00000AD8                          12163          DC    X'00000AD8'
                                           12164 *
                                                                                                                           Page  244 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008E20 0D                                12165          DC    XL1'D'
00008E21 000000                            12166          DC    AL3(0)
00008E24 000003E8                          12167          DC    AL4(1000)
00008E28 00000000                          12168          DC    4X'00'
00008E2C 00000000                          12169          DC    Q(@@STATIC)
00008E30 00000000                          12170          DC    X'00000000'
00008E34 00000270                          12171          DC    X'00000270'
00008E38 0000000000007AB8                  12172          DC    ADL8(@DATA)
00008E40 00000000                          12173          DC    X'00000000'
00008E44 00000AE4                          12174          DC    X'00000AE4'
                                           12175 *
00008E48 0D                                12176          DC    XL1'D'
00008E49 000000                            12177          DC    AL3(0)
00008E4C 00000410                          12178          DC    AL4(1040)
00008E50 00000000                          12179          DC    4X'00'
00008E54 00000000                          12180          DC    Q(@@STATIC)
00008E58 00000000                          12181          DC    X'00000000'
00008E5C 00000278                          12182          DC    X'00000278'
00008E60 0000000000007AB8                  12183          DC    ADL8(@DATA)
00008E68 00000000                          12184          DC    X'00000000'
00008E6C 00000AF4                          12185          DC    X'00000AF4'
                                           12186 *
00008E70 0D                                12187          DC    XL1'D'
00008E71 000000                            12188          DC    AL3(0)
00008E74 00000438                          12189          DC    AL4(1080)
00008E78 00000000                          12190          DC    4X'00'
00008E7C 00000000                          12191          DC    Q(@@STATIC)
00008E80 00000000                          12192          DC    X'00000000'
00008E84 00000280                          12193          DC    X'00000280'
00008E88 0000000000007AB8                  12194          DC    ADL8(@DATA)
00008E90 00000000                          12195          DC    X'00000000'
00008E94 00000AFE                          12196          DC    X'00000AFE'
                                           12197 *
00008E98 0D                                12198          DC    XL1'D'
00008E99 000000                            12199          DC    AL3(0)
00008E9C 00000460                          12200          DC    AL4(1120)
00008EA0 00000000                          12201          DC    4X'00'
00008EA4 00000000                          12202          DC    Q(@@STATIC)
00008EA8 00000000                          12203          DC    X'00000000'
00008EAC 00000288                          12204          DC    X'00000288'
00008EB0 0000000000007AB8                  12205          DC    ADL8(@DATA)
00008EB8 00000000                          12206          DC    X'00000000'
00008EBC 00000B08                          12207          DC    X'00000B08'
                                           12208 *
00008EC0 0D                                12209          DC    XL1'D'
00008EC1 000000                            12210          DC    AL3(0)
00008EC4 00000488                          12211          DC    AL4(1160)
00008EC8 00000000                          12212          DC    4X'00'
00008ECC 00000000                          12213          DC    Q(@@STATIC)
00008ED0 00000000                          12214          DC    X'00000000'
00008ED4 00000290                          12215          DC    X'00000290'
00008ED8 0000000000007AB8                  12216          DC    ADL8(@DATA)
                                                                                                                           Page  245 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008EE0 00000000                          12217          DC    X'00000000'
00008EE4 00000B14                          12218          DC    X'00000B14'
                                           12219 *
00008EE8 0D                                12220          DC    XL1'D'
00008EE9 000000                            12221          DC    AL3(0)
00008EEC 000004B0                          12222          DC    AL4(1200)
00008EF0 00000000                          12223          DC    4X'00'
00008EF4 00000000                          12224          DC    Q(@@STATIC)
00008EF8 00000000                          12225          DC    X'00000000'
00008EFC 00000298                          12226          DC    X'00000298'
00008F00 0000000000007AB8                  12227          DC    ADL8(@DATA)
00008F08 00000000                          12228          DC    X'00000000'
00008F0C 00000B1E                          12229          DC    X'00000B1E'
                                           12230 *
00008F10 0D                                12231          DC    XL1'D'
00008F11 000000                            12232          DC    AL3(0)
00008F14 000004D8                          12233          DC    AL4(1240)
00008F18 00000000                          12234          DC    4X'00'
00008F1C 00000000                          12235          DC    Q(@@STATIC)
00008F20 00000000                          12236          DC    X'00000000'
00008F24 000002A0                          12237          DC    X'000002A0'
00008F28 0000000000007AB8                  12238          DC    ADL8(@DATA)
00008F30 00000000                          12239          DC    X'00000000'
00008F34 00000B2E                          12240          DC    X'00000B2E'
                                           12241 *
00008F38 0D                                12242          DC    XL1'D'
00008F39 000000                            12243          DC    AL3(0)
00008F3C 00000500                          12244          DC    AL4(1280)
00008F40 00000000                          12245          DC    4X'00'
00008F44 00000000                          12246          DC    Q(@@STATIC)
00008F48 00000000                          12247          DC    X'00000000'
00008F4C 000002A8                          12248          DC    X'000002A8'
00008F50 0000000000007AB8                  12249          DC    ADL8(@DATA)
00008F58 00000000                          12250          DC    X'00000000'
00008F5C 00000B3A                          12251          DC    X'00000B3A'
                                           12252 *
00008F60 0D                                12253          DC    XL1'D'
00008F61 000000                            12254          DC    AL3(0)
00008F64 00000528                          12255          DC    AL4(1320)
00008F68 00000000                          12256          DC    4X'00'
00008F6C 00000000                          12257          DC    Q(@@STATIC)
00008F70 00000000                          12258          DC    X'00000000'
00008F74 000002B0                          12259          DC    X'000002B0'
00008F78 0000000000007AB8                  12260          DC    ADL8(@DATA)
00008F80 00000000                          12261          DC    X'00000000'
00008F84 00000B48                          12262          DC    X'00000B48'
                                           12263 *
00008F88 0D                                12264          DC    XL1'D'
00008F89 000000                            12265          DC    AL3(0)
00008F8C 00000550                          12266          DC    AL4(1360)
00008F90 00000000                          12267          DC    4X'00'
00008F94 00000000                          12268          DC    Q(@@STATIC)
                                                                                                                           Page  246 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008F98 00000000                          12269          DC    X'00000000'
00008F9C 000002B8                          12270          DC    X'000002B8'
00008FA0 0000000000007AB8                  12271          DC    ADL8(@DATA)
00008FA8 00000000                          12272          DC    X'00000000'
00008FAC 00000B54                          12273          DC    X'00000B54'
                                           12274 *
00008FB0 0D                                12275          DC    XL1'D'
00008FB1 000000                            12276          DC    AL3(0)
00008FB4 00000578                          12277          DC    AL4(1400)
00008FB8 00000000                          12278          DC    4X'00'
00008FBC 00000000                          12279          DC    Q(@@STATIC)
00008FC0 00000000                          12280          DC    X'00000000'
00008FC4 000002C0                          12281          DC    X'000002C0'
00008FC8 0000000000007AB8                  12282          DC    ADL8(@DATA)
00008FD0 00000000                          12283          DC    X'00000000'
00008FD4 00000B62                          12284          DC    X'00000B62'
                                           12285 *
00008FD8 0D                                12286          DC    XL1'D'
00008FD9 000000                            12287          DC    AL3(0)
00008FDC 000005A0                          12288          DC    AL4(1440)
00008FE0 00000000                          12289          DC    4X'00'
00008FE4 00000000                          12290          DC    Q(@@STATIC)
00008FE8 00000000                          12291          DC    X'00000000'
00008FEC 000002C8                          12292          DC    X'000002C8'
00008FF0 0000000000007AB8                  12293          DC    ADL8(@DATA)
00008FF8 00000000                          12294          DC    X'00000000'
00008FFC 00000B70                          12295          DC    X'00000B70'
                                           12296 *
00009000 0D                                12297          DC    XL1'D'
00009001 000000                            12298          DC    AL3(0)
00009004 000005C8                          12299          DC    AL4(1480)
00009008 00000000                          12300          DC    4X'00'
0000900C 00000000                          12301          DC    Q(@@STATIC)
00009010 00000000                          12302          DC    X'00000000'
00009014 000002D0                          12303          DC    X'000002D0'
00009018 0000000000007AB8                  12304          DC    ADL8(@DATA)
00009020 00000000                          12305          DC    X'00000000'
00009024 00000B7E                          12306          DC    X'00000B7E'
                                           12307 *
00009028 0D                                12308          DC    XL1'D'
00009029 000000                            12309          DC    AL3(0)
0000902C 000005F0                          12310          DC    AL4(1520)
00009030 00000000                          12311          DC    4X'00'
00009034 00000000                          12312          DC    Q(@@STATIC)
00009038 00000000                          12313          DC    X'00000000'
0000903C 000002D8                          12314          DC    X'000002D8'
00009040 0000000000007AB8                  12315          DC    ADL8(@DATA)
00009048 00000000                          12316          DC    X'00000000'
0000904C 00000B8E                          12317          DC    X'00000B8E'
                                           12318 *
00009050 0D                                12319          DC    XL1'D'
00009051 000000                            12320          DC    AL3(0)
                                                                                                                           Page  247 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009054 00000618                          12321          DC    AL4(1560)
00009058 00000000                          12322          DC    4X'00'
0000905C 00000000                          12323          DC    Q(@@STATIC)
00009060 00000000                          12324          DC    X'00000000'
00009064 000002E0                          12325          DC    X'000002E0'
00009068 0000000000007AB8                  12326          DC    ADL8(@DATA)
00009070 00000000                          12327          DC    X'00000000'
00009074 00000BA4                          12328          DC    X'00000BA4'
                                           12329 *
00009078 0D                                12330          DC    XL1'D'
00009079 000000                            12331          DC    AL3(0)
0000907C 00000640                          12332          DC    AL4(1600)
00009080 00000000                          12333          DC    4X'00'
00009084 00000000                          12334          DC    Q(@@STATIC)
00009088 00000000                          12335          DC    X'00000000'
0000908C 000002E8                          12336          DC    X'000002E8'
00009090 0000000000007AB8                  12337          DC    ADL8(@DATA)
00009098 00000000                          12338          DC    X'00000000'
0000909C 00000BB8                          12339          DC    X'00000BB8'
                                           12340 *
000090A0 0D                                12341          DC    XL1'D'
000090A1 000000                            12342          DC    AL3(0)
000090A4 00000668                          12343          DC    AL4(1640)
000090A8 00000000                          12344          DC    4X'00'
000090AC 00000000                          12345          DC    Q(@@STATIC)
000090B0 00000000                          12346          DC    X'00000000'
000090B4 000002F0                          12347          DC    X'000002F0'
000090B8 0000000000007AB8                  12348          DC    ADL8(@DATA)
000090C0 00000000                          12349          DC    X'00000000'
000090C4 00000BC8                          12350          DC    X'00000BC8'
                                           12351 *
000090C8 0D                                12352          DC    XL1'D'
000090C9 000000                            12353          DC    AL3(0)
000090CC 00000690                          12354          DC    AL4(1680)
000090D0 00000000                          12355          DC    4X'00'
000090D4 00000000                          12356          DC    Q(@@STATIC)
000090D8 00000000                          12357          DC    X'00000000'
000090DC 000002F8                          12358          DC    X'000002F8'
000090E0 0000000000007AB8                  12359          DC    ADL8(@DATA)
000090E8 00000000                          12360          DC    X'00000000'
000090EC 00000BD0                          12361          DC    X'00000BD0'
                                           12362 *
000090F0 0D                                12363          DC    XL1'D'
000090F1 000000                            12364          DC    AL3(0)
000090F4 000006B8                          12365          DC    AL4(1720)
000090F8 00000000                          12366          DC    4X'00'
000090FC 00000000                          12367          DC    Q(@@STATIC)
00009100 00000000                          12368          DC    X'00000000'
00009104 00000300                          12369          DC    X'00000300'
00009108 0000000000007AB8                  12370          DC    ADL8(@DATA)
00009110 00000000                          12371          DC    X'00000000'
00009114 00000BE0                          12372          DC    X'00000BE0'
                                                                                                                           Page  248 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12373 *
00009118 0D                                12374          DC    XL1'D'
00009119 000000                            12375          DC    AL3(0)
0000911C 000006E0                          12376          DC    AL4(1760)
00009120 00000000                          12377          DC    4X'00'
00009124 00000000                          12378          DC    Q(@@STATIC)
00009128 00000000                          12379          DC    X'00000000'
0000912C 00000308                          12380          DC    X'00000308'
00009130 0000000000007AB8                  12381          DC    ADL8(@DATA)
00009138 00000000                          12382          DC    X'00000000'
0000913C 00000BF0                          12383          DC    X'00000BF0'
                                           12384 *
00009140 0D                                12385          DC    XL1'D'
00009141 000000                            12386          DC    AL3(0)
00009144 00000708                          12387          DC    AL4(1800)
00009148 00000000                          12388          DC    4X'00'
0000914C 00000000                          12389          DC    Q(@@STATIC)
00009150 00000000                          12390          DC    X'00000000'
00009154 00000310                          12391          DC    X'00000310'
00009158 0000000000007AB8                  12392          DC    ADL8(@DATA)
00009160 00000000                          12393          DC    X'00000000'
00009164 00000BFE                          12394          DC    X'00000BFE'
                                           12395 *
00009168 0D                                12396          DC    XL1'D'
00009169 000000                            12397          DC    AL3(0)
0000916C 00000730                          12398          DC    AL4(1840)
00009170 00000000                          12399          DC    4X'00'
00009174 00000000                          12400          DC    Q(@@STATIC)
00009178 00000000                          12401          DC    X'00000000'
0000917C 00000318                          12402          DC    X'00000318'
00009180 0000000000007AB8                  12403          DC    ADL8(@DATA)
00009188 00000000                          12404          DC    X'00000000'
0000918C 00000C0A                          12405          DC    X'00000C0A'
                                           12406 *
00009190 0D                                12407          DC    XL1'D'
00009191 000000                            12408          DC    AL3(0)
00009194 00000758                          12409          DC    AL4(1880)
00009198 00000000                          12410          DC    4X'00'
0000919C 00000000                          12411          DC    Q(@@STATIC)
000091A0 00000000                          12412          DC    X'00000000'
000091A4 00000320                          12413          DC    X'00000320'
000091A8 0000000000007AB8                  12414          DC    ADL8(@DATA)
000091B0 00000000                          12415          DC    X'00000000'
000091B4 00000C16                          12416          DC    X'00000C16'
                                           12417 *
000091B8 0D                                12418          DC    XL1'D'
000091B9 000000                            12419          DC    AL3(0)
000091BC 00000780                          12420          DC    AL4(1920)
000091C0 00000000                          12421          DC    4X'00'
000091C4 00000000                          12422          DC    Q(@@STATIC)
000091C8 00000000                          12423          DC    X'00000000'
000091CC 00000328                          12424          DC    X'00000328'
                                                                                                                           Page  249 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000091D0 0000000000007AB8                  12425          DC    ADL8(@DATA)
000091D8 00000000                          12426          DC    X'00000000'
000091DC 00000C26                          12427          DC    X'00000C26'
                                           12428 *
000091E0 0D                                12429          DC    XL1'D'
000091E1 000000                            12430          DC    AL3(0)
000091E4 000007A8                          12431          DC    AL4(1960)
000091E8 00000000                          12432          DC    4X'00'
000091EC 00000000                          12433          DC    Q(@@STATIC)
000091F0 00000000                          12434          DC    X'00000000'
000091F4 00000330                          12435          DC    X'00000330'
000091F8 0000000000007AB8                  12436          DC    ADL8(@DATA)
00009200 00000000                          12437          DC    X'00000000'
00009204 00000C34                          12438          DC    X'00000C34'
                                           12439 *
00009208 0D                                12440          DC    XL1'D'
00009209 000000                            12441          DC    AL3(0)
0000920C 000007D0                          12442          DC    AL4(2000)
00009210 00000000                          12443          DC    4X'00'
00009214 00000000                          12444          DC    Q(@@STATIC)
00009218 00000000                          12445          DC    X'00000000'
0000921C 00000338                          12446          DC    X'00000338'
00009220 0000000000007AB8                  12447          DC    ADL8(@DATA)
00009228 00000000                          12448          DC    X'00000000'
0000922C 00000C48                          12449          DC    X'00000C48'
                                           12450 *
00009230 0D                                12451          DC    XL1'D'
00009231 000000                            12452          DC    AL3(0)
00009234 000007F8                          12453          DC    AL4(2040)
00009238 00000000                          12454          DC    4X'00'
0000923C 00000000                          12455          DC    Q(@@STATIC)
00009240 00000000                          12456          DC    X'00000000'
00009244 00000340                          12457          DC    X'00000340'
00009248 0000000000007AB8                  12458          DC    ADL8(@DATA)
00009250 00000000                          12459          DC    X'00000000'
00009254 00000C58                          12460          DC    X'00000C58'
                                           12461 *
00009258 0D                                12462          DC    XL1'D'
00009259 000000                            12463          DC    AL3(0)
0000925C 00000820                          12464          DC    AL4(2080)
00009260 00000000                          12465          DC    4X'00'
00009264 00000000                          12466          DC    Q(@@STATIC)
00009268 00000000                          12467          DC    X'00000000'
0000926C 00000348                          12468          DC    X'00000348'
00009270 0000000000007AB8                  12469          DC    ADL8(@DATA)
00009278 00000000                          12470          DC    X'00000000'
0000927C 00000C6A                          12471          DC    X'00000C6A'
                                           12472 *
00009280 0D                                12473          DC    XL1'D'
00009281 000000                            12474          DC    AL3(0)
00009284 00000848                          12475          DC    AL4(2120)
00009288 00000000                          12476          DC    4X'00'
                                                                                                                           Page  250 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000928C 00000000                          12477          DC    Q(@@STATIC)
00009290 00000000                          12478          DC    X'00000000'
00009294 00000350                          12479          DC    X'00000350'
00009298 0000000000007AB8                  12480          DC    ADL8(@DATA)
000092A0 00000000                          12481          DC    X'00000000'
000092A4 00000C7C                          12482          DC    X'00000C7C'
                                           12483 *
000092A8 0D                                12484          DC    XL1'D'
000092A9 000000                            12485          DC    AL3(0)
000092AC 00000870                          12486          DC    AL4(2160)
000092B0 00000000                          12487          DC    4X'00'
000092B4 00000000                          12488          DC    Q(@@STATIC)
000092B8 00000000                          12489          DC    X'00000000'
000092BC 00000358                          12490          DC    X'00000358'
000092C0 0000000000007AB8                  12491          DC    ADL8(@DATA)
000092C8 00000000                          12492          DC    X'00000000'
000092CC 00000C92                          12493          DC    X'00000C92'
                                           12494 *
000092D0 0D                                12495          DC    XL1'D'
000092D1 000000                            12496          DC    AL3(0)
000092D4 00000898                          12497          DC    AL4(2200)
000092D8 00000000                          12498          DC    4X'00'
000092DC 00000000                          12499          DC    Q(@@STATIC)
000092E0 00000000                          12500          DC    X'00000000'
000092E4 00000360                          12501          DC    X'00000360'
000092E8 0000000000007AB8                  12502          DC    ADL8(@DATA)
000092F0 00000000                          12503          DC    X'00000000'
000092F4 00000CA8                          12504          DC    X'00000CA8'
                                           12505 *
000092F8 0D                                12506          DC    XL1'D'
000092F9 000000                            12507          DC    AL3(0)
000092FC 000008C0                          12508          DC    AL4(2240)
00009300 00000000                          12509          DC    4X'00'
00009304 00000000                          12510          DC    Q(@@STATIC)
00009308 00000000                          12511          DC    X'00000000'
0000930C 00000368                          12512          DC    X'00000368'
00009310 0000000000007AB8                  12513          DC    ADL8(@DATA)
00009318 00000000                          12514          DC    X'00000000'
0000931C 00000CBE                          12515          DC    X'00000CBE'
                                           12516 *
00009320 0D                                12517          DC    XL1'D'
00009321 000000                            12518          DC    AL3(0)
00009324 000008E8                          12519          DC    AL4(2280)
00009328 00000000                          12520          DC    4X'00'
0000932C 00000000                          12521          DC    Q(@@STATIC)
00009330 00000000                          12522          DC    X'00000000'
00009334 00000370                          12523          DC    X'00000370'
00009338 0000000000007AB8                  12524          DC    ADL8(@DATA)
00009340 00000000                          12525          DC    X'00000000'
00009344 00000CD6                          12526          DC    X'00000CD6'
                                           12527 *
00009348 0D                                12528          DC    XL1'D'
                                                                                                                           Page  251 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009349 000000                            12529          DC    AL3(0)
0000934C 00000910                          12530          DC    AL4(2320)
00009350 00000000                          12531          DC    4X'00'
00009354 00000000                          12532          DC    Q(@@STATIC)
00009358 00000000                          12533          DC    X'00000000'
0000935C 00000378                          12534          DC    X'00000378'
00009360 0000000000007AB8                  12535          DC    ADL8(@DATA)
00009368 00000000                          12536          DC    X'00000000'
0000936C 00000CE4                          12537          DC    X'00000CE4'
                                           12538 *
00009370 0D                                12539          DC    XL1'D'
00009371 000000                            12540          DC    AL3(0)
00009374 00000938                          12541          DC    AL4(2360)
00009378 00000000                          12542          DC    4X'00'
0000937C 00000000                          12543          DC    Q(@@STATIC)
00009380 00000000                          12544          DC    X'00000000'
00009384 00000380                          12545          DC    X'00000380'
00009388 0000000000007AB8                  12546          DC    ADL8(@DATA)
00009390 00000000                          12547          DC    X'00000000'
00009394 00000CF8                          12548          DC    X'00000CF8'
                                           12549 *
00009398 0D                                12550          DC    XL1'D'
00009399 000000                            12551          DC    AL3(0)
0000939C 00000960                          12552          DC    AL4(2400)
000093A0 00000000                          12553          DC    4X'00'
000093A4 00000000                          12554          DC    Q(@@STATIC)
000093A8 00000000                          12555          DC    X'00000000'
000093AC 00000388                          12556          DC    X'00000388'
000093B0 0000000000007AB8                  12557          DC    ADL8(@DATA)
000093B8 00000000                          12558          DC    X'00000000'
000093BC 00000D18                          12559          DC    X'00000D18'
                                           12560 *
000093C0 0D                                12561          DC    XL1'D'
000093C1 000000                            12562          DC    AL3(0)
000093C4 00000988                          12563          DC    AL4(2440)
000093C8 00000000                          12564          DC    4X'00'
000093CC 00000000                          12565          DC    Q(@@STATIC)
000093D0 00000000                          12566          DC    X'00000000'
000093D4 00000390                          12567          DC    X'00000390'
000093D8 0000000000007AB8                  12568          DC    ADL8(@DATA)
000093E0 00000000                          12569          DC    X'00000000'
000093E4 00000D3C                          12570          DC    X'00000D3C'
                                           12571 *
000093E8 0D                                12572          DC    XL1'D'
000093E9 000000                            12573          DC    AL3(0)
000093EC 000009B0                          12574          DC    AL4(2480)
000093F0 00000000                          12575          DC    4X'00'
000093F4 00000000                          12576          DC    Q(@@STATIC)
000093F8 00000000                          12577          DC    X'00000000'
000093FC 00000398                          12578          DC    X'00000398'
00009400 0000000000007AB8                  12579          DC    ADL8(@DATA)
00009408 00000000                          12580          DC    X'00000000'
                                                                                                                           Page  252 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000940C 00000D5E                          12581          DC    X'00000D5E'
                                           12582 *
00009410 0D                                12583          DC    XL1'D'
00009411 000000                            12584          DC    AL3(0)
00009414 000009D8                          12585          DC    AL4(2520)
00009418 00000000                          12586          DC    4X'00'
0000941C 00000000                          12587          DC    Q(@@STATIC)
00009420 00000000                          12588          DC    X'00000000'
00009424 000003A0                          12589          DC    X'000003A0'
00009428 0000000000007AB8                  12590          DC    ADL8(@DATA)
00009430 00000000                          12591          DC    X'00000000'
00009434 00000D72                          12592          DC    X'00000D72'
                                           12593 *
00009438 0D                                12594          DC    XL1'D'
00009439 000000                            12595          DC    AL3(0)
0000943C 00000A00                          12596          DC    AL4(2560)
00009440 00000000                          12597          DC    4X'00'
00009444 00000000                          12598          DC    Q(@@STATIC)
00009448 00000000                          12599          DC    X'00000000'
0000944C 000003A8                          12600          DC    X'000003A8'
00009450 0000000000007AB8                  12601          DC    ADL8(@DATA)
00009458 00000000                          12602          DC    X'00000000'
0000945C 00000D8E                          12603          DC    X'00000D8E'
                                           12604 *
00009460 0D                                12605          DC    XL1'D'
00009461 000000                            12606          DC    AL3(0)
00009464 00000A28                          12607          DC    AL4(2600)
00009468 00000000                          12608          DC    4X'00'
0000946C 00000000                          12609          DC    Q(@@STATIC)
00009470 00000000                          12610          DC    X'00000000'
00009474 000003B0                          12611          DC    X'000003B0'
00009478 0000000000007AB8                  12612          DC    ADL8(@DATA)
00009480 00000000                          12613          DC    X'00000000'
00009484 00000DA8                          12614          DC    X'00000DA8'
                                           12615 *
00009488 0D                                12616          DC    XL1'D'
00009489 000000                            12617          DC    AL3(0)
0000948C 00000A50                          12618          DC    AL4(2640)
00009490 00000000                          12619          DC    4X'00'
00009494 00000000                          12620          DC    Q(@@STATIC)
00009498 00000000                          12621          DC    X'00000000'
0000949C 000003B8                          12622          DC    X'000003B8'
000094A0 0000000000007AB8                  12623          DC    ADL8(@DATA)
000094A8 00000000                          12624          DC    X'00000000'
000094AC 00000DCC                          12625          DC    X'00000DCC'
                                           12626 *
000094B0 0D                                12627          DC    XL1'D'
000094B1 000000                            12628          DC    AL3(0)
000094B4 00000A78                          12629          DC    AL4(2680)
000094B8 00000000                          12630          DC    4X'00'
000094BC 00000000                          12631          DC    Q(@@STATIC)
000094C0 00000000                          12632          DC    X'00000000'
                                                                                                                           Page  253 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000094C4 000003C0                          12633          DC    X'000003C0'
000094C8 0000000000007AB8                  12634          DC    ADL8(@DATA)
000094D0 00000000                          12635          DC    X'00000000'
000094D4 00000DEE                          12636          DC    X'00000DEE'
                                           12637 *
000094D8 0D                                12638          DC    XL1'D'
000094D9 000000                            12639          DC    AL3(0)
000094DC 00000AA0                          12640          DC    AL4(2720)
000094E0 00000000                          12641          DC    4X'00'
000094E4 00000000                          12642          DC    Q(@@STATIC)
000094E8 00000000                          12643          DC    X'00000000'
000094EC 000003C8                          12644          DC    X'000003C8'
000094F0 0000000000007AB8                  12645          DC    ADL8(@DATA)
000094F8 00000000                          12646          DC    X'00000000'
000094FC 00000DFA                          12647          DC    X'00000DFA'
                                           12648 *
00009500 0D                                12649          DC    XL1'D'
00009501 000000                            12650          DC    AL3(0)
00009504 00000AC8                          12651          DC    AL4(2760)
00009508 00000000                          12652          DC    4X'00'
0000950C 00000000                          12653          DC    Q(@@STATIC)
00009510 00000000                          12654          DC    X'00000000'
00009514 000003D0                          12655          DC    X'000003D0'
00009518 0000000000007AB8                  12656          DC    ADL8(@DATA)
00009520 00000000                          12657          DC    X'00000000'
00009524 00000E12                          12658          DC    X'00000E12'
                                           12659 *
00009528 0D                                12660          DC    XL1'D'
00009529 000000                            12661          DC    AL3(0)
0000952C 00000AF0                          12662          DC    AL4(2800)
00009530 00000000                          12663          DC    4X'00'
00009534 00000000                          12664          DC    Q(@@STATIC)
00009538 00000000                          12665          DC    X'00000000'
0000953C 000003D8                          12666          DC    X'000003D8'
00009540 0000000000007AB8                  12667          DC    ADL8(@DATA)
00009548 00000000                          12668          DC    X'00000000'
0000954C 00000E28                          12669          DC    X'00000E28'
                                           12670 *
00009550 0D                                12671          DC    XL1'D'
00009551 000000                            12672          DC    AL3(0)
00009554 00000B18                          12673          DC    AL4(2840)
00009558 00000000                          12674          DC    4X'00'
0000955C 00000000                          12675          DC    Q(@@STATIC)
00009560 00000000                          12676          DC    X'00000000'
00009564 000003E0                          12677          DC    X'000003E0'
00009568 0000000000007AB8                  12678          DC    ADL8(@DATA)
00009570 00000000                          12679          DC    X'00000000'
00009574 00000E3E                          12680          DC    X'00000E3E'
                                           12681 *
00009578 0D                                12682          DC    XL1'D'
00009579 000000                            12683          DC    AL3(0)
0000957C 00000B40                          12684          DC    AL4(2880)
                                                                                                                           Page  254 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009580 00000000                          12685          DC    4X'00'
00009584 00000000                          12686          DC    Q(@@STATIC)
00009588 00000000                          12687          DC    X'00000000'
0000958C 000003E8                          12688          DC    X'000003E8'
00009590 0000000000007AB8                  12689          DC    ADL8(@DATA)
00009598 00000000                          12690          DC    X'00000000'
0000959C 00000E4E                          12691          DC    X'00000E4E'
                                           12692 *
000095A0 0D                                12693          DC    XL1'D'
000095A1 000000                            12694          DC    AL3(0)
000095A4 00000B68                          12695          DC    AL4(2920)
000095A8 00000000                          12696          DC    4X'00'
000095AC 00000000                          12697          DC    Q(@@STATIC)
000095B0 00000000                          12698          DC    X'00000000'
000095B4 000003F0                          12699          DC    X'000003F0'
000095B8 0000000000007AB8                  12700          DC    ADL8(@DATA)
000095C0 00000000                          12701          DC    X'00000000'
000095C4 00000E64                          12702          DC    X'00000E64'
                                           12703 *
000095C8 0D                                12704          DC    XL1'D'
000095C9 000000                            12705          DC    AL3(0)
000095CC 00000B90                          12706          DC    AL4(2960)
000095D0 00000000                          12707          DC    4X'00'
000095D4 00000000                          12708          DC    Q(@@STATIC)
000095D8 00000000                          12709          DC    X'00000000'
000095DC 000004C0                          12710          DC    X'000004C0'
000095E0 0000000000007AB8                  12711          DC    ADL8(@DATA)
000095E8 00000000                          12712          DC    X'00000000'
000095EC 00000E74                          12713          DC    X'00000E74'
                                           12714 *
000095F0 0D                                12715          DC    XL1'D'
000095F1 000000                            12716          DC    AL3(0)
000095F4 00000BB8                          12717          DC    AL4(3000)
000095F8 00000000                          12718          DC    4X'00'
000095FC 00000000                          12719          DC    Q(@@STATIC)
00009600 00000000                          12720          DC    X'00000000'
00009604 000004C8                          12721          DC    X'000004C8'
00009608 0000000000007AB8                  12722          DC    ADL8(@DATA)
00009610 00000000                          12723          DC    X'00000000'
00009614 00000E7A                          12724          DC    X'00000E7A'
                                           12725 *
00009618 0D                                12726          DC    XL1'D'
00009619 000000                            12727          DC    AL3(0)
0000961C 00000BE0                          12728          DC    AL4(3040)
00009620 00000000                          12729          DC    4X'00'
00009624 00000000                          12730          DC    Q(@@STATIC)
00009628 00000000                          12731          DC    X'00000000'
0000962C 000004D0                          12732          DC    X'000004D0'
00009630 0000000000007AB8                  12733          DC    ADL8(@DATA)
00009638 00000000                          12734          DC    X'00000000'
0000963C 00000E80                          12735          DC    X'00000E80'
                                           12736 *
                                                                                                                           Page  255 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009640 0D                                12737          DC    XL1'D'
00009641 000000                            12738          DC    AL3(0)
00009644 00000C08                          12739          DC    AL4(3080)
00009648 00000000                          12740          DC    4X'00'
0000964C 00000000                          12741          DC    Q(@@STATIC)
00009650 00000000                          12742          DC    X'00000000'
00009654 000004D8                          12743          DC    X'000004D8'
00009658 0000000000007AB8                  12744          DC    ADL8(@DATA)
00009660 00000000                          12745          DC    X'00000000'
00009664 00000E88                          12746          DC    X'00000E88'
                                           12747 *
00009668 0D                                12748          DC    XL1'D'
00009669 000000                            12749          DC    AL3(0)
0000966C 00000C30                          12750          DC    AL4(3120)
00009670 00000000                          12751          DC    4X'00'
00009674 00000000                          12752          DC    Q(@@STATIC)
00009678 00000000                          12753          DC    X'00000000'
0000967C 000004E0                          12754          DC    X'000004E0'
00009680 0000000000007AB8                  12755          DC    ADL8(@DATA)
00009688 00000000                          12756          DC    X'00000000'
0000968C 00000E8C                          12757          DC    X'00000E8C'
                                           12758 *
00009690 0D                                12759          DC    XL1'D'
00009691 000000                            12760          DC    AL3(0)
00009694 00000C58                          12761          DC    AL4(3160)
00009698 00000000                          12762          DC    4X'00'
0000969C 00000000                          12763          DC    Q(@@STATIC)
000096A0 00000000                          12764          DC    X'00000000'
000096A4 000004E8                          12765          DC    X'000004E8'
000096A8 0000000000007AB8                  12766          DC    ADL8(@DATA)
000096B0 00000000                          12767          DC    X'00000000'
000096B4 00000E92                          12768          DC    X'00000E92'
                                           12769 *
000096B8 0D                                12770          DC    XL1'D'
000096B9 000000                            12771          DC    AL3(0)
000096BC 00000C80                          12772          DC    AL4(3200)
000096C0 00000000                          12773          DC    4X'00'
000096C4 00000000                          12774          DC    Q(@@STATIC)
000096C8 00000000                          12775          DC    X'00000000'
000096CC 00000510                          12776          DC    X'00000510'
000096D0 0000000000007AB8                  12777          DC    ADL8(@DATA)
000096D8 00000000                          12778          DC    X'00000000'
000096DC 00000E9A                          12779          DC    X'00000E9A'
                                           12780 *
000096E0 0D                                12781          DC    XL1'D'
000096E1 000000                            12782          DC    AL3(0)
000096E4 00000CA8                          12783          DC    AL4(3240)
000096E8 00000000                          12784          DC    4X'00'
000096EC 00000000                          12785          DC    Q(@@STATIC)
000096F0 00000000                          12786          DC    X'00000000'
000096F4 00000518                          12787          DC    X'00000518'
000096F8 0000000000007AB8                  12788          DC    ADL8(@DATA)
                                                                                                                           Page  256 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009700 00000000                          12789          DC    X'00000000'
00009704 00000EA6                          12790          DC    X'00000EA6'
                                           12791 *
00009708 0D                                12792          DC    XL1'D'
00009709 000000                            12793          DC    AL3(0)
0000970C 00000CD0                          12794          DC    AL4(3280)
00009710 00000000                          12795          DC    4X'00'
00009714 00000000                          12796          DC    Q(@@STATIC)
00009718 00000000                          12797          DC    X'00000000'
0000971C 00000520                          12798          DC    X'00000520'
00009720 0000000000007AB8                  12799          DC    ADL8(@DATA)
00009728 00000000                          12800          DC    X'00000000'
0000972C 00000EAE                          12801          DC    X'00000EAE'
                                           12802 *
00009730 0D                                12803          DC    XL1'D'
00009731 000000                            12804          DC    AL3(0)
00009734 00000CF8                          12805          DC    AL4(3320)
00009738 00000000                          12806          DC    4X'00'
0000973C 00000000                          12807          DC    Q(@@STATIC)
00009740 00000000                          12808          DC    X'00000000'
00009744 00000528                          12809          DC    X'00000528'
00009748 0000000000007AB8                  12810          DC    ADL8(@DATA)
00009750 00000000                          12811          DC    X'00000000'
00009754 00000EB8                          12812          DC    X'00000EB8'
                                           12813 *
00009758 0D                                12814          DC    XL1'D'
00009759 000000                            12815          DC    AL3(0)
0000975C 00000D20                          12816          DC    AL4(3360)
00009760 00000000                          12817          DC    4X'00'
00009764 00000000                          12818          DC    Q(@@STATIC)
00009768 00000000                          12819          DC    X'00000000'
0000976C 00000630                          12820          DC    X'00000630'
00009770 0000000000007AB8                  12821          DC    ADL8(@DATA)
00009778 00000000                          12822          DC    X'00000000'
0000977C 00000EC0                          12823          DC    X'00000EC0'
                                           12824 *
00009780 0D                                12825          DC    XL1'D'
00009781 000000                            12826          DC    AL3(0)
00009784 00000D48                          12827          DC    AL4(3400)
00009788 00000000                          12828          DC    4X'00'
0000978C 00000000                          12829          DC    Q(@@STATIC)
00009790 00000000                          12830          DC    X'00000000'
00009794 00000638                          12831          DC    X'00000638'
00009798 0000000000007AB8                  12832          DC    ADL8(@DATA)
000097A0 00000000                          12833          DC    X'00000000'
000097A4 00000EC6                          12834          DC    X'00000EC6'
                                           12835 *
000097A8 0D                                12836          DC    XL1'D'
000097A9 000000                            12837          DC    AL3(0)
000097AC 00000D70                          12838          DC    AL4(3440)
000097B0 00000000                          12839          DC    4X'00'
000097B4 00000000                          12840          DC    Q(@@STATIC)
                                                                                                                           Page  257 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000097B8 00000000                          12841          DC    X'00000000'
000097BC 00000640                          12842          DC    X'00000640'
000097C0 0000000000007AB8                  12843          DC    ADL8(@DATA)
000097C8 00000000                          12844          DC    X'00000000'
000097CC 00000ED0                          12845          DC    X'00000ED0'
                                           12846 *
000097D0 0D                                12847          DC    XL1'D'
000097D1 000000                            12848          DC    AL3(0)
000097D4 00000D98                          12849          DC    AL4(3480)
000097D8 00000000                          12850          DC    4X'00'
000097DC 00000000                          12851          DC    Q(@@STATIC)
000097E0 00000000                          12852          DC    X'00000000'
000097E4 00000648                          12853          DC    X'00000648'
000097E8 0000000000007AB8                  12854          DC    ADL8(@DATA)
000097F0 00000000                          12855          DC    X'00000000'
000097F4 00000EDC                          12856          DC    X'00000EDC'
                                           12857 *
000097F8 0D                                12858          DC    XL1'D'
000097F9 000000                            12859          DC    AL3(0)
000097FC 00000DC0                          12860          DC    AL4(3520)
00009800 00000000                          12861          DC    4X'00'
00009804 00000000                          12862          DC    Q(@@STATIC)
00009808 00000000                          12863          DC    X'00000000'
0000980C 00000650                          12864          DC    X'00000650'
00009810 0000000000007AB8                  12865          DC    ADL8(@DATA)
00009818 00000000                          12866          DC    X'00000000'
0000981C 00000EE8                          12867          DC    X'00000EE8'
                                           12868 *
00009820 0D                                12869          DC    XL1'D'
00009821 000000                            12870          DC    AL3(0)
00009824 00000DE8                          12871          DC    AL4(3560)
00009828 00000000                          12872          DC    4X'00'
0000982C 00000000                          12873          DC    Q(@@STATIC)
00009830 00000000                          12874          DC    X'00000000'
00009834 00000658                          12875          DC    X'00000658'
00009838 0000000000007AB8                  12876          DC    ADL8(@DATA)
00009840 00000000                          12877          DC    X'00000000'
00009844 00000EF6                          12878          DC    X'00000EF6'
                                           12879 *
00009848 0D                                12880          DC    XL1'D'
00009849 000000                            12881          DC    AL3(0)
0000984C 00000E10                          12882          DC    AL4(3600)
00009850 00000000                          12883          DC    4X'00'
00009854 00000000                          12884          DC    Q(@@STATIC)
00009858 00000000                          12885          DC    X'00000000'
0000985C 00000660                          12886          DC    X'00000660'
00009860 0000000000007AB8                  12887          DC    ADL8(@DATA)
00009868 00000000                          12888          DC    X'00000000'
0000986C 00000EFE                          12889          DC    X'00000EFE'
                                           12890 *
00009870 0D                                12891          DC    XL1'D'
00009871 000000                            12892          DC    AL3(0)
                                                                                                                           Page  258 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009874 00000E38                          12893          DC    AL4(3640)
00009878 00000000                          12894          DC    4X'00'
0000987C 00000000                          12895          DC    Q(@@STATIC)
00009880 00000000                          12896          DC    X'00000000'
00009884 00000668                          12897          DC    X'00000668'
00009888 0000000000007AB8                  12898          DC    ADL8(@DATA)
00009890 00000000                          12899          DC    X'00000000'
00009894 00000F08                          12900          DC    X'00000F08'
                                           12901 *
00009898 0D                                12902          DC    XL1'D'
00009899 000000                            12903          DC    AL3(0)
0000989C 00000E60                          12904          DC    AL4(3680)
000098A0 00000000                          12905          DC    4X'00'
000098A4 00000000                          12906          DC    Q(@@STATIC)
000098A8 00000000                          12907          DC    X'00000000'
000098AC 00000670                          12908          DC    X'00000670'
000098B0 0000000000007AB8                  12909          DC    ADL8(@DATA)
000098B8 00000000                          12910          DC    X'00000000'
000098BC 00000F14                          12911          DC    X'00000F14'
                                           12912 *
000098C0 0D                                12913          DC    XL1'D'
000098C1 000000                            12914          DC    AL3(0)
000098C4 00000E88                          12915          DC    AL4(3720)
000098C8 00000000                          12916          DC    4X'00'
000098CC 00000000                          12917          DC    Q(@@STATIC)
000098D0 00000000                          12918          DC    X'00000000'
000098D4 00000678                          12919          DC    X'00000678'
000098D8 0000000000007AB8                  12920          DC    ADL8(@DATA)
000098E0 00000000                          12921          DC    X'00000000'
000098E4 00000EC0                          12922          DC    X'00000EC0'
                                           12923 *
000098E8 0D                                12924          DC    XL1'D'
000098E9 000000                            12925          DC    AL3(0)
000098EC 00000EB0                          12926          DC    AL4(3760)
000098F0 00000000                          12927          DC    4X'00'
000098F4 00000000                          12928          DC    Q(@@STATIC)
000098F8 00000000                          12929          DC    X'00000000'
000098FC 00000680                          12930          DC    X'00000680'
00009900 0000000000007AB8                  12931          DC    ADL8(@DATA)
00009908 00000000                          12932          DC    X'00000000'
0000990C 00000EF6                          12933          DC    X'00000EF6'
                                           12934 *
00009910 0D                                12935          DC    XL1'D'
00009911 000000                            12936          DC    AL3(0)
00009914 00000ED8                          12937          DC    AL4(3800)
00009918 00000000                          12938          DC    4X'00'
0000991C 00000000                          12939          DC    Q(@@STATIC)
00009920 00000000                          12940          DC    X'00000000'
00009924 00000688                          12941          DC    X'00000688'
00009928 0000000000007AB8                  12942          DC    ADL8(@DATA)
00009930 00000000                          12943          DC    X'00000000'
00009934 00000F1E                          12944          DC    X'00000F1E'
                                                                                                                           Page  259 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12945 *
00009938 0D                                12946          DC    XL1'D'
00009939 000000                            12947          DC    AL3(0)
0000993C 00000F00                          12948          DC    AL4(3840)
00009940 00000000                          12949          DC    4X'00'
00009944 00000000                          12950          DC    Q(@@STATIC)
00009948 00000000                          12951          DC    X'00000000'
0000994C 00000690                          12952          DC    X'00000690'
00009950 0000000000007AB8                  12953          DC    ADL8(@DATA)
00009958 00000000                          12954          DC    X'00000000'
0000995C 00000F2C                          12955          DC    X'00000F2C'
                                           12956 *
00009960 0D                                12957          DC    XL1'D'
00009961 000000                            12958          DC    AL3(0)
00009964 00000F28                          12959          DC    AL4(3880)
00009968 00000000                          12960          DC    4X'00'
0000996C 00000000                          12961          DC    Q(@@STATIC)
00009970 00000000                          12962          DC    X'00000000'
00009974 00000698                          12963          DC    X'00000698'
00009978 0000000000007AB8                  12964          DC    ADL8(@DATA)
00009980 00000000                          12965          DC    X'00000000'
00009984 00000F32                          12966          DC    X'00000F32'
                                           12967 *
00009988 0D                                12968          DC    XL1'D'
00009989 000000                            12969          DC    AL3(0)
0000998C 00000F50                          12970          DC    AL4(3920)
00009990 00000000                          12971          DC    4X'00'
00009994 00000000                          12972          DC    Q(@@STATIC)
00009998 00000000                          12973          DC    X'00000000'
0000999C 000006A0                          12974          DC    X'000006A0'
000099A0 0000000000007AB8                  12975          DC    ADL8(@DATA)
000099A8 00000000                          12976          DC    X'00000000'
000099AC 00000F40                          12977          DC    X'00000F40'
                                           12978 *
000099B0 0D                                12979          DC    XL1'D'
000099B1 000000                            12980          DC    AL3(0)
000099B4 00000F78                          12981          DC    AL4(3960)
000099B8 00000000                          12982          DC    4X'00'
000099BC 00000000                          12983          DC    Q(@@STATIC)
000099C0 00000000                          12984          DC    X'00000000'
000099C4 000006A8                          12985          DC    X'000006A8'
000099C8 0000000000007AB8                  12986          DC    ADL8(@DATA)
000099D0 00000000                          12987          DC    X'00000000'
000099D4 00000F4C                          12988          DC    X'00000F4C'
                                           12989 *
000099D8 0D                                12990          DC    XL1'D'
000099D9 000000                            12991          DC    AL3(0)
000099DC 00000FA0                          12992          DC    AL4(4000)
000099E0 00000000                          12993          DC    4X'00'
000099E4 00000000                          12994          DC    Q(@@STATIC)
000099E8 00000000                          12995          DC    X'00000000'
000099EC 000006B0                          12996          DC    X'000006B0'
                                                                                                                           Page  260 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000099F0 0000000000007AB8                  12997          DC    ADL8(@DATA)
000099F8 00000000                          12998          DC    X'00000000'
000099FC 00000F62                          12999          DC    X'00000F62'
                                           13000 *
00009A00 0D                                13001          DC    XL1'D'
00009A01 000000                            13002          DC    AL3(0)
00009A04 00000FC8                          13003          DC    AL4(4040)
00009A08 00000000                          13004          DC    4X'00'
00009A0C 00000000                          13005          DC    Q(@@STATIC)
00009A10 00000000                          13006          DC    X'00000000'
00009A14 000006B8                          13007          DC    X'000006B8'
00009A18 0000000000007AB8                  13008          DC    ADL8(@DATA)
00009A20 00000000                          13009          DC    X'00000000'
00009A24 00000F72                          13010          DC    X'00000F72'
                                           13011 *
00009A28 0D                                13012          DC    XL1'D'
00009A29 000000                            13013          DC    AL3(0)
00009A2C 00000FF0                          13014          DC    AL4(4080)
00009A30 00000000                          13015          DC    4X'00'
00009A34 00000000                          13016          DC    Q(@@STATIC)
00009A38 00000000                          13017          DC    X'00000000'
00009A3C 000006C0                          13018          DC    X'000006C0'
00009A40 0000000000007AB8                  13019          DC    ADL8(@DATA)
00009A48 00000000                          13020          DC    X'00000000'
00009A4C 00000F86                          13021          DC    X'00000F86'
                                           13022 *
00009A50 0D                                13023          DC    XL1'D'
00009A51 000000                            13024          DC    AL3(0)
00009A54 00001018                          13025          DC    AL4(4120)
00009A58 00000000                          13026          DC    4X'00'
00009A5C 00000000                          13027          DC    Q(@@STATIC)
00009A60 00000000                          13028          DC    X'00000000'
00009A64 000006C8                          13029          DC    X'000006C8'
00009A68 0000000000007AB8                  13030          DC    ADL8(@DATA)
00009A70 00000000                          13031          DC    X'00000000'
00009A74 00000F96                          13032          DC    X'00000F96'
                                           13033 *
00009A78 0D                                13034          DC    XL1'D'
00009A79 000000                            13035          DC    AL3(0)
00009A7C 00000000                          13036          DC    AL4(0)
00009A80 00000000                          13037          DC    4X'00'
00009A84 00000000                          13038          DC    Q(@@STATIC)
00009A88 00000000                          13039          DC    X'00000000'
00009A8C 000006D0                          13040          DC    X'000006D0'
00009A90 0000000000007AB8                  13041          DC    ADL8(@DATA)
00009A98 00000000                          13042          DC    X'00000000'
00009A9C 00000ED0                          13043          DC    X'00000ED0'
                                           13044 *
                                           13045          EXTRN @@ALLOCA
                                           13046          END
                                                 Relocation Dictionary                                                     Page  261 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000028 000000F8   Q 4      +
 00000002 00000002 00000200   A 4      +
 00000002 00000002 00000228   A 4      +
 00000002 00000002 00000230   A 4      +
 00000002 0000000A 00000318   A 4      +
 00000002 0000000B 00000320   A 4      +
 00000002 00000002 00000348   A 4      +
 00000002 00000002 00000370   A 4      +
 00000002 00000002 00000378   A 4      +
 00000002 0000000A 00000468   A 4      +
 00000002 0000000B 00000470   A 4      +
 00000002 00000002 00000490   A 4      +
 00000002 00000002 000004B8   A 4      +
 00000002 00000002 000004C0   A 4      +
 00000002 00000004 000005C0   A 4      +
 00000002 0000001B 000005C8   A 4      +
 00000002 00000029 000005D0   A 4      +
 00000002 00000029 000005D8   A 4      +
 00000002 00000002 000005F8   A 4      +
 00000002 00000002 00000620   A 4      +
 00000002 00000002 00000628   A 4      +
 00000002 00000026 000006E0   A 4      +
 00000002 00000002 00000708   A 4      +
 00000002 00000002 00000730   A 4      +
 00000002 00000002 00000738   A 4      +
 00000002 00000002 00000848   A 4      +
 00000002 00000029 00000850   A 4      +
 00000002 0000001B 00000858   A 4      +
 00000002 00000029 00000860   A 4      +
 00000002 00000002 00000880   A 4      +
 00000002 00000002 000008A8   A 4      +
 00000002 00000002 000008B0   A 4      +
 00000002 0000001E 00000980   A 4      +
 00000002 00000002 000009A8   A 4      +
 00000002 00000002 000009D0   A 4      +
 00000002 00000002 000009D8   A 4      +
 00000002 00000002 00000A90   A 4      +
 00000002 00000002 00000B18   A 4      +
 00000002 00000002 00000B40   A 4      +
 00000002 00000002 00000B48   A 4      +
 00000002 0000001D 00000BE8   A 4      +
 00000002 0000001F 00000BF0   A 4      +
 00000002 00000009 00000BF8   A 4      +
 00000002 00000002 00000D08   A 4      +
 00000002 00000002 00000D10   A 4      +
 00000002 00000002 00000DB0   A 4      +
 00000002 00000002 00000DB8   A 4      +
 00000002 00000002 00000E40   A 4      +
 00000002 00000002 00000E48   A 4      +
 00000002 00000002 00000EC0   A 4      +
                                                 Relocation Dictionary                                                     Page  262 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000EC8   A 4      +
 00000002 00000002 00000F68   A 4      +
 00000002 00000002 00000F70   A 4      +
 00000002 00000002 00001038   A 4      +
 00000002 00000002 00001060   A 4      +
 00000002 00000002 00001068   A 4      +
 00000002 00000002 00001148   A 4      +
 00000002 00000002 00001170   A 4      +
 00000002 00000002 00001198   A 4      +
 00000002 00000002 000011A0   A 4      +
 00000002 00000002 00001270   A 4      +
 00000002 00000002 00001298   A 4      +
 00000002 00000002 000012C0   A 4      +
 00000002 00000002 000012C8   A 4      +
 00000002 00000029 00001340   A 4      +
 00000002 00000028 00001348   Q 4      +
 00000002 00000015 00001350   A 4      +
 00000002 00000002 00001498   A 4      +
 00000002 00000002 000014A0   A 4      +
 00000002 00000002 000014F8   A 4      +
 00000002 00000002 00001520   A 4      +
 00000002 00000002 00001528   A 4      +
 00000002 00000029 00001630   A 4      +
 00000002 00000002 00001638   A 4      +
 00000002 00000002 00001688   A 4      +
 00000002 00000002 00001690   A 4      +
 00000002 00000002 00001708   A 4      +
 00000002 00000002 00001710   A 4      +
 00000002 00000002 00001760   A 4      +
 00000002 00000002 00001788   A 4      +
 00000002 00000002 00001790   A 4      +
 00000002 00000024 000018E8   A 4      +
 00000002 00000029 000018F0   A 4      +
 00000002 00000029 000018F8   A 4      +
 00000002 00000002 000019B8   A 4      +
 00000002 00000002 000019C0   A 4      +
 00000002 00000002 00001A38   A 4      +
 00000002 00000002 00001A40   A 4      +
 00000002 00000002 00001AC8   A 4      +
 00000002 00000002 00001AD0   A 4      +
 00000002 00000002 00001B98   A 4      +
 00000002 00000002 00001BA0   A 4      +
 00000002 00000002 00001CA8   A 4      +
 00000002 00000002 00001CB0   A 4      +
 00000002 00000002 00001CF8   A 4      +
 00000002 00000002 00001D20   A 4      +
 00000002 00000002 00001D28   A 4      +
 00000002 0000000C 00001D94   Q 4      +
 00000002 00000002 00001E78   A 4      +
 00000002 00000002 00001E80   A 4      +
 00000002 00000002 00001F08   A 4      +
 00000002 00000002 00001F10   A 4      +
 00000002 00000002 00001F68   A 4      +
                                                 Relocation Dictionary                                                     Page  263 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00001F90   A 4      +
 00000002 00000002 00001F98   A 4      +
 00000002 00000006 000020B8   A 4      +
 00000002 00000002 000020C0   A 4      +
 00000002 00000002 000020E8   A 4      +
 00000002 00000002 00002110   A 4      +
 00000002 00000002 00002118   A 4      +
 00000002 00000024 00002248   A 4      +
 00000002 00000029 00002250   A 4      +
 00000002 00000029 00002258   A 4      +
 00000002 00000007 00002260   A 4      +
 00000002 00000002 00002290   A 4      +
 00000002 00000002 000022B8   A 4      +
 00000002 00000002 000022C0   A 4      +
 00000002 00000002 00002388   A 4      +
 00000002 00000002 000023B8   A 4      +
 00000002 00000002 000023E0   A 4      +
 00000002 00000002 000023E8   A 4      +
 00000002 00000002 000024B8   A 4      +
 00000002 00000002 000024E8   A 4      +
 00000002 00000002 00002510   A 4      +
 00000002 00000002 00002518   A 4      +
 00000002 00000002 000025F8   A 4      +
 00000002 00000002 00002628   A 4      +
 00000002 00000002 00002650   A 4      +
 00000002 00000002 00002658   A 4      +
 00000002 00000002 00002728   A 4      +
 00000002 00000002 00002758   A 4      +
 00000002 00000002 00002780   A 4      +
 00000002 00000002 00002788   A 4      +
 00000002 00000002 00002860   A 4      +
 00000002 00000002 00002890   A 4      +
 00000002 00000002 000028B8   A 4      +
 00000002 00000002 000028C0   A 4      +
 00000002 00000002 00002998   A 4      +
 00000002 00000002 000029C8   A 4      +
 00000002 00000002 000029F0   A 4      +
 00000002 00000002 000029F8   A 4      +
 00000002 00000002 00002AC8   A 4      +
 00000002 00000002 00002AF8   A 4      +
 00000002 00000002 00002B20   A 4      +
 00000002 00000002 00002B28   A 4      +
 00000002 00000002 00002C00   A 4      +
 00000002 00000002 00002C30   A 4      +
 00000002 00000002 00002C58   A 4      +
 00000002 00000002 00002C60   A 4      +
 00000002 00000002 00002D58   A 4      +
 00000002 00000002 00002D60   A 4      +
 00000002 00000002 00002D90   A 4      +
 00000002 00000002 00002DB8   A 4      +
 00000002 00000002 00002DC0   A 4      +
 00000002 00000002 00002EB8   A 4      +
 00000002 00000002 00002EC0   A 4      +
                                                 Relocation Dictionary                                                     Page  264 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00002EF0   A 4      +
 00000002 00000002 00002F18   A 4      +
 00000002 00000002 00002F20   A 4      +
 00000002 00000025 00002FC0   A 4      +
 00000002 00000002 00002FC8   A 4      +
 00000002 00000002 00002FD0   A 4      +
 00000002 00000002 00002FD8   A 4      +
 00000002 00000026 00002FE0   A 4      +
 00000002 00000002 00002FE8   A 4      +
 00000002 00000002 000031C8   A 4      +
 00000002 00000002 000031F0   A 4      +
 00000002 00000002 000031F8   A 4      +
 00000002 00000002 00003308   A 4      +
 00000002 00000002 00003310   A 4      +
 00000002 00000002 00003340   A 4      +
 00000002 00000002 00003368   A 4      +
 00000002 00000002 00003370   A 4      +
 00000002 00000024 00003478   A 4      +
 00000002 00000029 00003480   A 4      +
 00000002 00000029 00003488   A 4      +
 00000002 00000002 00003490   A 4      +
 00000002 00000002 000034C0   A 4      +
 00000002 00000002 000034E8   A 4      +
 00000002 00000002 000034F0   A 4      +
 00000002 00000002 000035C0   A 4      +
 00000002 00000002 000035F0   A 4      +
 00000002 00000002 00003618   A 4      +
 00000002 00000002 00003620   A 4      +
 00000002 00000015 000036D8   A 4      +
 00000002 00000029 000036E0   A 4      +
 00000002 00000028 000036E8   Q 4      +
 00000002 00000002 00003788   A 4      +
 00000002 00000002 000037B0   A 4      +
 00000002 00000002 000037B8   A 4      +
 00000002 00000029 00003858   A 4      +
 00000002 0000001C 00003860   A 4      +
 00000002 00000002 00003868   A 4      +
 00000002 0000001D 00003878   A 4      +
 00000002 00000002 00003880   A 4      +
 00000002 0000001F 00003888   A 4      +
 00000002 00000002 00003890   A 4      +
 00000002 00000027 00003898   A 4      +
 00000002 00000029 000038A0   A 4      +
 00000002 00000002 000038A8   A 4      +
 00000002 0000001B 000038B0   A 4      +
 00000002 00000002 000038B8   A 4      +
 00000002 00000002 00003F78   A 4      +
 00000002 00000002 00003FA0   A 4      +
 00000002 00000002 00003FA8   A 4      +
 00000002 00000024 00004070   A 4      +
 00000002 00000029 00004078   A 4      +
 00000002 00000029 00004080   A 4      +
 00000002 0000001B 00004088   A 4      +
                                                 Relocation Dictionary                                                     Page  265 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 000040A0   A 4      +
 00000002 00000023 000040A8   A 4      +
 00000002 00000002 000040B0   A 4      +
 00000002 00000002 000043D0   A 4      +
 00000002 00000002 000043F8   A 4      +
 00000002 00000002 00004400   A 4      +
 00000002 00000024 000046A0   A 4      +
 00000002 00000029 000046A8   A 4      +
 00000002 00000029 000046B0   A 4      +
 00000002 00000002 000046B8   A 4      +
 00000002 00000002 000046C0   A 4      +
 00000002 00000002 000046C8   A 4      +
 00000002 00000002 000046D0   A 4      +
 00000002 00000002 00004710   A 4      +
 00000002 00000002 00004738   A 4      +
 00000002 00000002 00004740   A 4      +
 00000002 00000002 000048D8   A 4      +
 00000002 00000002 000048E0   A 4      +
 00000002 00000002 000048E8   A 4      +
 00000002 00000002 000048F0   A 4      +
 00000002 00000002 00004970   A 4      +
 00000002 00000002 00004998   A 4      +
 00000002 00000002 000049A0   A 4      +
 00000002 00000002 00004A30   A 4      +
 00000002 00000002 00004A38   A 4      +
 00000002 00000002 00004A40   A 4      +
 00000002 00000002 00004A48   A 4      +
 00000002 00000002 00004A50   A 4      +
 00000002 00000010 00004A58   A 4      +
 00000002 00000002 00004BE0   A 4      +
 00000002 00000002 00004C08   A 4      +
 00000002 00000002 00004C10   A 4      +
 00000002 00000002 00004D08   A 4      +
 00000002 00000002 00004D10   A 4      +
 00000002 00000022 00004D18   A 4      +
 00000002 00000002 00004DD8   A 4      +
 00000002 00000002 00004E00   A 4      +
 00000002 00000002 00004E08   A 4      +
 00000002 00000002 00004E90   A 4      +
 00000002 00000002 00004E98   A 4      +
 00000002 00000002 00004EA0   A 4      +
 00000002 00000020 00004EA8   A 4      +
 00000002 00000002 00005020   A 4      +
 00000002 00000002 00005048   A 4      +
 00000002 00000002 00005050   A 4      +
 00000002 00000002 00005228   A 4      +
 00000002 00000002 00005230   A 4      +
 00000002 00000002 00005238   A 4      +
 00000002 00000002 00005240   A 4      +
 00000002 00000002 00005248   A 4      +
 00000002 00000002 00005250   A 4      +
 00000002 00000002 00005258   A 4      +
 00000002 00000002 00005260   A 4      +
                                                 Relocation Dictionary                                                     Page  266 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00005330   A 4      +
 00000002 00000002 00005358   A 4      +
 00000002 00000002 00005360   A 4      +
 00000002 00000002 00005468   A 4      +
 00000002 00000002 00005470   A 4      +
 00000002 00000002 00005478   A 4      +
 00000002 00000002 00005480   A 4      +
 00000002 00000002 00005488   A 4      +
 00000002 00000002 00005490   A 4      +
 00000002 00000002 00005778   A 4      +
 00000002 00000002 000057A0   A 4      +
 00000002 00000002 000057A8   A 4      +
 00000002 00000002 000059B8   A 4      +
 00000002 00000002 000059C0   A 4      +
 00000002 00000002 000059C8   A 4      +
 00000002 00000002 000059D0   A 4      +
 00000002 0000001B 000059D8   A 4      +
 00000002 00000029 000059E0   A 4      +
 00000002 00000029 000059E8   A 4      +
 00000002 00000002 00005A20   A 4      +
 00000002 00000002 00005A48   A 4      +
 00000002 00000002 00005A50   A 4      +
 00000002 00000002 00005B20   A 4      +
 00000002 00000002 00005B28   A 4      +
 00000002 00000024 00005B30   A 4      +
 00000002 00000029 00005B38   A 4      +
 00000002 00000029 00005B40   A 4      +
 00000002 00000012 00005B48   A 4      +
 00000002 0000001D 00005B50   A 4      +
 00000002 00000002 00005B58   A 4      +
 00000002 0000001F 00005B60   A 4      +
 00000002 00000027 00005B68   A 4      +
 00000002 00000002 00005B70   A 4      +
 00000002 00000002 00005B78   A 4      +
 00000002 00000002 00005B80   A 4      +
 00000002 00000002 00005B88   A 4      +
 00000002 00000002 00005B90   A 4      +
 00000002 00000002 00005B98   A 4      +
 00000002 0000001B 00005BA0   A 4      +
 00000002 00000005 00005BA8   A 4      +
 00000002 00000002 000061C8   A 4      +
 00000002 00000002 000061F0   A 4      +
 00000002 00000002 000061F8   A 4      +
 00000002 00000002 000063D0   A 4      +
 00000002 00000011 000063D8   A 4      +
 00000002 00000019 000063E0   A 4      +
 00000002 00000002 000063E8   A 4      +
 00000002 0000002C 000063F0   A 4      +
 00000002 00000017 000063F8   A 4      +
 00000002 00000016 00006400   A 4      +
 00000002 0000001D 00006408   A 4      +
 00000002 00000002 00006410   A 4      +
 00000002 0000001F 00006418   A 4      +
                                                 Relocation Dictionary                                                     Page  267 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000018 00006420   A 4      +
 00000002 00000027 00006428   A 4      +
 00000002 00000029 00006430   A 4      +
 00000002 00000002 00006438   A 4      +
 00000002 00000013 00006440   A 4      +
 00000002 00000002 000065B8   A 4      +
 00000002 00000002 000065E0   A 4      +
 00000002 00000002 000065E8   A 4      +
 00000002 0000000F 00006670   A 4      +
 00000002 00000002 00006760   A 4      +
 00000002 00000002 00006788   A 4      +
 00000002 00000002 00006790   A 4      +
 00000002 00000002 000068B8   A 4      +
 00000002 0000001B 000068C0   A 4      +
 00000002 00000029 000068C8   A 4      +
 00000002 00000029 000068D0   A 4      +
 00000002 0000000D 000068D8   A 4      +
 00000002 00000002 000068E0   A 4      +
 00000002 00000002 000068E8   A 4      +
 00000002 00000024 000068F0   A 4      +
 00000002 00000002 000068F8   A 4      +
 00000002 00000003 00006900   A 4      +
 00000002 00000008 00006908   A 4      +
 00000002 00000002 00006910   A 4      +
 00000002 00000002 00006C38   A 4      +
 00000002 00000002 00006C60   A 4      +
 00000002 00000002 00006C68   A 4      +
 00000002 00000002 00006E08   A 4      +
 00000002 0000000D 00006E10   A 4      +
 00000002 00000029 00006E18   A 4      +
 00000002 0000001B 00006E20   A 4      +
 00000002 00000029 00006E28   A 4      +
 00000002 0000001A 00006E30   A 4      +
 00000002 00000002 00006E38   A 4      +
 00000002 00000002 00006E88   A 4      +
 00000002 00000002 00006EB0   A 4      +
 00000002 00000002 00006EB8   A 4      +
 00000002 00000002 000071B0   A 4      +
 00000002 00000024 000071B8   A 4      +
 00000002 00000029 000071C0   A 4      +
 00000002 00000029 000071C8   A 4      +
 00000002 00000002 000071D0   A 4      +
 00000002 00000002 000071D8   A 4      +
 00000002 00000002 000071E0   A 4      +
 00000002 00000002 000071E8   A 4      +
 00000002 00000002 00007228   A 4      +
 00000002 00000002 00007250   A 4      +
 00000002 00000002 00007258   A 4      +
 00000002 00000002 000072D8   A 4      +
 00000002 00000002 000072E0   A 4      +
 00000002 00000002 00007398   A 4      +
 00000002 00000002 000073C0   A 4      +
 00000002 00000002 000073C8   A 4      +
                                                 Relocation Dictionary                                                     Page  268 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00007488   A 4      +
 00000002 00000002 00007490   A 4      +
 00000002 00000021 00007498   A 4      +
 00000002 00000002 000074A0   A 4      +
 00000002 0000001B 000074A8   A 4      +
 00000002 00000029 000074B0   A 4      +
 00000002 00000029 000074B8   A 4      +
 00000002 00000002 000074C0   A 4      +
 00000002 00000002 000074C8   A 4      +
 00000002 00000002 000074D0   A 4      +
 00000002 0000001D 000074D8   A 4      +
 00000002 00000002 000074E0   A 4      +
 00000002 0000001F 000074E8   A 4      +
 00000002 00000002 000074F0   A 4      +
 00000002 00000002 000074F8   A 4      +
 00000002 00000027 00007500   A 4      +
 00000002 00000014 00007508   A 4      +
 00000002 00000002 000078D8   A 4      +
 00000002 00000002 00007900   A 4      +
 00000002 00000002 00007908   A 4      +
 00000002 00000002 000079C0   A 4      +
 00000002 00000002 000079C8   A 4      +
 00000002 0000000E 000079D0   A 4      +
 00000002 00000002 000079D8   A 4      +
 0000002B 00000028 00008A6C   Q 4      +
 0000002B 00000028 00008B8C   Q 4      +
 0000002B 00000028 00008C4C   Q 4      +
 0000002B 00000028 00008C74   Q 4      +
 0000002B 00000028 00008C9C   Q 4      +
 0000002B 00000029 00008CA8   A 4      +
 0000002B 00000028 00008CC4   Q 4      +
 0000002B 00000029 00008CD0   A 4      +
 0000002B 00000028 00008CEC   Q 4      +
 0000002B 00000029 00008CF8   A 4      +
 0000002B 00000028 00008D14   Q 4      +
 0000002B 00000029 00008D20   A 4      +
 0000002B 00000028 00008D3C   Q 4      +
 0000002B 00000029 00008D48   A 4      +
 0000002B 00000028 00008D64   Q 4      +
 0000002B 00000029 00008D70   A 4      +
 0000002B 00000028 00008D8C   Q 4      +
 0000002B 00000029 00008D98   A 4      +
 0000002B 00000028 00008DB4   Q 4      +
 0000002B 00000029 00008DC0   A 4      +
 0000002B 00000028 00008DDC   Q 4      +
 0000002B 00000029 00008DE8   A 4      +
 0000002B 00000028 00008E04   Q 4      +
 0000002B 00000029 00008E10   A 4      +
 0000002B 00000028 00008E2C   Q 4      +
 0000002B 00000029 00008E38   A 4      +
 0000002B 00000028 00008E54   Q 4      +
 0000002B 00000029 00008E60   A 4      +
 0000002B 00000028 00008E7C   Q 4      +
                                                 Relocation Dictionary                                                     Page  269 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 0000002B 00000029 00008E88   A 4      +
 0000002B 00000028 00008EA4   Q 4      +
 0000002B 00000029 00008EB0   A 4      +
 0000002B 00000028 00008ECC   Q 4      +
 0000002B 00000029 00008ED8   A 4      +
 0000002B 00000028 00008EF4   Q 4      +
 0000002B 00000029 00008F00   A 4      +
 0000002B 00000028 00008F1C   Q 4      +
 0000002B 00000029 00008F28   A 4      +
 0000002B 00000028 00008F44   Q 4      +
 0000002B 00000029 00008F50   A 4      +
 0000002B 00000028 00008F6C   Q 4      +
 0000002B 00000029 00008F78   A 4      +
 0000002B 00000028 00008F94   Q 4      +
 0000002B 00000029 00008FA0   A 4      +
 0000002B 00000028 00008FBC   Q 4      +
 0000002B 00000029 00008FC8   A 4      +
 0000002B 00000028 00008FE4   Q 4      +
 0000002B 00000029 00008FF0   A 4      +
 0000002B 00000028 0000900C   Q 4      +
 0000002B 00000029 00009018   A 4      +
 0000002B 00000028 00009034   Q 4      +
 0000002B 00000029 00009040   A 4      +
 0000002B 00000028 0000905C   Q 4      +
 0000002B 00000029 00009068   A 4      +
 0000002B 00000028 00009084   Q 4      +
 0000002B 00000029 00009090   A 4      +
 0000002B 00000028 000090AC   Q 4      +
 0000002B 00000029 000090B8   A 4      +
 0000002B 00000028 000090D4   Q 4      +
 0000002B 00000029 000090E0   A 4      +
 0000002B 00000028 000090FC   Q 4      +
 0000002B 00000029 00009108   A 4      +
 0000002B 00000028 00009124   Q 4      +
 0000002B 00000029 00009130   A 4      +
 0000002B 00000028 0000914C   Q 4      +
 0000002B 00000029 00009158   A 4      +
 0000002B 00000028 00009174   Q 4      +
 0000002B 00000029 00009180   A 4      +
 0000002B 00000028 0000919C   Q 4      +
 0000002B 00000029 000091A8   A 4      +
 0000002B 00000028 000091C4   Q 4      +
 0000002B 00000029 000091D0   A 4      +
 0000002B 00000028 000091EC   Q 4      +
 0000002B 00000029 000091F8   A 4      +
 0000002B 00000028 00009214   Q 4      +
 0000002B 00000029 00009220   A 4      +
 0000002B 00000028 0000923C   Q 4      +
 0000002B 00000029 00009248   A 4      +
 0000002B 00000028 00009264   Q 4      +
 0000002B 00000029 00009270   A 4      +
 0000002B 00000028 0000928C   Q 4      +
 0000002B 00000029 00009298   A 4      +
                                                 Relocation Dictionary                                                     Page  270 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 0000002B 00000028 000092B4   Q 4      +
 0000002B 00000029 000092C0   A 4      +
 0000002B 00000028 000092DC   Q 4      +
 0000002B 00000029 000092E8   A 4      +
 0000002B 00000028 00009304   Q 4      +
 0000002B 00000029 00009310   A 4      +
 0000002B 00000028 0000932C   Q 4      +
 0000002B 00000029 00009338   A 4      +
 0000002B 00000028 00009354   Q 4      +
 0000002B 00000029 00009360   A 4      +
 0000002B 00000028 0000937C   Q 4      +
 0000002B 00000029 00009388   A 4      +
 0000002B 00000028 000093A4   Q 4      +
 0000002B 00000029 000093B0   A 4      +
 0000002B 00000028 000093CC   Q 4      +
 0000002B 00000029 000093D8   A 4      +
 0000002B 00000028 000093F4   Q 4      +
 0000002B 00000029 00009400   A 4      +
 0000002B 00000028 0000941C   Q 4      +
 0000002B 00000029 00009428   A 4      +
 0000002B 00000028 00009444   Q 4      +
 0000002B 00000029 00009450   A 4      +
 0000002B 00000028 0000946C   Q 4      +
 0000002B 00000029 00009478   A 4      +
 0000002B 00000028 00009494   Q 4      +
 0000002B 00000029 000094A0   A 4      +
 0000002B 00000028 000094BC   Q 4      +
 0000002B 00000029 000094C8   A 4      +
 0000002B 00000028 000094E4   Q 4      +
 0000002B 00000029 000094F0   A 4      +
 0000002B 00000028 0000950C   Q 4      +
 0000002B 00000029 00009518   A 4      +
 0000002B 00000028 00009534   Q 4      +
 0000002B 00000029 00009540   A 4      +
 0000002B 00000028 0000955C   Q 4      +
 0000002B 00000029 00009568   A 4      +
 0000002B 00000028 00009584   Q 4      +
 0000002B 00000029 00009590   A 4      +
 0000002B 00000028 000095AC   Q 4      +
 0000002B 00000029 000095B8   A 4      +
 0000002B 00000028 000095D4   Q 4      +
 0000002B 00000029 000095E0   A 4      +
 0000002B 00000028 000095FC   Q 4      +
 0000002B 00000029 00009608   A 4      +
 0000002B 00000028 00009624   Q 4      +
 0000002B 00000029 00009630   A 4      +
 0000002B 00000028 0000964C   Q 4      +
 0000002B 00000029 00009658   A 4      +
 0000002B 00000028 00009674   Q 4      +
 0000002B 00000029 00009680   A 4      +
 0000002B 00000028 0000969C   Q 4      +
 0000002B 00000029 000096A8   A 4      +
 0000002B 00000028 000096C4   Q 4      +
                                                 Relocation Dictionary                                                     Page  271 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 0000002B 00000029 000096D0   A 4      +
 0000002B 00000028 000096EC   Q 4      +
 0000002B 00000029 000096F8   A 4      +
 0000002B 00000028 00009714   Q 4      +
 0000002B 00000029 00009720   A 4      +
 0000002B 00000028 0000973C   Q 4      +
 0000002B 00000029 00009748   A 4      +
 0000002B 00000028 00009764   Q 4      +
 0000002B 00000029 00009770   A 4      +
 0000002B 00000028 0000978C   Q 4      +
 0000002B 00000029 00009798   A 4      +
 0000002B 00000028 000097B4   Q 4      +
 0000002B 00000029 000097C0   A 4      +
 0000002B 00000028 000097DC   Q 4      +
 0000002B 00000029 000097E8   A 4      +
 0000002B 00000028 00009804   Q 4      +
 0000002B 00000029 00009810   A 4      +
 0000002B 00000028 0000982C   Q 4      +
 0000002B 00000029 00009838   A 4      +
 0000002B 00000028 00009854   Q 4      +
 0000002B 00000029 00009860   A 4      +
 0000002B 00000028 0000987C   Q 4      +
 0000002B 00000029 00009888   A 4      +
 0000002B 00000028 000098A4   Q 4      +
 0000002B 00000029 000098B0   A 4      +
 0000002B 00000028 000098CC   Q 4      +
 0000002B 00000029 000098D8   A 4      +
 0000002B 00000028 000098F4   Q 4      +
 0000002B 00000029 00009900   A 4      +
 0000002B 00000028 0000991C   Q 4      +
 0000002B 00000029 00009928   A 4      +
 0000002B 00000028 00009944   Q 4      +
 0000002B 00000029 00009950   A 4      +
 0000002B 00000028 0000996C   Q 4      +
 0000002B 00000029 00009978   A 4      +
 0000002B 00000028 00009994   Q 4      +
 0000002B 00000029 000099A0   A 4      +
 0000002B 00000028 000099BC   Q 4      +
 0000002B 00000029 000099C8   A 4      +
 0000002B 00000028 000099E4   Q 4      +
 0000002B 00000029 000099F0   A 4      +
 0000002B 00000028 00009A0C   Q 4      +
 0000002B 00000029 00009A18   A 4      +
 0000002B 00000028 00009A34   Q 4      +
 0000002B 00000029 00009A40   A 4      +
 0000002B 00000028 00009A5C   Q 4      +
 0000002B 00000029 00009A68   A 4      +
 0000002B 00000028 00009A84   Q 4      +
 0000002B 00000029 00009A90   A 4      +
                                                 DSECT Cross Reference                                                     Page  272 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#ebcdic_2_utf8
         000000A9  FFFFFFFF  00266
@AUTO#F#1953
         000000AC  FFFFFFC1  10919
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFE  00393
@AUTO#rd_atomic64_add
         000000B0  FFFFFFFD  00520
@AUTO#rd_avg_add
         000000A8  FFFFFFF7  01312
@AUTO#rd_buf_len
         000000A8  FFFFFFF4  01553
@AUTO#rd_buf_write_pos
         000000A8  FFFFFFF6  01406
@AUTO#rd_buf_write_remains
         000000A8  FFFFFFF5  01482
@AUTO#rd_clock
         000000B8  FFFFFFF9  01000
@AUTO#rd_crc32_finalize
         000000A8  FFFFFFE3  03317
@AUTO#rd_crc32_init
         000000A8  FFFFFFE5  03106
@AUTO#rd_crc32_update
         000000AC  FFFFFFE4  03240
@AUTO#rd_free
         000000A8  FFFFFFFB  00751
@AUTO#rd_interval0
         000000B0  FFFFFFF8  01147
@AUTO#rd_kafka_buf_$Api$Version_set
         000000A8  FFFFFFE2  03392
@AUTO#rd_kafka_buf_crc_finalize
         000000A8  FFFFFFD2  05443
@AUTO#rd_kafka_buf_crc_init
         000000A8  FFFFFFD3  05335
@AUTO#rd_kafka_buf_update
         000000A8  FFFFFFE0  03664
@AUTO#rd_kafka_buf_update_i16
         000000A8  FFFFFFDD  03988
@AUTO#rd_kafka_buf_update_i32
         000000A8  FFFFFFDB  04205
@AUTO#rd_kafka_buf_update_i64
         000000A8  FFFFFFD8  04532
@AUTO#rd_kafka_buf_update_u32
         000000A8  FFFFFFDA  04315
@AUTO#rd_kafka_buf_write
         000000B0  FFFFFFE1  03526
@AUTO#rd_kafka_buf_write_bytes
         000000B0  FFFFFFD4  05202
@AUTO#rd_kafka_buf_write_i16
         000000A8  FFFFFFDE  03877
@AUTO#rd_kafka_buf_write_i32
         000000A8  FFFFFFDC  04095
@AUTO#rd_kafka_buf_write_i64
                                                 DSECT Cross Reference                                                     Page  273 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
         000000A8  FFFFFFD9  04422
@AUTO#rd_kafka_buf_write_i8
         000000A8  FFFFFFDF  03769
@AUTO#rd_kafka_buf_write_kstr
         000000B8  FFFFFFD5  05063
@AUTO#rd_kafka_buf_write_uvarint
         000000B2  FFFFFFD6  04779
@AUTO#rd_kafka_buf_write_varint
         000000B2  FFFFFFD7  04654
@AUTO#rd_kafka_compression2str
         000000A8  FFFFFFD1  05588
@AUTO#rd_kafka_headers_serialized_size
         000000A8  FFFFFFEE  02198
@AUTO#rd_kafka_msg_wire_size
         000000B0  FFFFFFED  02336
@AUTO#rd_kafka_msgq_deq
         000000A8  FFFFFFEA  02665
@AUTO#rd_kafka_msgq_enq
         000000A8  FFFFFFE7  02905
@AUTO#rd_kafka_msgq_first
         000000A8  FFFFFFE9  02736
@AUTO#rd_kafka_msgq_last
         000000A8  FFFFFFE8  02810
@AUTO#rd_kafka_msgq_len
         000000A8  FFFFFFEC  02408
@AUTO#rd_kafka_msgq_size
         000000A8  FFFFFFEB  02479
@AUTO#rd_kafka_msgset_create_$Produce$Request
         00000148  FFFFFFBE  11670
@AUTO#rd_kafka_msgset_writer_alloc_buf
         000000B0  FFFFFFCF  06709
@AUTO#rd_kafka_msgset_writer_calc_crc_v2
         000000D0  FFFFFFC2  10600
@AUTO#rd_kafka_msgset_writer_compress
         00000188  FFFFFFC3  10401
@AUTO#rd_kafka_msgset_writer_compress_lz4
         000000AC  FFFFFFC4  09966
@AUTO#rd_kafka_msgset_writer_compress_snappy
         000001C8  FFFFFFC5  09809
@AUTO#rd_kafka_msgset_writer_finalize
         000001B0  FFFFFFBF  11485
@AUTO#rd_kafka_msgset_writer_finalize_$Message$Set
         000000A8  FFFFFFC0  11060
@AUTO#rd_kafka_msgset_writer_init
         000000AC  FFFFFFCC  07483
@AUTO#rd_kafka_msgset_writer_select_$Msg$Version
         000001AC  FFFFFFD0  06261
@AUTO#rd_kafka_msgset_writer_write_$Message$Set_v2_header
         000000A8  FFFFFFCE  07019
@AUTO#rd_kafka_msgset_writer_write_$Produce_header
         000000A8  FFFFFFCD  07252
@AUTO#rd_kafka_msgset_writer_write_msg
         000000C0  FFFFFFC7  08844
                                                 DSECT Cross Reference                                                     Page  274 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#rd_kafka_msgset_writer_write_msg_headers
         000000B0  FFFFFFCA  07863
@AUTO#rd_kafka_msgset_writer_write_msg_payload
         000000A8  FFFFFFCB  07655
@AUTO#rd_kafka_msgset_writer_write_msg_v0_1
         000000B0  FFFFFFC9  08161
@AUTO#rd_kafka_msgset_writer_write_msg_v2
         000000D0  FFFFFFC8  08587
@AUTO#rd_kafka_msgset_writer_write_msgq
         000001A8  FFFFFFC6  09479
@AUTO#rd_kafka_pid2str
         000000A8  FFFFFFEF  02127
@AUTO#rd_malloc
         000000A8  FFFFFFFC  00648
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFFA  00887
@AUTO#rd_slice_abs_offset
         000000A8  FFFFFFF3  01639
@AUTO#rd_strlcpy
         000000B0  FFFFFFE6  03029
@AUTO#rd_uvarint_enc_i32
         000000A8  FFFFFFF0  01970
@AUTO#rd_uvarint_enc_i64
         000000A8  FFFFFFF1  01864
@AUTO#rd_uvarint_enc_u64
         000000B0  FFFFFFF2  01753
                                          Macro and Copy Code Source Summary                                               Page  275 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:35 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  276 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   151  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 00136    229 @REGION_338_1,12
   261  000001DE  00000002 DROP                                           12              12
   330  0000027E  00000002 USING  ORDINARY    00000240 00001000 00000002  12 000E0    355 @REGION_734_1,12
   388  00000328  00000002 DROP                                           12              12
   457  000003C6  00000002 USING  ORDINARY    00000388 00001000 00000002  12 000E8    482 @REGION_738_1,12
   515  00000478  00000002 DROP                                           12              12
   584  0000050E  00000002 USING  ORDINARY    000004D0 00001000 00000002  12 00108    610 @REGION_752_1,12
   643  000005E0  00000002 DROP                                           12              12
   711  00000676  00000002 USING  ORDINARY    00000638 00001000 00000002  12 000A8    718 @REGION_754_1,12
   746  000006E8  00000002 DROP                                           12              12
   814  00000786  00000002 USING  ORDINARY    00000748 00001000 00000002  12 00118    848 @REGION_758_1,12
   882  00000868  00000002 DROP                                           12              12
   951  000008FE  00000002 USING  ORDINARY    000008C0 00001000 00000002  12 000C0    961 @REGION_1088_1,12
   995  00000988  00000002 DROP                                           12              12
  1064  00000A26  00000002 USING  ORDINARY    000009E8 00001000 00000002  12 000C8   1112 @REGION_1204_1,12
  1142  00000AFC  00000002 DROP                                           12              12
  1211  00000B96  00000002 USING  ORDINARY    00000B58 00001000 00000002  12 00122   1282 @REGION_1222_1,12
  1307  00000CC2  00000002 DROP                                           12              12
  1364  00000D2A  00000002 USING  ORDINARY    00000D20 00001000 00000002  12 00036   1379 @REGION_1266_1,12
  1401  00000D64  00000002 DROP                                           12              12
  1605  00000EE2  00000002 USING  ORDINARY    00000ED8 00001000 00000002  12 0003A   1614 @REGION_1286_1,12
  1634  00000F20  00000002 DROP                                           12              12
  1691  00000F8A  00000002 USING  ORDINARY    00000F80 00001000 00000002  12 00084   1732 @REGION_1308_1,12
  1748  00001012  00000002 DROP                                           12              12
  1817  000010B6  00000002 USING  ORDINARY    00001078 00001000 00000002  12 000D0   1832 @REGION_1309_1,12
  1859  00001150  00000002 DROP                                           12              12
  1927  000011EE  00000002 USING  ORDINARY    000011B0 00001000 00000002  12 000C0   1938 @REGION_1310_1,12
  1965  00001278  00000002 DROP                                           12              12
  2033  00001316  00000002 USING  ORDINARY    000012D8 00001000 00000002  12 00122   2091 @REGION_1330_1,12
  2122  00001442  00000002 DROP                                           12              12
  2261  00001576  00000002 USING  ORDINARY    00001538 00001000 00000002  12 00100   2297 @REGION_1334_1,12
  2331  00001640  00000002 DROP                                           12              12
  2542  000017DE  00000002 USING  ORDINARY    000017A0 00001000 00000002  12 0016C   2624 @REGION_1347_1,12
  2660  0000196A  00000002 DROP                                           12              12
  2957  00001BBA  00000002 USING  ORDINARY    00001BB0 00001000 00000002  12 000A6   3003 @REGION_1384_1,12
  3024  00001C64  00000002 DROP                                           12              12
  3169  00001D76  00000002 USING  ORDINARY    00001D38 00001000 00000002  12 00090   3211 @REGION_1485_1,12
  3235  00001E30  00000002 DROP                                           12              12
  3455  00001FE6  00000002 USING  ORDINARY    00001FA8 00001000 00000002  12 00118   3488 @REGION_1517_1,12
  3521  000020C8  00000002 DROP                                           12              12
  3590  00002166  00000002 USING  ORDINARY    00002128 00001000 00000002  12 00138   3628 @REGION_1518_1,12
  3659  00002268  00000002 DROP                                           12              12
  3727  0000230E  00000002 USING  ORDINARY    000022D0 00001000 00000002  12 000B8   3737 @REGION_1519_1,12
  3764  00002390  00000002 DROP                                           12              12
  3832  00002436  00000002 USING  ORDINARY    000023F8 00001000 00000002  12 000C0   3845 @REGION_1521_1,12
  3872  000024C0  00000002 DROP                                           12              12
  3940  00002566  00000002 USING  ORDINARY    00002528 00001000 00000002  12 000D0   3955 @REGION_1522_1,12
  3983  00002600  00000002 DROP                                           12              12
  4051  000026A6  00000002 USING  ORDINARY    00002668 00001000 00000002  12 000C0   4063 @REGION_1523_1,12
  4090  00002730  00000002 DROP                                           12              12
  4158  000027D6  00000002 USING  ORDINARY    00002798 00001000 00000002  12 000C8   4172 @REGION_1524_1,12
                                                      Using Map                                                            Page  277 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  4200  00002868  00000002 DROP                                           12              12
  4268  0000290E  00000002 USING  ORDINARY    000028D0 00001000 00000002  12 000C8   4282 @REGION_1525_1,12
  4310  000029A0  00000002 DROP                                           12              12
  4378  00002A46  00000002 USING  ORDINARY    00002A08 00001000 00000002  12 000C0   4390 @REGION_1527_1,12
  4417  00002AD0  00000002 DROP                                           12              12
  4485  00002B76  00000002 USING  ORDINARY    00002B38 00001000 00000002  12 000C8   4499 @REGION_1528_1,12
  4527  00002C08  00000002 DROP                                           12              12
  4595  00002CAE  00000002 USING  ORDINARY    00002C70 00001000 00000002  12 000F0   4621 @REGION_1529_1,12
  4649  00002D68  00000002 DROP                                           12              12
  4720  00002E0E  00000002 USING  ORDINARY    00002DD0 00001000 00000002  12 000F0   4746 @REGION_1530_1,12
  4774  00002EC8  00000002 DROP                                           12              12
  4845  00002F6E  00000002 USING  ORDINARY    00002F30 00001000 00000002  12 0022A   5028 @REGION_1531_1,12
  5058  000031A2  00000002 DROP                                           12              12
  5133  00003246  00000002 USING  ORDINARY    00003208 00001000 00000002  12 00108   5166 @REGION_1536_1,12
  5197  00003318  00000002 DROP                                           12              12
  5266  000033BE  00000002 USING  ORDINARY    00003380 00001000 00000002  12 00110   5298 @REGION_1539_1,12
  5330  00003498  00000002 DROP                                           12              12
  5398  0000353E  00000002 USING  ORDINARY    00003500 00001000 00000002  12 000C0   5410 @REGION_1540_1,12
  5438  000035C8  00000002 DROP                                           12              12
  5506  0000366E  00000002 USING  ORDINARY    00003630 00001000 00000002  12 000D6   5558 @REGION_1559_1,12
  5583  0000374E  00000002 DROP                                           12              12
  5652  00003806  00000002 USING  ORDINARY    000037C8 00001000 00000002  12 0073A   6226 @REGION_1938_1,12
  6255  00003F4A  00000002 DROP                                           12              12
  6335  00003FF6  00000002 USING  ORDINARY    00003FB8 00001000 00000002  12 00314   6679 @REGION_1939_1,12
  6704  0000438C  00000002 DROP                                           12              12
  6782  0000444E  00000002 USING  ORDINARY    00004410 00001000 00000002  12 002C0   6905 @REGION_1940_1,12
  7013  000046D8  00000002 DROP                                           12              12
  7083  0000478E  00000002 USING  ORDINARY    00004750 00001000 00000002  12 001AE   7212 @REGION_1941_1,12
  7246  00004946  00000002 DROP                                           12              12
  7315  000049EE  00000002 USING  ORDINARY    000049B0 00001000 00000002  12 001B2   7445 @REGION_1942_1,12
  7478  00004BAA  00000002 DROP                                           12              12
  7548  00004C5E  00000002 USING  ORDINARY    00004C20 00001000 00000002  12 00136   7622 @REGION_1943_1,12
  7649  00004D9E  00000002 DROP                                           12              12
  7719  00004E56  00000002 USING  ORDINARY    00004E18 00001000 00000002  12 00140   7828 @REGION_1944_1,12
  7857  00004FE8  00000002 DROP                                           12              12
  7932  0000509E  00000002 USING  ORDINARY    00005060 00001000 00000002  12 0021E   8125 @REGION_1945_1,12
  8155  000052FC  00000002 DROP                                           12              12
  8228  000053AE  00000002 USING  ORDINARY    00005370 00001000 00000002  12 0038E   8552 @REGION_1946_1,12
  8581  0000574A  00000002 DROP                                           12              12
  8679  000057F6  00000002 USING  ORDINARY    000057B8 00001000 00000002  12 00230   8801 @REGION_1947_1,12
  8839  000059F0  00000002 DROP                                           12              12
  8915  00005A9E  00000002 USING  ORDINARY    00005A60 00001000 00000002  12 006E6   9445 @REGION_1948_1,12
  9473  0000618E  00000002 DROP                                           12              12
  9558  00006246  00000002 USING  ORDINARY    00006208 00001000 00000002  12 00334   9775 @REGION_1949_1,12
  9803  00006584  00000002 DROP                                           12              12
  9884  00006636  00000002 USING  ORDINARY    000065F8 00001000 00000002  12 000EA   9935 @REGION_1950_1,12
  9960  0000672E  00000002 DROP                                           12              12
 10032  000067DE  00000002 USING  ORDINARY    000067A0 00001000 00000002  12 0041C  10362 @REGION_1951_1,12
 10396  00006C04  00000002 DROP                                           12              12
 10476  00006CB6  00000002 USING  ORDINARY    00006C78 00001000 00000002  12 001C0  10560 @REGION_1952_1,12
 10594  00006E40  00000002 DROP                                           12              12
 10670  00006F06  00000002 USING  ORDINARY    00006EC8 00001000 00000002  12 00320  10878 @REGION_1953_1,12
 10913  000071F0  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  278 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 10984  000072A6  00000002 USING  ORDINARY    00007268 00001000 00000002  12 0008C  11028 @REGION_1954_1,12
 11054  0000736C  00000002 DROP                                           12              12
 11123  00007416  00000002 USING  ORDINARY    000073D8 00001000 00000002  12 00482  11452 @REGION_1955_1,12
 11480  000078A2  00000002 DROP                                           12              12
 11556  00007956  00000002 USING  ORDINARY    00007918 00001000 00000002  12 00152  11639 @REGION_1921_1,12
 11664  00007AB2  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  279 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_MSGSET_WRITER ..\asg\asm\rdkafka_msgset_writer.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCPRV   C:\DIGNUS\MACLIB\dccprv
  L5  DCCEPIL  C:\DIGNUS\MACLIB\dccepil

Assembly Start Time: 15.35.49 Stop Time: 15.35.49 Processor Time: 00.00.00.1100
Return Code 000
