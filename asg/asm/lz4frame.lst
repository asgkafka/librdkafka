                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/lz4frame.obj ../asg/asm/lz4frame.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\lz4frame.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@@ZARCH#  WX 00000001                              00
@LZ4FRAME SD 00000002 00000000 00006CE8            07  @CODE
LZ4_favorDecompressionSpeed
          ER 00000003                                  $L$Z4_FAVOR$DECOMPRESSION$SPEED
LZ4_compress_HC_extStateHC_fastReset
          ER 00000004                                  $L$Z4_COMPRESS_$H$C_EXT$STATE$H$C_FAST$RESET
LZ4_attach_HC_dictionary
          ER 00000005                                  $L$Z4_ATTACH_$H$C_DICTIONARY
malloc    ER 00000006                                  MALLOC
XXH32     ER 00000007                                  $X$X$H32
XXH32_reset
          ER 00000008                                  $X$X$H32_RESET
XXH32_update
          ER 00000009                                  $X$X$H32_UPDATE
XXH32_digest
          ER 0000000A                                  $X$X$H32_DIGEST
LZ4_createStream
          ER 0000000B                                  $L$Z4_CREATE$STREAM
LZ4_freeStream
          ER 0000000C                                  $L$Z4_FREE$STREAM
LZ4_resetStream_fast
          ER 0000000D                                  $L$Z4_RESET$STREAM_FAST
LZ4_loadDict
          ER 0000000E                                  $L$Z4_LOAD$DICT
LZ4_compress_fast_continue
          ER 0000000F                                  $L$Z4_COMPRESS_FAST_CONTINUE
LZ4_saveDict
          ER 00000010                                  $L$Z4_SAVE$DICT
LZ4_decompress_safe_usingDict
          ER 00000011                                  $L$Z4_DECOMPRESS_SAFE_USING$DICT
LZ4_compress_fast_extState_fastReset
          ER 00000012                                  $L$Z4_COMPRESS_FAST_EXT$STATE_FAST$RESET
LZ4_attach_dictionary
          ER 00000013                                  $L$Z4_ATTACH_DICTIONARY
LZ4_initStream
          ER 00000014                                  $L$Z4_INIT$STREAM
@@ASSERT  ER 00000015                                  __ASSERT
LZ4_createStreamHC
          ER 00000016                                  $L$Z4_CREATE$STREAM$H$C
LZ4_freeStreamHC
          ER 00000017                                  $L$Z4_FREE$STREAM$H$C
LZ4_resetStreamHC_fast
          ER 00000018                                  $L$Z4_RESET$STREAM$H$C_FAST
LZ4_loadDictHC
          ER 00000019                                  $L$Z4_LOAD$DICT$H$C
LZ4_compress_HC_continue
          ER 0000001A                                  $L$Z4_COMPRESS_$H$C_CONTINUE
LZ4_saveDictHC
          ER 0000001B                                  $L$Z4_SAVE$DICT$H$C
LZ4_initStreamHC
          ER 0000001C                                  $L$Z4_INIT$STREAM$H$C
calloc    ER 0000001D                                  CALLOC
free      ER 0000001E                                  FREE
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
LZ4_setCompressionLevel
          ER 0000001F                                  $L$Z4_SET$COMPRESSION$LEVEL
@lz4frame&
          XD 00000020 00000007 000002B0                @@STATIC
@lz4frame SD 00000021 00006CE8 000004EA            07  @DATA
lz4frame: SD 00000022 000071D8 000005A0            07  @@INIT@
LZ4F_isError
          LD          00000738          00000002   00  $L$Z4$F_IS$ERROR
LZ4F_getErrorName
          LD          000007E0          00000002   00  $L$Z4$F_GET$ERROR$NAME
LZ4F_getErrorCode
          LD          00000940          00000002   00  $L$Z4$F_GET$ERROR$CODE
LZ4F_getVersion
          LD          00000AD8          00000002   00  $L$Z4$F_GET$VERSION
LZ4F_compressionLevel_max
          LD          00000B58          00000002   00  $L$Z4$F_COMPRESSION$LEVEL_MAX
LZ4F_getBlockSize
          LD          00000BD0          00000002   00  $L$Z4$F_GET$BLOCK$SIZE
LZ4F_compressFrameBound
          LD          00001140          00000002   00  $L$Z4$F_COMPRESS$FRAME$BOUND
LZ4F_compressFrame_usingCDict
          LD          000012B8          00000002   00  $L$Z4$F_COMPRESS$FRAME_USING$C$DICT
LZ4F_compressFrame
          LD          000016E8          00000002   00  $L$Z4$F_COMPRESS$FRAME
LZ4F_createCDict
          LD          000018F0          00000002   00  $L$Z4$F_CREATE$C$DICT
LZ4F_freeCDict
          LD          00001B90          00000002   00  $L$Z4$F_FREE$C$DICT
LZ4F_createCompressionContext
          LD          00001D10          00000002   00  $L$Z4$F_CREATE$COMPRESSION$CONTEXT
LZ4F_freeCompressionContext
          LD          00001E70          00000002   00  $L$Z4$F_FREE$COMPRESSION$CONTEXT
LZ4F_compressBegin_usingCDict
          LD          00002190          00000002   00  $L$Z4$F_COMPRESS$BEGIN_USING$C$DICT
LZ4F_compressBegin
          LD          00002750          00000002   00  $L$Z4$F_COMPRESS$BEGIN
LZ4F_compressBound
          LD          00002888          00000002   00  $L$Z4$F_COMPRESS$BOUND
LZ4F_compressUpdate
          LD          000035B8          00000002   00  $L$Z4$F_COMPRESS$UPDATE
LZ4F_flush
          LD          00003B68          00000002   00  $L$Z4$F_FLUSH
LZ4F_compressEnd
          LD          00003E58          00000002   00  $L$Z4$F_COMPRESS$END
LZ4F_createDecompressionContext
          LD          00004128          00000002   00  $L$Z4$F_CREATE$DECOMPRESSION$CONTEXT
LZ4F_freeDecompressionContext
          LD          00004298          00000002   00  $L$Z4$F_FREE$DECOMPRESSION$CONTEXT
LZ4F_resetDecompressionContext
          LD          00004400          00000002   00  $L$Z4$F_RESET$DECOMPRESSION$CONTEXT
LZ4F_headerSize
          LD          00004960          00000002   00  $L$Z4$F_HEADER$SIZE
LZ4F_getFrameInfo
                                              External Symbol Dictionary                                                   Page    5 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
          LD          00004B70          00000002   00  $L$Z4$F_GET$FRAME$INFO
LZ4F_decompress
          LD          000053D8          00000002   00  $L$Z4$F_DECOMPRESS
LZ4F_decompress_usingDict
          LD          00006BD8          00000002   00  $L$Z4$F_DECOMPRESS_USING$DICT
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:35:12 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@LZ4FRAME'
00000000                00000000 00006CE8     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@lz4frame'
                                              18 $L$Z4_favor$Decompression$Speed ALIAS X'D3E9F46D8681A59699C485839694979*
                                                                985A2A2899695E297858584'
                                              19          EXTRN $L$Z4_favor$Decompression$Speed
                                              20 $L$Z4_compress_$H$C_ext$State$H$C_fast$Reset ALIAS X'D3E9F46D8396949799*
                                                                85A2A26DC8C36D85A7A3E2A381A385C8C36D8681A2A3D985A285A3'
                                              21          EXTRN $L$Z4_compress_$H$C_ext$State$H$C_fast$Reset
                                              22 $L$Z4_attach_$H$C_dictionary ALIAS X'D3E9F46D81A3A38183886DC8C36D848983*
                                                                A38996958199A8'
                                              23          EXTRN $L$Z4_attach_$H$C_dictionary
                                              24 malloc   ALIAS C'malloc'
                                              25          EXTRN malloc
                                              26 $X$X$H32 ALIAS C'XXH32'
                                              27          EXTRN $X$X$H32
                                              28 $X$X$H32_reset ALIAS X'E7E7C8F3F26D9985A285A3'
                                              29          EXTRN $X$X$H32_reset
                                              30 $X$X$H32_update ALIAS X'E7E7C8F3F26DA4978481A385'
                                              31          EXTRN $X$X$H32_update
                                              32 $X$X$H32_digest ALIAS X'E7E7C8F3F26D84898785A2A3'
                                              33          EXTRN $X$X$H32_digest
                                              34 $L$Z4_create$Stream ALIAS X'D3E9F46D83998581A385E2A399858194'
                                              35          EXTRN $L$Z4_create$Stream
                                              36 $L$Z4_free$Stream ALIAS X'D3E9F46D86998585E2A399858194'
                                              37          EXTRN $L$Z4_free$Stream
                                              38 $L$Z4_reset$Stream_fast ALIAS X'D3E9F46D9985A285A3E2A3998581946D8681A2A*
                                                                3'
                                              39          EXTRN $L$Z4_reset$Stream_fast
                                              40 $L$Z4_load$Dict ALIAS X'D3E9F46D93968184C48983A3'
                                              41          EXTRN $L$Z4_load$Dict
                                              42 $L$Z4_compress_fast_continue ALIAS X'D3E9F46D839694979985A2A26D8681A2A3*
                                                                6D839695A38995A485'
                                              43          EXTRN $L$Z4_compress_fast_continue
                                              44 $L$Z4_save$Dict ALIAS X'D3E9F46DA281A585C48983A3'
                                              45          EXTRN $L$Z4_save$Dict
                                              46 $L$Z4_decompress_safe_using$Dict ALIAS X'D3E9F46D8485839694979985A2A26D*
                                                                A28186856DA4A2899587C48983A3'
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              47          EXTRN $L$Z4_decompress_safe_using$Dict
                                              48 $L$Z4_compress_fast_ext$State_fast$Reset ALIAS X'D3E9F46D839694979985A2*
                                                                A26D8681A2A36D85A7A3E2A381A3856D8681A2A3D985A285A3'
                                              49          EXTRN $L$Z4_compress_fast_ext$State_fast$Reset
                                              50 $L$Z4_attach_dictionary ALIAS X'D3E9F46D81A3A38183886D848983A3899695819*
                                                                9A8'
                                              51          EXTRN $L$Z4_attach_dictionary
                                              52 $L$Z4_init$Stream ALIAS X'D3E9F46D899589A3E2A399858194'
                                              53          EXTRN $L$Z4_init$Stream
                                              54 __assert ALIAS C'@@ASSERT'
                                              55          EXTRN __assert
                                              56 $L$Z4_create$Stream$H$C ALIAS X'D3E9F46D83998581A385E2A399858194C8C3'
                                              57          EXTRN $L$Z4_create$Stream$H$C
                                              58 $L$Z4_free$Stream$H$C ALIAS X'D3E9F46D86998585E2A399858194C8C3'
                                              59          EXTRN $L$Z4_free$Stream$H$C
                                              60 $L$Z4_reset$Stream$H$C_fast ALIAS X'D3E9F46D9985A285A3E2A399858194C8C36*
                                                                D8681A2A3'
                                              61          EXTRN $L$Z4_reset$Stream$H$C_fast
                                              62 $L$Z4_load$Dict$H$C ALIAS X'D3E9F46D93968184C48983A3C8C3'
                                              63          EXTRN $L$Z4_load$Dict$H$C
                                              64 $L$Z4_compress_$H$C_continue ALIAS X'D3E9F46D839694979985A2A26DC8C36D83*
                                                                9695A38995A485'
                                              65          EXTRN $L$Z4_compress_$H$C_continue
                                              66 $L$Z4_save$Dict$H$C ALIAS X'D3E9F46DA281A585C48983A3C8C3'
                                              67          EXTRN $L$Z4_save$Dict$H$C
                                              68 $L$Z4_init$Stream$H$C ALIAS X'D3E9F46D899589A3E2A399858194C8C3'
                                              69          EXTRN $L$Z4_init$Stream$H$C
                                              70 calloc   ALIAS C'calloc'
                                              71          EXTRN calloc
                                              72 free     ALIAS C'free'
                                              73          EXTRN free
                                              74 $L$Z4_set$Compression$Level ALIAS X'D3E9F46DA285A3C39694979985A2A289969*
                                                                5D385A58593'
                                              75          EXTRN $L$Z4_set$Compression$Level
                                              76 *
                                              77 *
                                              78 *
                                              79 * ....... start of rd_calloc
00000000                                      80 @LNAME751 DS   0H
00000000 00000009                             81          DC    X'00000009'
00000004 99846D8381939396                     82          DC    C'rd_calloc'
0000000D 00                                   83          DC    X'00'
                                              84 rd_calloc DCCPRLG CINDEX=751,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME751
                                              85          macro
                                              86          dccextrn &m
                                              87          gblc    &$dccext(1000)
                                              88          gbla    &$dccexti
                                              89          lcla    &i
                                              90 &$dccext(&$dccexti+1) setc    '&m'
                                              91 &i       seta    1
                                              92 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              93          aif    ('&$dccext(&i)' eq '&m').getout
                                              94 &i       seta    &i+1
                                              95          ago     .loop
                                              96 .around  anop
                                              97 &$dccexti seta &$dccexti+1
                                              98          extrn  &m
                                              99 .getout  anop
                                             100          mend
00000010                                     101+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                              102+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                  103+         dc xl1'01' format one                                          02-DCCCA
00000014 00000000                            104+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                    105+         dc ad(@PER_751)                                                02-DCCCA
00000020 00000000000000D0                    106+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                    107+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                    108+         dc ad(4096)                                                    02-DCCCA
00000038 20                                  109+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                  110+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                  111+         dc al1(3)                                                      02-DCCCA
0000003B 08                                  112+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                  113+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                              114+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                    115+         dc ad(@LNAME751)                                               02-DCCCA
00000048                                     116+         ds 0d                                                          02-DCCCA
00000048 0000000000000010                    117+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                    118+         dc ad(0)                                                       02-DCCCA
00000058                                     119+         ds    0d                                                       01-DCCPR
00000058                                     120+rd_calloc ds   0d                                                       01-DCCPR
00000058                                     121+@REGION_751_1 ds 0h                                                     01-DCCPR
00000058 EBEC D008 0024          00000008    122+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088    123+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090    124+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                           125+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018    126+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0    127+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020    128+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020    129+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                     130+@PER_751 ds    0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080    131+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090    132+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                           133+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                           134+         lgr   12,15               set base reg                         01-DCCPR
                        00000058             135+         using @REGION_751_1,12                                         01-DCCPR
                                             136 * ******* End of Prologue
                                             137 * *
                                             138 * ***      void *p = calloc(num, sz);
00000096 E3F0 1000 0004          00000000    139          LG    15,0(0,1)   ; num
0000009C E3F0 D0B0 0024          000000B0    140          STG   15,176(0,13)
000000A2 E3F0 1008 0004          00000008    141          LG    15,8(0,1)   ; sz
000000A8 E3F0 D0B8 0024          000000B8    142          STG   15,184(0,13)
000000AE 4110 D0B0               000000B0    143          LA    1,176(0,13)
000000B2 E3F0 C0F8 0004          00000150    144          LG    15,@lit_751_0 ; calloc
                                                                                                                           Page    9 
  Active Usings: @REGION_751_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000B8                                     145 @@gen_label0 DS    0H
000000B8 05EF                                146          BALR  14,15
000000BA                                     147 @@gen_label1 DS    0H
000000BA B904 002F                           148          LGR   2,15
                                             149 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             150 * ka\\src\\rd.h", 122, "p"));
000000BE B902 00F2                           151          LTGR  15,2
000000C2 4770 C0A2               000000FA    152          BNZ   @L32
000000C6                                     153 @L31     DS    0H
000000C6 E3F0 C110 0004          00000168    154          LG    15,@lit_751_1
000000CC E3F0 D0B0 0024          000000B0    155          STG   15,176(0,13)
000000D2 E3F0 C108 0004          00000160    156          LG    15,@lit_751_2
000000D8 E3F0 D0B8 0024          000000B8    157          STG   15,184(0,13)
000000DE E548 D0C0 007A          000000C0    158          MVGHI 192(13),122
000000E4 41F0 F020               00000020    159          LA    15,32(0,15)
000000E8 E3F0 D0C8 0024          000000C8    160          STG   15,200(0,13)
000000EE 4110 D0B0               000000B0    161          LA    1,176(0,13)
000000F2 E3F0 C100 0004          00000158    162          LG    15,@lit_751_3 ; __assert
000000F8                                     163 @@gen_label3 DS    0H
000000F8 05EF                                164          BALR  14,15
000000FA                                     165 @@gen_label4 DS    0H
000000FA                                     166 @L32     DS    0H
                                             167 * ***      return p;
000000FA B904 00F2                           168          LGR   15,2
                                             169 * ***   }
                                             170 * * **** Start of Epilogue
                                             171          DCCEPIL
000000FE                                     172+         ds 0h                                                          01-DCCEP
                                             173+* Epilog
000000FE D707 D088 D088 00000088 00000088    174+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000104 E3D0 D080 0004          00000080    175+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000010A E3C0 D090 0004          00000090    176+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000110 E3B0 C018 0004          00000018    177+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000116 E3C0 B010 0021          00000010    178+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000011C E3E0 D008 0004          00000008    179+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000122 EB1C D020 0004          00000020    180+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000128 078E                                181+         bcr 8,14                if same dsab, just return              01-DCCEP
0000012A E3F0 D010 0024          00000010    182+         stg 15,16(0,13)         save return code                       01-DCCEP
00000130 E300 D018 0024          00000018    183+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000136 E3F0 D090 0004          00000090    184+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000013C E3F0 F018 0004          00000018    185+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000142 47F0 F040               00000040    186+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             187+* End of Epilog
                                             188 * * **** End of Epilogue
00000148                                     189          DS    0D
00000148 000000D0                            190 @FRAMESIZE_751 DC F'208'
0000014C 00000000
00000150 0000000000000000                    191 @lit_751_0 DC  AD(calloc)
00000158 0000000000000000                    192 @lit_751_3 DC  AD(__assert)
00000160 0000000000006DDE                    193 @lit_751_2 DC  AD(@strings@)
00000168 0000000000006CE8                    194 @lit_751_1 DC  AD(@DATA)
                                             195          DROP  12
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             196 *
                                             197 *   DSECT for automatic variables in "rd_calloc"
                                             198 *      (FUNCTION #751)
                                             199 *
00000000                00000000 000000A8    200 @AUTO#rd_calloc DSECT
00000000                                     201          DS    XL168
                                             202 *
00000170                00000000 00006CE8    203 @CODE    CSECT
                                             204 *
                                             205 *
                                             206 *
                                             207 * ....... start of rd_malloc
00000170                                     208 @LNAME752 DS   0H
00000170 00000009                            209          DC    X'00000009'
00000174 99846D9481939396                    210          DC    C'rd_malloc'
0000017D 00                                  211          DC    X'00'
                                             212 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                             213          macro
                                             214          dccextrn &m
                                             215          gblc    &$dccext(1000)
                                             216          gbla    &$dccexti
                                             217          lcla    &i
                                             218 &$dccext(&$dccexti+1) setc    '&m'
                                             219 &i       seta    1
                                             220 .loop    aif    (&i gt &$dccexti).around
                                             221          aif    ('&$dccext(&i)' eq '&m').getout
                                             222 &i       seta    &i+1
                                             223          ago     .loop
                                             224 .around  anop
                                             225 &$dccexti seta &$dccexti+1
                                             226          extrn  &m
                                             227 .getout  anop
                                             228          mend
00000180                                     229+$eye0005    ds    0d                                                    02-DCCCA
00000180 C4C3C3                              230+         dc cl3'DCC'                                                    02-DCCCA
00000183 01                                  231+         dc xl1'01' format one                                          02-DCCCA
00000184 00000000                            232+         dc a(0)                                                        02-DCCCA
00000188 00000000000001F2                    233+         dc ad(@PER_752)                                                02-DCCCA
00000190 00000000000000D0                    234+         dc ad(208)                                                     02-DCCCA
00000198 0000000000000000                    235+         dc ad(0)                                                       02-DCCCA
000001A0 0000000000001000                    236+         dc ad(4096)                                                    02-DCCCA
000001A8 20                                  237+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A9 03                                  238+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001AA 03                                  239+         dc al1(3)                                                      02-DCCCA
000001AB 08                                  240+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000001AC 00                                  241+         dc bl.8'00000000'                                              02-DCCCA
000001AD 000000                              242+         dc al3(0)                                                      02-DCCCA
000001B0 0000000000000170                    243+         dc ad(@LNAME752)                                               02-DCCCA
000001B8                                     244+         ds 0d                                                          02-DCCCA
000001B8 0000000000000180                    245+         dc ad($eye0005)                                                02-DCCCA
000001C0 0000000000000000                    246+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000001C8                                     247+         ds    0d                                                       01-DCCPR
000001C8                                     248+rd_malloc ds   0d                                                       01-DCCPR
000001C8                                     249+@REGION_752_1 ds 0h                                                     01-DCCPR
000001C8 EBEC D008 0024          00000008    250+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001CE E3E0 D088 0004          00000088    251+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001D4 E3C0 D090 0004          00000090    252+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001DA B904 002E                           253+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001DE E3B0 C018 0004          00000018    254+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001E4 A7EB 00D0               000000D0    255+         aghi  14,208              increase by frame size               01-DCCPR
000001E8 E3E0 C020 0021          00000020    256+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001EE 4720 B020               00000020    257+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001F2                                     258+@PER_752 ds    0h                                                       01-DCCPR
000001F2 EBDE 2080 0024          00000080    259+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F8 E3C0 2090 0024          00000090    260+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001FE B904 00D2                           261+         lgr   13,2                set real frame pointer               01-DCCPR
00000202 B904 00CF                           262+         lgr   12,15               set base reg                         01-DCCPR
                        000001C8             263+         using @REGION_752_1,12                                         01-DCCPR
                                             264 * ******* End of Prologue
                                             265 * *
                                             266 * ***      void *p = malloc(sz);
00000206 E3F0 1000 0004          00000000    267          LG    15,0(0,1)   ; sz
0000020C E3F0 D0B0 0024          000000B0    268          STG   15,176(0,13)
00000212 4110 D0B0               000000B0    269          LA    1,176(0,13)
00000216 E3F0 C0F0 0004          000002B8    270          LG    15,@lit_752_5 ; malloc
0000021C                                     271 @@gen_label5 DS    0H
0000021C 05EF                                272          BALR  14,15
0000021E                                     273 @@gen_label6 DS    0H
0000021E B904 002F                           274          LGR   2,15
                                             275 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             276 * ka\\src\\rd.h", 128, "p"));
00000222 B902 00F2                           277          LTGR  15,2
00000226 4770 C09A               00000262    278          BNZ   @L34
0000022A                                     279 @L33     DS    0H
0000022A E3F0 C108 0004          000002D0    280          LG    15,@lit_752_6
00000230 41F0 F00A               0000000A    281          LA    15,10(0,15)
00000234 E3F0 D0B0 0024          000000B0    282          STG   15,176(0,13)
0000023A E3F0 C100 0004          000002C8    283          LG    15,@lit_752_7
00000240 E3F0 D0B8 0024          000000B8    284          STG   15,184(0,13)
00000246 E548 D0C0 0080          000000C0    285          MVGHI 192(13),128
0000024C 41F0 F020               00000020    286          LA    15,32(0,15)
00000250 E3F0 D0C8 0024          000000C8    287          STG   15,200(0,13)
00000256 4110 D0B0               000000B0    288          LA    1,176(0,13)
0000025A E3F0 C0F8 0004          000002C0    289          LG    15,@lit_752_8 ; __assert
00000260                                     290 @@gen_label8 DS    0H
00000260 05EF                                291          BALR  14,15
00000262                                     292 @@gen_label9 DS    0H
00000262                                     293 @L34     DS    0H
                                             294 * ***      return p;
00000262 B904 00F2                           295          LGR   15,2
                                             296 * ***   }
                                             297 * * **** Start of Epilogue
                                             298          DCCEPIL
                                                                                                                           Page   12 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000266                                     299+         ds 0h                                                          01-DCCEP
                                             300+* Epilog
00000266 D707 D088 D088 00000088 00000088    301+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000026C E3D0 D080 0004          00000080    302+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000272 E3C0 D090 0004          00000090    303+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000278 E3B0 C018 0004          00000018    304+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000027E E3C0 B010 0021          00000010    305+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000284 E3E0 D008 0004          00000008    306+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000028A EB1C D020 0004          00000020    307+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000290 078E                                308+         bcr 8,14                if same dsab, just return              01-DCCEP
00000292 E3F0 D010 0024          00000010    309+         stg 15,16(0,13)         save return code                       01-DCCEP
00000298 E300 D018 0024          00000018    310+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000029E E3F0 D090 0004          00000090    311+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000002A4 E3F0 F018 0004          00000018    312+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000002AA 47F0 F040               00000040    313+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             314+* End of Epilog
                                             315 * * **** End of Epilogue
000002B0                                     316          DS    0D
000002B0 000000D0                            317 @FRAMESIZE_752 DC F'208'
000002B4 00000000
000002B8 0000000000000000                    318 @lit_752_5 DC  AD(malloc)
000002C0 0000000000000000                    319 @lit_752_8 DC  AD(__assert)
000002C8 0000000000006DDE                    320 @lit_752_7 DC  AD(@strings@)
000002D0 0000000000006CE8                    321 @lit_752_6 DC  AD(@DATA)
                                             322          DROP  12
                                             323 *
                                             324 *   DSECT for automatic variables in "rd_malloc"
                                             325 *      (FUNCTION #752)
                                             326 *
00000000                00000000 000000A8    327 @AUTO#rd_malloc DSECT
00000000                                     328          DS    XL168
                                             329 *
000002D8                00000000 00006CE8    330 @CODE    CSECT
                                             331 *
                                             332 *
                                             333 *
                                             334 * ....... start of rd_free
000002D8                                     335 @LNAME754 DS   0H
000002D8 00000007                            336          DC    X'00000007'
000002DC 99846D86998585                      337          DC    C'rd_free'
000002E3 00                                  338          DC    X'00'
                                             339 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             340          macro
                                             341          dccextrn &m
                                             342          gblc    &$dccext(1000)
                                             343          gbla    &$dccexti
                                             344          lcla    &i
                                             345 &$dccext(&$dccexti+1) setc    '&m'
                                             346 &i       seta    1
                                             347 .loop    aif    (&i gt &$dccexti).around
                                             348          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             349 &i       seta    &i+1
                                             350          ago     .loop
                                             351 .around  anop
                                             352 &$dccexti seta &$dccexti+1
                                             353          extrn  &m
                                             354 .getout  anop
                                             355          mend
000002E8                                     356+$eye0008    ds    0d                                                    02-DCCCA
000002E8 C4C3C3                              357+         dc cl3'DCC'                                                    02-DCCCA
000002EB 01                                  358+         dc xl1'01' format one                                          02-DCCCA
000002EC 00000000                            359+         dc a(0)                                                        02-DCCCA
000002F0 000000000000035A                    360+         dc ad(@PER_754)                                                02-DCCCA
000002F8 00000000000000B0                    361+         dc ad(176)                                                     02-DCCCA
00000300 0000000000000000                    362+         dc ad(0)                                                       02-DCCCA
00000308 0000000000001000                    363+         dc ad(4096)                                                    02-DCCCA
00000310 20                                  364+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000311 03                                  365+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000312 03                                  366+         dc al1(3)                                                      02-DCCCA
00000313 08                                  367+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000314 00                                  368+         dc bl.8'00000000'                                              02-DCCCA
00000315 000000                              369+         dc al3(0)                                                      02-DCCCA
00000318 00000000000002D8                    370+         dc ad(@LNAME754)                                               02-DCCCA
00000320                                     371+         ds 0d                                                          02-DCCCA
00000320 00000000000002E8                    372+         dc ad($eye0008)                                                02-DCCCA
00000328 0000000000000000                    373+         dc ad(0)                                                       02-DCCCA
00000330                                     374+         ds    0d                                                       01-DCCPR
00000330                                     375+rd_free  ds    0d                                                       01-DCCPR
00000330                                     376+@REGION_754_1 ds 0h                                                     01-DCCPR
00000330 EBEC D008 0024          00000008    377+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000336 E3E0 D088 0004          00000088    378+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000033C E3C0 D090 0004          00000090    379+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000342 B904 002E                           380+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000346 E3B0 C018 0004          00000018    381+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000034C A7EB 00B0               000000B0    382+         aghi  14,176              increase by frame size               01-DCCPR
00000350 E3E0 C020 0021          00000020    383+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000356 4720 B020               00000020    384+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000035A                                     385+@PER_754 ds    0h                                                       01-DCCPR
0000035A EBDE 2080 0024          00000080    386+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000360 E3C0 2090 0024          00000090    387+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000366 B904 00D2                           388+         lgr   13,2                set real frame pointer               01-DCCPR
0000036A B904 00CF                           389+         lgr   12,15               set base reg                         01-DCCPR
                        00000330             390+         using @REGION_754_1,12                                         01-DCCPR
                                             391 * ******* End of Prologue
                                             392 * *
                                             393 * ***      free(ptr);
0000036E E3F0 1000 0004          00000000    394          LG    15,0(0,1)   ; ptr
00000374 E3F0 D0A8 0024          000000A8    395          STG   15,168(0,13)
0000037A 4110 D0A8               000000A8    396          LA    1,168(0,13)
0000037E E3F0 C0A8 0004          000003D8    397          LG    15,@lit_754_10 ; free
00000384                                     398 @@gen_label10 DS    0H
00000384 05EF                                399          BALR  14,15
00000386                                     400 @@gen_label11 DS    0H
                                                                                                                           Page   14 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             401 * ***   }
00000386                                     402 @ret_lab_754 DS 0H
                                             403 * * **** Start of Epilogue
                                             404          DCCEPIL
00000386                                     405+         ds 0h                                                          01-DCCEP
                                             406+* Epilog
00000386 D707 D088 D088 00000088 00000088    407+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000038C E3D0 D080 0004          00000080    408+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000392 E3C0 D090 0004          00000090    409+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000398 E3B0 C018 0004          00000018    410+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000039E E3C0 B010 0021          00000010    411+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000003A4 E3E0 D008 0004          00000008    412+         lg  14,8(0,13)          load up return address                 01-DCCEP
000003AA EB1C D020 0004          00000020    413+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000003B0 078E                                414+         bcr 8,14                if same dsab, just return              01-DCCEP
000003B2 E3F0 D010 0024          00000010    415+         stg 15,16(0,13)         save return code                       01-DCCEP
000003B8 E300 D018 0024          00000018    416+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003BE E3F0 D090 0004          00000090    417+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003C4 E3F0 F018 0004          00000018    418+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003CA 47F0 F040               00000040    419+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             420+* End of Epilog
                                             421 * * **** End of Epilogue
000003D0                                     422          DS    0D
000003D0 000000B0                            423 @FRAMESIZE_754 DC F'176'
000003D4 00000000
000003D8 0000000000000000                    424 @lit_754_10 DC AD(free)
                                             425          DROP  12
                                             426 *
                                             427 *   DSECT for automatic variables in "rd_free"
                                             428 *      (FUNCTION #754)
                                             429 *
00000000                00000000 000000A8    430 @AUTO#rd_free DSECT
00000000                                     431          DS    XL168
                                             432 *
000003E0                00000000 00006CE8    433 @CODE    CSECT
                                             434 *
                                             435 *
                                             436 *
                                             437 * ....... start of LZ4F_readLE32
000003E0                                     438 @LNAME881 DS   0H
000003E0 0000000D                            439          DC    X'0000000D'
000003E4 D3E9F4C66D998581                    440          DC    C'LZ4F_readLE32'
000003F1 00                                  441          DC    X'00'
                                             442 $L$Z4$F_read$L$E32 DCCPRLG CINDEX=881,BASER=0,FRAME=176,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME881
                                             443          macro
                                             444          dccextrn &m
                                             445          gblc    &$dccext(1000)
                                             446          gbla    &$dccexti
                                             447          lcla    &i
                                             448 &$dccext(&$dccexti+1) setc    '&m'
                                             449 &i       seta    1
                                             450 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             451          aif    ('&$dccext(&i)' eq '&m').getout
                                             452 &i       seta    &i+1
                                             453          ago     .loop
                                             454 .around  anop
                                             455 &$dccexti seta &$dccexti+1
                                             456          extrn  &m
                                             457 .getout  anop
                                             458          mend
000003F8                                     459+$eye0011    ds    0d                                                    02-DCCCA
000003F8 C4C3C3                              460+         dc cl3'DCC'                                                    02-DCCCA
000003FB 01                                  461+         dc xl1'01' format one                                          02-DCCCA
000003FC 00000000                            462+         dc a(0)                                                        02-DCCCA
00000400 0000000000000000                    463+         dc ad(0)                                                       02-DCCCA
00000408 00000000000000B0                    464+         dc ad(176)                                                     02-DCCCA
00000410 0000000000000000                    465+         dc ad(0)                                                       02-DCCCA
00000418 0000000000001000                    466+         dc ad(4096)                                                    02-DCCCA
00000420 20                                  467+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000421 03                                  468+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000422 03                                  469+         dc al1(3)                                                      02-DCCCA
00000423 08                                  470+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000424 00                                  471+         dc bl.8'00000000'                                              02-DCCCA
00000425 000000                              472+         dc al3(0)                                                      02-DCCCA
00000428 00000000000003E0                    473+         dc ad(@LNAME881)                                               02-DCCCA
00000430                                     474+         ds 0d                                                          02-DCCCA
00000430 00000000000003F8                    475+         dc ad($eye0011)                                                02-DCCCA
00000438 0000000000000000                    476+         dc ad(0)                                                       02-DCCCA
00000440                                     477+         ds    0d                                                       01-DCCPR
00000440                                     478+$L$Z4$F_read$L$E32 ds 0d                                                01-DCCPR
00000440                                     479+@REGION_881_1 ds 0h                                                     01-DCCPR
00000440 EBEC D008 0024          00000008    480+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             481 * ******* End of Prologue
                                             482 * *
                                             483 * ***       const BYTE* const srcPtr = (const BYTE*)src;
00000446 E3F0 1000 0004          00000000    484          LG    15,0(0,1)   ; src
                                             485 * ***       U32 value32 = srcPtr[0];
0000044C E310 F000 0094          00000000    486          LLC   1,0(0,15)
                                             487 * ***       value32 += ((U32)srcPtr[1])<< 8;
00000452 E320 F001 0094          00000001    488          LLC   2,1(0,15)
00000458 8920 0008               00000008    489          SLL   2,8(0)
0000045C 1E12                                490          ALR   1,2
                                             491 * ***       value32 += ((U32)srcPtr[2])<<16;
0000045E E320 F002 0094          00000002    492          LLC   2,2(0,15)
00000464 8920 0010               00000010    493          SLL   2,16(0)
00000468 1E12                                494          ALR   1,2
                                             495 * ***       value32 += ((U32)srcPtr[3])<<24;
0000046A E3F0 F003 0094          00000003    496          LLC   15,3(0,15)
00000470 89F0 0018               00000018    497          SLL   15,24(0)
00000474 1E1F                                498          ALR   1,15
                                             499 * ***       return value32;
00000476 B916 00F1                           500          LLGFR 15,1
                                             501 * ***   }
                                             502 * * **** Start of Epilogue
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             503          DCCEPIL
0000047A                                     504+         ds 0h                                                          01-DCCEP
                                             505+* Epilog
                                             506+* Epilog
0000047A E3E0 D008 0004          00000008    507+         lg    14,8(,13) restore the reg                                01-DCCEP
00000480 EB1C D020 0004          00000020    508+         lmg   1,12,32(13)                                              01-DCCEP
00000486 07FE                                509+         br   14                                                        01-DCCEP
                                             510+* End of Epilog
                                             511 * * **** End of Epilogue
                                             512 *
                                             513 *   DSECT for automatic variables in "LZ4F_readLE32"
                                             514 *      (FUNCTION #881)
                                             515 *
00000000                00000000 000000AC    516 @AUTO#$L$Z4$F_read$L$E32 DSECT
00000000                                     517          DS    XL168
000000A8                                     518 $L$Z4$F_read$L$E32#value32#0 DS 1F ; value32
                                             519 *
00000488                00000000 00006CE8    520 @CODE    CSECT
                                             521 *
                                             522 *
                                             523 *
                                             524 * ....... start of LZ4F_writeLE32
00000488                                     525 @LNAME882 DS   0H
00000488 0000000E                            526          DC    X'0000000E'
0000048C D3E9F4C66DA69989                    527          DC    C'LZ4F_writeLE32'
0000049A 00                                  528          DC    X'00'
                                             529 $L$Z4$F_write$L$E32 DCCPRLG CINDEX=882,BASER=0,FRAME=176,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME882
                                             530          macro
                                             531          dccextrn &m
                                             532          gblc    &$dccext(1000)
                                             533          gbla    &$dccexti
                                             534          lcla    &i
                                             535 &$dccext(&$dccexti+1) setc    '&m'
                                             536 &i       seta    1
                                             537 .loop    aif    (&i gt &$dccexti).around
                                             538          aif    ('&$dccext(&i)' eq '&m').getout
                                             539 &i       seta    &i+1
                                             540          ago     .loop
                                             541 .around  anop
                                             542 &$dccexti seta &$dccexti+1
                                             543          extrn  &m
                                             544 .getout  anop
                                             545          mend
000004A0                                     546+$eye0014    ds    0d                                                    02-DCCCA
000004A0 C4C3C3                              547+         dc cl3'DCC'                                                    02-DCCCA
000004A3 01                                  548+         dc xl1'01' format one                                          02-DCCCA
000004A4 00000000                            549+         dc a(0)                                                        02-DCCCA
000004A8 0000000000000000                    550+         dc ad(0)                                                       02-DCCCA
000004B0 00000000000000B0                    551+         dc ad(176)                                                     02-DCCCA
000004B8 0000000000000000                    552+         dc ad(0)                                                       02-DCCCA
000004C0 0000000000001000                    553+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000004C8 20                                  554+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000004C9 03                                  555+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000004CA 03                                  556+         dc al1(3)                                                      02-DCCCA
000004CB 08                                  557+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000004CC 00                                  558+         dc bl.8'00000000'                                              02-DCCCA
000004CD 000000                              559+         dc al3(0)                                                      02-DCCCA
000004D0 0000000000000488                    560+         dc ad(@LNAME882)                                               02-DCCCA
000004D8                                     561+         ds 0d                                                          02-DCCCA
000004D8 00000000000004A0                    562+         dc ad($eye0014)                                                02-DCCCA
000004E0 0000000000000000                    563+         dc ad(0)                                                       02-DCCCA
000004E8                                     564+         ds    0d                                                       01-DCCPR
000004E8                                     565+$L$Z4$F_write$L$E32 ds 0d                                               01-DCCPR
000004E8                                     566+@REGION_882_1 ds 0h                                                     01-DCCPR
000004E8 EBEC D008 0024          00000008    567+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             568 * ******* End of Prologue
                                             569 * *
                                             570 * ***       BYTE* const dstPtr = (BYTE*)dst;
000004EE 58F0 100C               0000000C    571          L     15,12(0,1)  ; value32
000004F2 E310 1000 0004          00000000    572          LG    1,0(0,1)    ; dst
                                             573 * ***       dstPtr[0] = (BYTE)value32;
000004F8 42F0 1000               00000000    574          STC   15,0(0,1)
                                             575 * ***       dstPtr[1] = (BYTE)(value32 >> 8);
000004FC 182F                                576          LR    2,15
000004FE 8820 0008               00000008    577          SRL   2,8(0)
00000502 4220 1001               00000001    578          STC   2,1(0,1)
                                             579 * ***       dstPtr[2] = (BYTE)(value32 >> 16);
00000506 182F                                580          LR    2,15
00000508 8820 0010               00000010    581          SRL   2,16(0)
0000050C 4220 1002               00000002    582          STC   2,2(0,1)
                                             583 * ***       dstPtr[3] = (BYTE)(value32 >> 24);
00000510 88F0 0018               00000018    584          SRL   15,24(0)
00000514 42F0 1003               00000003    585          STC   15,3(0,1)
                                             586 * ***   }
00000518                                     587 @ret_lab_882 DS 0H
                                             588 * * **** Start of Epilogue
                                             589          DCCEPIL
00000518                                     590+         ds 0h                                                          01-DCCEP
                                             591+* Epilog
                                             592+* Epilog
00000518 E3E0 D008 0004          00000008    593+         lg    14,8(,13) restore the reg                                01-DCCEP
0000051E EB1C D020 0004          00000020    594+         lmg   1,12,32(13)                                              01-DCCEP
00000524 07FE                                595+         br   14                                                        01-DCCEP
                                             596+* End of Epilog
                                             597 * * **** End of Epilogue
                                             598 *
                                             599 *   DSECT for automatic variables in "LZ4F_writeLE32"
                                             600 *      (FUNCTION #882)
                                             601 *
00000000                00000000 000000A8    602 @AUTO#$L$Z4$F_write$L$E32 DSECT
00000000                                     603          DS    XL168
                                             604 *
00000526                00000000 00006CE8    605 @CODE    CSECT
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             606 *
                                             607 *
                                             608 *
                                             609 * ....... start of LZ4F_readLE64
00000526                                     610 @LNAME883 DS   0H
00000526 0000000D                            611          DC    X'0000000D'
0000052A D3E9F4C66D998581                    612          DC    C'LZ4F_readLE64'
00000537 00                                  613          DC    X'00'
                                             614 $L$Z4$F_read$L$E64 DCCPRLG CINDEX=883,BASER=0,FRAME=176,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME883
                                             615          macro
                                             616          dccextrn &m
                                             617          gblc    &$dccext(1000)
                                             618          gbla    &$dccexti
                                             619          lcla    &i
                                             620 &$dccext(&$dccexti+1) setc    '&m'
                                             621 &i       seta    1
                                             622 .loop    aif    (&i gt &$dccexti).around
                                             623          aif    ('&$dccext(&i)' eq '&m').getout
                                             624 &i       seta    &i+1
                                             625          ago     .loop
                                             626 .around  anop
                                             627 &$dccexti seta &$dccexti+1
                                             628          extrn  &m
                                             629 .getout  anop
                                             630          mend
00000538                                     631+$eye0017    ds    0d                                                    02-DCCCA
00000538 C4C3C3                              632+         dc cl3'DCC'                                                    02-DCCCA
0000053B 01                                  633+         dc xl1'01' format one                                          02-DCCCA
0000053C 00000000                            634+         dc a(0)                                                        02-DCCCA
00000540 0000000000000000                    635+         dc ad(0)                                                       02-DCCCA
00000548 00000000000000B0                    636+         dc ad(176)                                                     02-DCCCA
00000550 0000000000000000                    637+         dc ad(0)                                                       02-DCCCA
00000558 0000000000001000                    638+         dc ad(4096)                                                    02-DCCCA
00000560 20                                  639+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000561 03                                  640+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000562 03                                  641+         dc al1(3)                                                      02-DCCCA
00000563 08                                  642+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000564 00                                  643+         dc bl.8'00000000'                                              02-DCCCA
00000565 000000                              644+         dc al3(0)                                                      02-DCCCA
00000568 0000000000000526                    645+         dc ad(@LNAME883)                                               02-DCCCA
00000570                                     646+         ds 0d                                                          02-DCCCA
00000570 0000000000000538                    647+         dc ad($eye0017)                                                02-DCCCA
00000578 0000000000000000                    648+         dc ad(0)                                                       02-DCCCA
00000580                                     649+         ds    0d                                                       01-DCCPR
00000580                                     650+$L$Z4$F_read$L$E64 ds 0d                                                01-DCCPR
00000580                                     651+@REGION_883_1 ds 0h                                                     01-DCCPR
00000580 EBEC D008 0024          00000008    652+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             653 * ******* End of Prologue
                                             654 * *
                                             655 * ***       const BYTE* const srcPtr = (const BYTE*)src;
00000586 E3F0 1000 0004          00000000    656          LG    15,0(0,1)   ; src
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             657 * ***       U64 value64 = srcPtr[0];
0000058C E310 F000 0090          00000000    658          LLGC  1,0(0,15)
                                             659 * ***       value64 += ((U64)srcPtr[1]<<8);
00000592 E320 F001 0090          00000001    660          LLGC  2,1(0,15)
00000598 EB22 0008 000D          00000008    661          SLLG  2,2,8(0)
0000059E B90A 0012                           662          ALGR  1,2
                                             663 * ***       value64 += ((U64)srcPtr[2]<<16);
000005A2 E320 F002 0090          00000002    664          LLGC  2,2(0,15)
000005A8 EB22 0010 000D          00000010    665          SLLG  2,2,16(0)
000005AE B90A 0012                           666          ALGR  1,2
                                             667 * ***       value64 += ((U64)srcPtr[3]<<24);
000005B2 E320 F003 0090          00000003    668          LLGC  2,3(0,15)
000005B8 EB22 0018 000D          00000018    669          SLLG  2,2,24(0)
000005BE B90A 0012                           670          ALGR  1,2
                                             671 * ***       value64 += ((U64)srcPtr[4]<<32);
000005C2 E320 F004 0090          00000004    672          LLGC  2,4(0,15)
000005C8 EB22 0020 000D          00000020    673          SLLG  2,2,32(0)
000005CE B90A 0012                           674          ALGR  1,2
                                             675 * ***       value64 += ((U64)srcPtr[5]<<40);
000005D2 E320 F005 0090          00000005    676          LLGC  2,5(0,15)
000005D8 EB22 0028 000D          00000028    677          SLLG  2,2,40(0)
000005DE B90A 0012                           678          ALGR  1,2
                                             679 * ***       value64 += ((U64)srcPtr[6]<<48);
000005E2 E320 F006 0090          00000006    680          LLGC  2,6(0,15)
000005E8 EB22 0030 000D          00000030    681          SLLG  2,2,48(0)
000005EE B90A 0012                           682          ALGR  1,2
                                             683 * ***       value64 += ((U64)srcPtr[7]<<56);
000005F2 E3F0 F007 0090          00000007    684          LLGC  15,7(0,15)
000005F8 EBFF 0038 000D          00000038    685          SLLG  15,15,56(0)
000005FE B90A 001F                           686          ALGR  1,15
                                             687 * ***       return value64;
00000602 B904 00F1                           688          LGR   15,1
                                             689 * ***   }
                                             690 * * **** Start of Epilogue
                                             691          DCCEPIL
00000606                                     692+         ds 0h                                                          01-DCCEP
                                             693+* Epilog
                                             694+* Epilog
00000606 E3E0 D008 0004          00000008    695+         lg    14,8(,13) restore the reg                                01-DCCEP
0000060C EB1C D020 0004          00000020    696+         lmg   1,12,32(13)                                              01-DCCEP
00000612 07FE                                697+         br   14                                                        01-DCCEP
                                             698+* End of Epilog
                                             699 * * **** End of Epilogue
                                             700 *
                                             701 *   DSECT for automatic variables in "LZ4F_readLE64"
                                             702 *      (FUNCTION #883)
                                             703 *
00000000                00000000 000000B0    704 @AUTO#$L$Z4$F_read$L$E64 DSECT
00000000                                     705          DS    XL168
000000A8                                     706 $L$Z4$F_read$L$E64#value64#0 DS 8XL1 ; value64
                                             707 *
00000614                00000000 00006CE8    708 @CODE    CSECT
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             709 *
                                             710 *
                                             711 *
                                             712 * ....... start of LZ4F_writeLE64
00000614                                     713 @LNAME884 DS   0H
00000614 0000000E                            714          DC    X'0000000E'
00000618 D3E9F4C66DA69989                    715          DC    C'LZ4F_writeLE64'
00000626 00                                  716          DC    X'00'
                                             717 $L$Z4$F_write$L$E64 DCCPRLG CINDEX=884,BASER=0,FRAME=176,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME884
                                             718          macro
                                             719          dccextrn &m
                                             720          gblc    &$dccext(1000)
                                             721          gbla    &$dccexti
                                             722          lcla    &i
                                             723 &$dccext(&$dccexti+1) setc    '&m'
                                             724 &i       seta    1
                                             725 .loop    aif    (&i gt &$dccexti).around
                                             726          aif    ('&$dccext(&i)' eq '&m').getout
                                             727 &i       seta    &i+1
                                             728          ago     .loop
                                             729 .around  anop
                                             730 &$dccexti seta &$dccexti+1
                                             731          extrn  &m
                                             732 .getout  anop
                                             733          mend
00000628                                     734+$eye0020    ds    0d                                                    02-DCCCA
00000628 C4C3C3                              735+         dc cl3'DCC'                                                    02-DCCCA
0000062B 01                                  736+         dc xl1'01' format one                                          02-DCCCA
0000062C 00000000                            737+         dc a(0)                                                        02-DCCCA
00000630 0000000000000000                    738+         dc ad(0)                                                       02-DCCCA
00000638 00000000000000B0                    739+         dc ad(176)                                                     02-DCCCA
00000640 0000000000000000                    740+         dc ad(0)                                                       02-DCCCA
00000648 0000000000001000                    741+         dc ad(4096)                                                    02-DCCCA
00000650 20                                  742+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000651 03                                  743+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000652 03                                  744+         dc al1(3)                                                      02-DCCCA
00000653 08                                  745+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000654 00                                  746+         dc bl.8'00000000'                                              02-DCCCA
00000655 000000                              747+         dc al3(0)                                                      02-DCCCA
00000658 0000000000000614                    748+         dc ad(@LNAME884)                                               02-DCCCA
00000660                                     749+         ds 0d                                                          02-DCCCA
00000660 0000000000000628                    750+         dc ad($eye0020)                                                02-DCCCA
00000668 0000000000000000                    751+         dc ad(0)                                                       02-DCCCA
00000670                                     752+         ds    0d                                                       01-DCCPR
00000670                                     753+$L$Z4$F_write$L$E64 ds 0d                                               01-DCCPR
00000670                                     754+@REGION_884_1 ds 0h                                                     01-DCCPR
00000670 EBEC D008 0024          00000008    755+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             756 * ******* End of Prologue
                                             757 * *
                                             758 * ***       BYTE* const dstPtr = (BYTE*)dst;
00000676 E3F0 1008 0004          00000008    759          LG    15,8(0,1)   ; value64
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000067C E310 1000 0004          00000000    760          LG    1,0(0,1)    ; dst
                                             761 * ***       dstPtr[0] = (BYTE)value64;
00000682 42F0 1000               00000000    762          STC   15,0(0,1)
                                             763 * ***       dstPtr[1] = (BYTE)(value64 >> 8);
00000686 EB2F 0008 000C          00000008    764          SRLG  2,15,8(0)
0000068C 4220 1001               00000001    765          STC   2,1(0,1)
                                             766 * ***       dstPtr[2] = (BYTE)(value64 >> 16);
00000690 EB2F 0010 000C          00000010    767          SRLG  2,15,16(0)
00000696 4220 1002               00000002    768          STC   2,2(0,1)
                                             769 * ***       dstPtr[3] = (BYTE)(value64 >> 24);
0000069A EB2F 0018 000C          00000018    770          SRLG  2,15,24(0)
000006A0 4220 1003               00000003    771          STC   2,3(0,1)
                                             772 * ***       dstPtr[4] = (BYTE)(value64 >> 32);
000006A4 EB2F 0020 000C          00000020    773          SRLG  2,15,32(0)
000006AA 4220 1004               00000004    774          STC   2,4(0,1)
                                             775 * ***       dstPtr[5] = (BYTE)(value64 >> 40);
000006AE EB2F 0028 000C          00000028    776          SRLG  2,15,40(0)
000006B4 4220 1005               00000005    777          STC   2,5(0,1)
                                             778 * ***       dstPtr[6] = (BYTE)(value64 >> 48);
000006B8 EB2F 0030 000C          00000030    779          SRLG  2,15,48(0)
000006BE 4220 1006               00000006    780          STC   2,6(0,1)
                                             781 * ***       dstPtr[7] = (BYTE)(value64 >> 56);
000006C2 EBFF 0038 000C          00000038    782          SRLG  15,15,56(0)
000006C8 42F0 1007               00000007    783          STC   15,7(0,1)
                                             784 * ***   }
000006CC                                     785 @ret_lab_884 DS 0H
                                             786 * * **** Start of Epilogue
                                             787          DCCEPIL
000006CC                                     788+         ds 0h                                                          01-DCCEP
                                             789+* Epilog
                                             790+* Epilog
000006CC E3E0 D008 0004          00000008    791+         lg    14,8(,13) restore the reg                                01-DCCEP
000006D2 EB1C D020 0004          00000020    792+         lmg   1,12,32(13)                                              01-DCCEP
000006D8 07FE                                793+         br   14                                                        01-DCCEP
                                             794+* End of Epilog
                                             795 * * **** End of Epilogue
                                             796 *
                                             797 *   DSECT for automatic variables in "LZ4F_writeLE64"
                                             798 *      (FUNCTION #884)
                                             799 *
00000000                00000000 000000A8    800 @AUTO#$L$Z4$F_write$L$E64 DSECT
00000000                                     801          DS    XL168
                                             802 *
000006DA                00000000 00006CE8    803 @CODE    CSECT
                                             804 *
                                             805 *
                                             806 *
                                             807 * ....... start of LZ4F_isError
                                             808 $L$Z4$F_is$Error ALIAS X'D3E9F4C66D89A2C599999699'
000006DA                                     809 @LNAME759 DS   0H
000006DA 0000000C                            810          DC    X'0000000C'
000006DE D3E9F4C66D89A2C5                    811          DC    C'LZ4F_isError'
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000006EA 00                                  812          DC    X'00'
                                             813 $L$Z4$F_is$Error DCCPRLG CINDEX=759,BASER=12,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME759
                                             814          macro
                                             815          dccextrn &m
                                             816          gblc    &$dccext(1000)
                                             817          gbla    &$dccexti
                                             818          lcla    &i
                                             819 &$dccext(&$dccexti+1) setc    '&m'
                                             820 &i       seta    1
                                             821 .loop    aif    (&i gt &$dccexti).around
                                             822          aif    ('&$dccext(&i)' eq '&m').getout
                                             823 &i       seta    &i+1
                                             824          ago     .loop
                                             825 .around  anop
                                             826 &$dccexti seta &$dccexti+1
                                             827          extrn  &m
                                             828 .getout  anop
                                             829          mend
000006F0                                     830+$eye0023    ds    0d                                                    02-DCCCA
000006F0 C4C3C3                              831+         dc cl3'DCC'                                                    02-DCCCA
000006F3 01                                  832+         dc xl1'01' format one                                          02-DCCCA
000006F4 00000000                            833+         dc a(0)                                                        02-DCCCA
000006F8 0000000000000000                    834+         dc ad(0)                                                       02-DCCCA
00000700 00000000000000A8                    835+         dc ad(168)                                                     02-DCCCA
00000708 0000000000000000                    836+         dc ad(0)                                                       02-DCCCA
00000710 0000000000001000                    837+         dc ad(4096)                                                    02-DCCCA
00000718 20                                  838+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000719 03                                  839+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000071A 03                                  840+         dc al1(3)                                                      02-DCCCA
0000071B 08                                  841+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000071C 00                                  842+         dc bl.8'00000000'                                              02-DCCCA
0000071D 000000                              843+         dc al3(0)                                                      02-DCCCA
00000720 00000000000006DA                    844+         dc ad(@LNAME759)                                               02-DCCCA
00000728                                     845+         ds 0d                                                          02-DCCCA
00000728 00000000000006F0                    846+         dc ad($eye0023)                                                02-DCCCA
00000730 0000000000000000                    847+         dc ad(0)                                                       02-DCCCA
00000738                                     848+         ds    0d                                                       01-DCCPR
                                             849+         entry $L$Z4$F_is$Error                                         01-DCCPR
00000738                                     850+$L$Z4$F_is$Error ds 0d                                                  01-DCCPR
00000738                                     851+@REGION_759_1 ds 0h                                                     01-DCCPR
00000738 EBEC D008 0024          00000008    852+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000073E B904 00CF                           853+         lgr   12,15               set base reg                         01-DCCPR
                        00000738             854+         using @REGION_759_1,12                                         01-DCCPR
                                             855 * ******* End of Prologue
                                             856 * *
                                             857 * ***       return (code > (LZ4F_errorCode_t)(-LZ4F_ERROR_maxCode));
00000742 E3F0 1000 0004          00000000    858          LG    15,0(0,1)   ; code
00000748 E3F0 C028 0021          00000760    859          CLG   15,@lit_759_12
0000074E 47D0 C030               00000768    860          BNH   @@gen_label12
00000752 A7F8 0001               00000001    861          LHI   15,1
00000756 47F0 C034               0000076C    862          B     @@gen_label13
                                                                                                                           Page   23 
  Active Usings: @REGION_759_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000760                                     863          DS    0D
00000760 FFFFFFFFFFFFFFEC                    864 @lit_759_12 DC FD'-20' 0xffffffffffffffec
00000768                                     865 @@gen_label12 DS 0H
00000768 A7F8 0000               00000000    866          LHI   15,0
0000076C                                     867 @@gen_label13 DS 0H
0000076C B916 00FF                           868          LLGFR 15,15
                                             869 * ***   }
                                             870 * * **** Start of Epilogue
                                             871          DCCEPIL
00000770                                     872+         ds 0h                                                          01-DCCEP
                                             873+* Epilog
                                             874+* Epilog
00000770 E3E0 D008 0004          00000008    875+         lg    14,8(,13) restore the reg                                01-DCCEP
00000776 EB1C D020 0004          00000020    876+         lmg   1,12,32(13)                                              01-DCCEP
0000077C 07FE                                877+         br   14                                                        01-DCCEP
                                             878+* End of Epilog
                                             879 * * **** End of Epilogue
                                             880          DROP  12
                                             881 *
                                             882 *   DSECT for automatic variables in "LZ4F_isError"
                                             883 *      (FUNCTION #759)
                                             884 *
00000000                00000000 000000A8    885 @AUTO#$L$Z4$F_is$Error DSECT
00000000                                     886          DS    XL168
                                             887 *
0000077E                00000000 00006CE8    888 @CODE    CSECT
                                             889 *
                                             890 *
                                             891 *
                                             892 * ....... start of LZ4F_getErrorName
                                             893 $L$Z4$F_get$Error$Name ALIAS X'D3E9F4C66D8785A3C599999699D5819485'
0000077E                                     894 @LNAME760 DS   0H
0000077E 00000011                            895          DC    X'00000011'
00000782 D3E9F4C66D8785A3                    896          DC    C'LZ4F_getErrorName'
00000793 00                                  897          DC    X'00'
                                             898 $L$Z4$F_get$Error$Name DCCPRLG CINDEX=760,BASER=12,FRAME=176,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME760
                                             899          macro
                                             900          dccextrn &m
                                             901          gblc    &$dccext(1000)
                                             902          gbla    &$dccexti
                                             903          lcla    &i
                                             904 &$dccext(&$dccexti+1) setc    '&m'
                                             905 &i       seta    1
                                             906 .loop    aif    (&i gt &$dccexti).around
                                             907          aif    ('&$dccext(&i)' eq '&m').getout
                                             908 &i       seta    &i+1
                                             909          ago     .loop
                                             910 .around  anop
                                             911 &$dccexti seta &$dccexti+1
                                             912          extrn  &m
                                             913 .getout  anop
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             914          mend
00000798                                     915+$eye0026    ds    0d                                                    02-DCCCA
00000798 C4C3C3                              916+         dc cl3'DCC'                                                    02-DCCCA
0000079B 01                                  917+         dc xl1'01' format one                                          02-DCCCA
0000079C 00000000                            918+         dc a(0)                                                        02-DCCCA
000007A0 000000000000080A                    919+         dc ad(@PER_760)                                                02-DCCCA
000007A8 00000000000000B0                    920+         dc ad(176)                                                     02-DCCCA
000007B0 0000000000000000                    921+         dc ad(0)                                                       02-DCCCA
000007B8 0000000000001000                    922+         dc ad(4096)                                                    02-DCCCA
000007C0 20                                  923+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000007C1 03                                  924+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000007C2 03                                  925+         dc al1(3)                                                      02-DCCCA
000007C3 08                                  926+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000007C4 00                                  927+         dc bl.8'00000000'                                              02-DCCCA
000007C5 000000                              928+         dc al3(0)                                                      02-DCCCA
000007C8 000000000000077E                    929+         dc ad(@LNAME760)                                               02-DCCCA
000007D0                                     930+         ds 0d                                                          02-DCCCA
000007D0 0000000000000798                    931+         dc ad($eye0026)                                                02-DCCCA
000007D8 0000000000000000                    932+         dc ad(0)                                                       02-DCCCA
000007E0                                     933+         ds    0d                                                       01-DCCPR
                                             934+         entry $L$Z4$F_get$Error$Name                                   01-DCCPR
000007E0                                     935+$L$Z4$F_get$Error$Name ds 0d                                            01-DCCPR
000007E0                                     936+@REGION_760_1 ds 0h                                                     01-DCCPR
000007E0 EBEC D008 0024          00000008    937+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000007E6 E3E0 D088 0004          00000088    938+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000007EC E3C0 D090 0004          00000090    939+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000007F2 B904 002E                           940+         lgr   2,14                copy addr of our savearea            01-DCCPR
000007F6 E3B0 C018 0004          00000018    941+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000007FC A7EB 00B0               000000B0    942+         aghi  14,176              increase by frame size               01-DCCPR
00000800 E3E0 C020 0021          00000020    943+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000806 4720 B020               00000020    944+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000080A                                     945+@PER_760 ds    0h                                                       01-DCCPR
0000080A EBDE 2080 0024          00000080    946+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000810 E3C0 2090 0024          00000090    947+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000816 B904 00D2                           948+         lgr   13,2                set real frame pointer               01-DCCPR
0000081A B904 00CF                           949+         lgr   12,15               set base reg                         01-DCCPR
                        000007E0             950+         using @REGION_760_1,12                                         01-DCCPR
                                             951          DCCPRV REG=2      ; Get PRV from DVT
0000081E E320 B008 0004          00000008    952+         LG 2,8(0,11)                                                   01-DCCPR
00000824 B904 0031                           953          LGR   3,1         ; ptr to parm area
                                             954 * ******* End of Prologue
                                             955 * *
                                             956 * ***       static const char* codeError = "Unspecified error code";
                                             957 * ***       if (LZ4F_isError(code)) return LZ4F_errorStrings[-(int)(co\
                                             958 * de)];
00000828 E3F0 3000 0004          00000000    959          LG    15,0(0,3)   ; code
0000082E E3F0 D0A8 0024          000000A8    960          STG   15,168(0,13)
00000834 4110 D0A8               000000A8    961          LA    1,168(0,13)
00000838 E3F0 C098 0004          00000878    962          LG    15,@lit_760_13 ; LZ4F_isError
0000083E                                     963 @@gen_label14 DS    0H
0000083E 05EF                                964          BALR  14,15
00000840                                     965 @@gen_label15 DS    0H
                                                                                                                           Page   25 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000840 12FF                                966          LTR   15,15
00000842 4780 C0A4               00000884    967          BZ    @L44
00000846 E3F0 3000 0004          00000000    968          LG    15,0(0,3)   ; code
0000084C 13FF                                969          LCR   15,15
0000084E B914 00FF                           970          LGFR  15,15
00000852 E310 C0A0 0014          00000880    971          LGF   1,@lit_760_14
00000858 4111 2000               00000000    972          LA    1,0(1,2)
0000085C EBFF 0003 000D          00000003    973          SLLG  15,15,3(0)  ; *0x8
00000862 E3FF 1200 0004          00000200    974          LG    15,512(15,1)
00000868 47F0 C0B4               00000894    975          B     @ret_lab_760
00000870                                     976          DS    0D
00000870 000000B0                            977 @FRAMESIZE_760 DC F'176'
00000874 00000000
00000878 0000000000000738                    978 @lit_760_13 DC AD($L$Z4$F_is$Error)
00000880 00000000                            979 @lit_760_14 DC Q(@@STATIC)
00000884                                     980 @L44     DS    0H
                                             981 * ***       return codeError;
00000884 E3F0 C0A0 0014          00000880    982          LGF   15,@lit_760_14
0000088A 41FF 2000               00000000    983          LA    15,0(15,2)
0000088E E3F0 F2A8 0004          000002A8    984          LG    15,680(0,15) ; codeError
                                             985 * ***   }
00000894                                     986 @ret_lab_760 DS 0H
                                             987 * * **** Start of Epilogue
                                             988          DCCEPIL
00000894                                     989+         ds 0h                                                          01-DCCEP
                                             990+* Epilog
00000894 D707 D088 D088 00000088 00000088    991+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000089A E3D0 D080 0004          00000080    992+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000008A0 E3C0 D090 0004          00000090    993+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000008A6 E3B0 C018 0004          00000018    994+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000008AC E3C0 B010 0021          00000010    995+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000008B2 E3E0 D008 0004          00000008    996+         lg  14,8(0,13)          load up return address                 01-DCCEP
000008B8 EB1C D020 0004          00000020    997+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000008BE 078E                                998+         bcr 8,14                if same dsab, just return              01-DCCEP
000008C0 E3F0 D010 0024          00000010    999+         stg 15,16(0,13)         save return code                       01-DCCEP
000008C6 E300 D018 0024          00000018   1000+         stg 0,24(0,13)          save more return code                  01-DCCEP
000008CC E3F0 D090 0004          00000090   1001+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000008D2 E3F0 F018 0004          00000018   1002+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000008D8 47F0 F040               00000040   1003+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1004+* End of Epilog
                                            1005 * * **** End of Epilogue
                                            1006          DROP  12
                                            1007 *
                                            1008 *   DSECT for automatic variables in "LZ4F_getErrorName"
                                            1009 *      (FUNCTION #760)
                                            1010 *
00000000                00000000 000000A8   1011 @AUTO#$L$Z4$F_get$Error$Name DSECT
00000000                                    1012          DS    XL168
                                            1013 *
000008DC                00000000 00006CE8   1014 @CODE    CSECT
                                            1015 *
                                            1016 *
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1017 *
                                            1018 * ....... start of LZ4F_getErrorCode
                                            1019 $L$Z4$F_get$Error$Code ALIAS X'D3E9F4C66D8785A3C599999699C3968485'
000008DC                                    1020 @LNAME778 DS   0H
000008DC 00000011                           1021          DC    X'00000011'
000008E0 D3E9F4C66D8785A3                   1022          DC    C'LZ4F_getErrorCode'
000008F1 00                                 1023          DC    X'00'
                                            1024 $L$Z4$F_get$Error$Code DCCPRLG CINDEX=778,BASER=12,FRAME=176,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME778
                                            1025          macro
                                            1026          dccextrn &m
                                            1027          gblc    &$dccext(1000)
                                            1028          gbla    &$dccexti
                                            1029          lcla    &i
                                            1030 &$dccext(&$dccexti+1) setc    '&m'
                                            1031 &i       seta    1
                                            1032 .loop    aif    (&i gt &$dccexti).around
                                            1033          aif    ('&$dccext(&i)' eq '&m').getout
                                            1034 &i       seta    &i+1
                                            1035          ago     .loop
                                            1036 .around  anop
                                            1037 &$dccexti seta &$dccexti+1
                                            1038          extrn  &m
                                            1039 .getout  anop
                                            1040          mend
000008F8                                    1041+$eye0030    ds    0d                                                    02-DCCCA
000008F8 C4C3C3                             1042+         dc cl3'DCC'                                                    02-DCCCA
000008FB 01                                 1043+         dc xl1'01' format one                                          02-DCCCA
000008FC 00000000                           1044+         dc a(0)                                                        02-DCCCA
00000900 000000000000096A                   1045+         dc ad(@PER_778)                                                02-DCCCA
00000908 00000000000000B0                   1046+         dc ad(176)                                                     02-DCCCA
00000910 0000000000000000                   1047+         dc ad(0)                                                       02-DCCCA
00000918 0000000000001000                   1048+         dc ad(4096)                                                    02-DCCCA
00000920 20                                 1049+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000921 03                                 1050+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000922 03                                 1051+         dc al1(3)                                                      02-DCCCA
00000923 08                                 1052+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000924 00                                 1053+         dc bl.8'00000000'                                              02-DCCCA
00000925 000000                             1054+         dc al3(0)                                                      02-DCCCA
00000928 00000000000008DC                   1055+         dc ad(@LNAME778)                                               02-DCCCA
00000930                                    1056+         ds 0d                                                          02-DCCCA
00000930 00000000000008F8                   1057+         dc ad($eye0030)                                                02-DCCCA
00000938 0000000000000000                   1058+         dc ad(0)                                                       02-DCCCA
00000940                                    1059+         ds    0d                                                       01-DCCPR
                                            1060+         entry $L$Z4$F_get$Error$Code                                   01-DCCPR
00000940                                    1061+$L$Z4$F_get$Error$Code ds 0d                                            01-DCCPR
00000940                                    1062+@REGION_778_1 ds 0h                                                     01-DCCPR
00000940 EBEC D008 0024          00000008   1063+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000946 E3E0 D088 0004          00000088   1064+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000094C E3C0 D090 0004          00000090   1065+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000952 B904 002E                          1066+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000956 E3B0 C018 0004          00000018   1067+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   27 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000095C A7EB 00B0               000000B0   1068+         aghi  14,176              increase by frame size               01-DCCPR
00000960 E3E0 C020 0021          00000020   1069+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000966 4720 B020               00000020   1070+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000096A                                    1071+@PER_778 ds    0h                                                       01-DCCPR
0000096A EBDE 2080 0024          00000080   1072+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000970 E3C0 2090 0024          00000090   1073+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000976 B904 00D2                          1074+         lgr   13,2                set real frame pointer               01-DCCPR
0000097A B904 00CF                          1075+         lgr   12,15               set base reg                         01-DCCPR
                        00000940            1076+         using @REGION_778_1,12                                         01-DCCPR
0000097E B904 0021                          1077          LGR   2,1         ; ptr to parm area
                                            1078 * ******* End of Prologue
                                            1079 * *
                                            1080 * ***       if (!LZ4F_isError(functionResult)) return LZ4F_OK_NoError;
00000982 E3F0 2000 0004          00000000   1081          LG    15,0(0,2)   ; functionResult
00000988 E3F0 D0A8 0024          000000A8   1082          STG   15,168(0,13)
0000098E 4110 D0A8               000000A8   1083          LA    1,168(0,13)
00000992 E3F0 C070 0004          000009B0   1084          LG    15,@lit_778_17 ; LZ4F_isError
00000998                                    1085 @@gen_label17 DS    0H
00000998 05EF                               1086          BALR  14,15
0000099A                                    1087 @@gen_label18 DS    0H
0000099A 12FF                               1088          LTR   15,15
0000099C 4770 C078               000009B8   1089          BNZ   @L45
000009A0 A7F9 0000               00000000   1090          LGHI  15,0        ; 0
000009A4 47F0 C086               000009C6   1091          B     @ret_lab_778
000009A8                                    1092          DS    0D
000009A8 000000B0                           1093 @FRAMESIZE_778 DC F'176'
000009AC 00000000
000009B0 0000000000000738                   1094 @lit_778_17 DC AD($L$Z4$F_is$Error)
000009B8                                    1095 @L45     DS    0H
                                            1096 * ***       return (LZ4F_errorCodes)(-(ptrdiff_t)functionResult);
000009B8 E3F0 2000 0004          00000000   1097          LG    15,0(0,2)   ; functionResult
000009BE B903 00FF                          1098          LCGR  15,15
000009C2 B914 00FF                          1099          LGFR  15,15
                                            1100 * ***   }
000009C6                                    1101 @ret_lab_778 DS 0H
                                            1102 * * **** Start of Epilogue
                                            1103          DCCEPIL
000009C6                                    1104+         ds 0h                                                          01-DCCEP
                                            1105+* Epilog
000009C6 D707 D088 D088 00000088 00000088   1106+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000009CC E3D0 D080 0004          00000080   1107+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000009D2 E3C0 D090 0004          00000090   1108+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000009D8 E3B0 C018 0004          00000018   1109+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000009DE E3C0 B010 0021          00000010   1110+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000009E4 E3E0 D008 0004          00000008   1111+         lg  14,8(0,13)          load up return address                 01-DCCEP
000009EA EB1C D020 0004          00000020   1112+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000009F0 078E                               1113+         bcr 8,14                if same dsab, just return              01-DCCEP
000009F2 E3F0 D010 0024          00000010   1114+         stg 15,16(0,13)         save return code                       01-DCCEP
000009F8 E300 D018 0024          00000018   1115+         stg 0,24(0,13)          save more return code                  01-DCCEP
000009FE E3F0 D090 0004          00000090   1116+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000A04 E3F0 F018 0004          00000018   1117+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000A0A 47F0 F040               00000040   1118+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   28 
  Active Usings: @REGION_778_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1119+* End of Epilog
                                            1120 * * **** End of Epilogue
                                            1121          DROP  12
                                            1122 *
                                            1123 *   DSECT for automatic variables in "LZ4F_getErrorCode"
                                            1124 *      (FUNCTION #778)
                                            1125 *
00000000                00000000 000000A8   1126 @AUTO#$L$Z4$F_get$Error$Code DSECT
00000000                                    1127          DS    XL168
                                            1128 *
00000A0E                00000000 00006CE8   1129 @CODE    CSECT
                                            1130 *
                                            1131 *
                                            1132 *
                                            1133 * ....... start of err0r
00000A0E                                    1134 @LNAME885 DS   0H
00000A0E 00000005                           1135          DC    X'00000005'
00000A12 859999F099                         1136          DC    C'err0r'
00000A17 00                                 1137          DC    X'00'
                                            1138 err0r    DCCPRLG CINDEX=885,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME885
                                            1139          macro
                                            1140          dccextrn &m
                                            1141          gblc    &$dccext(1000)
                                            1142          gbla    &$dccexti
                                            1143          lcla    &i
                                            1144 &$dccext(&$dccexti+1) setc    '&m'
                                            1145 &i       seta    1
                                            1146 .loop    aif    (&i gt &$dccexti).around
                                            1147          aif    ('&$dccext(&i)' eq '&m').getout
                                            1148 &i       seta    &i+1
                                            1149          ago     .loop
                                            1150 .around  anop
                                            1151 &$dccexti seta &$dccexti+1
                                            1152          extrn  &m
                                            1153 .getout  anop
                                            1154          mend
00000A18                                    1155+$eye0033    ds    0d                                                    02-DCCCA
00000A18 C4C3C3                             1156+         dc cl3'DCC'                                                    02-DCCCA
00000A1B 01                                 1157+         dc xl1'01' format one                                          02-DCCCA
00000A1C 00000000                           1158+         dc a(0)                                                        02-DCCCA
00000A20 0000000000000000                   1159+         dc ad(0)                                                       02-DCCCA
00000A28 00000000000000A8                   1160+         dc ad(168)                                                     02-DCCCA
00000A30 0000000000000000                   1161+         dc ad(0)                                                       02-DCCCA
00000A38 0000000000001000                   1162+         dc ad(4096)                                                    02-DCCCA
00000A40 20                                 1163+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A41 03                                 1164+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A42 03                                 1165+         dc al1(3)                                                      02-DCCCA
00000A43 08                                 1166+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A44 00                                 1167+         dc bl.8'00000000'                                              02-DCCCA
00000A45 000000                             1168+         dc al3(0)                                                      02-DCCCA
00000A48 0000000000000A0E                   1169+         dc ad(@LNAME885)                                               02-DCCCA
                                                                                                                           Page   29 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000A50                                    1170+         ds 0d                                                          02-DCCCA
00000A50 0000000000000A18                   1171+         dc ad($eye0033)                                                02-DCCCA
00000A58 0000000000000000                   1172+         dc ad(0)                                                       02-DCCCA
00000A60                                    1173+         ds    0d                                                       01-DCCPR
00000A60                                    1174+err0r    ds    0d                                                       01-DCCPR
00000A60                                    1175+@REGION_885_1 ds 0h                                                     01-DCCPR
00000A60 EBEC D008 0024          00000008   1176+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1177 * ******* End of Prologue
                                            1178 * *
                                            1179 * ***
                                            1180 * ***       { enum { LZ4F_static_assert = 1/(int)(!!(sizeof(ptrdiff_t)\
                                            1181 *  >= sizeof(size_t))) }; };
                                            1182 * ***       return (LZ4F_errorCode_t)-(ptrdiff_t)code;
00000A66 58F0 1004               00000004   1183          L     15,4(0,1)   ; code
00000A6A B913 00FF                          1184          LCGFR 15,15
                                            1185 * ***   }
                                            1186 * * **** Start of Epilogue
                                            1187          DCCEPIL
00000A6E                                    1188+         ds 0h                                                          01-DCCEP
                                            1189+* Epilog
                                            1190+* Epilog
00000A6E E3E0 D008 0004          00000008   1191+         lg    14,8(,13) restore the reg                                01-DCCEP
00000A74 EB1C D020 0004          00000020   1192+         lmg   1,12,32(13)                                              01-DCCEP
00000A7A 07FE                               1193+         br   14                                                        01-DCCEP
                                            1194+* End of Epilog
                                            1195 * * **** End of Epilogue
                                            1196 *
                                            1197 *   DSECT for automatic variables in "err0r"
                                            1198 *      (FUNCTION #885)
                                            1199 *
00000000                00000000 000000A8   1200 @AUTO#err0r DSECT
00000000                                    1201          DS    XL168
                                            1202 *
00000A7C                00000000 00006CE8   1203 @CODE    CSECT
                                            1204 *
                                            1205 *
                                            1206 *
                                            1207 * ....... start of LZ4F_getVersion
                                            1208 $L$Z4$F_get$Version ALIAS X'D3E9F4C66D8785A3E58599A2899695'
00000A7C                                    1209 @LNAME764 DS   0H
00000A7C 0000000F                           1210          DC    X'0000000F'
00000A80 D3E9F4C66D8785A3                   1211          DC    C'LZ4F_getVersion'
00000A8F 00                                 1212          DC    X'00'
                                            1213 $L$Z4$F_get$Version DCCPRLG CINDEX=764,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME764
                                            1214          macro
                                            1215          dccextrn &m
                                            1216          gblc    &$dccext(1000)
                                            1217          gbla    &$dccexti
                                            1218          lcla    &i
                                            1219 &$dccext(&$dccexti+1) setc    '&m'
                                            1220 &i       seta    1
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1221 .loop    aif    (&i gt &$dccexti).around
                                            1222          aif    ('&$dccext(&i)' eq '&m').getout
                                            1223 &i       seta    &i+1
                                            1224          ago     .loop
                                            1225 .around  anop
                                            1226 &$dccexti seta &$dccexti+1
                                            1227          extrn  &m
                                            1228 .getout  anop
                                            1229          mend
00000A90                                    1230+$eye0036    ds    0d                                                    02-DCCCA
00000A90 C4C3C3                             1231+         dc cl3'DCC'                                                    02-DCCCA
00000A93 01                                 1232+         dc xl1'01' format one                                          02-DCCCA
00000A94 00000000                           1233+         dc a(0)                                                        02-DCCCA
00000A98 0000000000000000                   1234+         dc ad(0)                                                       02-DCCCA
00000AA0 00000000000000A8                   1235+         dc ad(168)                                                     02-DCCCA
00000AA8 0000000000000000                   1236+         dc ad(0)                                                       02-DCCCA
00000AB0 0000000000001000                   1237+         dc ad(4096)                                                    02-DCCCA
00000AB8 20                                 1238+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000AB9 03                                 1239+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000ABA 03                                 1240+         dc al1(3)                                                      02-DCCCA
00000ABB 08                                 1241+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000ABC 00                                 1242+         dc bl.8'00000000'                                              02-DCCCA
00000ABD 000000                             1243+         dc al3(0)                                                      02-DCCCA
00000AC0 0000000000000A7C                   1244+         dc ad(@LNAME764)                                               02-DCCCA
00000AC8                                    1245+         ds 0d                                                          02-DCCCA
00000AC8 0000000000000A90                   1246+         dc ad($eye0036)                                                02-DCCCA
00000AD0 0000000000000000                   1247+         dc ad(0)                                                       02-DCCCA
00000AD8                                    1248+         ds    0d                                                       01-DCCPR
                                            1249+         entry $L$Z4$F_get$Version                                      01-DCCPR
00000AD8                                    1250+$L$Z4$F_get$Version ds 0d                                               01-DCCPR
00000AD8                                    1251+@REGION_764_1 ds 0h                                                     01-DCCPR
00000AD8 EBEC D008 0024          00000008   1252+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1253 * ******* End of Prologue
                                            1254 * *
00000ADE A7F9 0064               00000064   1255          LGHI  15,100      ; 100
                                            1256 * * **** Start of Epilogue
                                            1257          DCCEPIL
00000AE2                                    1258+         ds 0h                                                          01-DCCEP
                                            1259+* Epilog
                                            1260+* Epilog
00000AE2 E3E0 D008 0004          00000008   1261+         lg    14,8(,13) restore the reg                                01-DCCEP
00000AE8 EB1C D020 0004          00000020   1262+         lmg   1,12,32(13)                                              01-DCCEP
00000AEE 07FE                               1263+         br   14                                                        01-DCCEP
                                            1264+* End of Epilog
                                            1265 * * **** End of Epilogue
                                            1266 *
                                            1267 *   DSECT for automatic variables in "LZ4F_getVersion"
                                            1268 *      (FUNCTION #764)
                                            1269 *
00000000                00000000 000000A8   1270 @AUTO#$L$Z4$F_get$Version DSECT
00000000                                    1271          DS    XL168
                                            1272 *
                                                                                                                           Page   31 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000AF0                00000000 00006CE8   1273 @CODE    CSECT
                                            1274 *
                                            1275 *
                                            1276 *
                                            1277 * ....... start of LZ4F_compressionLevel_max
                                            1278 $L$Z4$F_compression$Level_max ALIAS X'D3E9F4C66D839694979985A2A2899695D*
                                                                385A585936D9481A7'
00000AF0                                    1279 @LNAME761 DS   0H
00000AF0 00000019                           1280          DC    X'00000019'
00000AF4 D3E9F4C66D839694                   1281          DC    C'LZ4F_compressionLevel_max'
00000B0D 00                                 1282          DC    X'00'
                                            1283 $L$Z4$F_compression$Level_max DCCPRLG CINDEX=761,BASER=0,FRAME=168,SAVE*
                                                                AREA=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME761
                                            1284          macro
                                            1285          dccextrn &m
                                            1286          gblc    &$dccext(1000)
                                            1287          gbla    &$dccexti
                                            1288          lcla    &i
                                            1289 &$dccext(&$dccexti+1) setc    '&m'
                                            1290 &i       seta    1
                                            1291 .loop    aif    (&i gt &$dccexti).around
                                            1292          aif    ('&$dccext(&i)' eq '&m').getout
                                            1293 &i       seta    &i+1
                                            1294          ago     .loop
                                            1295 .around  anop
                                            1296 &$dccexti seta &$dccexti+1
                                            1297          extrn  &m
                                            1298 .getout  anop
                                            1299          mend
00000B10                                    1300+$eye0039    ds    0d                                                    02-DCCCA
00000B10 C4C3C3                             1301+         dc cl3'DCC'                                                    02-DCCCA
00000B13 01                                 1302+         dc xl1'01' format one                                          02-DCCCA
00000B14 00000000                           1303+         dc a(0)                                                        02-DCCCA
00000B18 0000000000000000                   1304+         dc ad(0)                                                       02-DCCCA
00000B20 00000000000000A8                   1305+         dc ad(168)                                                     02-DCCCA
00000B28 0000000000000000                   1306+         dc ad(0)                                                       02-DCCCA
00000B30 0000000000001000                   1307+         dc ad(4096)                                                    02-DCCCA
00000B38 20                                 1308+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B39 03                                 1309+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B3A 03                                 1310+         dc al1(3)                                                      02-DCCCA
00000B3B 08                                 1311+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B3C 00                                 1312+         dc bl.8'00000000'                                              02-DCCCA
00000B3D 000000                             1313+         dc al3(0)                                                      02-DCCCA
00000B40 0000000000000AF0                   1314+         dc ad(@LNAME761)                                               02-DCCCA
00000B48                                    1315+         ds 0d                                                          02-DCCCA
00000B48 0000000000000B10                   1316+         dc ad($eye0039)                                                02-DCCCA
00000B50 0000000000000000                   1317+         dc ad(0)                                                       02-DCCCA
00000B58                                    1318+         ds    0d                                                       01-DCCPR
                                            1319+         entry $L$Z4$F_compression$Level_max                            01-DCCPR
00000B58                                    1320+$L$Z4$F_compression$Level_max ds 0d                                     01-DCCPR
00000B58                                    1321+@REGION_761_1 ds 0h                                                     01-DCCPR
00000B58 EBEC D008 0024          00000008   1322+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1323 * ******* End of Prologue
                                            1324 * *
00000B5E A7F9 000C               0000000C   1325          LGHI  15,12       ; 12
                                            1326 * * **** Start of Epilogue
                                            1327          DCCEPIL
00000B62                                    1328+         ds 0h                                                          01-DCCEP
                                            1329+* Epilog
                                            1330+* Epilog
00000B62 E3E0 D008 0004          00000008   1331+         lg    14,8(,13) restore the reg                                01-DCCEP
00000B68 EB1C D020 0004          00000020   1332+         lmg   1,12,32(13)                                              01-DCCEP
00000B6E 07FE                               1333+         br   14                                                        01-DCCEP
                                            1334+* End of Epilog
                                            1335 * * **** End of Epilogue
                                            1336 *
                                            1337 *   DSECT for automatic variables in "LZ4F_compressionLevel_max"
                                            1338 *      (FUNCTION #761)
                                            1339 *
00000000                00000000 000000A8   1340 @AUTO#$L$Z4$F_compression$Level_max DSECT
00000000                                    1341          DS    XL168
                                            1342 *
00000B70                00000000 00006CE8   1343 @CODE    CSECT
                                            1344 *
                                            1345 *
                                            1346 *
                                            1347 * ....... start of LZ4F_getBlockSize
                                            1348 $L$Z4$F_get$Block$Size ALIAS X'D3E9F4C66D8785A3C293968392E289A985'
00000B70                                    1349 @LNAME779 DS   0H
00000B70 00000011                           1350          DC    X'00000011'
00000B74 D3E9F4C66D8785A3                   1351          DC    C'LZ4F_getBlockSize'
00000B85 00                                 1352          DC    X'00'
                                            1353 $L$Z4$F_get$Block$Size DCCPRLG CINDEX=779,BASER=12,FRAME=176,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME779
                                            1354          macro
                                            1355          dccextrn &m
                                            1356          gblc    &$dccext(1000)
                                            1357          gbla    &$dccexti
                                            1358          lcla    &i
                                            1359 &$dccext(&$dccexti+1) setc    '&m'
                                            1360 &i       seta    1
                                            1361 .loop    aif    (&i gt &$dccexti).around
                                            1362          aif    ('&$dccext(&i)' eq '&m').getout
                                            1363 &i       seta    &i+1
                                            1364          ago     .loop
                                            1365 .around  anop
                                            1366 &$dccexti seta &$dccexti+1
                                            1367          extrn  &m
                                            1368 .getout  anop
                                            1369          mend
00000B88                                    1370+$eye0042    ds    0d                                                    02-DCCCA
00000B88 C4C3C3                             1371+         dc cl3'DCC'                                                    02-DCCCA
00000B8B 01                                 1372+         dc xl1'01' format one                                          02-DCCCA
00000B8C 00000000                           1373+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000B90 0000000000000BFA                   1374+         dc ad(@PER_779)                                                02-DCCCA
00000B98 00000000000000B0                   1375+         dc ad(176)                                                     02-DCCCA
00000BA0 0000000000000000                   1376+         dc ad(0)                                                       02-DCCCA
00000BA8 0000000000001000                   1377+         dc ad(4096)                                                    02-DCCCA
00000BB0 20                                 1378+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000BB1 03                                 1379+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000BB2 03                                 1380+         dc al1(3)                                                      02-DCCCA
00000BB3 08                                 1381+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000BB4 00                                 1382+         dc bl.8'00000000'                                              02-DCCCA
00000BB5 000000                             1383+         dc al3(0)                                                      02-DCCCA
00000BB8 0000000000000B70                   1384+         dc ad(@LNAME779)                                               02-DCCCA
00000BC0                                    1385+         ds 0d                                                          02-DCCCA
00000BC0 0000000000000B88                   1386+         dc ad($eye0042)                                                02-DCCCA
00000BC8 0000000000000000                   1387+         dc ad(0)                                                       02-DCCCA
00000BD0                                    1388+         ds    0d                                                       01-DCCPR
                                            1389+         entry $L$Z4$F_get$Block$Size                                   01-DCCPR
00000BD0                                    1390+$L$Z4$F_get$Block$Size ds 0d                                            01-DCCPR
00000BD0                                    1391+@REGION_779_1 ds 0h                                                     01-DCCPR
00000BD0 EBEC D008 0024          00000008   1392+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000BD6 E3E0 D088 0004          00000088   1393+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000BDC E3C0 D090 0004          00000090   1394+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000BE2 B904 002E                          1395+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000BE6 E3B0 C018 0004          00000018   1396+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000BEC A7EB 00B0               000000B0   1397+         aghi  14,176              increase by frame size               01-DCCPR
00000BF0 E3E0 C020 0021          00000020   1398+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000BF6 4720 B020               00000020   1399+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000BFA                                    1400+@PER_779 ds    0h                                                       01-DCCPR
00000BFA EBDE 2080 0024          00000080   1401+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000C00 E3C0 2090 0024          00000090   1402+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000C06 B904 00D2                          1403+         lgr   13,2                set real frame pointer               01-DCCPR
00000C0A B904 00CF                          1404+         lgr   12,15               set base reg                         01-DCCPR
                        00000BD0            1405+         using @REGION_779_1,12                                         01-DCCPR
                                            1406 * ******* End of Prologue
                                            1407 * *
                                            1408 * ***       static const size_t blockSizes[4] = { 64 *(1<<10), 256 *(1\
                                            1409 * <<10), 1 *(1<<20), 4 *(1<<20) };
00000C0E E3F0 1004 0012          00000004   1410          LT    15,4(0,1)   ; blockSizeID
                                            1411 * ***
                                            1412 * ***       if (blockSizeID == 0) blockSizeID = LZ4F_max64KB;
00000C14 4770 C04C               00000C1C   1413          BNE   @L46
00000C18 A7F8 0004               00000004   1414          LHI   15,4        ; 4
00000C1C                                    1415 @L46     DS    0H
                                            1416 * ***       if (blockSizeID < LZ4F_max64KB || blockSizeID > LZ4F_max4M\
                                            1417 * B)
00000C1C C2FF 0000 0004                     1418          CLFI  15,X'00000004'
00000C22 4740 C060               00000C30   1419          BL    @L48
00000C26 C2FF 0000 0007                     1420          CLFI  15,X'00000007'
00000C2C 47D0 C090               00000C60   1421          BNH   @L47
00000C30                                    1422 @L48     DS    0H
                                            1423 * ***           return err0r(LZ4F_ERROR_maxBlockSize_invalid);
00000C30 E548 D0A8 0002          000000A8   1424          MVGHI 168(13),2
00000C36 4110 D0A8               000000A8   1425          LA    1,168(0,13)
                                                                                                                           Page   34 
  Active Usings: @REGION_779_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000C3A E3F0 C080 0004          00000C50   1426          LG    15,@lit_779_23 ; err0r
00000C40                                    1427 @@gen_label23 DS    0H
00000C40 05EF                               1428          BALR  14,15
00000C42                                    1429 @@gen_label24 DS    0H
00000C42 47F0 C0AA               00000C7A   1430          B     @ret_lab_779
00000C48                                    1431          DS    0D
00000C48 000000B0                           1432 @FRAMESIZE_779 DC F'176'
00000C4C 00000000
00000C50 0000000000000A60                   1433 @lit_779_23 DC AD(err0r)
00000C58 0000000000006CE8                   1434 @lit_779_24 DC AD(@DATA)
00000C60                                    1435 @L47     DS    0H
                                            1436 * ***       blockSizeID -= LZ4F_max64KB;
00000C60 A7FA FFFC               0000FFFC   1437          AHI   15,-4
                                            1438 * ***       return blockSizes[blockSizeID];
00000C64 B916 00FF                          1439          LLGFR 15,15
00000C68 E310 C088 0004          00000C58   1440          LG    1,@lit_779_24
00000C6E EBFF 0003 000D          00000003   1441          SLLG  15,15,3(0)  ; *0x8
00000C74 E3FF 1068 0004          00000068   1442          LG    15,104(15,1)
                                            1443 * ***   }
00000C7A                                    1444 @ret_lab_779 DS 0H
                                            1445 * * **** Start of Epilogue
                                            1446          DCCEPIL
00000C7A                                    1447+         ds 0h                                                          01-DCCEP
                                            1448+* Epilog
00000C7A D707 D088 D088 00000088 00000088   1449+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000C80 E3D0 D080 0004          00000080   1450+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000C86 E3C0 D090 0004          00000090   1451+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000C8C E3B0 C018 0004          00000018   1452+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000C92 E3C0 B010 0021          00000010   1453+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C98 E3E0 D008 0004          00000008   1454+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C9E EB1C D020 0004          00000020   1455+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000CA4 078E                               1456+         bcr 8,14                if same dsab, just return              01-DCCEP
00000CA6 E3F0 D010 0024          00000010   1457+         stg 15,16(0,13)         save return code                       01-DCCEP
00000CAC E300 D018 0024          00000018   1458+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000CB2 E3F0 D090 0004          00000090   1459+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000CB8 E3F0 F018 0004          00000018   1460+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000CBE 47F0 F040               00000040   1461+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1462+* End of Epilog
                                            1463 * * **** End of Epilogue
                                            1464          DROP  12
                                            1465 *
                                            1466 *   DSECT for automatic variables in "LZ4F_getBlockSize"
                                            1467 *      (FUNCTION #779)
                                            1468 *
00000000                00000000 000000A8   1469 @AUTO#$L$Z4$F_get$Block$Size DSECT
00000000                                    1470          DS    XL168
                                            1471 *
00000CC2                00000000 00006CE8   1472 @CODE    CSECT
                                            1473 *
                                            1474 *
                                            1475 *
                                            1476 * ....... start of LZ4F_headerChecksum
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000CC2                                    1477 @LNAME886 DS   0H
00000CC2 00000013                           1478          DC    X'00000013'
00000CC6 D3E9F4C66D888581                   1479          DC    C'LZ4F_headerChecksum'
00000CD9 00                                 1480          DC    X'00'
                                            1481 $L$Z4$F_header$Checksum DCCPRLG CINDEX=886,BASER=12,FRAME=200,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME886
                                            1482          macro
                                            1483          dccextrn &m
                                            1484          gblc    &$dccext(1000)
                                            1485          gbla    &$dccexti
                                            1486          lcla    &i
                                            1487 &$dccext(&$dccexti+1) setc    '&m'
                                            1488 &i       seta    1
                                            1489 .loop    aif    (&i gt &$dccexti).around
                                            1490          aif    ('&$dccext(&i)' eq '&m').getout
                                            1491 &i       seta    &i+1
                                            1492          ago     .loop
                                            1493 .around  anop
                                            1494 &$dccexti seta &$dccexti+1
                                            1495          extrn  &m
                                            1496 .getout  anop
                                            1497          mend
00000CE0                                    1498+$eye0045    ds    0d                                                    02-DCCCA
00000CE0 C4C3C3                             1499+         dc cl3'DCC'                                                    02-DCCCA
00000CE3 01                                 1500+         dc xl1'01' format one                                          02-DCCCA
00000CE4 00000000                           1501+         dc a(0)                                                        02-DCCCA
00000CE8 0000000000000D52                   1502+         dc ad(@PER_886)                                                02-DCCCA
00000CF0 00000000000000C8                   1503+         dc ad(200)                                                     02-DCCCA
00000CF8 0000000000000000                   1504+         dc ad(0)                                                       02-DCCCA
00000D00 0000000000001000                   1505+         dc ad(4096)                                                    02-DCCCA
00000D08 20                                 1506+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D09 03                                 1507+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D0A 03                                 1508+         dc al1(3)                                                      02-DCCCA
00000D0B 08                                 1509+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D0C 00                                 1510+         dc bl.8'00000000'                                              02-DCCCA
00000D0D 000000                             1511+         dc al3(0)                                                      02-DCCCA
00000D10 0000000000000CC2                   1512+         dc ad(@LNAME886)                                               02-DCCCA
00000D18                                    1513+         ds 0d                                                          02-DCCCA
00000D18 0000000000000CE0                   1514+         dc ad($eye0045)                                                02-DCCCA
00000D20 0000000000000000                   1515+         dc ad(0)                                                       02-DCCCA
00000D28                                    1516+         ds    0d                                                       01-DCCPR
00000D28                                    1517+$L$Z4$F_header$Checksum ds 0d                                           01-DCCPR
00000D28                                    1518+@REGION_886_1 ds 0h                                                     01-DCCPR
00000D28 EBEC D008 0024          00000008   1519+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D2E E3E0 D088 0004          00000088   1520+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000D34 E3C0 D090 0004          00000090   1521+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000D3A B904 002E                          1522+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000D3E E3B0 C018 0004          00000018   1523+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000D44 A7EB 00C8               000000C8   1524+         aghi  14,200              increase by frame size               01-DCCPR
00000D48 E3E0 C020 0021          00000020   1525+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000D4E 4720 B020               00000020   1526+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000D52                                    1527+@PER_886 ds    0h                                                       01-DCCPR
                                                                                                                           Page   36 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000D52 EBDE 2080 0024          00000080   1528+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000D58 E3C0 2090 0024          00000090   1529+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000D5E B904 00D2                          1530+         lgr   13,2                set real frame pointer               01-DCCPR
00000D62 B904 00CF                          1531+         lgr   12,15               set base reg                         01-DCCPR
                        00000D28            1532+         using @REGION_886_1,12                                         01-DCCPR
                                            1533 * ******* End of Prologue
                                            1534 * *
                                            1535 * ***       U32 const xxh = XXH32(header, length, 0);
00000D66 E3F0 1000 0004          00000000   1536          LG    15,0(0,1)   ; header
00000D6C E3F0 D0B0 0024          000000B0   1537          STG   15,176(0,13)
00000D72 E3F0 1008 0004          00000008   1538          LG    15,8(0,1)   ; length
00000D78 E3F0 D0B8 0024          000000B8   1539          STG   15,184(0,13)
00000D7E D707 D0C0 D0C0 000000C0 000000C0   1540          XC    192(8,13),192(13)
00000D84 4110 D0B0               000000B0   1541          LA    1,176(0,13)
00000D88 E3F0 C0C8 0004          00000DF0   1542          LG    15,@lit_886_26 ; XXH32
00000D8E                                    1543 @@gen_label25 DS    0H
00000D8E 05EF                               1544          BALR  14,15
00000D90                                    1545 @@gen_label26 DS    0H
                                            1546 * ***       return (BYTE)(xxh >> 8);
00000D90 88F0 0008               00000008   1547          SRL   15,8(0)
00000D94 E3F0 C0D0 0080          00000DF8   1548          NG    15,@lit_886_27
                                            1549 * ***   }
                                            1550 * * **** Start of Epilogue
                                            1551          DCCEPIL
00000D9A                                    1552+         ds 0h                                                          01-DCCEP
                                            1553+* Epilog
00000D9A D707 D088 D088 00000088 00000088   1554+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000DA0 E3D0 D080 0004          00000080   1555+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000DA6 E3C0 D090 0004          00000090   1556+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000DAC E3B0 C018 0004          00000018   1557+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000DB2 E3C0 B010 0021          00000010   1558+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000DB8 E3E0 D008 0004          00000008   1559+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000DBE EB1C D020 0004          00000020   1560+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000DC4 078E                               1561+         bcr 8,14                if same dsab, just return              01-DCCEP
00000DC6 E3F0 D010 0024          00000010   1562+         stg 15,16(0,13)         save return code                       01-DCCEP
00000DCC E300 D018 0024          00000018   1563+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000DD2 E3F0 D090 0004          00000090   1564+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000DD8 E3F0 F018 0004          00000018   1565+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000DDE 47F0 F040               00000040   1566+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1567+* End of Epilog
                                            1568 * * **** End of Epilogue
00000DE8                                    1569          DS    0D
00000DE8 000000C8                           1570 @FRAMESIZE_886 DC F'200'
00000DEC 00000000
00000DF0 0000000000000000                   1571 @lit_886_26 DC AD($X$X$H32)
00000DF8 00000000000000FF                   1572 @lit_886_27 DC FD'255' 0x00000000000000ff
                                            1573          DROP  12
                                            1574 *
                                            1575 *   DSECT for automatic variables in "LZ4F_headerChecksum"
                                            1576 *      (FUNCTION #886)
                                            1577 *
00000000                00000000 000000AC   1578 @AUTO#$L$Z4$F_header$Checksum DSECT
                                                                                                                           Page   37 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                                    1579          DS    XL168
000000A8                                    1580 $L$Z4$F_header$Checksum#xxh#0 DS 1F ; xxh
                                            1581 *
00000E00                00000000 00006CE8   1582 @CODE    CSECT
                                            1583 *
                                            1584 *
                                            1585 *
                                            1586 * ....... start of LZ4F_optimalBSID
00000E00                                    1587 @LNAME887 DS   0H
00000E00 00000010                           1588          DC    X'00000010'
00000E04 D3E9F4C66D9697A3                   1589          DC    C'LZ4F_optimalBSID'
00000E14 00                                 1590          DC    X'00'
                                            1591 $L$Z4$F_optimal$B$S$I$D DCCPRLG CINDEX=887,BASER=12,FRAME=176,SAVEAREA=*
                                                                NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME887
                                            1592          macro
                                            1593          dccextrn &m
                                            1594          gblc    &$dccext(1000)
                                            1595          gbla    &$dccexti
                                            1596          lcla    &i
                                            1597 &$dccext(&$dccexti+1) setc    '&m'
                                            1598 &i       seta    1
                                            1599 .loop    aif    (&i gt &$dccexti).around
                                            1600          aif    ('&$dccext(&i)' eq '&m').getout
                                            1601 &i       seta    &i+1
                                            1602          ago     .loop
                                            1603 .around  anop
                                            1604 &$dccexti seta &$dccexti+1
                                            1605          extrn  &m
                                            1606 .getout  anop
                                            1607          mend
00000E18                                    1608+$eye0048    ds    0d                                                    02-DCCCA
00000E18 C4C3C3                             1609+         dc cl3'DCC'                                                    02-DCCCA
00000E1B 01                                 1610+         dc xl1'01' format one                                          02-DCCCA
00000E1C 00000000                           1611+         dc a(0)                                                        02-DCCCA
00000E20 0000000000000000                   1612+         dc ad(0)                                                       02-DCCCA
00000E28 00000000000000B0                   1613+         dc ad(176)                                                     02-DCCCA
00000E30 0000000000000000                   1614+         dc ad(0)                                                       02-DCCCA
00000E38 0000000000001000                   1615+         dc ad(4096)                                                    02-DCCCA
00000E40 20                                 1616+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E41 03                                 1617+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E42 03                                 1618+         dc al1(3)                                                      02-DCCCA
00000E43 08                                 1619+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E44 00                                 1620+         dc bl.8'00000000'                                              02-DCCCA
00000E45 000000                             1621+         dc al3(0)                                                      02-DCCCA
00000E48 0000000000000E00                   1622+         dc ad(@LNAME887)                                               02-DCCCA
00000E50                                    1623+         ds 0d                                                          02-DCCCA
00000E50 0000000000000E18                   1624+         dc ad($eye0048)                                                02-DCCCA
00000E58 0000000000000000                   1625+         dc ad(0)                                                       02-DCCCA
00000E60                                    1626+         ds    0d                                                       01-DCCPR
00000E60                                    1627+$L$Z4$F_optimal$B$S$I$D ds 0d                                           01-DCCPR
00000E60                                    1628+@REGION_887_1 ds 0h                                                     01-DCCPR
00000E60 EBEC D008 0024          00000008   1629+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   38 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000E66 B904 00CF                          1630+         lgr   12,15               set base reg                         01-DCCPR
                        00000E60            1631+         using @REGION_887_1,12                                         01-DCCPR
00000E6A B904 0021                          1632          LGR   2,1         ; ptr to parm area
                                            1633 * ******* End of Prologue
                                            1634 * *
                                            1635 * ***       LZ4F_blockSizeID_t proposedBSID = LZ4F_max64KB;
00000E6E A7F8 0004               00000004   1636          LHI   15,4        ; 4
                                            1637 * ***       size_t maxBlockSize = 64 *(1<<10);
00000E72 C01F 0001 0000                     1638          LLILF 1,X'00010000' ; 65536
                                            1639 * ***       while (requestedBSID > proposedBSID) {
00000E78 47F0 C03C               00000E9C   1640          B     @L52
00000E7C                                    1641 @L51     DS    0H
                                            1642 * ***           if (srcSize <= maxBlockSize)
00000E7C E330 2008 0004          00000008   1643          LG    3,8(0,2)    ; srcSize
00000E82 B921 0031                          1644          CLGR  3,1
00000E86 4720 C032               00000E92   1645          BH    @L53
                                            1646 * ***               return proposedBSID;
00000E8A B914 00FF                          1647          LGFR  15,15
00000E8E 47F0 C04A               00000EAA   1648          B     @ret_lab_887
00000E92                                    1649 @L53     DS    0H
                                            1650 * ***           proposedBSID = (LZ4F_blockSizeID_t)((int)proposedBSID \
                                            1651 * + 1);
00000E92 A7FA 0001               00000001   1652          AHI   15,1
                                            1653 * ***           maxBlockSize <<= 2;
00000E96 EB11 0002 000D          00000002   1654          SLLG  1,1,2(0)
                                            1655 * ***       }
00000E9C                                    1656 @L52     DS    0H
00000E9C 5830 2004               00000004   1657          L     3,4(0,2)    ; requestedBSID
00000EA0 193F                               1658          CR    3,15
00000EA2 4720 C01C               00000E7C   1659          BH    @L51
                                            1660 * ***       return requestedBSID;
00000EA6 B914 00F3                          1661          LGFR  15,3
                                            1662 * ***   }
00000EAA                                    1663 @ret_lab_887 DS 0H
                                            1664 * * **** Start of Epilogue
                                            1665          DCCEPIL
00000EAA                                    1666+         ds 0h                                                          01-DCCEP
                                            1667+* Epilog
                                            1668+* Epilog
00000EAA E3E0 D008 0004          00000008   1669+         lg    14,8(,13) restore the reg                                01-DCCEP
00000EB0 EB1C D020 0004          00000020   1670+         lmg   1,12,32(13)                                              01-DCCEP
00000EB6 07FE                               1671+         br   14                                                        01-DCCEP
                                            1672+* End of Epilog
                                            1673 * * **** End of Epilogue
                                            1674          DROP  12
                                            1675 *
                                            1676 *   DSECT for automatic variables in "LZ4F_optimalBSID"
                                            1677 *      (FUNCTION #887)
                                            1678 *
00000000                00000000 000000B0   1679 @AUTO#$L$Z4$F_optimal$B$S$I$D DSECT
00000000                                    1680          DS    XL168
000000A8                                    1681 $L$Z4$F_optimal$B$S$I$D#max$Block$Size#0 DS 8XL1 ; maxBlockSize
                                                                                                                           Page   39 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000B0                000000B0 000000A8   1682          ORG   @AUTO#$L$Z4$F_optimal$B$S$I$D+168
000000A8                                    1683 $L$Z4$F_optimal$B$S$I$D#proposed$B$S$I$D#0 DS 1F ; proposedBSID
                                            1684 *
00000EB8                00000000 00006CE8   1685 @CODE    CSECT
                                            1686 *
                                            1687 *
                                            1688 *
                                            1689 * ....... start of LZ4F_compressBound_internal
00000EB8                                    1690 @LNAME888 DS   0H
00000EB8 0000001B                           1691          DC    X'0000001B'
00000EBC D3E9F4C66D839694                   1692          DC    C'LZ4F_compressBound_internal'
00000ED7 00                                 1693          DC    X'00'
                                            1694 $L$Z4$F_compress$Bound_internal DCCPRLG CINDEX=888,BASER=12,FRAME=232,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME888
                                            1695          macro
                                            1696          dccextrn &m
                                            1697          gblc    &$dccext(1000)
                                            1698          gbla    &$dccexti
                                            1699          lcla    &i
                                            1700 &$dccext(&$dccexti+1) setc    '&m'
                                            1701 &i       seta    1
                                            1702 .loop    aif    (&i gt &$dccexti).around
                                            1703          aif    ('&$dccext(&i)' eq '&m').getout
                                            1704 &i       seta    &i+1
                                            1705          ago     .loop
                                            1706 .around  anop
                                            1707 &$dccexti seta &$dccexti+1
                                            1708          extrn  &m
                                            1709 .getout  anop
                                            1710          mend
00000ED8                                    1711+$eye0051    ds    0d                                                    02-DCCCA
00000ED8 C4C3C3                             1712+         dc cl3'DCC'                                                    02-DCCCA
00000EDB 01                                 1713+         dc xl1'01' format one                                          02-DCCCA
00000EDC 00000000                           1714+         dc a(0)                                                        02-DCCCA
00000EE0 0000000000000F4A                   1715+         dc ad(@PER_888)                                                02-DCCCA
00000EE8 00000000000000E8                   1716+         dc ad(232)                                                     02-DCCCA
00000EF0 0000000000000000                   1717+         dc ad(0)                                                       02-DCCCA
00000EF8 0000000000001000                   1718+         dc ad(4096)                                                    02-DCCCA
00000F00 20                                 1719+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F01 03                                 1720+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F02 03                                 1721+         dc al1(3)                                                      02-DCCCA
00000F03 08                                 1722+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F04 00                                 1723+         dc bl.8'00000000'                                              02-DCCCA
00000F05 000000                             1724+         dc al3(0)                                                      02-DCCCA
00000F08 0000000000000EB8                   1725+         dc ad(@LNAME888)                                               02-DCCCA
00000F10                                    1726+         ds 0d                                                          02-DCCCA
00000F10 0000000000000ED8                   1727+         dc ad($eye0051)                                                02-DCCCA
00000F18 0000000000000000                   1728+         dc ad(0)                                                       02-DCCCA
00000F20                                    1729+         ds    0d                                                       01-DCCPR
00000F20                                    1730+$L$Z4$F_compress$Bound_internal ds 0d                                   01-DCCPR
00000F20                                    1731+@REGION_888_1 ds 0h                                                     01-DCCPR
00000F20 EBEC D008 0024          00000008   1732+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000F26 E3E0 D088 0004          00000088   1733+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F2C E3C0 D090 0004          00000090   1734+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F32 B904 002E                          1735+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F36 E3B0 C018 0004          00000018   1736+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F3C A7EB 00E8               000000E8   1737+         aghi  14,232              increase by frame size               01-DCCPR
00000F40 E3E0 C020 0021          00000020   1738+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F46 4720 B020               00000020   1739+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F4A                                    1740+@PER_888 ds    0h                                                       01-DCCPR
00000F4A EBDE 2080 0024          00000080   1741+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F50 E3C0 2090 0024          00000090   1742+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F56 B904 00D2                          1743+         lgr   13,2                set real frame pointer               01-DCCPR
00000F5A B904 00CF                          1744+         lgr   12,15               set base reg                         01-DCCPR
                        00000F20            1745+         using @REGION_888_1,12                                         01-DCCPR
00000F5E B904 0041                          1746          LGR   4,1         ; ptr to parm area
                                            1747 * ******* End of Prologue
                                            1748 * *
                                            1749 * ***       LZ4F_preferences_t prefsNull = { { LZ4F_default, LZ4F_bloc\
                                            1750 * kLinked, LZ4F_noContentChecksum, LZ4F_frame, 0ULL, 0U, LZ4F_noBlockC\
                                            1751 * hecksum }, 0, 0u, 0u, { 0u, 0u, 0u } };
                                            1752 * setting 56 bytes to 0x00
00000F62 D737 D0A8 D0A8 000000A8 000000A8   1753          XC    168(56,13),168(13)
                                            1754 * ***       prefsNull.frameInfo.contentChecksumFlag = LZ4F_contentChec\
                                            1755 * ksumEnabled;
00000F68 E54C D0B0 0001          000000B0   1756          MVHI  176(13),1   ; offset of contentChecksumFlag in 0000027
                                            1757 * ***       prefsNull.frameInfo.blockChecksumFlag = LZ4F_blockChecksum\
                                            1758 * Enabled;
00000F6E E54C D0C4 0001          000000C4   1759          MVHI  196(13),1   ; offset of blockChecksumFlag in 0000027
                                            1760 * ***       {   const LZ4F_preferences_t* const prefsPtr = (preference\
                                            1761 * sPtr==((void *)0)) ? &prefsNull : preferencesPtr;
00000F74 E320 4008 0004          00000008   1762          LG    2,8(0,4)    ; preferencesPtr
00000F7A B902 00F2                          1763          LTGR  15,2
00000F7E 4770 C088               00000FA8   1764          BNE   @L54
00000F82 4120 D0A8               000000A8   1765          LA    2,168(0,13)
00000F86 47F0 C088               00000FA8   1766          B     @L55
00000F90                                    1767          DS    0D
00000F90 000000E8                           1768 @FRAMESIZE_888 DC F'232'
00000F94 00000000
00000F98 0000000000000BD0                   1769 @lit_888_31 DC AD($L$Z4$F_get$Block$Size)
00000FA0 0000000000006CE8                   1770 @lit_888_33 DC AD(@DATA)
00000FA8                                    1771 @L54     DS    0H
00000FA8                                    1772 @L55     DS    0H
                                            1773 * ***           U32 const flush = prefsPtr->autoFlush | (srcSize==0);
00000FA8 E350 4000 0004          00000000   1774          LG    5,0(0,4)    ; srcSize
00000FAE B900 0035                          1775          LPGR  3,5
00000FB2 A73B FFFF               0000FFFF   1776          AGHI  3,-1
00000FB6 EB33 003F 000C          0000003F   1777          SRLG  3,3,63(0)
00000FBC 5630 2024               00000024   1778          O     3,36(0,2)
                                            1779 * ***           LZ4F_blockSizeID_t const blockID = prefsPtr->frameInfo\
                                            1780 * .blockSizeID;
00000FC0 E3F0 2000 0016          00000000   1781          LLGF  15,0(0,2)   ; prefsPtr
                                            1782 * ***           size_t const blockSize = LZ4F_getBlockSize(blockID);
00000FC6 E3F0 D0E0 0024          000000E0   1783          STG   15,224(0,13)
                                                                                                                           Page   41 
  Active Usings: @REGION_888_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000FCC 4110 D0E0               000000E0   1784          LA    1,224(0,13)
00000FD0 E3F0 C078 0004          00000F98   1785          LG    15,@lit_888_31 ; LZ4F_getBlockSize
00000FD6                                    1786 @@gen_label30 DS    0H
00000FD6 05EF                               1787          BALR  14,15
00000FD8                                    1788 @@gen_label31 DS    0H
                                            1789 * ***           size_t const maxBuffered = blockSize - 1;
00000FD8 B904 001F                          1790          LGR   1,15
00000FDC A71B FFFF               0000FFFF   1791          AGHI  1,-1
                                            1792 * ***           size_t const bufferedSize = ( (alreadyBuffered) < (max\
                                            1793 * Buffered) ? (alreadyBuffered) : (maxBuffered) );
00000FE0 E340 4010 0004          00000010   1794          LG    4,16(0,4)   ; alreadyBuffered
00000FE6 B921 0041                          1795          CLGR  4,1
00000FEA 47B0 C0D2               00000FF2   1796          BNL   @L56
00000FEE 47F0 C0D6               00000FF6   1797          B     @L57
00000FF2                                    1798 @L56     DS    0H
00000FF2 B904 0041                          1799          LGR   4,1
00000FF6                                    1800 @L57     DS    0H
                                            1801 * ***           size_t const maxSrcSize = srcSize + bufferedSize;
00000FF6 B90A 0054                          1802          ALGR  5,4
                                            1803 * ***           unsigned const nbFullBlocks = (unsigned)(maxSrcSize / \
                                            1804 * blockSize);
00000FFA A769 0000               00000000   1805          LGHI  6,0
00000FFE B904 0075                          1806          LGR   7,5
00001002 B987 006F                          1807          DLGR  6,15
00001006 1817                               1808          LR    1,7         ; nbFullBlocks
                                            1809 * ***           size_t const partialBlockSize = maxSrcSize & (blockSiz\
                                            1810 * e-1);
00001008 B904 004F                          1811          LGR   4,15
0000100C A74B FFFF               0000FFFF   1812          AGHI  4,-1
00001010 B980 0054                          1813          NGR   5,4
                                            1814 * ***           size_t const lastBlockSize = flush ? partialBlockSize \
                                            1815 * : 0;
00001014 1233                               1816          LTR   3,3
00001016 4780 C102               00001022   1817          BZ    @L58
0000101A B904 0045                          1818          LGR   4,5
0000101E 47F0 C106               00001026   1819          B     @L59
00001022                                    1820 @L58     DS    0H
00001022 A749 0000               00000000   1821          LGHI  4,0         ; 0
00001026                                    1822 @L59     DS    0H
                                            1823 * ***           unsigned const nbBlocks = nbFullBlocks + (lastBlockSiz\
                                            1824 * e>0);
00001026 C24E 0000 0000                     1825          CLGFI 4,X'00000000'
0000102C 47D0 C118               00001038   1826          BNH   @@gen_label34
00001030 A738 0001               00000001   1827          LHI   3,1
00001034 47F0 C11C               0000103C   1828          B     @@gen_label35
00001038                                    1829 @@gen_label34 DS 0H
00001038 A738 0000               00000000   1830          LHI   3,0
0000103C                                    1831 @@gen_label35 DS 0H
0000103C 1851                               1832          LR    5,1
0000103E 1E53                               1833          ALR   5,3
                                            1834 * ***
                                            1835 * ***           size_t const blockCRCSize = BFSize * prefsPtr->frameIn\
                                                                                                                           Page   42 
  Active Usings: @REGION_888_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1836 * fo.blockChecksumFlag;
00001040 E330 C080 0004          00000FA0   1837          LG    3,@lit_888_33
00001046 E360 3060 0004          00000060   1838          LG    6,96(0,3)   ; BFSize
0000104C E370 201C 0014          0000001C   1839          LGF   7,28(0,2)
00001052 B904 0086                          1840          LGR   8,6
00001056 B90C 0087                          1841          MSGR  8,7
                                            1842 * ***           size_t const frameEnd = BHSize + (prefsPtr->frameInfo.\
                                            1843 * contentChecksumFlag*BFSize);
0000105A E320 2008 0014          00000008   1844          LGF   2,8(0,2)
00001060 B90C 0026                          1845          MSGR  2,6
00001064 E320 3058 000A          00000058   1846          ALG   2,88(0,3)
                                            1847 * ***
                                            1848 * ***           return ((BHSize + blockCRCSize) * nbBlocks) +
                                            1849 * ***                  (blockSize * nbFullBlocks) + lastBlockSize + fr\
                                            1850 * ameEnd;
0000106A E380 3058 000A          00000058   1851          ALG   8,88(0,3)
00001070 B916 0035                          1852          LLGFR 3,5
00001074 B90C 0083                          1853          MSGR  8,3
00001078 B916 0011                          1854          LLGFR 1,1
0000107C B90C 00F1                          1855          MSGR  15,1
00001080 B90A 008F                          1856          ALGR  8,15
00001084 B90A 0084                          1857          ALGR  8,4
00001088 B90A 0082                          1858          ALGR  8,2
0000108C B904 00F8                          1859          LGR   15,8
                                            1860 * ***       }
                                            1861 * ***   }
                                            1862 * * **** Start of Epilogue
                                            1863          DCCEPIL
00001090                                    1864+         ds 0h                                                          01-DCCEP
                                            1865+* Epilog
00001090 D707 D088 D088 00000088 00000088   1866+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001096 E3D0 D080 0004          00000080   1867+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000109C E3C0 D090 0004          00000090   1868+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000010A2 E3B0 C018 0004          00000018   1869+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000010A8 E3C0 B010 0021          00000010   1870+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000010AE E3E0 D008 0004          00000008   1871+         lg  14,8(0,13)          load up return address                 01-DCCEP
000010B4 EB1C D020 0004          00000020   1872+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000010BA 078E                               1873+         bcr 8,14                if same dsab, just return              01-DCCEP
000010BC E3F0 D010 0024          00000010   1874+         stg 15,16(0,13)         save return code                       01-DCCEP
000010C2 E300 D018 0024          00000018   1875+         stg 0,24(0,13)          save more return code                  01-DCCEP
000010C8 E3F0 D090 0004          00000090   1876+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000010CE E3F0 F018 0004          00000018   1877+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000010D4 47F0 F040               00000040   1878+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1879+* End of Epilog
                                            1880 * * **** End of Epilogue
                                            1881          DROP  12
                                            1882 *
                                            1883 *   DSECT for automatic variables in "LZ4F_compressBound_internal"
                                            1884 *      (FUNCTION #888)
                                            1885 *
00000000                00000000 000000E0   1886 @AUTO#$L$Z4$F_compress$Bound_internal DSECT
00000000                                    1887          DS    XL168
                                                                                                                           Page   43 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                    1888 $L$Z4$F_compress$Bound_internal#frame$End#1 DS 8XL1 ; frameEnd
000000B0                000000B0 000000A8   1889          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1890 $L$Z4$F_compress$Bound_internal#block$C$R$C$Size#1 DS 8XL1 ; blockCRCSi*
                                                                ze
000000B0                000000B0 000000A8   1891          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1892 $L$Z4$F_compress$Bound_internal#nb$Blocks#1 DS 1F ; nbBlocks
000000AC                000000AC 000000A8   1893          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1894 $L$Z4$F_compress$Bound_internal#last$Block$Size#1 DS 8XL1 ; lastBlockSi*
                                                                ze
000000B0                000000B0 000000A8   1895          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1896 $L$Z4$F_compress$Bound_internal#partial$Block$Size#1 DS 8XL1 ; partialB*
                                                                lockSize
000000B0                000000B0 000000A8   1897          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1898 $L$Z4$F_compress$Bound_internal#nb$Full$Blocks#1 DS 1F ; nbFullBlocks
000000AC                000000AC 000000A8   1899          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1900 $L$Z4$F_compress$Bound_internal#max$Src$Size#1 DS 8XL1 ; maxSrcSize
000000B0                000000B0 000000A8   1901          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1902 $L$Z4$F_compress$Bound_internal#buffered$Size#1 DS 8XL1 ; bufferedSize
000000B0                000000B0 000000A8   1903          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1904 $L$Z4$F_compress$Bound_internal#max$Buffered#1 DS 8XL1 ; maxBuffered
000000B0                000000B0 000000A8   1905          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1906 $L$Z4$F_compress$Bound_internal#block$Size#1 DS 8XL1 ; blockSize
000000B0                000000B0 000000A8   1907          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1908 $L$Z4$F_compress$Bound_internal#block$I$D#1 DS 1F ; blockID
000000AC                000000AC 000000A8   1909          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1910 $L$Z4$F_compress$Bound_internal#flush#1 DS 1F ; flush
000000AC                000000AC 000000A8   1911          ORG   @AUTO#$L$Z4$F_compress$Bound_internal+168
000000A8                                    1912 $L$Z4$F_compress$Bound_internal#prefs$Null#0 DS 56XL1 ; prefsNull
                                            1913 *
000010D8                00000000 00006CE8   1914 @CODE    CSECT
                                            1915 *
                                            1916 *
                                            1917 *
                                            1918 * ....... start of LZ4F_compressFrameBound
                                            1919 $L$Z4$F_compress$Frame$Bound ALIAS X'D3E9F4C66D839694979985A2A2C6998194*
                                                                85C296A49584'
000010D8                                    1920 @LNAME762 DS   0H
000010D8 00000017                           1921          DC    X'00000017'
000010DC D3E9F4C66D839694                   1922          DC    C'LZ4F_compressFrameBound'
000010F3 00                                 1923          DC    X'00'
                                            1924 $L$Z4$F_compress$Frame$Bound DCCPRLG CINDEX=762,BASER=12,FRAME=248,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME762
                                            1925          macro
                                            1926          dccextrn &m
                                            1927          gblc    &$dccext(1000)
                                            1928          gbla    &$dccexti
                                            1929          lcla    &i
                                            1930 &$dccext(&$dccexti+1) setc    '&m'
                                            1931 &i       seta    1
                                            1932 .loop    aif    (&i gt &$dccexti).around
                                            1933          aif    ('&$dccext(&i)' eq '&m').getout
                                            1934 &i       seta    &i+1
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1935          ago     .loop
                                            1936 .around  anop
                                            1937 &$dccexti seta &$dccexti+1
                                            1938          extrn  &m
                                            1939 .getout  anop
                                            1940          mend
000010F8                                    1941+$eye0054    ds    0d                                                    02-DCCCA
000010F8 C4C3C3                             1942+         dc cl3'DCC'                                                    02-DCCCA
000010FB 01                                 1943+         dc xl1'01' format one                                          02-DCCCA
000010FC 00000000                           1944+         dc a(0)                                                        02-DCCCA
00001100 000000000000116A                   1945+         dc ad(@PER_762)                                                02-DCCCA
00001108 00000000000000F8                   1946+         dc ad(248)                                                     02-DCCCA
00001110 0000000000000000                   1947+         dc ad(0)                                                       02-DCCCA
00001118 0000000000001000                   1948+         dc ad(4096)                                                    02-DCCCA
00001120 20                                 1949+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001121 03                                 1950+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001122 03                                 1951+         dc al1(3)                                                      02-DCCCA
00001123 08                                 1952+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001124 00                                 1953+         dc bl.8'00000000'                                              02-DCCCA
00001125 000000                             1954+         dc al3(0)                                                      02-DCCCA
00001128 00000000000010D8                   1955+         dc ad(@LNAME762)                                               02-DCCCA
00001130                                    1956+         ds 0d                                                          02-DCCCA
00001130 00000000000010F8                   1957+         dc ad($eye0054)                                                02-DCCCA
00001138 0000000000000000                   1958+         dc ad(0)                                                       02-DCCCA
00001140                                    1959+         ds    0d                                                       01-DCCPR
                                            1960+         entry $L$Z4$F_compress$Frame$Bound                             01-DCCPR
00001140                                    1961+$L$Z4$F_compress$Frame$Bound ds 0d                                      01-DCCPR
00001140                                    1962+@REGION_762_1 ds 0h                                                     01-DCCPR
00001140 EBEC D008 0024          00000008   1963+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001146 E3E0 D088 0004          00000088   1964+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000114C E3C0 D090 0004          00000090   1965+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001152 B904 002E                          1966+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001156 E3B0 C018 0004          00000018   1967+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000115C A7EB 00F8               000000F8   1968+         aghi  14,248              increase by frame size               01-DCCPR
00001160 E3E0 C020 0021          00000020   1969+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001166 4720 B020               00000020   1970+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000116A                                    1971+@PER_762 ds    0h                                                       01-DCCPR
0000116A EBDE 2080 0024          00000080   1972+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001170 E3C0 2090 0024          00000090   1973+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001176 B904 00D2                          1974+         lgr   13,2                set real frame pointer               01-DCCPR
0000117A B904 00CF                          1975+         lgr   12,15               set base reg                         01-DCCPR
                        00001140            1976+         using @REGION_762_1,12                                         01-DCCPR
                                            1977 * ******* End of Prologue
                                            1978 * *
                                            1979 * ***       LZ4F_preferences_t prefs;
                                            1980 * ***       size_t const headerSize = maxFHSize;
0000117E E3F0 C070 0004          000011B0   1981          LG    15,@lit_762_35
00001184 E3F0 F050 0004          00000050   1982          LG    15,80(0,15) ; maxFHSize
                                            1983 * ***
                                            1984 * ***       if (preferencesPtr!=((void *)0)) prefs = *preferencesPtr;
0000118A E320 1008 0004          00000008   1985          LG    2,8(0,1)    ; preferencesPtr
00001190 B902 0032                          1986          LTGR  3,2
                                                                                                                           Page   45 
  Active Usings: @REGION_762_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001194 4780 C080               000011C0   1987          BE    @L60
00001198 D237 D0A8 2000 000000A8 00000000   1988          MVC   168(56,13),0(2)
0000119E 47F0 C08A               000011CA   1989          B     @L61
000011A8                                    1990          DS    0D
000011A8 000000F8                           1991 @FRAMESIZE_762 DC F'248'
000011AC 00000000
000011B0 0000000000006CE8                   1992 @lit_762_35 DC AD(@DATA)
000011B8 0000000000000F20                   1993 @lit_762_36 DC AD($L$Z4$F_compress$Bound_internal)
                                            1994 * ***       else __memset((&prefs),(0),(sizeof(prefs)));
000011C0                                    1995 @L60     DS    0H
000011C0 4120 D0A8               000000A8   1996          LA    2,168(0,13)
                                            1997 * setting 56 bytes to 0x00
000011C4 D737 2000 2000 00000000 00000000   1998          XC    0(56,2),0(2)
000011CA                                    1999 @L61     DS    0H
                                            2000 * ***       prefs.autoFlush = 1;
000011CA E54C D0CC 0001          000000CC   2001          MVHI  204(13),1   ; offset of autoFlush in 0000028
                                            2002 * ***
                                            2003 * ***       return headerSize + LZ4F_compressBound_internal(srcSize, &\
                                            2004 * prefs, 0);;
000011D0 B904 002F                          2005          LGR   2,15
000011D4 E3F0 1000 0004          00000000   2006          LG    15,0(0,1)   ; srcSize
000011DA E3F0 D0E0 0024          000000E0   2007          STG   15,224(0,13)
000011E0 41F0 D0A8               000000A8   2008          LA    15,168(0,13)
000011E4 E3F0 D0E8 0024          000000E8   2009          STG   15,232(0,13)
000011EA D707 D0F0 D0F0 000000F0 000000F0   2010          XC    240(8,13),240(13)
000011F0 4110 D0E0               000000E0   2011          LA    1,224(0,13)
000011F4 E3F0 C078 0004          000011B8   2012          LG    15,@lit_762_36 ; LZ4F_compressBound_internal
000011FA                                    2013 @@gen_label37 DS    0H
000011FA 05EF                               2014          BALR  14,15
000011FC                                    2015 @@gen_label38 DS    0H
000011FC B90A 002F                          2016          ALGR  2,15
00001200 B904 00F2                          2017          LGR   15,2
                                            2018 * ***   }
                                            2019 * * **** Start of Epilogue
                                            2020          DCCEPIL
00001204                                    2021+         ds 0h                                                          01-DCCEP
                                            2022+* Epilog
00001204 D707 D088 D088 00000088 00000088   2023+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000120A E3D0 D080 0004          00000080   2024+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001210 E3C0 D090 0004          00000090   2025+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001216 E3B0 C018 0004          00000018   2026+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000121C E3C0 B010 0021          00000010   2027+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001222 E3E0 D008 0004          00000008   2028+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001228 EB1C D020 0004          00000020   2029+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000122E 078E                               2030+         bcr 8,14                if same dsab, just return              01-DCCEP
00001230 E3F0 D010 0024          00000010   2031+         stg 15,16(0,13)         save return code                       01-DCCEP
00001236 E300 D018 0024          00000018   2032+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000123C E3F0 D090 0004          00000090   2033+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001242 E3F0 F018 0004          00000018   2034+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001248 47F0 F040               00000040   2035+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2036+* End of Epilog
                                            2037 * * **** End of Epilogue
                                                                                                                           Page   46 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2038          DROP  12
                                            2039 *
                                            2040 *   DSECT for automatic variables in "LZ4F_compressFrameBound"
                                            2041 *      (FUNCTION #762)
                                            2042 *
00000000                00000000 000000E0   2043 @AUTO#$L$Z4$F_compress$Frame$Bound DSECT
00000000                                    2044          DS    XL168
000000A8                                    2045 $L$Z4$F_compress$Frame$Bound#header$Size#0 DS 8XL1 ; headerSize
000000B0                000000B0 000000A8   2046          ORG   @AUTO#$L$Z4$F_compress$Frame$Bound+168
000000A8                                    2047 $L$Z4$F_compress$Frame$Bound#prefs#0 DS 56XL1 ; prefs
                                            2048 *
0000124C                00000000 00006CE8   2049 @CODE    CSECT
                                            2050 *
                                            2051 *
                                            2052 *
                                            2053 * ....... start of LZ4F_compressFrame_usingCDict
                                            2054 $L$Z4$F_compress$Frame_using$C$Dict ALIAS X'D3E9F4C66D839694979985A2A2C*
                                                                6998194856DA4A2899587C3C48983A3'
0000124C                                    2055 @LNAME782 DS   0H
0000124C 0000001D                           2056          DC    X'0000001D'
00001250 D3E9F4C66D839694                   2057          DC    C'LZ4F_compressFrame_usingCDict'
0000126D 00                                 2058          DC    X'00'
                                            2059 $L$Z4$F_compress$Frame_using$C$Dict DCCPRLG CINDEX=782,BASER=12,FRAME=2*
                                                                88,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME782
                                            2060          macro
                                            2061          dccextrn &m
                                            2062          gblc    &$dccext(1000)
                                            2063          gbla    &$dccexti
                                            2064          lcla    &i
                                            2065 &$dccext(&$dccexti+1) setc    '&m'
                                            2066 &i       seta    1
                                            2067 .loop    aif    (&i gt &$dccexti).around
                                            2068          aif    ('&$dccext(&i)' eq '&m').getout
                                            2069 &i       seta    &i+1
                                            2070          ago     .loop
                                            2071 .around  anop
                                            2072 &$dccexti seta &$dccexti+1
                                            2073          extrn  &m
                                            2074 .getout  anop
                                            2075          mend
00001270                                    2076+$eye0057    ds    0d                                                    02-DCCCA
00001270 C4C3C3                             2077+         dc cl3'DCC'                                                    02-DCCCA
00001273 01                                 2078+         dc xl1'01' format one                                          02-DCCCA
00001274 00000000                           2079+         dc a(0)                                                        02-DCCCA
00001278 00000000000012E2                   2080+         dc ad(@PER_782)                                                02-DCCCA
00001280 0000000000000120                   2081+         dc ad(288)                                                     02-DCCCA
00001288 0000000000000000                   2082+         dc ad(0)                                                       02-DCCCA
00001290 0000000000001000                   2083+         dc ad(4096)                                                    02-DCCCA
00001298 20                                 2084+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001299 03                                 2085+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000129A 03                                 2086+         dc al1(3)                                                      02-DCCCA
0000129B 08                                 2087+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000129C 00                                 2088+         dc bl.8'00000000'                                              02-DCCCA
0000129D 000000                             2089+         dc al3(0)                                                      02-DCCCA
000012A0 000000000000124C                   2090+         dc ad(@LNAME782)                                               02-DCCCA
000012A8                                    2091+         ds 0d                                                          02-DCCCA
000012A8 0000000000001270                   2092+         dc ad($eye0057)                                                02-DCCCA
000012B0 0000000000000000                   2093+         dc ad(0)                                                       02-DCCCA
000012B8                                    2094+         ds    0d                                                       01-DCCPR
                                            2095+         entry $L$Z4$F_compress$Frame_using$C$Dict                      01-DCCPR
000012B8                                    2096+$L$Z4$F_compress$Frame_using$C$Dict ds 0d                               01-DCCPR
000012B8                                    2097+@REGION_782_1 ds 0h                                                     01-DCCPR
000012B8 EBEC D008 0024          00000008   2098+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000012BE E3E0 D088 0004          00000088   2099+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000012C4 E3C0 D090 0004          00000090   2100+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000012CA B904 002E                          2101+         lgr   2,14                copy addr of our savearea            01-DCCPR
000012CE E3B0 C018 0004          00000018   2102+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000012D4 A7EB 0120               00000120   2103+         aghi  14,288              increase by frame size               01-DCCPR
000012D8 E3E0 C020 0021          00000020   2104+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000012DE 4720 B020               00000020   2105+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000012E2                                    2106+@PER_782 ds    0h                                                       01-DCCPR
000012E2 EBDE 2080 0024          00000080   2107+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000012E8 E3C0 2090 0024          00000090   2108+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000012EE B904 00D2                          2109+         lgr   13,2                set real frame pointer               01-DCCPR
000012F2 B904 00CF                          2110+         lgr   12,15               set base reg                         01-DCCPR
                        000012B8            2111+         using @REGION_782_1,12                                         01-DCCPR
000012F6 B904 0081                          2112          LGR   8,1         ; ptr to parm area
                                            2113 * ******* End of Prologue
                                            2114 * *
000012FA E360 8000 0004          00000000   2115          LG    6,0(0,8)    ; cctx
00001300 E350 8010 0004          00000010   2116          LG    5,16(0,8)   ; dstCapacity
00001306 E370 8020 0004          00000020   2117          LG    7,32(0,8)   ; srcSize
                                            2118 * ***       LZ4F_preferences_t prefs;
                                            2119 * ***       LZ4F_compressOptions_t options;
                                            2120 * ***       BYTE* const dstStart = (BYTE*) dstBuffer;
0000130C E330 8008 0004          00000008   2121          LG    3,8(0,8)    ; dstBuffer
                                            2122 * ***       BYTE* dstPtr = dstStart;
00001312 B904 0023                          2123          LGR   2,3         ; dstPtr
                                            2124 * ***       BYTE* const dstEnd = dstStart + dstCapacity;
00001316 4145 3000               00000000   2125          LA    4,0(5,3)
                                            2126 * ***
                                            2127 * ***       if (preferencesPtr!=((void *)0))
0000131A E3F0 8030 0004          00000030   2128          LG    15,48(0,8)  ; preferencesPtr
00001320 B902 001F                          2129          LTGR  1,15
00001324 4780 C0E0               00001398   2130          BE    @L62
                                            2131 * ***           prefs = *preferencesPtr;
00001328 D237 D0A8 F000 000000A8 00000000   2132          MVC   168(56,13),0(15)
0000132E 47F0 C0EA               000013A2   2133          B     @L63
00001338                                    2134          DS    0D
00001338 00000120                           2135 @FRAMESIZE_782 DC F'288'
0000133C 00000000
00001340 0000000000000E60                   2136 @lit_782_38 DC AD($L$Z4$F_optimal$B$S$I$D)
00001348 0000000000000BD0                   2137 @lit_782_39 DC AD($L$Z4$F_get$Block$Size)
00001350 0000000000001140                   2138 @lit_782_40 DC AD($L$Z4$F_compress$Frame$Bound)
                                                                                                                           Page   48 
  Active Usings: @REGION_782_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001358 0000000000000A60                   2139 @lit_782_41 DC AD(err0r)
00001360 0000000000002190                   2140 @lit_782_42 DC AD($L$Z4$F_compress$Begin_using$C$Dict)
00001368 0000000000000738                   2141 @lit_782_43 DC AD($L$Z4$F_is$Error)
00001370 0000000000000000                   2142 @lit_782_46 DC AD(__assert)
00001378 0000000000006DDE                   2143 @lit_782_45 DC AD(@strings@)
00001380 0000000000006CE8                   2144 @lit_782_44 DC AD(@DATA)
00001388 00000000000035B8                   2145 @lit_782_47 DC AD($L$Z4$F_compress$Update)
00001390 0000000000003E58                   2146 @lit_782_52 DC AD($L$Z4$F_compress$End)
                                            2147 * ***       else
00001398                                    2148 @L62     DS    0H
                                            2149 * ***           __memset((&prefs),(0),(sizeof(prefs)));
00001398 41F0 D0A8               000000A8   2150          LA    15,168(0,13)
                                            2151 * setting 56 bytes to 0x00
0000139C D737 F000 F000 00000000 00000000   2152          XC    0(56,15),0(15)
000013A2                                    2153 @L63     DS    0H
                                            2154 * ***       if (prefs.frameInfo.contentSize != 0)
000013A2 E559 D0B8 0000          000000B8   2155          CLGHSI 184(13),0
000013A8 4780 C0FA               000013B2   2156          BE    @L64
                                            2157 * ***           prefs.frameInfo.contentSize = (U64)srcSize;
000013AC E370 D0B8 0024          000000B8   2158          STG   7,184(0,13) ; offset of contentSize in 0000027
000013B2                                    2159 @L64     DS    0H
                                            2160 * ***
                                            2161 * ***       prefs.frameInfo.blockSizeID = LZ4F_optimalBSID(prefs.frame\
                                            2162 * Info.blockSizeID, srcSize);
000013B2 E3F0 D0A8 0014          000000A8   2163          LGF   15,168(0,13)
000013B8 E3F0 D0F0 0024          000000F0   2164          STG   15,240(0,13)
000013BE E370 D0F8 0024          000000F8   2165          STG   7,248(0,13)
000013C4 4110 D0F0               000000F0   2166          LA    1,240(0,13)
000013C8 E3F0 C088 0004          00001340   2167          LG    15,@lit_782_38 ; LZ4F_optimalBSID
000013CE                                    2168 @@gen_label41 DS    0H
000013CE 05EF                               2169          BALR  14,15
000013D0                                    2170 @@gen_label42 DS    0H
000013D0 50F0 D0A8               000000A8   2171          ST    15,168(0,13)
                                            2172 * ***       prefs.autoFlush = 1;
000013D4 E54C D0CC 0001          000000CC   2173          MVHI  204(13),1   ; offset of autoFlush in 0000028
                                            2174 * ***       if (srcSize <= LZ4F_getBlockSize(prefs.frameInfo.blockSize\
                                            2175 * ID))
000013DA E3F0 D0A8 0016          000000A8   2176          LLGF  15,168(0,13)
000013E0 E3F0 D0F0 0024          000000F0   2177          STG   15,240(0,13)
000013E6 4110 D0F0               000000F0   2178          LA    1,240(0,13)
000013EA E3F0 C090 0004          00001348   2179          LG    15,@lit_782_39 ; LZ4F_getBlockSize
000013F0                                    2180 @@gen_label43 DS    0H
000013F0 05EF                               2181          BALR  14,15
000013F2                                    2182 @@gen_label44 DS    0H
000013F2 B921 007F                          2183          CLGR  7,15
000013F6 4720 C148               00001400   2184          BH    @L65
                                            2185 * ***           prefs.frameInfo.blockMode = LZ4F_blockIndependent;
000013FA E54C D0AC 0001          000000AC   2186          MVHI  172(13),1   ; offset of blockMode in 0000027
00001400                                    2187 @L65     DS    0H
                                            2188 * ***
                                            2189 * ***       __memset((&options),(0),(sizeof(options)));
00001400 41F0 D0E0               000000E0   2190          LA    15,224(0,13)
                                                                                                                           Page   49 
  Active Usings: @REGION_782_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2191 * setting 16 bytes to 0x00
00001404 D70F F000 F000 00000000 00000000   2192          XC    0(16,15),0(15)
                                            2193 * ***       options.stableSrc = 1;
0000140A E54C D0E0 0001          000000E0   2194          MVHI  224(13),1
                                            2195 * ***
                                            2196 * ***       if (dstCapacity < LZ4F_compressFrameBound(srcSize, &prefs)\
                                            2197 * )
00001410 E370 D0F0 0024          000000F0   2198          STG   7,240(0,13)
00001416 41F0 D0A8               000000A8   2199          LA    15,168(0,13)
0000141A E3F0 D0F8 0024          000000F8   2200          STG   15,248(0,13)
00001420 4110 D0F0               000000F0   2201          LA    1,240(0,13)
00001424 E3F0 C098 0004          00001350   2202          LG    15,@lit_782_40 ; LZ4F_compressFrameBound
0000142A                                    2203 @@gen_label46 DS    0H
0000142A 05EF                               2204          BALR  14,15
0000142C                                    2205 @@gen_label47 DS    0H
0000142C B921 005F                          2206          CLGR  5,15
00001430 47B0 C192               0000144A   2207          BNL   @L66
                                            2208 * ***           return err0r(LZ4F_ERROR_dstMaxSize_tooSmall);
00001434 E548 D0F0 000B          000000F0   2209          MVGHI 240(13),11
0000143A 4110 D0F0               000000F0   2210          LA    1,240(0,13)
0000143E E3F0 C0A0 0004          00001358   2211          LG    15,@lit_782_41 ; err0r
00001444                                    2212 @@gen_label49 DS    0H
00001444 05EF                               2213          BALR  14,15
00001446                                    2214 @@gen_label50 DS    0H
00001446 47F0 C384               0000163C   2215          B     @ret_lab_782
0000144A                                    2216 @L66     DS    0H
                                            2217 * ***
                                            2218 * ***       { size_t const headerSize = LZ4F_compressBegin_usingCDict(\
                                            2219 * cctx, dstBuffer, dstCapacity, cdict, &prefs);
0000144A E360 D0F0 0024          000000F0   2220          STG   6,240(0,13)
00001450 E330 D0F8 0024          000000F8   2221          STG   3,248(0,13)
00001456 E350 D100 0024          00000100   2222          STG   5,256(0,13)
0000145C E3F0 8028 0004          00000028   2223          LG    15,40(0,8)  ; cdict
00001462 E3F0 D108 0024          00000108   2224          STG   15,264(0,13)
00001468 41F0 D0A8               000000A8   2225          LA    15,168(0,13)
0000146C E3F0 D110 0024          00000110   2226          STG   15,272(0,13)
00001472 4110 D0F0               000000F0   2227          LA    1,240(0,13)
00001476 E3F0 C0A8 0004          00001360   2228          LG    15,@lit_782_42 ; LZ4F_compressBegin_usingCDict
0000147C                                    2229 @@gen_label51 DS    0H
0000147C 05EF                               2230          BALR  14,15
0000147E                                    2231 @@gen_label52 DS    0H
0000147E B904 005F                          2232          LGR   5,15
                                            2233 * ***         if (LZ4F_isError(headerSize)) return headerSize;
00001482 E350 D0F0 0024          000000F0   2234          STG   5,240(0,13)
00001488 4110 D0F0               000000F0   2235          LA    1,240(0,13)
0000148C E390 C0B0 0004          00001368   2236          LG    9,@lit_782_43 ; LZ4F_isError
00001492 B904 00F9                          2237          LGR   15,9
00001496                                    2238 @@gen_label53 DS    0H
00001496 05EF                               2239          BALR  14,15
00001498                                    2240 @@gen_label54 DS    0H
00001498 12FF                               2241          LTR   15,15
0000149A 4780 C1EE               000014A6   2242          BZ    @L67
                                                                                                                           Page   50 
  Active Usings: @REGION_782_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000149E B904 00F5                          2243          LGR   15,5
000014A2 47F0 C384               0000163C   2244          B     @ret_lab_782
000014A6                                    2245 @L67     DS    0H
                                            2246 * ***         dstPtr += headerSize;    }
000014A6 4125 2000               00000000   2247          LA    2,0(5,2)
                                            2248 * ***
                                            2249 * ***       ((dstEnd >= dstPtr) ? (void)0 : __assert(__func__, "C:\\as\
                                            2250 * gkafka\\librdkafka\\src\\lz4frame.c", 407, "dstEnd >= dstPtr"));
000014AA B920 0042                          2251          CGR   4,2
000014AE 47B0 C236               000014EE   2252          BNL   @L69
000014B2                                    2253 @L68     DS    0H
000014B2 E3F0 C0C8 0004          00001380   2254          LG    15,@lit_782_44
000014B8 41F0 F088               00000088   2255          LA    15,136(0,15)
000014BC E3F0 D0F0 0024          000000F0   2256          STG   15,240(0,13)
000014C2 E3F0 C0C0 0004          00001378   2257          LG    15,@lit_782_45
000014C8 4110 F022               00000022   2258          LA    1,34(0,15)
000014CC E310 D0F8 0024          000000F8   2259          STG   1,248(0,13)
000014D2 E548 D100 0197          00000100   2260          MVGHI 256(13),407
000014D8 41F0 F048               00000048   2261          LA    15,72(0,15)
000014DC E3F0 D108 0024          00000108   2262          STG   15,264(0,13)
000014E2 4110 D0F0               000000F0   2263          LA    1,240(0,13)
000014E6 E3F0 C0B8 0004          00001370   2264          LG    15,@lit_782_46 ; __assert
000014EC                                    2265 @@gen_label57 DS    0H
000014EC 05EF                               2266          BALR  14,15
000014EE                                    2267 @@gen_label58 DS    0H
000014EE                                    2268 @L69     DS    0H
                                            2269 * ***       { size_t const cSize = LZ4F_compressUpdate(cctx, dstPtr, (\
                                            2270 * size_t)(dstEnd-dstPtr), srcBuffer, srcSize, &options);
000014EE E360 D0F0 0024          000000F0   2271          STG   6,240(0,13)
000014F4 E320 D0F8 0024          000000F8   2272          STG   2,248(0,13)
000014FA B904 00F4                          2273          LGR   15,4
000014FE B909 00F2                          2274          SGR   15,2
00001502 E3F0 D100 0024          00000100   2275          STG   15,256(0,13)
00001508 E3F0 8018 0004          00000018   2276          LG    15,24(0,8)  ; srcBuffer
0000150E E3F0 D108 0024          00000108   2277          STG   15,264(0,13)
00001514 E370 D110 0024          00000110   2278          STG   7,272(0,13)
0000151A 41F0 D0E0               000000E0   2279          LA    15,224(0,13)
0000151E E3F0 D118 0024          00000118   2280          STG   15,280(0,13)
00001524 4110 D0F0               000000F0   2281          LA    1,240(0,13)
00001528 E3F0 C0D0 0004          00001388   2282          LG    15,@lit_782_47 ; LZ4F_compressUpdate
0000152E                                    2283 @@gen_label59 DS    0H
0000152E 05EF                               2284          BALR  14,15
00001530                                    2285 @@gen_label60 DS    0H
00001530 B904 005F                          2286          LGR   5,15
                                            2287 * ***         if (LZ4F_isError(cSize)) return cSize;
00001534 E350 D0F0 0024          000000F0   2288          STG   5,240(0,13)
0000153A 4110 D0F0               000000F0   2289          LA    1,240(0,13)
0000153E B904 00F9                          2290          LGR   15,9
00001542                                    2291 @@gen_label61 DS    0H
00001542 05EF                               2292          BALR  14,15
00001544                                    2293 @@gen_label62 DS    0H
00001544 12FF                               2294          LTR   15,15
                                                                                                                           Page   51 
  Active Usings: @REGION_782_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001546 4780 C29A               00001552   2295          BZ    @L70
0000154A B904 00F5                          2296          LGR   15,5
0000154E 47F0 C384               0000163C   2297          B     @ret_lab_782
00001552                                    2298 @L70     DS    0H
                                            2299 * ***         dstPtr += cSize; }
00001552 4125 2000               00000000   2300          LA    2,0(5,2)
                                            2301 * ***
                                            2302 * ***       ((dstEnd >= dstPtr) ? (void)0 : __assert(__func__, "C:\\as\
                                            2303 * gkafka\\librdkafka\\src\\lz4frame.c", 412, "dstEnd >= dstPtr"));
00001556 B920 0042                          2304          CGR   4,2
0000155A 47B0 C2E2               0000159A   2305          BNL   @L72
0000155E                                    2306 @L71     DS    0H
0000155E E3F0 C0C8 0004          00001380   2307          LG    15,@lit_782_44
00001564 41F0 F088               00000088   2308          LA    15,136(0,15)
00001568 E3F0 D0F0 0024          000000F0   2309          STG   15,240(0,13)
0000156E E3F0 C0C0 0004          00001378   2310          LG    15,@lit_782_45
00001574 4110 F022               00000022   2311          LA    1,34(0,15)
00001578 E310 D0F8 0024          000000F8   2312          STG   1,248(0,13)
0000157E E548 D100 019C          00000100   2313          MVGHI 256(13),412
00001584 41F0 F048               00000048   2314          LA    15,72(0,15)
00001588 E3F0 D108 0024          00000108   2315          STG   15,264(0,13)
0000158E 4110 D0F0               000000F0   2316          LA    1,240(0,13)
00001592 E3F0 C0B8 0004          00001370   2317          LG    15,@lit_782_46 ; __assert
00001598                                    2318 @@gen_label65 DS    0H
00001598 05EF                               2319          BALR  14,15
0000159A                                    2320 @@gen_label66 DS    0H
0000159A                                    2321 @L72     DS    0H
                                            2322 * ***       { size_t const tailSize = LZ4F_compressEnd(cctx, dstPtr, (\
                                            2323 * size_t)(dstEnd-dstPtr), &options);
0000159A E360 D0F0 0024          000000F0   2324          STG   6,240(0,13)
000015A0 E320 D0F8 0024          000000F8   2325          STG   2,248(0,13)
000015A6 B904 00F4                          2326          LGR   15,4
000015AA B909 00F2                          2327          SGR   15,2
000015AE E3F0 D100 0024          00000100   2328          STG   15,256(0,13)
000015B4 41F0 D0E0               000000E0   2329          LA    15,224(0,13)
000015B8 E3F0 D108 0024          00000108   2330          STG   15,264(0,13)
000015BE 4110 D0F0               000000F0   2331          LA    1,240(0,13)
000015C2 E3F0 C0D8 0004          00001390   2332          LG    15,@lit_782_52 ; LZ4F_compressEnd
000015C8                                    2333 @@gen_label67 DS    0H
000015C8 05EF                               2334          BALR  14,15
000015CA                                    2335 @@gen_label68 DS    0H
000015CA B904 005F                          2336          LGR   5,15
                                            2337 * ***         if (LZ4F_isError(tailSize)) return tailSize;
000015CE E350 D0F0 0024          000000F0   2338          STG   5,240(0,13)
000015D4 4110 D0F0               000000F0   2339          LA    1,240(0,13)
000015D8 B904 00F9                          2340          LGR   15,9
000015DC                                    2341 @@gen_label69 DS    0H
000015DC 05EF                               2342          BALR  14,15
000015DE                                    2343 @@gen_label70 DS    0H
000015DE 12FF                               2344          LTR   15,15
000015E0 4780 C334               000015EC   2345          BZ    @L73
000015E4 B904 00F5                          2346          LGR   15,5
                                                                                                                           Page   52 
  Active Usings: @REGION_782_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000015E8 47F0 C384               0000163C   2347          B     @ret_lab_782
000015EC                                    2348 @L73     DS    0H
                                            2349 * ***         dstPtr += tailSize; }
000015EC 4125 2000               00000000   2350          LA    2,0(5,2)
                                            2351 * ***
                                            2352 * ***       ((dstEnd >= dstStart) ? (void)0 : __assert(__func__, "C:\\\
                                            2353 * asgkafka\\librdkafka\\src\\lz4frame.c", 417, "dstEnd >= dstStart"));
000015F0 B920 0043                          2354          CGR   4,3
000015F4 47B0 C37C               00001634   2355          BNL   @L75
000015F8                                    2356 @L74     DS    0H
000015F8 E3F0 C0C8 0004          00001380   2357          LG    15,@lit_782_44
000015FE 41F0 F088               00000088   2358          LA    15,136(0,15)
00001602 E3F0 D0F0 0024          000000F0   2359          STG   15,240(0,13)
00001608 E3F0 C0C0 0004          00001378   2360          LG    15,@lit_782_45
0000160E 4110 F022               00000022   2361          LA    1,34(0,15)
00001612 E310 D0F8 0024          000000F8   2362          STG   1,248(0,13)
00001618 E548 D100 01A1          00000100   2363          MVGHI 256(13),417
0000161E 41F0 F05A               0000005A   2364          LA    15,90(0,15)
00001622 E3F0 D108 0024          00000108   2365          STG   15,264(0,13)
00001628 4110 D0F0               000000F0   2366          LA    1,240(0,13)
0000162C E3F0 C0B8 0004          00001370   2367          LG    15,@lit_782_46 ; __assert
00001632                                    2368 @@gen_label73 DS    0H
00001632 05EF                               2369          BALR  14,15
00001634                                    2370 @@gen_label74 DS    0H
00001634                                    2371 @L75     DS    0H
                                            2372 * ***       return (size_t)(dstPtr - dstStart);
00001634 B909 0023                          2373          SGR   2,3
00001638 B904 00F2                          2374          LGR   15,2
                                            2375 * ***   }
0000163C                                    2376 @ret_lab_782 DS 0H
                                            2377 * * **** Start of Epilogue
                                            2378          DCCEPIL
0000163C                                    2379+         ds 0h                                                          01-DCCEP
                                            2380+* Epilog
0000163C D707 D088 D088 00000088 00000088   2381+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001642 E3D0 D080 0004          00000080   2382+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001648 E3C0 D090 0004          00000090   2383+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000164E E3B0 C018 0004          00000018   2384+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001654 E3C0 B010 0021          00000010   2385+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000165A E3E0 D008 0004          00000008   2386+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001660 EB1C D020 0004          00000020   2387+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001666 078E                               2388+         bcr 8,14                if same dsab, just return              01-DCCEP
00001668 E3F0 D010 0024          00000010   2389+         stg 15,16(0,13)         save return code                       01-DCCEP
0000166E E300 D018 0024          00000018   2390+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001674 E3F0 D090 0004          00000090   2391+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000167A E3F0 F018 0004          00000018   2392+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001680 47F0 F040               00000040   2393+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2394+* End of Epilog
                                            2395 * * **** End of Epilogue
                                            2396          DROP  12
                                            2397 *
                                            2398 *   DSECT for automatic variables in "LZ4F_compressFrame_usingCDict"
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2399 *      (FUNCTION #782)
                                            2400 *
00000000                00000000 000000F0   2401 @AUTO#$L$Z4$F_compress$Frame_using$C$Dict DSECT
00000000                                    2402          DS    XL168
000000A8                                    2403 $L$Z4$F_compress$Frame_using$C$Dict#tail$Size#3 DS 8XL1 ; tailSize
000000B0                000000B0 000000A8   2404          ORG   @AUTO#$L$Z4$F_compress$Frame_using$C$Dict+168
000000A8                                    2405 $L$Z4$F_compress$Frame_using$C$Dict#c$Size#2 DS 8XL1 ; cSize
000000B0                000000B0 000000A8   2406          ORG   @AUTO#$L$Z4$F_compress$Frame_using$C$Dict+168
000000A8                                    2407 $L$Z4$F_compress$Frame_using$C$Dict#header$Size#1 DS 8XL1 ; headerSize
000000B0                000000B0 000000A8   2408          ORG   @AUTO#$L$Z4$F_compress$Frame_using$C$Dict+168
000000A8                                    2409 $L$Z4$F_compress$Frame_using$C$Dict#prefs#0 DS 56XL1 ; prefs
000000E0                000000E0 000000E0   2410          ORG   @AUTO#$L$Z4$F_compress$Frame_using$C$Dict+224
000000E0                                    2411 $L$Z4$F_compress$Frame_using$C$Dict#options#0 DS 16XL1 ; options
                                            2412 *
00001684                00000000 00006CE8   2413 @CODE    CSECT
                                            2414 *
                                            2415 *
                                            2416 *
                                            2417 * ....... start of LZ4F_compressFrame
                                            2418 $L$Z4$F_compress$Frame ALIAS X'D3E9F4C66D839694979985A2A2C699819485'
00001684                                    2419 @LNAME763 DS   0H
00001684 00000012                           2420          DC    X'00000012'
00001688 D3E9F4C66D839694                   2421          DC    C'LZ4F_compressFrame'
0000169A 00                                 2422          DC    X'00'
                                            2423 $L$Z4$F_compress$Frame DCCPRLG CINDEX=763,BASER=12,FRAME=16968,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME763
                                            2424          macro
                                            2425          dccextrn &m
                                            2426          gblc    &$dccext(1000)
                                            2427          gbla    &$dccexti
                                            2428          lcla    &i
                                            2429 &$dccext(&$dccexti+1) setc    '&m'
                                            2430 &i       seta    1
                                            2431 .loop    aif    (&i gt &$dccexti).around
                                            2432          aif    ('&$dccext(&i)' eq '&m').getout
                                            2433 &i       seta    &i+1
                                            2434          ago     .loop
                                            2435 .around  anop
                                            2436 &$dccexti seta &$dccexti+1
                                            2437          extrn  &m
                                            2438 .getout  anop
                                            2439          mend
000016A0                                    2440+$eye0060    ds    0d                                                    02-DCCCA
000016A0 C4C3C3                             2441+         dc cl3'DCC'                                                    02-DCCCA
000016A3 01                                 2442+         dc xl1'01' format one                                          02-DCCCA
000016A4 00000000                           2443+         dc a(0)                                                        02-DCCCA
000016A8 0000000000001712                   2444+         dc ad(@PER_763)                                                02-DCCCA
000016B0 0000000000004248                   2445+         dc ad(16968)                                                   02-DCCCA
000016B8 0000000000000000                   2446+         dc ad(0)                                                       02-DCCCA
000016C0 0000000000001000                   2447+         dc ad(4096)                                                    02-DCCCA
000016C8 20                                 2448+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000016C9 03                                 2449+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000016CA 03                                 2450+         dc al1(3)                                                      02-DCCCA
000016CB 08                                 2451+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000016CC 00                                 2452+         dc bl.8'00000000'                                              02-DCCCA
000016CD 000000                             2453+         dc al3(0)                                                      02-DCCCA
000016D0 0000000000001684                   2454+         dc ad(@LNAME763)                                               02-DCCCA
000016D8                                    2455+         ds 0d                                                          02-DCCCA
000016D8 00000000000016A0                   2456+         dc ad($eye0060)                                                02-DCCCA
000016E0 0000000000000000                   2457+         dc ad(0)                                                       02-DCCCA
000016E8                                    2458+         ds    0d                                                       01-DCCPR
                                            2459+         entry $L$Z4$F_compress$Frame                                   01-DCCPR
000016E8                                    2460+$L$Z4$F_compress$Frame ds 0d                                            01-DCCPR
000016E8                                    2461+@REGION_763_1 ds 0h                                                     01-DCCPR
000016E8 EBEC D008 0024          00000008   2462+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000016EE E3E0 D088 0004          00000088   2463+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000016F4 E3C0 D090 0004          00000090   2464+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000016FA B904 002E                          2465+         lgr   2,14                copy addr of our savearea            01-DCCPR
000016FE E3B0 C018 0004          00000018   2466+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001704 A7EB 4248               00004248   2467+         aghi  14,16968            increase by frame size               01-DCCPR
00001708 E3E0 C020 0021          00000020   2468+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000170E 4720 B020               00000020   2469+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001712                                    2470+@PER_763 ds    0h                                                       01-DCCPR
00001712 EBDE 2080 0024          00000080   2471+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001718 E3C0 2090 0024          00000090   2472+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000171E B904 00D2                          2473+         lgr   13,2                set real frame pointer               01-DCCPR
00001722 B904 00CF                          2474+         lgr   12,15               set base reg                         01-DCCPR
                        000016E8            2475+         using @REGION_763_1,12                                         01-DCCPR
00001726 B904 0041                          2476          LGR   4,1         ; ptr to parm area
                                            2477 * ******* End of Prologue
                                            2478 * *
0000172A E330 4020 0004          00000020   2479          LG    3,32(0,4)   ; preferencesPtr
                                            2480 * ***       size_t result;
                                            2481 * ***   # 439 "C:\asgkafka\librdkafka\src\lz4frame.c"
                                            2482 * ***       LZ4F_cctx_t cctx;
                                            2483 * ***       LZ4_stream_t lz4ctx;
                                            2484 * ***       LZ4F_cctx_t *cctxPtr = &cctx;
00001730 4150 D138               00000138   2485          LA    5,312(0,13)
                                            2486 * ***
                                            2487 * ***       {};
                                            2488 * ***       __memset((&cctx),(0),(sizeof(cctx)));
00001734 41F0 D138               00000138   2489          LA    15,312(0,13)
                                            2490 * setting 184 bytes to 0x00
00001738 D7B7 F000 F000 00000000 00000000   2491          XC    0(184,15),0(15)
                                            2492 * ***       cctx.version = 100;
0000173E E54C D170 0064          00000170   2493          MVHI  368(13),100 ; offset of version in LZ4F_cctx_s
                                            2494 * ***       cctx.maxBufferSize = 5 *(1<<20);
00001744 C0FF 0050 0000                     2495          LLILF 15,X'00500000' ; 5242880
0000174A E3F0 D188 0024          00000188   2496          STG   15,392(0,13) ; offset of maxBufferSize in LZ4F_cctx_s
                                            2497 * ***       if (preferencesPtr == ((void *)0) ||
00001750 B902 00F3                          2498          LTGR  15,3
00001754 4780 C07A               00001762   2499          BE    @L77
                                            2500 * ***           preferencesPtr->compressionLevel < 3)
00001758 E55C 3020 0003          00000020   2501          CHSI  32(3),3
                                                                                                                           Page   55 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000175E 47B0 C0B4               0000179C   2502          BNL   @L76
00001762                                    2503 @L77     DS    0H
                                            2504 * ***       {
                                            2505 * ***           LZ4_initStream(&lz4ctx, sizeof(lz4ctx));
00001762 41F0 D1F0               000001F0   2506          LA    15,496(0,13)
00001766 B904 001D                          2507          LGR   1,13
0000176A A71B 4000               00004000   2508          AGHI  1,16384
0000176E E3F0 1210 0024          00000210   2509          STG   15,528(0,1)
00001774 E548 1218 4020          00000218   2510          MVGHI 536(1),16416
0000177A 4110 1210               00000210   2511          LA    1,528(0,1)
0000177E E3F0 C190 0004          00001878   2512          LG    15,@lit_763_59 ; LZ4_initStream
00001784                                    2513 @@gen_label77 DS    0H
00001784 05EF                               2514          BALR  14,15
00001786                                    2515 @@gen_label78 DS    0H
                                            2516 * ***           cctxPtr->lz4CtxPtr = &lz4ctx;
00001786 41F0 D1F0               000001F0   2517          LA    15,496(0,13)
0000178A E3F0 50A8 0024          000000A8   2518          STG   15,168(0,5) ; offset of lz4CtxPtr in LZ4F_cctx_s
                                            2519 * ***           cctxPtr->lz4CtxAlloc = 1;
00001790 E544 50B0 0001          000000B0   2520          MVHHI 176(5),1    ; offset of lz4CtxAlloc in LZ4F_cctx_s
                                            2521 * ***           cctxPtr->lz4CtxState = 1;
00001796 E544 50B2 0001          000000B2   2522          MVHHI 178(5),1    ; offset of lz4CtxState in LZ4F_cctx_s
                                            2523 * ***       }
0000179C                                    2524 @L76     DS    0H
                                            2525 * ***
                                            2526 * ***
                                            2527 * ***       result = LZ4F_compressFrame_usingCDict(cctxPtr, dstBuffer,\
                                            2528 *  dstCapacity,
                                            2529 * ***                                              srcBuffer, srcSize,
                                            2530 * ***                                              ((void *)0), prefer\
                                            2531 * encesPtr);
0000179C B904 002D                          2532          LGR   2,13
000017A0 A72B 4000               00004000   2533          AGHI  2,16384
000017A4 E350 2210 0024          00000210   2534          STG   5,528(0,2)
000017AA E3F0 4000 0004          00000000   2535          LG    15,0(0,4)   ; dstBuffer
000017B0 E3F0 2218 0024          00000218   2536          STG   15,536(0,2)
000017B6 E3F0 4008 0004          00000008   2537          LG    15,8(0,4)   ; dstCapacity
000017BC E3F0 2220 0024          00000220   2538          STG   15,544(0,2)
000017C2 E3F0 4010 0004          00000010   2539          LG    15,16(0,4)  ; srcBuffer
000017C8 E3F0 2228 0024          00000228   2540          STG   15,552(0,2)
000017CE E3F0 4018 0004          00000018   2541          LG    15,24(0,4)  ; srcSize
000017D4 E3F0 2230 0024          00000230   2542          STG   15,560(0,2)
000017DA D707 2238 2238 00000238 00000238   2543          XC    568(8,2),568(2)
000017E0 E330 2240 0024          00000240   2544          STG   3,576(0,2)
000017E6 4110 2210               00000210   2545          LA    1,528(0,2)
000017EA E3F0 C198 0004          00001880   2546          LG    15,@lit_763_60 ; LZ4F_compressFrame_usingCDict
000017F0                                    2547 @@gen_label79 DS    0H
000017F0 05EF                               2548          BALR  14,15
000017F2                                    2549 @@gen_label80 DS    0H
000017F2 B904 004F                          2550          LGR   4,15
                                            2551 * ***
                                            2552 * ***
                                            2553 * ***
                                                                                                                           Page   56 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2554 * ***
                                            2555 * ***       if (preferencesPtr != ((void *)0) &&
000017F6 B902 00F3                          2556          LTGR  15,3
000017FA 4780 C138               00001820   2557          BE    @L78
                                            2558 * ***           preferencesPtr->compressionLevel >= 3)
000017FE E55C 3020 0003          00000020   2559          CHSI  32(3),3
00001804 4740 C138               00001820   2560          BL    @L78
                                            2561 * ***       {
                                            2562 * ***           rd_free(cctxPtr->lz4CtxPtr);
00001808 E3F0 50A8 0004          000000A8   2563          LG    15,168(0,5)
0000180E E3F0 2210 0024          00000210   2564          STG   15,528(0,2)
00001814 4110 2210               00000210   2565          LA    1,528(0,2)
00001818 E3F0 C1A0 0004          00001888   2566          LG    15,@lit_763_61 ; rd_free
0000181E                                    2567 @@gen_label83 DS    0H
0000181E 05EF                               2568          BALR  14,15
00001820                                    2569 @@gen_label84 DS    0H
                                            2570 * ***       }
00001820                                    2571 @L78     DS    0H
                                            2572 * ***
                                            2573 * ***       return result;
00001820 B904 00F4                          2574          LGR   15,4
                                            2575 * ***   }
                                            2576 * * **** Start of Epilogue
                                            2577          DCCEPIL
00001824                                    2578+         ds 0h                                                          01-DCCEP
                                            2579+* Epilog
00001824 D707 D088 D088 00000088 00000088   2580+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000182A E3D0 D080 0004          00000080   2581+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001830 E3C0 D090 0004          00000090   2582+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001836 E3B0 C018 0004          00000018   2583+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000183C E3C0 B010 0021          00000010   2584+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001842 E3E0 D008 0004          00000008   2585+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001848 EB1C D020 0004          00000020   2586+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000184E 078E                               2587+         bcr 8,14                if same dsab, just return              01-DCCEP
00001850 E3F0 D010 0024          00000010   2588+         stg 15,16(0,13)         save return code                       01-DCCEP
00001856 E300 D018 0024          00000018   2589+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000185C E3F0 D090 0004          00000090   2590+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001862 E3F0 F018 0004          00000018   2591+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001868 47F0 F040               00000040   2592+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2593+* End of Epilog
                                            2594 * * **** End of Epilogue
00001870                                    2595          DS    0D
00001870 00004248                           2596 @FRAMESIZE_763 DC F'16968'
00001874 00000000
00001878 0000000000000000                   2597 @lit_763_59 DC AD($L$Z4_init$Stream)
00001880 00000000000012B8                   2598 @lit_763_60 DC AD($L$Z4$F_compress$Frame_using$C$Dict)
00001888 0000000000000330                   2599 @lit_763_61 DC AD(rd_free)
                                            2600          DROP  12
                                            2601 *
                                            2602 *   DSECT for automatic variables in "LZ4F_compressFrame"
                                            2603 *      (FUNCTION #763)
                                            2604 *
                                                                                                                           Page   57 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                00000000 00004210   2605 @AUTO#$L$Z4$F_compress$Frame DSECT
00000000                                    2606          DS    XL312
00000138                                    2607 $L$Z4$F_compress$Frame#cctx#0 DS 184XL1 ; cctx
000001F0                000001F0 00000138   2608          ORG   @AUTO#$L$Z4$F_compress$Frame+312
00000138                                    2609 $L$Z4$F_compress$Frame#result#0 DS 8XL1 ; result
00000140                00000140 000001F0   2610          ORG   @AUTO#$L$Z4$F_compress$Frame+496
000001F0                                    2611 $L$Z4$F_compress$Frame#lz4ctx#0 DS 16416XL1 ; lz4ctx
                                            2612 *
00001890                00000000 00006CE8   2613 @CODE    CSECT
                                            2614 *
                                            2615 *
                                            2616 *
                                            2617 * ....... start of LZ4F_createCDict
                                            2618 $L$Z4$F_create$C$Dict ALIAS X'D3E9F4C66D83998581A385C3C48983A3'
00001890                                    2619 @LNAME780 DS   0H
00001890 00000010                           2620          DC    X'00000010'
00001894 D3E9F4C66D839985                   2621          DC    C'LZ4F_createCDict'
000018A4 00                                 2622          DC    X'00'
                                            2623 $L$Z4$F_create$C$Dict DCCPRLG CINDEX=780,BASER=12,FRAME=200,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME780
                                            2624          macro
                                            2625          dccextrn &m
                                            2626          gblc    &$dccext(1000)
                                            2627          gbla    &$dccexti
                                            2628          lcla    &i
                                            2629 &$dccext(&$dccexti+1) setc    '&m'
                                            2630 &i       seta    1
                                            2631 .loop    aif    (&i gt &$dccexti).around
                                            2632          aif    ('&$dccext(&i)' eq '&m').getout
                                            2633 &i       seta    &i+1
                                            2634          ago     .loop
                                            2635 .around  anop
                                            2636 &$dccexti seta &$dccexti+1
                                            2637          extrn  &m
                                            2638 .getout  anop
                                            2639          mend
000018A8                                    2640+$eye0063    ds    0d                                                    02-DCCCA
000018A8 C4C3C3                             2641+         dc cl3'DCC'                                                    02-DCCCA
000018AB 01                                 2642+         dc xl1'01' format one                                          02-DCCCA
000018AC 00000000                           2643+         dc a(0)                                                        02-DCCCA
000018B0 000000000000191A                   2644+         dc ad(@PER_780)                                                02-DCCCA
000018B8 00000000000000C8                   2645+         dc ad(200)                                                     02-DCCCA
000018C0 0000000000000000                   2646+         dc ad(0)                                                       02-DCCCA
000018C8 0000000000001000                   2647+         dc ad(4096)                                                    02-DCCCA
000018D0 20                                 2648+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000018D1 03                                 2649+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000018D2 03                                 2650+         dc al1(3)                                                      02-DCCCA
000018D3 08                                 2651+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000018D4 00                                 2652+         dc bl.8'00000000'                                              02-DCCCA
000018D5 000000                             2653+         dc al3(0)                                                      02-DCCCA
000018D8 0000000000001890                   2654+         dc ad(@LNAME780)                                               02-DCCCA
000018E0                                    2655+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000018E0 00000000000018A8                   2656+         dc ad($eye0063)                                                02-DCCCA
000018E8 0000000000000000                   2657+         dc ad(0)                                                       02-DCCCA
000018F0                                    2658+         ds    0d                                                       01-DCCPR
                                            2659+         entry $L$Z4$F_create$C$Dict                                    01-DCCPR
000018F0                                    2660+$L$Z4$F_create$C$Dict ds 0d                                             01-DCCPR
000018F0                                    2661+@REGION_780_1 ds 0h                                                     01-DCCPR
000018F0 EBEC D008 0024          00000008   2662+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000018F6 E3E0 D088 0004          00000088   2663+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000018FC E3C0 D090 0004          00000090   2664+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001902 B904 002E                          2665+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001906 E3B0 C018 0004          00000018   2666+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000190C A7EB 00C8               000000C8   2667+         aghi  14,200              increase by frame size               01-DCCPR
00001910 E3E0 C020 0021          00000020   2668+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001916 4720 B020               00000020   2669+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000191A                                    2670+@PER_780 ds    0h                                                       01-DCCPR
0000191A EBDE 2080 0024          00000080   2671+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001920 E3C0 2090 0024          00000090   2672+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001926 B904 00D2                          2673+         lgr   13,2                set real frame pointer               01-DCCPR
0000192A B904 00CF                          2674+         lgr   12,15               set base reg                         01-DCCPR
                        000018F0            2675+         using @REGION_780_1,12                                         01-DCCPR
                                            2676 * ******* End of Prologue
                                            2677 * *
                                            2678 * ***       const char* dictStart = (const char*)dictBuffer;
0000192E E320 1008 0004          00000008   2679          LG    2,8(0,1)    ; dictSize
00001934 E330 1000 0004          00000000   2680          LG    3,0(0,1)    ; dictBuffer
                                            2681 * ***       LZ4F_CDict* cdict = (LZ4F_CDict*) rd_malloc(sizeof(*cdict)\
                                            2682 * );
0000193A E548 D0B0 0018          000000B0   2683          MVGHI 176(13),24
00001940 4110 D0B0               000000B0   2684          LA    1,176(0,13)
00001944 E350 C080 0004          00001970   2685          LG    5,@lit_780_63 ; rd_malloc
0000194A B904 00F5                          2686          LGR   15,5
0000194E                                    2687 @@gen_label85 DS    0H
0000194E 05EF                               2688          BALR  14,15
00001950                                    2689 @@gen_label86 DS    0H
00001950 B904 004F                          2690          LGR   4,15
                                            2691 * ***       {};
                                            2692 * ***       if (!cdict) return ((void *)0);
00001954 B902 00F4                          2693          LTGR  15,4
00001958 4770 C0C0               000019B0   2694          BNZ   @L79
0000195C A7F9 0000               00000000   2695          LGHI  15,0        ; 0
00001960 47F0 C1FA               00001AEA   2696          B     @ret_lab_780
00001968                                    2697          DS    0D
00001968 000000C8                           2698 @FRAMESIZE_780 DC F'200'
0000196C 00000000
00001970 00000000000001C8                   2699 @lit_780_63 DC AD(rd_malloc)
00001978 0000000000000000                   2700 @lit_780_67 DC AD($L$Z4_create$Stream)
00001980 0000000000000000                   2701 @lit_780_68 DC AD($L$Z4_create$Stream$H$C)
00001988 0000000000001B90                   2702 @lit_780_69 DC AD($L$Z4$F_free$C$Dict)
00001990 D200 1000 3000 00000000 00000000   2703 @lit_780_71          MVC 0(1,1),0(3)
00001996 0000
00001998 0000000000000000                   2704 @lit_780_72 DC AD($L$Z4_load$Dict)
000019A0 0000000000000000                   2705 @lit_780_73 DC AD($L$Z4_set$Compression$Level)
                                                                                                                           Page   59 
  Active Usings: @REGION_780_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000019A8 0000000000000000                   2706 @lit_780_74 DC AD($L$Z4_load$Dict$H$C)
000019B0                                    2707 @L79     DS    0H
                                            2708 * ***       if (dictSize > 64 *(1<<10)) {
000019B0 C22E 0001 0000                     2709          CLGFI 2,X'00010000'
000019B6 47D0 C0DA               000019CA   2710          BNH   @L80
                                            2711 * ***           dictStart += dictSize - 64 *(1<<10);
000019BA C224 0001 0000                     2712          SLGFI 2,X'00010000'
000019C0 4132 3000               00000000   2713          LA    3,0(2,3)
                                            2714 * ***           dictSize = 64 *(1<<10);
000019C4 C02F 0001 0000                     2715          LLILF 2,X'00010000' ; 65536
                                            2716 * ***       }
000019CA                                    2717 @L80     DS    0H
                                            2718 * ***       cdict->dictContent = rd_malloc(dictSize);
000019CA E320 D0B0 0024          000000B0   2719          STG   2,176(0,13)
000019D0 4110 D0B0               000000B0   2720          LA    1,176(0,13)
000019D4 B904 00F5                          2721          LGR   15,5
000019D8                                    2722 @@gen_label89 DS    0H
000019D8 05EF                               2723          BALR  14,15
000019DA                                    2724 @@gen_label90 DS    0H
000019DA E3F0 4000 0024          00000000   2725          STG   15,0(0,4)
                                            2726 * ***       cdict->fastCtx = LZ4_createStream();
000019E0 E3F0 C088 0004          00001978   2727          LG    15,@lit_780_67 ; LZ4_createStream
000019E6                                    2728 @@gen_label91 DS    0H
000019E6 05EF                               2729          BALR  14,15
000019E8                                    2730 @@gen_label92 DS    0H
000019E8 E3F0 4008 0024          00000008   2731          STG   15,8(0,4)
                                            2732 * ***       cdict->HCCtx = LZ4_createStreamHC();
000019EE E3F0 C090 0004          00001980   2733          LG    15,@lit_780_68 ; LZ4_createStreamHC
000019F4                                    2734 @@gen_label93 DS    0H
000019F4 05EF                               2735          BALR  14,15
000019F6                                    2736 @@gen_label94 DS    0H
000019F6 E3F0 4010 0024          00000010   2737          STG   15,16(0,4)
                                            2738 * ***       if (!cdict->dictContent || !cdict->fastCtx || !cdict->HCCt\
                                            2739 * x) {
000019FC E3F0 4000 0002          00000000   2740          LTG   15,0(0,4)   ; cdict
00001A02 4780 C12A               00001A1A   2741          BZ    @L83
00001A06 E3F0 4008 0002          00000008   2742          LTG   15,8(0,4)   ; offset of fastCtx in LZ4F_CDict_s
00001A0C 4780 C12A               00001A1A   2743          BZ    @L83
00001A10                                    2744 @L81     DS    0H
00001A10 E3F0 4010 0002          00000010   2745          LTG   15,16(0,4)  ; offset of HCCtx in LZ4F_CDict_s
00001A16 4770 C144               00001A34   2746          BNZ   @L82
00001A1A                                    2747 @L83     DS    0H
                                            2748 * ***           LZ4F_freeCDict(cdict);
00001A1A E340 D0B0 0024          000000B0   2749          STG   4,176(0,13)
00001A20 4110 D0B0               000000B0   2750          LA    1,176(0,13)
00001A24 E3F0 C098 0004          00001988   2751          LG    15,@lit_780_69 ; LZ4F_freeCDict
00001A2A                                    2752 @@gen_label98 DS    0H
00001A2A 05EF                               2753          BALR  14,15
00001A2C                                    2754 @@gen_label99 DS    0H
                                            2755 * ***           return ((void *)0);
00001A2C A7F9 0000               00000000   2756          LGHI  15,0        ; 0
00001A30 47F0 C1FA               00001AEA   2757          B     @ret_lab_780
                                                                                                                           Page   60 
  Active Usings: @REGION_780_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2758 * ***       }
00001A34                                    2759 @L82     DS    0H
                                            2760 * ***       __memcpy(cdict->dictContent,dictStart,dictSize);
00001A34 E310 4000 0004          00000000   2761          LG    1,0(0,4)
00001A3A B902 00F2                          2762          LTGR  15,2
00001A3E 4780 C17C               00001A6C   2763          BZ    @@gen_label102
00001A42 A7FB FFFF               0000FFFF   2764          AGHI  15,-1
00001A46 EB5F 0008 000A          00000008   2765          SRAG  5,15,8(0)
00001A4C B902 0055                          2766          LTGR  5,5
00001A50 4780 C178               00001A68   2767          BZ    @@gen_label101
00001A54                                    2768 @@gen_label100 DS 0H
00001A54 D2FF 1000 3000 00000000 00000000   2769          MVC   0(256,1),0(3)
00001A5A 4110 1100               00000100   2770          LA    1,256(0,1)
00001A5E 4130 3100               00000100   2771          LA    3,256(0,3)
00001A62 E350 C164 0046          00001A54   2772          BCTG  5,@@gen_label100
00001A68                                    2773 @@gen_label101 DS 0H
00001A68 44F0 C0A0               00001990   2774          EX    15,@lit_780_71
00001A6C                                    2775 @@gen_label102 DS 0H
                                            2776 * ***       LZ4_loadDict (cdict->fastCtx, (const char*)cdict->dictCont\
                                            2777 * ent, (int)dictSize);
00001A6C E3F0 4008 0004          00000008   2778          LG    15,8(0,4)
00001A72 E3F0 D0B0 0024          000000B0   2779          STG   15,176(0,13)
00001A78 E3F0 4000 0004          00000000   2780          LG    15,0(0,4)
00001A7E E3F0 D0B8 0024          000000B8   2781          STG   15,184(0,13)
00001A84 B914 00F2                          2782          LGFR  15,2
00001A88 E3F0 D0C0 0024          000000C0   2783          STG   15,192(0,13)
00001A8E 4110 D0B0               000000B0   2784          LA    1,176(0,13)
00001A92 E3F0 C0A8 0004          00001998   2785          LG    15,@lit_780_72 ; LZ4_loadDict
00001A98                                    2786 @@gen_label103 DS    0H
00001A98 05EF                               2787          BALR  14,15
00001A9A                                    2788 @@gen_label104 DS    0H
                                            2789 * ***       LZ4_setCompressionLevel(cdict->HCCtx, 9);
00001A9A E3F0 4010 0004          00000010   2790          LG    15,16(0,4)
00001AA0 E3F0 D0B0 0024          000000B0   2791          STG   15,176(0,13)
00001AA6 E548 D0B8 0009          000000B8   2792          MVGHI 184(13),9
00001AAC 4110 D0B0               000000B0   2793          LA    1,176(0,13)
00001AB0 E3F0 C0B0 0004          000019A0   2794          LG    15,@lit_780_73 ; LZ4_setCompressionLevel
00001AB6                                    2795 @@gen_label105 DS    0H
00001AB6 05EF                               2796          BALR  14,15
00001AB8                                    2797 @@gen_label106 DS    0H
                                            2798 * ***       LZ4_loadDictHC(cdict->HCCtx, (const char*)cdict->dictConte\
                                            2799 * nt, (int)dictSize);
00001AB8 E3F0 4010 0004          00000010   2800          LG    15,16(0,4)
00001ABE E3F0 D0B0 0024          000000B0   2801          STG   15,176(0,13)
00001AC4 E3F0 4000 0004          00000000   2802          LG    15,0(0,4)
00001ACA E3F0 D0B8 0024          000000B8   2803          STG   15,184(0,13)
00001AD0 B914 00F2                          2804          LGFR  15,2
00001AD4 E3F0 D0C0 0024          000000C0   2805          STG   15,192(0,13)
00001ADA 4110 D0B0               000000B0   2806          LA    1,176(0,13)
00001ADE E3F0 C0B8 0004          000019A8   2807          LG    15,@lit_780_74 ; LZ4_loadDictHC
00001AE4                                    2808 @@gen_label107 DS    0H
00001AE4 05EF                               2809          BALR  14,15
                                                                                                                           Page   61 
  Active Usings: @REGION_780_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001AE6                                    2810 @@gen_label108 DS    0H
                                            2811 * ***       return cdict;
00001AE6 B904 00F4                          2812          LGR   15,4
                                            2813 * ***   }
00001AEA                                    2814 @ret_lab_780 DS 0H
                                            2815 * * **** Start of Epilogue
                                            2816          DCCEPIL
00001AEA                                    2817+         ds 0h                                                          01-DCCEP
                                            2818+* Epilog
00001AEA D707 D088 D088 00000088 00000088   2819+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001AF0 E3D0 D080 0004          00000080   2820+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001AF6 E3C0 D090 0004          00000090   2821+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001AFC E3B0 C018 0004          00000018   2822+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B02 E3C0 B010 0021          00000010   2823+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B08 E3E0 D008 0004          00000008   2824+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B0E EB1C D020 0004          00000020   2825+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B14 078E                               2826+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B16 E3F0 D010 0024          00000010   2827+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B1C E300 D018 0024          00000018   2828+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B22 E3F0 D090 0004          00000090   2829+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001B28 E3F0 F018 0004          00000018   2830+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001B2E 47F0 F040               00000040   2831+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2832+* End of Epilog
                                            2833 * * **** End of Epilogue
                                            2834          DROP  12
                                            2835 *
                                            2836 *   DSECT for automatic variables in "LZ4F_createCDict"
                                            2837 *      (FUNCTION #780)
                                            2838 *
00000000                00000000 000000A8   2839 @AUTO#$L$Z4$F_create$C$Dict DSECT
00000000                                    2840          DS    XL168
                                            2841 *
00001B32                00000000 00006CE8   2842 @CODE    CSECT
                                            2843 *
                                            2844 *
                                            2845 *
                                            2846 * ....... start of LZ4F_freeCDict
                                            2847 $L$Z4$F_free$C$Dict ALIAS X'D3E9F4C66D86998585C3C48983A3'
00001B32                                    2848 @LNAME781 DS   0H
00001B32 0000000E                           2849          DC    X'0000000E'
00001B36 D3E9F4C66D869985                   2850          DC    C'LZ4F_freeCDict'
00001B44 00                                 2851          DC    X'00'
                                            2852 $L$Z4$F_free$C$Dict DCCPRLG CINDEX=781,BASER=12,FRAME=176,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME781
                                            2853          macro
                                            2854          dccextrn &m
                                            2855          gblc    &$dccext(1000)
                                            2856          gbla    &$dccexti
                                            2857          lcla    &i
                                            2858 &$dccext(&$dccexti+1) setc    '&m'
                                            2859 &i       seta    1
                                            2860 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   62 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2861          aif    ('&$dccext(&i)' eq '&m').getout
                                            2862 &i       seta    &i+1
                                            2863          ago     .loop
                                            2864 .around  anop
                                            2865 &$dccexti seta &$dccexti+1
                                            2866          extrn  &m
                                            2867 .getout  anop
                                            2868          mend
00001B48                                    2869+$eye0066    ds    0d                                                    02-DCCCA
00001B48 C4C3C3                             2870+         dc cl3'DCC'                                                    02-DCCCA
00001B4B 01                                 2871+         dc xl1'01' format one                                          02-DCCCA
00001B4C 00000000                           2872+         dc a(0)                                                        02-DCCCA
00001B50 0000000000001BBA                   2873+         dc ad(@PER_781)                                                02-DCCCA
00001B58 00000000000000B0                   2874+         dc ad(176)                                                     02-DCCCA
00001B60 0000000000000000                   2875+         dc ad(0)                                                       02-DCCCA
00001B68 0000000000001000                   2876+         dc ad(4096)                                                    02-DCCCA
00001B70 20                                 2877+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001B71 03                                 2878+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001B72 03                                 2879+         dc al1(3)                                                      02-DCCCA
00001B73 08                                 2880+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001B74 00                                 2881+         dc bl.8'00000000'                                              02-DCCCA
00001B75 000000                             2882+         dc al3(0)                                                      02-DCCCA
00001B78 0000000000001B32                   2883+         dc ad(@LNAME781)                                               02-DCCCA
00001B80                                    2884+         ds 0d                                                          02-DCCCA
00001B80 0000000000001B48                   2885+         dc ad($eye0066)                                                02-DCCCA
00001B88 0000000000000000                   2886+         dc ad(0)                                                       02-DCCCA
00001B90                                    2887+         ds    0d                                                       01-DCCPR
                                            2888+         entry $L$Z4$F_free$C$Dict                                      01-DCCPR
00001B90                                    2889+$L$Z4$F_free$C$Dict ds 0d                                               01-DCCPR
00001B90                                    2890+@REGION_781_1 ds 0h                                                     01-DCCPR
00001B90 EBEC D008 0024          00000008   2891+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001B96 E3E0 D088 0004          00000088   2892+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001B9C E3C0 D090 0004          00000090   2893+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001BA2 B904 002E                          2894+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001BA6 E3B0 C018 0004          00000018   2895+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001BAC A7EB 00B0               000000B0   2896+         aghi  14,176              increase by frame size               01-DCCPR
00001BB0 E3E0 C020 0021          00000020   2897+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001BB6 4720 B020               00000020   2898+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001BBA                                    2899+@PER_781 ds    0h                                                       01-DCCPR
00001BBA EBDE 2080 0024          00000080   2900+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001BC0 E3C0 2090 0024          00000090   2901+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001BC6 B904 00D2                          2902+         lgr   13,2                set real frame pointer               01-DCCPR
00001BCA B904 00CF                          2903+         lgr   12,15               set base reg                         01-DCCPR
                        00001B90            2904+         using @REGION_781_1,12                                         01-DCCPR
                                            2905 * ******* End of Prologue
                                            2906 * *
                                            2907 * ***       if (cdict==((void *)0)) return;
00001BCE E320 1000 0004          00000000   2908          LG    2,0(0,1)    ; cdict
00001BD4 B902 00F2                          2909          LTGR  15,2
00001BD8 4780 C0A8               00001C38   2910          BE    @ret_lab_781
00001BDC                                    2911 @L84     DS    0H
                                            2912 * ***       rd_free(cdict->dictContent);
                                                                                                                           Page   63 
  Active Usings: @REGION_781_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001BDC E3F0 2000 0004          00000000   2913          LG    15,0(0,2)
00001BE2 E3F0 D0A8 0024          000000A8   2914          STG   15,168(0,13)
00001BE8 4110 D0A8               000000A8   2915          LA    1,168(0,13)
00001BEC E330 C0F8 0004          00001C88   2916          LG    3,@lit_781_76 ; rd_free
00001BF2 B904 00F3                          2917          LGR   15,3
00001BF6                                    2918 @@gen_label110 DS    0H
00001BF6 05EF                               2919          BALR  14,15
00001BF8                                    2920 @@gen_label111 DS    0H
                                            2921 * ***       LZ4_freeStream(cdict->fastCtx);
00001BF8 E3F0 2008 0004          00000008   2922          LG    15,8(0,2)
00001BFE E3F0 D0A8 0024          000000A8   2923          STG   15,168(0,13)
00001C04 4110 D0A8               000000A8   2924          LA    1,168(0,13)
00001C08 E3F0 C100 0004          00001C90   2925          LG    15,@lit_781_77 ; LZ4_freeStream
00001C0E                                    2926 @@gen_label112 DS    0H
00001C0E 05EF                               2927          BALR  14,15
00001C10                                    2928 @@gen_label113 DS    0H
                                            2929 * ***       LZ4_freeStreamHC(cdict->HCCtx);
00001C10 E3F0 2010 0004          00000010   2930          LG    15,16(0,2)
00001C16 E3F0 D0A8 0024          000000A8   2931          STG   15,168(0,13)
00001C1C 4110 D0A8               000000A8   2932          LA    1,168(0,13)
00001C20 E3F0 C108 0004          00001C98   2933          LG    15,@lit_781_78 ; LZ4_freeStreamHC
00001C26                                    2934 @@gen_label114 DS    0H
00001C26 05EF                               2935          BALR  14,15
00001C28                                    2936 @@gen_label115 DS    0H
                                            2937 * ***       rd_free(cdict);
00001C28 E320 D0A8 0024          000000A8   2938          STG   2,168(0,13)
00001C2E 4110 D0A8               000000A8   2939          LA    1,168(0,13)
00001C32 B904 00F3                          2940          LGR   15,3
00001C36                                    2941 @@gen_label116 DS    0H
00001C36 05EF                               2942          BALR  14,15
00001C38                                    2943 @@gen_label117 DS    0H
                                            2944 * ***   }
00001C38                                    2945 @ret_lab_781 DS 0H
                                            2946 * * **** Start of Epilogue
                                            2947          DCCEPIL
00001C38                                    2948+         ds 0h                                                          01-DCCEP
                                            2949+* Epilog
00001C38 D707 D088 D088 00000088 00000088   2950+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001C3E E3D0 D080 0004          00000080   2951+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001C44 E3C0 D090 0004          00000090   2952+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001C4A E3B0 C018 0004          00000018   2953+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C50 E3C0 B010 0021          00000010   2954+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C56 E3E0 D008 0004          00000008   2955+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C5C EB1C D020 0004          00000020   2956+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001C62 078E                               2957+         bcr 8,14                if same dsab, just return              01-DCCEP
00001C64 E3F0 D010 0024          00000010   2958+         stg 15,16(0,13)         save return code                       01-DCCEP
00001C6A E300 D018 0024          00000018   2959+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001C70 E3F0 D090 0004          00000090   2960+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001C76 E3F0 F018 0004          00000018   2961+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001C7C 47F0 F040               00000040   2962+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2963+* End of Epilog
                                            2964 * * **** End of Epilogue
                                                                                                                           Page   64 
  Active Usings: @REGION_781_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001C80                                    2965          DS    0D
00001C80 000000B0                           2966 @FRAMESIZE_781 DC F'176'
00001C84 00000000
00001C88 0000000000000330                   2967 @lit_781_76 DC AD(rd_free)
00001C90 0000000000000000                   2968 @lit_781_77 DC AD($L$Z4_free$Stream)
00001C98 0000000000000000                   2969 @lit_781_78 DC AD($L$Z4_free$Stream$H$C)
                                            2970          DROP  12
                                            2971 *
                                            2972 *   DSECT for automatic variables in "LZ4F_freeCDict"
                                            2973 *      (FUNCTION #781)
                                            2974 *
00000000                00000000 000000A8   2975 @AUTO#$L$Z4$F_free$C$Dict DSECT
00000000                                    2976          DS    XL168
                                            2977 *
00001CA0                00000000 00006CE8   2978 @CODE    CSECT
                                            2979 *
                                            2980 *
                                            2981 *
                                            2982 * ....... start of LZ4F_createCompressionContext
                                            2983 $L$Z4$F_create$Compression$Context ALIAS X'D3E9F4C66D83998581A385C39694*
                                                                979985A2A2899695C39695A385A7A3'
00001CA0                                    2984 @LNAME765 DS   0H
00001CA0 0000001D                           2985          DC    X'0000001D'
00001CA4 D3E9F4C66D839985                   2986          DC    C'LZ4F_createCompressionContext'
00001CC1 00                                 2987          DC    X'00'
                                            2988 $L$Z4$F_create$Compression$Context DCCPRLG CINDEX=765,BASER=12,FRAME=19*
                                                                2,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME765
                                            2989          macro
                                            2990          dccextrn &m
                                            2991          gblc    &$dccext(1000)
                                            2992          gbla    &$dccexti
                                            2993          lcla    &i
                                            2994 &$dccext(&$dccexti+1) setc    '&m'
                                            2995 &i       seta    1
                                            2996 .loop    aif    (&i gt &$dccexti).around
                                            2997          aif    ('&$dccext(&i)' eq '&m').getout
                                            2998 &i       seta    &i+1
                                            2999          ago     .loop
                                            3000 .around  anop
                                            3001 &$dccexti seta &$dccexti+1
                                            3002          extrn  &m
                                            3003 .getout  anop
                                            3004          mend
00001CC8                                    3005+$eye0069    ds    0d                                                    02-DCCCA
00001CC8 C4C3C3                             3006+         dc cl3'DCC'                                                    02-DCCCA
00001CCB 01                                 3007+         dc xl1'01' format one                                          02-DCCCA
00001CCC 00000000                           3008+         dc a(0)                                                        02-DCCCA
00001CD0 0000000000001D3A                   3009+         dc ad(@PER_765)                                                02-DCCCA
00001CD8 00000000000000C0                   3010+         dc ad(192)                                                     02-DCCCA
00001CE0 0000000000000000                   3011+         dc ad(0)                                                       02-DCCCA
00001CE8 0000000000001000                   3012+         dc ad(4096)                                                    02-DCCCA
00001CF0 20                                 3013+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   65 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001CF1 03                                 3014+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001CF2 03                                 3015+         dc al1(3)                                                      02-DCCCA
00001CF3 08                                 3016+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001CF4 00                                 3017+         dc bl.8'00000000'                                              02-DCCCA
00001CF5 000000                             3018+         dc al3(0)                                                      02-DCCCA
00001CF8 0000000000001CA0                   3019+         dc ad(@LNAME765)                                               02-DCCCA
00001D00                                    3020+         ds 0d                                                          02-DCCCA
00001D00 0000000000001CC8                   3021+         dc ad($eye0069)                                                02-DCCCA
00001D08 0000000000000000                   3022+         dc ad(0)                                                       02-DCCCA
00001D10                                    3023+         ds    0d                                                       01-DCCPR
                                            3024+         entry $L$Z4$F_create$Compression$Context                       01-DCCPR
00001D10                                    3025+$L$Z4$F_create$Compression$Context ds 0d                                01-DCCPR
00001D10                                    3026+@REGION_765_1 ds 0h                                                     01-DCCPR
00001D10 EBEC D008 0024          00000008   3027+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001D16 E3E0 D088 0004          00000088   3028+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001D1C E3C0 D090 0004          00000090   3029+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001D22 B904 002E                          3030+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001D26 E3B0 C018 0004          00000018   3031+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001D2C A7EB 00C0               000000C0   3032+         aghi  14,192              increase by frame size               01-DCCPR
00001D30 E3E0 C020 0021          00000020   3033+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001D36 4720 B020               00000020   3034+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001D3A                                    3035+@PER_765 ds    0h                                                       01-DCCPR
00001D3A EBDE 2080 0024          00000080   3036+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001D40 E3C0 2090 0024          00000090   3037+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001D46 B904 00D2                          3038+         lgr   13,2                set real frame pointer               01-DCCPR
00001D4A B904 00CF                          3039+         lgr   12,15               set base reg                         01-DCCPR
                        00001D10            3040+         using @REGION_765_1,12                                         01-DCCPR
00001D4E B904 0021                          3041          LGR   2,1         ; ptr to parm area
                                            3042 * ******* End of Prologue
                                            3043 * *
                                            3044 * ***       LZ4F_cctx_t* const cctxPtr = (LZ4F_cctx_t*)rd_calloc(1,(si\
                                            3045 * zeof(LZ4F_cctx_t)));
00001D52 E548 D0B0 0001          000000B0   3046          MVGHI 176(13),1
00001D58 E548 D0B8 00B8          000000B8   3047          MVGHI 184(13),184
00001D5E 4110 D0B0               000000B0   3048          LA    1,176(0,13)
00001D62 E3F0 C080 0004          00001D90   3049          LG    15,@lit_765_81 ; rd_calloc
00001D68                                    3050 @@gen_label118 DS    0H
00001D68 05EF                               3051          BALR  14,15
00001D6A                                    3052 @@gen_label119 DS    0H
                                            3053 * ***       if (cctxPtr==((void *)0)) return err0r(LZ4F_ERROR_allocati\
                                            3054 * on_failed);
00001D6A B902 001F                          3055          LTGR  1,15
00001D6E 4770 C090               00001DA0   3056          BNE   @L85
00001D72 E548 D0B0 0009          000000B0   3057          MVGHI 176(13),9
00001D78 4110 D0B0               000000B0   3058          LA    1,176(0,13)
00001D7C E3F0 C088 0004          00001D98   3059          LG    15,@lit_765_82 ; err0r
00001D82                                    3060 @@gen_label121 DS    0H
00001D82 05EF                               3061          BALR  14,15
00001D84                                    3062 @@gen_label122 DS    0H
00001D84 47F0 C0AE               00001DBE   3063          B     @ret_lab_765
00001D88                                    3064          DS    0D
00001D88 000000C0                           3065 @FRAMESIZE_765 DC F'192'
                                                                                                                           Page   66 
  Active Usings: @REGION_765_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001D8C 00000000
00001D90 0000000000000058                   3066 @lit_765_81 DC AD(rd_calloc)
00001D98 0000000000000A60                   3067 @lit_765_82 DC AD(err0r)
00001DA0                                    3068 @L85     DS    0H
                                            3069 * ***
                                            3070 * ***       cctxPtr->version = version;
00001DA0 5810 200C               0000000C   3071          L     1,12(0,2)   ; version
00001DA4 5010 F038               00000038   3072          ST    1,56(0,15)  ; offset of version in LZ4F_cctx_s
                                            3073 * ***       cctxPtr->cStage = 0;
00001DA8 E54C F03C 0000          0000003C   3074          MVHI  60(15),0    ; offset of cStage in LZ4F_cctx_s
                                            3075 * ***
                                            3076 * ***       *LZ4F_compressionContextPtr = cctxPtr;
00001DAE E310 2000 0004          00000000   3077          LG    1,0(0,2)    ; LZ4F_compressionContextPtr
00001DB4 E3F0 1000 0024          00000000   3078          STG   15,0(0,1)   ; LZ4F_compressionContextPtr
                                            3079 * ***
                                            3080 * ***       return LZ4F_OK_NoError;
00001DBA A7F9 0000               00000000   3081          LGHI  15,0        ; 0
                                            3082 * ***   }
00001DBE                                    3083 @ret_lab_765 DS 0H
                                            3084 * * **** Start of Epilogue
                                            3085          DCCEPIL
00001DBE                                    3086+         ds 0h                                                          01-DCCEP
                                            3087+* Epilog
00001DBE D707 D088 D088 00000088 00000088   3088+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001DC4 E3D0 D080 0004          00000080   3089+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001DCA E3C0 D090 0004          00000090   3090+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001DD0 E3B0 C018 0004          00000018   3091+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001DD6 E3C0 B010 0021          00000010   3092+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001DDC E3E0 D008 0004          00000008   3093+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001DE2 EB1C D020 0004          00000020   3094+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001DE8 078E                               3095+         bcr 8,14                if same dsab, just return              01-DCCEP
00001DEA E3F0 D010 0024          00000010   3096+         stg 15,16(0,13)         save return code                       01-DCCEP
00001DF0 E300 D018 0024          00000018   3097+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001DF6 E3F0 D090 0004          00000090   3098+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001DFC E3F0 F018 0004          00000018   3099+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E02 47F0 F040               00000040   3100+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3101+* End of Epilog
                                            3102 * * **** End of Epilogue
                                            3103          DROP  12
                                            3104 *
                                            3105 *   DSECT for automatic variables in "LZ4F_createCompressionContext"
                                            3106 *      (FUNCTION #765)
                                            3107 *
00000000                00000000 000000A8   3108 @AUTO#$L$Z4$F_create$Compression$Context DSECT
00000000                                    3109          DS    XL168
                                            3110 *
00001E06                00000000 00006CE8   3111 @CODE    CSECT
                                            3112 *
                                            3113 *
                                            3114 *
                                            3115 * ....... start of LZ4F_freeCompressionContext
                                            3116 $L$Z4$F_free$Compression$Context ALIAS X'D3E9F4C66D86998585C39694979985*
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                A2A2899695C39695A385A7A3'
00001E06                                    3117 @LNAME766 DS   0H
00001E06 0000001B                           3118          DC    X'0000001B'
00001E0A D3E9F4C66D869985                   3119          DC    C'LZ4F_freeCompressionContext'
00001E25 00                                 3120          DC    X'00'
                                            3121 $L$Z4$F_free$Compression$Context DCCPRLG CINDEX=766,BASER=12,FRAME=176,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME766
                                            3122          macro
                                            3123          dccextrn &m
                                            3124          gblc    &$dccext(1000)
                                            3125          gbla    &$dccexti
                                            3126          lcla    &i
                                            3127 &$dccext(&$dccexti+1) setc    '&m'
                                            3128 &i       seta    1
                                            3129 .loop    aif    (&i gt &$dccexti).around
                                            3130          aif    ('&$dccext(&i)' eq '&m').getout
                                            3131 &i       seta    &i+1
                                            3132          ago     .loop
                                            3133 .around  anop
                                            3134 &$dccexti seta &$dccexti+1
                                            3135          extrn  &m
                                            3136 .getout  anop
                                            3137          mend
00001E28                                    3138+$eye0072    ds    0d                                                    02-DCCCA
00001E28 C4C3C3                             3139+         dc cl3'DCC'                                                    02-DCCCA
00001E2B 01                                 3140+         dc xl1'01' format one                                          02-DCCCA
00001E2C 00000000                           3141+         dc a(0)                                                        02-DCCCA
00001E30 0000000000001E9A                   3142+         dc ad(@PER_766)                                                02-DCCCA
00001E38 00000000000000B0                   3143+         dc ad(176)                                                     02-DCCCA
00001E40 0000000000000000                   3144+         dc ad(0)                                                       02-DCCCA
00001E48 0000000000001000                   3145+         dc ad(4096)                                                    02-DCCCA
00001E50 20                                 3146+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E51 03                                 3147+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E52 03                                 3148+         dc al1(3)                                                      02-DCCCA
00001E53 08                                 3149+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E54 00                                 3150+         dc bl.8'00000000'                                              02-DCCCA
00001E55 000000                             3151+         dc al3(0)                                                      02-DCCCA
00001E58 0000000000001E06                   3152+         dc ad(@LNAME766)                                               02-DCCCA
00001E60                                    3153+         ds 0d                                                          02-DCCCA
00001E60 0000000000001E28                   3154+         dc ad($eye0072)                                                02-DCCCA
00001E68 0000000000000000                   3155+         dc ad(0)                                                       02-DCCCA
00001E70                                    3156+         ds    0d                                                       01-DCCPR
                                            3157+         entry $L$Z4$F_free$Compression$Context                         01-DCCPR
00001E70                                    3158+$L$Z4$F_free$Compression$Context ds 0d                                  01-DCCPR
00001E70                                    3159+@REGION_766_1 ds 0h                                                     01-DCCPR
00001E70 EBEC D008 0024          00000008   3160+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001E76 E3E0 D088 0004          00000088   3161+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001E7C E3C0 D090 0004          00000090   3162+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001E82 B904 002E                          3163+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001E86 E3B0 C018 0004          00000018   3164+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001E8C A7EB 00B0               000000B0   3165+         aghi  14,176              increase by frame size               01-DCCPR
00001E90 E3E0 C020 0021          00000020   3166+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001E96 4720 B020               00000020   3167+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001E9A                                    3168+@PER_766 ds    0h                                                       01-DCCPR
00001E9A EBDE 2080 0024          00000080   3169+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001EA0 E3C0 2090 0024          00000090   3170+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001EA6 B904 00D2                          3171+         lgr   13,2                set real frame pointer               01-DCCPR
00001EAA B904 00CF                          3172+         lgr   12,15               set base reg                         01-DCCPR
                        00001E70            3173+         using @REGION_766_1,12                                         01-DCCPR
                                            3174 * ******* End of Prologue
                                            3175 * *
                                            3176 * ***       if (cctxPtr != ((void *)0)) {
00001EAE E320 1000 0004          00000000   3177          LG    2,0(0,1)    ; cctxPtr
00001EB4 B902 00F2                          3178          LTGR  15,2
00001EB8 4780 C08E               00001EFE   3179          BE    @L86
                                            3180 * ***          rd_free(cctxPtr->lz4CtxPtr);
00001EBC E3F0 20A8 0004          000000A8   3181          LG    15,168(0,2)
00001EC2 E3F0 D0A8 0024          000000A8   3182          STG   15,168(0,13)
00001EC8 4110 D0A8               000000A8   3183          LA    1,168(0,13)
00001ECC E330 C0E8 0004          00001F58   3184          LG    3,@lit_766_85 ; rd_free
00001ED2 B904 00F3                          3185          LGR   15,3
00001ED6                                    3186 @@gen_label124 DS    0H
00001ED6 05EF                               3187          BALR  14,15
00001ED8                                    3188 @@gen_label125 DS    0H
                                            3189 * ***          rd_free(cctxPtr->tmpBuff);
00001ED8 E3F0 2058 0004          00000058   3190          LG    15,88(0,2)
00001EDE E3F0 D0A8 0024          000000A8   3191          STG   15,168(0,13)
00001EE4 4110 D0A8               000000A8   3192          LA    1,168(0,13)
00001EE8 B904 00F3                          3193          LGR   15,3
00001EEC                                    3194 @@gen_label126 DS    0H
00001EEC 05EF                               3195          BALR  14,15
00001EEE                                    3196 @@gen_label127 DS    0H
                                            3197 * ***          rd_free(cctxPtr);
00001EEE E320 D0A8 0024          000000A8   3198          STG   2,168(0,13)
00001EF4 4110 D0A8               000000A8   3199          LA    1,168(0,13)
00001EF8 B904 00F3                          3200          LGR   15,3
00001EFC                                    3201 @@gen_label128 DS    0H
00001EFC 05EF                               3202          BALR  14,15
00001EFE                                    3203 @@gen_label129 DS    0H
                                            3204 * ***       }
00001EFE                                    3205 @L86     DS    0H
                                            3206 * ***
                                            3207 * ***       return LZ4F_OK_NoError;
00001EFE A7F9 0000               00000000   3208          LGHI  15,0        ; 0
                                            3209 * ***   }
                                            3210 * * **** Start of Epilogue
                                            3211          DCCEPIL
00001F02                                    3212+         ds 0h                                                          01-DCCEP
                                            3213+* Epilog
00001F02 D707 D088 D088 00000088 00000088   3214+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001F08 E3D0 D080 0004          00000080   3215+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001F0E E3C0 D090 0004          00000090   3216+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001F14 E3B0 C018 0004          00000018   3217+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001F1A E3C0 B010 0021          00000010   3218+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   69 
  Active Usings: @REGION_766_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001F20 E3E0 D008 0004          00000008   3219+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001F26 EB1C D020 0004          00000020   3220+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001F2C 078E                               3221+         bcr 8,14                if same dsab, just return              01-DCCEP
00001F2E E3F0 D010 0024          00000010   3222+         stg 15,16(0,13)         save return code                       01-DCCEP
00001F34 E300 D018 0024          00000018   3223+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001F3A E3F0 D090 0004          00000090   3224+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001F40 E3F0 F018 0004          00000018   3225+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001F46 47F0 F040               00000040   3226+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3227+* End of Epilog
                                            3228 * * **** End of Epilogue
00001F50                                    3229          DS    0D
00001F50 000000B0                           3230 @FRAMESIZE_766 DC F'176'
00001F54 00000000
00001F58 0000000000000330                   3231 @lit_766_85 DC AD(rd_free)
                                            3232          DROP  12
                                            3233 *
                                            3234 *   DSECT for automatic variables in "LZ4F_freeCompressionContext"
                                            3235 *      (FUNCTION #766)
                                            3236 *
00000000                00000000 000000A8   3237 @AUTO#$L$Z4$F_free$Compression$Context DSECT
00000000                                    3238          DS    XL168
                                            3239 *
00001F60                00000000 00006CE8   3240 @CODE    CSECT
                                            3241 *
                                            3242 *
                                            3243 *
                                            3244 * ....... start of LZ4F_initStream
00001F60                                    3245 @LNAME889 DS   0H
00001F60 0000000F                           3246          DC    X'0000000F'
00001F64 D3E9F4C66D899589                   3247          DC    C'LZ4F_initStream'
00001F73 00                                 3248          DC    X'00'
                                            3249 $L$Z4$F_init$Stream DCCPRLG CINDEX=889,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME889
                                            3250          macro
                                            3251          dccextrn &m
                                            3252          gblc    &$dccext(1000)
                                            3253          gbla    &$dccexti
                                            3254          lcla    &i
                                            3255 &$dccext(&$dccexti+1) setc    '&m'
                                            3256 &i       seta    1
                                            3257 .loop    aif    (&i gt &$dccexti).around
                                            3258          aif    ('&$dccext(&i)' eq '&m').getout
                                            3259 &i       seta    &i+1
                                            3260          ago     .loop
                                            3261 .around  anop
                                            3262 &$dccexti seta &$dccexti+1
                                            3263          extrn  &m
                                            3264 .getout  anop
                                            3265          mend
00001F78                                    3266+$eye0075    ds    0d                                                    02-DCCCA
00001F78 C4C3C3                             3267+         dc cl3'DCC'                                                    02-DCCCA
00001F7B 01                                 3268+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001F7C 00000000                           3269+         dc a(0)                                                        02-DCCCA
00001F80 0000000000001FEA                   3270+         dc ad(@PER_889)                                                02-DCCCA
00001F88 00000000000000B8                   3271+         dc ad(184)                                                     02-DCCCA
00001F90 0000000000000000                   3272+         dc ad(0)                                                       02-DCCCA
00001F98 0000000000001000                   3273+         dc ad(4096)                                                    02-DCCCA
00001FA0 20                                 3274+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001FA1 03                                 3275+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001FA2 03                                 3276+         dc al1(3)                                                      02-DCCCA
00001FA3 08                                 3277+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001FA4 00                                 3278+         dc bl.8'00000000'                                              02-DCCCA
00001FA5 000000                             3279+         dc al3(0)                                                      02-DCCCA
00001FA8 0000000000001F60                   3280+         dc ad(@LNAME889)                                               02-DCCCA
00001FB0                                    3281+         ds 0d                                                          02-DCCCA
00001FB0 0000000000001F78                   3282+         dc ad($eye0075)                                                02-DCCCA
00001FB8 0000000000000000                   3283+         dc ad(0)                                                       02-DCCCA
00001FC0                                    3284+         ds    0d                                                       01-DCCPR
00001FC0                                    3285+$L$Z4$F_init$Stream ds 0d                                               01-DCCPR
00001FC0                                    3286+@REGION_889_1 ds 0h                                                     01-DCCPR
00001FC0 EBEC D008 0024          00000008   3287+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001FC6 E3E0 D088 0004          00000088   3288+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001FCC E3C0 D090 0004          00000090   3289+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001FD2 B904 002E                          3290+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001FD6 E3B0 C018 0004          00000018   3291+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001FDC A7EB 00B8               000000B8   3292+         aghi  14,184              increase by frame size               01-DCCPR
00001FE0 E3E0 C020 0021          00000020   3293+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001FE6 4720 B020               00000020   3294+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001FEA                                    3295+@PER_889 ds    0h                                                       01-DCCPR
00001FEA EBDE 2080 0024          00000080   3296+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001FF0 E3C0 2090 0024          00000090   3297+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001FF6 B904 00D2                          3298+         lgr   13,2                set real frame pointer               01-DCCPR
00001FFA B904 00CF                          3299+         lgr   12,15               set base reg                         01-DCCPR
                        00001FC0            3300+         using @REGION_889_1,12                                         01-DCCPR
                                            3301 * ******* End of Prologue
                                            3302 * *
                                            3303 * ***       if (level < 3) {
00001FFE EB23 1000 0004          00000000   3304          LMG   2,3,0(1)    ; ctx
00002004 E55C 1014 0003          00000014   3305          CHSI  20(1),3
0000200A 47B0 C0D0               00002090   3306          BNL   @L87
                                            3307 * ***           if (cdict != ((void *)0) || blockMode == LZ4F_blockLin\
                                            3308 * ked) {
0000200E B902 00F3                          3309          LTGR  15,3
00002012 4770 C060               00002020   3310          BNE   @L89
00002016 E55C 101C 0000          0000001C   3311          CHSI  28(1),0
0000201C 4770 C072               00002032   3312          BNE   @L88
00002020                                    3313 @L89     DS    0H
                                            3314 * ***
                                            3315 * ***   # 582 "C:\asgkafka\librdkafka\src\lz4frame.c"
                                            3316 * ***               LZ4_resetStream_fast((LZ4_stream_t*)ctx);
00002020 E320 D0A8 0024          000000A8   3317          STG   2,168(0,13)
00002026 4110 D0A8               000000A8   3318          LA    1,168(0,13)
0000202A E3F0 C090 0004          00002050   3319          LG    15,@lit_889_90 ; LZ4_resetStream_fast
00002030                                    3320 @@gen_label133 DS    0H
                                                                                                                           Page   71 
  Active Usings: @REGION_889_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002030 05EF                               3321          BALR  14,15
00002032                                    3322 @@gen_label134 DS    0H
                                            3323 * ***           }
00002032                                    3324 @L88     DS    0H
                                            3325 * ***           LZ4_attach_dictionary((LZ4_stream_t *)ctx, cdict ? cdi\
                                            3326 * ct->fastCtx : ((void *)0));
00002032 B902 00F3                          3327          LTGR  15,3
00002036 4780 C0B0               00002070   3328          BZ    @L90
0000203A E3F0 3008 0004          00000008   3329          LG    15,8(0,3)   ; offset of fastCtx in LZ4F_CDict_s
00002040 47F0 C0B4               00002074   3330          B     @L91
00002048                                    3331          DS    0D
00002048 000000B8                           3332 @FRAMESIZE_889 DC F'184'
0000204C 00000000
00002050 0000000000000000                   3333 @lit_889_90 DC AD($L$Z4_reset$Stream_fast)
00002058 0000000000000000                   3334 @lit_889_92 DC AD($L$Z4_attach_dictionary)
00002060 0000000000000000                   3335 @lit_889_93 DC AD($L$Z4_reset$Stream$H$C_fast)
00002068 0000000000000000                   3336 @lit_889_95 DC AD($L$Z4_attach_$H$C_dictionary)
00002070                                    3337 @L90     DS    0H
00002070 A7F9 0000               00000000   3338          LGHI  15,0        ; 0
00002074                                    3339 @L91     DS    0H
00002074 E320 D0A8 0024          000000A8   3340          STG   2,168(0,13)
0000207A E3F0 D0B0 0024          000000B0   3341          STG   15,176(0,13)
00002080 4110 D0A8               000000A8   3342          LA    1,168(0,13)
00002084 E3F0 C098 0004          00002058   3343          LG    15,@lit_889_92 ; LZ4_attach_dictionary
0000208A                                    3344 @@gen_label136 DS    0H
0000208A 05EF                               3345          BALR  14,15
0000208C                                    3346 @@gen_label137 DS    0H
                                            3347 * ***       } else {
0000208C 47F0 C11C               000020DC   3348          B     @ret_lab_889
00002090                                    3349 @L87     DS    0H
                                            3350 * ***           LZ4_resetStreamHC_fast((LZ4_streamHC_t*)ctx, level);
00002090 E320 D0A8 0024          000000A8   3351          STG   2,168(0,13)
00002096 E3F0 1014 0014          00000014   3352          LGF   15,20(0,1)  ; level
0000209C E3F0 D0B0 0024          000000B0   3353          STG   15,176(0,13)
000020A2 4110 D0A8               000000A8   3354          LA    1,168(0,13)
000020A6 E3F0 C0A0 0004          00002060   3355          LG    15,@lit_889_93 ; LZ4_resetStreamHC_fast
000020AC                                    3356 @@gen_label138 DS    0H
000020AC 05EF                               3357          BALR  14,15
000020AE                                    3358 @@gen_label139 DS    0H
                                            3359 * ***           LZ4_attach_HC_dictionary((LZ4_streamHC_t *)ctx, cdict \
                                            3360 * ? cdict->HCCtx : ((void *)0));
000020AE B902 00F3                          3361          LTGR  15,3
000020B2 4780 C100               000020C0   3362          BZ    @L93
000020B6 E3F0 3010 0004          00000010   3363          LG    15,16(0,3)  ; offset of HCCtx in LZ4F_CDict_s
000020BC 47F0 C104               000020C4   3364          B     @L94
000020C0                                    3365 @L93     DS    0H
000020C0 A7F9 0000               00000000   3366          LGHI  15,0        ; 0
000020C4                                    3367 @L94     DS    0H
000020C4 E320 D0A8 0024          000000A8   3368          STG   2,168(0,13)
000020CA E3F0 D0B0 0024          000000B0   3369          STG   15,176(0,13)
000020D0 4110 D0A8               000000A8   3370          LA    1,168(0,13)
000020D4 E3F0 C0A8 0004          00002068   3371          LG    15,@lit_889_95 ; LZ4_attach_HC_dictionary
                                                                                                                           Page   72 
  Active Usings: @REGION_889_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000020DA                                    3372 @@gen_label141 DS    0H
000020DA 05EF                               3373          BALR  14,15
000020DC                                    3374 @@gen_label142 DS    0H
                                            3375 * ***       }
000020DC                                    3376 @L92     DS    0H
                                            3377 * ***   }
000020DC                                    3378 @ret_lab_889 DS 0H
                                            3379 * * **** Start of Epilogue
                                            3380          DCCEPIL
000020DC                                    3381+         ds 0h                                                          01-DCCEP
                                            3382+* Epilog
000020DC D707 D088 D088 00000088 00000088   3383+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000020E2 E3D0 D080 0004          00000080   3384+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000020E8 E3C0 D090 0004          00000090   3385+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000020EE E3B0 C018 0004          00000018   3386+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000020F4 E3C0 B010 0021          00000010   3387+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000020FA E3E0 D008 0004          00000008   3388+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002100 EB1C D020 0004          00000020   3389+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002106 078E                               3390+         bcr 8,14                if same dsab, just return              01-DCCEP
00002108 E3F0 D010 0024          00000010   3391+         stg 15,16(0,13)         save return code                       01-DCCEP
0000210E E300 D018 0024          00000018   3392+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002114 E3F0 D090 0004          00000090   3393+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000211A E3F0 F018 0004          00000018   3394+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002120 47F0 F040               00000040   3395+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3396+* End of Epilog
                                            3397 * * **** End of Epilogue
                                            3398          DROP  12
                                            3399 *
                                            3400 *   DSECT for automatic variables in "LZ4F_initStream"
                                            3401 *      (FUNCTION #889)
                                            3402 *
00000000                00000000 000000A8   3403 @AUTO#$L$Z4$F_init$Stream DSECT
00000000                                    3404          DS    XL168
                                            3405 *
00002124                00000000 00006CE8   3406 @CODE    CSECT
                                            3407 *
                                            3408 *
                                            3409 *
                                            3410 * ....... start of LZ4F_compressBegin_usingCDict
                                            3411 $L$Z4$F_compress$Begin_using$C$Dict ALIAS X'D3E9F4C66D839694979985A2A2C*
                                                                2858789956DA4A2899587C3C48983A3'
00002124                                    3412 @LNAME783 DS   0H
00002124 0000001D                           3413          DC    X'0000001D'
00002128 D3E9F4C66D839694                   3414          DC    C'LZ4F_compressBegin_usingCDict'
00002145 00                                 3415          DC    X'00'
                                            3416 $L$Z4$F_compress$Begin_using$C$Dict DCCPRLG CINDEX=783,BASER=12,FRAME=2*
                                                                64,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME783
                                            3417          macro
                                            3418          dccextrn &m
                                            3419          gblc    &$dccext(1000)
                                            3420          gbla    &$dccexti
                                            3421          lcla    &i
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3422 &$dccext(&$dccexti+1) setc    '&m'
                                            3423 &i       seta    1
                                            3424 .loop    aif    (&i gt &$dccexti).around
                                            3425          aif    ('&$dccext(&i)' eq '&m').getout
                                            3426 &i       seta    &i+1
                                            3427          ago     .loop
                                            3428 .around  anop
                                            3429 &$dccexti seta &$dccexti+1
                                            3430          extrn  &m
                                            3431 .getout  anop
                                            3432          mend
00002148                                    3433+$eye0078    ds    0d                                                    02-DCCCA
00002148 C4C3C3                             3434+         dc cl3'DCC'                                                    02-DCCCA
0000214B 01                                 3435+         dc xl1'01' format one                                          02-DCCCA
0000214C 00000000                           3436+         dc a(0)                                                        02-DCCCA
00002150 00000000000021BA                   3437+         dc ad(@PER_783)                                                02-DCCCA
00002158 0000000000000108                   3438+         dc ad(264)                                                     02-DCCCA
00002160 0000000000000000                   3439+         dc ad(0)                                                       02-DCCCA
00002168 0000000000001000                   3440+         dc ad(4096)                                                    02-DCCCA
00002170 20                                 3441+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002171 03                                 3442+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002172 03                                 3443+         dc al1(3)                                                      02-DCCCA
00002173 08                                 3444+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002174 00                                 3445+         dc bl.8'00000000'                                              02-DCCCA
00002175 000000                             3446+         dc al3(0)                                                      02-DCCCA
00002178 0000000000002124                   3447+         dc ad(@LNAME783)                                               02-DCCCA
00002180                                    3448+         ds 0d                                                          02-DCCCA
00002180 0000000000002148                   3449+         dc ad($eye0078)                                                02-DCCCA
00002188 0000000000000000                   3450+         dc ad(0)                                                       02-DCCCA
00002190                                    3451+         ds    0d                                                       01-DCCPR
                                            3452+         entry $L$Z4$F_compress$Begin_using$C$Dict                      01-DCCPR
00002190                                    3453+$L$Z4$F_compress$Begin_using$C$Dict ds 0d                               01-DCCPR
00002190                                    3454+@REGION_783_1 ds 0h                                                     01-DCCPR
00002190 EBEC D008 0024          00000008   3455+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002196 E3E0 D088 0004          00000088   3456+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000219C E3C0 D090 0004          00000090   3457+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000021A2 B904 002E                          3458+         lgr   2,14                copy addr of our savearea            01-DCCPR
000021A6 E3B0 C018 0004          00000018   3459+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000021AC A7EB 0108               00000108   3460+         aghi  14,264              increase by frame size               01-DCCPR
000021B0 E3E0 C020 0021          00000020   3461+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000021B6 4720 B020               00000020   3462+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000021BA                                    3463+@PER_783 ds    0h                                                       01-DCCPR
000021BA EBDE 2080 0024          00000080   3464+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000021C0 E3C0 2090 0024          00000090   3465+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000021C6 B904 00D2                          3466+         lgr   13,2                set real frame pointer               01-DCCPR
000021CA B904 00CF                          3467+         lgr   12,15               set base reg                         01-DCCPR
                        00002190            3468+         using @REGION_783_1,12                                         01-DCCPR
000021CE B904 0071                          3469          LGR   7,1         ; ptr to parm area
                                            3470 * ******* End of Prologue
                                            3471 * *
000021D2 E350 7000 0004          00000000   3472          LG    5,0(0,7)    ; cctxPtr
000021D8 E340 7020 0004          00000020   3473          LG    4,32(0,7)   ; preferencesPtr
                                                                                                                           Page   74 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3474 * ***       LZ4F_preferences_t prefNull;
                                            3475 * ***       BYTE* const dstStart = (BYTE*)dstBuffer;
000021DE E360 7008 0004          00000008   3476          LG    6,8(0,7)    ; dstBuffer
                                            3477 * ***       BYTE* dstPtr = dstStart;
000021E4 B904 0026                          3478          LGR   2,6         ; dstPtr
                                            3479 * ***       BYTE* headerStart;
                                            3480 * ***
                                            3481 * ***       if (dstCapacity < maxFHSize) return err0r(LZ4F_ERROR_dstMa\
                                            3482 * xSize_tooSmall);
000021E8 E3F0 7010 0004          00000010   3483          LG    15,16(0,7)  ; dstCapacity
000021EE E310 C090 0004          00002220   3484          LG    1,@lit_783_97
000021F4 E3F0 1050 0021          00000050   3485          CLG   15,80(0,1)
000021FA 47B0 C110               000022A0   3486          BNL   @L95
000021FE E548 D0E8 000B          000000E8   3487          MVGHI 232(13),11
00002204 4110 D0E8               000000E8   3488          LA    1,232(0,13)
00002208 E3F0 C098 0004          00002228   3489          LG    15,@lit_783_98 ; err0r
0000220E                                    3490 @@gen_label144 DS    0H
0000220E 05EF                               3491          BALR  14,15
00002210                                    3492 @@gen_label145 DS    0H
00002210 47F0 C516               000026A6   3493          B     @ret_lab_783
00002218                                    3494          DS    0D
00002218 00000108                           3495 @FRAMESIZE_783 DC F'264'
0000221C 00000000
00002220 0000000000006CE8                   3496 @lit_783_97 DC AD(@DATA)
00002228 0000000000000A60                   3497 @lit_783_98 DC AD(err0r)
00002230 0000000000000330                   3498 @lit_783_101 DC AD(rd_free)
00002238 0000000000000000                   3499 @lit_783_102 DC AD($L$Z4_create$Stream)
00002240 0000000000000000                   3500 @lit_783_103 DC AD($L$Z4_create$Stream$H$C)
00002248 0000000000000000                   3501 @lit_783_105 DC AD($L$Z4_init$Stream)
00002250 0000000000000000                   3502 @lit_783_107 DC AD($L$Z4_init$Stream$H$C)
00002258 0000000000000000                   3503 @lit_783_108 DC AD($L$Z4_set$Compression$Level)
00002260 0000000000000BD0                   3504 @lit_783_109 DC AD($L$Z4$F_get$Block$Size)
00002268 0000000000000058                   3505 @lit_783_115 DC AD(rd_calloc)
00002270 0000000000000000                   3506 @lit_783_117 DC AD($X$X$H32_reset)
00002278 0000000000001FC0                   3507 @lit_783_118 DC AD($L$Z4$F_init$Stream)
00002280 0000000000000000                   3508 @lit_783_119 DC AD($L$Z4_favor$Decompression$Speed)
00002288 00000000000004E8                   3509 @lit_783_121 DC AD($L$Z4$F_write$L$E32)
00002290 0000000000000670                   3510 @lit_783_122 DC AD($L$Z4$F_write$L$E64)
00002298 0000000000000D28                   3511 @lit_783_124 DC AD($L$Z4$F_header$Checksum)
000022A0                                    3512 @L95     DS    0H
                                            3513 * ***       __memset((&prefNull),(0),(sizeof(prefNull)));
000022A0 41F0 D0A8               000000A8   3514          LA    15,168(0,13)
                                            3515 * setting 56 bytes to 0x00
000022A4 D737 F000 F000 00000000 00000000   3516          XC    0(56,15),0(15)
                                            3517 * ***       if (preferencesPtr == ((void *)0)) preferencesPtr = &prefN\
                                            3518 * ull;
000022AA B902 00F4                          3519          LTGR  15,4
000022AE 4770 C126               000022B6   3520          BNE   @L96
000022B2 4140 D0A8               000000A8   3521          LA    4,168(0,13)
000022B6                                    3522 @L96     DS    0H
                                            3523 * ***       cctxPtr->prefs = *preferencesPtr;
000022B6 D237 5000 4000 00000000 00000000   3524          MVC   0(56,5),0(4)
                                                                                                                           Page   75 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3525 * ***
                                            3526 * ***
                                            3527 * ***       {   U16 const ctxTypeID = (cctxPtr->prefs.compressionLevel\
                                            3528 *  < 3) ? 1 : 2;
000022BC E55C 5020 0003          00000020   3529          CHSI  32(5),3
000022C2 47B0 C13E               000022CE   3530          BNL   @L97
000022C6 A738 0001               00000001   3531          LHI   3,1         ; 1
000022CA 47F0 C142               000022D2   3532          B     @L98
000022CE                                    3533 @L97     DS    0H
000022CE A738 0002               00000002   3534          LHI   3,2         ; 2
000022D2                                    3535 @L98     DS    0H
000022D2 4030 D0E0               000000E0   3536          STH   3,224(0,13) ; ctxTypeID
                                            3537 * ***           if (cctxPtr->lz4CtxAlloc < ctxTypeID) {
000022D6 E3F0 50B0 0095          000000B0   3538          LLH   15,176(0,5)
000022DC B995 0013                          3539          LLHR  1,3
000022E0 19F1                               3540          CR    15,1
000022E2 47B0 C1C4               00002354   3541          BNL   @L99
                                            3542 * ***               rd_free(cctxPtr->lz4CtxPtr);
000022E6 E3F0 50A8 0004          000000A8   3543          LG    15,168(0,5)
000022EC E3F0 D0E8 0024          000000E8   3544          STG   15,232(0,13)
000022F2 4110 D0E8               000000E8   3545          LA    1,232(0,13)
000022F6 E3F0 C0A0 0004          00002230   3546          LG    15,@lit_783_101 ; rd_free
000022FC                                    3547 @@gen_label149 DS    0H
000022FC 05EF                               3548          BALR  14,15
000022FE                                    3549 @@gen_label150 DS    0H
                                            3550 * ***               if (cctxPtr->prefs.compressionLevel < 3) {
000022FE E55C 5020 0003          00000020   3551          CHSI  32(5),3
00002304 47B0 C18A               0000231A   3552          BNL   @L100
                                            3553 * ***                   cctxPtr->lz4CtxPtr = LZ4_createStream();
00002308 E3F0 C0A8 0004          00002238   3554          LG    15,@lit_783_102 ; LZ4_createStream
0000230E                                    3555 @@gen_label152 DS    0H
0000230E 05EF                               3556          BALR  14,15
00002310                                    3557 @@gen_label153 DS    0H
00002310 E3F0 50A8 0024          000000A8   3558          STG   15,168(0,5)
                                            3559 * ***               } else {
00002316 47F0 C198               00002328   3560          B     @L101
0000231A                                    3561 @L100    DS    0H
                                            3562 * ***                   cctxPtr->lz4CtxPtr = LZ4_createStreamHC();
0000231A E3F0 C0B0 0004          00002240   3563          LG    15,@lit_783_103 ; LZ4_createStreamHC
00002320                                    3564 @@gen_label154 DS    0H
00002320 05EF                               3565          BALR  14,15
00002322                                    3566 @@gen_label155 DS    0H
00002322 E3F0 50A8 0024          000000A8   3567          STG   15,168(0,5)
                                            3568 * ***               }
00002328                                    3569 @L101    DS    0H
                                            3570 * ***               if (cctxPtr->lz4CtxPtr == ((void *)0))
00002328 E3F0 50A8 0002          000000A8   3571          LTG   15,168(0,5) ; offset of lz4CtxPtr in LZ4F_cctx_s
0000232E 4770 C1B8               00002348   3572          BNE   @L102
                                            3573 * ***                   return err0r(LZ4F_ERROR_allocation_failed);
00002332 E548 D0E8 0009          000000E8   3574          MVGHI 232(13),9
00002338 4110 D0E8               000000E8   3575          LA    1,232(0,13)
0000233C E3F0 C098 0004          00002228   3576          LG    15,@lit_783_98 ; err0r
                                                                                                                           Page   76 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002342                                    3577 @@gen_label157 DS    0H
00002342 05EF                               3578          BALR  14,15
00002344                                    3579 @@gen_label158 DS    0H
00002344 47F0 C516               000026A6   3580          B     @ret_lab_783
00002348                                    3581 @L102    DS    0H
                                            3582 * ***               cctxPtr->lz4CtxAlloc = ctxTypeID;
00002348 4030 50B0               000000B0   3583          STH   3,176(0,5)  ; offset of lz4CtxAlloc in LZ4F_cctx_s
                                            3584 * ***               cctxPtr->lz4CtxState = ctxTypeID;
0000234C 4030 50B2               000000B2   3585          STH   3,178(0,5)  ; offset of lz4CtxState in LZ4F_cctx_s
                                            3586 * ***           } else if (cctxPtr->lz4CtxState != ctxTypeID) {
00002350 47F0 C24C               000023DC   3587          B     @L103
00002354                                    3588 @L99     DS    0H
00002354 E3F0 50B2 0095          000000B2   3589          LLH   15,178(0,5)
0000235A B995 0013                          3590          LLHR  1,3
0000235E 19F1                               3591          CR    15,1
00002360 4780 C24C               000023DC   3592          BE    @L103
                                            3593 * ***
                                            3594 * ***
                                            3595 * ***               if (cctxPtr->prefs.compressionLevel < 3) {
00002364 E55C 5020 0003          00000020   3596          CHSI  32(5),3
0000236A 47B0 C200               00002390   3597          BNL   @L105
                                            3598 * ***                   LZ4_initStream((LZ4_stream_t *) cctxPtr->lz4Ct\
                                            3599 * xPtr, sizeof (LZ4_stream_t));
0000236E E3F0 50A8 0004          000000A8   3600          LG    15,168(0,5)
00002374 E3F0 D0E8 0024          000000E8   3601          STG   15,232(0,13)
0000237A E548 D0F0 4020          000000F0   3602          MVGHI 240(13),16416
00002380 4110 D0E8               000000E8   3603          LA    1,232(0,13)
00002384 E3F0 C0B8 0004          00002248   3604          LG    15,@lit_783_105 ; LZ4_initStream
0000238A                                    3605 @@gen_label161 DS    0H
0000238A 05EF                               3606          BALR  14,15
0000238C                                    3607 @@gen_label162 DS    0H
                                            3608 * ***               } else {
0000238C 47F0 C248               000023D8   3609          B     @L106
00002390                                    3610 @L105    DS    0H
                                            3611 * ***                   LZ4_initStreamHC((LZ4_streamHC_t *) cctxPtr->l\
                                            3612 * z4CtxPtr, sizeof(LZ4_streamHC_t));
00002390 E3F0 50A8 0004          000000A8   3613          LG    15,168(0,5)
00002396 E3F0 D0E8 0024          000000E8   3614          STG   15,232(0,13)
0000239C C0FF 0004 0038                     3615          LLILF 15,X'00040038' ; 262200
000023A2 E3F0 D0F0 0024          000000F0   3616          STG   15,240(0,13)
000023A8 4110 D0E8               000000E8   3617          LA    1,232(0,13)
000023AC E3F0 C0C0 0004          00002250   3618          LG    15,@lit_783_107 ; LZ4_initStreamHC
000023B2                                    3619 @@gen_label163 DS    0H
000023B2 05EF                               3620          BALR  14,15
000023B4                                    3621 @@gen_label164 DS    0H
                                            3622 * ***                   LZ4_setCompressionLevel((LZ4_streamHC_t *) cct\
                                            3623 * xPtr->lz4CtxPtr, cctxPtr->prefs.compressionLevel);
000023B4 E3F0 50A8 0004          000000A8   3624          LG    15,168(0,5)
000023BA E3F0 D0E8 0024          000000E8   3625          STG   15,232(0,13)
000023C0 E3F0 5020 0014          00000020   3626          LGF   15,32(0,5)
000023C6 E3F0 D0F0 0024          000000F0   3627          STG   15,240(0,13)
000023CC 4110 D0E8               000000E8   3628          LA    1,232(0,13)
                                                                                                                           Page   77 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000023D0 E3F0 C0C8 0004          00002258   3629          LG    15,@lit_783_108 ; LZ4_setCompressionLevel
000023D6                                    3630 @@gen_label165 DS    0H
000023D6 05EF                               3631          BALR  14,15
000023D8                                    3632 @@gen_label166 DS    0H
                                            3633 * ***               }
000023D8                                    3634 @L106    DS    0H
                                            3635 * ***               cctxPtr->lz4CtxState = ctxTypeID;
000023D8 4030 50B2               000000B2   3636          STH   3,178(0,5)  ; offset of lz4CtxState in LZ4F_cctx_s
                                            3637 * ***           }
000023DC                                    3638 @L104    DS    0H
                                            3639 * ***       }
000023DC                                    3640 @L103    DS    0H
                                            3641 * ***
                                            3642 * ***
                                            3643 * ***       if (cctxPtr->prefs.frameInfo.blockSizeID == 0)
000023DC E55C 5000 0000          00000000   3644          CHSI  0(5),0
000023E2 4770 C25C               000023EC   3645          BNE   @L107
                                            3646 * ***           cctxPtr->prefs.frameInfo.blockSizeID = LZ4F_max64KB;
000023E6 E54C 5000 0004          00000000   3647          MVHI  0(5),4      ; cctxPtr
000023EC                                    3648 @L107    DS    0H
                                            3649 * ***       cctxPtr->maxBlockSize = LZ4F_getBlockSize(cctxPtr->prefs.f\
                                            3650 * rameInfo.blockSizeID);
000023EC E3F0 5000 0016          00000000   3651          LLGF  15,0(0,5)
000023F2 E3F0 D0E8 0024          000000E8   3652          STG   15,232(0,13)
000023F8 4110 D0E8               000000E8   3653          LA    1,232(0,13)
000023FC E3F0 C0D0 0004          00002260   3654          LG    15,@lit_783_109 ; LZ4F_getBlockSize
00002402                                    3655 @@gen_label168 DS    0H
00002402 05EF                               3656          BALR  14,15
00002404                                    3657 @@gen_label169 DS    0H
00002404 E3F0 5048 0024          00000048   3658          STG   15,72(0,5)
                                            3659 * ***
                                            3660 * ***       {   size_t const requiredBuffSize = preferencesPtr->autoFl\
                                            3661 * ush ?
0000240A E3F0 4024 0012          00000024   3662          LT    15,36(0,4)  ; offset of autoFlush in 0000028
00002410 4780 C2A4               00002434   3663          BZ    @L108
                                            3664 * ***                   ((cctxPtr->prefs.frameInfo.blockMode == LZ4F_b\
                                            3665 * lockLinked) ? 64 *(1<<10) : 0) :
00002414 E55C 5004 0000          00000004   3666          CHSI  4(5),0
0000241A 4770 C298               00002428   3667          BNE   @L109
0000241E C0F9 0001 0000                     3668          IILF  15,X'00010000' ; 65536
00002424 47F0 C29C               0000242C   3669          B     @L110
00002428                                    3670 @L109    DS    0H
00002428 A7F8 0000               00000000   3671          LHI   15,0        ; 0
0000242C                                    3672 @L110    DS    0H
0000242C B914 003F                          3673          LGFR  3,15
00002430 47F0 C2CA               0000245A   3674          B     @L113
00002434                                    3675 @L108    DS    0H
                                            3676 * ***                   cctxPtr->maxBlockSize + ((cctxPtr->prefs.frame\
                                            3677 * Info.blockMode == LZ4F_blockLinked) ? 128 *(1<<10) : 0);
00002434 E330 5048 0004          00000048   3678          LG    3,72(0,5)   ; offset of maxBlockSize in LZ4F_cctx_s
0000243A E55C 5004 0000          00000004   3679          CHSI  4(5),0
00002440 4770 C2BE               0000244E   3680          BNE   @L111
                                                                                                                           Page   78 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002444 C0F9 0002 0000                     3681          IILF  15,X'00020000' ; 131072
0000244A 47F0 C2C2               00002452   3682          B     @L112
0000244E                                    3683 @L111    DS    0H
0000244E A7F8 0000               00000000   3684          LHI   15,0        ; 0
00002452                                    3685 @L112    DS    0H
00002452 B914 00FF                          3686          LGFR  15,15
00002456 B90A 003F                          3687          ALGR  3,15
0000245A                                    3688 @L113    DS    0H
                                            3689 * ***
                                            3690 * ***           if (cctxPtr->maxBufferSize < requiredBuffSize) {
0000245A E3F0 5050 0004          00000050   3691          LG    15,80(0,5)  ; offset of maxBufferSize in LZ4F_cctx_s
00002460 B921 00F3                          3692          CLGR  15,3
00002464 47B0 C338               000024C8   3693          BNL   @L114
                                            3694 * ***               cctxPtr->maxBufferSize = 0;
00002468 E548 5050 0000          00000050   3695          MVGHI 80(5),0     ; offset of maxBufferSize in LZ4F_cctx_s
                                            3696 * ***               rd_free(cctxPtr->tmpBuff);
0000246E E3F0 5058 0004          00000058   3697          LG    15,88(0,5)
00002474 E3F0 D0E8 0024          000000E8   3698          STG   15,232(0,13)
0000247A 4110 D0E8               000000E8   3699          LA    1,232(0,13)
0000247E E3F0 C0A0 0004          00002230   3700          LG    15,@lit_783_101 ; rd_free
00002484                                    3701 @@gen_label174 DS    0H
00002484 05EF                               3702          BALR  14,15
00002486                                    3703 @@gen_label175 DS    0H
                                            3704 * ***               cctxPtr->tmpBuff = (BYTE*)rd_calloc(1,(requiredBuf\
                                            3705 * fSize));
00002486 E548 D0E8 0001          000000E8   3706          MVGHI 232(13),1
0000248C E330 D0F0 0024          000000F0   3707          STG   3,240(0,13)
00002492 4110 D0E8               000000E8   3708          LA    1,232(0,13)
00002496 E3F0 C0D8 0004          00002268   3709          LG    15,@lit_783_115 ; rd_calloc
0000249C                                    3710 @@gen_label176 DS    0H
0000249C 05EF                               3711          BALR  14,15
0000249E                                    3712 @@gen_label177 DS    0H
0000249E E3F0 5058 0024          00000058   3713          STG   15,88(0,5)
                                            3714 * ***               if (cctxPtr->tmpBuff == ((void *)0)) return err0r(\
                                            3715 * LZ4F_ERROR_allocation_failed);
000024A4 B902 00FF                          3716          LTGR  15,15
000024A8 4770 C332               000024C2   3717          BNE   @L115
000024AC E548 D0E8 0009          000000E8   3718          MVGHI 232(13),9
000024B2 4110 D0E8               000000E8   3719          LA    1,232(0,13)
000024B6 E3F0 C098 0004          00002228   3720          LG    15,@lit_783_98 ; err0r
000024BC                                    3721 @@gen_label179 DS    0H
000024BC 05EF                               3722          BALR  14,15
000024BE                                    3723 @@gen_label180 DS    0H
000024BE 47F0 C516               000026A6   3724          B     @ret_lab_783
000024C2                                    3725 @L115    DS    0H
                                            3726 * ***               cctxPtr->maxBufferSize = requiredBuffSize;
000024C2 E330 5050 0024          00000050   3727          STG   3,80(0,5)   ; offset of maxBufferSize in LZ4F_cctx_s
                                            3728 * ***       }   }
000024C8                                    3729 @L114    DS    0H
                                            3730 * ***       cctxPtr->tmpIn = cctxPtr->tmpBuff;
000024C8 E3F0 5058 0004          00000058   3731          LG    15,88(0,5)  ; offset of tmpBuff in LZ4F_cctx_s
000024CE E3F0 5060 0024          00000060   3732          STG   15,96(0,5)  ; offset of tmpIn in LZ4F_cctx_s
                                                                                                                           Page   79 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3733 * ***       cctxPtr->tmpInSize = 0;
000024D4 E548 5068 0000          00000068   3734          MVGHI 104(5),0    ; offset of tmpInSize in LZ4F_cctx_s
                                            3735 * ***       (void)XXH32_reset(&(cctxPtr->xxh), 0);
000024DA 41F0 5078               00000078   3736          LA    15,120(0,5)
000024DE E3F0 D0E8 0024          000000E8   3737          STG   15,232(0,13)
000024E4 D707 D0F0 D0F0 000000F0 000000F0   3738          XC    240(8,13),240(13)
000024EA 4110 D0E8               000000E8   3739          LA    1,232(0,13)
000024EE E3F0 C0E0 0004          00002270   3740          LG    15,@lit_783_117 ; XXH32_reset
000024F4                                    3741 @@gen_label181 DS    0H
000024F4 05EF                               3742          BALR  14,15
000024F6                                    3743 @@gen_label182 DS    0H
                                            3744 * ***
                                            3745 * ***
                                            3746 * ***       cctxPtr->cdict = cdict;
000024F6 E3F0 7018 0004          00000018   3747          LG    15,24(0,7)  ; cdict
000024FC E3F0 5040 0024          00000040   3748          STG   15,64(0,5)  ; offset of cdict in LZ4F_cctx_s
                                            3749 * ***       if (cctxPtr->prefs.frameInfo.blockMode == LZ4F_blockLinked\
                                            3750 * ) {
00002502 E55C 5004 0000          00000004   3751          CHSI  4(5),0
00002508 4770 C3AC               0000253C   3752          BNE   @L116
                                            3753 * ***
                                            3754 * ***           LZ4F_initStream(cctxPtr->lz4CtxPtr, cdict, cctxPtr->pr\
                                            3755 * efs.compressionLevel, LZ4F_blockLinked);
0000250C E310 50A8 0004          000000A8   3756          LG    1,168(0,5)
00002512 E310 D0E8 0024          000000E8   3757          STG   1,232(0,13)
00002518 E3F0 D0F0 0024          000000F0   3758          STG   15,240(0,13)
0000251E E3F0 5020 0014          00000020   3759          LGF   15,32(0,5)
00002524 E3F0 D0F8 0024          000000F8   3760          STG   15,248(0,13)
0000252A D707 D100 D100 00000100 00000100   3761          XC    256(8,13),256(13)
00002530 4110 D0E8               000000E8   3762          LA    1,232(0,13)
00002534 E3F0 C0E8 0004          00002278   3763          LG    15,@lit_783_118 ; LZ4F_initStream
0000253A                                    3764 @@gen_label184 DS    0H
0000253A 05EF                               3765          BALR  14,15
0000253C                                    3766 @@gen_label185 DS    0H
                                            3767 * ***       }
0000253C                                    3768 @L116    DS    0H
                                            3769 * ***       if (preferencesPtr->compressionLevel >= 3) {
0000253C E55C 4020 0003          00000020   3770          CHSI  32(4),3
00002542 4740 C3DA               0000256A   3771          BL    @L117
                                            3772 * ***           LZ4_favorDecompressionSpeed((LZ4_streamHC_t*)cctxPtr->\
                                            3773 * lz4CtxPtr, (int)preferencesPtr->favorDecSpeed);
00002546 E3F0 50A8 0004          000000A8   3774          LG    15,168(0,5)
0000254C E3F0 D0E8 0024          000000E8   3775          STG   15,232(0,13)
00002552 E3F0 4028 0014          00000028   3776          LGF   15,40(0,4)
00002558 E3F0 D0F0 0024          000000F0   3777          STG   15,240(0,13)
0000255E 4110 D0E8               000000E8   3778          LA    1,232(0,13)
00002562 E3F0 C0F0 0004          00002280   3779          LG    15,@lit_783_119 ; LZ4_favorDecompressionSpeed
00002568                                    3780 @@gen_label187 DS    0H
00002568 05EF                               3781          BALR  14,15
0000256A                                    3782 @@gen_label188 DS    0H
                                            3783 * ***       }
0000256A                                    3784 @L117    DS    0H
                                                                                                                           Page   80 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3785 * ***
                                            3786 * ***
                                            3787 * ***       LZ4F_writeLE32(dstPtr, 0x184D2204U);
0000256A E320 D0E8 0024          000000E8   3788          STG   2,232(0,13)
00002570 C0FF 184D 2204                     3789          LLILF 15,X'184D2204' ; 407708164
00002576 E3F0 D0F0 0024          000000F0   3790          STG   15,240(0,13)
0000257C 4110 D0E8               000000E8   3791          LA    1,232(0,13)
00002580 E340 C0F8 0004          00002288   3792          LG    4,@lit_783_121 ; LZ4F_writeLE32
00002586 B904 00F4                          3793          LGR   15,4
0000258A                                    3794 @@gen_label189 DS    0H
0000258A 05EF                               3795          BALR  14,15
0000258C                                    3796 @@gen_label190 DS    0H
                                            3797 * ***       dstPtr += 4;
0000258C 4130 2004               00000004   3798          LA    3,4(0,2)
                                            3799 * ***       headerStart = dstPtr;
                                            3800 * ***
                                            3801 * ***
                                            3802 * ***       *dstPtr++ = (BYTE)(((1 & 0x03) << 6)
00002590 4120 3001               00000001   3803          LA    2,1(0,3)
                                            3804 * ***           + ((cctxPtr->prefs.frameInfo.blockMode & 0x01 ) << 5)
                                            3805 * ***           + ((cctxPtr->prefs.frameInfo.blockChecksumFlag & 0x01 \
                                            3806 * ) << 4)
                                            3807 * ***           + ((unsigned)(cctxPtr->prefs.frameInfo.contentSize > 0\
                                            3808 * ) << 3)
00002594 E559 5010 0000          00000010   3809          CLGHSI 16(5),0
0000259A 47D0 C416               000025A6   3810          BNH   @@gen_label191
0000259E A7F8 0001               00000001   3811          LHI   15,1
000025A2 47F0 C41A               000025AA   3812          B     @@gen_label192
000025A6                                    3813 @@gen_label191 DS 0H
000025A6 A7F8 0000               00000000   3814          LHI   15,0
000025AA                                    3815 @@gen_label192 DS 0H
                                            3816 * ***           + ((cctxPtr->prefs.frameInfo.contentChecksumFlag & 0x0\
                                            3817 * 1 ) << 2)
                                            3818 * ***           +  (cctxPtr->prefs.frameInfo.dictID > 0) );
000025AA E55D 5018 0000          00000018   3819          CLFHSI 24(5),0
000025B0 47D0 C42C               000025BC   3820          BNH   @@gen_label193
000025B4 A718 0001               00000001   3821          LHI   1,1
000025B8 47F0 C430               000025C0   3822          B     @@gen_label194
000025BC                                    3823 @@gen_label193 DS 0H
000025BC A718 0000               00000000   3824          LHI   1,0
000025C0                                    3825 @@gen_label194 DS 0H
000025C0 5870 5004               00000004   3826          L     7,4(0,5)    ; offset of blockMode in 0000027
000025C4 C07B 0000 0001                     3827          NILF  7,X'00000001'
000025CA 8970 0005               00000005   3828          SLL   7,5(0)
000025CE A77A 0040               00000040   3829          AHI   7,64
000025D2 5880 501C               0000001C   3830          L     8,28(0,5)   ; offset of blockChecksumFlag in 0000027
000025D6 C08B 0000 0001                     3831          NILF  8,X'00000001'
000025DC 8980 0004               00000004   3832          SLL   8,4(0)
000025E0 1A78                               3833          AR    7,8
000025E2 89F0 0003               00000003   3834          SLL   15,3(0)
000025E6 1E7F                               3835          ALR   7,15
000025E8 58F0 5008               00000008   3836          L     15,8(0,5)   ; offset of contentChecksumFlag in 0000027
                                                                                                                           Page   81 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000025EC C0FB 0000 0001                     3837          NILF  15,X'00000001'
000025F2 89F0 0002               00000002   3838          SLL   15,2(0)
000025F6 1E7F                               3839          ALR   7,15
000025F8 1E71                               3840          ALR   7,1
000025FA 4270 3000               00000000   3841          STC   7,0(0,3)
                                            3842 * ***
                                            3843 * ***       *dstPtr++ = (BYTE)((cctxPtr->prefs.frameInfo.blockSizeID &\
                                            3844 *  0x07) << 4);
000025FE B904 00F2                          3845          LGR   15,2
00002602 4120 2001               00000001   3846          LA    2,1(0,2)
00002606 5810 5000               00000000   3847          L     1,0(0,5)    ; cctxPtr
0000260A C01B 0000 0007                     3848          NILF  1,X'00000007'
00002610 8910 0004               00000004   3849          SLL   1,4(0)
00002614 4210 F000               00000000   3850          STC   1,0(0,15)
                                            3851 * ***
                                            3852 * ***       if (cctxPtr->prefs.frameInfo.contentSize) {
00002618 E3F0 5010 0002          00000010   3853          LTG   15,16(0,5)  ; offset of contentSize in 0000027
0000261E 4780 C4BA               0000264A   3854          BZ    @L118
                                            3855 * ***           LZ4F_writeLE64(dstPtr, cctxPtr->prefs.frameInfo.conten\
                                            3856 * tSize);
00002622 E320 D0E8 0024          000000E8   3857          STG   2,232(0,13)
00002628 E3F0 5010 0004          00000010   3858          LG    15,16(0,5)
0000262E E3F0 D0F0 0024          000000F0   3859          STG   15,240(0,13)
00002634 4110 D0E8               000000E8   3860          LA    1,232(0,13)
00002638 E3F0 C100 0004          00002290   3861          LG    15,@lit_783_122 ; LZ4F_writeLE64
0000263E                                    3862 @@gen_label196 DS    0H
0000263E 05EF                               3863          BALR  14,15
00002640                                    3864 @@gen_label197 DS    0H
                                            3865 * ***           dstPtr += 8;
00002640 4120 2008               00000008   3866          LA    2,8(0,2)
                                            3867 * ***           cctxPtr->totalInSize = 0;
00002644 E548 5070 0000          00000070   3868          MVGHI 112(5),0    ; offset of totalInSize in LZ4F_cctx_s
                                            3869 * ***       }
0000264A                                    3870 @L118    DS    0H
                                            3871 * ***
                                            3872 * ***       if (cctxPtr->prefs.frameInfo.dictID) {
0000264A E3F0 5018 0012          00000018   3873          LT    15,24(0,5)  ; offset of dictID in 0000027
00002650 4780 C4E4               00002674   3874          BZ    @L119
                                            3875 * ***           LZ4F_writeLE32(dstPtr, cctxPtr->prefs.frameInfo.dictID\
                                            3876 * );
00002654 E320 D0E8 0024          000000E8   3877          STG   2,232(0,13)
0000265A E3F0 5018 0016          00000018   3878          LLGF  15,24(0,5)
00002660 E3F0 D0F0 0024          000000F0   3879          STG   15,240(0,13)
00002666 4110 D0E8               000000E8   3880          LA    1,232(0,13)
0000266A B904 00F4                          3881          LGR   15,4
0000266E                                    3882 @@gen_label199 DS    0H
0000266E 05EF                               3883          BALR  14,15
00002670                                    3884 @@gen_label200 DS    0H
                                            3885 * ***           dstPtr += 4;
00002670 4120 2004               00000004   3886          LA    2,4(0,2)
                                            3887 * ***       }
00002674                                    3888 @L119    DS    0H
                                                                                                                           Page   82 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3889 * ***
                                            3890 * ***       *dstPtr = LZ4F_headerChecksum(headerStart, (size_t)(dstPtr\
                                            3891 *  - headerStart));
00002674 E330 D0E8 0024          000000E8   3892          STG   3,232(0,13)
0000267A B904 00F2                          3893          LGR   15,2
0000267E B909 00F3                          3894          SGR   15,3
00002682 E3F0 D0F0 0024          000000F0   3895          STG   15,240(0,13)
00002688 4110 D0E8               000000E8   3896          LA    1,232(0,13)
0000268C E3F0 C108 0004          00002298   3897          LG    15,@lit_783_124 ; LZ4F_headerChecksum
00002692                                    3898 @@gen_label201 DS    0H
00002692 05EF                               3899          BALR  14,15
00002694                                    3900 @@gen_label202 DS    0H
00002694 42F0 2000               00000000   3901          STC   15,0(0,2)
                                            3902 * ***       dstPtr++;
00002698 41F0 2001               00000001   3903          LA    15,1(0,2)
                                            3904 * ***
                                            3905 * ***       cctxPtr->cStage = 1;
0000269C E54C 503C 0001          0000003C   3906          MVHI  60(5),1     ; offset of cStage in LZ4F_cctx_s
                                            3907 * ***       return (size_t)(dstPtr - dstStart);
000026A2 B909 00F6                          3908          SGR   15,6
                                            3909 * ***   }
000026A6                                    3910 @ret_lab_783 DS 0H
                                            3911 * * **** Start of Epilogue
                                            3912          DCCEPIL
000026A6                                    3913+         ds 0h                                                          01-DCCEP
                                            3914+* Epilog
000026A6 D707 D088 D088 00000088 00000088   3915+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000026AC E3D0 D080 0004          00000080   3916+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000026B2 E3C0 D090 0004          00000090   3917+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000026B8 E3B0 C018 0004          00000018   3918+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000026BE E3C0 B010 0021          00000010   3919+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000026C4 E3E0 D008 0004          00000008   3920+         lg  14,8(0,13)          load up return address                 01-DCCEP
000026CA EB1C D020 0004          00000020   3921+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000026D0 078E                               3922+         bcr 8,14                if same dsab, just return              01-DCCEP
000026D2 E3F0 D010 0024          00000010   3923+         stg 15,16(0,13)         save return code                       01-DCCEP
000026D8 E300 D018 0024          00000018   3924+         stg 0,24(0,13)          save more return code                  01-DCCEP
000026DE E3F0 D090 0004          00000090   3925+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000026E4 E3F0 F018 0004          00000018   3926+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000026EA 47F0 F040               00000040   3927+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3928+* End of Epilog
                                            3929 * * **** End of Epilogue
                                            3930          DROP  12
                                            3931 *
                                            3932 *   DSECT for automatic variables in "LZ4F_compressBegin_usingCDict"
                                            3933 *      (FUNCTION #783)
                                            3934 *
00000000                00000000 000000E2   3935 @AUTO#$L$Z4$F_compress$Begin_using$C$Dict DSECT
00000000                                    3936          DS    XL168
000000A8                                    3937 $L$Z4$F_compress$Begin_using$C$Dict#required$Buff$Size#8 DS 8XL1 ; requ*
                                                                iredBuffSize
000000B0                000000B0 000000A8   3938          ORG   @AUTO#$L$Z4$F_compress$Begin_using$C$Dict+168
000000A8                                    3939 $L$Z4$F_compress$Begin_using$C$Dict#pref$Null#0 DS 56XL1 ; prefNull
                                                                                                                           Page   83 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000E0                000000E0 000000E0   3940          ORG   @AUTO#$L$Z4$F_compress$Begin_using$C$Dict+224
000000E0                                    3941 $L$Z4$F_compress$Begin_using$C$Dict#ctx$Type$I$D#1 DS 1H ; ctxTypeID
                                            3942 *
000026EE                00000000 00006CE8   3943 @CODE    CSECT
                                            3944 *
                                            3945 *
                                            3946 *
                                            3947 * ....... start of LZ4F_compressBegin
                                            3948 $L$Z4$F_compress$Begin ALIAS X'D3E9F4C66D839694979985A2A2C285878995'
000026EE                                    3949 @LNAME767 DS   0H
000026EE 00000012                           3950          DC    X'00000012'
000026F2 D3E9F4C66D839694                   3951          DC    C'LZ4F_compressBegin'
00002704 00                                 3952          DC    X'00'
                                            3953 $L$Z4$F_compress$Begin DCCPRLG CINDEX=767,BASER=12,FRAME=208,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME767
                                            3954          macro
                                            3955          dccextrn &m
                                            3956          gblc    &$dccext(1000)
                                            3957          gbla    &$dccexti
                                            3958          lcla    &i
                                            3959 &$dccext(&$dccexti+1) setc    '&m'
                                            3960 &i       seta    1
                                            3961 .loop    aif    (&i gt &$dccexti).around
                                            3962          aif    ('&$dccext(&i)' eq '&m').getout
                                            3963 &i       seta    &i+1
                                            3964          ago     .loop
                                            3965 .around  anop
                                            3966 &$dccexti seta &$dccexti+1
                                            3967          extrn  &m
                                            3968 .getout  anop
                                            3969          mend
00002708                                    3970+$eye0081    ds    0d                                                    02-DCCCA
00002708 C4C3C3                             3971+         dc cl3'DCC'                                                    02-DCCCA
0000270B 01                                 3972+         dc xl1'01' format one                                          02-DCCCA
0000270C 00000000                           3973+         dc a(0)                                                        02-DCCCA
00002710 000000000000277A                   3974+         dc ad(@PER_767)                                                02-DCCCA
00002718 00000000000000D0                   3975+         dc ad(208)                                                     02-DCCCA
00002720 0000000000000000                   3976+         dc ad(0)                                                       02-DCCCA
00002728 0000000000001000                   3977+         dc ad(4096)                                                    02-DCCCA
00002730 20                                 3978+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002731 03                                 3979+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002732 03                                 3980+         dc al1(3)                                                      02-DCCCA
00002733 08                                 3981+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002734 00                                 3982+         dc bl.8'00000000'                                              02-DCCCA
00002735 000000                             3983+         dc al3(0)                                                      02-DCCCA
00002738 00000000000026EE                   3984+         dc ad(@LNAME767)                                               02-DCCCA
00002740                                    3985+         ds 0d                                                          02-DCCCA
00002740 0000000000002708                   3986+         dc ad($eye0081)                                                02-DCCCA
00002748 0000000000000000                   3987+         dc ad(0)                                                       02-DCCCA
00002750                                    3988+         ds    0d                                                       01-DCCPR
                                            3989+         entry $L$Z4$F_compress$Begin                                   01-DCCPR
00002750                                    3990+$L$Z4$F_compress$Begin ds 0d                                            01-DCCPR
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002750                                    3991+@REGION_767_1 ds 0h                                                     01-DCCPR
00002750 EBEC D008 0024          00000008   3992+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002756 E3E0 D088 0004          00000088   3993+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000275C E3C0 D090 0004          00000090   3994+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002762 B904 002E                          3995+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002766 E3B0 C018 0004          00000018   3996+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000276C A7EB 00D0               000000D0   3997+         aghi  14,208              increase by frame size               01-DCCPR
00002770 E3E0 C020 0021          00000020   3998+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002776 4720 B020               00000020   3999+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000277A                                    4000+@PER_767 ds    0h                                                       01-DCCPR
0000277A EBDE 2080 0024          00000080   4001+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002780 E3C0 2090 0024          00000090   4002+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002786 B904 00D2                          4003+         lgr   13,2                set real frame pointer               01-DCCPR
0000278A B904 00CF                          4004+         lgr   12,15               set base reg                         01-DCCPR
                        00002750            4005+         using @REGION_767_1,12                                         01-DCCPR
                                            4006 * ******* End of Prologue
                                            4007 * *
                                            4008 * ***       return LZ4F_compressBegin_usingCDict(cctxPtr, dstBuffer, d\
                                            4009 * stCapacity,
                                            4010 * ***                                            ((void *)0), preferen\
                                            4011 * cesPtr);
0000278E E3F0 1000 0004          00000000   4012          LG    15,0(0,1)   ; cctxPtr
00002794 E3F0 D0A8 0024          000000A8   4013          STG   15,168(0,13)
0000279A E3F0 1008 0004          00000008   4014          LG    15,8(0,1)   ; dstBuffer
000027A0 E3F0 D0B0 0024          000000B0   4015          STG   15,176(0,13)
000027A6 E3F0 1010 0004          00000010   4016          LG    15,16(0,1)  ; dstCapacity
000027AC E3F0 D0B8 0024          000000B8   4017          STG   15,184(0,13)
000027B2 D707 D0C0 D0C0 000000C0 000000C0   4018          XC    192(8,13),192(13)
000027B8 E3F0 1018 0004          00000018   4019          LG    15,24(0,1)  ; preferencesPtr
000027BE E3F0 D0C8 0024          000000C8   4020          STG   15,200(0,13)
000027C4 4110 D0A8               000000A8   4021          LA    1,168(0,13)
000027C8 E3F0 C0D0 0004          00002820   4022          LG    15,@lit_767_126 ; LZ4F_compressBegin_usingCDict
000027CE                                    4023 @@gen_label203 DS    0H
000027CE 05EF                               4024          BALR  14,15
000027D0                                    4025 @@gen_label204 DS    0H
                                            4026 * ***   }
                                            4027 * * **** Start of Epilogue
                                            4028          DCCEPIL
000027D0                                    4029+         ds 0h                                                          01-DCCEP
                                            4030+* Epilog
000027D0 D707 D088 D088 00000088 00000088   4031+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000027D6 E3D0 D080 0004          00000080   4032+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000027DC E3C0 D090 0004          00000090   4033+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000027E2 E3B0 C018 0004          00000018   4034+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000027E8 E3C0 B010 0021          00000010   4035+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000027EE E3E0 D008 0004          00000008   4036+         lg  14,8(0,13)          load up return address                 01-DCCEP
000027F4 EB1C D020 0004          00000020   4037+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000027FA 078E                               4038+         bcr 8,14                if same dsab, just return              01-DCCEP
000027FC E3F0 D010 0024          00000010   4039+         stg 15,16(0,13)         save return code                       01-DCCEP
00002802 E300 D018 0024          00000018   4040+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002808 E3F0 D090 0004          00000090   4041+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000280E E3F0 F018 0004          00000018   4042+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   85 
  Active Usings: @REGION_767_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002814 47F0 F040               00000040   4043+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4044+* End of Epilog
                                            4045 * * **** End of Epilogue
00002818                                    4046          DS    0D
00002818 000000D0                           4047 @FRAMESIZE_767 DC F'208'
0000281C 00000000
00002820 0000000000002190                   4048 @lit_767_126 DC AD($L$Z4$F_compress$Begin_using$C$Dict)
                                            4049          DROP  12
                                            4050 *
                                            4051 *   DSECT for automatic variables in "LZ4F_compressBegin"
                                            4052 *      (FUNCTION #767)
                                            4053 *
00000000                00000000 000000A8   4054 @AUTO#$L$Z4$F_compress$Begin DSECT
00000000                                    4055          DS    XL168
                                            4056 *
00002828                00000000 00006CE8   4057 @CODE    CSECT
                                            4058 *
                                            4059 *
                                            4060 *
                                            4061 * ....... start of LZ4F_compressBound
                                            4062 $L$Z4$F_compress$Bound ALIAS X'D3E9F4C66D839694979985A2A2C296A49584'
00002828                                    4063 @LNAME768 DS   0H
00002828 00000012                           4064          DC    X'00000012'
0000282C D3E9F4C66D839694                   4065          DC    C'LZ4F_compressBound'
0000283E 00                                 4066          DC    X'00'
                                            4067 $L$Z4$F_compress$Bound DCCPRLG CINDEX=768,BASER=12,FRAME=192,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME768
                                            4068          macro
                                            4069          dccextrn &m
                                            4070          gblc    &$dccext(1000)
                                            4071          gbla    &$dccexti
                                            4072          lcla    &i
                                            4073 &$dccext(&$dccexti+1) setc    '&m'
                                            4074 &i       seta    1
                                            4075 .loop    aif    (&i gt &$dccexti).around
                                            4076          aif    ('&$dccext(&i)' eq '&m').getout
                                            4077 &i       seta    &i+1
                                            4078          ago     .loop
                                            4079 .around  anop
                                            4080 &$dccexti seta &$dccexti+1
                                            4081          extrn  &m
                                            4082 .getout  anop
                                            4083          mend
00002840                                    4084+$eye0084    ds    0d                                                    02-DCCCA
00002840 C4C3C3                             4085+         dc cl3'DCC'                                                    02-DCCCA
00002843 01                                 4086+         dc xl1'01' format one                                          02-DCCCA
00002844 00000000                           4087+         dc a(0)                                                        02-DCCCA
00002848 00000000000028B2                   4088+         dc ad(@PER_768)                                                02-DCCCA
00002850 00000000000000C0                   4089+         dc ad(192)                                                     02-DCCCA
00002858 0000000000000000                   4090+         dc ad(0)                                                       02-DCCCA
00002860 0000000000001000                   4091+         dc ad(4096)                                                    02-DCCCA
00002868 20                                 4092+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002869 03                                 4093+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000286A 03                                 4094+         dc al1(3)                                                      02-DCCCA
0000286B 08                                 4095+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000286C 00                                 4096+         dc bl.8'00000000'                                              02-DCCCA
0000286D 000000                             4097+         dc al3(0)                                                      02-DCCCA
00002870 0000000000002828                   4098+         dc ad(@LNAME768)                                               02-DCCCA
00002878                                    4099+         ds 0d                                                          02-DCCCA
00002878 0000000000002840                   4100+         dc ad($eye0084)                                                02-DCCCA
00002880 0000000000000000                   4101+         dc ad(0)                                                       02-DCCCA
00002888                                    4102+         ds    0d                                                       01-DCCPR
                                            4103+         entry $L$Z4$F_compress$Bound                                   01-DCCPR
00002888                                    4104+$L$Z4$F_compress$Bound ds 0d                                            01-DCCPR
00002888                                    4105+@REGION_768_1 ds 0h                                                     01-DCCPR
00002888 EBEC D008 0024          00000008   4106+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000288E E3E0 D088 0004          00000088   4107+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002894 E3C0 D090 0004          00000090   4108+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000289A B904 002E                          4109+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000289E E3B0 C018 0004          00000018   4110+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000028A4 A7EB 00C0               000000C0   4111+         aghi  14,192              increase by frame size               01-DCCPR
000028A8 E3E0 C020 0021          00000020   4112+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000028AE 4720 B020               00000020   4113+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000028B2                                    4114+@PER_768 ds    0h                                                       01-DCCPR
000028B2 EBDE 2080 0024          00000080   4115+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000028B8 E3C0 2090 0024          00000090   4116+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000028BE B904 00D2                          4117+         lgr   13,2                set real frame pointer               01-DCCPR
000028C2 B904 00CF                          4118+         lgr   12,15               set base reg                         01-DCCPR
                        00002888            4119+         using @REGION_768_1,12                                         01-DCCPR
                                            4120 * ******* End of Prologue
                                            4121 * *
                                            4122 * ***       if (preferencesPtr && preferencesPtr->autoFlush) {
000028C6 E3F0 1008 0004          00000008   4123          LG    15,8(0,1)   ; preferencesPtr
000028CC B902 002F                          4124          LTGR  2,15
000028D0 4780 C090               00002918   4125          BZ    @L120
000028D4 E320 F024 0012          00000024   4126          LT    2,36(0,15)  ; offset of autoFlush in 0000028
000028DA 4780 C090               00002918   4127          BZ    @L120
                                            4128 * ***           return LZ4F_compressBound_internal(srcSize, preference\
                                            4129 * sPtr, 0);
000028DE E310 1000 0004          00000000   4130          LG    1,0(0,1)    ; srcSize
000028E4 E310 D0A8 0024          000000A8   4131          STG   1,168(0,13)
000028EA E3F0 D0B0 0024          000000B0   4132          STG   15,176(0,13)
000028F0 D707 D0B8 D0B8 000000B8 000000B8   4133          XC    184(8,13),184(13)
000028F6 4110 D0A8               000000A8   4134          LA    1,168(0,13)
000028FA E3F0 C088 0004          00002910   4135          LG    15,@lit_768_128 ; LZ4F_compressBound_internal
00002900                                    4136 @@gen_label207 DS    0H
00002900 05EF                               4137          BALR  14,15
00002902                                    4138 @@gen_label208 DS    0H
00002902 47F0 C0B4               0000293C   4139          B     @ret_lab_768
00002908                                    4140          DS    0D
00002908 000000C0                           4141 @FRAMESIZE_768 DC F'192'
0000290C 00000000
00002910 0000000000000F20                   4142 @lit_768_128 DC AD($L$Z4$F_compress$Bound_internal)
                                            4143 * ***       }
                                                                                                                           Page   87 
  Active Usings: @REGION_768_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002918                                    4144 @L120    DS    0H
                                            4145 * ***       return LZ4F_compressBound_internal(srcSize, preferencesPtr\
                                            4146 * , (size_t)-1);
00002918 E310 1000 0004          00000000   4147          LG    1,0(0,1)    ; srcSize
0000291E E310 D0A8 0024          000000A8   4148          STG   1,168(0,13)
00002924 E3F0 D0B0 0024          000000B0   4149          STG   15,176(0,13)
0000292A E548 D0B8 FFFF          000000B8   4150          MVGHI 184(13),-1
00002930 4110 D0A8               000000A8   4151          LA    1,168(0,13)
00002934 E3F0 C088 0004          00002910   4152          LG    15,@lit_768_128 ; LZ4F_compressBound_internal
0000293A                                    4153 @@gen_label209 DS    0H
0000293A 05EF                               4154          BALR  14,15
0000293C                                    4155 @@gen_label210 DS    0H
                                            4156 * ***   }
0000293C                                    4157 @ret_lab_768 DS 0H
                                            4158 * * **** Start of Epilogue
                                            4159          DCCEPIL
0000293C                                    4160+         ds 0h                                                          01-DCCEP
                                            4161+* Epilog
0000293C D707 D088 D088 00000088 00000088   4162+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002942 E3D0 D080 0004          00000080   4163+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002948 E3C0 D090 0004          00000090   4164+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000294E E3B0 C018 0004          00000018   4165+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002954 E3C0 B010 0021          00000010   4166+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000295A E3E0 D008 0004          00000008   4167+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002960 EB1C D020 0004          00000020   4168+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002966 078E                               4169+         bcr 8,14                if same dsab, just return              01-DCCEP
00002968 E3F0 D010 0024          00000010   4170+         stg 15,16(0,13)         save return code                       01-DCCEP
0000296E E300 D018 0024          00000018   4171+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002974 E3F0 D090 0004          00000090   4172+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000297A E3F0 F018 0004          00000018   4173+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002980 47F0 F040               00000040   4174+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4175+* End of Epilog
                                            4176 * * **** End of Epilogue
                                            4177          DROP  12
                                            4178 *
                                            4179 *   DSECT for automatic variables in "LZ4F_compressBound"
                                            4180 *      (FUNCTION #768)
                                            4181 *
00000000                00000000 000000A8   4182 @AUTO#$L$Z4$F_compress$Bound DSECT
00000000                                    4183          DS    XL168
                                            4184 *
00002984                00000000 00006CE8   4185 @CODE    CSECT
                                            4186 *
                                            4187 *
                                            4188 *
                                            4189 * ....... start of LZ4F_makeBlock
00002984                                    4190 @LNAME890 DS   0H
00002984 0000000E                           4191          DC    X'0000000E'
00002988 D3E9F4C66D948192                   4192          DC    C'LZ4F_makeBlock'
00002996 00                                 4193          DC    X'00'
                                            4194 $L$Z4$F_make$Block DCCPRLG CINDEX=890,BASER=12,FRAME=232,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME890
                                                                                                                           Page   88 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4195          macro
                                            4196          dccextrn &m
                                            4197          gblc    &$dccext(1000)
                                            4198          gbla    &$dccexti
                                            4199          lcla    &i
                                            4200 &$dccext(&$dccexti+1) setc    '&m'
                                            4201 &i       seta    1
                                            4202 .loop    aif    (&i gt &$dccexti).around
                                            4203          aif    ('&$dccext(&i)' eq '&m').getout
                                            4204 &i       seta    &i+1
                                            4205          ago     .loop
                                            4206 .around  anop
                                            4207 &$dccexti seta &$dccexti+1
                                            4208          extrn  &m
                                            4209 .getout  anop
                                            4210          mend
00002998                                    4211+$eye0087    ds    0d                                                    02-DCCCA
00002998 C4C3C3                             4212+         dc cl3'DCC'                                                    02-DCCCA
0000299B 01                                 4213+         dc xl1'01' format one                                          02-DCCCA
0000299C 00000000                           4214+         dc a(0)                                                        02-DCCCA
000029A0 0000000000002A0A                   4215+         dc ad(@PER_890)                                                02-DCCCA
000029A8 00000000000000E8                   4216+         dc ad(232)                                                     02-DCCCA
000029B0 0000000000000000                   4217+         dc ad(0)                                                       02-DCCCA
000029B8 0000000000001000                   4218+         dc ad(4096)                                                    02-DCCCA
000029C0 20                                 4219+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000029C1 03                                 4220+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000029C2 03                                 4221+         dc al1(3)                                                      02-DCCCA
000029C3 08                                 4222+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000029C4 00                                 4223+         dc bl.8'00000000'                                              02-DCCCA
000029C5 000000                             4224+         dc al3(0)                                                      02-DCCCA
000029C8 0000000000002984                   4225+         dc ad(@LNAME890)                                               02-DCCCA
000029D0                                    4226+         ds 0d                                                          02-DCCCA
000029D0 0000000000002998                   4227+         dc ad($eye0087)                                                02-DCCCA
000029D8 0000000000000000                   4228+         dc ad(0)                                                       02-DCCCA
000029E0                                    4229+         ds    0d                                                       01-DCCPR
000029E0                                    4230+$L$Z4$F_make$Block ds 0d                                                01-DCCPR
000029E0                                    4231+@REGION_890_1 ds 0h                                                     01-DCCPR
000029E0 EBEC D008 0024          00000008   4232+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000029E6 E3E0 D088 0004          00000088   4233+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000029EC E3C0 D090 0004          00000090   4234+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000029F2 B904 002E                          4235+         lgr   2,14                copy addr of our savearea            01-DCCPR
000029F6 E3B0 C018 0004          00000018   4236+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000029FC A7EB 00E8               000000E8   4237+         aghi  14,232              increase by frame size               01-DCCPR
00002A00 E3E0 C020 0021          00000020   4238+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002A06 4720 B020               00000020   4239+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002A0A                                    4240+@PER_890 ds    0h                                                       01-DCCPR
00002A0A EBDE 2080 0024          00000080   4241+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002A10 E3C0 2090 0024          00000090   4242+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002A16 B904 00D2                          4243+         lgr   13,2                set real frame pointer               01-DCCPR
00002A1A B904 00CF                          4244+         lgr   12,15               set base reg                         01-DCCPR
                        000029E0            4245+         using @REGION_890_1,12                                         01-DCCPR
00002A1E B904 0051                          4246          LGR   5,1         ; ptr to parm area
                                                                                                                           Page   89 
  Active Usings: @REGION_890_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4247 * ******* End of Prologue
                                            4248 * *
                                            4249 * ***       BYTE* const cSizePtr = (BYTE*)dst;
00002A22 E330 5010 0004          00000010   4250          LG    3,16(0,5)   ; srcSize
00002A28 E340 5000 0004          00000000   4251          LG    4,0(0,5)    ; dst
                                            4252 * ***       U32 cSize = (U32)compress(lz4ctx, (const char*)src, (char*\
                                            4253 * )(cSizePtr+BHSize),
                                            4254 * ***                                         (int)(srcSize), (int)(sr\
                                            4255 * cSize-1),
                                            4256 * ***                                         level, cdict);
00002A2E E3F0 5020 0004          00000020   4257          LG    15,32(0,5)  ; lz4ctx
00002A34 E3F0 D0B0 0024          000000B0   4258          STG   15,176(0,13)
00002A3A E3F0 5008 0004          00000008   4259          LG    15,8(0,5)   ; src
00002A40 E3F0 D0B8 0024          000000B8   4260          STG   15,184(0,13)
00002A46 E360 C138 0004          00002B18   4261          LG    6,@lit_890_131
00002A4C E3F0 6058 0004          00000058   4262          LG    15,88(0,6)  ; BHSize
00002A52 41FF 4000               00000000   4263          LA    15,0(15,4)
00002A56 E3F0 D0C0 0024          000000C0   4264          STG   15,192(0,13)
00002A5C B914 00F3                          4265          LGFR  15,3
00002A60 E3F0 D0C8 0024          000000C8   4266          STG   15,200(0,13)
00002A66 B904 00F3                          4267          LGR   15,3
00002A6A A7FB FFFF               0000FFFF   4268          AGHI  15,-1
00002A6E B914 00FF                          4269          LGFR  15,15
00002A72 E3F0 D0D0 0024          000000D0   4270          STG   15,208(0,13)
00002A78 E3F0 502C 0014          0000002C   4271          LGF   15,44(0,5)  ; level
00002A7E E3F0 D0D8 0024          000000D8   4272          STG   15,216(0,13)
00002A84 E3F0 5030 0004          00000030   4273          LG    15,48(0,5)  ; cdict
00002A8A E3F0 D0E0 0024          000000E0   4274          STG   15,224(0,13)
00002A90 E3F0 5018 0004          00000018   4275          LG    15,24(0,5)  ; compress
00002A96 4110 D0B0               000000B0   4276          LA    1,176(0,13)
00002A9A                                    4277 @@gen_label211 DS    0H
00002A9A 05EF                               4278          BALR  14,15
00002A9C                                    4279 @@gen_label212 DS    0H
00002A9C 122F                               4280          LTR   2,15        ; cSize
                                            4281 * ***       if (cSize == 0) {
00002A9E 4770 C158               00002B38   4282          BNE   @L121
                                            4283 * ***           {};
                                            4284 * ***           cSize = (U32)srcSize;
00002AA2 1823                               4285          LR    2,3         ; cSize
                                            4286 * ***           LZ4F_writeLE32(cSizePtr, cSize | 0x80000000U);
00002AA4 E340 D0B0 0024          000000B0   4287          STG   4,176(0,13)
00002AAA 18F3                               4288          LR    15,3
00002AAC A5FA 8000               00008000   4289          OILH  15,32768
00002AB0 B916 00FF                          4290          LLGFR 15,15
00002AB4 E3F0 D0B8 0024          000000B8   4291          STG   15,184(0,13)
00002ABA 4110 D0B0               000000B0   4292          LA    1,176(0,13)
00002ABE E3F0 C140 0004          00002B20   4293          LG    15,@lit_890_132 ; LZ4F_writeLE32
00002AC4                                    4294 @@gen_label214 DS    0H
00002AC4 05EF                               4295          BALR  14,15
00002AC6                                    4296 @@gen_label215 DS    0H
                                            4297 * ***           __memcpy(cSizePtr+BHSize,src,srcSize);
00002AC6 E3F0 6058 0004          00000058   4298          LG    15,88(0,6)  ; BHSize
                                                                                                                           Page   90 
  Active Usings: @REGION_890_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002ACC E310 5008 0004          00000008   4299          LG    1,8(0,5)
00002AD2 416F 4000               00000000   4300          LA    6,0(15,4)
00002AD6 B902 00F3                          4301          LTGR  15,3
00002ADA 4780 C174               00002B54   4302          BZ    @L122
00002ADE A7FB FFFF               0000FFFF   4303          AGHI  15,-1
00002AE2 EB3F 0008 000A          00000008   4304          SRAG  3,15,8(0)
00002AE8 B902 0033                          4305          LTGR  3,3
00002AEC 4780 C124               00002B04   4306          BZ    @@gen_label217
00002AF0                                    4307 @@gen_label216 DS 0H
00002AF0 D2FF 6000 1000 00000000 00000000   4308          MVC   0(256,6),0(1)
00002AF6 4160 6100               00000100   4309          LA    6,256(0,6)
00002AFA 4110 1100               00000100   4310          LA    1,256(0,1)
00002AFE E330 C110 0046          00002AF0   4311          BCTG  3,@@gen_label216
00002B04                                    4312 @@gen_label217 DS 0H
00002B04 44F0 C148               00002B28   4313          EX    15,@lit_890_133
00002B08                                    4314 @@gen_label218 DS 0H
                                            4315 * ***       } else {
00002B08 47F0 C174               00002B54   4316          B     @L122
00002B10                                    4317          DS    0D
00002B10 000000E8                           4318 @FRAMESIZE_890 DC F'232'
00002B14 00000000
00002B18 0000000000006CE8                   4319 @lit_890_131 DC AD(@DATA)
00002B20 00000000000004E8                   4320 @lit_890_132 DC AD($L$Z4$F_write$L$E32)
00002B28 D200 6000 1000 00000000 00000000   4321 @lit_890_133          MVC 0(1,6),0(1)
00002B2E 0000
00002B30 0000000000000000                   4322 @lit_890_136 DC AD($X$X$H32)
00002B38                                    4323 @L121    DS    0H
                                            4324 * ***           LZ4F_writeLE32(cSizePtr, cSize);
00002B38 E340 D0B0 0024          000000B0   4325          STG   4,176(0,13)
00002B3E B916 00F2                          4326          LLGFR 15,2
00002B42 E3F0 D0B8 0024          000000B8   4327          STG   15,184(0,13)
00002B48 4110 D0B0               000000B0   4328          LA    1,176(0,13)
00002B4C E3F0 C140 0004          00002B20   4329          LG    15,@lit_890_132 ; LZ4F_writeLE32
00002B52                                    4330 @@gen_label219 DS    0H
00002B52 05EF                               4331          BALR  14,15
00002B54                                    4332 @@gen_label220 DS    0H
                                            4333 * ***       }
00002B54                                    4334 @L122    DS    0H
                                            4335 * ***       if (crcFlag) {
00002B54 E330 503C 0012          0000003C   4336          LT    3,60(0,5)   ; crcFlag
00002B5A 4780 C1DE               00002BBE   4337          BZ    @L123
                                            4338 * ***           U32 const crc32 = XXH32(cSizePtr+BHSize, cSize, 0);
00002B5E E350 C138 0004          00002B18   4339          LG    5,@lit_890_131
00002B64 E3F0 5058 0004          00000058   4340          LG    15,88(0,5)  ; BHSize
00002B6A 41FF 4000               00000000   4341          LA    15,0(15,4)
00002B6E E3F0 D0B0 0024          000000B0   4342          STG   15,176(0,13)
00002B74 B916 00F2                          4343          LLGFR 15,2
00002B78 E3F0 D0B8 0024          000000B8   4344          STG   15,184(0,13)
00002B7E D707 D0C0 D0C0 000000C0 000000C0   4345          XC    192(8,13),192(13)
00002B84 4110 D0B0               000000B0   4346          LA    1,176(0,13)
00002B88 E3F0 C150 0004          00002B30   4347          LG    15,@lit_890_136 ; XXH32
00002B8E                                    4348 @@gen_label222 DS    0H
                                                                                                                           Page   91 
  Active Usings: @REGION_890_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002B8E 05EF                               4349          BALR  14,15
00002B90                                    4350 @@gen_label223 DS    0H
                                            4351 * ***           LZ4F_writeLE32(cSizePtr+BHSize+cSize, crc32);
00002B90 E310 5058 0004          00000058   4352          LG    1,88(0,5)   ; BHSize
00002B96 B916 0052                          4353          LLGFR 5,2
00002B9A 4111 5000               00000000   4354          LA    1,0(1,5)
00002B9E 4111 4000               00000000   4355          LA    1,0(1,4)
00002BA2 E310 D0B0 0024          000000B0   4356          STG   1,176(0,13)
00002BA8 B916 00FF                          4357          LLGFR 15,15
00002BAC E3F0 D0B8 0024          000000B8   4358          STG   15,184(0,13)
00002BB2 4110 D0B0               000000B0   4359          LA    1,176(0,13)
00002BB6 E3F0 C140 0004          00002B20   4360          LG    15,@lit_890_132 ; LZ4F_writeLE32
00002BBC                                    4361 @@gen_label224 DS    0H
00002BBC 05EF                               4362          BALR  14,15
00002BBE                                    4363 @@gen_label225 DS    0H
                                            4364 * ***       }
00002BBE                                    4365 @L123    DS    0H
                                            4366 * ***       return BHSize + cSize + ((U32)crcFlag)*BFSize;
00002BBE E3F0 C138 0004          00002B18   4367          LG    15,@lit_890_131
00002BC4 B916 0012                          4368          LLGFR 1,2
00002BC8 E310 F058 000A          00000058   4369          ALG   1,88(0,15)
00002BCE B916 0023                          4370          LLGFR 2,3
00002BD2 E3F0 F060 0004          00000060   4371          LG    15,96(0,15) ; BFSize
00002BD8 B90C 002F                          4372          MSGR  2,15
00002BDC B90A 0012                          4373          ALGR  1,2
00002BE0 B904 00F1                          4374          LGR   15,1
                                            4375 * ***   }
                                            4376 * * **** Start of Epilogue
                                            4377          DCCEPIL
00002BE4                                    4378+         ds 0h                                                          01-DCCEP
                                            4379+* Epilog
00002BE4 D707 D088 D088 00000088 00000088   4380+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002BEA E3D0 D080 0004          00000080   4381+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002BF0 E3C0 D090 0004          00000090   4382+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002BF6 E3B0 C018 0004          00000018   4383+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002BFC E3C0 B010 0021          00000010   4384+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002C02 E3E0 D008 0004          00000008   4385+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002C08 EB1C D020 0004          00000020   4386+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002C0E 078E                               4387+         bcr 8,14                if same dsab, just return              01-DCCEP
00002C10 E3F0 D010 0024          00000010   4388+         stg 15,16(0,13)         save return code                       01-DCCEP
00002C16 E300 D018 0024          00000018   4389+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002C1C E3F0 D090 0004          00000090   4390+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002C22 E3F0 F018 0004          00000018   4391+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002C28 47F0 F040               00000040   4392+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4393+* End of Epilog
                                            4394 * * **** End of Epilogue
                                            4395          DROP  12
                                            4396 *
                                            4397 *   DSECT for automatic variables in "LZ4F_makeBlock"
                                            4398 *      (FUNCTION #890)
                                            4399 *
00000000                00000000 000000AC   4400 @AUTO#$L$Z4$F_make$Block DSECT
                                                                                                                           Page   92 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                                    4401          DS    XL168
000000A8                                    4402 $L$Z4$F_make$Block#crc32#4 DS 1F ; crc32
000000AC                000000AC 000000A8   4403          ORG   @AUTO#$L$Z4$F_make$Block+168
000000A8                                    4404 $L$Z4$F_make$Block#c$Size#0 DS 1F ; cSize
                                            4405 *
00002C2C                00000000 00006CE8   4406 @CODE    CSECT
                                            4407 *
                                            4408 *
                                            4409 *
                                            4410 * ....... start of LZ4F_compressBlock
00002C2C                                    4411 @LNAME891 DS   0H
00002C2C 00000012                           4412          DC    X'00000012'
00002C30 D3E9F4C66D839694                   4413          DC    C'LZ4F_compressBlock'
00002C42 00                                 4414          DC    X'00'
                                            4415 $L$Z4$F_compress$Block DCCPRLG CINDEX=891,BASER=12,FRAME=224,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME891
                                            4416          macro
                                            4417          dccextrn &m
                                            4418          gblc    &$dccext(1000)
                                            4419          gbla    &$dccexti
                                            4420          lcla    &i
                                            4421 &$dccext(&$dccexti+1) setc    '&m'
                                            4422 &i       seta    1
                                            4423 .loop    aif    (&i gt &$dccexti).around
                                            4424          aif    ('&$dccext(&i)' eq '&m').getout
                                            4425 &i       seta    &i+1
                                            4426          ago     .loop
                                            4427 .around  anop
                                            4428 &$dccexti seta &$dccexti+1
                                            4429          extrn  &m
                                            4430 .getout  anop
                                            4431          mend
00002C48                                    4432+$eye0090    ds    0d                                                    02-DCCCA
00002C48 C4C3C3                             4433+         dc cl3'DCC'                                                    02-DCCCA
00002C4B 01                                 4434+         dc xl1'01' format one                                          02-DCCCA
00002C4C 00000000                           4435+         dc a(0)                                                        02-DCCCA
00002C50 0000000000002CBA                   4436+         dc ad(@PER_891)                                                02-DCCCA
00002C58 00000000000000E0                   4437+         dc ad(224)                                                     02-DCCCA
00002C60 0000000000000000                   4438+         dc ad(0)                                                       02-DCCCA
00002C68 0000000000001000                   4439+         dc ad(4096)                                                    02-DCCCA
00002C70 20                                 4440+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002C71 03                                 4441+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002C72 03                                 4442+         dc al1(3)                                                      02-DCCCA
00002C73 08                                 4443+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002C74 00                                 4444+         dc bl.8'00000000'                                              02-DCCCA
00002C75 000000                             4445+         dc al3(0)                                                      02-DCCCA
00002C78 0000000000002C2C                   4446+         dc ad(@LNAME891)                                               02-DCCCA
00002C80                                    4447+         ds 0d                                                          02-DCCCA
00002C80 0000000000002C48                   4448+         dc ad($eye0090)                                                02-DCCCA
00002C88 0000000000000000                   4449+         dc ad(0)                                                       02-DCCCA
00002C90                                    4450+         ds    0d                                                       01-DCCPR
00002C90                                    4451+$L$Z4$F_compress$Block ds 0d                                            01-DCCPR
                                                                                                                           Page   93 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002C90                                    4452+@REGION_891_1 ds 0h                                                     01-DCCPR
00002C90 EBEC D008 0024          00000008   4453+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002C96 E3E0 D088 0004          00000088   4454+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002C9C E3C0 D090 0004          00000090   4455+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002CA2 B904 002E                          4456+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002CA6 E3B0 C018 0004          00000018   4457+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002CAC A7EB 00E0               000000E0   4458+         aghi  14,224              increase by frame size               01-DCCPR
00002CB0 E3E0 C020 0021          00000020   4459+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002CB6 4720 B020               00000020   4460+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002CBA                                    4461+@PER_891 ds    0h                                                       01-DCCPR
00002CBA EBDE 2080 0024          00000080   4462+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002CC0 E3C0 2090 0024          00000090   4463+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002CC6 B904 00D2                          4464+         lgr   13,2                set real frame pointer               01-DCCPR
00002CCA B904 00CF                          4465+         lgr   12,15               set base reg                         01-DCCPR
                        00002C90            4466+         using @REGION_891_1,12                                         01-DCCPR
00002CCE B904 0041                          4467          LGR   4,1         ; ptr to parm area
                                            4468 * ******* End of Prologue
                                            4469 * *
                                            4470 * ***       int const acceleration = (level < 0) ? -level + 1 : 1;
00002CD2 E320 4000 0004          00000000   4471          LG    2,0(0,4)    ; ctx
00002CD8 E3F0 402C 0012          0000002C   4472          LT    15,44(0,4)  ; level
00002CDE 47B0 C080               00002D10   4473          BNL   @L124
00002CE2 133F                               4474          LCR   3,15
00002CE4 A73A 0001               00000001   4475          AHI   3,1
00002CE8 47F0 C084               00002D14   4476          B     @L125
00002CF0                                    4477          DS    0D
00002CF0 000000E0                           4478 @FRAMESIZE_891 DC F'224'
00002CF4 00000000
00002CF8 0000000000001FC0                   4479 @lit_891_141 DC AD($L$Z4$F_init$Stream)
00002D00 0000000000000000                   4480 @lit_891_142 DC AD($L$Z4_compress_fast_continue)
00002D08 0000000000000000                   4481 @lit_891_143 DC AD($L$Z4_compress_fast_ext$State_fast$Reset)
00002D10                                    4482 @L124    DS    0H
00002D10 A738 0001               00000001   4483          LHI   3,1         ; 1
00002D14                                    4484 @L125    DS    0H
                                            4485 * ***       LZ4F_initStream(ctx, cdict, level, LZ4F_blockIndependent);
00002D14 E320 D0B0 0024          000000B0   4486          STG   2,176(0,13)
00002D1A E310 4030 0004          00000030   4487          LG    1,48(0,4)   ; cdict
00002D20 E310 D0B8 0024          000000B8   4488          STG   1,184(0,13)
00002D26 B914 00FF                          4489          LGFR  15,15
00002D2A E3F0 D0C0 0024          000000C0   4490          STG   15,192(0,13)
00002D30 E548 D0C8 0001          000000C8   4491          MVGHI 200(13),1
00002D36 4110 D0B0               000000B0   4492          LA    1,176(0,13)
00002D3A E3F0 C068 0004          00002CF8   4493          LG    15,@lit_891_141 ; LZ4F_initStream
00002D40                                    4494 @@gen_label227 DS    0H
00002D40 05EF                               4495          BALR  14,15
00002D42                                    4496 @@gen_label228 DS    0H
                                            4497 * ***       if (cdict) {
00002D42 E3F0 4030 0002          00000030   4498          LTG   15,48(0,4)  ; cdict
00002D48 4780 C110               00002DA0   4499          BZ    @L126
                                            4500 * ***           return LZ4_compress_fast_continue((LZ4_stream_t*)ctx, \
                                            4501 * src, dst, srcSize, dstCapacity, acceleration);
00002D4C E320 D0B0 0024          000000B0   4502          STG   2,176(0,13)
                                                                                                                           Page   94 
  Active Usings: @REGION_891_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002D52 E3F0 4008 0004          00000008   4503          LG    15,8(0,4)   ; src
00002D58 E3F0 D0B8 0024          000000B8   4504          STG   15,184(0,13)
00002D5E E3F0 4010 0004          00000010   4505          LG    15,16(0,4)  ; dst
00002D64 E3F0 D0C0 0024          000000C0   4506          STG   15,192(0,13)
00002D6A E3F0 401C 0014          0000001C   4507          LGF   15,28(0,4)  ; srcSize
00002D70 E3F0 D0C8 0024          000000C8   4508          STG   15,200(0,13)
00002D76 E3F0 4024 0014          00000024   4509          LGF   15,36(0,4)  ; dstCapacity
00002D7C E3F0 D0D0 0024          000000D0   4510          STG   15,208(0,13)
00002D82 B914 00F3                          4511          LGFR  15,3
00002D86 E3F0 D0D8 0024          000000D8   4512          STG   15,216(0,13)
00002D8C 4110 D0B0               000000B0   4513          LA    1,176(0,13)
00002D90 E3F0 C070 0004          00002D00   4514          LG    15,@lit_891_142 ; LZ4_compress_fast_continue
00002D96                                    4515 @@gen_label230 DS    0H
00002D96 05EF                               4516          BALR  14,15
00002D98                                    4517 @@gen_label231 DS    0H
00002D98 B914 00FF                          4518          LGFR  15,15
00002D9C 47F0 C160               00002DF0   4519          B     @ret_lab_891
                                            4520 * ***       } else {
00002DA0                                    4521 @L126    DS    0H
                                            4522 * ***           return LZ4_compress_fast_extState_fastReset(ctx, src, \
                                            4523 * dst, srcSize, dstCapacity, acceleration);
00002DA0 E320 D0B0 0024          000000B0   4524          STG   2,176(0,13)
00002DA6 E3F0 4008 0004          00000008   4525          LG    15,8(0,4)   ; src
00002DAC E3F0 D0B8 0024          000000B8   4526          STG   15,184(0,13)
00002DB2 E3F0 4010 0004          00000010   4527          LG    15,16(0,4)  ; dst
00002DB8 E3F0 D0C0 0024          000000C0   4528          STG   15,192(0,13)
00002DBE E3F0 401C 0014          0000001C   4529          LGF   15,28(0,4)  ; srcSize
00002DC4 E3F0 D0C8 0024          000000C8   4530          STG   15,200(0,13)
00002DCA E3F0 4024 0014          00000024   4531          LGF   15,36(0,4)  ; dstCapacity
00002DD0 E3F0 D0D0 0024          000000D0   4532          STG   15,208(0,13)
00002DD6 B914 00F3                          4533          LGFR  15,3
00002DDA E3F0 D0D8 0024          000000D8   4534          STG   15,216(0,13)
00002DE0 4110 D0B0               000000B0   4535          LA    1,176(0,13)
00002DE4 E3F0 C078 0004          00002D08   4536          LG    15,@lit_891_143 ; LZ4_compress_fast_extState_fastReset
00002DEA                                    4537 @@gen_label232 DS    0H
00002DEA 05EF                               4538          BALR  14,15
00002DEC                                    4539 @@gen_label233 DS    0H
00002DEC B914 00FF                          4540          LGFR  15,15
                                            4541 * ***       }
                                            4542 * ***   }
00002DF0                                    4543 @ret_lab_891 DS 0H
                                            4544 * * **** Start of Epilogue
                                            4545          DCCEPIL
00002DF0                                    4546+         ds 0h                                                          01-DCCEP
                                            4547+* Epilog
00002DF0 D707 D088 D088 00000088 00000088   4548+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002DF6 E3D0 D080 0004          00000080   4549+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002DFC E3C0 D090 0004          00000090   4550+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002E02 E3B0 C018 0004          00000018   4551+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002E08 E3C0 B010 0021          00000010   4552+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002E0E E3E0 D008 0004          00000008   4553+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002E14 EB1C D020 0004          00000020   4554+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   95 
  Active Usings: @REGION_891_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002E1A 078E                               4555+         bcr 8,14                if same dsab, just return              01-DCCEP
00002E1C E3F0 D010 0024          00000010   4556+         stg 15,16(0,13)         save return code                       01-DCCEP
00002E22 E300 D018 0024          00000018   4557+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002E28 E3F0 D090 0004          00000090   4558+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E2E E3F0 F018 0004          00000018   4559+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E34 47F0 F040               00000040   4560+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4561+* End of Epilog
                                            4562 * * **** End of Epilogue
                                            4563          DROP  12
                                            4564 *
                                            4565 *   DSECT for automatic variables in "LZ4F_compressBlock"
                                            4566 *      (FUNCTION #891)
                                            4567 *
00000000                00000000 000000AC   4568 @AUTO#$L$Z4$F_compress$Block DSECT
00000000                                    4569          DS    XL168
000000A8                                    4570 $L$Z4$F_compress$Block#acceleration#0 DS 1F ; acceleration
                                            4571 *
00002E38                00000000 00006CE8   4572 @CODE    CSECT
                                            4573 *
                                            4574 *
                                            4575 *
                                            4576 * ....... start of LZ4F_compressBlock_continue
00002E38                                    4577 @LNAME892 DS   0H
00002E38 0000001B                           4578          DC    X'0000001B'
00002E3C D3E9F4C66D839694                   4579          DC    C'LZ4F_compressBlock_continue'
00002E57 00                                 4580          DC    X'00'
                                            4581 $L$Z4$F_compress$Block_continue DCCPRLG CINDEX=892,BASER=12,FRAME=224,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME892
                                            4582          macro
                                            4583          dccextrn &m
                                            4584          gblc    &$dccext(1000)
                                            4585          gbla    &$dccexti
                                            4586          lcla    &i
                                            4587 &$dccext(&$dccexti+1) setc    '&m'
                                            4588 &i       seta    1
                                            4589 .loop    aif    (&i gt &$dccexti).around
                                            4590          aif    ('&$dccext(&i)' eq '&m').getout
                                            4591 &i       seta    &i+1
                                            4592          ago     .loop
                                            4593 .around  anop
                                            4594 &$dccexti seta &$dccexti+1
                                            4595          extrn  &m
                                            4596 .getout  anop
                                            4597          mend
00002E58                                    4598+$eye0093    ds    0d                                                    02-DCCCA
00002E58 C4C3C3                             4599+         dc cl3'DCC'                                                    02-DCCCA
00002E5B 01                                 4600+         dc xl1'01' format one                                          02-DCCCA
00002E5C 00000000                           4601+         dc a(0)                                                        02-DCCCA
00002E60 0000000000002ECA                   4602+         dc ad(@PER_892)                                                02-DCCCA
00002E68 00000000000000E0                   4603+         dc ad(224)                                                     02-DCCCA
00002E70 0000000000000000                   4604+         dc ad(0)                                                       02-DCCCA
00002E78 0000000000001000                   4605+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002E80 20                                 4606+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002E81 03                                 4607+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002E82 03                                 4608+         dc al1(3)                                                      02-DCCCA
00002E83 08                                 4609+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002E84 00                                 4610+         dc bl.8'00000000'                                              02-DCCCA
00002E85 000000                             4611+         dc al3(0)                                                      02-DCCCA
00002E88 0000000000002E38                   4612+         dc ad(@LNAME892)                                               02-DCCCA
00002E90                                    4613+         ds 0d                                                          02-DCCCA
00002E90 0000000000002E58                   4614+         dc ad($eye0093)                                                02-DCCCA
00002E98 0000000000000000                   4615+         dc ad(0)                                                       02-DCCCA
00002EA0                                    4616+         ds    0d                                                       01-DCCPR
00002EA0                                    4617+$L$Z4$F_compress$Block_continue ds 0d                                   01-DCCPR
00002EA0                                    4618+@REGION_892_1 ds 0h                                                     01-DCCPR
00002EA0 EBEC D008 0024          00000008   4619+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002EA6 E3E0 D088 0004          00000088   4620+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002EAC E3C0 D090 0004          00000090   4621+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002EB2 B904 002E                          4622+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002EB6 E3B0 C018 0004          00000018   4623+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002EBC A7EB 00E0               000000E0   4624+         aghi  14,224              increase by frame size               01-DCCPR
00002EC0 E3E0 C020 0021          00000020   4625+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002EC6 4720 B020               00000020   4626+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002ECA                                    4627+@PER_892 ds    0h                                                       01-DCCPR
00002ECA EBDE 2080 0024          00000080   4628+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002ED0 E3C0 2090 0024          00000090   4629+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002ED6 B904 00D2                          4630+         lgr   13,2                set real frame pointer               01-DCCPR
00002EDA B904 00CF                          4631+         lgr   12,15               set base reg                         01-DCCPR
                        00002EA0            4632+         using @REGION_892_1,12                                         01-DCCPR
                                            4633 * ******* End of Prologue
                                            4634 * *
                                            4635 * ***       int const acceleration = (level < 0) ? -level + 1 : 1;
00002EDE E55C 102C 0000          0000002C   4636          CHSI  44(1),0
00002EE4 47B0 C068               00002F08   4637          BNL   @L128
00002EE8 58F0 102C               0000002C   4638          L     15,44(0,1)  ; level
00002EEC 13FF                               4639          LCR   15,15
00002EEE A7FA 0001               00000001   4640          AHI   15,1
00002EF2 47F0 C06C               00002F0C   4641          B     @L129
00002EF8                                    4642          DS    0D
00002EF8 000000E0                           4643 @FRAMESIZE_892 DC F'224'
00002EFC 00000000
00002F00 0000000000000000                   4644 @lit_892_146 DC AD($L$Z4_compress_fast_continue)
00002F08                                    4645 @L128    DS    0H
00002F08 A7F8 0001               00000001   4646          LHI   15,1        ; 1
00002F0C                                    4647 @L129    DS    0H
                                            4648 * ***       (void)cdict;
                                            4649 * ***       return LZ4_compress_fast_continue((LZ4_stream_t*)ctx, src,\
                                            4650 *  dst, srcSize, dstCapacity, acceleration);
00002F0C E320 1000 0004          00000000   4651          LG    2,0(0,1)    ; ctx
00002F12 E320 D0B0 0024          000000B0   4652          STG   2,176(0,13)
00002F18 E320 1008 0004          00000008   4653          LG    2,8(0,1)    ; src
00002F1E E320 D0B8 0024          000000B8   4654          STG   2,184(0,13)
00002F24 E320 1010 0004          00000010   4655          LG    2,16(0,1)   ; dst
00002F2A E320 D0C0 0024          000000C0   4656          STG   2,192(0,13)
                                                                                                                           Page   97 
  Active Usings: @REGION_892_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002F30 E320 101C 0014          0000001C   4657          LGF   2,28(0,1)   ; srcSize
00002F36 E320 D0C8 0024          000000C8   4658          STG   2,200(0,13)
00002F3C E310 1024 0014          00000024   4659          LGF   1,36(0,1)   ; dstCapacity
00002F42 E310 D0D0 0024          000000D0   4660          STG   1,208(0,13)
00002F48 B914 00FF                          4661          LGFR  15,15
00002F4C E3F0 D0D8 0024          000000D8   4662          STG   15,216(0,13)
00002F52 4110 D0B0               000000B0   4663          LA    1,176(0,13)
00002F56 E3F0 C060 0004          00002F00   4664          LG    15,@lit_892_146 ; LZ4_compress_fast_continue
00002F5C                                    4665 @@gen_label235 DS    0H
00002F5C 05EF                               4666          BALR  14,15
00002F5E                                    4667 @@gen_label236 DS    0H
00002F5E B914 00FF                          4668          LGFR  15,15
                                            4669 * ***   }
                                            4670 * * **** Start of Epilogue
                                            4671          DCCEPIL
00002F62                                    4672+         ds 0h                                                          01-DCCEP
                                            4673+* Epilog
00002F62 D707 D088 D088 00000088 00000088   4674+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002F68 E3D0 D080 0004          00000080   4675+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002F6E E3C0 D090 0004          00000090   4676+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002F74 E3B0 C018 0004          00000018   4677+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002F7A E3C0 B010 0021          00000010   4678+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002F80 E3E0 D008 0004          00000008   4679+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002F86 EB1C D020 0004          00000020   4680+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002F8C 078E                               4681+         bcr 8,14                if same dsab, just return              01-DCCEP
00002F8E E3F0 D010 0024          00000010   4682+         stg 15,16(0,13)         save return code                       01-DCCEP
00002F94 E300 D018 0024          00000018   4683+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002F9A E3F0 D090 0004          00000090   4684+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002FA0 E3F0 F018 0004          00000018   4685+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002FA6 47F0 F040               00000040   4686+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4687+* End of Epilog
                                            4688 * * **** End of Epilogue
                                            4689          DROP  12
                                            4690 *
                                            4691 *   DSECT for automatic variables in "LZ4F_compressBlock_continue"
                                            4692 *      (FUNCTION #892)
                                            4693 *
00000000                00000000 000000AC   4694 @AUTO#$L$Z4$F_compress$Block_continue DSECT
00000000                                    4695          DS    XL168
000000A8                                    4696 $L$Z4$F_compress$Block_continue#acceleration#0 DS 1F ; acceleration
                                            4697 *
00002FAA                00000000 00006CE8   4698 @CODE    CSECT
                                            4699 *
                                            4700 *
                                            4701 *
                                            4702 * ....... start of LZ4F_compressBlockHC
00002FAA                                    4703 @LNAME893 DS   0H
00002FAA 00000014                           4704          DC    X'00000014'
00002FAE D3E9F4C66D839694                   4705          DC    C'LZ4F_compressBlockHC'
00002FC2 00                                 4706          DC    X'00'
                                            4707 $L$Z4$F_compress$Block$H$C DCCPRLG CINDEX=893,BASER=12,FRAME=216,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME893
                                                                                                                           Page   98 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4708          macro
                                            4709          dccextrn &m
                                            4710          gblc    &$dccext(1000)
                                            4711          gbla    &$dccexti
                                            4712          lcla    &i
                                            4713 &$dccext(&$dccexti+1) setc    '&m'
                                            4714 &i       seta    1
                                            4715 .loop    aif    (&i gt &$dccexti).around
                                            4716          aif    ('&$dccext(&i)' eq '&m').getout
                                            4717 &i       seta    &i+1
                                            4718          ago     .loop
                                            4719 .around  anop
                                            4720 &$dccexti seta &$dccexti+1
                                            4721          extrn  &m
                                            4722 .getout  anop
                                            4723          mend
00002FC8                                    4724+$eye0096    ds    0d                                                    02-DCCCA
00002FC8 C4C3C3                             4725+         dc cl3'DCC'                                                    02-DCCCA
00002FCB 01                                 4726+         dc xl1'01' format one                                          02-DCCCA
00002FCC 00000000                           4727+         dc a(0)                                                        02-DCCCA
00002FD0 000000000000303A                   4728+         dc ad(@PER_893)                                                02-DCCCA
00002FD8 00000000000000D8                   4729+         dc ad(216)                                                     02-DCCCA
00002FE0 0000000000000000                   4730+         dc ad(0)                                                       02-DCCCA
00002FE8 0000000000001000                   4731+         dc ad(4096)                                                    02-DCCCA
00002FF0 20                                 4732+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002FF1 03                                 4733+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002FF2 03                                 4734+         dc al1(3)                                                      02-DCCCA
00002FF3 08                                 4735+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002FF4 00                                 4736+         dc bl.8'00000000'                                              02-DCCCA
00002FF5 000000                             4737+         dc al3(0)                                                      02-DCCCA
00002FF8 0000000000002FAA                   4738+         dc ad(@LNAME893)                                               02-DCCCA
00003000                                    4739+         ds 0d                                                          02-DCCCA
00003000 0000000000002FC8                   4740+         dc ad($eye0096)                                                02-DCCCA
00003008 0000000000000000                   4741+         dc ad(0)                                                       02-DCCCA
00003010                                    4742+         ds    0d                                                       01-DCCPR
00003010                                    4743+$L$Z4$F_compress$Block$H$C ds 0d                                        01-DCCPR
00003010                                    4744+@REGION_893_1 ds 0h                                                     01-DCCPR
00003010 EBEC D008 0024          00000008   4745+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003016 E3E0 D088 0004          00000088   4746+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000301C E3C0 D090 0004          00000090   4747+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003022 B904 002E                          4748+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003026 E3B0 C018 0004          00000018   4749+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000302C A7EB 00D8               000000D8   4750+         aghi  14,216              increase by frame size               01-DCCPR
00003030 E3E0 C020 0021          00000020   4751+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003036 4720 B020               00000020   4752+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000303A                                    4753+@PER_893 ds    0h                                                       01-DCCPR
0000303A EBDE 2080 0024          00000080   4754+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003040 E3C0 2090 0024          00000090   4755+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003046 B904 00D2                          4756+         lgr   13,2                set real frame pointer               01-DCCPR
0000304A B904 00CF                          4757+         lgr   12,15               set base reg                         01-DCCPR
                        00003010            4758+         using @REGION_893_1,12                                         01-DCCPR
0000304E B904 0031                          4759          LGR   3,1         ; ptr to parm area
                                                                                                                           Page   99 
  Active Usings: @REGION_893_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4760 * ******* End of Prologue
                                            4761 * *
                                            4762 * ***       LZ4F_initStream(ctx, cdict, level, LZ4F_blockIndependent);
00003052 E320 3000 0004          00000000   4763          LG    2,0(0,3)    ; ctx
00003058 E320 D0A8 0024          000000A8   4764          STG   2,168(0,13)
0000305E E3F0 3030 0004          00000030   4765          LG    15,48(0,3)  ; cdict
00003064 E3F0 D0B0 0024          000000B0   4766          STG   15,176(0,13)
0000306A E3F0 302C 0014          0000002C   4767          LGF   15,44(0,3)  ; level
00003070 E3F0 D0B8 0024          000000B8   4768          STG   15,184(0,13)
00003076 E548 D0C0 0001          000000C0   4769          MVGHI 192(13),1
0000307C 4110 D0A8               000000A8   4770          LA    1,168(0,13)
00003080 E3F0 C0D8 0004          000030E8   4771          LG    15,@lit_893_148 ; LZ4F_initStream
00003086                                    4772 @@gen_label237 DS    0H
00003086 05EF                               4773          BALR  14,15
00003088                                    4774 @@gen_label238 DS    0H
                                            4775 * ***       if (cdict) {
00003088 E3F0 3030 0002          00000030   4776          LTG   15,48(0,3)  ; cdict
0000308E 4780 C0F0               00003100   4777          BZ    @L130
                                            4778 * ***           return LZ4_compress_HC_continue((LZ4_streamHC_t*)ctx, \
                                            4779 * src, dst, srcSize, dstCapacity);
00003092 E320 D0A8 0024          000000A8   4780          STG   2,168(0,13)
00003098 E3F0 3008 0004          00000008   4781          LG    15,8(0,3)   ; src
0000309E E3F0 D0B0 0024          000000B0   4782          STG   15,176(0,13)
000030A4 E3F0 3010 0004          00000010   4783          LG    15,16(0,3)  ; dst
000030AA E3F0 D0B8 0024          000000B8   4784          STG   15,184(0,13)
000030B0 E3F0 301C 0014          0000001C   4785          LGF   15,28(0,3)  ; srcSize
000030B6 E3F0 D0C0 0024          000000C0   4786          STG   15,192(0,13)
000030BC E3F0 3024 0014          00000024   4787          LGF   15,36(0,3)  ; dstCapacity
000030C2 E3F0 D0C8 0024          000000C8   4788          STG   15,200(0,13)
000030C8 4110 D0A8               000000A8   4789          LA    1,168(0,13)
000030CC E3F0 C0E0 0004          000030F0   4790          LG    15,@lit_893_149 ; LZ4_compress_HC_continue
000030D2                                    4791 @@gen_label240 DS    0H
000030D2 05EF                               4792          BALR  14,15
000030D4                                    4793 @@gen_label241 DS    0H
000030D4 B914 00FF                          4794          LGFR  15,15
000030D8 47F0 C142               00003152   4795          B     @ret_lab_893
000030E0                                    4796          DS    0D
000030E0 000000D8                           4797 @FRAMESIZE_893 DC F'216'
000030E4 00000000
000030E8 0000000000001FC0                   4798 @lit_893_148 DC AD($L$Z4$F_init$Stream)
000030F0 0000000000000000                   4799 @lit_893_149 DC AD($L$Z4_compress_$H$C_continue)
000030F8 0000000000000000                   4800 @lit_893_150 DC AD($L$Z4_compress_$H$C_ext$State$H$C_fast$Reset)
                                            4801 * ***       }
00003100                                    4802 @L130    DS    0H
                                            4803 * ***       return LZ4_compress_HC_extStateHC_fastReset(ctx, src, dst,\
                                            4804 *  srcSize, dstCapacity, level);
00003100 E320 D0A8 0024          000000A8   4805          STG   2,168(0,13)
00003106 E3F0 3008 0004          00000008   4806          LG    15,8(0,3)   ; src
0000310C E3F0 D0B0 0024          000000B0   4807          STG   15,176(0,13)
00003112 E3F0 3010 0004          00000010   4808          LG    15,16(0,3)  ; dst
00003118 E3F0 D0B8 0024          000000B8   4809          STG   15,184(0,13)
0000311E E3F0 301C 0014          0000001C   4810          LGF   15,28(0,3)  ; srcSize
                                                                                                                           Page  100 
  Active Usings: @REGION_893_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003124 E3F0 D0C0 0024          000000C0   4811          STG   15,192(0,13)
0000312A E3F0 3024 0014          00000024   4812          LGF   15,36(0,3)  ; dstCapacity
00003130 E3F0 D0C8 0024          000000C8   4813          STG   15,200(0,13)
00003136 E3F0 302C 0014          0000002C   4814          LGF   15,44(0,3)  ; level
0000313C E3F0 D0D0 0024          000000D0   4815          STG   15,208(0,13)
00003142 4110 D0A8               000000A8   4816          LA    1,168(0,13)
00003146 E3F0 C0E8 0004          000030F8   4817          LG    15,@lit_893_150 ; LZ4_compress_HC_extStateHC_fastReset
0000314C                                    4818 @@gen_label242 DS    0H
0000314C 05EF                               4819          BALR  14,15
0000314E                                    4820 @@gen_label243 DS    0H
0000314E B914 00FF                          4821          LGFR  15,15
                                            4822 * ***   }
00003152                                    4823 @ret_lab_893 DS 0H
                                            4824 * * **** Start of Epilogue
                                            4825          DCCEPIL
00003152                                    4826+         ds 0h                                                          01-DCCEP
                                            4827+* Epilog
00003152 D707 D088 D088 00000088 00000088   4828+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003158 E3D0 D080 0004          00000080   4829+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000315E E3C0 D090 0004          00000090   4830+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003164 E3B0 C018 0004          00000018   4831+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000316A E3C0 B010 0021          00000010   4832+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003170 E3E0 D008 0004          00000008   4833+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003176 EB1C D020 0004          00000020   4834+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000317C 078E                               4835+         bcr 8,14                if same dsab, just return              01-DCCEP
0000317E E3F0 D010 0024          00000010   4836+         stg 15,16(0,13)         save return code                       01-DCCEP
00003184 E300 D018 0024          00000018   4837+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000318A E3F0 D090 0004          00000090   4838+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003190 E3F0 F018 0004          00000018   4839+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003196 47F0 F040               00000040   4840+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4841+* End of Epilog
                                            4842 * * **** End of Epilogue
                                            4843          DROP  12
                                            4844 *
                                            4845 *   DSECT for automatic variables in "LZ4F_compressBlockHC"
                                            4846 *      (FUNCTION #893)
                                            4847 *
00000000                00000000 000000A8   4848 @AUTO#$L$Z4$F_compress$Block$H$C DSECT
00000000                                    4849          DS    XL168
                                            4850 *
0000319A                00000000 00006CE8   4851 @CODE    CSECT
                                            4852 *
                                            4853 *
                                            4854 *
                                            4855 * ....... start of LZ4F_compressBlockHC_continue
0000319A                                    4856 @LNAME894 DS   0H
0000319A 0000001D                           4857          DC    X'0000001D'
0000319E D3E9F4C66D839694                   4858          DC    C'LZ4F_compressBlockHC_continue'
000031BB 00                                 4859          DC    X'00'
                                            4860 $L$Z4$F_compress$Block$H$C_continue DCCPRLG CINDEX=894,BASER=12,FRAME=2*
                                                                08,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME894
                                            4861          macro
                                                                                                                           Page  101 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4862          dccextrn &m
                                            4863          gblc    &$dccext(1000)
                                            4864          gbla    &$dccexti
                                            4865          lcla    &i
                                            4866 &$dccext(&$dccexti+1) setc    '&m'
                                            4867 &i       seta    1
                                            4868 .loop    aif    (&i gt &$dccexti).around
                                            4869          aif    ('&$dccext(&i)' eq '&m').getout
                                            4870 &i       seta    &i+1
                                            4871          ago     .loop
                                            4872 .around  anop
                                            4873 &$dccexti seta &$dccexti+1
                                            4874          extrn  &m
                                            4875 .getout  anop
                                            4876          mend
000031C0                                    4877+$eye0099    ds    0d                                                    02-DCCCA
000031C0 C4C3C3                             4878+         dc cl3'DCC'                                                    02-DCCCA
000031C3 01                                 4879+         dc xl1'01' format one                                          02-DCCCA
000031C4 00000000                           4880+         dc a(0)                                                        02-DCCCA
000031C8 0000000000003232                   4881+         dc ad(@PER_894)                                                02-DCCCA
000031D0 00000000000000D0                   4882+         dc ad(208)                                                     02-DCCCA
000031D8 0000000000000000                   4883+         dc ad(0)                                                       02-DCCCA
000031E0 0000000000001000                   4884+         dc ad(4096)                                                    02-DCCCA
000031E8 20                                 4885+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000031E9 03                                 4886+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000031EA 03                                 4887+         dc al1(3)                                                      02-DCCCA
000031EB 08                                 4888+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000031EC 00                                 4889+         dc bl.8'00000000'                                              02-DCCCA
000031ED 000000                             4890+         dc al3(0)                                                      02-DCCCA
000031F0 000000000000319A                   4891+         dc ad(@LNAME894)                                               02-DCCCA
000031F8                                    4892+         ds 0d                                                          02-DCCCA
000031F8 00000000000031C0                   4893+         dc ad($eye0099)                                                02-DCCCA
00003200 0000000000000000                   4894+         dc ad(0)                                                       02-DCCCA
00003208                                    4895+         ds    0d                                                       01-DCCPR
00003208                                    4896+$L$Z4$F_compress$Block$H$C_continue ds 0d                               01-DCCPR
00003208                                    4897+@REGION_894_1 ds 0h                                                     01-DCCPR
00003208 EBEC D008 0024          00000008   4898+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000320E E3E0 D088 0004          00000088   4899+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003214 E3C0 D090 0004          00000090   4900+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000321A B904 002E                          4901+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000321E E3B0 C018 0004          00000018   4902+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003224 A7EB 00D0               000000D0   4903+         aghi  14,208              increase by frame size               01-DCCPR
00003228 E3E0 C020 0021          00000020   4904+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000322E 4720 B020               00000020   4905+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003232                                    4906+@PER_894 ds    0h                                                       01-DCCPR
00003232 EBDE 2080 0024          00000080   4907+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003238 E3C0 2090 0024          00000090   4908+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000323E B904 00D2                          4909+         lgr   13,2                set real frame pointer               01-DCCPR
00003242 B904 00CF                          4910+         lgr   12,15               set base reg                         01-DCCPR
                        00003208            4911+         using @REGION_894_1,12                                         01-DCCPR
                                            4912 * ******* End of Prologue
                                            4913 * *
                                                                                                                           Page  102 
  Active Usings: @REGION_894_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4914 * ***       (void)level; (void)cdict;
                                            4915 * ***       return LZ4_compress_HC_continue((LZ4_streamHC_t*)ctx, src,\
                                            4916 *  dst, srcSize, dstCapacity);
00003246 E3F0 1000 0004          00000000   4917          LG    15,0(0,1)   ; ctx
0000324C E3F0 D0A8 0024          000000A8   4918          STG   15,168(0,13)
00003252 E3F0 1008 0004          00000008   4919          LG    15,8(0,1)   ; src
00003258 E3F0 D0B0 0024          000000B0   4920          STG   15,176(0,13)
0000325E E3F0 1010 0004          00000010   4921          LG    15,16(0,1)  ; dst
00003264 E3F0 D0B8 0024          000000B8   4922          STG   15,184(0,13)
0000326A E3F0 101C 0014          0000001C   4923          LGF   15,28(0,1)  ; srcSize
00003270 E3F0 D0C0 0024          000000C0   4924          STG   15,192(0,13)
00003276 E3F0 1024 0014          00000024   4925          LGF   15,36(0,1)  ; dstCapacity
0000327C E3F0 D0C8 0024          000000C8   4926          STG   15,200(0,13)
00003282 4110 D0A8               000000A8   4927          LA    1,168(0,13)
00003286 E3F0 C0E0 0004          000032E8   4928          LG    15,@lit_894_152 ; LZ4_compress_HC_continue
0000328C                                    4929 @@gen_label244 DS    0H
0000328C 05EF                               4930          BALR  14,15
0000328E                                    4931 @@gen_label245 DS    0H
0000328E B914 00FF                          4932          LGFR  15,15
                                            4933 * ***   }
                                            4934 * * **** Start of Epilogue
                                            4935          DCCEPIL
00003292                                    4936+         ds 0h                                                          01-DCCEP
                                            4937+* Epilog
00003292 D707 D088 D088 00000088 00000088   4938+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003298 E3D0 D080 0004          00000080   4939+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000329E E3C0 D090 0004          00000090   4940+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000032A4 E3B0 C018 0004          00000018   4941+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000032AA E3C0 B010 0021          00000010   4942+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000032B0 E3E0 D008 0004          00000008   4943+         lg  14,8(0,13)          load up return address                 01-DCCEP
000032B6 EB1C D020 0004          00000020   4944+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000032BC 078E                               4945+         bcr 8,14                if same dsab, just return              01-DCCEP
000032BE E3F0 D010 0024          00000010   4946+         stg 15,16(0,13)         save return code                       01-DCCEP
000032C4 E300 D018 0024          00000018   4947+         stg 0,24(0,13)          save more return code                  01-DCCEP
000032CA E3F0 D090 0004          00000090   4948+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000032D0 E3F0 F018 0004          00000018   4949+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000032D6 47F0 F040               00000040   4950+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4951+* End of Epilog
                                            4952 * * **** End of Epilogue
000032E0                                    4953          DS    0D
000032E0 000000D0                           4954 @FRAMESIZE_894 DC F'208'
000032E4 00000000
000032E8 0000000000000000                   4955 @lit_894_152 DC AD($L$Z4_compress_$H$C_continue)
                                            4956          DROP  12
                                            4957 *
                                            4958 *   DSECT for automatic variables in "LZ4F_compressBlockHC_continue"
                                            4959 *      (FUNCTION #894)
                                            4960 *
00000000                00000000 000000A8   4961 @AUTO#$L$Z4$F_compress$Block$H$C_continue DSECT
00000000                                    4962          DS    XL168
                                            4963 *
000032F0                00000000 00006CE8   4964 @CODE    CSECT
                                                                                                                           Page  103 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4965 *
                                            4966 *
                                            4967 *
                                            4968 * ....... start of LZ4F_selectCompression
000032F0                                    4969 @LNAME895 DS   0H
000032F0 00000016                           4970          DC    X'00000016'
000032F4 D3E9F4C66DA28593                   4971          DC    C'LZ4F_selectCompression'
0000330A 00                                 4972          DC    X'00'
                                            4973 $L$Z4$F_select$Compression DCCPRLG CINDEX=895,BASER=12,FRAME=168,SAVEAR*
                                                                EA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME895
                                            4974          macro
                                            4975          dccextrn &m
                                            4976          gblc    &$dccext(1000)
                                            4977          gbla    &$dccexti
                                            4978          lcla    &i
                                            4979 &$dccext(&$dccexti+1) setc    '&m'
                                            4980 &i       seta    1
                                            4981 .loop    aif    (&i gt &$dccexti).around
                                            4982          aif    ('&$dccext(&i)' eq '&m').getout
                                            4983 &i       seta    &i+1
                                            4984          ago     .loop
                                            4985 .around  anop
                                            4986 &$dccexti seta &$dccexti+1
                                            4987          extrn  &m
                                            4988 .getout  anop
                                            4989          mend
00003310                                    4990+$eye0102    ds    0d                                                    02-DCCCA
00003310 C4C3C3                             4991+         dc cl3'DCC'                                                    02-DCCCA
00003313 01                                 4992+         dc xl1'01' format one                                          02-DCCCA
00003314 00000000                           4993+         dc a(0)                                                        02-DCCCA
00003318 0000000000000000                   4994+         dc ad(0)                                                       02-DCCCA
00003320 00000000000000A8                   4995+         dc ad(168)                                                     02-DCCCA
00003328 0000000000000000                   4996+         dc ad(0)                                                       02-DCCCA
00003330 0000000000001000                   4997+         dc ad(4096)                                                    02-DCCCA
00003338 20                                 4998+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003339 03                                 4999+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000333A 03                                 5000+         dc al1(3)                                                      02-DCCCA
0000333B 08                                 5001+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000333C 00                                 5002+         dc bl.8'00000000'                                              02-DCCCA
0000333D 000000                             5003+         dc al3(0)                                                      02-DCCCA
00003340 00000000000032F0                   5004+         dc ad(@LNAME895)                                               02-DCCCA
00003348                                    5005+         ds 0d                                                          02-DCCCA
00003348 0000000000003310                   5006+         dc ad($eye0102)                                                02-DCCCA
00003350 0000000000000000                   5007+         dc ad(0)                                                       02-DCCCA
00003358                                    5008+         ds    0d                                                       01-DCCPR
00003358                                    5009+$L$Z4$F_select$Compression ds 0d                                        01-DCCPR
00003358                                    5010+@REGION_895_1 ds 0h                                                     01-DCCPR
00003358 EBEC D008 0024          00000008   5011+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000335E B904 00CF                          5012+         lgr   12,15               set base reg                         01-DCCPR
                        00003358            5013+         using @REGION_895_1,12                                         01-DCCPR
                                            5014 * ******* End of Prologue
                                            5015 * *
                                                                                                                           Page  104 
  Active Usings: @REGION_895_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5016 * ***       if (level < 3) {
00003362 E55C 100C 0003          0000000C   5017          CHSI  12(1),3
00003368 47B0 C052               000033AA   5018          BNL   @L131
                                            5019 * ***           if (blockMode == LZ4F_blockIndependent) return LZ4F_co\
                                            5020 * mpressBlock;
0000336C E55C 1004 0001          00000004   5021          CHSI  4(1),1
00003372 4770 C048               000033A0   5022          BNE   @L132
00003376 E3F0 C028 0004          00003380   5023          LG    15,@lit_895_154 ; LZ4F_compressBlock
0000337C 47F0 C06C               000033C4   5024          B     @ret_lab_895
00003380                                    5025          DS    0D
00003380 0000000000002C90                   5026 @lit_895_154 DC AD($L$Z4$F_compress$Block)
00003388 0000000000002EA0                   5027 @lit_895_155 DC AD($L$Z4$F_compress$Block_continue)
00003390 0000000000003010                   5028 @lit_895_156 DC AD($L$Z4$F_compress$Block$H$C)
00003398 0000000000003208                   5029 @lit_895_157 DC AD($L$Z4$F_compress$Block$H$C_continue)
000033A0                                    5030 @L132    DS    0H
                                            5031 * ***           return LZ4F_compressBlock_continue;
000033A0 E3F0 C030 0004          00003388   5032          LG    15,@lit_895_155 ; LZ4F_compressBlock_continue
000033A6 47F0 C06C               000033C4   5033          B     @ret_lab_895
                                            5034 * ***       }
000033AA                                    5035 @L131    DS    0H
                                            5036 * ***       if (blockMode == LZ4F_blockIndependent) return LZ4F_compre\
                                            5037 * ssBlockHC;
000033AA E55C 1004 0001          00000004   5038          CHSI  4(1),1
000033B0 4770 C066               000033BE   5039          BNE   @L133
000033B4 E3F0 C038 0004          00003390   5040          LG    15,@lit_895_156 ; LZ4F_compressBlockHC
000033BA 47F0 C06C               000033C4   5041          B     @ret_lab_895
000033BE                                    5042 @L133    DS    0H
                                            5043 * ***       return LZ4F_compressBlockHC_continue;
000033BE E3F0 C040 0004          00003398   5044          LG    15,@lit_895_157 ; LZ4F_compressBlockHC_continue
                                            5045 * ***   }
000033C4                                    5046 @ret_lab_895 DS 0H
                                            5047 * * **** Start of Epilogue
                                            5048          DCCEPIL
000033C4                                    5049+         ds 0h                                                          01-DCCEP
                                            5050+* Epilog
                                            5051+* Epilog
000033C4 E3E0 D008 0004          00000008   5052+         lg    14,8(,13) restore the reg                                01-DCCEP
000033CA EB1C D020 0004          00000020   5053+         lmg   1,12,32(13)                                              01-DCCEP
000033D0 07FE                               5054+         br   14                                                        01-DCCEP
                                            5055+* End of Epilog
                                            5056 * * **** End of Epilogue
                                            5057          DROP  12
                                            5058 *
                                            5059 *   DSECT for automatic variables in "LZ4F_selectCompression"
                                            5060 *      (FUNCTION #895)
                                            5061 *
00000000                00000000 000000A8   5062 @AUTO#$L$Z4$F_select$Compression DSECT
00000000                                    5063          DS    XL168
                                            5064 *
000033D2                00000000 00006CE8   5065 @CODE    CSECT
                                            5066 *
                                            5067 *
                                                                                                                           Page  105 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5068 *
                                            5069 * ....... start of LZ4F_localSaveDict
000033D2                                    5070 @LNAME896 DS   0H
000033D2 00000012                           5071          DC    X'00000012'
000033D6 D3E9F4C66D939683                   5072          DC    C'LZ4F_localSaveDict'
000033E8 00                                 5073          DC    X'00'
                                            5074 $L$Z4$F_local$Save$Dict DCCPRLG CINDEX=896,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME896
                                            5075          macro
                                            5076          dccextrn &m
                                            5077          gblc    &$dccext(1000)
                                            5078          gbla    &$dccexti
                                            5079          lcla    &i
                                            5080 &$dccext(&$dccexti+1) setc    '&m'
                                            5081 &i       seta    1
                                            5082 .loop    aif    (&i gt &$dccexti).around
                                            5083          aif    ('&$dccext(&i)' eq '&m').getout
                                            5084 &i       seta    &i+1
                                            5085          ago     .loop
                                            5086 .around  anop
                                            5087 &$dccexti seta &$dccexti+1
                                            5088          extrn  &m
                                            5089 .getout  anop
                                            5090          mend
000033F0                                    5091+$eye0105    ds    0d                                                    02-DCCCA
000033F0 C4C3C3                             5092+         dc cl3'DCC'                                                    02-DCCCA
000033F3 01                                 5093+         dc xl1'01' format one                                          02-DCCCA
000033F4 00000000                           5094+         dc a(0)                                                        02-DCCCA
000033F8 0000000000003462                   5095+         dc ad(@PER_896)                                                02-DCCCA
00003400 00000000000000C0                   5096+         dc ad(192)                                                     02-DCCCA
00003408 0000000000000000                   5097+         dc ad(0)                                                       02-DCCCA
00003410 0000000000001000                   5098+         dc ad(4096)                                                    02-DCCCA
00003418 20                                 5099+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003419 03                                 5100+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000341A 03                                 5101+         dc al1(3)                                                      02-DCCCA
0000341B 08                                 5102+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000341C 00                                 5103+         dc bl.8'00000000'                                              02-DCCCA
0000341D 000000                             5104+         dc al3(0)                                                      02-DCCCA
00003420 00000000000033D2                   5105+         dc ad(@LNAME896)                                               02-DCCCA
00003428                                    5106+         ds 0d                                                          02-DCCCA
00003428 00000000000033F0                   5107+         dc ad($eye0105)                                                02-DCCCA
00003430 0000000000000000                   5108+         dc ad(0)                                                       02-DCCCA
00003438                                    5109+         ds    0d                                                       01-DCCPR
00003438                                    5110+$L$Z4$F_local$Save$Dict ds 0d                                           01-DCCPR
00003438                                    5111+@REGION_896_1 ds 0h                                                     01-DCCPR
00003438 EBEC D008 0024          00000008   5112+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000343E E3E0 D088 0004          00000088   5113+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003444 E3C0 D090 0004          00000090   5114+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000344A B904 002E                          5115+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000344E E3B0 C018 0004          00000018   5116+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003454 A7EB 00C0               000000C0   5117+         aghi  14,192              increase by frame size               01-DCCPR
00003458 E3E0 C020 0021          00000020   5118+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page  106 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000345E 4720 B020               00000020   5119+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003462                                    5120+@PER_896 ds    0h                                                       01-DCCPR
00003462 EBDE 2080 0024          00000080   5121+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003468 E3C0 2090 0024          00000090   5122+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000346E B904 00D2                          5123+         lgr   13,2                set real frame pointer               01-DCCPR
00003472 B904 00CF                          5124+         lgr   12,15               set base reg                         01-DCCPR
                        00003438            5125+         using @REGION_896_1,12                                         01-DCCPR
                                            5126 * ******* End of Prologue
                                            5127 * *
                                            5128 * ***       if (cctxPtr->prefs.compressionLevel < 3)
00003476 E3F0 1000 0004          00000000   5129          LG    15,0(0,1)   ; cctxPtr
0000347C E55C F020 0003          00000020   5130          CHSI  32(15),3
00003482 47B0 C0A0               000034D8   5131          BNL   @L134
                                            5132 * ***           return LZ4_saveDict ((LZ4_stream_t*)(cctxPtr->lz4CtxPt\
                                            5133 * r), (char*)(cctxPtr->tmpBuff), 64 *(1<<10));
00003486 E310 F0A8 0004          000000A8   5134          LG    1,168(0,15)
0000348C E310 D0A8 0024          000000A8   5135          STG   1,168(0,13)
00003492 E3F0 F058 0004          00000058   5136          LG    15,88(0,15)
00003498 E3F0 D0B0 0024          000000B0   5137          STG   15,176(0,13)
0000349E C0FF 0001 0000                     5138          LLILF 15,X'00010000' ; 65536
000034A4 E3F0 D0B8 0024          000000B8   5139          STG   15,184(0,13)
000034AA 4110 D0A8               000000A8   5140          LA    1,168(0,13)
000034AE E3F0 C090 0004          000034C8   5141          LG    15,@lit_896_159 ; LZ4_saveDict
000034B4                                    5142 @@gen_label250 DS    0H
000034B4 05EF                               5143          BALR  14,15
000034B6                                    5144 @@gen_label251 DS    0H
000034B6 B914 00FF                          5145          LGFR  15,15
000034BA 47F0 C0D4               0000350C   5146          B     @ret_lab_896
000034C0                                    5147          DS    0D
000034C0 000000C0                           5148 @FRAMESIZE_896 DC F'192'
000034C4 00000000
000034C8 0000000000000000                   5149 @lit_896_159 DC AD($L$Z4_save$Dict)
000034D0 0000000000000000                   5150 @lit_896_161 DC AD($L$Z4_save$Dict$H$C)
000034D8                                    5151 @L134    DS    0H
                                            5152 * ***       return LZ4_saveDictHC ((LZ4_streamHC_t*)(cctxPtr->lz4CtxPt\
                                            5153 * r), (char*)(cctxPtr->tmpBuff), 64 *(1<<10));
000034D8 E310 F0A8 0004          000000A8   5154          LG    1,168(0,15)
000034DE E310 D0A8 0024          000000A8   5155          STG   1,168(0,13)
000034E4 E3F0 F058 0004          00000058   5156          LG    15,88(0,15)
000034EA E3F0 D0B0 0024          000000B0   5157          STG   15,176(0,13)
000034F0 C0FF 0001 0000                     5158          LLILF 15,X'00010000' ; 65536
000034F6 E3F0 D0B8 0024          000000B8   5159          STG   15,184(0,13)
000034FC 4110 D0A8               000000A8   5160          LA    1,168(0,13)
00003500 E3F0 C098 0004          000034D0   5161          LG    15,@lit_896_161 ; LZ4_saveDictHC
00003506                                    5162 @@gen_label252 DS    0H
00003506 05EF                               5163          BALR  14,15
00003508                                    5164 @@gen_label253 DS    0H
00003508 B914 00FF                          5165          LGFR  15,15
                                            5166 * ***   }
0000350C                                    5167 @ret_lab_896 DS 0H
                                            5168 * * **** Start of Epilogue
                                            5169          DCCEPIL
                                                                                                                           Page  107 
  Active Usings: @REGION_896_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000350C                                    5170+         ds 0h                                                          01-DCCEP
                                            5171+* Epilog
0000350C D707 D088 D088 00000088 00000088   5172+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003512 E3D0 D080 0004          00000080   5173+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003518 E3C0 D090 0004          00000090   5174+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000351E E3B0 C018 0004          00000018   5175+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003524 E3C0 B010 0021          00000010   5176+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000352A E3E0 D008 0004          00000008   5177+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003530 EB1C D020 0004          00000020   5178+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003536 078E                               5179+         bcr 8,14                if same dsab, just return              01-DCCEP
00003538 E3F0 D010 0024          00000010   5180+         stg 15,16(0,13)         save return code                       01-DCCEP
0000353E E300 D018 0024          00000018   5181+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003544 E3F0 D090 0004          00000090   5182+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000354A E3F0 F018 0004          00000018   5183+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003550 47F0 F040               00000040   5184+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5185+* End of Epilog
                                            5186 * * **** End of Epilogue
                                            5187          DROP  12
                                            5188 *
                                            5189 *   DSECT for automatic variables in "LZ4F_localSaveDict"
                                            5190 *      (FUNCTION #896)
                                            5191 *
00000000                00000000 000000A8   5192 @AUTO#$L$Z4$F_local$Save$Dict DSECT
00000000                                    5193          DS    XL168
                                            5194 *
00003554                00000000 00006CE8   5195 @CODE    CSECT
                                            5196 *
                                            5197 *
                                            5198 *
                                            5199 * ....... start of LZ4F_compressUpdate
                                            5200 $L$Z4$F_compress$Update ALIAS X'D3E9F4C66D839694979985A2A2E4978481A385'
00003554                                    5201 @LNAME769 DS   0H
00003554 00000013                           5202          DC    X'00000013'
00003558 D3E9F4C66D839694                   5203          DC    C'LZ4F_compressUpdate'
0000356B 00                                 5204          DC    X'00'
                                            5205 $L$Z4$F_compress$Update DCCPRLG CINDEX=769,BASER=12,FRAME=264,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME769
                                            5206          macro
                                            5207          dccextrn &m
                                            5208          gblc    &$dccext(1000)
                                            5209          gbla    &$dccexti
                                            5210          lcla    &i
                                            5211 &$dccext(&$dccexti+1) setc    '&m'
                                            5212 &i       seta    1
                                            5213 .loop    aif    (&i gt &$dccexti).around
                                            5214          aif    ('&$dccext(&i)' eq '&m').getout
                                            5215 &i       seta    &i+1
                                            5216          ago     .loop
                                            5217 .around  anop
                                            5218 &$dccexti seta &$dccexti+1
                                            5219          extrn  &m
                                            5220 .getout  anop
                                                                                                                           Page  108 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5221          mend
00003570                                    5222+$eye0108    ds    0d                                                    02-DCCCA
00003570 C4C3C3                             5223+         dc cl3'DCC'                                                    02-DCCCA
00003573 01                                 5224+         dc xl1'01' format one                                          02-DCCCA
00003574 00000000                           5225+         dc a(0)                                                        02-DCCCA
00003578 00000000000035E2                   5226+         dc ad(@PER_769)                                                02-DCCCA
00003580 0000000000000108                   5227+         dc ad(264)                                                     02-DCCCA
00003588 0000000000000000                   5228+         dc ad(0)                                                       02-DCCCA
00003590 0000000000001000                   5229+         dc ad(4096)                                                    02-DCCCA
00003598 20                                 5230+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003599 03                                 5231+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000359A 03                                 5232+         dc al1(3)                                                      02-DCCCA
0000359B 08                                 5233+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000359C 00                                 5234+         dc bl.8'00000000'                                              02-DCCCA
0000359D 000000                             5235+         dc al3(0)                                                      02-DCCCA
000035A0 0000000000003554                   5236+         dc ad(@LNAME769)                                               02-DCCCA
000035A8                                    5237+         ds 0d                                                          02-DCCCA
000035A8 0000000000003570                   5238+         dc ad($eye0108)                                                02-DCCCA
000035B0 0000000000000000                   5239+         dc ad(0)                                                       02-DCCCA
000035B8                                    5240+         ds    0d                                                       01-DCCPR
                                            5241+         entry $L$Z4$F_compress$Update                                  01-DCCPR
000035B8                                    5242+$L$Z4$F_compress$Update ds 0d                                           01-DCCPR
000035B8                                    5243+@REGION_769_1 ds 0h                                                     01-DCCPR
000035B8 EBEC D008 0024          00000008   5244+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000035BE E3E0 D088 0004          00000088   5245+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000035C4 E3C0 D090 0004          00000090   5246+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000035CA B904 002E                          5247+         lgr   2,14                copy addr of our savearea            01-DCCPR
000035CE E3B0 C018 0004          00000018   5248+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000035D4 A7EB 0108               00000108   5249+         aghi  14,264              increase by frame size               01-DCCPR
000035D8 E3E0 C020 0021          00000020   5250+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000035DE 4720 B020               00000020   5251+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000035E2                                    5252+@PER_769 ds    0h                                                       01-DCCPR
000035E2 EBDE 2080 0024          00000080   5253+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000035E8 E3C0 2090 0024          00000090   5254+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000035EE B904 00D2                          5255+         lgr   13,2                set real frame pointer               01-DCCPR
000035F2 B904 00CF                          5256+         lgr   12,15               set base reg                         01-DCCPR
                        000035B8            5257+         using @REGION_769_1,12                                         01-DCCPR
000035F6 B904 0071                          5258          LGR   7,1
                                            5259 * ******* End of Prologue
                                            5260 * *
000035FA E320 7000 0004          00000000   5261          LG    2,0(0,7)    ; cctxPtr
00003600 E3B0 7018 0004          00000018   5262          LG    11,24(0,7)  ; srcBuffer
00003606 E380 7020 0004          00000020   5263          LG    8,32(0,7)   ; srcSize
0000360C E3A0 7028 0004          00000028   5264          LG    10,40(0,7)  ; compressOptionsPtr
                                            5265 * ***       LZ4F_compressOptions_t cOptionsNull;
                                            5266 * ***       size_t const blockSize = cctxPtr->maxBlockSize;
00003612 E350 2048 0004          00000048   5267          LG    5,72(0,2)   ; offset of maxBlockSize in LZ4F_cctx_s
                                            5268 * ***       const BYTE* srcPtr = (const BYTE*)srcBuffer;
00003618 B904 003B                          5269          LGR   3,11        ; srcPtr
                                            5270 * ***       const BYTE* const srcEnd = srcPtr + srcSize;
0000361C 4168 B000               00000000   5271          LA    6,0(8,11)
                                            5272 * ***       BYTE* const dstStart = (BYTE*)dstBuffer;
                                                                                                                           Page  109 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003620 E340 7008 0004          00000008   5273          LG    4,8(0,7)    ; dstBuffer
00003626 E340 D100 0024          00000100   5274          STG   4,256(0,13) ; spill
                                            5275 * ***       BYTE* dstPtr = dstStart;
                                            5276 * ***       LZ4F_lastBlockStatus lastBlockCompressed = notDone;
0000362C A798 0000               00000000   5277          LHI   9,0         ; 0
                                            5278 * ***       compressFunc_t const compress = LZ4F_selectCompression(cct\
                                            5279 * xPtr->prefs.frameInfo.blockMode, cctxPtr->prefs.compressionLevel);
00003630 E3F0 2004 0014          00000004   5280          LGF   15,4(0,2)
00003636 E3F0 D0B8 0024          000000B8   5281          STG   15,184(0,13)
0000363C E3F0 2020 0014          00000020   5282          LGF   15,32(0,2)
00003642 E3F0 D0C0 0024          000000C0   5283          STG   15,192(0,13)
00003648 4110 D0B8               000000B8   5284          LA    1,184(0,13)
0000364C E3F0 C0D0 0004          00003688   5285          LG    15,@lit_769_164 ; LZ4F_selectCompression
00003652                                    5286 @@gen_label254 DS    0H
00003652 05EF                               5287          BALR  14,15
00003654                                    5288 @@gen_label255 DS    0H
00003654 E3F0 D0F8 0024          000000F8   5289          STG   15,248(0,13) ; spill
                                            5290 * ***
                                            5291 * ***       {};
                                            5292 * ***
                                            5293 * ***       if (cctxPtr->cStage != 1) return err0r(LZ4F_ERROR_GENERIC)\
                                            5294 * ;
0000365A E55D 203C 0001          0000003C   5295          CLFHSI 60(2),1
00003660 4780 C118               000036D0   5296          BE    @L135
00003664 E548 D0B8 0001          000000B8   5297          MVGHI 184(13),1
0000366A 4110 D0B8               000000B8   5298          LA    1,184(0,13)
0000366E E3F0 C0D8 0004          00003690   5299          LG    15,@lit_769_165 ; err0r
00003674                                    5300 @@gen_label257 DS    0H
00003674 05EF                               5301          BALR  14,15
00003676                                    5302 @@gen_label258 DS    0H
00003676 47F0 C50C               00003AC4   5303          B     @ret_lab_769
00003680                                    5304          DS    0D
00003680 00000108                           5305 @FRAMESIZE_769 DC F'264'
00003684 00000000
00003688 0000000000003358                   5306 @lit_769_164 DC AD($L$Z4$F_select$Compression)
00003690 0000000000000A60                   5307 @lit_769_165 DC AD(err0r)
00003698 0000000000000F20                   5308 @lit_769_166 DC AD($L$Z4$F_compress$Bound_internal)
000036A0 D200 3000 F000 00000000 00000000   5309 @lit_769_168          MVC 0(1,3),0(15)
000036A6 D200 E000 7000 00000000 00000000   5310 @lit_769_170          MVC 0(1,14),0(7)
000036AC 00000000
000036B0 00000000000029E0                   5311 @lit_769_171 DC AD($L$Z4$F_make$Block)
000036B8 0000000000003438                   5312 @lit_769_176 DC AD($L$Z4$F_local$Save$Dict)
000036C0 D200 1000 3000 00000000 00000000   5313 @lit_769_179          MVC 0(1,1),0(3)
000036C6 0000
000036C8 0000000000000000                   5314 @lit_769_180 DC AD($X$X$H32_update)
000036D0                                    5315 @L135    DS    0H
                                            5316 * ***       if (dstCapacity < LZ4F_compressBound_internal(srcSize, &(c\
                                            5317 * ctxPtr->prefs), cctxPtr->tmpInSize))
000036D0 E370 7010 0004          00000010   5318          LG    7,16(0,7)   ; dstCapacity
000036D6 E380 D0B8 0024          000000B8   5319          STG   8,184(0,13)
000036DC E320 D0C0 0024          000000C0   5320          STG   2,192(0,13)
000036E2 E3F0 2068 0004          00000068   5321          LG    15,104(0,2)
                                                                                                                           Page  110 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000036E8 E3F0 D0C8 0024          000000C8   5322          STG   15,200(0,13)
000036EE 4110 D0B8               000000B8   5323          LA    1,184(0,13)
000036F2 E3F0 C0E0 0004          00003698   5324          LG    15,@lit_769_166 ; LZ4F_compressBound_internal
000036F8                                    5325 @@gen_label259 DS    0H
000036F8 05EF                               5326          BALR  14,15
000036FA                                    5327 @@gen_label260 DS    0H
000036FA B921 007F                          5328          CLGR  7,15
000036FE 47B0 C160               00003718   5329          BNL   @L136
                                            5330 * ***           return err0r(LZ4F_ERROR_dstMaxSize_tooSmall);
00003702 E548 D0B8 000B          000000B8   5331          MVGHI 184(13),11
00003708 4110 D0B8               000000B8   5332          LA    1,184(0,13)
0000370C E3F0 C0D8 0004          00003690   5333          LG    15,@lit_769_165 ; err0r
00003712                                    5334 @@gen_label262 DS    0H
00003712 05EF                               5335          BALR  14,15
00003714                                    5336 @@gen_label263 DS    0H
00003714 47F0 C50C               00003AC4   5337          B     @ret_lab_769
00003718                                    5338 @L136    DS    0H
                                            5339 * ***       __memset((&cOptionsNull),(0),(sizeof(cOptionsNull)));
00003718 41F0 D0A8               000000A8   5340          LA    15,168(0,13)
                                            5341 * setting 16 bytes to 0x00
0000371C D70F F000 F000 00000000 00000000   5342          XC    0(16,15),0(15)
                                            5343 * ***       if (compressOptionsPtr == ((void *)0)) compressOptionsPtr \
                                            5344 * = &cOptionsNull;
00003722 B902 00FA                          5345          LTGR  15,10
00003726 4770 C176               0000372E   5346          BNE   @L137
0000372A 41A0 D0A8               000000A8   5347          LA    10,168(0,13)
0000372E                                    5348 @L137    DS    0H
                                            5349 * ***
                                            5350 * ***
                                            5351 * ***       if (cctxPtr->tmpInSize > 0) {
0000372E E559 2068 0000          00000068   5352          CLGHSI 104(2),0
00003734 47D0 C32C               000038E4   5353          BNH   @L145
                                            5354 * ***           size_t const sizeToCopy = blockSize - cctxPtr->tmpInSi\
                                            5355 * ze;
00003738 B904 00F5                          5356          LGR   15,5
0000373C E3F0 2068 000B          00000068   5357          SLG   15,104(0,2)
                                            5358 * ***           if (sizeToCopy > srcSize) {
00003742 B921 00F8                          5359          CLGR  15,8
00003746 47D0 C1F0               000037A8   5360          BNH   @L139
                                            5361 * ***
                                            5362 * ***               __memcpy(cctxPtr->tmpIn + cctxPtr->tmpInSize,srcBu\
                                            5363 * ffer,srcSize);
0000374A E310 2060 0004          00000060   5364          LG    1,96(0,2)   ; offset of tmpIn in LZ4F_cctx_s
00003750 E330 2068 0004          00000068   5365          LG    3,104(0,2)  ; offset of tmpInSize in LZ4F_cctx_s
00003756 B904 00FB                          5366          LGR   15,11
0000375A 4133 1000               00000000   5367          LA    3,0(3,1)
0000375E B902 0018                          5368          LTGR  1,8
00003762 4780 C1D8               00003790   5369          BZ    @@gen_label269
00003766 A71B FFFF               0000FFFF   5370          AGHI  1,-1
0000376A EB71 0008 000A          00000008   5371          SRAG  7,1,8(0)
00003770 B902 0077                          5372          LTGR  7,7
00003774 4780 C1D4               0000378C   5373          BZ    @@gen_label268
                                                                                                                           Page  111 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003778                                    5374 @@gen_label267 DS 0H
00003778 D2FF 3000 F000 00000000 00000000   5375          MVC   0(256,3),0(15)
0000377E 4130 3100               00000100   5376          LA    3,256(0,3)
00003782 41F0 F100               00000100   5377          LA    15,256(0,15)
00003786 E370 C1C0 0046          00003778   5378          BCTG  7,@@gen_label267
0000378C                                    5379 @@gen_label268 DS 0H
0000378C 4410 C0E8               000036A0   5380          EX    1,@lit_769_168
00003790                                    5381 @@gen_label269 DS 0H
                                            5382 * ***               srcPtr = srcEnd;
00003790 B904 0036                          5383          LGR   3,6         ; srcPtr
                                            5384 * ***               cctxPtr->tmpInSize += srcSize;
00003794 B904 00F8                          5385          LGR   15,8
00003798 E3F0 2068 000A          00000068   5386          ALG   15,104(0,2)
0000379E E3F0 2068 0024          00000068   5387          STG   15,104(0,2)
                                            5388 * ***
                                            5389 * ***           } else {
000037A4 47F0 C2C2               0000387A   5390          B     @L140
000037A8                                    5391 @L139    DS    0H
                                            5392 * ***
                                            5393 * ***               lastBlockCompressed = fromTmpBuffer;
000037A8 A798 0001               00000001   5394          LHI   9,1         ; 1
                                            5395 * ***               __memcpy(cctxPtr->tmpIn + cctxPtr->tmpInSize,srcBu\
                                            5396 * ffer,sizeToCopy);
000037AC E310 2060 0004          00000060   5397          LG    1,96(0,2)   ; offset of tmpIn in LZ4F_cctx_s
000037B2 E3E0 2068 0004          00000068   5398          LG    14,104(0,2) ; offset of tmpInSize in LZ4F_cctx_s
000037B8 B904 007B                          5399          LGR   7,11
000037BC 41EE 1000               00000000   5400          LA    14,0(14,1)
000037C0 B902 001F                          5401          LTGR  1,15
000037C4 4780 C23A               000037F2   5402          BZ    @@gen_label272
000037C8 A71B FFFF               0000FFFF   5403          AGHI  1,-1
000037CC EB01 0008 000A          00000008   5404          SRAG  0,1,8(0)
000037D2 B902 0000                          5405          LTGR  0,0
000037D6 4780 C236               000037EE   5406          BZ    @@gen_label271
000037DA                                    5407 @@gen_label270 DS 0H
000037DA D2FF E000 7000 00000000 00000000   5408          MVC   0(256,14),0(7)
000037E0 41E0 E100               00000100   5409          LA    14,256(0,14)
000037E4 4170 7100               00000100   5410          LA    7,256(0,7)
000037E8 E300 C222 0046          000037DA   5411          BCTG  0,@@gen_label270
000037EE                                    5412 @@gen_label271 DS 0H
000037EE 4410 C0EE               000036A6   5413          EX    1,@lit_769_170
000037F2                                    5414 @@gen_label272 DS 0H
                                            5415 * ***               srcPtr += sizeToCopy;
000037F2 413F 3000               00000000   5416          LA    3,0(15,3)
                                            5417 * ***
                                            5418 * ***               dstPtr += LZ4F_makeBlock(dstPtr,
                                            5419 * ***                                        cctxPtr->tmpIn, blockSize\
                                            5420 * ,
                                            5421 * ***                                        compress, cctxPtr->lz4Ctx\
                                            5422 * Ptr, cctxPtr->prefs.compressionLevel,
                                            5423 * ***                                        cctxPtr->cdict,
                                            5424 * ***                                        cctxPtr->prefs.frameInfo.\
                                            5425 * blockChecksumFlag);
                                                                                                                           Page  112 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000037F6 E340 D0B8 0024          000000B8   5426          STG   4,184(0,13)
000037FC E3F0 2060 0004          00000060   5427          LG    15,96(0,2)
00003802 E3F0 D0C0 0024          000000C0   5428          STG   15,192(0,13)
00003808 E350 D0C8 0024          000000C8   5429          STG   5,200(0,13)
0000380E E3F0 D0F8 0004          000000F8   5430          LG    15,248(0,13) ; spill
00003814 E3F0 D0D0 0024          000000D0   5431          STG   15,208(0,13)
0000381A E3F0 20A8 0004          000000A8   5432          LG    15,168(0,2)
00003820 E3F0 D0D8 0024          000000D8   5433          STG   15,216(0,13)
00003826 E3F0 2020 0014          00000020   5434          LGF   15,32(0,2)
0000382C E3F0 D0E0 0024          000000E0   5435          STG   15,224(0,13)
00003832 E3F0 2040 0004          00000040   5436          LG    15,64(0,2)
00003838 E3F0 D0E8 0024          000000E8   5437          STG   15,232(0,13)
0000383E E3F0 201C 0014          0000001C   5438          LGF   15,28(0,2)
00003844 E3F0 D0F0 0024          000000F0   5439          STG   15,240(0,13)
0000384A 4110 D0B8               000000B8   5440          LA    1,184(0,13)
0000384E E3F0 C0F8 0004          000036B0   5441          LG    15,@lit_769_171 ; LZ4F_makeBlock
00003854                                    5442 @@gen_label273 DS    0H
00003854 05EF                               5443          BALR  14,15
00003856                                    5444 @@gen_label274 DS    0H
00003856 414F 4000               00000000   5445          LA    4,0(15,4)
                                            5446 * ***
                                            5447 * ***               if (cctxPtr->prefs.frameInfo.blockMode==LZ4F_block\
                                            5448 * Linked) cctxPtr->tmpIn += blockSize;
0000385A E55C 2004 0000          00000004   5449          CHSI  4(2),0
00003860 4770 C2BC               00003874   5450          BNE   @L141
00003864 E3F0 2060 0004          00000060   5451          LG    15,96(0,2)
0000386A 41F5 F000               00000000   5452          LA    15,0(5,15)
0000386E E3F0 2060 0024          00000060   5453          STG   15,96(0,2)
00003874                                    5454 @L141    DS    0H
                                            5455 * ***               cctxPtr->tmpInSize = 0;
00003874 E548 2068 0000          00000068   5456          MVGHI 104(2),0    ; offset of tmpInSize in LZ4F_cctx_s
                                            5457 * ***           }
0000387A                                    5458 @L140    DS    0H
                                            5459 * ***       }
0000387A                                    5460 @L138    DS    0H
                                            5461 * ***
                                            5462 * ***       while ((size_t)(srcEnd - srcPtr) >= blockSize) {
0000387A 47F0 C32C               000038E4   5463          B     @L145
0000387E                                    5464 @L144    DS    0H
                                            5465 * ***
                                            5466 * ***           lastBlockCompressed = fromSrcBuffer;
0000387E A798 0002               00000002   5467          LHI   9,2         ; 2
                                            5468 * ***           dstPtr += LZ4F_makeBlock(dstPtr,
                                            5469 * ***                                    srcPtr, blockSize,
                                            5470 * ***                                    compress, cctxPtr->lz4CtxPtr,\
                                            5471 *  cctxPtr->prefs.compressionLevel,
                                            5472 * ***                                    cctxPtr->cdict,
                                            5473 * ***                                    cctxPtr->prefs.frameInfo.bloc\
                                            5474 * kChecksumFlag);
00003882 E340 D0B8 0024          000000B8   5475          STG   4,184(0,13)
00003888 E330 D0C0 0024          000000C0   5476          STG   3,192(0,13)
0000388E E350 D0C8 0024          000000C8   5477          STG   5,200(0,13)
                                                                                                                           Page  113 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003894 E3F0 D0F8 0004          000000F8   5478          LG    15,248(0,13) ; spill
0000389A E3F0 D0D0 0024          000000D0   5479          STG   15,208(0,13)
000038A0 E3F0 20A8 0004          000000A8   5480          LG    15,168(0,2)
000038A6 E3F0 D0D8 0024          000000D8   5481          STG   15,216(0,13)
000038AC E3F0 2020 0014          00000020   5482          LGF   15,32(0,2)
000038B2 E3F0 D0E0 0024          000000E0   5483          STG   15,224(0,13)
000038B8 E3F0 2040 0004          00000040   5484          LG    15,64(0,2)
000038BE E3F0 D0E8 0024          000000E8   5485          STG   15,232(0,13)
000038C4 E3F0 201C 0014          0000001C   5486          LGF   15,28(0,2)
000038CA E3F0 D0F0 0024          000000F0   5487          STG   15,240(0,13)
000038D0 4110 D0B8               000000B8   5488          LA    1,184(0,13)
000038D4 E3F0 C0F8 0004          000036B0   5489          LG    15,@lit_769_171 ; LZ4F_makeBlock
000038DA                                    5490 @@gen_label276 DS    0H
000038DA 05EF                               5491          BALR  14,15
000038DC                                    5492 @@gen_label277 DS    0H
000038DC 414F 4000               00000000   5493          LA    4,0(15,4)
                                            5494 * ***           srcPtr += blockSize;
000038E0 4135 3000               00000000   5495          LA    3,0(5,3)
                                            5496 * ***       }
000038E4                                    5497 @L145    DS    0H
000038E4 B904 00F6                          5498          LGR   15,6
000038E8 B909 00F3                          5499          SGR   15,3
000038EC B921 00F5                          5500          CLGR  15,5
000038F0 47B0 C2C6               0000387E   5501          BNL   @L144
                                            5502 * ***
                                            5503 * ***       if ((cctxPtr->prefs.autoFlush) && (srcPtr < srcEnd)) {
000038F4 E3F0 2024 0012          00000024   5504          LT    15,36(0,2)  ; offset of autoFlush in 0000028
000038FA 4780 C3BC               00003974   5505          BZ    @L146
000038FE B920 0036                          5506          CGR   3,6
00003902 47B0 C3BC               00003974   5507          BNL   @L146
                                            5508 * ***
                                            5509 * ***           lastBlockCompressed = fromSrcBuffer;
00003906 A798 0002               00000002   5510          LHI   9,2         ; 2
                                            5511 * ***           dstPtr += LZ4F_makeBlock(dstPtr,
                                            5512 * ***                                    srcPtr, (size_t)(srcEnd - src\
                                            5513 * Ptr),
                                            5514 * ***                                    compress, cctxPtr->lz4CtxPtr,\
                                            5515 *  cctxPtr->prefs.compressionLevel,
                                            5516 * ***                                    cctxPtr->cdict,
                                            5517 * ***                                    cctxPtr->prefs.frameInfo.bloc\
                                            5518 * kChecksumFlag);
0000390A E340 D0B8 0024          000000B8   5519          STG   4,184(0,13)
00003910 E330 D0C0 0024          000000C0   5520          STG   3,192(0,13)
00003916 B904 00F6                          5521          LGR   15,6
0000391A B909 00F3                          5522          SGR   15,3
0000391E E3F0 D0C8 0024          000000C8   5523          STG   15,200(0,13)
00003924 E3F0 D0F8 0004          000000F8   5524          LG    15,248(0,13) ; spill
0000392A E3F0 D0D0 0024          000000D0   5525          STG   15,208(0,13)
00003930 E3F0 20A8 0004          000000A8   5526          LG    15,168(0,2)
00003936 E3F0 D0D8 0024          000000D8   5527          STG   15,216(0,13)
0000393C E3F0 2020 0014          00000020   5528          LGF   15,32(0,2)
00003942 E3F0 D0E0 0024          000000E0   5529          STG   15,224(0,13)
                                                                                                                           Page  114 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003948 E3F0 2040 0004          00000040   5530          LG    15,64(0,2)
0000394E E3F0 D0E8 0024          000000E8   5531          STG   15,232(0,13)
00003954 E3F0 201C 0014          0000001C   5532          LGF   15,28(0,2)
0000395A E3F0 D0F0 0024          000000F0   5533          STG   15,240(0,13)
00003960 4110 D0B8               000000B8   5534          LA    1,184(0,13)
00003964 E3F0 C0F8 0004          000036B0   5535          LG    15,@lit_769_171 ; LZ4F_makeBlock
0000396A                                    5536 @@gen_label281 DS    0H
0000396A 05EF                               5537          BALR  14,15
0000396C                                    5538 @@gen_label282 DS    0H
0000396C 414F 4000               00000000   5539          LA    4,0(15,4)
                                            5540 * ***           srcPtr  = srcEnd;
00003970 B904 0036                          5541          LGR   3,6         ; srcPtr
                                            5542 * ***       }
00003974                                    5543 @L146    DS    0H
                                            5544 * ***
                                            5545 * ***
                                            5546 * ***       if ((cctxPtr->prefs.frameInfo.blockMode==LZ4F_blockLinked)\
                                            5547 *  && (lastBlockCompressed==fromSrcBuffer)) {
00003974 E55C 2004 0000          00000004   5548          CHSI  4(2),0
0000397A 4770 C42A               000039E2   5549          BNE   @L147
0000397E A79E 0002               00000002   5550          CHI   9,2
00003982 4770 C42A               000039E2   5551          BNE   @L147
                                            5552 * ***           if (compressOptionsPtr->stableSrc) {
00003986 E3F0 A000 0012          00000000   5553          LT    15,0(0,10)  ; compressOptionsPtr
0000398C 4780 C3E8               000039A0   5554          BZ    @L148
                                            5555 * ***               cctxPtr->tmpIn = cctxPtr->tmpBuff;
00003990 E3F0 2058 0004          00000058   5556          LG    15,88(0,2)  ; offset of tmpBuff in LZ4F_cctx_s
00003996 E3F0 2060 0024          00000060   5557          STG   15,96(0,2)  ; offset of tmpIn in LZ4F_cctx_s
                                            5558 * ***           } else {
0000399C 47F0 C42A               000039E2   5559          B     @L147
000039A0                                    5560 @L148    DS    0H
                                            5561 * ***               int const realDictSize = LZ4F_localSaveDict(cctxPt\
                                            5562 * r);
000039A0 E320 D0B8 0024          000000B8   5563          STG   2,184(0,13)
000039A6 4110 D0B8               000000B8   5564          LA    1,184(0,13)
000039AA E3F0 C100 0004          000036B8   5565          LG    15,@lit_769_176 ; LZ4F_localSaveDict
000039B0                                    5566 @@gen_label286 DS    0H
000039B0 05EF                               5567          BALR  14,15
000039B2                                    5568 @@gen_label287 DS    0H
                                            5569 * ***               if (realDictSize==0) return err0r(LZ4F_ERROR_GENER\
                                            5570 * IC);
000039B2 12FF                               5571          LTR   15,15
000039B4 4770 C416               000039CE   5572          BNE   @L150
000039B8 E548 D0B8 0001          000000B8   5573          MVGHI 184(13),1
000039BE 4110 D0B8               000000B8   5574          LA    1,184(0,13)
000039C2 E3F0 C0D8 0004          00003690   5575          LG    15,@lit_769_165 ; err0r
000039C8                                    5576 @@gen_label289 DS    0H
000039C8 05EF                               5577          BALR  14,15
000039CA                                    5578 @@gen_label290 DS    0H
000039CA 47F0 C50C               00003AC4   5579          B     @ret_lab_769
000039CE                                    5580 @L150    DS    0H
                                            5581 * ***               cctxPtr->tmpIn = cctxPtr->tmpBuff + realDictSize;
                                                                                                                           Page  115 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000039CE E310 2058 0004          00000058   5582          LG    1,88(0,2)   ; offset of tmpBuff in LZ4F_cctx_s
000039D4 B914 00FF                          5583          LGFR  15,15
000039D8 41FF 1000               00000000   5584          LA    15,0(15,1)
000039DC E3F0 2060 0024          00000060   5585          STG   15,96(0,2)  ; offset of tmpIn in LZ4F_cctx_s
                                            5586 * ***           }
000039E2                                    5587 @L149    DS    0H
                                            5588 * ***       }
000039E2                                    5589 @L147    DS    0H
                                            5590 * ***
                                            5591 * ***
                                            5592 * ***       if ((cctxPtr->tmpIn + blockSize) > (cctxPtr->tmpBuff + cct\
                                            5593 * xPtr->maxBufferSize)
                                            5594 * ***           && !(cctxPtr->prefs.autoFlush))
000039E2 E3F0 2060 0004          00000060   5595          LG    15,96(0,2)  ; offset of tmpIn in LZ4F_cctx_s
000039E8 41F5 F000               00000000   5596          LA    15,0(5,15)
000039EC E310 2058 0004          00000058   5597          LG    1,88(0,2)   ; offset of tmpBuff in LZ4F_cctx_s
000039F2 E350 2050 0004          00000050   5598          LG    5,80(0,2)   ; offset of maxBufferSize in LZ4F_cctx_s
000039F8 4115 1000               00000000   5599          LA    1,0(5,1)
000039FC B920 00F1                          5600          CGR   15,1
00003A00 47D0 C47C               00003A34   5601          BNH   @L151
00003A04 E3F0 2024 0012          00000024   5602          LT    15,36(0,2)  ; offset of autoFlush in 0000028
00003A0A 4770 C47C               00003A34   5603          BNZ   @L151
                                            5604 * ***       {
                                            5605 * ***           int const realDictSize = LZ4F_localSaveDict(cctxPtr);
00003A0E E320 D0B8 0024          000000B8   5606          STG   2,184(0,13)
00003A14 4110 D0B8               000000B8   5607          LA    1,184(0,13)
00003A18 E3F0 C100 0004          000036B8   5608          LG    15,@lit_769_176 ; LZ4F_localSaveDict
00003A1E                                    5609 @@gen_label293 DS    0H
00003A1E 05EF                               5610          BALR  14,15
00003A20                                    5611 @@gen_label294 DS    0H
                                            5612 * ***           cctxPtr->tmpIn = cctxPtr->tmpBuff + realDictSize;
00003A20 E310 2058 0004          00000058   5613          LG    1,88(0,2)   ; offset of tmpBuff in LZ4F_cctx_s
00003A26 B914 00FF                          5614          LGFR  15,15
00003A2A 41FF 1000               00000000   5615          LA    15,0(15,1)
00003A2E E3F0 2060 0024          00000060   5616          STG   15,96(0,2)  ; offset of tmpIn in LZ4F_cctx_s
                                            5617 * ***       }
00003A34                                    5618 @L151    DS    0H
                                            5619 * ***
                                            5620 * ***
                                            5621 * ***       if (srcPtr < srcEnd) {
00003A34 B920 0036                          5622          CGR   3,6
00003A38 47B0 C4C6               00003A7E   5623          BNL   @L152
                                            5624 * ***
                                            5625 * ***           size_t const sizeToCopy = (size_t)(srcEnd - srcPtr);
00003A3C B909 0063                          5626          SGR   6,3
                                            5627 * ***           __memcpy(cctxPtr->tmpIn,srcPtr,sizeToCopy);
00003A40 E310 2060 0004          00000060   5628          LG    1,96(0,2)
00003A46 B902 00F6                          5629          LTGR  15,6
00003A4A 4780 C4C0               00003A78   5630          BZ    @@gen_label298
00003A4E A7FB FFFF               0000FFFF   5631          AGHI  15,-1
00003A52 EB5F 0008 000A          00000008   5632          SRAG  5,15,8(0)
00003A58 B902 0055                          5633          LTGR  5,5
                                                                                                                           Page  116 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003A5C 4780 C4BC               00003A74   5634          BZ    @@gen_label297
00003A60                                    5635 @@gen_label296 DS 0H
00003A60 D2FF 1000 3000 00000000 00000000   5636          MVC   0(256,1),0(3)
00003A66 4110 1100               00000100   5637          LA    1,256(0,1)
00003A6A 4130 3100               00000100   5638          LA    3,256(0,3)
00003A6E E350 C4A8 0046          00003A60   5639          BCTG  5,@@gen_label296
00003A74                                    5640 @@gen_label297 DS 0H
00003A74 44F0 C108               000036C0   5641          EX    15,@lit_769_179
00003A78                                    5642 @@gen_label298 DS 0H
                                            5643 * ***           cctxPtr->tmpInSize = sizeToCopy;
00003A78 E360 2068 0024          00000068   5644          STG   6,104(0,2)  ; offset of tmpInSize in LZ4F_cctx_s
                                            5645 * ***       }
00003A7E                                    5646 @L152    DS    0H
                                            5647 * ***
                                            5648 * ***       if (cctxPtr->prefs.frameInfo.contentChecksumFlag == LZ4F_c\
                                            5649 * ontentChecksumEnabled)
00003A7E E55C 2008 0001          00000008   5650          CHSI  8(2),1
00003A84 4770 C4F2               00003AAA   5651          BNE   @L153
                                            5652 * ***           (void)XXH32_update(&(cctxPtr->xxh), srcBuffer, srcSize\
                                            5653 * );
00003A88 41F0 2078               00000078   5654          LA    15,120(0,2)
00003A8C E3F0 D0B8 0024          000000B8   5655          STG   15,184(0,13)
00003A92 E3B0 D0C0 0024          000000C0   5656          STG   11,192(0,13)
00003A98 E380 D0C8 0024          000000C8   5657          STG   8,200(0,13)
00003A9E 4110 D0B8               000000B8   5658          LA    1,184(0,13)
00003AA2 E3F0 C110 0004          000036C8   5659          LG    15,@lit_769_180 ; XXH32_update
00003AA8                                    5660 @@gen_label300 DS    0H
00003AA8 05EF                               5661          BALR  14,15
00003AAA                                    5662 @@gen_label301 DS    0H
00003AAA                                    5663 @L153    DS    0H
                                            5664 * ***
                                            5665 * ***       cctxPtr->totalInSize += srcSize;
00003AAA E380 2070 000A          00000070   5666          ALG   8,112(0,2)
00003AB0 E380 2070 0024          00000070   5667          STG   8,112(0,2)
                                            5668 * ***       return (size_t)(dstPtr - dstStart);
00003AB6 E3F0 D100 0004          00000100   5669          LG    15,256(0,13) ; spill
00003ABC B909 004F                          5670          SGR   4,15
00003AC0 B904 00F4                          5671          LGR   15,4
                                            5672 * ***   }
00003AC4                                    5673 @ret_lab_769 DS 0H
                                            5674 * * **** Start of Epilogue
                                            5675          DCCEPIL
00003AC4                                    5676+         ds 0h                                                          01-DCCEP
                                            5677+* Epilog
00003AC4 D707 D088 D088 00000088 00000088   5678+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003ACA E3D0 D080 0004          00000080   5679+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003AD0 E3C0 D090 0004          00000090   5680+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003AD6 E3B0 C018 0004          00000018   5681+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003ADC E3C0 B010 0021          00000010   5682+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003AE2 E3E0 D008 0004          00000008   5683+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003AE8 EB1C D020 0004          00000020   5684+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003AEE 078E                               5685+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page  117 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003AF0 E3F0 D010 0024          00000010   5686+         stg 15,16(0,13)         save return code                       01-DCCEP
00003AF6 E300 D018 0024          00000018   5687+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003AFC E3F0 D090 0004          00000090   5688+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003B02 E3F0 F018 0004          00000018   5689+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003B08 47F0 F040               00000040   5690+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5691+* End of Epilog
                                            5692 * * **** End of Epilogue
                                            5693          DROP  12
                                            5694 *
                                            5695 *   DSECT for automatic variables in "LZ4F_compressUpdate"
                                            5696 *      (FUNCTION #769)
                                            5697 *
00000000                00000000 000000B8   5698 @AUTO#$L$Z4$F_compress$Update DSECT
00000000                                    5699          DS    XL168
000000A8                                    5700 $L$Z4$F_compress$Update#size$To$Copy#11 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8   5701          ORG   @AUTO#$L$Z4$F_compress$Update+168
000000A8                                    5702 $L$Z4$F_compress$Update#real$Dict$Size#10 DS 1F ; realDictSize
000000AC                000000AC 000000A8   5703          ORG   @AUTO#$L$Z4$F_compress$Update+168
000000A8                                    5704 $L$Z4$F_compress$Update#real$Dict$Size#9 DS 1F ; realDictSize
000000AC                000000AC 000000A8   5705          ORG   @AUTO#$L$Z4$F_compress$Update+168
000000A8                                    5706 $L$Z4$F_compress$Update#size$To$Copy#2 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8   5707          ORG   @AUTO#$L$Z4$F_compress$Update+168
000000A8                                    5708 $L$Z4$F_compress$Update#last$Block$Compressed#0 DS 1F ; lastBlockCompre*
                                                                ssed
000000AC                000000AC 000000A8   5709          ORG   @AUTO#$L$Z4$F_compress$Update+168
000000A8                                    5710 $L$Z4$F_compress$Update#block$Size#0 DS 8XL1 ; blockSize
000000B0                000000B0 000000A8   5711          ORG   @AUTO#$L$Z4$F_compress$Update+168
000000A8                                    5712 $L$Z4$F_compress$Update#c$Options$Null#0 DS 16XL1 ; cOptionsNull
                                            5713 *
00003B0C                00000000 00006CE8   5714 @CODE    CSECT
                                            5715 *
                                            5716 *
                                            5717 *
                                            5718 * ....... start of LZ4F_flush
                                            5719 $L$Z4$F_flush ALIAS X'D3E9F4C66D8693A4A288'
00003B0C                                    5720 @LNAME770 DS   0H
00003B0C 0000000A                           5721          DC    X'0000000A'
00003B10 D3E9F4C66D8693A4                   5722          DC    C'LZ4F_flush'
00003B1A 00                                 5723          DC    X'00'
                                            5724 $L$Z4$F_flush DCCPRLG CINDEX=770,BASER=12,FRAME=240,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME770
                                            5725          macro
                                            5726          dccextrn &m
                                            5727          gblc    &$dccext(1000)
                                            5728          gbla    &$dccexti
                                            5729          lcla    &i
                                            5730 &$dccext(&$dccexti+1) setc    '&m'
                                            5731 &i       seta    1
                                            5732 .loop    aif    (&i gt &$dccexti).around
                                            5733          aif    ('&$dccext(&i)' eq '&m').getout
                                            5734 &i       seta    &i+1
                                            5735          ago     .loop
                                                                                                                           Page  118 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5736 .around  anop
                                            5737 &$dccexti seta &$dccexti+1
                                            5738          extrn  &m
                                            5739 .getout  anop
                                            5740          mend
00003B20                                    5741+$eye0111    ds    0d                                                    02-DCCCA
00003B20 C4C3C3                             5742+         dc cl3'DCC'                                                    02-DCCCA
00003B23 01                                 5743+         dc xl1'01' format one                                          02-DCCCA
00003B24 00000000                           5744+         dc a(0)                                                        02-DCCCA
00003B28 0000000000003B92                   5745+         dc ad(@PER_770)                                                02-DCCCA
00003B30 00000000000000F0                   5746+         dc ad(240)                                                     02-DCCCA
00003B38 0000000000000000                   5747+         dc ad(0)                                                       02-DCCCA
00003B40 0000000000001000                   5748+         dc ad(4096)                                                    02-DCCCA
00003B48 20                                 5749+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003B49 03                                 5750+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003B4A 03                                 5751+         dc al1(3)                                                      02-DCCCA
00003B4B 08                                 5752+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003B4C 00                                 5753+         dc bl.8'00000000'                                              02-DCCCA
00003B4D 000000                             5754+         dc al3(0)                                                      02-DCCCA
00003B50 0000000000003B0C                   5755+         dc ad(@LNAME770)                                               02-DCCCA
00003B58                                    5756+         ds 0d                                                          02-DCCCA
00003B58 0000000000003B20                   5757+         dc ad($eye0111)                                                02-DCCCA
00003B60 0000000000000000                   5758+         dc ad(0)                                                       02-DCCCA
00003B68                                    5759+         ds    0d                                                       01-DCCPR
                                            5760+         entry $L$Z4$F_flush                                            01-DCCPR
00003B68                                    5761+$L$Z4$F_flush ds 0d                                                     01-DCCPR
00003B68                                    5762+@REGION_770_1 ds 0h                                                     01-DCCPR
00003B68 EBEC D008 0024          00000008   5763+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003B6E E3E0 D088 0004          00000088   5764+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003B74 E3C0 D090 0004          00000090   5765+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003B7A B904 002E                          5766+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003B7E E3B0 C018 0004          00000018   5767+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003B84 A7EB 00F0               000000F0   5768+         aghi  14,240              increase by frame size               01-DCCPR
00003B88 E3E0 C020 0021          00000020   5769+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003B8E 4720 B020               00000020   5770+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003B92                                    5771+@PER_770 ds    0h                                                       01-DCCPR
00003B92 EBDE 2080 0024          00000080   5772+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003B98 E3C0 2090 0024          00000090   5773+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003B9E B904 00D2                          5774+         lgr   13,2                set real frame pointer               01-DCCPR
00003BA2 B904 00CF                          5775+         lgr   12,15               set base reg                         01-DCCPR
                        00003B68            5776+         using @REGION_770_1,12                                         01-DCCPR
                                            5777 * ******* End of Prologue
                                            5778 * *
                                            5779 * ***       BYTE* const dstStart = (BYTE*)dstBuffer;
00003BA6 EB34 1000 0004          00000000   5780          LMG   3,4,0(1)    ; cctxPtr
                                            5781 * ***       BYTE* dstPtr = dstStart;
00003BAC B904 0024                          5782          LGR   2,4         ; dstPtr
                                            5783 * ***       compressFunc_t compress;
                                            5784 * ***
                                            5785 * ***       if (cctxPtr->tmpInSize == 0) return 0;
00003BB0 E559 3068 0000          00000068   5786          CLGHSI 104(3),0
00003BB6 4770 C0A0               00003C08   5787          BNE   @L154
                                                                                                                           Page  119 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003BBA A7F9 0000               00000000   5788          LGHI  15,0        ; 0
00003BBE 47F0 C246               00003DAE   5789          B     @ret_lab_770
00003BC8                                    5790          DS    0D
00003BC8 000000F0                           5791 @FRAMESIZE_770 DC F'240'
00003BCC 00000000
00003BD0 0000000000000A60                   5792 @lit_770_183 DC AD(err0r)
00003BD8 0000000000006CE8                   5793 @lit_770_184 DC AD(@DATA)
00003BE0 0000000000003358                   5794 @lit_770_186 DC AD($L$Z4$F_select$Compression)
00003BE8 00000000000029E0                   5795 @lit_770_187 DC AD($L$Z4$F_make$Block)
00003BF0 0000000000000000                   5796 @lit_770_189 DC AD(__assert)
00003BF8 0000000000006DDE                   5797 @lit_770_188 DC AD(@strings@)
00003C00 0000000000003438                   5798 @lit_770_190 DC AD($L$Z4$F_local$Save$Dict)
00003C08                                    5799 @L154    DS    0H
                                            5800 * ***       if (cctxPtr->cStage != 1) return err0r(LZ4F_ERROR_GENERIC)\
                                            5801 * ;
00003C08 E55D 303C 0001          0000003C   5802          CLFHSI 60(3),1
00003C0E 4780 C0C0               00003C28   5803          BE    @L155
00003C12 E548 D0B0 0001          000000B0   5804          MVGHI 176(13),1
00003C18 4110 D0B0               000000B0   5805          LA    1,176(0,13)
00003C1C E3F0 C068 0004          00003BD0   5806          LG    15,@lit_770_183 ; err0r
00003C22                                    5807 @@gen_label304 DS    0H
00003C22 05EF                               5808          BALR  14,15
00003C24                                    5809 @@gen_label305 DS    0H
00003C24 47F0 C246               00003DAE   5810          B     @ret_lab_770
00003C28                                    5811 @L155    DS    0H
                                            5812 * ***       if (dstCapacity < (cctxPtr->tmpInSize + BHSize + BFSize))
00003C28 E350 1010 0004          00000010   5813          LG    5,16(0,1)   ; dstCapacity
00003C2E E3F0 3068 0004          00000068   5814          LG    15,104(0,3) ; offset of tmpInSize in LZ4F_cctx_s
00003C34 E360 C070 0004          00003BD8   5815          LG    6,@lit_770_184
00003C3A E3F0 6058 000A          00000058   5816          ALG   15,88(0,6)
00003C40 E3F0 6060 000A          00000060   5817          ALG   15,96(0,6)
00003C46 B921 005F                          5818          CLGR  5,15
00003C4A 47B0 C0FC               00003C64   5819          BNL   @L156
                                            5820 * ***           return err0r(LZ4F_ERROR_dstMaxSize_tooSmall);
00003C4E E548 D0B0 000B          000000B0   5821          MVGHI 176(13),11
00003C54 4110 D0B0               000000B0   5822          LA    1,176(0,13)
00003C58 E3F0 C068 0004          00003BD0   5823          LG    15,@lit_770_183 ; err0r
00003C5E                                    5824 @@gen_label307 DS    0H
00003C5E 05EF                               5825          BALR  14,15
00003C60                                    5826 @@gen_label308 DS    0H
00003C60 47F0 C246               00003DAE   5827          B     @ret_lab_770
00003C64                                    5828 @L156    DS    0H
                                            5829 * ***       (void)compressOptionsPtr;
                                            5830 * ***
                                            5831 * ***
                                            5832 * ***       compress = LZ4F_selectCompression(cctxPtr->prefs.frameInfo\
                                            5833 * .blockMode, cctxPtr->prefs.compressionLevel);
00003C64 E3F0 3004 0014          00000004   5834          LGF   15,4(0,3)
00003C6A E3F0 D0B0 0024          000000B0   5835          STG   15,176(0,13)
00003C70 E3F0 3020 0014          00000020   5836          LGF   15,32(0,3)
00003C76 E3F0 D0B8 0024          000000B8   5837          STG   15,184(0,13)
00003C7C 4110 D0B0               000000B0   5838          LA    1,176(0,13)
                                                                                                                           Page  120 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003C80 E3F0 C078 0004          00003BE0   5839          LG    15,@lit_770_186 ; LZ4F_selectCompression
00003C86                                    5840 @@gen_label309 DS    0H
00003C86 05EF                               5841          BALR  14,15
00003C88                                    5842 @@gen_label310 DS    0H
                                            5843 * ***
                                            5844 * ***
                                            5845 * ***       dstPtr += LZ4F_makeBlock(dstPtr,
                                            5846 * ***                                cctxPtr->tmpIn, cctxPtr->tmpInSiz\
                                            5847 * e,
                                            5848 * ***                                compress, cctxPtr->lz4CtxPtr, cct\
                                            5849 * xPtr->prefs.compressionLevel,
                                            5850 * ***                                cctxPtr->cdict,
                                            5851 * ***                                cctxPtr->prefs.frameInfo.blockChe\
                                            5852 * cksumFlag);
00003C88 E320 D0B0 0024          000000B0   5853          STG   2,176(0,13)
00003C8E E310 3060 0004          00000060   5854          LG    1,96(0,3)
00003C94 E310 D0B8 0024          000000B8   5855          STG   1,184(0,13)
00003C9A E310 3068 0004          00000068   5856          LG    1,104(0,3)
00003CA0 E310 D0C0 0024          000000C0   5857          STG   1,192(0,13)
00003CA6 E3F0 D0C8 0024          000000C8   5858          STG   15,200(0,13)
00003CAC E3F0 30A8 0004          000000A8   5859          LG    15,168(0,3)
00003CB2 E3F0 D0D0 0024          000000D0   5860          STG   15,208(0,13)
00003CB8 E3F0 3020 0014          00000020   5861          LGF   15,32(0,3)
00003CBE E3F0 D0D8 0024          000000D8   5862          STG   15,216(0,13)
00003CC4 E3F0 3040 0004          00000040   5863          LG    15,64(0,3)
00003CCA E3F0 D0E0 0024          000000E0   5864          STG   15,224(0,13)
00003CD0 E3F0 301C 0014          0000001C   5865          LGF   15,28(0,3)
00003CD6 E3F0 D0E8 0024          000000E8   5866          STG   15,232(0,13)
00003CDC 4110 D0B0               000000B0   5867          LA    1,176(0,13)
00003CE0 E3F0 C080 0004          00003BE8   5868          LG    15,@lit_770_187 ; LZ4F_makeBlock
00003CE6                                    5869 @@gen_label311 DS    0H
00003CE6 05EF                               5870          BALR  14,15
00003CE8                                    5871 @@gen_label312 DS    0H
00003CE8 412F 2000               00000000   5872          LA    2,0(15,2)
                                            5873 * ***       ((((void)"flush overflows dstBuffer!", (size_t)(dstPtr - d\
                                            5874 * stStart) <= dstCapacity)) ? (void)0 : __assert(__func__, "C:\\asgkaf\
                                            5875 * ka\\librdkafka\\src\\lz4frame.c", 961, "((void)\"flush overflows dst\
                                            5876 * Buffer!\", (size_t)(dstPtr - dstStart) <= dstCapacity)"));
00003CEC B904 00F2                          5877          LGR   15,2
00003CF0 B909 00F4                          5878          SGR   15,4
00003CF4 B921 00F5                          5879          CLGR  15,5
00003CF8 47D0 C1CA               00003D32   5880          BNH   @L158
00003CFC                                    5881 @L157    DS    0H
00003CFC 41F0 60A6               000000A6   5882          LA    15,166(0,6)
00003D00 E3F0 D0B0 0024          000000B0   5883          STG   15,176(0,13)
00003D06 E3F0 C090 0004          00003BF8   5884          LG    15,@lit_770_188
00003D0C 4110 F022               00000022   5885          LA    1,34(0,15)
00003D10 E310 D0B8 0024          000000B8   5886          STG   1,184(0,13)
00003D16 E548 D0C0 03C1          000000C0   5887          MVGHI 192(13),961
00003D1C 41F0 F06E               0000006E   5888          LA    15,110(0,15)
00003D20 E3F0 D0C8 0024          000000C8   5889          STG   15,200(0,13)
00003D26 4110 D0B0               000000B0   5890          LA    1,176(0,13)
                                                                                                                           Page  121 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003D2A E3F0 C088 0004          00003BF0   5891          LG    15,@lit_770_189 ; __assert
00003D30                                    5892 @@gen_label314 DS    0H
00003D30 05EF                               5893          BALR  14,15
00003D32                                    5894 @@gen_label315 DS    0H
00003D32                                    5895 @L158    DS    0H
                                            5896 * ***
                                            5897 * ***       if (cctxPtr->prefs.frameInfo.blockMode == LZ4F_blockLinked\
                                            5898 * )
00003D32 E55C 3004 0000          00000004   5899          CHSI  4(3),0
00003D38 4770 C1EA               00003D52   5900          BNE   @L159
                                            5901 * ***           cctxPtr->tmpIn += cctxPtr->tmpInSize;
00003D3C E3F0 3060 0004          00000060   5902          LG    15,96(0,3)
00003D42 E310 3068 0004          00000068   5903          LG    1,104(0,3)  ; offset of tmpInSize in LZ4F_cctx_s
00003D48 41F1 F000               00000000   5904          LA    15,0(1,15)
00003D4C E3F0 3060 0024          00000060   5905          STG   15,96(0,3)
00003D52                                    5906 @L159    DS    0H
                                            5907 * ***       cctxPtr->tmpInSize = 0;
00003D52 E548 3068 0000          00000068   5908          MVGHI 104(3),0    ; offset of tmpInSize in LZ4F_cctx_s
                                            5909 * ***
                                            5910 * ***
                                            5911 * ***       if ((cctxPtr->tmpIn + cctxPtr->maxBlockSize) > (cctxPtr->t\
                                            5912 * mpBuff + cctxPtr->maxBufferSize)) {
00003D58 E3F0 3060 0004          00000060   5913          LG    15,96(0,3)  ; offset of tmpIn in LZ4F_cctx_s
00003D5E E310 3048 0004          00000048   5914          LG    1,72(0,3)   ; offset of maxBlockSize in LZ4F_cctx_s
00003D64 41F1 F000               00000000   5915          LA    15,0(1,15)
00003D68 E310 3058 0004          00000058   5916          LG    1,88(0,3)   ; offset of tmpBuff in LZ4F_cctx_s
00003D6E E350 3050 0004          00000050   5917          LG    5,80(0,3)   ; offset of maxBufferSize in LZ4F_cctx_s
00003D74 4115 1000               00000000   5918          LA    1,0(5,1)
00003D78 B920 00F1                          5919          CGR   15,1
00003D7C 47D0 C23E               00003DA6   5920          BNH   @L160
                                            5921 * ***           int const realDictSize = LZ4F_localSaveDict(cctxPtr);
00003D80 E330 D0B0 0024          000000B0   5922          STG   3,176(0,13)
00003D86 4110 D0B0               000000B0   5923          LA    1,176(0,13)
00003D8A E3F0 C098 0004          00003C00   5924          LG    15,@lit_770_190 ; LZ4F_localSaveDict
00003D90                                    5925 @@gen_label318 DS    0H
00003D90 05EF                               5926          BALR  14,15
00003D92                                    5927 @@gen_label319 DS    0H
                                            5928 * ***           cctxPtr->tmpIn = cctxPtr->tmpBuff + realDictSize;
00003D92 E310 3058 0004          00000058   5929          LG    1,88(0,3)   ; offset of tmpBuff in LZ4F_cctx_s
00003D98 B914 00FF                          5930          LGFR  15,15
00003D9C 41FF 1000               00000000   5931          LA    15,0(15,1)
00003DA0 E3F0 3060 0024          00000060   5932          STG   15,96(0,3)  ; offset of tmpIn in LZ4F_cctx_s
                                            5933 * ***       }
00003DA6                                    5934 @L160    DS    0H
                                            5935 * ***
                                            5936 * ***       return (size_t)(dstPtr - dstStart);
00003DA6 B909 0024                          5937          SGR   2,4
00003DAA B904 00F2                          5938          LGR   15,2
                                            5939 * ***   }
00003DAE                                    5940 @ret_lab_770 DS 0H
                                            5941 * * **** Start of Epilogue
                                            5942          DCCEPIL
                                                                                                                           Page  122 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003DAE                                    5943+         ds 0h                                                          01-DCCEP
                                            5944+* Epilog
00003DAE D707 D088 D088 00000088 00000088   5945+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003DB4 E3D0 D080 0004          00000080   5946+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003DBA E3C0 D090 0004          00000090   5947+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003DC0 E3B0 C018 0004          00000018   5948+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003DC6 E3C0 B010 0021          00000010   5949+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003DCC E3E0 D008 0004          00000008   5950+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003DD2 EB1C D020 0004          00000020   5951+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003DD8 078E                               5952+         bcr 8,14                if same dsab, just return              01-DCCEP
00003DDA E3F0 D010 0024          00000010   5953+         stg 15,16(0,13)         save return code                       01-DCCEP
00003DE0 E300 D018 0024          00000018   5954+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003DE6 E3F0 D090 0004          00000090   5955+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003DEC E3F0 F018 0004          00000018   5956+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003DF2 47F0 F040               00000040   5957+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5958+* End of Epilog
                                            5959 * * **** End of Epilogue
                                            5960          DROP  12
                                            5961 *
                                            5962 *   DSECT for automatic variables in "LZ4F_flush"
                                            5963 *      (FUNCTION #770)
                                            5964 *
00000000                00000000 000000AC   5965 @AUTO#$L$Z4$F_flush DSECT
00000000                                    5966          DS    XL168
000000A8                                    5967 $L$Z4$F_flush#real$Dict$Size#1 DS 1F ; realDictSize
                                            5968 *
00003DF6                00000000 00006CE8   5969 @CODE    CSECT
                                            5970 *
                                            5971 *
                                            5972 *
                                            5973 * ....... start of LZ4F_compressEnd
                                            5974 $L$Z4$F_compress$End ALIAS X'D3E9F4C66D839694979985A2A2C59584'
00003DF6                                    5975 @LNAME771 DS   0H
00003DF6 00000010                           5976          DC    X'00000010'
00003DFA D3E9F4C66D839694                   5977          DC    C'LZ4F_compressEnd'
00003E0A 00                                 5978          DC    X'00'
                                            5979 $L$Z4$F_compress$End DCCPRLG CINDEX=771,BASER=12,FRAME=208,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME771
                                            5980          macro
                                            5981          dccextrn &m
                                            5982          gblc    &$dccext(1000)
                                            5983          gbla    &$dccexti
                                            5984          lcla    &i
                                            5985 &$dccext(&$dccexti+1) setc    '&m'
                                            5986 &i       seta    1
                                            5987 .loop    aif    (&i gt &$dccexti).around
                                            5988          aif    ('&$dccext(&i)' eq '&m').getout
                                            5989 &i       seta    &i+1
                                            5990          ago     .loop
                                            5991 .around  anop
                                            5992 &$dccexti seta &$dccexti+1
                                            5993          extrn  &m
                                                                                                                           Page  123 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5994 .getout  anop
                                            5995          mend
00003E10                                    5996+$eye0114    ds    0d                                                    02-DCCCA
00003E10 C4C3C3                             5997+         dc cl3'DCC'                                                    02-DCCCA
00003E13 01                                 5998+         dc xl1'01' format one                                          02-DCCCA
00003E14 00000000                           5999+         dc a(0)                                                        02-DCCCA
00003E18 0000000000003E82                   6000+         dc ad(@PER_771)                                                02-DCCCA
00003E20 00000000000000D0                   6001+         dc ad(208)                                                     02-DCCCA
00003E28 0000000000000000                   6002+         dc ad(0)                                                       02-DCCCA
00003E30 0000000000001000                   6003+         dc ad(4096)                                                    02-DCCCA
00003E38 20                                 6004+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003E39 03                                 6005+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003E3A 03                                 6006+         dc al1(3)                                                      02-DCCCA
00003E3B 08                                 6007+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003E3C 00                                 6008+         dc bl.8'00000000'                                              02-DCCCA
00003E3D 000000                             6009+         dc al3(0)                                                      02-DCCCA
00003E40 0000000000003DF6                   6010+         dc ad(@LNAME771)                                               02-DCCCA
00003E48                                    6011+         ds 0d                                                          02-DCCCA
00003E48 0000000000003E10                   6012+         dc ad($eye0114)                                                02-DCCCA
00003E50 0000000000000000                   6013+         dc ad(0)                                                       02-DCCCA
00003E58                                    6014+         ds    0d                                                       01-DCCPR
                                            6015+         entry $L$Z4$F_compress$End                                     01-DCCPR
00003E58                                    6016+$L$Z4$F_compress$End ds 0d                                              01-DCCPR
00003E58                                    6017+@REGION_771_1 ds 0h                                                     01-DCCPR
00003E58 EBEC D008 0024          00000008   6018+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003E5E E3E0 D088 0004          00000088   6019+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003E64 E3C0 D090 0004          00000090   6020+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003E6A B904 002E                          6021+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003E6E E3B0 C018 0004          00000018   6022+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003E74 A7EB 00D0               000000D0   6023+         aghi  14,208              increase by frame size               01-DCCPR
00003E78 E3E0 C020 0021          00000020   6024+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003E7E 4720 B020               00000020   6025+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003E82                                    6026+@PER_771 ds    0h                                                       01-DCCPR
00003E82 EBDE 2080 0024          00000080   6027+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003E88 E3C0 2090 0024          00000090   6028+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003E8E B904 00D2                          6029+         lgr   13,2                set real frame pointer               01-DCCPR
00003E92 B904 00CF                          6030+         lgr   12,15               set base reg                         01-DCCPR
                        00003E58            6031+         using @REGION_771_1,12                                         01-DCCPR
                                            6032 * ******* End of Prologue
                                            6033 * *
                                            6034 * ***       BYTE* const dstStart = (BYTE*)dstBuffer;
00003E96 E340 1000 0004          00000000   6035          LG    4,0(0,1)    ; cctxPtr
00003E9C E330 1010 0004          00000010   6036          LG    3,16(0,1)   ; dstCapacity
00003EA2 E350 1008 0004          00000008   6037          LG    5,8(0,1)    ; dstBuffer
                                            6038 * ***       BYTE* dstPtr = dstStart;
00003EA8 B904 0025                          6039          LGR   2,5         ; dstPtr
                                            6040 * ***
                                            6041 * ***       size_t const flushSize = LZ4F_flush(cctxPtr, dstBuffer, ds\
                                            6042 * tCapacity, compressOptionsPtr);
00003EAC EB45 D0B0 0024          000000B0   6043          STMG  4,5,176(13)
00003EB2 E330 D0C0 0024          000000C0   6044          STG   3,192(0,13)
00003EB8 E3F0 1018 0004          00000018   6045          LG    15,24(0,1)  ; compressOptionsPtr
                                                                                                                           Page  124 
  Active Usings: @REGION_771_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003EBE E3F0 D0C8 0024          000000C8   6046          STG   15,200(0,13)
00003EC4 4110 D0B0               000000B0   6047          LA    1,176(0,13)
00003EC8 E3F0 C0A8 0004          00003F00   6048          LG    15,@lit_771_192 ; LZ4F_flush
00003ECE                                    6049 @@gen_label320 DS    0H
00003ECE 05EF                               6050          BALR  14,15
00003ED0                                    6051 @@gen_label321 DS    0H
00003ED0 B904 006F                          6052          LGR   6,15
                                            6053 * ***       {};
                                            6054 * ***       if (LZ4F_isError(flushSize)) return flushSize;
00003ED4 E360 D0B0 0024          000000B0   6055          STG   6,176(0,13)
00003EDA 4110 D0B0               000000B0   6056          LA    1,176(0,13)
00003EDE E3F0 C0B0 0004          00003F08   6057          LG    15,@lit_771_193 ; LZ4F_isError
00003EE4                                    6058 @@gen_label322 DS    0H
00003EE4 05EF                               6059          BALR  14,15
00003EE6                                    6060 @@gen_label323 DS    0H
00003EE6 12FF                               6061          LTR   15,15
00003EE8 4780 C0E8               00003F40   6062          BZ    @L161
00003EEC B904 00F6                          6063          LGR   15,6
00003EF0 47F0 C216               0000406E   6064          B     @ret_lab_771
00003EF8                                    6065          DS    0D
00003EF8 000000D0                           6066 @FRAMESIZE_771 DC F'208'
00003EFC 00000000
00003F00 0000000000003B68                   6067 @lit_771_192 DC AD($L$Z4$F_flush)
00003F08 0000000000000738                   6068 @lit_771_193 DC AD($L$Z4$F_is$Error)
00003F10 0000000000000000                   6069 @lit_771_196 DC AD(__assert)
00003F18 0000000000006DDE                   6070 @lit_771_195 DC AD(@strings@)
00003F20 0000000000006CE8                   6071 @lit_771_194 DC AD(@DATA)
00003F28 0000000000000A60                   6072 @lit_771_197 DC AD(err0r)
00003F30 00000000000004E8                   6073 @lit_771_198 DC AD($L$Z4$F_write$L$E32)
00003F38 0000000000000000                   6074 @lit_771_199 DC AD($X$X$H32_digest)
00003F40                                    6075 @L161    DS    0H
                                            6076 * ***       dstPtr += flushSize;
00003F40 4126 2000               00000000   6077          LA    2,0(6,2)
                                            6078 * ***
                                            6079 * ***       ((flushSize <= dstCapacity) ? (void)0 : __assert(__func__,\
                                            6080 *  "C:\\asgkafka\\librdkafka\\src\\lz4frame.c", 998, "flushSize <= dst\
                                            6081 * Capacity"));
00003F44 B921 0063                          6082          CLGR  6,3
00003F48 47D0 C130               00003F88   6083          BNH   @L163
00003F4C                                    6084 @L162    DS    0H
00003F4C E3F0 C0C8 0004          00003F20   6085          LG    15,@lit_771_194
00003F52 41F0 F0B2               000000B2   6086          LA    15,178(0,15)
00003F56 E3F0 D0B0 0024          000000B0   6087          STG   15,176(0,13)
00003F5C E3F0 C0C0 0004          00003F18   6088          LG    15,@lit_771_195
00003F62 4110 F022               00000022   6089          LA    1,34(0,15)
00003F66 E310 D0B8 0024          000000B8   6090          STG   1,184(0,13)
00003F6C E548 D0C0 03E6          000000C0   6091          MVGHI 192(13),998
00003F72 41F0 F0C0               000000C0   6092          LA    15,192(0,15)
00003F76 E3F0 D0C8 0024          000000C8   6093          STG   15,200(0,13)
00003F7C 4110 D0B0               000000B0   6094          LA    1,176(0,13)
00003F80 E3F0 C0B8 0004          00003F10   6095          LG    15,@lit_771_196 ; __assert
00003F86                                    6096 @@gen_label326 DS    0H
                                                                                                                           Page  125 
  Active Usings: @REGION_771_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003F86 05EF                               6097          BALR  14,15
00003F88                                    6098 @@gen_label327 DS    0H
00003F88                                    6099 @L163    DS    0H
                                            6100 * ***       dstCapacity -= flushSize;
00003F88 B90B 0036                          6101          SLGR  3,6
                                            6102 * ***
                                            6103 * ***       if (dstCapacity < 4) return err0r(LZ4F_ERROR_dstMaxSize_to\
                                            6104 * oSmall);
00003F8C C23E 0000 0004                     6105          CLGFI 3,X'00000004'
00003F92 47B0 C154               00003FAC   6106          BNL   @L164
00003F96 E548 D0B0 000B          000000B0   6107          MVGHI 176(13),11
00003F9C 4110 D0B0               000000B0   6108          LA    1,176(0,13)
00003FA0 E3F0 C0D0 0004          00003F28   6109          LG    15,@lit_771_197 ; err0r
00003FA6                                    6110 @@gen_label329 DS    0H
00003FA6 05EF                               6111          BALR  14,15
00003FA8                                    6112 @@gen_label330 DS    0H
00003FA8 47F0 C216               0000406E   6113          B     @ret_lab_771
00003FAC                                    6114 @L164    DS    0H
                                            6115 * ***       LZ4F_writeLE32(dstPtr, 0);
00003FAC E320 D0B0 0024          000000B0   6116          STG   2,176(0,13)
00003FB2 D707 D0B8 D0B8 000000B8 000000B8   6117          XC    184(8,13),184(13)
00003FB8 4110 D0B0               000000B0   6118          LA    1,176(0,13)
00003FBC E360 C0D8 0004          00003F30   6119          LG    6,@lit_771_198 ; LZ4F_writeLE32
00003FC2 B904 00F6                          6120          LGR   15,6
00003FC6                                    6121 @@gen_label331 DS    0H
00003FC6 05EF                               6122          BALR  14,15
00003FC8                                    6123 @@gen_label332 DS    0H
                                            6124 * ***       dstPtr += 4;
00003FC8 4120 2004               00000004   6125          LA    2,4(0,2)
                                            6126 * ***
                                            6127 * ***       if (cctxPtr->prefs.frameInfo.contentChecksumFlag == LZ4F_c\
                                            6128 * ontentChecksumEnabled) {
00003FCC E55C 4008 0001          00000008   6129          CHSI  8(4),1
00003FD2 4770 C1D2               0000402A   6130          BNE   @L165
                                            6131 * ***           U32 const xxh = XXH32_digest(&(cctxPtr->xxh));
00003FD6 41F0 4078               00000078   6132          LA    15,120(0,4)
00003FDA E3F0 D0B0 0024          000000B0   6133          STG   15,176(0,13)
00003FE0 4110 D0B0               000000B0   6134          LA    1,176(0,13)
00003FE4 E3F0 C0E0 0004          00003F38   6135          LG    15,@lit_771_199 ; XXH32_digest
00003FEA                                    6136 @@gen_label334 DS    0H
00003FEA 05EF                               6137          BALR  14,15
00003FEC                                    6138 @@gen_label335 DS    0H
                                            6139 * ***           if (dstCapacity < 8) return err0r(LZ4F_ERROR_dstMaxSiz\
                                            6140 * e_tooSmall);
00003FEC C23E 0000 0008                     6141          CLGFI 3,X'00000008'
00003FF2 47B0 C1B4               0000400C   6142          BNL   @L166
00003FF6 E548 D0B0 000B          000000B0   6143          MVGHI 176(13),11
00003FFC 4110 D0B0               000000B0   6144          LA    1,176(0,13)
00004000 E3F0 C0D0 0004          00003F28   6145          LG    15,@lit_771_197 ; err0r
00004006                                    6146 @@gen_label337 DS    0H
00004006 05EF                               6147          BALR  14,15
00004008                                    6148 @@gen_label338 DS    0H
                                                                                                                           Page  126 
  Active Usings: @REGION_771_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004008 47F0 C216               0000406E   6149          B     @ret_lab_771
0000400C                                    6150 @L166    DS    0H
                                            6151 * ***           {};
                                            6152 * ***           LZ4F_writeLE32(dstPtr, xxh);
0000400C E320 D0B0 0024          000000B0   6153          STG   2,176(0,13)
00004012 B916 00FF                          6154          LLGFR 15,15
00004016 E3F0 D0B8 0024          000000B8   6155          STG   15,184(0,13)
0000401C 4110 D0B0               000000B0   6156          LA    1,176(0,13)
00004020 B904 00F6                          6157          LGR   15,6
00004024                                    6158 @@gen_label339 DS    0H
00004024 05EF                               6159          BALR  14,15
00004026                                    6160 @@gen_label340 DS    0H
                                            6161 * ***           dstPtr+=4;
00004026 4120 2004               00000004   6162          LA    2,4(0,2)
                                            6163 * ***       }
0000402A                                    6164 @L165    DS    0H
                                            6165 * ***
                                            6166 * ***       cctxPtr->cStage = 0;
0000402A E54C 403C 0000          0000003C   6167          MVHI  60(4),0     ; offset of cStage in LZ4F_cctx_s
                                            6168 * ***       cctxPtr->maxBufferSize = 0;
00004030 E548 4050 0000          00000050   6169          MVGHI 80(4),0     ; offset of maxBufferSize in LZ4F_cctx_s
                                            6170 * ***
                                            6171 * ***       if (cctxPtr->prefs.frameInfo.contentSize) {
00004036 E3F0 4010 0002          00000010   6172          LTG   15,16(0,4)  ; offset of contentSize in 0000027
0000403C 4780 C20E               00004066   6173          BZ    @L167
                                            6174 * ***           if (cctxPtr->prefs.frameInfo.contentSize != cctxPtr->t\
                                            6175 * otalInSize)
00004040 E3F0 4010 0004          00000010   6176          LG    15,16(0,4)  ; offset of contentSize in 0000027
00004046 E3F0 4070 0021          00000070   6177          CLG   15,112(0,4)
0000404C 4780 C20E               00004066   6178          BE    @L167
                                            6179 * ***               return err0r(LZ4F_ERROR_frameSize_wrong);
00004050 E548 D0B0 000E          000000B0   6180          MVGHI 176(13),14
00004056 4110 D0B0               000000B0   6181          LA    1,176(0,13)
0000405A E3F0 C0D0 0004          00003F28   6182          LG    15,@lit_771_197 ; err0r
00004060                                    6183 @@gen_label343 DS    0H
00004060 05EF                               6184          BALR  14,15
00004062                                    6185 @@gen_label344 DS    0H
00004062 47F0 C216               0000406E   6186          B     @ret_lab_771
                                            6187 * ***       }
00004066                                    6188 @L167    DS    0H
                                            6189 * ***
                                            6190 * ***       return (size_t)(dstPtr - dstStart);
00004066 B909 0025                          6191          SGR   2,5
0000406A B904 00F2                          6192          LGR   15,2
                                            6193 * ***   }
0000406E                                    6194 @ret_lab_771 DS 0H
                                            6195 * * **** Start of Epilogue
                                            6196          DCCEPIL
0000406E                                    6197+         ds 0h                                                          01-DCCEP
                                            6198+* Epilog
0000406E D707 D088 D088 00000088 00000088   6199+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004074 E3D0 D080 0004          00000080   6200+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page  127 
  Active Usings: @REGION_771_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000407A E3C0 D090 0004          00000090   6201+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004080 E3B0 C018 0004          00000018   6202+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004086 E3C0 B010 0021          00000010   6203+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000408C E3E0 D008 0004          00000008   6204+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004092 EB1C D020 0004          00000020   6205+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004098 078E                               6206+         bcr 8,14                if same dsab, just return              01-DCCEP
0000409A E3F0 D010 0024          00000010   6207+         stg 15,16(0,13)         save return code                       01-DCCEP
000040A0 E300 D018 0024          00000018   6208+         stg 0,24(0,13)          save more return code                  01-DCCEP
000040A6 E3F0 D090 0004          00000090   6209+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000040AC E3F0 F018 0004          00000018   6210+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000040B2 47F0 F040               00000040   6211+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6212+* End of Epilog
                                            6213 * * **** End of Epilogue
                                            6214          DROP  12
                                            6215 *
                                            6216 *   DSECT for automatic variables in "LZ4F_compressEnd"
                                            6217 *      (FUNCTION #771)
                                            6218 *
00000000                00000000 000000B0   6219 @AUTO#$L$Z4$F_compress$End DSECT
00000000                                    6220          DS    XL168
000000A8                                    6221 $L$Z4$F_compress$End#xxh#2 DS 1F ; xxh
000000AC                000000AC 000000A8   6222          ORG   @AUTO#$L$Z4$F_compress$End+168
000000A8                                    6223 $L$Z4$F_compress$End#flush$Size#0 DS 8XL1 ; flushSize
                                            6224 *
000040B6                00000000 00006CE8   6225 @CODE    CSECT
                                            6226 *
                                            6227 *
                                            6228 *
                                            6229 * ....... start of LZ4F_createDecompressionContext
                                            6230 $L$Z4$F_create$Decompression$Context ALIAS X'D3E9F4C66D83998581A385C485*
                                                                839694979985A2A2899695C39695A385A7A3'
000040B6                                    6231 @LNAME772 DS   0H
000040B6 0000001F                           6232          DC    X'0000001F'
000040BA D3E9F4C66D839985                   6233          DC    C'LZ4F_createDecompressionContext'
000040D9 00                                 6234          DC    X'00'
                                            6235 $L$Z4$F_create$Decompression$Context DCCPRLG CINDEX=772,BASER=12,FRAME=*
                                                                192,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME772
                                            6236          macro
                                            6237          dccextrn &m
                                            6238          gblc    &$dccext(1000)
                                            6239          gbla    &$dccexti
                                            6240          lcla    &i
                                            6241 &$dccext(&$dccexti+1) setc    '&m'
                                            6242 &i       seta    1
                                            6243 .loop    aif    (&i gt &$dccexti).around
                                            6244          aif    ('&$dccext(&i)' eq '&m').getout
                                            6245 &i       seta    &i+1
                                            6246          ago     .loop
                                            6247 .around  anop
                                            6248 &$dccexti seta &$dccexti+1
                                            6249          extrn  &m
                                            6250 .getout  anop
                                                                                                                           Page  128 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6251          mend
000040E0                                    6252+$eye0117    ds    0d                                                    02-DCCCA
000040E0 C4C3C3                             6253+         dc cl3'DCC'                                                    02-DCCCA
000040E3 01                                 6254+         dc xl1'01' format one                                          02-DCCCA
000040E4 00000000                           6255+         dc a(0)                                                        02-DCCCA
000040E8 0000000000004152                   6256+         dc ad(@PER_772)                                                02-DCCCA
000040F0 00000000000000C0                   6257+         dc ad(192)                                                     02-DCCCA
000040F8 0000000000000000                   6258+         dc ad(0)                                                       02-DCCCA
00004100 0000000000001000                   6259+         dc ad(4096)                                                    02-DCCCA
00004108 20                                 6260+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004109 03                                 6261+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000410A 03                                 6262+         dc al1(3)                                                      02-DCCCA
0000410B 08                                 6263+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000410C 00                                 6264+         dc bl.8'00000000'                                              02-DCCCA
0000410D 000000                             6265+         dc al3(0)                                                      02-DCCCA
00004110 00000000000040B6                   6266+         dc ad(@LNAME772)                                               02-DCCCA
00004118                                    6267+         ds 0d                                                          02-DCCCA
00004118 00000000000040E0                   6268+         dc ad($eye0117)                                                02-DCCCA
00004120 0000000000000000                   6269+         dc ad(0)                                                       02-DCCCA
00004128                                    6270+         ds    0d                                                       01-DCCPR
                                            6271+         entry $L$Z4$F_create$Decompression$Context                     01-DCCPR
00004128                                    6272+$L$Z4$F_create$Decompression$Context ds 0d                              01-DCCPR
00004128                                    6273+@REGION_772_1 ds 0h                                                     01-DCCPR
00004128 EBEC D008 0024          00000008   6274+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000412E E3E0 D088 0004          00000088   6275+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004134 E3C0 D090 0004          00000090   6276+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000413A B904 002E                          6277+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000413E E3B0 C018 0004          00000018   6278+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004144 A7EB 00C0               000000C0   6279+         aghi  14,192              increase by frame size               01-DCCPR
00004148 E3E0 C020 0021          00000020   6280+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000414E 4720 B020               00000020   6281+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004152                                    6282+@PER_772 ds    0h                                                       01-DCCPR
00004152 EBDE 2080 0024          00000080   6283+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004158 E3C0 2090 0024          00000090   6284+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000415E B904 00D2                          6285+         lgr   13,2                set real frame pointer               01-DCCPR
00004162 B904 00CF                          6286+         lgr   12,15               set base reg                         01-DCCPR
                        00004128            6287+         using @REGION_772_1,12                                         01-DCCPR
00004166 B904 0021                          6288          LGR   2,1         ; ptr to parm area
                                            6289 * ******* End of Prologue
                                            6290 * *
                                            6291 * ***       LZ4F_dctx* const dctx = (LZ4F_dctx*)rd_calloc(1,(sizeof(LZ\
                                            6292 * 4F_dctx)));
0000416A E548 D0B0 0001          000000B0   6293          MVGHI 176(13),1
00004170 E548 D0B8 0100          000000B8   6294          MVGHI 184(13),256
00004176 4110 D0B0               000000B0   6295          LA    1,176(0,13)
0000417A E3F0 C090 0004          000041B8   6296          LG    15,@lit_772_204 ; rd_calloc
00004180                                    6297 @@gen_label345 DS    0H
00004180 05EF                               6298          BALR  14,15
00004182                                    6299 @@gen_label346 DS    0H
                                            6300 * ***       if (dctx == ((void *)0)) {
00004182 B902 001F                          6301          LTGR  1,15
00004186 4770 C0A0               000041C8   6302          BNE   @L169
                                                                                                                           Page  129 
  Active Usings: @REGION_772_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6303 * ***           *LZ4F_decompressionContextPtr = ((void *)0);
0000418A E3F0 2000 0004          00000000   6304          LG    15,0(0,2)   ; LZ4F_decompressionContextPtr
00004190 A719 0000               00000000   6305          LGHI  1,0         ; 0
00004194 E310 F000 0024          00000000   6306          STG   1,0(0,15)   ; LZ4F_decompressionContextPtr
                                            6307 * ***           return err0r(LZ4F_ERROR_allocation_failed);
0000419A E548 D0B0 0009          000000B0   6308          MVGHI 176(13),9
000041A0 4110 D0B0               000000B0   6309          LA    1,176(0,13)
000041A4 E3F0 C098 0004          000041C0   6310          LG    15,@lit_772_206 ; err0r
000041AA                                    6311 @@gen_label348 DS    0H
000041AA 05EF                               6312          BALR  14,15
000041AC                                    6313 @@gen_label349 DS    0H
000041AC 47F0 C0B8               000041E0   6314          B     @ret_lab_772
000041B0                                    6315          DS    0D
000041B0 000000C0                           6316 @FRAMESIZE_772 DC F'192'
000041B4 00000000
000041B8 0000000000000058                   6317 @lit_772_204 DC AD(rd_calloc)
000041C0 0000000000000A60                   6318 @lit_772_206 DC AD(err0r)
                                            6319 * ***       }
000041C8                                    6320 @L169    DS    0H
                                            6321 * ***
                                            6322 * ***       dctx->version = versionNumber;
000041C8 5810 200C               0000000C   6323          L     1,12(0,2)   ; versionNumber
000041CC 5010 F020               00000020   6324          ST    1,32(0,15)  ; offset of version in LZ4F_dctx_s
                                            6325 * ***       *LZ4F_decompressionContextPtr = dctx;
000041D0 E310 2000 0004          00000000   6326          LG    1,0(0,2)    ; LZ4F_decompressionContextPtr
000041D6 E3F0 1000 0024          00000000   6327          STG   15,0(0,1)   ; LZ4F_decompressionContextPtr
                                            6328 * ***       return LZ4F_OK_NoError;
000041DC A7F9 0000               00000000   6329          LGHI  15,0        ; 0
                                            6330 * ***   }
000041E0                                    6331 @ret_lab_772 DS 0H
                                            6332 * * **** Start of Epilogue
                                            6333          DCCEPIL
000041E0                                    6334+         ds 0h                                                          01-DCCEP
                                            6335+* Epilog
000041E0 D707 D088 D088 00000088 00000088   6336+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000041E6 E3D0 D080 0004          00000080   6337+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000041EC E3C0 D090 0004          00000090   6338+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000041F2 E3B0 C018 0004          00000018   6339+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000041F8 E3C0 B010 0021          00000010   6340+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000041FE E3E0 D008 0004          00000008   6341+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004204 EB1C D020 0004          00000020   6342+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000420A 078E                               6343+         bcr 8,14                if same dsab, just return              01-DCCEP
0000420C E3F0 D010 0024          00000010   6344+         stg 15,16(0,13)         save return code                       01-DCCEP
00004212 E300 D018 0024          00000018   6345+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004218 E3F0 D090 0004          00000090   6346+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000421E E3F0 F018 0004          00000018   6347+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004224 47F0 F040               00000040   6348+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6349+* End of Epilog
                                            6350 * * **** End of Epilogue
                                            6351          DROP  12
                                            6352 *
                                            6353 *   DSECT for automatic variables in "LZ4F_createDecompressionContext"
                                                                                                                           Page  130 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6354 *      (FUNCTION #772)
                                            6355 *
00000000                00000000 000000A8   6356 @AUTO#$L$Z4$F_create$Decompression$Context DSECT
00000000                                    6357          DS    XL168
                                            6358 *
00004228                00000000 00006CE8   6359 @CODE    CSECT
                                            6360 *
                                            6361 *
                                            6362 *
                                            6363 * ....... start of LZ4F_freeDecompressionContext
                                            6364 $L$Z4$F_free$Decompression$Context ALIAS X'D3E9F4C66D86998585C485839694*
                                                                979985A2A2899695C39695A385A7A3'
00004228                                    6365 @LNAME773 DS   0H
00004228 0000001D                           6366          DC    X'0000001D'
0000422C D3E9F4C66D869985                   6367          DC    C'LZ4F_freeDecompressionContext'
00004249 00                                 6368          DC    X'00'
                                            6369 $L$Z4$F_free$Decompression$Context DCCPRLG CINDEX=773,BASER=12,FRAME=18*
                                                                4,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME773
                                            6370          macro
                                            6371          dccextrn &m
                                            6372          gblc    &$dccext(1000)
                                            6373          gbla    &$dccexti
                                            6374          lcla    &i
                                            6375 &$dccext(&$dccexti+1) setc    '&m'
                                            6376 &i       seta    1
                                            6377 .loop    aif    (&i gt &$dccexti).around
                                            6378          aif    ('&$dccext(&i)' eq '&m').getout
                                            6379 &i       seta    &i+1
                                            6380          ago     .loop
                                            6381 .around  anop
                                            6382 &$dccexti seta &$dccexti+1
                                            6383          extrn  &m
                                            6384 .getout  anop
                                            6385          mend
00004250                                    6386+$eye0120    ds    0d                                                    02-DCCCA
00004250 C4C3C3                             6387+         dc cl3'DCC'                                                    02-DCCCA
00004253 01                                 6388+         dc xl1'01' format one                                          02-DCCCA
00004254 00000000                           6389+         dc a(0)                                                        02-DCCCA
00004258 00000000000042C2                   6390+         dc ad(@PER_773)                                                02-DCCCA
00004260 00000000000000B8                   6391+         dc ad(184)                                                     02-DCCCA
00004268 0000000000000000                   6392+         dc ad(0)                                                       02-DCCCA
00004270 0000000000001000                   6393+         dc ad(4096)                                                    02-DCCCA
00004278 20                                 6394+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004279 03                                 6395+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000427A 03                                 6396+         dc al1(3)                                                      02-DCCCA
0000427B 08                                 6397+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000427C 00                                 6398+         dc bl.8'00000000'                                              02-DCCCA
0000427D 000000                             6399+         dc al3(0)                                                      02-DCCCA
00004280 0000000000004228                   6400+         dc ad(@LNAME773)                                               02-DCCCA
00004288                                    6401+         ds 0d                                                          02-DCCCA
00004288 0000000000004250                   6402+         dc ad($eye0120)                                                02-DCCCA
00004290 0000000000000000                   6403+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  131 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004298                                    6404+         ds    0d                                                       01-DCCPR
                                            6405+         entry $L$Z4$F_free$Decompression$Context                       01-DCCPR
00004298                                    6406+$L$Z4$F_free$Decompression$Context ds 0d                                01-DCCPR
00004298                                    6407+@REGION_773_1 ds 0h                                                     01-DCCPR
00004298 EBEC D008 0024          00000008   6408+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000429E E3E0 D088 0004          00000088   6409+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000042A4 E3C0 D090 0004          00000090   6410+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000042AA B904 002E                          6411+         lgr   2,14                copy addr of our savearea            01-DCCPR
000042AE E3B0 C018 0004          00000018   6412+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000042B4 A7EB 00B8               000000B8   6413+         aghi  14,184              increase by frame size               01-DCCPR
000042B8 E3E0 C020 0021          00000020   6414+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000042BE 4720 B020               00000020   6415+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000042C2                                    6416+@PER_773 ds    0h                                                       01-DCCPR
000042C2 EBDE 2080 0024          00000080   6417+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000042C8 E3C0 2090 0024          00000090   6418+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000042CE B904 00D2                          6419+         lgr   13,2                set real frame pointer               01-DCCPR
000042D2 B904 00CF                          6420+         lgr   12,15               set base reg                         01-DCCPR
                        00004298            6421+         using @REGION_773_1,12                                         01-DCCPR
                                            6422 * ******* End of Prologue
                                            6423 * *
                                            6424 * ***       LZ4F_errorCode_t result = LZ4F_OK_NoError;
000042D6 E330 1000 0004          00000000   6425          LG    3,0(0,1)    ; dctx
000042DC A729 0000               00000000   6426          LGHI  2,0         ; 0
                                            6427 * ***       if (dctx != ((void *)0)) {
000042E0 B902 00F3                          6428          LTGR  15,3
000042E4 4780 C098               00004330   6429          BE    @L170
                                            6430 * ***         result = (LZ4F_errorCode_t)dctx->dStage;
000042E8 E320 3024 0014          00000024   6431          LGF   2,36(0,3)
                                            6432 * ***         rd_free(dctx->tmpIn);
000042EE E3F0 3040 0004          00000040   6433          LG    15,64(0,3)
000042F4 E3F0 D0B0 0024          000000B0   6434          STG   15,176(0,13)
000042FA 4110 D0B0               000000B0   6435          LA    1,176(0,13)
000042FE E340 C0F0 0004          00004388   6436          LG    4,@lit_773_210 ; rd_free
00004304 B904 00F4                          6437          LGR   15,4
00004308                                    6438 @@gen_label351 DS    0H
00004308 05EF                               6439          BALR  14,15
0000430A                                    6440 @@gen_label352 DS    0H
                                            6441 * ***         rd_free(dctx->tmpOutBuffer);
0000430A E3F0 3058 0004          00000058   6442          LG    15,88(0,3)
00004310 E3F0 D0B0 0024          000000B0   6443          STG   15,176(0,13)
00004316 4110 D0B0               000000B0   6444          LA    1,176(0,13)
0000431A B904 00F4                          6445          LGR   15,4
0000431E                                    6446 @@gen_label353 DS    0H
0000431E 05EF                               6447          BALR  14,15
00004320                                    6448 @@gen_label354 DS    0H
                                            6449 * ***         rd_free(dctx);
00004320 E330 D0B0 0024          000000B0   6450          STG   3,176(0,13)
00004326 4110 D0B0               000000B0   6451          LA    1,176(0,13)
0000432A B904 00F4                          6452          LGR   15,4
0000432E                                    6453 @@gen_label355 DS    0H
0000432E 05EF                               6454          BALR  14,15
00004330                                    6455 @@gen_label356 DS    0H
                                                                                                                           Page  132 
  Active Usings: @REGION_773_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6456 * ***       }
00004330                                    6457 @L170    DS    0H
                                            6458 * ***       return result;
00004330 B904 00F2                          6459          LGR   15,2
                                            6460 * ***   }
                                            6461 * * **** Start of Epilogue
                                            6462          DCCEPIL
00004334                                    6463+         ds 0h                                                          01-DCCEP
                                            6464+* Epilog
00004334 D707 D088 D088 00000088 00000088   6465+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000433A E3D0 D080 0004          00000080   6466+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004340 E3C0 D090 0004          00000090   6467+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004346 E3B0 C018 0004          00000018   6468+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000434C E3C0 B010 0021          00000010   6469+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004352 E3E0 D008 0004          00000008   6470+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004358 EB1C D020 0004          00000020   6471+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000435E 078E                               6472+         bcr 8,14                if same dsab, just return              01-DCCEP
00004360 E3F0 D010 0024          00000010   6473+         stg 15,16(0,13)         save return code                       01-DCCEP
00004366 E300 D018 0024          00000018   6474+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000436C E3F0 D090 0004          00000090   6475+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004372 E3F0 F018 0004          00000018   6476+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004378 47F0 F040               00000040   6477+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6478+* End of Epilog
                                            6479 * * **** End of Epilogue
00004380                                    6480          DS    0D
00004380 000000B8                           6481 @FRAMESIZE_773 DC F'184'
00004384 00000000
00004388 0000000000000330                   6482 @lit_773_210 DC AD(rd_free)
                                            6483          DROP  12
                                            6484 *
                                            6485 *   DSECT for automatic variables in "LZ4F_freeDecompressionContext"
                                            6486 *      (FUNCTION #773)
                                            6487 *
00000000                00000000 000000B0   6488 @AUTO#$L$Z4$F_free$Decompression$Context DSECT
00000000                                    6489          DS    XL168
000000A8                                    6490 $L$Z4$F_free$Decompression$Context#result#0 DS 8XL1 ; result
                                            6491 *
00004390                00000000 00006CE8   6492 @CODE    CSECT
                                            6493 *
                                            6494 *
                                            6495 *
                                            6496 * ....... start of LZ4F_resetDecompressionContext
                                            6497 $L$Z4$F_reset$Decompression$Context ALIAS X'D3E9F4C66D9985A285A3C485839*
                                                                694979985A2A2899695C39695A385A7A3'
00004390                                    6498 @LNAME777 DS   0H
00004390 0000001E                           6499          DC    X'0000001E'
00004394 D3E9F4C66D9985A2                   6500          DC    C'LZ4F_resetDecompressionContext'
000043B2 00                                 6501          DC    X'00'
                                            6502 $L$Z4$F_reset$Decompression$Context DCCPRLG CINDEX=777,BASER=0,FRAME=16*
                                                                8,SAVEAREA=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME777
                                            6503          macro
                                            6504          dccextrn &m
                                                                                                                           Page  133 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6505          gblc    &$dccext(1000)
                                            6506          gbla    &$dccexti
                                            6507          lcla    &i
                                            6508 &$dccext(&$dccexti+1) setc    '&m'
                                            6509 &i       seta    1
                                            6510 .loop    aif    (&i gt &$dccexti).around
                                            6511          aif    ('&$dccext(&i)' eq '&m').getout
                                            6512 &i       seta    &i+1
                                            6513          ago     .loop
                                            6514 .around  anop
                                            6515 &$dccexti seta &$dccexti+1
                                            6516          extrn  &m
                                            6517 .getout  anop
                                            6518          mend
000043B8                                    6519+$eye0123    ds    0d                                                    02-DCCCA
000043B8 C4C3C3                             6520+         dc cl3'DCC'                                                    02-DCCCA
000043BB 01                                 6521+         dc xl1'01' format one                                          02-DCCCA
000043BC 00000000                           6522+         dc a(0)                                                        02-DCCCA
000043C0 0000000000000000                   6523+         dc ad(0)                                                       02-DCCCA
000043C8 00000000000000A8                   6524+         dc ad(168)                                                     02-DCCCA
000043D0 0000000000000000                   6525+         dc ad(0)                                                       02-DCCCA
000043D8 0000000000001000                   6526+         dc ad(4096)                                                    02-DCCCA
000043E0 20                                 6527+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000043E1 03                                 6528+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000043E2 03                                 6529+         dc al1(3)                                                      02-DCCCA
000043E3 08                                 6530+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000043E4 00                                 6531+         dc bl.8'00000000'                                              02-DCCCA
000043E5 000000                             6532+         dc al3(0)                                                      02-DCCCA
000043E8 0000000000004390                   6533+         dc ad(@LNAME777)                                               02-DCCCA
000043F0                                    6534+         ds 0d                                                          02-DCCCA
000043F0 00000000000043B8                   6535+         dc ad($eye0123)                                                02-DCCCA
000043F8 0000000000000000                   6536+         dc ad(0)                                                       02-DCCCA
00004400                                    6537+         ds    0d                                                       01-DCCPR
                                            6538+         entry $L$Z4$F_reset$Decompression$Context                      01-DCCPR
00004400                                    6539+$L$Z4$F_reset$Decompression$Context ds 0d                               01-DCCPR
00004400                                    6540+@REGION_777_1 ds 0h                                                     01-DCCPR
00004400 EBEC D008 0024          00000008   6541+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            6542 * ******* End of Prologue
                                            6543 * *
                                            6544 * ***       dctx->dStage = dstage_getFrameHeader;
00004406 E3F0 1000 0004          00000000   6545          LG    15,0(0,1)   ; dctx
0000440C E54C F024 0000          00000024   6546          MVHI  36(15),0    ; offset of dStage in LZ4F_dctx_s
                                            6547 * ***       dctx->dict = ((void *)0);
00004412 A719 0000               00000000   6548          LGHI  1,0         ; 0
00004416 E310 F060 0024          00000060   6549          STG   1,96(0,15)  ; offset of dict in LZ4F_dctx_s
                                            6550 * ***       dctx->dictSize = 0;
0000441C E548 F068 0000          00000068   6551          MVGHI 104(15),0   ; offset of dictSize in LZ4F_dctx_s
                                            6552 * ***   }
00004422                                    6553 @ret_lab_777 DS 0H
                                            6554 * * **** Start of Epilogue
                                            6555          DCCEPIL
00004422                                    6556+         ds 0h                                                          01-DCCEP
                                                                                                                           Page  134 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6557+* Epilog
                                            6558+* Epilog
00004422 E3E0 D008 0004          00000008   6559+         lg    14,8(,13) restore the reg                                01-DCCEP
00004428 EB1C D020 0004          00000020   6560+         lmg   1,12,32(13)                                              01-DCCEP
0000442E 07FE                               6561+         br   14                                                        01-DCCEP
                                            6562+* End of Epilog
                                            6563 * * **** End of Epilogue
                                            6564 *
                                            6565 *   DSECT for automatic variables in "LZ4F_resetDecompressionContext"
                                            6566 *      (FUNCTION #777)
                                            6567 *
00000000                00000000 000000A8   6568 @AUTO#$L$Z4$F_reset$Decompression$Context DSECT
00000000                                    6569          DS    XL168
                                            6570 *
00004430                00000000 00006CE8   6571 @CODE    CSECT
                                            6572 *
                                            6573 *
                                            6574 *
                                            6575 * ....... start of LZ4F_decodeHeader
00004430                                    6576 @LNAME897 DS   0H
00004430 00000011                           6577          DC    X'00000011'
00004434 D3E9F4C66D848583                   6578          DC    C'LZ4F_decodeHeader'
00004445 00                                 6579          DC    X'00'
                                            6580 $L$Z4$F_decode$Header DCCPRLG CINDEX=897,BASER=12,FRAME=208,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME897
                                            6581          macro
                                            6582          dccextrn &m
                                            6583          gblc    &$dccext(1000)
                                            6584          gbla    &$dccexti
                                            6585          lcla    &i
                                            6586 &$dccext(&$dccexti+1) setc    '&m'
                                            6587 &i       seta    1
                                            6588 .loop    aif    (&i gt &$dccexti).around
                                            6589          aif    ('&$dccext(&i)' eq '&m').getout
                                            6590 &i       seta    &i+1
                                            6591          ago     .loop
                                            6592 .around  anop
                                            6593 &$dccexti seta &$dccexti+1
                                            6594          extrn  &m
                                            6595 .getout  anop
                                            6596          mend
00004448                                    6597+$eye0126    ds    0d                                                    02-DCCCA
00004448 C4C3C3                             6598+         dc cl3'DCC'                                                    02-DCCCA
0000444B 01                                 6599+         dc xl1'01' format one                                          02-DCCCA
0000444C 00000000                           6600+         dc a(0)                                                        02-DCCCA
00004450 00000000000044BA                   6601+         dc ad(@PER_897)                                                02-DCCCA
00004458 00000000000000D0                   6602+         dc ad(208)                                                     02-DCCCA
00004460 0000000000000000                   6603+         dc ad(0)                                                       02-DCCCA
00004468 0000000000001000                   6604+         dc ad(4096)                                                    02-DCCCA
00004470 20                                 6605+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004471 03                                 6606+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004472 03                                 6607+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page  135 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004473 08                                 6608+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004474 00                                 6609+         dc bl.8'00000000'                                              02-DCCCA
00004475 000000                             6610+         dc al3(0)                                                      02-DCCCA
00004478 0000000000004430                   6611+         dc ad(@LNAME897)                                               02-DCCCA
00004480                                    6612+         ds 0d                                                          02-DCCCA
00004480 0000000000004448                   6613+         dc ad($eye0126)                                                02-DCCCA
00004488 0000000000000000                   6614+         dc ad(0)                                                       02-DCCCA
00004490                                    6615+         ds    0d                                                       01-DCCPR
00004490                                    6616+$L$Z4$F_decode$Header ds 0d                                             01-DCCPR
00004490                                    6617+@REGION_897_1 ds 0h                                                     01-DCCPR
00004490 EBEC D008 0024          00000008   6618+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004496 E3E0 D088 0004          00000088   6619+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000449C E3C0 D090 0004          00000090   6620+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000044A2 B904 002E                          6621+         lgr   2,14                copy addr of our savearea            01-DCCPR
000044A6 E3B0 C018 0004          00000018   6622+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000044AC A7EB 00D0               000000D0   6623+         aghi  14,208              increase by frame size               01-DCCPR
000044B0 E3E0 C020 0021          00000020   6624+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000044B6 4720 B020               00000020   6625+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000044BA                                    6626+@PER_897 ds    0h                                                       01-DCCPR
000044BA EBDE 2080 0024          00000080   6627+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000044C0 E3C0 2090 0024          00000090   6628+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000044C6 B904 00D2                          6629+         lgr   13,2                set real frame pointer               01-DCCPR
000044CA B904 00CF                          6630+         lgr   12,15               set base reg                         01-DCCPR
                        00004490            6631+         using @REGION_897_1,12                                         01-DCCPR
                                            6632 * ******* End of Prologue
                                            6633 * *
000044CE E370 1000 0004          00000000   6634          LG    7,0(0,1)    ; dctx
000044D4 E340 1010 0004          00000010   6635          LG    4,16(0,1)   ; srcSize
                                            6636 * ***       unsigned blockMode, blockChecksumFlag, contentSizeFlag, co\
                                            6637 * ntentChecksumFlag, dictIDFlag, blockSizeID;
                                            6638 * ***       size_t frameHeaderSize;
                                            6639 * ***       const BYTE* srcPtr = (const BYTE*)src;
000044DA E360 1008 0004          00000008   6640          LG    6,8(0,1)    ; src
                                            6641 * ***
                                            6642 * ***       {};
                                            6643 * ***
                                            6644 * ***       if (srcSize < minFHSize) return err0r(LZ4F_ERROR_frameHead\
                                            6645 * er_incomplete);
000044E0 E3B0 C080 0004          00004510   6646          LG    11,@lit_897_215
000044E6 E340 B048 0021          00000048   6647          CLG   4,72(0,11)
000044EC 47B0 C0CC               0000455C   6648          BNL   @L171
000044F0 E548 D0B0 000C          000000B0   6649          MVGHI 176(13),12
000044F6 4110 D0B0               000000B0   6650          LA    1,176(0,13)
000044FA E3F0 C088 0004          00004518   6651          LG    15,@lit_897_216 ; err0r
00004500                                    6652 @@gen_label358 DS    0H
00004500 05EF                               6653          BALR  14,15
00004502                                    6654 @@gen_label359 DS    0H
00004502 47F0 C42A               000048BA   6655          B     @ret_lab_897
00004508                                    6656          DS    0D
00004508 000000D0                           6657 @FRAMESIZE_897 DC F'208'
0000450C 00000000
00004510 0000000000006CE8                   6658 @lit_897_215 DC AD(@DATA)
                                                                                                                           Page  136 
  Active Usings: @REGION_897_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004518 0000000000000A60                   6659 @lit_897_216 DC AD(err0r)
00004520 0000000000000440                   6660 @lit_897_239 DC AD($L$Z4$F_read$L$E32)
00004528 D200 1000 6000 00000000 00000000   6661 @lit_897_227          MVC 0(1,1),0(6)
0000452E 0000
00004530 0000000000000000                   6662 @lit_897_232 DC AD(__assert)
00004538 0000000000006DDE                   6663 @lit_897_231 DC AD(@strings@)
00004540 0000000000000D28                   6664 @lit_897_233 DC AD($L$Z4$F_header$Checksum)
00004548 0000000000000BD0                   6665 @lit_897_235 DC AD($L$Z4$F_get$Block$Size)
00004550 0000000000000580                   6666 @lit_897_236 DC AD($L$Z4$F_read$L$E64)
00004558 00000005                           6667 @lit_897_237 DC F'5' 0x00000005
0000455C                                    6668 @L171    DS    0H
                                            6669 * ***       __memset((&(dctx->frameInfo)),(0),(sizeof(dctx->frameInfo)\
                                            6670 * ));
                                            6671 * setting 32 bytes to 0x00
0000455C D71F 7000 7000 00000000 00000000   6672          XC    0(32,7),0(7)
                                            6673 * ***
                                            6674 * ***
                                            6675 * ***       if ((LZ4F_readLE32(srcPtr) & 0xFFFFFFF0U) == 0x184D2A50U) \
                                            6676 * {
00004562 E360 D0B0 0024          000000B0   6677          STG   6,176(0,13)
00004568 4110 D0B0               000000B0   6678          LA    1,176(0,13)
0000456C E3F0 C090 0004          00004520   6679          LG    15,@lit_897_239 ; LZ4F_readLE32
00004572                                    6680 @@gen_label360 DS    0H
00004572 05EF                               6681          BALR  14,15
00004574                                    6682 @@gen_label361 DS    0H
00004574 A5F7 FFF0               0000FFF0   6683          NILL  15,65520
00004578 C2FD 184D 2A50                     6684          CFI   15,X'184D2A50'
0000457E 4770 C12C               000045BC   6685          BNE   @L172
                                            6686 * ***           dctx->frameInfo.frameType = LZ4F_skippableFrame;
00004582 E54C 700C 0001          0000000C   6687          MVHI  12(7),1     ; offset of frameType in 0000027
                                            6688 * ***           if (src == (void*)(dctx->header)) {
00004588 41F0 70E8               000000E8   6689          LA    15,232(0,7)
0000458C B920 006F                          6690          CGR   6,15
00004590 4770 C11E               000045AE   6691          BNE   @L173
                                            6692 * ***               dctx->tmpInSize = srcSize;
00004594 E340 7048 0024          00000048   6693          STG   4,72(0,7)   ; offset of tmpInSize in LZ4F_dctx_s
                                            6694 * ***               dctx->tmpInTarget = 8;
0000459A E548 7050 0008          00000050   6695          MVGHI 80(7),8     ; offset of tmpInTarget in LZ4F_dctx_s
                                            6696 * ***               dctx->dStage = dstage_storeSFrameSize;
000045A0 E54C 7024 000D          00000024   6697          MVHI  36(7),13    ; offset of dStage in LZ4F_dctx_s
                                            6698 * ***               return srcSize;
000045A6 B904 00F4                          6699          LGR   15,4
000045AA 47F0 C42A               000048BA   6700          B     @ret_lab_897
                                            6701 * ***           } else {
000045AE                                    6702 @L173    DS    0H
                                            6703 * ***               dctx->dStage = dstage_getSFrameSize;
000045AE E54C 7024 000C          00000024   6704          MVHI  36(7),12    ; offset of dStage in LZ4F_dctx_s
                                            6705 * ***               return 4;
000045B4 A7F9 0004               00000004   6706          LGHI  15,4        ; 4
000045B8 47F0 C42A               000048BA   6707          B     @ret_lab_897
                                            6708 * ***           }
                                            6709 * ***       }
                                                                                                                           Page  137 
  Active Usings: @REGION_897_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000045BC                                    6710 @L172    DS    0H
                                            6711 * ***
                                            6712 * ***
                                            6713 * ***
                                            6714 * ***       if (LZ4F_readLE32(srcPtr) != 0x184D2204U) {
000045BC E360 D0B0 0024          000000B0   6715          STG   6,176(0,13)
000045C2 4110 D0B0               000000B0   6716          LA    1,176(0,13)
000045C6 E3F0 C090 0004          00004520   6717          LG    15,@lit_897_239 ; LZ4F_readLE32
000045CC                                    6718 @@gen_label364 DS    0H
000045CC 05EF                               6719          BALR  14,15
000045CE                                    6720 @@gen_label365 DS    0H
000045CE C2FD 184D 2204                     6721          CFI   15,X'184D2204'
000045D4 4780 C15E               000045EE   6722          BE    @L175
                                            6723 * ***           {};
                                            6724 * ***           return err0r(LZ4F_ERROR_frameType_unknown);
000045D8 E548 D0B0 000D          000000B0   6725          MVGHI 176(13),13
000045DE 4110 D0B0               000000B0   6726          LA    1,176(0,13)
000045E2 E3F0 C088 0004          00004518   6727          LG    15,@lit_897_216 ; err0r
000045E8                                    6728 @@gen_label367 DS    0H
000045E8 05EF                               6729          BALR  14,15
000045EA                                    6730 @@gen_label368 DS    0H
000045EA 47F0 C42A               000048BA   6731          B     @ret_lab_897
                                            6732 * ***       }
000045EE                                    6733 @L175    DS    0H
                                            6734 * ***
                                            6735 * ***       dctx->frameInfo.frameType = LZ4F_frame;
000045EE E54C 700C 0000          0000000C   6736          MVHI  12(7),0     ; offset of frameType in 0000027
                                            6737 * ***
                                            6738 * ***
                                            6739 * ***       {   U32 const FLG = srcPtr[4];
000045F4 E310 6004 0094          00000004   6740          LLC   1,4(0,6)
                                            6741 * ***           U32 const version = (FLG>>6) & 0x03;
000045FA 18F1                               6742          LR    15,1
000045FC 88F0 0006               00000006   6743          SRL   15,6(0)
00004600 C0FB 0000 0003                     6744          NILF  15,X'00000003'
                                            6745 * ***           blockChecksumFlag = (FLG>>4) & 0x01;
00004606 1891                               6746          LR    9,1
00004608 8890 0004               00000004   6747          SRL   9,4(0)
0000460C C09B 0000 0001                     6748          NILF  9,X'00000001'
                                            6749 * ***           blockMode = (FLG>>5) & 0x01;
00004612 1881                               6750          LR    8,1
00004614 8880 0005               00000005   6751          SRL   8,5(0)
00004618 C08B 0000 0001                     6752          NILF  8,X'00000001'
                                            6753 * ***           contentSizeFlag = (FLG>>3) & 0x01;
0000461E 18A1                               6754          LR    10,1
00004620 88A0 0003               00000003   6755          SRL   10,3(0)
00004624 C0AB 0000 0001                     6756          NILF  10,X'00000001'
                                            6757 * ***           contentChecksumFlag = (FLG>>2) & 0x01;
0000462A 1821                               6758          LR    2,1
0000462C 8820 0002               00000002   6759          SRL   2,2(0)
00004630 C02B 0000 0001                     6760          NILF  2,X'00000001'
                                            6761 * ***           dictIDFlag = FLG & 0x01;
                                                                                                                           Page  138 
  Active Usings: @REGION_897_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004636 1831                               6762          LR    3,1
00004638 C03B 0000 0001                     6763          NILF  3,X'00000001'
                                            6764 * ***
                                            6765 * ***           if (((FLG>>1)&0x01) != 0) return err0r(LZ4F_ERROR_rese\
                                            6766 * rvedFlag_set);
0000463E 8810 0001               00000001   6767          SRL   1,1(0)
00004642 C01B 0000 0001                     6768          NILF  1,X'00000001'
00004648 1211                               6769          LTR   1,1
0000464A 4780 C1D4               00004664   6770          BE    @L176
0000464E E548 D0B0 0008          000000B0   6771          MVGHI 176(13),8
00004654 4110 D0B0               000000B0   6772          LA    1,176(0,13)
00004658 E3F0 C088 0004          00004518   6773          LG    15,@lit_897_216 ; err0r
0000465E                                    6774 @@gen_label370 DS    0H
0000465E 05EF                               6775          BALR  14,15
00004660                                    6776 @@gen_label371 DS    0H
00004660 47F0 C42A               000048BA   6777          B     @ret_lab_897
00004664                                    6778 @L176    DS    0H
                                            6779 * ***           if (version != 1) return err0r(LZ4F_ERROR_headerVersio\
                                            6780 * n_wrong);
00004664 A7FE 0001               00000001   6781          CHI   15,1
00004668 4780 C1F2               00004682   6782          BE    @L177
0000466C E548 D0B0 0006          000000B0   6783          MVGHI 176(13),6
00004672 4110 D0B0               000000B0   6784          LA    1,176(0,13)
00004676 E3F0 C088 0004          00004518   6785          LG    15,@lit_897_216 ; err0r
0000467C                                    6786 @@gen_label373 DS    0H
0000467C 05EF                               6787          BALR  14,15
0000467E                                    6788 @@gen_label374 DS    0H
0000467E 47F0 C42A               000048BA   6789          B     @ret_lab_897
00004682                                    6790 @L177    DS    0H
                                            6791 * ***       }
                                            6792 * ***
                                            6793 * ***
                                            6794 * ***       frameHeaderSize = minFHSize + (contentSizeFlag?8:0) + (dic\
                                            6795 * tIDFlag?4:0);
00004682 E350 B048 0004          00000048   6796          LG    5,72(0,11)  ; minFHSize
00004688 12AA                               6797          LTR   10,10
0000468A 4780 C206               00004696   6798          BZ    @L178
0000468E A7F8 0008               00000008   6799          LHI   15,8        ; 8
00004692 47F0 C20A               0000469A   6800          B     @L179
00004696                                    6801 @L178    DS    0H
00004696 A7F8 0000               00000000   6802          LHI   15,0        ; 0
0000469A                                    6803 @L179    DS    0H
0000469A B914 00FF                          6804          LGFR  15,15
0000469E B90A 005F                          6805          ALGR  5,15
000046A2 1233                               6806          LTR   3,3
000046A4 4780 C220               000046B0   6807          BZ    @L180
000046A8 A7F8 0004               00000004   6808          LHI   15,4        ; 4
000046AC 47F0 C224               000046B4   6809          B     @L181
000046B0                                    6810 @L180    DS    0H
000046B0 A7F8 0000               00000000   6811          LHI   15,0        ; 0
000046B4                                    6812 @L181    DS    0H
000046B4 B914 00FF                          6813          LGFR  15,15
                                                                                                                           Page  139 
  Active Usings: @REGION_897_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000046B8 B90A 005F                          6814          ALGR  5,15
                                            6815 * ***
                                            6816 * ***       if (srcSize < frameHeaderSize) {
000046BC B921 0045                          6817          CLGR  4,5
000046C0 47B0 C28A               0000471A   6818          BNL   @L182
                                            6819 * ***
                                            6820 * ***           if (srcPtr != dctx->header)
000046C4 41F0 70E8               000000E8   6821          LA    15,232(0,7)
000046C8 B920 006F                          6822          CGR   6,15
000046CC 4780 C276               00004706   6823          BE    @L183
                                            6824 * ***               __memcpy(dctx->header,srcPtr,srcSize);
000046D0 4110 70E8               000000E8   6825          LA    1,232(0,7)
000046D4 B902 00F4                          6826          LTGR  15,4
000046D8 4780 C276               00004706   6827          BZ    @@gen_label381
000046DC A7FB FFFF               0000FFFF   6828          AGHI  15,-1
000046E0 EB2F 0008 000A          00000008   6829          SRAG  2,15,8(0)
000046E6 B902 0022                          6830          LTGR  2,2
000046EA 4780 C272               00004702   6831          BZ    @@gen_label380
000046EE                                    6832 @@gen_label379 DS 0H
000046EE D2FF 1000 6000 00000000 00000000   6833          MVC   0(256,1),0(6)
000046F4 4110 1100               00000100   6834          LA    1,256(0,1)
000046F8 4160 6100               00000100   6835          LA    6,256(0,6)
000046FC E320 C25E 0046          000046EE   6836          BCTG  2,@@gen_label379
00004702                                    6837 @@gen_label380 DS 0H
00004702 44F0 C098               00004528   6838          EX    15,@lit_897_227
00004706                                    6839 @@gen_label381 DS 0H
00004706                                    6840 @L183    DS    0H
                                            6841 * ***           dctx->tmpInSize = srcSize;
00004706 EB45 7048 0024          00000048   6842          STMG  4,5,72(7)   ; offset of tmpInSize in LZ4F_dctx_s
                                            6843 * ***           dctx->tmpInTarget = frameHeaderSize;
                                            6844 * ***           dctx->dStage = dstage_storeFrameHeader;
0000470C E54C 7024 0001          00000024   6845          MVHI  36(7),1     ; offset of dStage in LZ4F_dctx_s
                                            6846 * ***           return srcSize;
00004712 B904 00F4                          6847          LGR   15,4
00004716 47F0 C42A               000048BA   6848          B     @ret_lab_897
                                            6849 * ***       }
0000471A                                    6850 @L182    DS    0H
                                            6851 * ***
                                            6852 * ***       {   U32 const BD = srcPtr[5];
0000471A E3F0 6005 0094          00000005   6853          LLC   15,5(0,6)
                                            6854 * ***           blockSizeID = (BD>>4) & 0x07;
00004720 184F                               6855          LR    4,15
00004722 8840 0004               00000004   6856          SRL   4,4(0)
00004726 C04B 0000 0007                     6857          NILF  4,X'00000007'
                                            6858 * ***
                                            6859 * ***           if (((BD>>7)&0x01) != 0) return err0r(LZ4F_ERROR_reser\
                                            6860 * vedFlag_set);
0000472C 181F                               6861          LR    1,15
0000472E 8810 0007               00000007   6862          SRL   1,7(0)
00004732 C01B 0000 0001                     6863          NILF  1,X'00000001'
00004738 1211                               6864          LTR   1,1
0000473A 4780 C2C4               00004754   6865          BE    @L184
                                                                                                                           Page  140 
  Active Usings: @REGION_897_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000473E E548 D0B0 0008          000000B0   6866          MVGHI 176(13),8
00004744 4110 D0B0               000000B0   6867          LA    1,176(0,13)
00004748 E3F0 C088 0004          00004518   6868          LG    15,@lit_897_216 ; err0r
0000474E                                    6869 @@gen_label383 DS    0H
0000474E 05EF                               6870          BALR  14,15
00004750                                    6871 @@gen_label384 DS    0H
00004750 47F0 C42A               000048BA   6872          B     @ret_lab_897
00004754                                    6873 @L184    DS    0H
                                            6874 * ***           if (blockSizeID < 4) return err0r(LZ4F_ERROR_maxBlockS\
                                            6875 * ize_invalid);
00004754 C24F 0000 0004                     6876          CLFI  4,X'00000004'
0000475A 47B0 C2E4               00004774   6877          BNL   @L185
0000475E E548 D0B0 0002          000000B0   6878          MVGHI 176(13),2
00004764 4110 D0B0               000000B0   6879          LA    1,176(0,13)
00004768 E3F0 C088 0004          00004518   6880          LG    15,@lit_897_216 ; err0r
0000476E                                    6881 @@gen_label386 DS    0H
0000476E 05EF                               6882          BALR  14,15
00004770                                    6883 @@gen_label387 DS    0H
00004770 47F0 C42A               000048BA   6884          B     @ret_lab_897
00004774                                    6885 @L185    DS    0H
                                            6886 * ***           if (((BD>>0)&0x0F) != 0) return err0r(LZ4F_ERROR_reser\
                                            6887 * vedFlag_set);
00004774 88F0 0000               00000000   6888          SRL   15,0(0)
00004778 C0FB 0000 000F                     6889          NILF  15,X'0000000F'
0000477E 12FF                               6890          LTR   15,15
00004780 4780 C30A               0000479A   6891          BE    @L186
00004784 E548 D0B0 0008          000000B0   6892          MVGHI 176(13),8
0000478A 4110 D0B0               000000B0   6893          LA    1,176(0,13)
0000478E E3F0 C088 0004          00004518   6894          LG    15,@lit_897_216 ; err0r
00004794                                    6895 @@gen_label389 DS    0H
00004794 05EF                               6896          BALR  14,15
00004796                                    6897 @@gen_label390 DS    0H
00004796 47F0 C42A               000048BA   6898          B     @ret_lab_897
0000479A                                    6899 @L186    DS    0H
                                            6900 * ***       }
                                            6901 * ***
                                            6902 * ***
                                            6903 * ***       ((frameHeaderSize > 5) ? (void)0 : __assert(__func__, "C:\\
                                            6904 * \asgkafka\\librdkafka\\src\\lz4frame.c", 1182, "frameHeaderSize > 5"\
                                            6905 * ));
0000479A C25E 0000 0005                     6906          CLGFI 5,X'00000005'
000047A0 4720 C34A               000047DA   6907          BH    @L188
000047A4                                    6908 @L187    DS    0H
000047A4 41F0 B0C4               000000C4   6909          LA    15,196(0,11)
000047A8 E3F0 D0B0 0024          000000B0   6910          STG   15,176(0,13)
000047AE E3F0 C0A8 0004          00004538   6911          LG    15,@lit_897_231
000047B4 4110 F022               00000022   6912          LA    1,34(0,15)
000047B8 E310 D0B8 0024          000000B8   6913          STG   1,184(0,13)
000047BE E548 D0C0 049E          000000C0   6914          MVGHI 192(13),1182
000047C4 41F0 F0DA               000000DA   6915          LA    15,218(0,15)
000047C8 E3F0 D0C8 0024          000000C8   6916          STG   15,200(0,13)
000047CE 4110 D0B0               000000B0   6917          LA    1,176(0,13)
                                                                                                                           Page  141 
  Active Usings: @REGION_897_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000047D2 E3F0 C0A0 0004          00004530   6918          LG    15,@lit_897_232 ; __assert
000047D8                                    6919 @@gen_label392 DS    0H
000047D8 05EF                               6920          BALR  14,15
000047DA                                    6921 @@gen_label393 DS    0H
000047DA                                    6922 @L188    DS    0H
                                            6923 * ***
                                            6924 * ***       {   BYTE const HC = LZ4F_headerChecksum(srcPtr+4, frameHea\
                                            6925 * derSize-5);
000047DA 41F0 6004               00000004   6926          LA    15,4(0,6)
000047DE E3F0 D0B0 0024          000000B0   6927          STG   15,176(0,13)
000047E4 B904 00F5                          6928          LGR   15,5
000047E8 A7FB FFFB               0000FFFB   6929          AGHI  15,-5
000047EC E3F0 D0B8 0024          000000B8   6930          STG   15,184(0,13)
000047F2 4110 D0B0               000000B0   6931          LA    1,176(0,13)
000047F6 E3F0 C0B0 0004          00004540   6932          LG    15,@lit_897_233 ; LZ4F_headerChecksum
000047FC                                    6933 @@gen_label394 DS    0H
000047FC 05EF                               6934          BALR  14,15
000047FE                                    6935 @@gen_label395 DS    0H
000047FE 42F0 D0A8               000000A8   6936          STC   15,168(0,13) ; HC
                                            6937 * ***           if (HC != srcPtr[frameHeaderSize-1])
00004802 C0FB 0000 00FF                     6938          NILF  15,X'000000FF'
00004808 B904 0015                          6939          LGR   1,5
0000480C A71B FFFF               0000FFFF   6940          AGHI  1,-1
00004810 E311 6000 0094          00000000   6941          LLC   1,0(1,6)
00004816 19F1                               6942          CR    15,1
00004818 4780 C3A2               00004832   6943          BE    @L189
                                            6944 * ***               return err0r(LZ4F_ERROR_headerChecksum_invalid);
0000481C E548 D0B0 0011          000000B0   6945          MVGHI 176(13),17
00004822 4110 D0B0               000000B0   6946          LA    1,176(0,13)
00004826 E3F0 C088 0004          00004518   6947          LG    15,@lit_897_216 ; err0r
0000482C                                    6948 @@gen_label397 DS    0H
0000482C 05EF                               6949          BALR  14,15
0000482E                                    6950 @@gen_label398 DS    0H
0000482E 47F0 C42A               000048BA   6951          B     @ret_lab_897
00004832                                    6952 @L189    DS    0H
                                            6953 * ***       }
                                            6954 * ***
                                            6955 * ***
                                            6956 * ***
                                            6957 * ***       dctx->frameInfo.blockMode = (LZ4F_blockMode_t)blockMode;
00004832 5080 7004               00000004   6958          ST    8,4(0,7)    ; offset of blockMode in 0000027
                                            6959 * ***       dctx->frameInfo.blockChecksumFlag = (LZ4F_blockChecksum_t)\
                                            6960 * blockChecksumFlag;
00004836 5090 701C               0000001C   6961          ST    9,28(0,7)   ; offset of blockChecksumFlag in 0000027
                                            6962 * ***       dctx->frameInfo.contentChecksumFlag = (LZ4F_contentChecksu\
                                            6963 * m_t)contentChecksumFlag;
0000483A 5020 7008               00000008   6964          ST    2,8(0,7)    ; offset of contentChecksumFlag in 0000027
                                            6965 * ***       dctx->frameInfo.blockSizeID = (LZ4F_blockSizeID_t)blockSiz\
                                            6966 * eID;
0000483E 5040 7000               00000000   6967          ST    4,0(0,7)    ; dctx
                                            6968 * ***       dctx->maxBlockSize = LZ4F_getBlockSize(blockSizeID);
00004842 B916 00F4                          6969          LLGFR 15,4
                                                                                                                           Page  142 
  Active Usings: @REGION_897_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004846 E3F0 D0B0 0024          000000B0   6970          STG   15,176(0,13)
0000484C 4110 D0B0               000000B0   6971          LA    1,176(0,13)
00004850 E3F0 C0B8 0004          00004548   6972          LG    15,@lit_897_235 ; LZ4F_getBlockSize
00004856                                    6973 @@gen_label399 DS    0H
00004856 05EF                               6974          BALR  14,15
00004858                                    6975 @@gen_label400 DS    0H
00004858 E3F0 7030 0024          00000030   6976          STG   15,48(0,7)
                                            6977 * ***       if (contentSizeFlag)
0000485E 12AA                               6978          LTR   10,10
00004860 4780 C3F6               00004886   6979          BZ    @L190
                                            6980 * ***           dctx->frameRemainingSize =
                                            6981 * ***               dctx->frameInfo.contentSize = LZ4F_readLE64(srcPtr\
                                            6982 * +6);
00004864 41F0 6006               00000006   6983          LA    15,6(0,6)
00004868 E3F0 D0B0 0024          000000B0   6984          STG   15,176(0,13)
0000486E 4110 D0B0               000000B0   6985          LA    1,176(0,13)
00004872 E3F0 C0C0 0004          00004550   6986          LG    15,@lit_897_236 ; LZ4F_readLE64
00004878                                    6987 @@gen_label402 DS    0H
00004878 05EF                               6988          BALR  14,15
0000487A                                    6989 @@gen_label403 DS    0H
0000487A E3F0 7010 0024          00000010   6990          STG   15,16(0,7)
00004880 E3F0 7028 0024          00000028   6991          STG   15,40(0,7)
00004886                                    6992 @L190    DS    0H
                                            6993 * ***       if (dictIDFlag)
00004886 1233                               6994          LTR   3,3
00004888 4780 C420               000048B0   6995          BZ    @L191
                                            6996 * ***           dctx->frameInfo.dictID = LZ4F_readLE32(srcPtr + frameH\
                                            6997 * eaderSize - 5);
0000488C B904 00F5                          6998          LGR   15,5
00004890 E3F0 C0C8 001B          00004558   6999          SLGF  15,@lit_897_237
00004896 41FF 6000               00000000   7000          LA    15,0(15,6)
0000489A E3F0 D0B0 0024          000000B0   7001          STG   15,176(0,13)
000048A0 4110 D0B0               000000B0   7002          LA    1,176(0,13)
000048A4 E3F0 C090 0004          00004520   7003          LG    15,@lit_897_239 ; LZ4F_readLE32
000048AA                                    7004 @@gen_label405 DS    0H
000048AA 05EF                               7005          BALR  14,15
000048AC                                    7006 @@gen_label406 DS    0H
000048AC 50F0 7018               00000018   7007          ST    15,24(0,7)
000048B0                                    7008 @L191    DS    0H
                                            7009 * ***
                                            7010 * ***       dctx->dStage = dstage_init;
000048B0 E54C 7024 0002          00000024   7011          MVHI  36(7),2     ; offset of dStage in LZ4F_dctx_s
                                            7012 * ***
                                            7013 * ***       return frameHeaderSize;
000048B6 B904 00F5                          7014          LGR   15,5
                                            7015 * ***   }
000048BA                                    7016 @ret_lab_897 DS 0H
                                            7017 * * **** Start of Epilogue
                                            7018          DCCEPIL
000048BA                                    7019+         ds 0h                                                          01-DCCEP
                                            7020+* Epilog
000048BA D707 D088 D088 00000088 00000088   7021+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page  143 
  Active Usings: @REGION_897_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000048C0 E3D0 D080 0004          00000080   7022+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000048C6 E3C0 D090 0004          00000090   7023+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000048CC E3B0 C018 0004          00000018   7024+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000048D2 E3C0 B010 0021          00000010   7025+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000048D8 E3E0 D008 0004          00000008   7026+         lg  14,8(0,13)          load up return address                 01-DCCEP
000048DE EB1C D020 0004          00000020   7027+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000048E4 078E                               7028+         bcr 8,14                if same dsab, just return              01-DCCEP
000048E6 E3F0 D010 0024          00000010   7029+         stg 15,16(0,13)         save return code                       01-DCCEP
000048EC E300 D018 0024          00000018   7030+         stg 0,24(0,13)          save more return code                  01-DCCEP
000048F2 E3F0 D090 0004          00000090   7031+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000048F8 E3F0 F018 0004          00000018   7032+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000048FE 47F0 F040               00000040   7033+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7034+* End of Epilog
                                            7035 * * **** End of Epilogue
                                            7036          DROP  12
                                            7037 *
                                            7038 *   DSECT for automatic variables in "LZ4F_decodeHeader"
                                            7039 *      (FUNCTION #897)
                                            7040 *
00000000                00000000 000000B0   7041 @AUTO#$L$Z4$F_decode$Header DSECT
00000000                                    7042          DS    XL168
000000A8                                    7043 $L$Z4$F_decode$Header#$H$C#10 DS 1CL1 ; HC
000000A9                000000A9 000000A8   7044          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7045 $L$Z4$F_decode$Header#$B$D#9 DS 1F ; BD
000000AC                000000AC 000000A8   7046          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7047 $L$Z4$F_decode$Header#version#7 DS 1F ; version
000000AC                000000AC 000000A8   7048          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7049 $L$Z4$F_decode$Header#$F$L$G#7 DS 1F ; FLG
000000AC                000000AC 000000A8   7050          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7051 $L$Z4$F_decode$Header#frame$Header$Size#0 DS 8XL1 ; frameHeaderSize
000000B0                000000B0 000000A8   7052          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7053 $L$Z4$F_decode$Header#block$Size$I$D#0 DS 1F ; blockSizeID
000000AC                000000AC 000000A8   7054          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7055 $L$Z4$F_decode$Header#dict$I$D$Flag#0 DS 1F ; dictIDFlag
000000AC                000000AC 000000A8   7056          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7057 $L$Z4$F_decode$Header#content$Checksum$Flag#0 DS 1F ; contentChecksumFl*
                                                                ag
000000AC                000000AC 000000A8   7058          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7059 $L$Z4$F_decode$Header#content$Size$Flag#0 DS 1F ; contentSizeFlag
000000AC                000000AC 000000A8   7060          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7061 $L$Z4$F_decode$Header#block$Checksum$Flag#0 DS 1F ; blockChecksumFlag
000000AC                000000AC 000000A8   7062          ORG   @AUTO#$L$Z4$F_decode$Header+168
000000A8                                    7063 $L$Z4$F_decode$Header#block$Mode#0 DS 1F ; blockMode
                                            7064 *
00004902                00000000 00006CE8   7065 @CODE    CSECT
                                            7066 *
                                            7067 *
                                            7068 *
                                            7069 * ....... start of LZ4F_headerSize
                                            7070 $L$Z4$F_header$Size ALIAS X'D3E9F4C66D888581848599E289A985'
00004902                                    7071 @LNAME774 DS   0H
00004902 0000000F                           7072          DC    X'0000000F'
                                                                                                                           Page  144 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004906 D3E9F4C66D888581                   7073          DC    C'LZ4F_headerSize'
00004915 00                                 7074          DC    X'00'
                                            7075 $L$Z4$F_header$Size DCCPRLG CINDEX=774,BASER=12,FRAME=184,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME774
                                            7076          macro
                                            7077          dccextrn &m
                                            7078          gblc    &$dccext(1000)
                                            7079          gbla    &$dccexti
                                            7080          lcla    &i
                                            7081 &$dccext(&$dccexti+1) setc    '&m'
                                            7082 &i       seta    1
                                            7083 .loop    aif    (&i gt &$dccexti).around
                                            7084          aif    ('&$dccext(&i)' eq '&m').getout
                                            7085 &i       seta    &i+1
                                            7086          ago     .loop
                                            7087 .around  anop
                                            7088 &$dccexti seta &$dccexti+1
                                            7089          extrn  &m
                                            7090 .getout  anop
                                            7091          mend
00004918                                    7092+$eye0129    ds    0d                                                    02-DCCCA
00004918 C4C3C3                             7093+         dc cl3'DCC'                                                    02-DCCCA
0000491B 01                                 7094+         dc xl1'01' format one                                          02-DCCCA
0000491C 00000000                           7095+         dc a(0)                                                        02-DCCCA
00004920 000000000000498A                   7096+         dc ad(@PER_774)                                                02-DCCCA
00004928 00000000000000B8                   7097+         dc ad(184)                                                     02-DCCCA
00004930 0000000000000000                   7098+         dc ad(0)                                                       02-DCCCA
00004938 0000000000001000                   7099+         dc ad(4096)                                                    02-DCCCA
00004940 20                                 7100+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004941 03                                 7101+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004942 03                                 7102+         dc al1(3)                                                      02-DCCCA
00004943 08                                 7103+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004944 00                                 7104+         dc bl.8'00000000'                                              02-DCCCA
00004945 000000                             7105+         dc al3(0)                                                      02-DCCCA
00004948 0000000000004902                   7106+         dc ad(@LNAME774)                                               02-DCCCA
00004950                                    7107+         ds 0d                                                          02-DCCCA
00004950 0000000000004918                   7108+         dc ad($eye0129)                                                02-DCCCA
00004958 0000000000000000                   7109+         dc ad(0)                                                       02-DCCCA
00004960                                    7110+         ds    0d                                                       01-DCCPR
                                            7111+         entry $L$Z4$F_header$Size                                      01-DCCPR
00004960                                    7112+$L$Z4$F_header$Size ds 0d                                               01-DCCPR
00004960                                    7113+@REGION_774_1 ds 0h                                                     01-DCCPR
00004960 EBEC D008 0024          00000008   7114+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004966 E3E0 D088 0004          00000088   7115+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000496C E3C0 D090 0004          00000090   7116+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004972 B904 002E                          7117+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004976 E3B0 C018 0004          00000018   7118+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000497C A7EB 00B8               000000B8   7119+         aghi  14,184              increase by frame size               01-DCCPR
00004980 E3E0 C020 0021          00000020   7120+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004986 4720 B020               00000020   7121+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000498A                                    7122+@PER_774 ds    0h                                                       01-DCCPR
0000498A EBDE 2080 0024          00000080   7123+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  145 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004990 E3C0 2090 0024          00000090   7124+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004996 B904 00D2                          7125+         lgr   13,2                set real frame pointer               01-DCCPR
0000499A B904 00CF                          7126+         lgr   12,15               set base reg                         01-DCCPR
                        00004960            7127+         using @REGION_774_1,12                                         01-DCCPR
                                            7128 * ******* End of Prologue
                                            7129 * *
                                            7130 * ***       if (src == ((void *)0)) return err0r(LZ4F_ERROR_srcPtr_wro\
                                            7131 * ng);
0000499E E320 1000 0004          00000000   7132          LG    2,0(0,1)    ; src
000049A4 B902 00F2                          7133          LTGR  15,2
000049A8 4770 C088               000049E8   7134          BNE   @L192
000049AC E548 D0B0 000F          000000B0   7135          MVGHI 176(13),15
000049B2 4110 D0B0               000000B0   7136          LA    1,176(0,13)
000049B6 E3F0 C070 0004          000049D0   7137          LG    15,@lit_774_243 ; err0r
000049BC                                    7138 @@gen_label408 DS    0H
000049BC 05EF                               7139          BALR  14,15
000049BE                                    7140 @@gen_label409 DS    0H
000049BE 47F0 C168               00004AC8   7141          B     @ret_lab_774
000049C8                                    7142          DS    0D
000049C8 000000B8                           7143 @FRAMESIZE_774 DC F'184'
000049CC 00000000
000049D0 0000000000000A60                   7144 @lit_774_243 DC AD(err0r)
000049D8 0000000000000440                   7145 @lit_774_245 DC AD($L$Z4$F_read$L$E32)
000049E0 0000000000006CE8                   7146 @lit_774_249 DC AD(@DATA)
000049E8                                    7147 @L192    DS    0H
                                            7148 * ***
                                            7149 * ***
                                            7150 * ***       if (srcSize < 5)
000049E8 E559 1008 0005          00000008   7151          CLGHSI 8(1),5
000049EE 47B0 C0A8               00004A08   7152          BNL   @L193
                                            7153 * ***           return err0r(LZ4F_ERROR_frameHeader_incomplete);
000049F2 E548 D0B0 000C          000000B0   7154          MVGHI 176(13),12
000049F8 4110 D0B0               000000B0   7155          LA    1,176(0,13)
000049FC E3F0 C070 0004          000049D0   7156          LG    15,@lit_774_243 ; err0r
00004A02                                    7157 @@gen_label411 DS    0H
00004A02 05EF                               7158          BALR  14,15
00004A04                                    7159 @@gen_label412 DS    0H
00004A04 47F0 C168               00004AC8   7160          B     @ret_lab_774
00004A08                                    7161 @L193    DS    0H
                                            7162 * ***
                                            7163 * ***
                                            7164 * ***       if ((LZ4F_readLE32(src) & 0xFFFFFFF0U) == 0x184D2A50U)
00004A08 E320 D0B0 0024          000000B0   7165          STG   2,176(0,13)
00004A0E 4110 D0B0               000000B0   7166          LA    1,176(0,13)
00004A12 E330 C078 0004          000049D8   7167          LG    3,@lit_774_245 ; LZ4F_readLE32
00004A18 B904 00F3                          7168          LGR   15,3
00004A1C                                    7169 @@gen_label413 DS    0H
00004A1C 05EF                               7170          BALR  14,15
00004A1E                                    7171 @@gen_label414 DS    0H
00004A1E A5F7 FFF0               0000FFF0   7172          NILL  15,65520
00004A22 C2FD 184D 2A50                     7173          CFI   15,X'184D2A50'
00004A28 4770 C0D4               00004A34   7174          BNE   @L194
                                                                                                                           Page  146 
  Active Usings: @REGION_774_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7175 * ***           return 8;
00004A2C A7F9 0008               00000008   7176          LGHI  15,8        ; 8
00004A30 47F0 C168               00004AC8   7177          B     @ret_lab_774
00004A34                                    7178 @L194    DS    0H
                                            7179 * ***
                                            7180 * ***
                                            7181 * ***
                                            7182 * ***       if (LZ4F_readLE32(src) != 0x184D2204U)
00004A34 E320 D0B0 0024          000000B0   7183          STG   2,176(0,13)
00004A3A 4110 D0B0               000000B0   7184          LA    1,176(0,13)
00004A3E B904 00F3                          7185          LGR   15,3
00004A42                                    7186 @@gen_label416 DS    0H
00004A42 05EF                               7187          BALR  14,15
00004A44                                    7188 @@gen_label417 DS    0H
00004A44 C2FD 184D 2204                     7189          CFI   15,X'184D2204'
00004A4A 4780 C104               00004A64   7190          BE    @L195
                                            7191 * ***           return err0r(LZ4F_ERROR_frameType_unknown);
00004A4E E548 D0B0 000D          000000B0   7192          MVGHI 176(13),13
00004A54 4110 D0B0               000000B0   7193          LA    1,176(0,13)
00004A58 E3F0 C070 0004          000049D0   7194          LG    15,@lit_774_243 ; err0r
00004A5E                                    7195 @@gen_label419 DS    0H
00004A5E 05EF                               7196          BALR  14,15
00004A60                                    7197 @@gen_label420 DS    0H
00004A60 47F0 C168               00004AC8   7198          B     @ret_lab_774
00004A64                                    7199 @L195    DS    0H
                                            7200 * ***
                                            7201 * ***
                                            7202 * ***
                                            7203 * ***       {   BYTE const FLG = ((const BYTE*)src)[4];
00004A64 43F0 2004               00000004   7204          IC    15,4(0,2)
00004A68 42F0 D0A8               000000A8   7205          STC   15,168(0,13) ; FLG
                                            7206 * ***           U32 const contentSizeFlag = (FLG>>3) & 0x01;
00004A6C 181F                               7207          LR    1,15
00004A6E C01B 0000 00FF                     7208          NILF  1,X'000000FF'
00004A74 8A10 0003               00000003   7209          SRA   1,3(0)
00004A78 C01B 0000 0001                     7210          NILF  1,X'00000001'
                                            7211 * ***           U32 const dictIDFlag = FLG & 0x01;
00004A7E C0FB 0000 0001                     7212          NILF  15,X'00000001'
                                            7213 * ***           return minFHSize + (contentSizeFlag?8:0) + (dictIDFlag\
                                            7214 * ?4:0);
00004A84 E320 C080 0004          000049E0   7215          LG    2,@lit_774_249
00004A8A E320 2048 0004          00000048   7216          LG    2,72(0,2)   ; minFHSize
00004A90 1211                               7217          LTR   1,1
00004A92 4780 C13E               00004A9E   7218          BZ    @L196
00004A96 A718 0008               00000008   7219          LHI   1,8         ; 8
00004A9A 47F0 C142               00004AA2   7220          B     @L197
00004A9E                                    7221 @L196    DS    0H
00004A9E A718 0000               00000000   7222          LHI   1,0         ; 0
00004AA2                                    7223 @L197    DS    0H
00004AA2 B914 0011                          7224          LGFR  1,1
00004AA6 B90A 0021                          7225          ALGR  2,1
00004AAA 12FF                               7226          LTR   15,15
                                                                                                                           Page  147 
  Active Usings: @REGION_774_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004AAC 4780 C158               00004AB8   7227          BZ    @L198
00004AB0 A7F8 0004               00000004   7228          LHI   15,4        ; 4
00004AB4 47F0 C15C               00004ABC   7229          B     @L199
00004AB8                                    7230 @L198    DS    0H
00004AB8 A7F8 0000               00000000   7231          LHI   15,0        ; 0
00004ABC                                    7232 @L199    DS    0H
00004ABC B914 00FF                          7233          LGFR  15,15
00004AC0 B90A 002F                          7234          ALGR  2,15
00004AC4 B904 00F2                          7235          LGR   15,2
                                            7236 * ***       }
                                            7237 * ***   }
00004AC8                                    7238 @ret_lab_774 DS 0H
                                            7239 * * **** Start of Epilogue
                                            7240          DCCEPIL
00004AC8                                    7241+         ds 0h                                                          01-DCCEP
                                            7242+* Epilog
00004AC8 D707 D088 D088 00000088 00000088   7243+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004ACE E3D0 D080 0004          00000080   7244+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004AD4 E3C0 D090 0004          00000090   7245+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004ADA E3B0 C018 0004          00000018   7246+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004AE0 E3C0 B010 0021          00000010   7247+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004AE6 E3E0 D008 0004          00000008   7248+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004AEC EB1C D020 0004          00000020   7249+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004AF2 078E                               7250+         bcr 8,14                if same dsab, just return              01-DCCEP
00004AF4 E3F0 D010 0024          00000010   7251+         stg 15,16(0,13)         save return code                       01-DCCEP
00004AFA E300 D018 0024          00000018   7252+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004B00 E3F0 D090 0004          00000090   7253+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004B06 E3F0 F018 0004          00000018   7254+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004B0C 47F0 F040               00000040   7255+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7256+* End of Epilog
                                            7257 * * **** End of Epilogue
                                            7258          DROP  12
                                            7259 *
                                            7260 *   DSECT for automatic variables in "LZ4F_headerSize"
                                            7261 *      (FUNCTION #774)
                                            7262 *
00000000                00000000 000000AC   7263 @AUTO#$L$Z4$F_header$Size DSECT
00000000                                    7264          DS    XL168
000000A8                                    7265 $L$Z4$F_header$Size#dict$I$D$Flag#1 DS 1F ; dictIDFlag
000000AC                000000AC 000000A8   7266          ORG   @AUTO#$L$Z4$F_header$Size+168
000000A8                                    7267 $L$Z4$F_header$Size#content$Size$Flag#1 DS 1F ; contentSizeFlag
000000AC                000000AC 000000A8   7268          ORG   @AUTO#$L$Z4$F_header$Size+168
000000A8                                    7269 $L$Z4$F_header$Size#$F$L$G#1 DS 1CL1 ; FLG
                                            7270 *
00004B10                00000000 00006CE8   7271 @CODE    CSECT
                                            7272 *
                                            7273 *
                                            7274 *
                                            7275 * ....... start of LZ4F_getFrameInfo
                                            7276 $L$Z4$F_get$Frame$Info ALIAS X'D3E9F4C66D8785A3C699819485C9958696'
00004B10                                    7277 @LNAME775 DS   0H
00004B10 00000011                           7278          DC    X'00000011'
                                                                                                                           Page  148 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004B14 D3E9F4C66D8785A3                   7279          DC    C'LZ4F_getFrameInfo'
00004B25 00                                 7280          DC    X'00'
                                            7281 $L$Z4$F_get$Frame$Info DCCPRLG CINDEX=775,BASER=12,FRAME=232,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME775
                                            7282          macro
                                            7283          dccextrn &m
                                            7284          gblc    &$dccext(1000)
                                            7285          gbla    &$dccexti
                                            7286          lcla    &i
                                            7287 &$dccext(&$dccexti+1) setc    '&m'
                                            7288 &i       seta    1
                                            7289 .loop    aif    (&i gt &$dccexti).around
                                            7290          aif    ('&$dccext(&i)' eq '&m').getout
                                            7291 &i       seta    &i+1
                                            7292          ago     .loop
                                            7293 .around  anop
                                            7294 &$dccexti seta &$dccexti+1
                                            7295          extrn  &m
                                            7296 .getout  anop
                                            7297          mend
00004B28                                    7298+$eye0132    ds    0d                                                    02-DCCCA
00004B28 C4C3C3                             7299+         dc cl3'DCC'                                                    02-DCCCA
00004B2B 01                                 7300+         dc xl1'01' format one                                          02-DCCCA
00004B2C 00000000                           7301+         dc a(0)                                                        02-DCCCA
00004B30 0000000000004B9A                   7302+         dc ad(@PER_775)                                                02-DCCCA
00004B38 00000000000000E8                   7303+         dc ad(232)                                                     02-DCCCA
00004B40 0000000000000000                   7304+         dc ad(0)                                                       02-DCCCA
00004B48 0000000000001000                   7305+         dc ad(4096)                                                    02-DCCCA
00004B50 20                                 7306+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004B51 03                                 7307+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004B52 03                                 7308+         dc al1(3)                                                      02-DCCCA
00004B53 08                                 7309+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004B54 00                                 7310+         dc bl.8'00000000'                                              02-DCCCA
00004B55 000000                             7311+         dc al3(0)                                                      02-DCCCA
00004B58 0000000000004B10                   7312+         dc ad(@LNAME775)                                               02-DCCCA
00004B60                                    7313+         ds 0d                                                          02-DCCCA
00004B60 0000000000004B28                   7314+         dc ad($eye0132)                                                02-DCCCA
00004B68 0000000000000000                   7315+         dc ad(0)                                                       02-DCCCA
00004B70                                    7316+         ds    0d                                                       01-DCCPR
                                            7317+         entry $L$Z4$F_get$Frame$Info                                   01-DCCPR
00004B70                                    7318+$L$Z4$F_get$Frame$Info ds 0d                                            01-DCCPR
00004B70                                    7319+@REGION_775_1 ds 0h                                                     01-DCCPR
00004B70 EBEC D008 0024          00000008   7320+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004B76 E3E0 D088 0004          00000088   7321+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004B7C E3C0 D090 0004          00000090   7322+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004B82 B904 002E                          7323+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004B86 E3B0 C018 0004          00000018   7324+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004B8C A7EB 00E8               000000E8   7325+         aghi  14,232              increase by frame size               01-DCCPR
00004B90 E3E0 C020 0021          00000020   7326+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004B96 4720 B020               00000020   7327+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004B9A                                    7328+@PER_775 ds    0h                                                       01-DCCPR
00004B9A EBDE 2080 0024          00000080   7329+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  149 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004BA0 E3C0 2090 0024          00000090   7330+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004BA6 B904 00D2                          7331+         lgr   13,2                set real frame pointer               01-DCCPR
00004BAA B904 00CF                          7332+         lgr   12,15               set base reg                         01-DCCPR
                        00004B70            7333+         using @REGION_775_1,12                                         01-DCCPR
00004BAE B904 0051                          7334          LGR   5,1         ; ptr to parm area
                                            7335 * ******* End of Prologue
                                            7336 * *
                                            7337 * ***       { enum { LZ4F_static_assert = 1/(int)(!!(dstage_getFrameHe\
                                            7338 * ader < dstage_storeFrameHeader)) }; };
00004BB2 E330 5000 0004          00000000   7339          LG    3,0(0,5)    ; dctx
00004BB8 E340 5018 0004          00000018   7340          LG    4,24(0,5)   ; srcSizePtr
                                            7341 * ***       if (dctx->dStage > dstage_storeFrameHeader) {
00004BBE E55C 3024 0001          00000024   7342          CHSI  36(3),1
00004BC4 47D0 C0F0               00004C60   7343          BNH   @L200
                                            7344 * ***
                                            7345 * ***           size_t o=0, i=0;
00004BC8 E548 D0B0 0000          000000B0   7346          MVGHI 176(13),0   ; o
00004BCE E548 D0A8 0000          000000A8   7347          MVGHI 168(13),0   ; i
                                            7348 * ***           *srcSizePtr = 0;
00004BD4 E548 4000 0000          00000000   7349          MVGHI 0(4),0      ; srcSizePtr
                                            7350 * ***           *frameInfoPtr = dctx->frameInfo;
00004BDA E3F0 5008 0004          00000008   7351          LG    15,8(0,5)   ; frameInfoPtr
00004BE0 D21F F000 3000 00000000 00000000   7352          MVC   0(32,15),0(3)
                                            7353 * ***
                                            7354 * ***           return LZ4F_decompress(dctx, ((void *)0), &o, ((void *\
                                            7355 * )0), &i, ((void *)0));
00004BE6 E330 D0B8 0024          000000B8   7356          STG   3,184(0,13)
00004BEC D707 D0C0 D0C0 000000C0 000000C0   7357          XC    192(8,13),192(13)
00004BF2 41F0 D0B0               000000B0   7358          LA    15,176(0,13)
00004BF6 E3F0 D0C8 0024          000000C8   7359          STG   15,200(0,13)
00004BFC D707 D0D0 D0D0 000000D0 000000D0   7360          XC    208(8,13),208(13)
00004C02 41F0 D0A8               000000A8   7361          LA    15,168(0,13)
00004C06 E3F0 D0D8 0024          000000D8   7362          STG   15,216(0,13)
00004C0C D707 D0E0 D0E0 000000E0 000000E0   7363          XC    224(8,13),224(13)
00004C12 4110 D0B8               000000B8   7364          LA    1,184(0,13)
00004C16 E3F0 C0C0 0004          00004C30   7365          LG    15,@lit_775_255 ; LZ4F_decompress
00004C1C                                    7366 @@gen_label424 DS    0H
00004C1C 05EF                               7367          BALR  14,15
00004C1E                                    7368 @@gen_label425 DS    0H
00004C1E 47F0 C1FC               00004D6C   7369          B     @ret_lab_775
00004C28                                    7370          DS    0D
00004C28 000000E8                           7371 @FRAMESIZE_775 DC F'232'
00004C2C 00000000
00004C30 00000000000053D8                   7372 @lit_775_255 DC AD($L$Z4$F_decompress)
00004C38 0000000000000A60                   7373 @lit_775_256 DC AD(err0r)
00004C40 0000000000004960                   7374 @lit_775_257 DC AD($L$Z4$F_header$Size)
00004C48 0000000000000738                   7375 @lit_775_258 DC AD($L$Z4$F_is$Error)
00004C50 0000000000004490                   7376 @lit_775_260 DC AD($L$Z4$F_decode$Header)
00004C58 0000000000006CE8                   7377 @lit_775_262 DC AD(@DATA)
                                            7378 * ***       } else {
00004C60                                    7379 @L200    DS    0H
                                            7380 * ***           if (dctx->dStage == dstage_storeFrameHeader) {
                                                                                                                           Page  150 
  Active Usings: @REGION_775_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004C60 E55C 3024 0001          00000024   7381          CHSI  36(3),1
00004C66 4770 C116               00004C86   7382          BNE   @L202
                                            7383 * ***
                                            7384 * ***               *srcSizePtr = 0;
00004C6A E548 4000 0000          00000000   7385          MVGHI 0(4),0      ; srcSizePtr
                                            7386 * ***               return err0r(LZ4F_ERROR_frameDecoding_alreadyStart\
                                            7387 * ed);
00004C70 E548 D0B8 0013          000000B8   7388          MVGHI 184(13),19
00004C76 4110 D0B8               000000B8   7389          LA    1,184(0,13)
00004C7A E3F0 C0C8 0004          00004C38   7390          LG    15,@lit_775_256 ; err0r
00004C80                                    7391 @@gen_label427 DS    0H
00004C80 05EF                               7392          BALR  14,15
00004C82                                    7393 @@gen_label428 DS    0H
00004C82 47F0 C1FC               00004D6C   7394          B     @ret_lab_775
                                            7395 * ***           } else {
00004C86                                    7396 @L202    DS    0H
                                            7397 * ***               size_t const hSize = LZ4F_headerSize(srcBuffer, *s\
                                            7398 * rcSizePtr);
00004C86 E3F0 5010 0004          00000010   7399          LG    15,16(0,5)  ; srcBuffer
00004C8C E3F0 D0B8 0024          000000B8   7400          STG   15,184(0,13)
00004C92 E3F0 4000 0004          00000000   7401          LG    15,0(0,4)
00004C98 E3F0 D0C0 0024          000000C0   7402          STG   15,192(0,13)
00004C9E 4110 D0B8               000000B8   7403          LA    1,184(0,13)
00004CA2 E3F0 C0D0 0004          00004C40   7404          LG    15,@lit_775_257 ; LZ4F_headerSize
00004CA8                                    7405 @@gen_label429 DS    0H
00004CA8 05EF                               7406          BALR  14,15
00004CAA                                    7407 @@gen_label430 DS    0H
00004CAA B904 002F                          7408          LGR   2,15
                                            7409 * ***               if (LZ4F_isError(hSize)) { *srcSizePtr=0; return h\
                                            7410 * Size; }
00004CAE E320 D0B8 0024          000000B8   7411          STG   2,184(0,13)
00004CB4 4110 D0B8               000000B8   7412          LA    1,184(0,13)
00004CB8 E360 C0D8 0004          00004C48   7413          LG    6,@lit_775_258 ; LZ4F_isError
00004CBE B904 00F6                          7414          LGR   15,6
00004CC2                                    7415 @@gen_label431 DS    0H
00004CC2 05EF                               7416          BALR  14,15
00004CC4                                    7417 @@gen_label432 DS    0H
00004CC4 12FF                               7418          LTR   15,15
00004CC6 4780 C168               00004CD8   7419          BZ    @L204
00004CCA E548 4000 0000          00000000   7420          MVGHI 0(4),0      ; srcSizePtr
00004CD0 B904 00F2                          7421          LGR   15,2
00004CD4 47F0 C1FC               00004D6C   7422          B     @ret_lab_775
00004CD8                                    7423 @L204    DS    0H
                                            7424 * ***               if (*srcSizePtr < hSize) {
00004CD8 E3F0 4000 0004          00000000   7425          LG    15,0(0,4)   ; srcSizePtr
00004CDE B921 00F2                          7426          CLGR  15,2
00004CE2 47B0 C192               00004D02   7427          BNL   @L205
                                            7428 * ***                   *srcSizePtr=0;
00004CE6 E548 4000 0000          00000000   7429          MVGHI 0(4),0      ; srcSizePtr
                                            7430 * ***                   return err0r(LZ4F_ERROR_frameHeader_incomplete\
                                            7431 * );
00004CEC E548 D0B8 000C          000000B8   7432          MVGHI 184(13),12
                                                                                                                           Page  151 
  Active Usings: @REGION_775_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004CF2 4110 D0B8               000000B8   7433          LA    1,184(0,13)
00004CF6 E3F0 C0C8 0004          00004C38   7434          LG    15,@lit_775_256 ; err0r
00004CFC                                    7435 @@gen_label435 DS    0H
00004CFC 05EF                               7436          BALR  14,15
00004CFE                                    7437 @@gen_label436 DS    0H
00004CFE 47F0 C1FC               00004D6C   7438          B     @ret_lab_775
                                            7439 * ***               }
00004D02                                    7440 @L205    DS    0H
                                            7441 * ***
                                            7442 * ***               {   size_t decodeResult = LZ4F_decodeHeader(dctx, \
                                            7443 * srcBuffer, hSize);
00004D02 E330 D0B8 0024          000000B8   7444          STG   3,184(0,13)
00004D08 E3F0 5010 0004          00000010   7445          LG    15,16(0,5)  ; srcBuffer
00004D0E E3F0 D0C0 0024          000000C0   7446          STG   15,192(0,13)
00004D14 E320 D0C8 0024          000000C8   7447          STG   2,200(0,13)
00004D1A 4110 D0B8               000000B8   7448          LA    1,184(0,13)
00004D1E E3F0 C0E0 0004          00004C50   7449          LG    15,@lit_775_260 ; LZ4F_decodeHeader
00004D24                                    7450 @@gen_label437 DS    0H
00004D24 05EF                               7451          BALR  14,15
00004D26                                    7452 @@gen_label438 DS    0H
00004D26 B904 002F                          7453          LGR   2,15        ; decodeResult
                                            7454 * ***                   if (LZ4F_isError(decodeResult)) {
00004D2A E3F0 D0B8 0024          000000B8   7455          STG   15,184(0,13)
00004D30 4110 D0B8               000000B8   7456          LA    1,184(0,13)
00004D34 B904 00F6                          7457          LGR   15,6
00004D38                                    7458 @@gen_label439 DS    0H
00004D38 05EF                               7459          BALR  14,15
00004D3A                                    7460 @@gen_label440 DS    0H
00004D3A 12FF                               7461          LTR   15,15
00004D3C 4780 C1DA               00004D4A   7462          BZ    @L206
                                            7463 * ***                       *srcSizePtr = 0;
00004D40 E548 4000 0000          00000000   7464          MVGHI 0(4),0      ; srcSizePtr
                                            7465 * ***                   } else {
00004D46 47F0 C1EC               00004D5C   7466          B     @L207
00004D4A                                    7467 @L206    DS    0H
                                            7468 * ***                       *srcSizePtr = decodeResult;
00004D4A E320 4000 0024          00000000   7469          STG   2,0(0,4)    ; srcSizePtr
                                            7470 * ***                       decodeResult = BHSize;
00004D50 E3F0 C0E8 0004          00004C58   7471          LG    15,@lit_775_262
00004D56 E320 F058 0004          00000058   7472          LG    2,88(0,15)  ; BHSize
                                            7473 * ***                   }
00004D5C                                    7474 @L207    DS    0H
                                            7475 * ***                   *frameInfoPtr = dctx->frameInfo;
00004D5C E3F0 5008 0004          00000008   7476          LG    15,8(0,5)   ; frameInfoPtr
00004D62 D21F F000 3000 00000000 00000000   7477          MVC   0(32,15),0(3)
                                            7478 * ***                   return decodeResult;
00004D68 B904 00F2                          7479          LGR   15,2
                                            7480 * ***       }   }   }
                                            7481 * ***   }
00004D6C                                    7482 @ret_lab_775 DS 0H
                                            7483 * * **** Start of Epilogue
                                            7484          DCCEPIL
                                                                                                                           Page  152 
  Active Usings: @REGION_775_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004D6C                                    7485+         ds 0h                                                          01-DCCEP
                                            7486+* Epilog
00004D6C D707 D088 D088 00000088 00000088   7487+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004D72 E3D0 D080 0004          00000080   7488+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004D78 E3C0 D090 0004          00000090   7489+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004D7E E3B0 C018 0004          00000018   7490+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004D84 E3C0 B010 0021          00000010   7491+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004D8A E3E0 D008 0004          00000008   7492+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004D90 EB1C D020 0004          00000020   7493+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004D96 078E                               7494+         bcr 8,14                if same dsab, just return              01-DCCEP
00004D98 E3F0 D010 0024          00000010   7495+         stg 15,16(0,13)         save return code                       01-DCCEP
00004D9E E300 D018 0024          00000018   7496+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004DA4 E3F0 D090 0004          00000090   7497+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004DAA E3F0 F018 0004          00000018   7498+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004DB0 47F0 F040               00000040   7499+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7500+* End of Epilog
                                            7501 * * **** End of Epilogue
                                            7502          DROP  12
                                            7503 *
                                            7504 *   DSECT for automatic variables in "LZ4F_getFrameInfo"
                                            7505 *      (FUNCTION #775)
                                            7506 *
00000000                00000000 000000B8   7507 @AUTO#$L$Z4$F_get$Frame$Info DSECT
00000000                                    7508          DS    XL168
000000A8                                    7509 $L$Z4$F_get$Frame$Info#decode$Result#8 DS 8XL1 ; decodeResult
000000B0                000000B0 000000A8   7510          ORG   @AUTO#$L$Z4$F_get$Frame$Info+168
000000A8                                    7511 $L$Z4$F_get$Frame$Info#h$Size#5 DS 8XL1 ; hSize
000000B0                000000B0 000000A8   7512          ORG   @AUTO#$L$Z4$F_get$Frame$Info+168
000000A8                                    7513 $L$Z4$F_get$Frame$Info#i#2 DS 8XL1 ; i
000000B0                000000B0 000000B0   7514          ORG   @AUTO#$L$Z4$F_get$Frame$Info+176
000000B0                                    7515 $L$Z4$F_get$Frame$Info#o#2 DS 8XL1 ; o
                                            7516 *
00004DB4                00000000 00006CE8   7517 @CODE    CSECT
                                            7518 *
                                            7519 *
                                            7520 *
                                            7521 * ....... start of LZ4F_updateDict
00004DB4                                    7522 @LNAME898 DS   0H
00004DB4 0000000F                           7523          DC    X'0000000F'
00004DB8 D3E9F4C66DA49784                   7524          DC    C'LZ4F_updateDict'
00004DC7 00                                 7525          DC    X'00'
                                            7526 $L$Z4$F_update$Dict DCCPRLG CINDEX=898,BASER=12,FRAME=208,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME898
                                            7527          macro
                                            7528          dccextrn &m
                                            7529          gblc    &$dccext(1000)
                                            7530          gbla    &$dccexti
                                            7531          lcla    &i
                                            7532 &$dccext(&$dccexti+1) setc    '&m'
                                            7533 &i       seta    1
                                            7534 .loop    aif    (&i gt &$dccexti).around
                                            7535          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  153 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7536 &i       seta    &i+1
                                            7537          ago     .loop
                                            7538 .around  anop
                                            7539 &$dccexti seta &$dccexti+1
                                            7540          extrn  &m
                                            7541 .getout  anop
                                            7542          mend
00004DC8                                    7543+$eye0135    ds    0d                                                    02-DCCCA
00004DC8 C4C3C3                             7544+         dc cl3'DCC'                                                    02-DCCCA
00004DCB 01                                 7545+         dc xl1'01' format one                                          02-DCCCA
00004DCC 00000000                           7546+         dc a(0)                                                        02-DCCCA
00004DD0 0000000000004E3A                   7547+         dc ad(@PER_898)                                                02-DCCCA
00004DD8 00000000000000D0                   7548+         dc ad(208)                                                     02-DCCCA
00004DE0 0000000000000000                   7549+         dc ad(0)                                                       02-DCCCA
00004DE8 0000000000001000                   7550+         dc ad(4096)                                                    02-DCCCA
00004DF0 20                                 7551+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004DF1 03                                 7552+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004DF2 03                                 7553+         dc al1(3)                                                      02-DCCCA
00004DF3 08                                 7554+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004DF4 00                                 7555+         dc bl.8'00000000'                                              02-DCCCA
00004DF5 000000                             7556+         dc al3(0)                                                      02-DCCCA
00004DF8 0000000000004DB4                   7557+         dc ad(@LNAME898)                                               02-DCCCA
00004E00                                    7558+         ds 0d                                                          02-DCCCA
00004E00 0000000000004DC8                   7559+         dc ad($eye0135)                                                02-DCCCA
00004E08 0000000000000000                   7560+         dc ad(0)                                                       02-DCCCA
00004E10                                    7561+         ds    0d                                                       01-DCCPR
00004E10                                    7562+$L$Z4$F_update$Dict ds 0d                                               01-DCCPR
00004E10                                    7563+@REGION_898_1 ds 0h                                                     01-DCCPR
00004E10 EBEC D008 0024          00000008   7564+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004E16 E3E0 D088 0004          00000088   7565+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004E1C E3C0 D090 0004          00000090   7566+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004E22 B904 002E                          7567+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004E26 E3B0 C018 0004          00000018   7568+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004E2C A7EB 00D0               000000D0   7569+         aghi  14,208              increase by frame size               01-DCCPR
00004E30 E3E0 C020 0021          00000020   7570+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004E36 4720 B020               00000020   7571+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004E3A                                    7572+@PER_898 ds    0h                                                       01-DCCPR
00004E3A EBDE 2080 0024          00000080   7573+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004E40 E3C0 2090 0024          00000090   7574+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004E46 B904 00D2                          7575+         lgr   13,2                set real frame pointer               01-DCCPR
00004E4A B904 00CF                          7576+         lgr   12,15               set base reg                         01-DCCPR
                        00004E10            7577+         using @REGION_898_1,12                                         01-DCCPR
00004E4E B904 0061                          7578          LGR   6,1         ; ptr to parm area
                                            7579 * ******* End of Prologue
                                            7580 * *
                                            7581 * ***       ((dstPtr != ((void *)0)) ? (void)0 : __assert(__func__, "C\
                                            7582 * :\\asgkafka\\librdkafka\\src\\lz4frame.c", 1299, "dstPtr != NULL"));
00004E52 EB25 6000 0004          00000000   7583          LMG   2,5,0(6)    ; dctx
00004E58 B902 00F3                          7584          LTGR  15,3
00004E5C 4770 C08C               00004E9C   7585          BNE   @L209
00004E60                                    7586 @L208    DS    0H
00004E60 E3F0 C128 0004          00004F38   7587          LG    15,@lit_898_264
                                                                                                                           Page  154 
  Active Usings: @REGION_898_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004E66 41F0 F0D6               000000D6   7588          LA    15,214(0,15)
00004E6A E3F0 D0B0 0024          000000B0   7589          STG   15,176(0,13)
00004E70 E3F0 C120 0004          00004F30   7590          LG    15,@lit_898_265
00004E76 4110 F022               00000022   7591          LA    1,34(0,15)
00004E7A E310 D0B8 0024          000000B8   7592          STG   1,184(0,13)
00004E80 E548 D0C0 0513          000000C0   7593          MVGHI 192(13),1299
00004E86 41F0 F0EE               000000EE   7594          LA    15,238(0,15)
00004E8A E3F0 D0C8 0024          000000C8   7595          STG   15,200(0,13)
00004E90 4110 D0B0               000000B0   7596          LA    1,176(0,13)
00004E94 E3F0 C118 0004          00004F28   7597          LG    15,@lit_898_266 ; __assert
00004E9A                                    7598 @@gen_label443 DS    0H
00004E9A 05EF                               7599          BALR  14,15
00004E9C                                    7600 @@gen_label444 DS    0H
00004E9C                                    7601 @L209    DS    0H
                                            7602 * ***       if (dctx->dictSize==0) {
00004E9C E559 2068 0000          00000068   7603          CLGHSI 104(2),0
00004EA2 4770 C09C               00004EAC   7604          BNE   @L210
                                            7605 * ***           dctx->dict = (const BYTE*)dstPtr;
00004EA6 E330 2060 0024          00000060   7606          STG   3,96(0,2)   ; offset of dict in LZ4F_dctx_s
                                            7607 * ***       }
00004EAC                                    7608 @L210    DS    0H
                                            7609 * ***       ((dctx->dict != ((void *)0)) ? (void)0 : __assert(__func__\
                                            7610 * , "C:\\asgkafka\\librdkafka\\src\\lz4frame.c", 1303, "dctx->dict != \
                                            7611 * NULL"));
00004EAC E3F0 2060 0002          00000060   7612          LTG   15,96(0,2)  ; offset of dict in LZ4F_dctx_s
00004EB2 4770 C0E2               00004EF2   7613          BNE   @L212
00004EB6                                    7614 @L211    DS    0H
00004EB6 E3F0 C128 0004          00004F38   7615          LG    15,@lit_898_264
00004EBC 41F0 F0D6               000000D6   7616          LA    15,214(0,15)
00004EC0 E3F0 D0B0 0024          000000B0   7617          STG   15,176(0,13)
00004EC6 E3F0 C120 0004          00004F30   7618          LG    15,@lit_898_265
00004ECC 4110 F022               00000022   7619          LA    1,34(0,15)
00004ED0 E310 D0B8 0024          000000B8   7620          STG   1,184(0,13)
00004ED6 E548 D0C0 0517          000000C0   7621          MVGHI 192(13),1303
00004EDC 41F0 F0FE               000000FE   7622          LA    15,254(0,15)
00004EE0 E3F0 D0C8 0024          000000C8   7623          STG   15,200(0,13)
00004EE6 4110 D0B0               000000B0   7624          LA    1,176(0,13)
00004EEA E3F0 C118 0004          00004F28   7625          LG    15,@lit_898_266 ; __assert
00004EF0                                    7626 @@gen_label447 DS    0H
00004EF0 05EF                               7627          BALR  14,15
00004EF2                                    7628 @@gen_label448 DS    0H
00004EF2                                    7629 @L212    DS    0H
                                            7630 * ***
                                            7631 * ***       if (dctx->dict + dctx->dictSize == dstPtr) {
00004EF2 E3F0 2060 0004          00000060   7632          LG    15,96(0,2)  ; offset of dict in LZ4F_dctx_s
00004EF8 E310 2068 0004          00000068   7633          LG    1,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
00004EFE 41F1 F000               00000000   7634          LA    15,0(1,15)
00004F02 B920 00F3                          7635          CGR   15,3
00004F06 4770 C142               00004F52   7636          BNE   @L213
                                            7637 * ***           dctx->dictSize += dstSize;
00004F0A E340 2068 000A          00000068   7638          ALG   4,104(0,2)
00004F10 E340 2068 0024          00000068   7639          STG   4,104(0,2)
                                                                                                                           Page  155 
  Active Usings: @REGION_898_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7640 * ***           return;
00004F16 47F0 C524               00005334   7641          B     @ret_lab_898
00004F20                                    7642          DS    0D
00004F20 000000D0                           7643 @FRAMESIZE_898 DC F'208'
00004F24 00000000
00004F28 0000000000000000                   7644 @lit_898_266 DC AD(__assert)
00004F30 0000000000006DDE                   7645 @lit_898_265 DC AD(@strings@)
00004F38 0000000000006CE8                   7646 @lit_898_264 DC AD(@DATA)
00004F40 D200 5000 3000 00000000 00000000   7647 @lit_898_284          MVC 0(1,5),0(3)
00004F46 D200 6000 5000 00000000 00000000   7648 @lit_898_286          MVC 0(1,6),0(5)
00004F4C D200 1000 3000 00000000 00000000   7649 @lit_898_287          MVC 0(1,1),0(3)
                                            7650 * ***       }
00004F52                                    7651 @L213    DS    0H
                                            7652 * ***
                                            7653 * ***       ((dstPtr >= dstBufferStart) ? (void)0 : __assert(__func__,\
                                            7654 *  "C:\\asgkafka\\librdkafka\\src\\lz4frame.c", 1310, "dstPtr >= dstBu\
                                            7655 * fferStart"));
00004F52 B920 0035                          7656          CGR   3,5
00004F56 47B0 C186               00004F96   7657          BNL   @L215
00004F5A                                    7658 @L214    DS    0H
00004F5A E3F0 C128 0004          00004F38   7659          LG    15,@lit_898_264
00004F60 41F0 F0D6               000000D6   7660          LA    15,214(0,15)
00004F64 E3F0 D0B0 0024          000000B0   7661          STG   15,176(0,13)
00004F6A E3F0 C120 0004          00004F30   7662          LG    15,@lit_898_265
00004F70 4110 F022               00000022   7663          LA    1,34(0,15)
00004F74 E310 D0B8 0024          000000B8   7664          STG   1,184(0,13)
00004F7A E548 D0C0 051E          000000C0   7665          MVGHI 192(13),1310
00004F80 41F0 F112               00000112   7666          LA    15,274(0,15)
00004F84 E3F0 D0C8 0024          000000C8   7667          STG   15,200(0,13)
00004F8A 4110 D0B0               000000B0   7668          LA    1,176(0,13)
00004F8E E3F0 C118 0004          00004F28   7669          LG    15,@lit_898_266 ; __assert
00004F94                                    7670 @@gen_label451 DS    0H
00004F94 05EF                               7671          BALR  14,15
00004F96                                    7672 @@gen_label452 DS    0H
00004F96                                    7673 @L215    DS    0H
                                            7674 * ***       if ((size_t)(dstPtr - dstBufferStart) + dstSize >= 64 *(1<\
                                            7675 * <10)) {
00004F96 B904 00F3                          7676          LGR   15,3
00004F9A B909 00F5                          7677          SGR   15,5
00004F9E B90A 00F4                          7678          ALGR  15,4
00004FA2 C2FE 0001 0000                     7679          CLGFI 15,X'00010000'
00004FA8 4740 C1B4               00004FC4   7680          BL    @L216
                                            7681 * ***           dctx->dict = (const BYTE*)dstBufferStart;
00004FAC E350 2060 0024          00000060   7682          STG   5,96(0,2)   ; offset of dict in LZ4F_dctx_s
                                            7683 * ***           dctx->dictSize = (size_t)(dstPtr - dstBufferStart) + d\
                                            7684 * stSize;
00004FB2 B909 0035                          7685          SGR   3,5
00004FB6 B90A 0034                          7686          ALGR  3,4
00004FBA E330 2068 0024          00000068   7687          STG   3,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
                                            7688 * ***           return;
00004FC0 47F0 C524               00005334   7689          B     @ret_lab_898
                                            7690 * ***       }
                                                                                                                           Page  156 
  Active Usings: @REGION_898_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004FC4                                    7691 @L216    DS    0H
                                            7692 * ***
                                            7693 * ***       ((dstSize < 64 *(1<<10)) ? (void)0 : __assert(__func__, "C\
                                            7694 * :\\asgkafka\\librdkafka\\src\\lz4frame.c", 1317, "dstSize < 64 KB"))\
                                            7695 * ;
00004FC4 C24E 0001 0000                     7696          CLGFI 4,X'00010000'
00004FCA 4740 C1FA               0000500A   7697          BL    @L218
00004FCE                                    7698 @L217    DS    0H
00004FCE E3F0 C128 0004          00004F38   7699          LG    15,@lit_898_264
00004FD4 41F0 F0D6               000000D6   7700          LA    15,214(0,15)
00004FD8 E3F0 D0B0 0024          000000B0   7701          STG   15,176(0,13)
00004FDE E3F0 C120 0004          00004F30   7702          LG    15,@lit_898_265
00004FE4 4110 F022               00000022   7703          LA    1,34(0,15)
00004FE8 E310 D0B8 0024          000000B8   7704          STG   1,184(0,13)
00004FEE E548 D0C0 0525          000000C0   7705          MVGHI 192(13),1317
00004FF4 41F0 F12C               0000012C   7706          LA    15,300(0,15)
00004FF8 E3F0 D0C8 0024          000000C8   7707          STG   15,200(0,13)
00004FFE 4110 D0B0               000000B0   7708          LA    1,176(0,13)
00005002 E3F0 C118 0004          00004F28   7709          LG    15,@lit_898_266 ; __assert
00005008                                    7710 @@gen_label455 DS    0H
00005008 05EF                               7711          BALR  14,15
0000500A                                    7712 @@gen_label456 DS    0H
0000500A                                    7713 @L218    DS    0H
                                            7714 * ***
                                            7715 * ***
                                            7716 * ***       ((dctx->tmpOutBuffer != ((void *)0)) ? (void)0 : __assert(\
                                            7717 * __func__, "C:\\asgkafka\\librdkafka\\src\\lz4frame.c", 1320, "dctx->\
                                            7718 * tmpOutBuffer != NULL"));
0000500A E3F0 2058 0002          00000058   7719          LTG   15,88(0,2)  ; offset of tmpOutBuffer in LZ4F_dctx_s
00005010 4770 C240               00005050   7720          BNE   @L220
00005014                                    7721 @L219    DS    0H
00005014 E3F0 C128 0004          00004F38   7722          LG    15,@lit_898_264
0000501A 41F0 F0D6               000000D6   7723          LA    15,214(0,15)
0000501E E3F0 D0B0 0024          000000B0   7724          STG   15,176(0,13)
00005024 E3F0 C120 0004          00004F30   7725          LG    15,@lit_898_265
0000502A 4110 F022               00000022   7726          LA    1,34(0,15)
0000502E E310 D0B8 0024          000000B8   7727          STG   1,184(0,13)
00005034 E548 D0C0 0528          000000C0   7728          MVGHI 192(13),1320
0000503A 41F0 F13C               0000013C   7729          LA    15,316(0,15)
0000503E E3F0 D0C8 0024          000000C8   7730          STG   15,200(0,13)
00005044 4110 D0B0               000000B0   7731          LA    1,176(0,13)
00005048 E3F0 C118 0004          00004F28   7732          LG    15,@lit_898_266 ; __assert
0000504E                                    7733 @@gen_label458 DS    0H
0000504E 05EF                               7734          BALR  14,15
00005050                                    7735 @@gen_label459 DS    0H
00005050                                    7736 @L220    DS    0H
                                            7737 * ***
                                            7738 * ***       if (withinTmp && (dctx->dict == dctx->tmpOutBuffer)) {
00005050 E3F0 6024 0012          00000024   7739          LT    15,36(0,6)  ; withinTmp
00005056 4780 C2D2               000050E2   7740          BZ    @L221
0000505A E310 2060 0004          00000060   7741          LG    1,96(0,2)   ; offset of dict in LZ4F_dctx_s
00005060 E350 2058 0004          00000058   7742          LG    5,88(0,2)   ; offset of tmpOutBuffer in LZ4F_dctx_s
                                                                                                                           Page  157 
  Active Usings: @REGION_898_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005066 B920 0015                          7743          CGR   1,5
0000506A 4770 C2D2               000050E2   7744          BNE   @L221
                                            7745 * ***
                                            7746 * ***           ((dctx->dict + dctx->dictSize == dctx->tmpOut + dctx->\
                                            7747 * tmpOutStart) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafk\
                                            7748 * a\\src\\lz4frame.c", 1324, "dctx->dict + dctx->dictSize == dctx->tmp\
                                            7749 * Out + dctx->tmpOutStart"));
0000506E E3F0 2060 0004          00000060   7750          LG    15,96(0,2)  ; offset of dict in LZ4F_dctx_s
00005074 E310 2068 0004          00000068   7751          LG    1,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
0000507A 41F1 F000               00000000   7752          LA    15,0(1,15)
0000507E E310 2070 0004          00000070   7753          LG    1,112(0,2)  ; offset of tmpOut in LZ4F_dctx_s
00005084 E330 2080 0004          00000080   7754          LG    3,128(0,2)  ; offset of tmpOutStart in LZ4F_dctx_s
0000508A 4113 1000               00000000   7755          LA    1,0(3,1)
0000508E B920 00F1                          7756          CGR   15,1
00005092 4780 C2C2               000050D2   7757          BE    @L223
00005096                                    7758 @L222    DS    0H
00005096 E3F0 C128 0004          00004F38   7759          LG    15,@lit_898_264
0000509C 41F0 F0D6               000000D6   7760          LA    15,214(0,15)
000050A0 E3F0 D0B0 0024          000000B0   7761          STG   15,176(0,13)
000050A6 E3F0 C120 0004          00004F30   7762          LG    15,@lit_898_265
000050AC 4110 F022               00000022   7763          LA    1,34(0,15)
000050B0 E310 D0B8 0024          000000B8   7764          STG   1,184(0,13)
000050B6 E548 D0C0 052C          000000C0   7765          MVGHI 192(13),1324
000050BC 41F0 F158               00000158   7766          LA    15,344(0,15)
000050C0 E3F0 D0C8 0024          000000C8   7767          STG   15,200(0,13)
000050C6 4110 D0B0               000000B0   7768          LA    1,176(0,13)
000050CA E3F0 C118 0004          00004F28   7769          LG    15,@lit_898_266 ; __assert
000050D0                                    7770 @@gen_label463 DS    0H
000050D0 05EF                               7771          BALR  14,15
000050D2                                    7772 @@gen_label464 DS    0H
000050D2                                    7773 @L223    DS    0H
                                            7774 * ***           dctx->dictSize += dstSize;
000050D2 E340 2068 000A          00000068   7775          ALG   4,104(0,2)
000050D8 E340 2068 0024          00000068   7776          STG   4,104(0,2)
                                            7777 * ***           return;
000050DE 47F0 C524               00005334   7778          B     @ret_lab_898
                                            7779 * ***       }
000050E2                                    7780 @L221    DS    0H
                                            7781 * ***
                                            7782 * ***       if (withinTmp) {
000050E2 12FF                               7783          LTR   15,15
000050E4 4780 C38E               0000519E   7784          BZ    @L224
                                            7785 * ***           size_t const preserveSize = (size_t)(dctx->tmpOut - dc\
                                            7786 * tx->tmpOutBuffer);
000050E8 E3F0 2070 0004          00000070   7787          LG    15,112(0,2) ; offset of tmpOut in LZ4F_dctx_s
000050EE E3F0 2058 0009          00000058   7788          SG    15,88(0,2)
                                            7789 * ***           size_t copySize = 64 *(1<<10) - dctx->tmpOutSize;
000050F4 C01F 0001 0000                     7790          LLILF 1,X'00010000' ; 65536
000050FA E310 2078 000B          00000078   7791          SLG   1,120(0,2)
                                            7792 * ***           const BYTE* const oldDictEnd = dctx->dict + dctx->dict\
                                            7793 * Size - dctx->tmpOutStart;
00005100 E330 2060 0004          00000060   7794          LG    3,96(0,2)   ; offset of dict in LZ4F_dctx_s
                                                                                                                           Page  158 
  Active Usings: @REGION_898_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005106 E350 2068 0004          00000068   7795          LG    5,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
0000510C 4135 3000               00000000   7796          LA    3,0(5,3)
00005110 E350 2080 0004          00000080   7797          LG    5,128(0,2)  ; offset of tmpOutStart in LZ4F_dctx_s
00005116 B909 0035                          7798          SGR   3,5
                                            7799 * ***           if (dctx->tmpOutSize > 64 *(1<<10)) copySize = 0;
0000511A E350 2078 0004          00000078   7800          LG    5,120(0,2)
00005120 C25E 0001 0000                     7801          CLGFI 5,X'00010000'
00005126 47D0 C31E               0000512E   7802          BNH   @L225
0000512A A719 0000               00000000   7803          LGHI  1,0         ; 0
0000512E                                    7804 @L225    DS    0H
                                            7805 * ***           if (copySize > preserveSize) copySize = preserveSize;
0000512E B921 001F                          7806          CLGR  1,15
00005132 47D0 C32A               0000513A   7807          BNH   @L226
00005136 B904 001F                          7808          LGR   1,15        ; copySize
0000513A                                    7809 @L226    DS    0H
                                            7810 * ***
                                            7811 * ***           __memcpy(dctx->tmpOutBuffer + preserveSize - copySize,\
                                            7812 * oldDictEnd - copySize,copySize);
0000513A E350 2058 0004          00000058   7813          LG    5,88(0,2)   ; offset of tmpOutBuffer in LZ4F_dctx_s
00005140 415F 5000               00000000   7814          LA    5,0(15,5)
00005144 B909 0051                          7815          SGR   5,1
00005148 B909 0031                          7816          SGR   3,1
0000514C B902 0011                          7817          LTGR  1,1
00005150 4780 C36E               0000517E   7818          BZ    @@gen_label470
00005154 A71B FFFF               0000FFFF   7819          AGHI  1,-1
00005158 EB61 0008 000A          00000008   7820          SRAG  6,1,8(0)
0000515E B902 0066                          7821          LTGR  6,6
00005162 4780 C36A               0000517A   7822          BZ    @@gen_label469
00005166                                    7823 @@gen_label468 DS 0H
00005166 D2FF 5000 3000 00000000 00000000   7824          MVC   0(256,5),0(3)
0000516C 4150 5100               00000100   7825          LA    5,256(0,5)
00005170 4130 3100               00000100   7826          LA    3,256(0,3)
00005174 E360 C356 0046          00005166   7827          BCTG  6,@@gen_label468
0000517A                                    7828 @@gen_label469 DS 0H
0000517A 4410 C130               00004F40   7829          EX    1,@lit_898_284
0000517E                                    7830 @@gen_label470 DS 0H
                                            7831 * ***
                                            7832 * ***           dctx->dict = dctx->tmpOutBuffer;
0000517E E310 2058 0004          00000058   7833          LG    1,88(0,2)   ; offset of tmpOutBuffer in LZ4F_dctx_s
00005184 E310 2060 0024          00000060   7834          STG   1,96(0,2)   ; offset of dict in LZ4F_dctx_s
                                            7835 * ***           dctx->dictSize = preserveSize + dctx->tmpOutStart + ds\
                                            7836 * tSize;
0000518A E3F0 2080 000A          00000080   7837          ALG   15,128(0,2)
00005190 B90A 00F4                          7838          ALGR  15,4
00005194 E3F0 2068 0024          00000068   7839          STG   15,104(0,2) ; offset of dictSize in LZ4F_dctx_s
                                            7840 * ***           return;
0000519A 47F0 C524               00005334   7841          B     @ret_lab_898
                                            7842 * ***       }
0000519E                                    7843 @L224    DS    0H
                                            7844 * ***
                                            7845 * ***       if (dctx->dict == dctx->tmpOutBuffer) {
0000519E E3F0 2060 0004          00000060   7846          LG    15,96(0,2)  ; offset of dict in LZ4F_dctx_s
                                                                                                                           Page  159 
  Active Usings: @REGION_898_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000051A4 E310 2058 0004          00000058   7847          LG    1,88(0,2)   ; offset of tmpOutBuffer in LZ4F_dctx_s
000051AA B920 00F1                          7848          CGR   15,1
000051AE 4770 C468               00005278   7849          BNE   @L227
                                            7850 * ***           if (dctx->dictSize + dstSize > dctx->maxBufferSize) { \
                                            7851 *
000051B2 B904 00F4                          7852          LGR   15,4
000051B6 E3F0 2068 000A          00000068   7853          ALG   15,104(0,2)
000051BC E3F0 2038 0021          00000038   7854          CLG   15,56(0,2)
000051C2 47D0 C416               00005226   7855          BNH   @L228
                                            7856 * ***               size_t const preserveSize = 64 *(1<<10) - dstSize;
000051C6 C0FF 0001 0000                     7857          LLILF 15,X'00010000' ; 65536
000051CC B90B 00F4                          7858          SLGR  15,4
                                            7859 * ***               __memcpy(dctx->tmpOutBuffer,dctx->dict + dctx->dic\
                                            7860 * tSize - preserveSize,preserveSize);
000051D0 E310 2060 0004          00000060   7861          LG    1,96(0,2)   ; offset of dict in LZ4F_dctx_s
000051D6 E350 2068 0004          00000068   7862          LG    5,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
000051DC 4115 1000               00000000   7863          LA    1,0(5,1)
000051E0 B909 001F                          7864          SGR   1,15
000051E4 B904 0051                          7865          LGR   5,1
000051E8 E360 2058 0004          00000058   7866          LG    6,88(0,2)
000051EE B902 001F                          7867          LTGR  1,15
000051F2 4780 C410               00005220   7868          BZ    @@gen_label475
000051F6 A71B FFFF               0000FFFF   7869          AGHI  1,-1
000051FA EB71 0008 000A          00000008   7870          SRAG  7,1,8(0)
00005200 B902 0077                          7871          LTGR  7,7
00005204 4780 C40C               0000521C   7872          BZ    @@gen_label474
00005208                                    7873 @@gen_label473 DS 0H
00005208 D2FF 6000 5000 00000000 00000000   7874          MVC   0(256,6),0(5)
0000520E 4160 6100               00000100   7875          LA    6,256(0,6)
00005212 4150 5100               00000100   7876          LA    5,256(0,5)
00005216 E370 C3F8 0046          00005208   7877          BCTG  7,@@gen_label473
0000521C                                    7878 @@gen_label474 DS 0H
0000521C 4410 C136               00004F46   7879          EX    1,@lit_898_286
00005220                                    7880 @@gen_label475 DS 0H
                                            7881 * ***               dctx->dictSize = preserveSize;
00005220 E3F0 2068 0024          00000068   7882          STG   15,104(0,2) ; offset of dictSize in LZ4F_dctx_s
                                            7883 * ***           }
00005226                                    7884 @L228    DS    0H
                                            7885 * ***           __memcpy(dctx->tmpOutBuffer + dctx->dictSize,dstPtr,ds\
                                            7886 * tSize);
00005226 E3F0 2058 0004          00000058   7887          LG    15,88(0,2)  ; offset of tmpOutBuffer in LZ4F_dctx_s
0000522C E310 2068 0004          00000068   7888          LG    1,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
00005232 4111 F000               00000000   7889          LA    1,0(1,15)
00005236 B902 00F4                          7890          LTGR  15,4
0000523A 4780 C458               00005268   7891          BZ    @@gen_label478
0000523E A7FB FFFF               0000FFFF   7892          AGHI  15,-1
00005242 EB5F 0008 000A          00000008   7893          SRAG  5,15,8(0)
00005248 B902 0055                          7894          LTGR  5,5
0000524C 4780 C454               00005264   7895          BZ    @@gen_label477
00005250                                    7896 @@gen_label476 DS 0H
00005250 D2FF 1000 3000 00000000 00000000   7897          MVC   0(256,1),0(3)
00005256 4110 1100               00000100   7898          LA    1,256(0,1)
                                                                                                                           Page  160 
  Active Usings: @REGION_898_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000525A 4130 3100               00000100   7899          LA    3,256(0,3)
0000525E E350 C440 0046          00005250   7900          BCTG  5,@@gen_label476
00005264                                    7901 @@gen_label477 DS 0H
00005264 44F0 C13C               00004F4C   7902          EX    15,@lit_898_287
00005268                                    7903 @@gen_label478 DS 0H
                                            7904 * ***           dctx->dictSize += dstSize;
00005268 E340 2068 000A          00000068   7905          ALG   4,104(0,2)
0000526E E340 2068 0024          00000068   7906          STG   4,104(0,2)
                                            7907 * ***           return;
00005274 47F0 C524               00005334   7908          B     @ret_lab_898
                                            7909 * ***       }
00005278                                    7910 @L227    DS    0H
                                            7911 * ***
                                            7912 * ***
                                            7913 * ***       {   size_t preserveSize = 64 *(1<<10) - dstSize;
00005278 C0FF 0001 0000                     7914          LLILF 15,X'00010000' ; 65536
0000527E B90B 00F4                          7915          SLGR  15,4
                                            7916 * ***           if (preserveSize > dctx->dictSize) preserveSize = dctx\
                                            7917 * ->dictSize;
00005282 E3F0 2068 0021          00000068   7918          CLG   15,104(0,2)
00005288 47D0 C482               00005292   7919          BNH   @L229
0000528C E3F0 2068 0004          00000068   7920          LG    15,104(0,2) ; offset of dictSize in LZ4F_dctx_s
00005292                                    7921 @L229    DS    0H
                                            7922 * ***           __memcpy(dctx->tmpOutBuffer,dctx->dict + dctx->dictSiz\
                                            7923 * e - preserveSize,preserveSize);
00005292 E310 2060 0004          00000060   7924          LG    1,96(0,2)   ; offset of dict in LZ4F_dctx_s
00005298 E350 2068 0004          00000068   7925          LG    5,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
0000529E 4115 1000               00000000   7926          LA    1,0(5,1)
000052A2 B909 001F                          7927          SGR   1,15
000052A6 B904 0051                          7928          LGR   5,1
000052AA E360 2058 0004          00000058   7929          LG    6,88(0,2)
000052B0 B902 001F                          7930          LTGR  1,15
000052B4 4780 C4D2               000052E2   7931          BZ    @@gen_label482
000052B8 A71B FFFF               0000FFFF   7932          AGHI  1,-1
000052BC EB71 0008 000A          00000008   7933          SRAG  7,1,8(0)
000052C2 B902 0077                          7934          LTGR  7,7
000052C6 4780 C4CE               000052DE   7935          BZ    @@gen_label481
000052CA                                    7936 @@gen_label480 DS 0H
000052CA D2FF 6000 5000 00000000 00000000   7937          MVC   0(256,6),0(5)
000052D0 4160 6100               00000100   7938          LA    6,256(0,6)
000052D4 4150 5100               00000100   7939          LA    5,256(0,5)
000052D8 E370 C4BA 0046          000052CA   7940          BCTG  7,@@gen_label480
000052DE                                    7941 @@gen_label481 DS 0H
000052DE 4410 C136               00004F46   7942          EX    1,@lit_898_286
000052E2                                    7943 @@gen_label482 DS 0H
                                            7944 * ***           __memcpy(dctx->tmpOutBuffer + preserveSize,dstPtr,dstS\
                                            7945 * ize);
000052E2 E310 2058 0004          00000058   7946          LG    1,88(0,2)   ; offset of tmpOutBuffer in LZ4F_dctx_s
000052E8 415F 1000               00000000   7947          LA    5,0(15,1)
000052EC B902 0014                          7948          LTGR  1,4
000052F0 4780 C50E               0000531E   7949          BZ    @@gen_label485
000052F4 A71B FFFF               0000FFFF   7950          AGHI  1,-1
                                                                                                                           Page  161 
  Active Usings: @REGION_898_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000052F8 EB61 0008 000A          00000008   7951          SRAG  6,1,8(0)
000052FE B902 0066                          7952          LTGR  6,6
00005302 4780 C50A               0000531A   7953          BZ    @@gen_label484
00005306                                    7954 @@gen_label483 DS 0H
00005306 D2FF 5000 3000 00000000 00000000   7955          MVC   0(256,5),0(3)
0000530C 4150 5100               00000100   7956          LA    5,256(0,5)
00005310 4130 3100               00000100   7957          LA    3,256(0,3)
00005314 E360 C4F6 0046          00005306   7958          BCTG  6,@@gen_label483
0000531A                                    7959 @@gen_label484 DS 0H
0000531A 4410 C130               00004F40   7960          EX    1,@lit_898_284
0000531E                                    7961 @@gen_label485 DS 0H
                                            7962 * ***           dctx->dict = dctx->tmpOutBuffer;
0000531E E310 2058 0004          00000058   7963          LG    1,88(0,2)   ; offset of tmpOutBuffer in LZ4F_dctx_s
00005324 E310 2060 0024          00000060   7964          STG   1,96(0,2)   ; offset of dict in LZ4F_dctx_s
                                            7965 * ***           dctx->dictSize = preserveSize + dstSize;
0000532A B90A 00F4                          7966          ALGR  15,4
0000532E E3F0 2068 0024          00000068   7967          STG   15,104(0,2) ; offset of dictSize in LZ4F_dctx_s
                                            7968 * ***       }
                                            7969 * ***   }
00005334                                    7970 @ret_lab_898 DS 0H
                                            7971 * * **** Start of Epilogue
                                            7972          DCCEPIL
00005334                                    7973+         ds 0h                                                          01-DCCEP
                                            7974+* Epilog
00005334 D707 D088 D088 00000088 00000088   7975+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000533A E3D0 D080 0004          00000080   7976+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005340 E3C0 D090 0004          00000090   7977+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005346 E3B0 C018 0004          00000018   7978+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000534C E3C0 B010 0021          00000010   7979+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005352 E3E0 D008 0004          00000008   7980+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005358 EB1C D020 0004          00000020   7981+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000535E 078E                               7982+         bcr 8,14                if same dsab, just return              01-DCCEP
00005360 E3F0 D010 0024          00000010   7983+         stg 15,16(0,13)         save return code                       01-DCCEP
00005366 E300 D018 0024          00000018   7984+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000536C E3F0 D090 0004          00000090   7985+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005372 E3F0 F018 0004          00000018   7986+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005378 47F0 F040               00000040   7987+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7988+* End of Epilog
                                            7989 * * **** End of Epilogue
                                            7990          DROP  12
                                            7991 *
                                            7992 *   DSECT for automatic variables in "LZ4F_updateDict"
                                            7993 *      (FUNCTION #898)
                                            7994 *
00000000                00000000 000000B0   7995 @AUTO#$L$Z4$F_update$Dict DSECT
00000000                                    7996          DS    XL168
000000A8                                    7997 $L$Z4$F_update$Dict#preserve$Size#8 DS 8XL1 ; preserveSize
000000B0                000000B0 000000A8   7998          ORG   @AUTO#$L$Z4$F_update$Dict+168
000000A8                                    7999 $L$Z4$F_update$Dict#preserve$Size#7 DS 8XL1 ; preserveSize
000000B0                000000B0 000000A8   8000          ORG   @AUTO#$L$Z4$F_update$Dict+168
000000A8                                    8001 $L$Z4$F_update$Dict#copy$Size#5 DS 8XL1 ; copySize
000000B0                000000B0 000000A8   8002          ORG   @AUTO#$L$Z4$F_update$Dict+168
                                                                                                                           Page  162 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                    8003 $L$Z4$F_update$Dict#preserve$Size#5 DS 8XL1 ; preserveSize
                                            8004 *
0000537C                00000000 00006CE8   8005 @CODE    CSECT
                                            8006 *
                                            8007 *
                                            8008 *
                                            8009 * ....... start of LZ4F_decompress
                                            8010 $L$Z4$F_decompress ALIAS X'D3E9F4C66D8485839694979985A2A2'
0000537C                                    8011 @LNAME776 DS   0H
0000537C 0000000F                           8012          DC    X'0000000F'
00005380 D3E9F4C66D848583                   8013          DC    C'LZ4F_decompress'
0000538F 00                                 8014          DC    X'00'
                                            8015 $L$Z4$F_decompress DCCPRLG CINDEX=776,BASER=12,FRAME=272,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME776
                                            8016          macro
                                            8017          dccextrn &m
                                            8018          gblc    &$dccext(1000)
                                            8019          gbla    &$dccexti
                                            8020          lcla    &i
                                            8021 &$dccext(&$dccexti+1) setc    '&m'
                                            8022 &i       seta    1
                                            8023 .loop    aif    (&i gt &$dccexti).around
                                            8024          aif    ('&$dccext(&i)' eq '&m').getout
                                            8025 &i       seta    &i+1
                                            8026          ago     .loop
                                            8027 .around  anop
                                            8028 &$dccexti seta &$dccexti+1
                                            8029          extrn  &m
                                            8030 .getout  anop
                                            8031          mend
00005390                                    8032+$eye0138    ds    0d                                                    02-DCCCA
00005390 C4C3C3                             8033+         dc cl3'DCC'                                                    02-DCCCA
00005393 01                                 8034+         dc xl1'01' format one                                          02-DCCCA
00005394 00000000                           8035+         dc a(0)                                                        02-DCCCA
00005398 0000000000005402                   8036+         dc ad(@PER_776)                                                02-DCCCA
000053A0 0000000000000110                   8037+         dc ad(272)                                                     02-DCCCA
000053A8 0000000000000000                   8038+         dc ad(0)                                                       02-DCCCA
000053B0 0000000000001000                   8039+         dc ad(4096)                                                    02-DCCCA
000053B8 20                                 8040+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000053B9 03                                 8041+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000053BA 03                                 8042+         dc al1(3)                                                      02-DCCCA
000053BB 08                                 8043+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000053BC 00                                 8044+         dc bl.8'00000000'                                              02-DCCCA
000053BD 000000                             8045+         dc al3(0)                                                      02-DCCCA
000053C0 000000000000537C                   8046+         dc ad(@LNAME776)                                               02-DCCCA
000053C8                                    8047+         ds 0d                                                          02-DCCCA
000053C8 0000000000005390                   8048+         dc ad($eye0138)                                                02-DCCCA
000053D0 0000000000000000                   8049+         dc ad(0)                                                       02-DCCCA
000053D8                                    8050+         ds    0d                                                       01-DCCPR
                                            8051+         entry $L$Z4$F_decompress                                       01-DCCPR
000053D8                                    8052+$L$Z4$F_decompress ds 0d                                                01-DCCPR
000053D8                                    8053+@REGION_776_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page  163 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000053D8 EBEC D008 0024          00000008   8054+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000053DE E3E0 D088 0004          00000088   8055+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000053E4 E3C0 D090 0004          00000090   8056+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000053EA B904 002E                          8057+         lgr   2,14                copy addr of our savearea            01-DCCPR
000053EE E3B0 C018 0004          00000018   8058+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000053F4 A7EB 0110               00000110   8059+         aghi  14,272              increase by frame size               01-DCCPR
000053F8 E3E0 C020 0021          00000020   8060+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000053FE 4720 B020               00000020   8061+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005402                                    8062+@PER_776 ds    0h                                                       01-DCCPR
00005402 EBDE 2080 0024          00000080   8063+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005408 E3C0 2090 0024          00000090   8064+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000540E B904 00D2                          8065+         lgr   13,2                set real frame pointer               01-DCCPR
00005412 B904 00CF                          8066+         lgr   12,15               set base reg                         01-DCCPR
                        000053D8            8067+         using @REGION_776_1,12                                         01-DCCPR
                                            8068 * ******* End of Prologue
                                            8069 * *
00005416 E320 1000 0004          00000000   8070          LG    2,0(0,1)    ; dctx
0000541C E3F0 1010 0004          00000010   8071          LG    15,16(0,1)  ; dstSizePtr
00005422 E3F0 D0E8 0024          000000E8   8072          STG   15,232(0,13) ; spill
00005428 E3F0 1020 0004          00000020   8073          LG    15,32(0,1)  ; srcSizePtr
0000542E E3F0 D0F8 0024          000000F8   8074          STG   15,248(0,13) ; spill
00005434 E330 1028 0004          00000028   8075          LG    3,40(0,1)   ; decompressOptionsPtr
0000543A E330 D0F0 0024          000000F0   8076          STG   3,240(0,13) ; spill
                                            8077 * ***       LZ4F_decompressOptions_t optionsNull;
                                            8078 * ***       const BYTE* const srcStart = (const BYTE*)srcBuffer;
00005440 E330 1018 0004          00000018   8079          LG    3,24(0,1)   ; srcBuffer
00005446 E330 D100 0024          00000100   8080          STG   3,256(0,13) ; spill
                                            8081 * ***       const BYTE* const srcEnd = srcStart + *srcSizePtr;
0000544C E3F0 F000 0004          00000000   8082          LG    15,0(0,15)  ; srcSizePtr
00005452 415F 3000               00000000   8083          LA    5,0(15,3)
                                            8084 * ***       const BYTE* srcPtr = srcStart;
                                            8085 * ***       BYTE* const dstStart = (BYTE*)dstBuffer;
00005456 E3A0 1008 0004          00000008   8086          LG    10,8(0,1)   ; dstBuffer
                                            8087 * ***       BYTE* const dstEnd = dstStart ? dstStart + *dstSizePtr : (\
                                            8088 * (void *)0);
0000545C B902 00FA                          8089          LTGR  15,10
00005460 4780 C128               00005500   8090          BZ    @L230
00005464 E3F0 D0E8 0004          000000E8   8091          LG    15,232(0,13) ; spill
0000546A E3F0 F000 0004          00000000   8092          LG    15,0(0,15)  ; dstSizePtr
00005470 B904 001A                          8093          LGR   1,10
00005474 411F 1000               00000000   8094          LA    1,0(15,1)
00005478 47F0 C12C               00005504   8095          B     @L231
00005480                                    8096          DS    0D
00005480 00000110                           8097 @FRAMESIZE_776 DC F'272'
00005484 00000000
00005488 0000000000000000                   8098 @lit_776_298 DC AD(__assert)
00005490 0000000000006DDE                   8099 @lit_776_297 DC AD(@strings@)
00005498 0000000000006CE8                   8100 @lit_776_296 DC AD(@DATA)
000054A0 00001132                           8101 @lit_region_diff_776_1_3  DC A(@REGION_776_3-@REGION_776_1)
000054A4 00000000
000054A8 0000000000004490                   8102 @lit_776_303 DC AD($L$Z4$F_decode$Header)
000054B0 0000000000000738                   8103 @lit_776_304 DC AD($L$Z4$F_is$Error)
                                                                                                                           Page  164 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000054B8 D200 9000 1000 00000000 00000000   8104 @lit_776_305          MVC 0(1,9),0(1)
000054BE 0000
000054C0 0000000000000000                   8105 @lit_776_310 DC AD($X$X$H32_reset)
000054C8 0000000000000330                   8106 @lit_776_404 DC AD(rd_free)
000054D0 00000000000001C8                   8107 @lit_776_405 DC AD(rd_malloc)
000054D8 0000000000000A60                   8108 @lit_776_316 DC AD(err0r)
000054E0 0000000000000440                   8109 @lit_776_325 DC AD($L$Z4$F_read$L$E32)
000054E8 0000084C                           8110 @lit_region_diff_776_1_2  DC A(@REGION_776_2-@REGION_776_1)
000054EC D200 E000 1000 00000000 00000000   8111 @lit_776_331          MVC 0(1,14),0(1)
000054F2 000000000000
000054F8 0000000000000000                   8112 @lit_776_332 DC AD($X$X$H32_update)
00005500                                    8113 @L230    DS    0H
00005500 A719 0000               00000000   8114          LGHI  1,0         ; 0
00005504                                    8115 @L231    DS    0H
00005504 E310 D108 0024          00000108   8116          STG   1,264(0,13) ; spill
                                            8117 * ***       BYTE* dstPtr = dstStart;
0000550A B904 004A                          8118          LGR   4,10
                                            8119 * ***       const BYTE* selectedIn = ((void *)0);
0000550E A769 0000               00000000   8120          LGHI  6,0         ; 0
                                            8121 * ***       unsigned doAnotherStage = 1;
00005512 A778 0001               00000001   8122          LHI   7,1         ; 1
                                            8123 * ***       size_t nextSrcSizeHint = 1;
00005516 A789 0001               00000001   8124          LGHI  8,1         ; 1
                                            8125 * ***
                                            8126 * ***
                                            8127 * ***       {};
                                            8128 * ***
                                            8129 * ***       if (dstBuffer == ((void *)0)) ((*dstSizePtr == 0) ? (void)\
                                            8130 * 0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\lz4frame.c", \
                                            8131 * 1403, "*dstSizePtr == 0"));
0000551A B902 00FA                          8132          LTGR  15,10
0000551E 4770 C196               0000556E   8133          BNE   @L232
00005522 E3F0 D0E8 0004          000000E8   8134          LG    15,232(0,13) ; spill
00005528 E559 F000 0000          00000000   8135          CLGHSI 0(15),0
0000552E 4780 C196               0000556E   8136          BE    @L232
00005532                                    8137 @L233    DS    0H
00005532 E3F0 C0C0 0004          00005498   8138          LG    15,@lit_776_296
00005538 41F0 F0E6               000000E6   8139          LA    15,230(0,15)
0000553C E3F0 D0B8 0024          000000B8   8140          STG   15,184(0,13)
00005542 E3F0 C0B8 0004          00005490   8141          LG    15,@lit_776_297
00005548 4110 F022               00000022   8142          LA    1,34(0,15)
0000554C E310 D0C0 0024          000000C0   8143          STG   1,192(0,13)
00005552 E548 D0C8 057B          000000C8   8144          MVGHI 200(13),1403
00005558 41F0 F198               00000198   8145          LA    15,408(0,15)
0000555C E3F0 D0D0 0024          000000D0   8146          STG   15,208(0,13)
00005562 4110 D0B8               000000B8   8147          LA    1,184(0,13)
00005566 E3F0 C0B0 0004          00005488   8148          LG    15,@lit_776_298 ; __assert
0000556C                                    8149 @@gen_label489 DS    0H
0000556C 05EF                               8150          BALR  14,15
0000556E                                    8151 @@gen_label490 DS    0H
0000556E                                    8152 @L234    DS    0H
0000556E                                    8153 @L232    DS    0H
                                                                                                                           Page  165 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8154 * ***       __memset((&optionsNull),(0),(sizeof(optionsNull)));
0000556E 41F0 D0A8               000000A8   8155          LA    15,168(0,13)
                                            8156 * setting 16 bytes to 0x00
00005572 D70F F000 F000 00000000 00000000   8157          XC    0(16,15),0(15)
                                            8158 * ***       if (decompressOptionsPtr==((void *)0)) decompressOptionsPt\
                                            8159 * r = &optionsNull;
00005578 E3F0 D0F0 0002          000000F0   8160          LTG   15,240(0,13) ; spill
0000557E 4770 C1B4               0000558C   8161          BNE   @L235
00005582 41F0 D0A8               000000A8   8162          LA    15,168(0,13)
00005586 E3F0 D0F0 0024          000000F0   8163          STG   15,240(0,13) ; spill
0000558C                                    8164 @L235    DS    0H
                                            8165 * ***       *srcSizePtr = 0;
0000558C E3F0 D0F8 0004          000000F8   8166          LG    15,248(0,13) ; spill
00005592 E548 F000 0000          00000000   8167          MVGHI 0(15),0     ; srcSizePtr
                                            8168 * ***       *dstSizePtr = 0;
00005598 E3F0 D0E8 0004          000000E8   8169          LG    15,232(0,13) ; spill
0000559E E548 F000 0000          00000000   8170          MVGHI 0(15),0     ; dstSizePtr
                                            8171 * ***       ((dctx != ((void *)0)) ? (void)0 : __assert(__func__, "C:\\
                                            8172 * \asgkafka\\librdkafka\\src\\lz4frame.c", 1408, "dctx != NULL"));
000055A4 B902 00F2                          8173          LTGR  15,2
000055A8 4780 C1DE               000055B6   8174          BE    *+14  Around region break
000055AC E3C0 C0C8 001A          000054A0   8175          ALGF  12,@lit_region_diff_776_1_3
                                            8176          DROP  12
                        0000650A            8177          USING @REGION_776_3,12
000055B2 47F0 C40E               00006918   8178          B     @L241
                                            8179          DROP  12
                        000053D8            8180          USING @REGION_776_1,12
000055B6                                    8181 @L236    DS    0H
000055B6 E3F0 C0C0 0004          00005498   8182          LG    15,@lit_776_296
000055BC 41F0 F0E6               000000E6   8183          LA    15,230(0,15)
000055C0 E3F0 D0B8 0024          000000B8   8184          STG   15,184(0,13)
000055C6 E3F0 C0B8 0004          00005490   8185          LG    15,@lit_776_297
000055CC 4110 F022               00000022   8186          LA    1,34(0,15)
000055D0 E310 D0C0 0024          000000C0   8187          STG   1,192(0,13)
000055D6 E548 D0C8 0580          000000C8   8188          MVGHI 200(13),1408
000055DC 41F0 F1AA               000001AA   8189          LA    15,426(0,15)
000055E0 E3F0 D0D0 0024          000000D0   8190          STG   15,208(0,13)
000055E6 4110 D0B8               000000B8   8191          LA    1,184(0,13)
000055EA E3F0 C0B0 0004          00005488   8192          LG    15,@lit_776_298 ; __assert
000055F0                                    8193 @@gen_label493 DS    0H
000055F0 05EF                               8194          BALR  14,15
000055F2                                    8195 @@gen_label494 DS    0H
000055F2                                    8196 @L237    DS    0H
                                            8197 * ***
                                            8198 * ***
                                            8199 * ***
                                            8200 * ***       while (doAnotherStage) {
000055F2 E3C0 C0C8 001A          000054A0   8201          ALGF  12,@lit_region_diff_776_1_3
                                            8202          DROP  12
                        0000650A            8203          USING @REGION_776_3,12
000055F8 47F0 C40E               00006918   8204          B     @L241
                                            8205          DROP  12
                                                                                                                           Page  166 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        000053D8            8206          USING @REGION_776_1,12
                                            8207 * ***
                                            8208 * ***           switch(dctx->dStage)
                                            8209 * ***           {
                                            8210 * ***
                                            8211 * ***           case dstage_getFrameHeader:
000055FC                                    8212 @L244    DS    0H
                                            8213 * ***               {};
                                            8214 * ***               if ((size_t)(srcEnd-srcPtr) >= maxFHSize) {
000055FC B904 00F5                          8215          LGR   15,5
00005600 B909 00F3                          8216          SGR   15,3
00005604 E310 C0C0 0004          00005498   8217          LG    1,@lit_776_296
0000560A E3F0 1050 0021          00000050   8218          CLG   15,80(0,1)
00005610 4740 C294               0000566C   8219          BL    @L245
                                            8220 * ***                   size_t const hSize = LZ4F_decodeHeader(dctx, s\
                                            8221 * rcPtr, (size_t)(srcEnd-srcPtr));
00005614 EB23 D0B8 0024          000000B8   8222          STMG  2,3,184(13)
0000561A B904 00F5                          8223          LGR   15,5
0000561E B909 00F3                          8224          SGR   15,3
00005622 E3F0 D0C8 0024          000000C8   8225          STG   15,200(0,13)
00005628 4110 D0B8               000000B8   8226          LA    1,184(0,13)
0000562C E3F0 C0D0 0004          000054A8   8227          LG    15,@lit_776_303 ; LZ4F_decodeHeader
00005632                                    8228 @@gen_label496 DS    0H
00005632 05EF                               8229          BALR  14,15
00005634                                    8230 @@gen_label497 DS    0H
00005634 B904 009F                          8231          LGR   9,15
                                            8232 * ***                   if (LZ4F_isError(hSize)) return hSize;
00005638 E390 D0B8 0024          000000B8   8233          STG   9,184(0,13)
0000563E 4110 D0B8               000000B8   8234          LA    1,184(0,13)
00005642 E3F0 C0D8 0004          000054B0   8235          LG    15,@lit_776_304 ; LZ4F_isError
00005648                                    8236 @@gen_label498 DS    0H
00005648 05EF                               8237          BALR  14,15
0000564A                                    8238 @@gen_label499 DS    0H
0000564A 12FF                               8239          LTR   15,15
0000564C 4780 C286               0000565E   8240          BZ    @L246
00005650 B904 00F9                          8241          LGR   15,9
00005654 E3C0 C0C8 001A          000054A0   8242          ALGF  12,@lit_region_diff_776_1_3
                                            8243          DROP  12
                        0000650A            8244          USING @REGION_776_3,12
0000565A 47F0 C620               00006B2A   8245          B     @ret_lab_776
                                            8246          DROP  12
                        000053D8            8247          USING @REGION_776_1,12
0000565E                                    8248 @L246    DS    0H
                                            8249 * ***                   srcPtr += hSize;
0000565E 4139 3000               00000000   8250          LA    3,0(9,3)
                                            8251 * ***                   break;
00005662 E3C0 C0C8 001A          000054A0   8252          ALGF  12,@lit_region_diff_776_1_3
                                            8253          DROP  12
                        0000650A            8254          USING @REGION_776_3,12
00005668 47F0 C40E               00006918   8255          B     @L241
                                            8256          DROP  12
                        000053D8            8257          USING @REGION_776_1,12
                                                                                                                           Page  167 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8258 * ***               }
0000566C                                    8259 @L245    DS    0H
                                            8260 * ***               dctx->tmpInSize = 0;
0000566C E548 2048 0000          00000048   8261          MVGHI 72(2),0     ; offset of tmpInSize in LZ4F_dctx_s
                                            8262 * ***               if (srcEnd-srcPtr == 0) return minFHSize;
00005672 B904 00F5                          8263          LGR   15,5
00005676 B909 00F3                          8264          SGR   15,3
0000567A B902 00FF                          8265          LTGR  15,15
0000567E 4770 C2BA               00005692   8266          BNE   @L247
00005682 E3F0 1048 0004          00000048   8267          LG    15,72(0,1)  ; minFHSize
00005688 E3C0 C0C8 001A          000054A0   8268          ALGF  12,@lit_region_diff_776_1_3
                                            8269          DROP  12
                        0000650A            8270          USING @REGION_776_3,12
0000568E 47F0 C620               00006B2A   8271          B     @ret_lab_776
                                            8272          DROP  12
                        000053D8            8273          USING @REGION_776_1,12
00005692                                    8274 @L247    DS    0H
                                            8275 * ***               dctx->tmpInTarget = minFHSize;
00005692 E3F0 1048 0004          00000048   8276          LG    15,72(0,1)  ; minFHSize
00005698 E3F0 2050 0024          00000050   8277          STG   15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
                                            8278 * ***               dctx->dStage = dstage_storeFrameHeader;
0000569E E54C 2024 0001          00000024   8279          MVHI  36(2),1     ; offset of dStage in LZ4F_dctx_s
                                            8280 * ***
                                            8281 * ***
                                            8282 * ***           case dstage_storeFrameHeader:
000056A4                                    8283 @L248    DS    0H
                                            8284 * ***               {};
                                            8285 * ***               {   size_t const sizeToCopy = ( (dctx->tmpInTarget\
                                            8286 *  - dctx->tmpInSize) < ((size_t)(srcEnd - srcPtr)) ? (dctx->tmpInTarg\
                                            8287 * et - dctx->tmpInSize) : ((size_t)(srcEnd - srcPtr)) );
000056A4 E3F0 2050 0004          00000050   8288          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
000056AA E3F0 2048 000B          00000048   8289          SLG   15,72(0,2)
000056B0 B904 0015                          8290          LGR   1,5
000056B4 B909 0013                          8291          SGR   1,3
000056B8 B921 00F1                          8292          CLGR  15,1
000056BC 47B0 C2FC               000056D4   8293          BNL   @L249
000056C0 E3F0 2050 0004          00000050   8294          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
000056C6 E3F0 2048 000B          00000048   8295          SLG   15,72(0,2)
000056CC B904 00EF                          8296          LGR   14,15
000056D0 47F0 C304               000056DC   8297          B     @L250
000056D4                                    8298 @L249    DS    0H
000056D4 B904 00E5                          8299          LGR   14,5
000056D8 B909 00E3                          8300          SGR   14,3
000056DC                                    8301 @L250    DS    0H
                                            8302 * ***                   __memcpy(dctx->header + dctx->tmpInSize,srcPtr\
                                            8303 * ,sizeToCopy);
000056DC E390 2048 0004          00000048   8304          LG    9,72(0,2)   ; offset of tmpInSize in LZ4F_dctx_s
000056E2 B904 0013                          8305          LGR   1,3
000056E6 4199 20E8               000000E8   8306          LA    9,232(9,2)
000056EA B902 00FE                          8307          LTGR  15,14
000056EE 4780 C344               0000571C   8308          BZ    @@gen_label505
000056F2 A7FB FFFF               0000FFFF   8309          AGHI  15,-1
                                                                                                                           Page  168 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000056F6 EBBF 0008 000A          00000008   8310          SRAG  11,15,8(0)
000056FC B902 00BB                          8311          LTGR  11,11
00005700 4780 C340               00005718   8312          BZ    @@gen_label504
00005704                                    8313 @@gen_label503 DS 0H
00005704 D2FF 9000 1000 00000000 00000000   8314          MVC   0(256,9),0(1)
0000570A 4190 9100               00000100   8315          LA    9,256(0,9)
0000570E 4110 1100               00000100   8316          LA    1,256(0,1)
00005712 E3B0 C32C 0046          00005704   8317          BCTG  11,@@gen_label503
00005718                                    8318 @@gen_label504 DS 0H
00005718 44F0 C0E0               000054B8   8319          EX    15,@lit_776_305
0000571C                                    8320 @@gen_label505 DS 0H
                                            8321 * ***                   dctx->tmpInSize += sizeToCopy;
0000571C B904 00FE                          8322          LGR   15,14
00005720 E3F0 2048 000A          00000048   8323          ALG   15,72(0,2)
00005726 E3F0 2048 0024          00000048   8324          STG   15,72(0,2)
                                            8325 * ***                   srcPtr += sizeToCopy;
0000572C 413E 3000               00000000   8326          LA    3,0(14,3)
                                            8327 * ***               }
                                            8328 * ***               if (dctx->tmpInSize < dctx->tmpInTarget) {
00005730 E3F0 2048 0004          00000048   8329          LG    15,72(0,2)  ; offset of tmpInSize in LZ4F_dctx_s
00005736 E3F0 2050 0021          00000050   8330          CLG   15,80(0,2)
0000573C 47B0 C38E               00005766   8331          BNL   @L251
                                            8332 * ***                   nextSrcSizeHint = (dctx->tmpInTarget - dctx->t\
                                            8333 * mpInSize) + BHSize;
00005740 E380 2050 0004          00000050   8334          LG    8,80(0,2)   ; offset of tmpInTarget in LZ4F_dctx_s
00005746 E380 2048 000B          00000048   8335          SLG   8,72(0,2)
0000574C E3F0 C0C0 0004          00005498   8336          LG    15,@lit_776_296
00005752 E380 F058 000A          00000058   8337          ALG   8,88(0,15)
                                            8338 * ***                   doAnotherStage = 0;
00005758 A778 0000               00000000   8339          LHI   7,0         ; 0
                                            8340 * ***                   break;
0000575C E3C0 C0C8 001A          000054A0   8341          ALGF  12,@lit_region_diff_776_1_3
                                            8342          DROP  12
                        0000650A            8343          USING @REGION_776_3,12
00005762 47F0 C40E               00006918   8344          B     @L241
                                            8345          DROP  12
                        000053D8            8346          USING @REGION_776_1,12
                                            8347 * ***               }
00005766                                    8348 @L251    DS    0H
                                            8349 * ***               {   size_t const hSize = LZ4F_decodeHeader(dctx, d\
                                            8350 * ctx->header, dctx->tmpInTarget);
00005766 E320 D0B8 0024          000000B8   8351          STG   2,184(0,13)
0000576C 41F0 20E8               000000E8   8352          LA    15,232(0,2)
00005770 E3F0 D0C0 0024          000000C0   8353          STG   15,192(0,13)
00005776 E3F0 2050 0004          00000050   8354          LG    15,80(0,2)
0000577C E3F0 D0C8 0024          000000C8   8355          STG   15,200(0,13)
00005782 4110 D0B8               000000B8   8356          LA    1,184(0,13)
00005786 E3F0 C0D0 0004          000054A8   8357          LG    15,@lit_776_303 ; LZ4F_decodeHeader
0000578C                                    8358 @@gen_label507 DS    0H
0000578C 05EF                               8359          BALR  14,15
0000578E                                    8360 @@gen_label508 DS    0H
0000578E B904 009F                          8361          LGR   9,15
                                                                                                                           Page  169 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8362 * ***                   if (LZ4F_isError(hSize)) return hSize;
00005792 E390 D0B8 0024          000000B8   8363          STG   9,184(0,13)
00005798 4110 D0B8               000000B8   8364          LA    1,184(0,13)
0000579C E3F0 C0D8 0004          000054B0   8365          LG    15,@lit_776_304 ; LZ4F_isError
000057A2                                    8366 @@gen_label509 DS    0H
000057A2 05EF                               8367          BALR  14,15
000057A4                                    8368 @@gen_label510 DS    0H
000057A4 12FF                               8369          LTR   15,15
000057A6 4770 C3DC               000057B4   8370          BNZ   *+14  Around region break
000057AA E3C0 C0C8 001A          000054A0   8371          ALGF  12,@lit_region_diff_776_1_3
                                            8372          DROP  12
                        0000650A            8373          USING @REGION_776_3,12
000057B0 47F0 C40E               00006918   8374          B     @L241
                                            8375          DROP  12
                        000053D8            8376          USING @REGION_776_1,12
000057B4 B904 00F9                          8377          LGR   15,9
000057B8 E3C0 C0C8 001A          000054A0   8378          ALGF  12,@lit_region_diff_776_1_3
                                            8379          DROP  12
                        0000650A            8380          USING @REGION_776_3,12
000057BE 47F0 C620               00006B2A   8381          B     @ret_lab_776
                                            8382          DROP  12
                        000053D8            8383          USING @REGION_776_1,12
000057C2                                    8384 @L252    DS    0H
                                            8385 * ***               }
                                            8386 * ***               break;
                                            8387 * ***
                                            8388 * ***           case dstage_init:
000057C2                                    8389 @L253    DS    0H
                                            8390 * ***               {};
                                            8391 * ***               if (dctx->frameInfo.contentChecksumFlag) (void)XXH\
                                            8392 * 32_reset(&(dctx->xxh), 0);
000057C2 E3F0 2008 0012          00000008   8393          LT    15,8(0,2)   ; offset of contentChecksumFlag in 0000027
000057C8 4780 C410               000057E8   8394          BZ    @L254
000057CC 41F0 2088               00000088   8395          LA    15,136(0,2)
000057D0 E3F0 D0B8 0024          000000B8   8396          STG   15,184(0,13)
000057D6 D707 D0C0 D0C0 000000C0 000000C0   8397          XC    192(8,13),192(13)
000057DC 4110 D0B8               000000B8   8398          LA    1,184(0,13)
000057E0 E3F0 C0E8 0004          000054C0   8399          LG    15,@lit_776_310 ; XXH32_reset
000057E6                                    8400 @@gen_label513 DS    0H
000057E6 05EF                               8401          BALR  14,15
000057E8                                    8402 @@gen_label514 DS    0H
000057E8                                    8403 @L254    DS    0H
                                            8404 * ***
                                            8405 * ***               {   size_t const bufferNeeded = dctx->maxBlockSize
                                            8406 * ***                       + ((dctx->frameInfo.blockMode==LZ4F_blockL\
                                            8407 * inked) ? 128 *(1<<10) : 0);
000057E8 E390 2030 0004          00000030   8408          LG    9,48(0,2)   ; offset of maxBlockSize in LZ4F_dctx_s
000057EE E55C 2004 0000          00000004   8409          CHSI  4(2),0
000057F4 4770 C42A               00005802   8410          BNE   @L255
000057F8 C0F9 0002 0000                     8411          IILF  15,X'00020000' ; 131072
000057FE 47F0 C42E               00005806   8412          B     @L256
00005802                                    8413 @L255    DS    0H
                                                                                                                           Page  170 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005802 A7F8 0000               00000000   8414          LHI   15,0        ; 0
00005806                                    8415 @L256    DS    0H
00005806 B914 00FF                          8416          LGFR  15,15
0000580A B90A 009F                          8417          ALGR  9,15
                                            8418 * ***                   if (bufferNeeded > dctx->maxBufferSize) {
0000580E E390 2038 0021          00000038   8419          CLG   9,56(0,2)
00005814 47D0 C506               000058DE   8420          BNH   @L257
                                            8421 * ***                       dctx->maxBufferSize = 0;
00005818 E548 2038 0000          00000038   8422          MVGHI 56(2),0     ; offset of maxBufferSize in LZ4F_dctx_s
                                            8423 * ***                       rd_free(dctx->tmpIn);
0000581E E3F0 2040 0004          00000040   8424          LG    15,64(0,2)
00005824 E3F0 D0B8 0024          000000B8   8425          STG   15,184(0,13)
0000582A 4110 D0B8               000000B8   8426          LA    1,184(0,13)
0000582E E3F0 C0F0 0004          000054C8   8427          LG    15,@lit_776_404 ; rd_free
00005834                                    8428 @@gen_label517 DS    0H
00005834 05EF                               8429          BALR  14,15
00005836                                    8430 @@gen_label518 DS    0H
                                            8431 * ***                       dctx->tmpIn = (BYTE*)rd_malloc(dctx->maxBl\
                                            8432 * ockSize + BFSize);
00005836 E3F0 2030 0004          00000030   8433          LG    15,48(0,2)  ; offset of maxBlockSize in LZ4F_dctx_s
0000583C E310 C0C0 0004          00005498   8434          LG    1,@lit_776_296
00005842 E3F0 1060 000A          00000060   8435          ALG   15,96(0,1)
00005848 E3F0 D0B8 0024          000000B8   8436          STG   15,184(0,13)
0000584E 4110 D0B8               000000B8   8437          LA    1,184(0,13)
00005852 E3F0 C0F8 0004          000054D0   8438          LG    15,@lit_776_405 ; rd_malloc
00005858                                    8439 @@gen_label519 DS    0H
00005858 05EF                               8440          BALR  14,15
0000585A                                    8441 @@gen_label520 DS    0H
0000585A E3F0 2040 0024          00000040   8442          STG   15,64(0,2)
                                            8443 * ***                       if (dctx->tmpIn == ((void *)0))
00005860 B902 00FF                          8444          LTGR  15,15
00005864 4770 C4AC               00005884   8445          BNE   @L258
                                            8446 * ***                           return err0r(LZ4F_ERROR_allocation_fai\
                                            8447 * led);
00005868 E548 D0B8 0009          000000B8   8448          MVGHI 184(13),9
0000586E 4110 D0B8               000000B8   8449          LA    1,184(0,13)
00005872 E3F0 C100 0004          000054D8   8450          LG    15,@lit_776_316 ; err0r
00005878                                    8451 @@gen_label522 DS    0H
00005878 05EF                               8452          BALR  14,15
0000587A                                    8453 @@gen_label523 DS    0H
0000587A E3C0 C0C8 001A          000054A0   8454          ALGF  12,@lit_region_diff_776_1_3
                                            8455          DROP  12
                        0000650A            8456          USING @REGION_776_3,12
00005880 47F0 C620               00006B2A   8457          B     @ret_lab_776
                                            8458          DROP  12
                        000053D8            8459          USING @REGION_776_1,12
00005884                                    8460 @L258    DS    0H
                                            8461 * ***                       rd_free(dctx->tmpOutBuffer);
00005884 E3F0 2058 0004          00000058   8462          LG    15,88(0,2)
0000588A E3F0 D0B8 0024          000000B8   8463          STG   15,184(0,13)
00005890 4110 D0B8               000000B8   8464          LA    1,184(0,13)
00005894 E3F0 C0F0 0004          000054C8   8465          LG    15,@lit_776_404 ; rd_free
                                                                                                                           Page  171 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000589A                                    8466 @@gen_label524 DS    0H
0000589A 05EF                               8467          BALR  14,15
0000589C                                    8468 @@gen_label525 DS    0H
                                            8469 * ***                       dctx->tmpOutBuffer= (BYTE*)rd_malloc(buffe\
                                            8470 * rNeeded);
0000589C E390 D0B8 0024          000000B8   8471          STG   9,184(0,13)
000058A2 4110 D0B8               000000B8   8472          LA    1,184(0,13)
000058A6 E3F0 C0F8 0004          000054D0   8473          LG    15,@lit_776_405 ; rd_malloc
000058AC                                    8474 @@gen_label526 DS    0H
000058AC 05EF                               8475          BALR  14,15
000058AE                                    8476 @@gen_label527 DS    0H
000058AE E3F0 2058 0024          00000058   8477          STG   15,88(0,2)
                                            8478 * ***                       if (dctx->tmpOutBuffer== ((void *)0))
000058B4 B902 00FF                          8479          LTGR  15,15
000058B8 4770 C500               000058D8   8480          BNE   @L259
                                            8481 * ***                           return err0r(LZ4F_ERROR_allocation_fai\
                                            8482 * led);
000058BC E548 D0B8 0009          000000B8   8483          MVGHI 184(13),9
000058C2 4110 D0B8               000000B8   8484          LA    1,184(0,13)
000058C6 E3F0 C100 0004          000054D8   8485          LG    15,@lit_776_316 ; err0r
000058CC                                    8486 @@gen_label529 DS    0H
000058CC 05EF                               8487          BALR  14,15
000058CE                                    8488 @@gen_label530 DS    0H
000058CE E3C0 C0C8 001A          000054A0   8489          ALGF  12,@lit_region_diff_776_1_3
                                            8490          DROP  12
                        0000650A            8491          USING @REGION_776_3,12
000058D4 47F0 C620               00006B2A   8492          B     @ret_lab_776
                                            8493          DROP  12
                        000053D8            8494          USING @REGION_776_1,12
000058D8                                    8495 @L259    DS    0H
                                            8496 * ***                       dctx->maxBufferSize = bufferNeeded;
000058D8 E390 2038 0024          00000038   8497          STG   9,56(0,2)   ; offset of maxBufferSize in LZ4F_dctx_s
                                            8498 * ***               }   }
000058DE                                    8499 @L257    DS    0H
                                            8500 * ***               dctx->tmpInSize = 0;
000058DE E548 2048 0000          00000048   8501          MVGHI 72(2),0     ; offset of tmpInSize in LZ4F_dctx_s
                                            8502 * ***               dctx->tmpInTarget = 0;
000058E4 E548 2050 0000          00000050   8503          MVGHI 80(2),0     ; offset of tmpInTarget in LZ4F_dctx_s
                                            8504 * ***               dctx->tmpOut = dctx->tmpOutBuffer;
000058EA E3F0 2058 0004          00000058   8505          LG    15,88(0,2)  ; offset of tmpOutBuffer in LZ4F_dctx_s
000058F0 E3F0 2070 0024          00000070   8506          STG   15,112(0,2) ; offset of tmpOut in LZ4F_dctx_s
                                            8507 * ***               dctx->tmpOutStart = 0;
000058F6 E548 2080 0000          00000080   8508          MVGHI 128(2),0    ; offset of tmpOutStart in LZ4F_dctx_s
                                            8509 * ***               dctx->tmpOutSize = 0;
000058FC E548 2078 0000          00000078   8510          MVGHI 120(2),0    ; offset of tmpOutSize in LZ4F_dctx_s
                                            8511 * ***
                                            8512 * ***               dctx->dStage = dstage_getBlockHeader;
00005902 E54C 2024 0003          00000024   8513          MVHI  36(2),3     ; offset of dStage in LZ4F_dctx_s
                                            8514 * ***
                                            8515 * ***
                                            8516 * ***           case dstage_getBlockHeader:
00005908                                    8517 @L260    DS    0H
                                                                                                                           Page  172 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8518 * ***               if ((size_t)(srcEnd - srcPtr) >= BHSize) {
00005908 B904 00F5                          8519          LGR   15,5
0000590C B909 00F3                          8520          SGR   15,3
00005910 E310 C0C0 0004          00005498   8521          LG    1,@lit_776_296
00005916 E3F0 1058 0021          00000058   8522          CLG   15,88(0,1)
0000591C 4740 C55A               00005932   8523          BL    @L261
                                            8524 * ***                   selectedIn = srcPtr;
00005920 B904 0063                          8525          LGR   6,3         ; selectedIn
                                            8526 * ***                   srcPtr += BHSize;
00005924 E3F0 1058 0004          00000058   8527          LG    15,88(0,1)  ; BHSize
0000592A 413F 3000               00000000   8528          LA    3,0(15,3)
                                            8529 * ***               } else {
0000592E 47F0 C566               0000593E   8530          B     @L262
00005932                                    8531 @L261    DS    0H
                                            8532 * ***
                                            8533 * ***                   dctx->tmpInSize = 0;
00005932 E548 2048 0000          00000048   8534          MVGHI 72(2),0     ; offset of tmpInSize in LZ4F_dctx_s
                                            8535 * ***                   dctx->dStage = dstage_storeBlockHeader;
00005938 E54C 2024 0004          00000024   8536          MVHI  36(2),4     ; offset of dStage in LZ4F_dctx_s
                                            8537 * ***               }
0000593E                                    8538 @L262    DS    0H
                                            8539 * ***
                                            8540 * ***               if (dctx->dStage == dstage_storeBlockHeader)
0000593E E55C 2024 0004          00000024   8541          CHSI  36(2),4
00005944 4770 C628               00005A00   8542          BNE   @L263
                                            8543 * ***           case dstage_storeBlockHeader:
00005948                                    8544 @L264    DS    0H
                                            8545 * ***               {   size_t const remainingInput = (size_t)(srcEnd \
                                            8546 * - srcPtr);
00005948 B904 00F5                          8547          LGR   15,5
0000594C B909 00F3                          8548          SGR   15,3
                                            8549 * ***                   size_t const wantedData = BHSize - dctx->tmpIn\
                                            8550 * Size;
00005950 E310 C0C0 0004          00005498   8551          LG    1,@lit_776_296
00005956 E310 1058 0004          00000058   8552          LG    1,88(0,1)   ; BHSize
0000595C E310 2048 000B          00000048   8553          SLG   1,72(0,2)
                                            8554 * ***                   size_t const sizeToCopy = ( (wantedData) < (re\
                                            8555 * mainingInput) ? (wantedData) : (remainingInput) );
00005962 B921 001F                          8556          CLGR  1,15
00005966 47B0 C59A               00005972   8557          BNL   @L265
0000596A B904 00E1                          8558          LGR   14,1
0000596E 47F0 C59E               00005976   8559          B     @L266
00005972                                    8560 @L265    DS    0H
00005972 B904 00EF                          8561          LGR   14,15
00005976                                    8562 @L266    DS    0H
                                            8563 * ***                   __memcpy(dctx->tmpIn + dctx->tmpInSize,srcPtr,\
                                            8564 * sizeToCopy);
00005976 E390 2040 0004          00000040   8565          LG    9,64(0,2)   ; offset of tmpIn in LZ4F_dctx_s
0000597C E3B0 2048 0004          00000048   8566          LG    11,72(0,2)  ; offset of tmpInSize in LZ4F_dctx_s
00005982 B904 0013                          8567          LGR   1,3
00005986 419B 9000               00000000   8568          LA    9,0(11,9)
0000598A B902 00FE                          8569          LTGR  15,14
                                                                                                                           Page  173 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000598E 4780 C5E4               000059BC   8570          BZ    @@gen_label536
00005992 A7FB FFFF               0000FFFF   8571          AGHI  15,-1
00005996 EBBF 0008 000A          00000008   8572          SRAG  11,15,8(0)
0000599C B902 00BB                          8573          LTGR  11,11
000059A0 4780 C5E0               000059B8   8574          BZ    @@gen_label535
000059A4                                    8575 @@gen_label534 DS 0H
000059A4 D2FF 9000 1000 00000000 00000000   8576          MVC   0(256,9),0(1)
000059AA 4190 9100               00000100   8577          LA    9,256(0,9)
000059AE 4110 1100               00000100   8578          LA    1,256(0,1)
000059B2 E3B0 C5CC 0046          000059A4   8579          BCTG  11,@@gen_label534
000059B8                                    8580 @@gen_label535 DS 0H
000059B8 44F0 C0E0               000054B8   8581          EX    15,@lit_776_305
000059BC                                    8582 @@gen_label536 DS 0H
                                            8583 * ***                   srcPtr += sizeToCopy;
000059BC 413E 3000               00000000   8584          LA    3,0(14,3)
                                            8585 * ***                   dctx->tmpInSize += sizeToCopy;
000059C0 E3E0 2048 000A          00000048   8586          ALG   14,72(0,2)
000059C6 E3E0 2048 0024          00000048   8587          STG   14,72(0,2)
                                            8588 * ***
                                            8589 * ***                   if (dctx->tmpInSize < BHSize) {
000059CC B904 00FE                          8590          LGR   15,14       ; offset of tmpInSize in LZ4F_dctx_s
000059D0 E310 C0C0 0004          00005498   8591          LG    1,@lit_776_296
000059D6 E3F0 1058 0021          00000058   8592          CLG   15,88(0,1)
000059DC 47B0 C622               000059FA   8593          BNL   @L267
                                            8594 * ***                       nextSrcSizeHint = BHSize - dctx->tmpInSize\
                                            8595 * ;
000059E0 E380 1058 0004          00000058   8596          LG    8,88(0,1)   ; BHSize
000059E6 E380 2048 000B          00000048   8597          SLG   8,72(0,2)
                                            8598 * ***                       doAnotherStage  = 0;
000059EC A778 0000               00000000   8599          LHI   7,0         ; 0
                                            8600 * ***                       break;
000059F0 E3C0 C0C8 001A          000054A0   8601          ALGF  12,@lit_region_diff_776_1_3
                                            8602          DROP  12
                        0000650A            8603          USING @REGION_776_3,12
000059F6 47F0 C40E               00006918   8604          B     @L241
                                            8605          DROP  12
                        000053D8            8606          USING @REGION_776_1,12
                                            8607 * ***                   }
000059FA                                    8608 @L267    DS    0H
                                            8609 * ***                   selectedIn = dctx->tmpIn;
000059FA E360 2040 0004          00000040   8610          LG    6,64(0,2)   ; offset of tmpIn in LZ4F_dctx_s
                                            8611 * ***               }
                                            8612 * ***
                                            8613 * ***
                                            8614 * ***               {   U32 const blockHeader = LZ4F_readLE32(selected\
                                            8615 * In);
00005A00                                    8616 @L263    DS    0H
00005A00 E360 D0B8 0024          000000B8   8617          STG   6,184(0,13)
00005A06 4110 D0B8               000000B8   8618          LA    1,184(0,13)
00005A0A E3F0 C108 0004          000054E0   8619          LG    15,@lit_776_325 ; LZ4F_readLE32
00005A10                                    8620 @@gen_label538 DS    0H
00005A10 05EF                               8621          BALR  14,15
                                                                                                                           Page  174 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005A12                                    8622 @@gen_label539 DS    0H
00005A12 181F                               8623          LR    1,15
                                            8624 * ***                   size_t const nextCBlockSize = blockHeader & 0x\
                                            8625 * 7FFFFFFFU;
00005A14 A5F6 7FFF               00007FFF   8626          NILH  15,32767
00005A18 B916 009F                          8627          LLGFR 9,15
                                            8628 * ***                   size_t const crcSize = dctx->frameInfo.blockCh\
                                            8629 * ecksumFlag * BFSize;
00005A1C E3F0 201C 0014          0000001C   8630          LGF   15,28(0,2)
00005A22 E3E0 C0C0 0004          00005498   8631          LG    14,@lit_776_296
00005A28 E3B0 E060 0004          00000060   8632          LG    11,96(0,14) ; BFSize
00005A2E B90C 00FB                          8633          MSGR  15,11
00005A32 B904 00BF                          8634          LGR   11,15       ; crcSize
                                            8635 * ***                   if (blockHeader==0) {
00005A36 1211                               8636          LTR   1,1
00005A38 4770 C674               00005A4C   8637          BNE   @L268
                                            8638 * ***                       {};
                                            8639 * ***                       dctx->dStage = dstage_getSuffix;
00005A3C E54C 2024 000A          00000024   8640          MVHI  36(2),10    ; offset of dStage in LZ4F_dctx_s
                                            8641 * ***                       break;
00005A42 E3C0 C0C8 001A          000054A0   8642          ALGF  12,@lit_region_diff_776_1_3
                                            8643          DROP  12
                        0000650A            8644          USING @REGION_776_3,12
00005A48 47F0 C40E               00006918   8645          B     @L241
                                            8646          DROP  12
                        000053D8            8647          USING @REGION_776_1,12
                                            8648 * ***                   }
00005A4C                                    8649 @L268    DS    0H
                                            8650 * ***                   if (nextCBlockSize > dctx->maxBlockSize) {
00005A4C E390 2030 0021          00000030   8651          CLG   9,48(0,2)
00005A52 47D0 C69A               00005A72   8652          BNH   @L269
                                            8653 * ***                       return err0r(LZ4F_ERROR_maxBlockSize_inval\
                                            8654 * id);
00005A56 E548 D0B8 0002          000000B8   8655          MVGHI 184(13),2
00005A5C 4110 D0B8               000000B8   8656          LA    1,184(0,13)
00005A60 E3F0 C100 0004          000054D8   8657          LG    15,@lit_776_316 ; err0r
00005A66                                    8658 @@gen_label542 DS    0H
00005A66 05EF                               8659          BALR  14,15
00005A68                                    8660 @@gen_label543 DS    0H
00005A68 E3C0 C0C8 001A          000054A0   8661          ALGF  12,@lit_region_diff_776_1_3
                                            8662          DROP  12
                        0000650A            8663          USING @REGION_776_3,12
00005A6E 47F0 C620               00006B2A   8664          B     @ret_lab_776
                                            8665          DROP  12
                        000053D8            8666          USING @REGION_776_1,12
                                            8667 * ***                   }
00005A72                                    8668 @L269    DS    0H
                                            8669 * ***                   if (blockHeader & 0x80000000U) {
00005A72 C01B 8000 0000                     8670          NILF  1,X'80000000'
00005A78 1211                               8671          LTR   1,1
00005A7A 4780 C6E2               00005ABA   8672          BZ    @L270
                                            8673 * ***
                                                                                                                           Page  175 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8674 * ***                       dctx->tmpInTarget = nextCBlockSize;
00005A7E E390 2050 0024          00000050   8675          STG   9,80(0,2)   ; offset of tmpInTarget in LZ4F_dctx_s
                                            8676 * ***                       {};
                                            8677 * ***                       if (dctx->frameInfo.blockChecksumFlag) {
00005A84 E3F0 201C 0012          0000001C   8678          LT    15,28(0,2)  ; offset of blockChecksumFlag in 0000027
00005A8A 4780 C6D2               00005AAA   8679          BZ    @L271
                                            8680 * ***                           (void)XXH32_reset(&dctx->blockChecksum\
                                            8681 * , 0);
00005A8E 41F0 20B8               000000B8   8682          LA    15,184(0,2)
00005A92 E3F0 D0B8 0024          000000B8   8683          STG   15,184(0,13)
00005A98 D707 D0C0 D0C0 000000C0 000000C0   8684          XC    192(8,13),192(13)
00005A9E 4110 D0B8               000000B8   8685          LA    1,184(0,13)
00005AA2 E3F0 C0E8 0004          000054C0   8686          LG    15,@lit_776_310 ; XXH32_reset
00005AA8                                    8687 @@gen_label546 DS    0H
00005AA8 05EF                               8688          BALR  14,15
00005AAA                                    8689 @@gen_label547 DS    0H
                                            8690 * ***                       }
00005AAA                                    8691 @L271    DS    0H
                                            8692 * ***                       dctx->dStage = dstage_copyDirect;
00005AAA E54C 2024 0005          00000024   8693          MVHI  36(2),5     ; offset of dStage in LZ4F_dctx_s
                                            8694 * ***                       break;
00005AB0 E3C0 C0C8 001A          000054A0   8695          ALGF  12,@lit_region_diff_776_1_3
                                            8696          DROP  12
                        0000650A            8697          USING @REGION_776_3,12
00005AB6 47F0 C40E               00006918   8698          B     @L241
                                            8699          DROP  12
                        000053D8            8700          USING @REGION_776_1,12
                                            8701 * ***                   }
00005ABA                                    8702 @L270    DS    0H
                                            8703 * ***
                                            8704 * ***                   dctx->tmpInTarget = nextCBlockSize + crcSize;
00005ABA B904 00F9                          8705          LGR   15,9
00005ABE B90A 00FB                          8706          ALGR  15,11
00005AC2 E3F0 2050 0024          00000050   8707          STG   15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
                                            8708 * ***                   dctx->dStage = dstage_getCBlock;
00005AC8 E54C 2024 0007          00000024   8709          MVHI  36(2),7     ; offset of dStage in LZ4F_dctx_s
                                            8710 * ***                   if (dstPtr==dstEnd || srcPtr==srcEnd) {
00005ACE E310 D108 0004          00000108   8711          LG    1,264(0,13) ; spill
00005AD4 B920 0041                          8712          CGR   4,1
00005AD8 4780 C716               00005AEE   8713          BE    @L273
00005ADC B920 0035                          8714          CGR   3,5
00005AE0 4780 C716               00005AEE   8715          BE    *+14  Around region break
00005AE4 E3C0 C0C8 001A          000054A0   8716          ALGF  12,@lit_region_diff_776_1_3
                                            8717          DROP  12
                        0000650A            8718          USING @REGION_776_3,12
00005AEA 47F0 C40E               00006918   8719          B     @L241
                                            8720          DROP  12
                        000053D8            8721          USING @REGION_776_1,12
00005AEE                                    8722 @L273    DS    0H
                                            8723 * ***                       nextSrcSizeHint = BHSize + nextCBlockSize \
                                            8724 * + crcSize;
00005AEE E390 E058 000A          00000058   8725          ALG   9,88(0,14)
                                                                                                                           Page  176 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005AF4 B90A 009B                          8726          ALGR  9,11
00005AF8 B904 0089                          8727          LGR   8,9         ; nextSrcSizeHint
                                            8728 * ***                       doAnotherStage = 0;
00005AFC A778 0000               00000000   8729          LHI   7,0         ; 0
                                            8730 * ***                   }
00005B00                                    8731 @L272    DS    0H
                                            8732 * ***                   break;
00005B00 E3C0 C0C8 001A          000054A0   8733          ALGF  12,@lit_region_diff_776_1_3
                                            8734          DROP  12
                        0000650A            8735          USING @REGION_776_3,12
00005B06 47F0 C40E               00006918   8736          B     @L241
                                            8737          DROP  12
                        000053D8            8738          USING @REGION_776_1,12
                                            8739 * ***               }
                                            8740 * ***
                                            8741 * ***           case dstage_copyDirect:
00005B0A                                    8742 @L274    DS    0H
                                            8743 * ***               {};
                                            8744 * ***               {   size_t sizeToCopy;
                                            8745 * ***                   if (dstPtr == ((void *)0)) {
00005B0A B902 00F4                          8746          LTGR  15,4
00005B0E 4770 C748               00005B20   8747          BNE   @L275
                                            8748 * ***                       sizeToCopy = 0;
00005B12 A799 0000               00000000   8749          LGHI  9,0         ; 0
                                            8750 * ***                   } else {
00005B16 E3C0 C110 001A          000054E8   8751          ALGF  12,@lit_region_diff_776_1_2
                                            8752          DROP  12
                        00005C24            8753          USING @REGION_776_2,12
00005B1C 47F0 C02E               00005C52   8754          B     @L276
                                            8755          DROP  12
                        000053D8            8756          USING @REGION_776_1,12
00005B20                                    8757 @L275    DS    0H
                                            8758 * ***                       size_t const minBuffSize = ( ((size_t)(src\
                                            8759 * End-srcPtr)) < ((size_t)(dstEnd-dstPtr)) ? ((size_t)(srcEnd-srcPtr))\
                                            8760 *  : ((size_t)(dstEnd-dstPtr)) );
00005B20 B904 00F5                          8761          LGR   15,5
00005B24 B909 00F3                          8762          SGR   15,3
00005B28 E310 D108 0004          00000108   8763          LG    1,264(0,13) ; spill
00005B2E B909 0014                          8764          SGR   1,4
00005B32 B921 00F1                          8765          CLGR  15,1
00005B36 47B0 C76E               00005B46   8766          BNL   @L277
00005B3A B904 0095                          8767          LGR   9,5
00005B3E B909 0093                          8768          SGR   9,3
00005B42 47F0 C778               00005B50   8769          B     @L278
00005B46                                    8770 @L277    DS    0H
00005B46 E390 D108 0004          00000108   8771          LG    9,264(0,13) ; spill
00005B4C B909 0094                          8772          SGR   9,4
00005B50                                    8773 @L278    DS    0H
                                            8774 * ***                       sizeToCopy = ( (dctx->tmpInTarget) < (minB\
                                            8775 * uffSize) ? (dctx->tmpInTarget) : (minBuffSize) );
00005B50 E3F0 2050 0004          00000050   8776          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
00005B56 B921 00F9                          8777          CLGR  15,9
                                                                                                                           Page  177 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005B5A 47B0 C790               00005B68   8778          BNL   @L279
00005B5E E390 2050 0004          00000050   8779          LG    9,80(0,2)   ; offset of tmpInTarget in LZ4F_dctx_s
00005B64 47F0 C790               00005B68   8780          B     @L280
00005B68                                    8781 @L279    DS    0H
00005B68                                    8782 @L280    DS    0H
                                            8783 * ***                       __memcpy(dstPtr,srcPtr,sizeToCopy);
00005B68 B904 0013                          8784          LGR   1,3
00005B6C B904 00E4                          8785          LGR   14,4
00005B70 B902 00F9                          8786          LTGR  15,9
00005B74 4780 C7CA               00005BA2   8787          BZ    @@gen_label555
00005B78 A7FB FFFF               0000FFFF   8788          AGHI  15,-1
00005B7C EBBF 0008 000A          00000008   8789          SRAG  11,15,8(0)
00005B82 B902 00BB                          8790          LTGR  11,11
00005B86 4780 C7C6               00005B9E   8791          BZ    @@gen_label554
00005B8A                                    8792 @@gen_label553 DS 0H
00005B8A D2FF E000 1000 00000000 00000000   8793          MVC   0(256,14),0(1)
00005B90 41E0 E100               00000100   8794          LA    14,256(0,14)
00005B94 4110 1100               00000100   8795          LA    1,256(0,1)
00005B98 E3B0 C7B2 0046          00005B8A   8796          BCTG  11,@@gen_label553
00005B9E                                    8797 @@gen_label554 DS 0H
00005B9E 44F0 C114               000054EC   8798          EX    15,@lit_776_331
00005BA2                                    8799 @@gen_label555 DS 0H
                                            8800 * ***                       if (dctx->frameInfo.blockChecksumFlag) {
00005BA2 E3F0 201C 0012          0000001C   8801          LT    15,28(0,2)  ; offset of blockChecksumFlag in 0000027
00005BA8 4780 C7F6               00005BCE   8802          BZ    @L281
                                            8803 * ***                           (void)XXH32_update(&dctx->blockChecksu\
                                            8804 * m, srcPtr, sizeToCopy);
00005BAC 41F0 20B8               000000B8   8805          LA    15,184(0,2)
00005BB0 E3F0 D0B8 0024          000000B8   8806          STG   15,184(0,13)
00005BB6 E330 D0C0 0024          000000C0   8807          STG   3,192(0,13)
00005BBC E390 D0C8 0024          000000C8   8808          STG   9,200(0,13)
00005BC2 4110 D0B8               000000B8   8809          LA    1,184(0,13)
00005BC6 E3F0 C120 0004          000054F8   8810          LG    15,@lit_776_332 ; XXH32_update
00005BCC                                    8811 @@gen_label557 DS    0H
00005BCC 05EF                               8812          BALR  14,15
00005BCE                                    8813 @@gen_label558 DS    0H
                                            8814 * ***                       }
00005BCE                                    8815 @L281    DS    0H
                                            8816 * ***                       if (dctx->frameInfo.contentChecksumFlag)
00005BCE E3F0 2008 0012          00000008   8817          LT    15,8(0,2)   ; offset of contentChecksumFlag in 0000027
00005BD4 4780 C822               00005BFA   8818          BZ    @L282
                                            8819 * ***                           (void)XXH32_update(&dctx->xxh, srcPtr,\
                                            8820 *  sizeToCopy);
00005BD8 41F0 2088               00000088   8821          LA    15,136(0,2)
00005BDC E3F0 D0B8 0024          000000B8   8822          STG   15,184(0,13)
00005BE2 E330 D0C0 0024          000000C0   8823          STG   3,192(0,13)
00005BE8 E390 D0C8 0024          000000C8   8824          STG   9,200(0,13)
00005BEE 4110 D0B8               000000B8   8825          LA    1,184(0,13)
00005BF2 E3F0 C120 0004          000054F8   8826          LG    15,@lit_776_332 ; XXH32_update
00005BF8                                    8827 @@gen_label560 DS    0H
00005BF8 05EF                               8828          BALR  14,15
00005BFA                                    8829 @@gen_label561 DS    0H
                                                                                                                           Page  178 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005BFA                                    8830 @L282    DS    0H
                                            8831 * ***                       if (dctx->frameInfo.contentSize)
00005BFA E3F0 2010 0002          00000010   8832          LTG   15,16(0,2)  ; offset of contentSize in 0000027
00005C00 4770 C836               00005C0E   8833          BNZ   *+14  Around region break
00005C04 E3C0 C110 001A          000054E8   8834          ALGF  12,@lit_region_diff_776_1_2
                                            8835          DROP  12
                        00005C24            8836          USING @REGION_776_2,12
00005C0A 47F0 C000               00005C24   8837          B     @L283
                                            8838          DROP  12
                        000053D8            8839          USING @REGION_776_1,12
                                            8840 * ***                           dctx->frameRemainingSize -= sizeToCopy\
                                            8841 * ;
00005C0E E3F0 2028 0004          00000028   8842          LG    15,40(0,2)
00005C14 B90B 00F9                          8843          SLGR  15,9
00005C18 E3F0 2028 0024          00000028   8844          STG   15,40(0,2)
00005C1E E3C0 C110 001A          000054E8   8845          ALGF  12,@lit_region_diff_776_1_2
00005C24                                    8846 @REGION_776_2 DS 0H
                                            8847          DROP  12
                        00005C24            8848          USING @REGION_776_2,12
00005C24                                    8849 @L283    DS    0H
                                            8850 * ***
                                            8851 * ***
                                            8852 * ***                       if (dctx->frameInfo.blockMode == LZ4F_bloc\
                                            8853 * kLinked) {
00005C24 E55C 2004 0000          00000004   8854          CHSI  4(2),0
00005C2A 4770 C02E               00005C52   8855          BNE   @L284
                                            8856 * ***                           LZ4F_updateDict(dctx, dstPtr, sizeToCo\
                                            8857 * py, dstStart, 0);
00005C2E E320 D0B8 0024          000000B8   8858          STG   2,184(0,13)
00005C34 E340 D0C0 0024          000000C0   8859          STG   4,192(0,13)
00005C3A EB9A D0C8 0024          000000C8   8860          STMG  9,10,200(13)
00005C40 D707 D0D8 D0D8 000000D8 000000D8   8861          XC    216(8,13),216(13)
00005C46 4110 D0B8               000000B8   8862          LA    1,184(0,13)
00005C4A E3F0 C064 0004          00005C88   8863          LG    15,@lit_776_334 ; LZ4F_updateDict
00005C50                                    8864 @@gen_label564 DS    0H
00005C50 05EF                               8865          BALR  14,15
00005C52                                    8866 @@gen_label565 DS    0H
                                            8867 * ***                   }   }
00005C52                                    8868 @L284    DS    0H
00005C52                                    8869 @L276    DS    0H
                                            8870 * ***
                                            8871 * ***                   srcPtr += sizeToCopy;
00005C52 4139 3000               00000000   8872          LA    3,0(9,3)
                                            8873 * ***                   dstPtr += sizeToCopy;
00005C56 4149 4000               00000000   8874          LA    4,0(9,4)
                                            8875 * ***                   if (sizeToCopy == dctx->tmpInTarget) {
00005C5A E390 2050 0021          00000050   8876          CLG   9,80(0,2)
00005C60 4770 C0E4               00005D08   8877          BNE   @L285
                                            8878 * ***                       if (dctx->frameInfo.blockChecksumFlag) {
00005C64 E3F0 201C 0012          0000001C   8879          LT    15,28(0,2)  ; offset of blockChecksumFlag in 0000027
00005C6A 4780 C0D4               00005CF8   8880          BZ    @L286
                                            8881 * ***                           dctx->tmpInSize = 0;
                                                                                                                           Page  179 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005C6E E548 2048 0000          00000048   8882          MVGHI 72(2),0     ; offset of tmpInSize in LZ4F_dctx_s
                                            8883 * ***                           dctx->dStage = dstage_getBlockChecksum\
                                            8884 * ;
00005C74 E54C 2024 0006          00000024   8885          MVHI  36(2),6     ; offset of dStage in LZ4F_dctx_s
                                            8886 * ***                       } else
00005C7A E3C0 C06C 001A          00005C90   8887          ALGF  12,@lit_region_diff_776_2_3
                                            8888          DROP  12
                        0000650A            8889          USING @REGION_776_3,12
00005C80 47F0 C40E               00006918   8890          B     @L241
                                            8891          DROP  12
                        00005C24            8892          USING @REGION_776_2,12
00005C88                                    8893          DS    0D
00005C88 0000000000004E10                   8894 @lit_776_334 DC AD($L$Z4$F_update$Dict)
00005C90 000008E6                           8895 @lit_region_diff_776_2_3  DC A(@REGION_776_3-@REGION_776_2)
00005C94 00000000
00005C98 0000000000006CE8                   8896 @lit_776_335 DC AD(@DATA)
00005CA0 D200 E000 1000 00000000 00000000   8897 @lit_776_340          MVC 0(1,14),0(1)
00005CA6 0000
00005CA8 0000000000000440                   8898 @lit_776_342 DC AD($L$Z4$F_read$L$E32)
00005CB0 0000000000000000                   8899 @lit_776_343 DC AD($X$X$H32_digest)
00005CB8 0000000000000A60                   8900 @lit_776_344 DC AD(err0r)
00005CC0 0000000000000000                   8901 @lit_776_352 DC AD(__assert)
00005CC8 0000000000006DDE                   8902 @lit_776_351 DC AD(@strings@)
00005CD0 0000000000000000                   8903 @lit_776_354 DC AD($X$X$H32)
00005CD8 0000000000000000                   8904 @lit_776_360 DC AD($L$Z4_decompress_safe_using$Dict)
00005CE0 0000000000000000                   8905 @lit_776_362 DC AD($X$X$H32_update)
00005CE8 00010000                           8906 @lit_776_364 DC F'65536' 0x00010000
00005CEC 00000000
00005CF0 0000000000004400                   8907 @lit_776_378 DC AD($L$Z4$F_reset$Decompression$Context)
00005CF8                                    8908 @L286    DS    0H
                                            8909 * ***                           dctx->dStage = dstage_getBlockHeader; \
                                            8910 *
00005CF8 E54C 2024 0003          00000024   8911          MVHI  36(2),3     ; offset of dStage in LZ4F_dctx_s
00005CFE                                    8912 @L287    DS    0H
                                            8913 * ***                       break;
00005CFE E3C0 C06C 001A          00005C90   8914          ALGF  12,@lit_region_diff_776_2_3
                                            8915          DROP  12
                        0000650A            8916          USING @REGION_776_3,12
00005D04 47F0 C40E               00006918   8917          B     @L241
                                            8918          DROP  12
                        00005C24            8919          USING @REGION_776_2,12
                                            8920 * ***                   }
00005D08                                    8921 @L285    DS    0H
                                            8922 * ***                   dctx->tmpInTarget -= sizeToCopy;
00005D08 E3F0 2050 0004          00000050   8923          LG    15,80(0,2)
00005D0E B90B 00F9                          8924          SLGR  15,9
00005D12 E3F0 2050 0024          00000050   8925          STG   15,80(0,2)
                                            8926 * ***               }
                                            8927 * ***               nextSrcSizeHint = dctx->tmpInTarget +
00005D18 B904 008F                          8928          LGR   8,15        ; offset of tmpInTarget in LZ4F_dctx_s
                                            8929 * ***                               +(dctx->frameInfo.blockChecksumFla\
                                            8930 * g ? BFSize : 0)
                                                                                                                           Page  180 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005D1C E3F0 201C 0012          0000001C   8931          LT    15,28(0,2)  ; offset of blockChecksumFlag in 0000027
00005D22 4780 C112               00005D36   8932          BZ    @L288
00005D26 E3F0 C074 0004          00005C98   8933          LG    15,@lit_776_335
00005D2C E3F0 F060 0004          00000060   8934          LG    15,96(0,15) ; BFSize
00005D32 47F0 C116               00005D3A   8935          B     @L289
00005D36                                    8936 @L288    DS    0H
00005D36 A7F9 0000               00000000   8937          LGHI  15,0        ; 0
00005D3A                                    8938 @L289    DS    0H
                                            8939 * ***                               + BHSize ;
00005D3A B90A 008F                          8940          ALGR  8,15
00005D3E E3F0 C074 0004          00005C98   8941          LG    15,@lit_776_335
00005D44 E380 F058 000A          00000058   8942          ALG   8,88(0,15)
                                            8943 * ***               doAnotherStage = 0;
00005D4A A778 0000               00000000   8944          LHI   7,0         ; 0
                                            8945 * ***               break;
00005D4E E3C0 C06C 001A          00005C90   8946          ALGF  12,@lit_region_diff_776_2_3
                                            8947          DROP  12
                        0000650A            8948          USING @REGION_776_3,12
00005D54 47F0 C40E               00006918   8949          B     @L241
                                            8950          DROP  12
                        00005C24            8951          USING @REGION_776_2,12
                                            8952 * ***
                                            8953 * ***
                                            8954 * ***           case dstage_getBlockChecksum:
00005D58                                    8955 @L290    DS    0H
                                            8956 * ***               {};
                                            8957 * ***               {   const void* crcSrc;
                                            8958 * ***                   if ((srcEnd-srcPtr >= 4) && (dctx->tmpInSize==\
                                            8959 * 0)) {
00005D58 B904 00F5                          8960          LGR   15,5
00005D5C B909 00F3                          8961          SGR   15,3
00005D60 A7FF 0004               00000004   8962          CGHI  15,4
00005D64 4740 C15A               00005D7E   8963          BL    @L291
00005D68 E559 2048 0000          00000048   8964          CLGHSI 72(2),0
00005D6E 4770 C15A               00005D7E   8965          BNE   @L291
                                            8966 * ***                       crcSrc = srcPtr;
00005D72 B904 00F3                          8967          LGR   15,3        ; crcSrc
                                            8968 * ***                       srcPtr += 4;
00005D76 4130 3004               00000004   8969          LA    3,4(0,3)
                                            8970 * ***                   } else {
00005D7A 47F0 C1F4               00005E18   8971          B     @L292
00005D7E                                    8972 @L291    DS    0H
                                            8973 * ***                       size_t const stillToCopy = 4 - dctx->tmpIn\
                                            8974 * Size;
00005D7E A7F9 0004               00000004   8975          LGHI  15,4        ; 4
00005D82 E3F0 2048 000B          00000048   8976          SLG   15,72(0,2)
                                            8977 * ***                       size_t const sizeToCopy = ( (stillToCopy) \
                                            8978 * < ((size_t)(srcEnd-srcPtr)) ? (stillToCopy) : ((size_t)(srcEnd-srcPt\
                                            8979 * r)) );
00005D88 B904 0015                          8980          LGR   1,5
00005D8C B909 0013                          8981          SGR   1,3
00005D90 B921 00F1                          8982          CLGR  15,1
                                                                                                                           Page  181 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005D94 47B0 C17C               00005DA0   8983          BNL   @L293
00005D98 B904 00BF                          8984          LGR   11,15
00005D9C 47F0 C184               00005DA8   8985          B     @L294
00005DA0                                    8986 @L293    DS    0H
00005DA0 B904 00B5                          8987          LGR   11,5
00005DA4 B909 00B3                          8988          SGR   11,3
00005DA8                                    8989 @L294    DS    0H
                                            8990 * ***                       __memcpy(dctx->header + dctx->tmpInSize,sr\
                                            8991 * cPtr,sizeToCopy);
00005DA8 E390 2048 0004          00000048   8992          LG    9,72(0,2)   ; offset of tmpInSize in LZ4F_dctx_s
00005DAE B904 0013                          8993          LGR   1,3
00005DB2 41E9 20E8               000000E8   8994          LA    14,232(9,2)
00005DB6 B902 00FB                          8995          LTGR  15,11
00005DBA 4780 C1C4               00005DE8   8996          BZ    @@gen_label574
00005DBE A7FB FFFF               0000FFFF   8997          AGHI  15,-1
00005DC2 EB9F 0008 000A          00000008   8998          SRAG  9,15,8(0)
00005DC8 B902 0099                          8999          LTGR  9,9
00005DCC 4780 C1C0               00005DE4   9000          BZ    @@gen_label573
00005DD0                                    9001 @@gen_label572 DS 0H
00005DD0 D2FF E000 1000 00000000 00000000   9002          MVC   0(256,14),0(1)
00005DD6 41E0 E100               00000100   9003          LA    14,256(0,14)
00005DDA 4110 1100               00000100   9004          LA    1,256(0,1)
00005DDE E390 C1AC 0046          00005DD0   9005          BCTG  9,@@gen_label572
00005DE4                                    9006 @@gen_label573 DS 0H
00005DE4 44F0 C07C               00005CA0   9007          EX    15,@lit_776_340
00005DE8                                    9008 @@gen_label574 DS 0H
                                            9009 * ***                       dctx->tmpInSize += sizeToCopy;
00005DE8 B904 00FB                          9010          LGR   15,11
00005DEC E3F0 2048 000A          00000048   9011          ALG   15,72(0,2)
00005DF2 E3F0 2048 0024          00000048   9012          STG   15,72(0,2)
                                            9013 * ***                       srcPtr += sizeToCopy;
00005DF8 413B 3000               00000000   9014          LA    3,0(11,3)
                                            9015 * ***                       if (dctx->tmpInSize < 4) {
00005DFC E559 2048 0004          00000048   9016          CLGHSI 72(2),4
00005E02 47B0 C1F0               00005E14   9017          BNL   @L295
                                            9018 * ***                           doAnotherStage = 0;
00005E06 A778 0000               00000000   9019          LHI   7,0         ; 0
                                            9020 * ***                           break;
00005E0A E3C0 C06C 001A          00005C90   9021          ALGF  12,@lit_region_diff_776_2_3
                                            9022          DROP  12
                        0000650A            9023          USING @REGION_776_3,12
00005E10 47F0 C40E               00006918   9024          B     @L241
                                            9025          DROP  12
                        00005C24            9026          USING @REGION_776_2,12
                                            9027 * ***                       }
00005E14                                    9028 @L295    DS    0H
                                            9029 * ***                       crcSrc = dctx->header;
00005E14 41F0 20E8               000000E8   9030          LA    15,232(0,2)
                                            9031 * ***                   }
00005E18                                    9032 @L292    DS    0H
                                            9033 * ***                   {   U32 const readCRC = LZ4F_readLE32(crcSrc);
00005E18 E3F0 D0B8 0024          000000B8   9034          STG   15,184(0,13)
                                                                                                                           Page  182 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005E1E 4110 D0B8               000000B8   9035          LA    1,184(0,13)
00005E22 E3F0 C084 0004          00005CA8   9036          LG    15,@lit_776_342 ; LZ4F_readLE32
00005E28                                    9037 @@gen_label576 DS    0H
00005E28 05EF                               9038          BALR  14,15
00005E2A                                    9039 @@gen_label577 DS    0H
00005E2A 189F                               9040          LR    9,15
                                            9041 * ***                       U32 const calcCRC = XXH32_digest(&dctx->bl\
                                            9042 * ockChecksum);
00005E2C 41F0 20B8               000000B8   9043          LA    15,184(0,2)
00005E30 E3F0 D0B8 0024          000000B8   9044          STG   15,184(0,13)
00005E36 4110 D0B8               000000B8   9045          LA    1,184(0,13)
00005E3A E3F0 C08C 0004          00005CB0   9046          LG    15,@lit_776_343 ; XXH32_digest
00005E40                                    9047 @@gen_label578 DS    0H
00005E40 05EF                               9048          BALR  14,15
00005E42                                    9049 @@gen_label579 DS    0H
                                            9050 * ***
                                            9051 * ***                       {};
                                            9052 * ***                       if (readCRC != calcCRC) {
00005E42 159F                               9053          CLR   9,15
00005E44 4780 C240               00005E64   9054          BE    @L296
                                            9055 * ***                           {};
                                            9056 * ***
                                            9057 * ***                           return err0r(LZ4F_ERROR_blockChecksum_\
                                            9058 * invalid);
00005E48 E548 D0B8 0007          000000B8   9059          MVGHI 184(13),7
00005E4E 4110 D0B8               000000B8   9060          LA    1,184(0,13)
00005E52 E3F0 C094 0004          00005CB8   9061          LG    15,@lit_776_344 ; err0r
00005E58                                    9062 @@gen_label581 DS    0H
00005E58 05EF                               9063          BALR  14,15
00005E5A                                    9064 @@gen_label582 DS    0H
00005E5A E3C0 C06C 001A          00005C90   9065          ALGF  12,@lit_region_diff_776_2_3
                                            9066          DROP  12
                        0000650A            9067          USING @REGION_776_3,12
00005E60 47F0 C620               00006B2A   9068          B     @ret_lab_776
                                            9069          DROP  12
                        00005C24            9070          USING @REGION_776_2,12
                                            9071 * ***                       }
00005E64                                    9072 @L296    DS    0H
                                            9073 * ***
                                            9074 * ***
                                            9075 * ***
                                            9076 * ***
                                            9077 * ***               }   }
                                            9078 * ***               dctx->dStage = dstage_getBlockHeader;
00005E64 E54C 2024 0003          00000024   9079          MVHI  36(2),3     ; offset of dStage in LZ4F_dctx_s
                                            9080 * ***               break;
00005E6A E3C0 C06C 001A          00005C90   9081          ALGF  12,@lit_region_diff_776_2_3
                                            9082          DROP  12
                        0000650A            9083          USING @REGION_776_3,12
00005E70 47F0 C40E               00006918   9084          B     @L241
                                            9085          DROP  12
                        00005C24            9086          USING @REGION_776_2,12
                                                                                                                           Page  183 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9087 * ***
                                            9088 * ***           case dstage_getCBlock:
00005E74                                    9089 @L297    DS    0H
                                            9090 * ***               {};
                                            9091 * ***               if ((size_t)(srcEnd-srcPtr) < dctx->tmpInTarget) {
00005E74 B904 00F5                          9092          LGR   15,5
00005E78 B909 00F3                          9093          SGR   15,3
00005E7C E3F0 2050 0021          00000050   9094          CLG   15,80(0,2)
00005E82 47B0 C278               00005E9C   9095          BNL   @L298
                                            9096 * ***                   dctx->tmpInSize = 0;
00005E86 E548 2048 0000          00000048   9097          MVGHI 72(2),0     ; offset of tmpInSize in LZ4F_dctx_s
                                            9098 * ***                   dctx->dStage = dstage_storeCBlock;
00005E8C E54C 2024 0008          00000024   9099          MVHI  36(2),8     ; offset of dStage in LZ4F_dctx_s
                                            9100 * ***                   break;
00005E92 E3C0 C06C 001A          00005C90   9101          ALGF  12,@lit_region_diff_776_2_3
                                            9102          DROP  12
                        0000650A            9103          USING @REGION_776_3,12
00005E98 47F0 C40E               00006918   9104          B     @L241
                                            9105          DROP  12
                        00005C24            9106          USING @REGION_776_2,12
                                            9107 * ***               }
00005E9C                                    9108 @L298    DS    0H
                                            9109 * ***
                                            9110 * ***               selectedIn = srcPtr;
00005E9C B904 0063                          9111          LGR   6,3         ; selectedIn
                                            9112 * ***               srcPtr += dctx->tmpInTarget;
00005EA0 E3F0 2050 0004          00000050   9113          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
00005EA6 413F 3000               00000000   9114          LA    3,0(15,3)
                                            9115 * ***
                                            9116 * ***               if (0)
00005EAA 47F0 C36A               00005F8E   9117          B     @L299
                                            9118 * ***           case dstage_storeCBlock:
00005EAE                                    9119 @L300    DS    0H
                                            9120 * ***               {   size_t const wantedData = dctx->tmpInTarget - \
                                            9121 * dctx->tmpInSize;
00005EAE E3F0 2050 0004          00000050   9122          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
00005EB4 E3F0 2048 000B          00000048   9123          SLG   15,72(0,2)
                                            9124 * ***                   size_t const inputLeft = (size_t)(srcEnd-srcPt\
                                            9125 * r);
00005EBA B904 0015                          9126          LGR   1,5
00005EBE B909 0013                          9127          SGR   1,3
                                            9128 * ***                   size_t const sizeToCopy = ( (wantedData) < (in\
                                            9129 * putLeft) ? (wantedData) : (inputLeft) );
00005EC2 B921 00F1                          9130          CLGR  15,1
00005EC6 47B0 C2AE               00005ED2   9131          BNL   @L301
00005ECA B904 00BF                          9132          LGR   11,15
00005ECE 47F0 C2B2               00005ED6   9133          B     @L302
00005ED2                                    9134 @L301    DS    0H
00005ED2 B904 00B1                          9135          LGR   11,1
00005ED6                                    9136 @L302    DS    0H
                                            9137 * ***                   __memcpy(dctx->tmpIn + dctx->tmpInSize,srcPtr,\
                                            9138 * sizeToCopy);
                                                                                                                           Page  184 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005ED6 E390 2040 0004          00000040   9139          LG    9,64(0,2)   ; offset of tmpIn in LZ4F_dctx_s
00005EDC E3E0 2048 0004          00000048   9140          LG    14,72(0,2)  ; offset of tmpInSize in LZ4F_dctx_s
00005EE2 B904 0013                          9141          LGR   1,3
00005EE6 41EE 9000               00000000   9142          LA    14,0(14,9)
00005EEA B902 00FB                          9143          LTGR  15,11
00005EEE 4780 C2F8               00005F1C   9144          BZ    @@gen_label587
00005EF2 A7FB FFFF               0000FFFF   9145          AGHI  15,-1
00005EF6 EB9F 0008 000A          00000008   9146          SRAG  9,15,8(0)
00005EFC B902 0099                          9147          LTGR  9,9
00005F00 4780 C2F4               00005F18   9148          BZ    @@gen_label586
00005F04                                    9149 @@gen_label585 DS 0H
00005F04 D2FF E000 1000 00000000 00000000   9150          MVC   0(256,14),0(1)
00005F0A 41E0 E100               00000100   9151          LA    14,256(0,14)
00005F0E 4110 1100               00000100   9152          LA    1,256(0,1)
00005F12 E390 C2E0 0046          00005F04   9153          BCTG  9,@@gen_label585
00005F18                                    9154 @@gen_label586 DS 0H
00005F18 44F0 C07C               00005CA0   9155          EX    15,@lit_776_340
00005F1C                                    9156 @@gen_label587 DS 0H
                                            9157 * ***                   dctx->tmpInSize += sizeToCopy;
00005F1C B904 00FB                          9158          LGR   15,11
00005F20 E3F0 2048 000A          00000048   9159          ALG   15,72(0,2)
00005F26 E3F0 2048 0024          00000048   9160          STG   15,72(0,2)
                                            9161 * ***                   srcPtr += sizeToCopy;
00005F2C 413B 3000               00000000   9162          LA    3,0(11,3)
                                            9163 * ***                   if (dctx->tmpInSize < dctx->tmpInTarget) {
00005F30 E3F0 2048 0004          00000048   9164          LG    15,72(0,2)  ; offset of tmpInSize in LZ4F_dctx_s
00005F36 E3F0 2050 0021          00000050   9165          CLG   15,80(0,2)
00005F3C 47B0 C364               00005F88   9166          BNL   @L303
                                            9167 * ***                       nextSrcSizeHint = (dctx->tmpInTarget - dct\
                                            9168 * x->tmpInSize)
00005F40 E380 2050 0004          00000050   9169          LG    8,80(0,2)   ; offset of tmpInTarget in LZ4F_dctx_s
00005F46 E380 2048 000B          00000048   9170          SLG   8,72(0,2)
                                            9171 * ***                                       + (dctx->frameInfo.blockCh\
                                            9172 * ecksumFlag ? BFSize : 0)
00005F4C E3F0 201C 0012          0000001C   9173          LT    15,28(0,2)  ; offset of blockChecksumFlag in 0000027
00005F52 4780 C342               00005F66   9174          BZ    @L304
00005F56 E3F0 C074 0004          00005C98   9175          LG    15,@lit_776_335
00005F5C E3F0 F060 0004          00000060   9176          LG    15,96(0,15) ; BFSize
00005F62 47F0 C346               00005F6A   9177          B     @L305
00005F66                                    9178 @L304    DS    0H
00005F66 A7F9 0000               00000000   9179          LGHI  15,0        ; 0
00005F6A                                    9180 @L305    DS    0H
                                            9181 * ***                                       + BHSize ;
00005F6A B90A 008F                          9182          ALGR  8,15
00005F6E E3F0 C074 0004          00005C98   9183          LG    15,@lit_776_335
00005F74 E380 F058 000A          00000058   9184          ALG   8,88(0,15)
                                            9185 * ***                       doAnotherStage = 0;
00005F7A A778 0000               00000000   9186          LHI   7,0         ; 0
                                            9187 * ***                       break;
00005F7E E3C0 C06C 001A          00005C90   9188          ALGF  12,@lit_region_diff_776_2_3
                                            9189          DROP  12
                        0000650A            9190          USING @REGION_776_3,12
                                                                                                                           Page  185 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005F84 47F0 C40E               00006918   9191          B     @L241
                                            9192          DROP  12
                        00005C24            9193          USING @REGION_776_2,12
                                            9194 * ***                   }
00005F88                                    9195 @L303    DS    0H
                                            9196 * ***                   selectedIn = dctx->tmpIn;
00005F88 E360 2040 0004          00000040   9197          LG    6,64(0,2)   ; offset of tmpIn in LZ4F_dctx_s
                                            9198 * ***               }
                                            9199 * ***
                                            9200 * ***
                                            9201 * ***               if (dctx->frameInfo.blockChecksumFlag) {
00005F8E                                    9202 @L299    DS    0H
00005F8E E3F0 201C 0012          0000001C   9203          LT    15,28(0,2)  ; offset of blockChecksumFlag in 0000027
00005F94 4780 C42C               00006050   9204          BZ    @L306
                                            9205 * ***                   dctx->tmpInTarget -= 4;
00005F98 E3F0 2050 0004          00000050   9206          LG    15,80(0,2)
00005F9E A7FB FFFC               0000FFFC   9207          AGHI  15,-4
00005FA2 E3F0 2050 0024          00000050   9208          STG   15,80(0,2)
                                            9209 * ***                   ((selectedIn != ((void *)0)) ? (void)0 : __ass\
                                            9210 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\lz4frame.c", 1642, "se\
                                            9211 * lectedIn != NULL"));
00005FA8 B902 00F6                          9212          LTGR  15,6
00005FAC 4770 C3C8               00005FEC   9213          BNE   @L308
00005FB0                                    9214 @L307    DS    0H
00005FB0 E3F0 C074 0004          00005C98   9215          LG    15,@lit_776_335
00005FB6 41F0 F0E6               000000E6   9216          LA    15,230(0,15)
00005FBA E3F0 D0B8 0024          000000B8   9217          STG   15,184(0,13)
00005FC0 E3F0 C0A4 0004          00005CC8   9218          LG    15,@lit_776_351
00005FC6 4110 F022               00000022   9219          LA    1,34(0,15)
00005FCA E310 D0C0 0024          000000C0   9220          STG   1,192(0,13)
00005FD0 E548 D0C8 066A          000000C8   9221          MVGHI 200(13),1642
00005FD6 41F0 F1B8               000001B8   9222          LA    15,440(0,15)
00005FDA E3F0 D0D0 0024          000000D0   9223          STG   15,208(0,13)
00005FE0 4110 D0B8               000000B8   9224          LA    1,184(0,13)
00005FE4 E3F0 C09C 0004          00005CC0   9225          LG    15,@lit_776_352 ; __assert
00005FEA                                    9226 @@gen_label592 DS    0H
00005FEA 05EF                               9227          BALR  14,15
00005FEC                                    9228 @@gen_label593 DS    0H
00005FEC                                    9229 @L308    DS    0H
                                            9230 * ***                   {   U32 const readBlockCrc = LZ4F_readLE32(sel\
                                            9231 * ectedIn + dctx->tmpInTarget);
00005FEC E3F0 2050 0004          00000050   9232          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
00005FF2 41FF 6000               00000000   9233          LA    15,0(15,6)
00005FF6 E3F0 D0B8 0024          000000B8   9234          STG   15,184(0,13)
00005FFC 4110 D0B8               000000B8   9235          LA    1,184(0,13)
00006000 E3F0 C084 0004          00005CA8   9236          LG    15,@lit_776_342 ; LZ4F_readLE32
00006006                                    9237 @@gen_label594 DS    0H
00006006 05EF                               9238          BALR  14,15
00006008                                    9239 @@gen_label595 DS    0H
00006008 189F                               9240          LR    9,15
                                            9241 * ***                       U32 const calcBlockCrc = XXH32(selectedIn,\
                                            9242 *  dctx->tmpInTarget, 0);
                                                                                                                           Page  186 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000600A E360 D0B8 0024          000000B8   9243          STG   6,184(0,13)
00006010 E3F0 2050 0004          00000050   9244          LG    15,80(0,2)
00006016 E3F0 D0C0 0024          000000C0   9245          STG   15,192(0,13)
0000601C D707 D0C8 D0C8 000000C8 000000C8   9246          XC    200(8,13),200(13)
00006022 4110 D0B8               000000B8   9247          LA    1,184(0,13)
00006026 E3F0 C0AC 0004          00005CD0   9248          LG    15,@lit_776_354 ; XXH32
0000602C                                    9249 @@gen_label596 DS    0H
0000602C 05EF                               9250          BALR  14,15
0000602E                                    9251 @@gen_label597 DS    0H
                                            9252 * ***
                                            9253 * ***                       if (readBlockCrc != calcBlockCrc)
0000602E 159F                               9254          CLR   9,15
00006030 4780 C42C               00006050   9255          BE    @L309
                                            9256 * ***                           return err0r(LZ4F_ERROR_blockChecksum_\
                                            9257 * invalid);
00006034 E548 D0B8 0007          000000B8   9258          MVGHI 184(13),7
0000603A 4110 D0B8               000000B8   9259          LA    1,184(0,13)
0000603E E3F0 C094 0004          00005CB8   9260          LG    15,@lit_776_344 ; err0r
00006044                                    9261 @@gen_label599 DS    0H
00006044 05EF                               9262          BALR  14,15
00006046                                    9263 @@gen_label600 DS    0H
00006046 E3C0 C06C 001A          00005C90   9264          ALGF  12,@lit_region_diff_776_2_3
                                            9265          DROP  12
                        0000650A            9266          USING @REGION_776_3,12
0000604C 47F0 C620               00006B2A   9267          B     @ret_lab_776
                                            9268          DROP  12
                        00005C24            9269          USING @REGION_776_2,12
00006050                                    9270 @L309    DS    0H
                                            9271 * ***
                                            9272 * ***
                                            9273 * ***
                                            9274 * ***
                                            9275 * ***               }   }
00006050                                    9276 @L306    DS    0H
                                            9277 * ***
                                            9278 * ***               if ((size_t)(dstEnd-dstPtr) >= dctx->maxBlockSize)\
                                            9279 *  {
00006050 E3F0 D108 0004          00000108   9280          LG    15,264(0,13) ; spill
00006056 B909 00F4                          9281          SGR   15,4
0000605A E3F0 2030 0021          00000030   9282          CLG   15,48(0,2)
00006060 4740 C5B2               000061D6   9283          BL    @L310
                                            9284 * ***                   const char* dict = (const char*)dctx->dict;
00006064 E390 2060 0004          00000060   9285          LG    9,96(0,2)   ; offset of dict in LZ4F_dctx_s
                                            9286 * ***                   size_t dictSize = dctx->dictSize;
0000606A E3B0 2068 0004          00000068   9287          LG    11,104(0,2) ; offset of dictSize in LZ4F_dctx_s
                                            9288 * ***                   int decodedSize;
                                            9289 * ***                   ((dstPtr != ((void *)0)) ? (void)0 : __assert(\
                                            9290 * __func__, "C:\\asgkafka\\librdkafka\\src\\lz4frame.c", 1658, "dstPtr\
                                            9291 *  != NULL"));
00006070 B902 00F4                          9292          LTGR  15,4
00006074 4770 C490               000060B4   9293          BNE   @L312
00006078                                    9294 @L311    DS    0H
                                                                                                                           Page  187 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006078 E3F0 C074 0004          00005C98   9295          LG    15,@lit_776_335
0000607E 41F0 F0E6               000000E6   9296          LA    15,230(0,15)
00006082 E3F0 D0B8 0024          000000B8   9297          STG   15,184(0,13)
00006088 E3F0 C0A4 0004          00005CC8   9298          LG    15,@lit_776_351
0000608E 4110 F022               00000022   9299          LA    1,34(0,15)
00006092 E310 D0C0 0024          000000C0   9300          STG   1,192(0,13)
00006098 E548 D0C8 067A          000000C8   9301          MVGHI 200(13),1658
0000609E 41F0 F0EE               000000EE   9302          LA    15,238(0,15)
000060A2 E3F0 D0D0 0024          000000D0   9303          STG   15,208(0,13)
000060A8 4110 D0B8               000000B8   9304          LA    1,184(0,13)
000060AC E3F0 C09C 0004          00005CC0   9305          LG    15,@lit_776_352 ; __assert
000060B2                                    9306 @@gen_label603 DS    0H
000060B2 05EF                               9307          BALR  14,15
000060B4                                    9308 @@gen_label604 DS    0H
000060B4                                    9309 @L312    DS    0H
                                            9310 * ***                   if (dict && dictSize > 1 *(1<<30)) {
000060B4 B902 00F9                          9311          LTGR  15,9
000060B8 4780 C4B2               000060D6   9312          BZ    @L313
000060BC C2BE 4000 0000                     9313          CLGFI 11,X'40000000'
000060C2 47D0 C4B2               000060D6   9314          BNH   @L313
                                            9315 * ***
                                            9316 * ***                       dict += dictSize - 64 *(1<<10);
000060C6 C2B4 0001 0000                     9317          SLGFI 11,X'00010000'
000060CC 419B 9000               00000000   9318          LA    9,0(11,9)
                                            9319 * ***                       dictSize = 64 *(1<<10);
000060D0 C0BF 0001 0000                     9320          LLILF 11,X'00010000' ; 65536
                                            9321 * ***                   }
000060D6                                    9322 @L313    DS    0H
                                            9323 * ***
                                            9324 * ***                   decodedSize = LZ4_decompress_safe_usingDict(
                                            9325 * ***                           (const char*)selectedIn, (char*)dstPtr\
                                            9326 * ,
                                            9327 * ***                           (int)dctx->tmpInTarget, (int)dctx->max\
                                            9328 * BlockSize,
                                            9329 * ***                           dict, (int)dictSize);
000060D6 E360 D0B8 0024          000000B8   9330          STG   6,184(0,13)
000060DC E340 D0C0 0024          000000C0   9331          STG   4,192(0,13)
000060E2 E3F0 2054 0014          00000054   9332          LGF   15,84(0,2)
000060E8 E3F0 D0C8 0024          000000C8   9333          STG   15,200(0,13)
000060EE E3F0 2034 0014          00000034   9334          LGF   15,52(0,2)
000060F4 E3F0 D0D0 0024          000000D0   9335          STG   15,208(0,13)
000060FA E390 D0D8 0024          000000D8   9336          STG   9,216(0,13)
00006100 B914 00FB                          9337          LGFR  15,11
00006104 E3F0 D0E0 0024          000000E0   9338          STG   15,224(0,13)
0000610A 4110 D0B8               000000B8   9339          LA    1,184(0,13)
0000610E E3F0 C0B4 0004          00005CD8   9340          LG    15,@lit_776_360 ; LZ4_decompress_safe_usingDict
00006114                                    9341 @@gen_label607 DS    0H
00006114 05EF                               9342          BALR  14,15
00006116                                    9343 @@gen_label608 DS    0H
00006116 129F                               9344          LTR   9,15
                                            9345 * ***                   if (decodedSize < 0) return err0r(LZ4F_ERROR_G\
                                            9346 * ENERIC);
                                                                                                                           Page  188 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006118 47B0 C514               00006138   9347          BNL   @L314
0000611C E548 D0B8 0001          000000B8   9348          MVGHI 184(13),1
00006122 4110 D0B8               000000B8   9349          LA    1,184(0,13)
00006126 E3F0 C094 0004          00005CB8   9350          LG    15,@lit_776_344 ; err0r
0000612C                                    9351 @@gen_label610 DS    0H
0000612C 05EF                               9352          BALR  14,15
0000612E                                    9353 @@gen_label611 DS    0H
0000612E E3C0 C06C 001A          00005C90   9354          ALGF  12,@lit_region_diff_776_2_3
                                            9355          DROP  12
                        0000650A            9356          USING @REGION_776_3,12
00006134 47F0 C620               00006B2A   9357          B     @ret_lab_776
                                            9358          DROP  12
                        00005C24            9359          USING @REGION_776_2,12
00006138                                    9360 @L314    DS    0H
                                            9361 * ***                   if (dctx->frameInfo.contentChecksumFlag)
00006138 E3F0 2008 0012          00000008   9362          LT    15,8(0,2)   ; offset of contentChecksumFlag in 0000027
0000613E 4780 C544               00006168   9363          BZ    @L315
                                            9364 * ***                       XXH32_update(&(dctx->xxh), dstPtr, (size_t\
                                            9365 * )decodedSize);
00006142 41F0 2088               00000088   9366          LA    15,136(0,2)
00006146 E3F0 D0B8 0024          000000B8   9367          STG   15,184(0,13)
0000614C E340 D0C0 0024          000000C0   9368          STG   4,192(0,13)
00006152 B914 00F9                          9369          LGFR  15,9
00006156 E3F0 D0C8 0024          000000C8   9370          STG   15,200(0,13)
0000615C 4110 D0B8               000000B8   9371          LA    1,184(0,13)
00006160 E3F0 C0BC 0004          00005CE0   9372          LG    15,@lit_776_362 ; XXH32_update
00006166                                    9373 @@gen_label613 DS    0H
00006166 05EF                               9374          BALR  14,15
00006168                                    9375 @@gen_label614 DS    0H
00006168                                    9376 @L315    DS    0H
                                            9377 * ***                   if (dctx->frameInfo.contentSize)
00006168 E3F0 2010 0002          00000010   9378          LTG   15,16(0,2)  ; offset of contentSize in 0000027
0000616E 4780 C562               00006186   9379          BZ    @L316
                                            9380 * ***                       dctx->frameRemainingSize -= (size_t)decode\
                                            9381 * dSize;
00006172 E3F0 2028 0004          00000028   9382          LG    15,40(0,2)
00006178 B914 0019                          9383          LGFR  1,9
0000617C B90B 00F1                          9384          SLGR  15,1
00006180 E3F0 2028 0024          00000028   9385          STG   15,40(0,2)
00006186                                    9386 @L316    DS    0H
                                            9387 * ***
                                            9388 * ***
                                            9389 * ***                   if (dctx->frameInfo.blockMode==LZ4F_blockLinke\
                                            9390 * d) {
00006186 E55C 2004 0000          00000004   9391          CHSI  4(2),0
0000618C 4770 C59A               000061BE   9392          BNE   @L317
                                            9393 * ***                       LZ4F_updateDict(dctx, dstPtr, (size_t)deco\
                                            9394 * dedSize, dstStart, 0);
00006190 E320 D0B8 0024          000000B8   9395          STG   2,184(0,13)
00006196 E340 D0C0 0024          000000C0   9396          STG   4,192(0,13)
0000619C B914 00F9                          9397          LGFR  15,9
000061A0 E3F0 D0C8 0024          000000C8   9398          STG   15,200(0,13)
                                                                                                                           Page  189 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000061A6 E3A0 D0D0 0024          000000D0   9399          STG   10,208(0,13)
000061AC D707 D0D8 D0D8 000000D8 000000D8   9400          XC    216(8,13),216(13)
000061B2 4110 D0B8               000000B8   9401          LA    1,184(0,13)
000061B6 E3F0 C064 0004          00005C88   9402          LG    15,@lit_776_334 ; LZ4F_updateDict
000061BC                                    9403 @@gen_label617 DS    0H
000061BC 05EF                               9404          BALR  14,15
000061BE                                    9405 @@gen_label618 DS    0H
                                            9406 * ***                   }
000061BE                                    9407 @L317    DS    0H
                                            9408 * ***
                                            9409 * ***                   dstPtr += decodedSize;
000061BE B914 00F9                          9410          LGFR  15,9
000061C2 414F 4000               00000000   9411          LA    4,0(15,4)
                                            9412 * ***                   dctx->dStage = dstage_getBlockHeader;
000061C6 E54C 2024 0003          00000024   9413          MVHI  36(2),3     ; offset of dStage in LZ4F_dctx_s
                                            9414 * ***                   break;
000061CC E3C0 C06C 001A          00005C90   9415          ALGF  12,@lit_region_diff_776_2_3
                                            9416          DROP  12
                        0000650A            9417          USING @REGION_776_3,12
000061D2 47F0 C40E               00006918   9418          B     @L241
                                            9419          DROP  12
                        00005C24            9420          USING @REGION_776_2,12
                                            9421 * ***               }
000061D6                                    9422 @L310    DS    0H
                                            9423 * ***
                                            9424 * ***
                                            9425 * ***
                                            9426 * ***               if (dctx->frameInfo.blockMode == LZ4F_blockLinked)\
                                            9427 *  {
000061D6 E55C 2004 0000          00000004   9428          CHSI  4(2),0
000061DC 4770 C66A               0000628E   9429          BNE   @L318
                                            9430 * ***                   if (dctx->dict == dctx->tmpOutBuffer) {
000061E0 E3F0 2060 0004          00000060   9431          LG    15,96(0,2)  ; offset of dict in LZ4F_dctx_s
000061E6 E310 2058 0004          00000058   9432          LG    1,88(0,2)   ; offset of tmpOutBuffer in LZ4F_dctx_s
000061EC B920 00F1                          9433          CGR   15,1
000061F0 4770 C63A               0000625E   9434          BNE   @L319
                                            9435 * ***                       if (dctx->dictSize > 128 *(1<<10)) {
000061F4 E3F0 2068 0004          00000068   9436          LG    15,104(0,2)
000061FA C2FE 0002 0000                     9437          CLGFI 15,X'00020000'
00006200 47D0 C620               00006244   9438          BNH   @L320
                                            9439 * ***                           __memcpy(dctx->tmpOutBuffer,dctx->dict\
                                            9440 *  + dctx->dictSize - 64 *(1<<10),64 *(1<<10));
00006204 E310 2060 0004          00000060   9441          LG    1,96(0,2)   ; offset of dict in LZ4F_dctx_s
0000620A E3F0 2068 0004          00000068   9442          LG    15,104(0,2) ; offset of dictSize in LZ4F_dctx_s
00006210 E3F0 C0C4 001B          00005CE8   9443          SLGF  15,@lit_776_364
00006216 411F 1000               00000000   9444          LA    1,0(15,1)
0000621A E3F0 2058 0004          00000058   9445          LG    15,88(0,2)
00006220 A799 0100               00000100   9446          LGHI  9,256       ; 256
00006224                                    9447 @@gen_label622 DS 0H
00006224 D2FF F000 1000 00000000 00000000   9448          MVC   0(256,15),0(1)
0000622A 41F0 F100               00000100   9449          LA    15,256(0,15)
0000622E 4110 1100               00000100   9450          LA    1,256(0,1)
                                                                                                                           Page  190 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006232 E390 C600 0046          00006224   9451          BCTG  9,@@gen_label622
                                            9452 * ***                           dctx->dictSize = 64 *(1<<10);
00006238 C0FF 0001 0000                     9453          LLILF 15,X'00010000' ; 65536
0000623E E3F0 2068 0024          00000068   9454          STG   15,104(0,2) ; offset of dictSize in LZ4F_dctx_s
                                            9455 * ***                       }
00006244                                    9456 @L320    DS    0H
                                            9457 * ***                       dctx->tmpOut = dctx->tmpOutBuffer + dctx->\
                                            9458 * dictSize;
00006244 E3F0 2058 0004          00000058   9459          LG    15,88(0,2)  ; offset of tmpOutBuffer in LZ4F_dctx_s
0000624A E310 2068 0004          00000068   9460          LG    1,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
00006250 41F1 F000               00000000   9461          LA    15,0(1,15)
00006254 E3F0 2070 0024          00000070   9462          STG   15,112(0,2) ; offset of tmpOut in LZ4F_dctx_s
                                            9463 * ***                   } else {
0000625A 47F0 C66A               0000628E   9464          B     @L318
0000625E                                    9465 @L319    DS    0H
                                            9466 * ***                       size_t const reservedDictSpace = ( (dctx->\
                                            9467 * dictSize) < (64 *(1<<10)) ? (dctx->dictSize) : (64 *(1<<10)) );
0000625E E3F0 2068 0004          00000068   9468          LG    15,104(0,2)
00006264 C2FE 0001 0000                     9469          CLGFI 15,X'00010000'
0000626A 47B0 C654               00006278   9470          BNL   @L322
0000626E E3F0 2068 0004          00000068   9471          LG    15,104(0,2) ; offset of dictSize in LZ4F_dctx_s
00006274 47F0 C65A               0000627E   9472          B     @L323
00006278                                    9473 @L322    DS    0H
00006278 C0FF 0001 0000                     9474          LLILF 15,X'00010000' ; 65536
0000627E                                    9475 @L323    DS    0H
                                            9476 * ***                       dctx->tmpOut = dctx->tmpOutBuffer + reserv\
                                            9477 * edDictSpace;
0000627E E310 2058 0004          00000058   9478          LG    1,88(0,2)   ; offset of tmpOutBuffer in LZ4F_dctx_s
00006284 41FF 1000               00000000   9479          LA    15,0(15,1)
00006288 E3F0 2070 0024          00000070   9480          STG   15,112(0,2) ; offset of tmpOut in LZ4F_dctx_s
                                            9481 * ***               }   }
0000628E                                    9482 @L321    DS    0H
0000628E                                    9483 @L318    DS    0H
                                            9484 * ***
                                            9485 * ***
                                            9486 * ***               {   const char* dict = (const char*)dctx->dict;
0000628E E3F0 2060 0004          00000060   9487          LG    15,96(0,2)  ; offset of dict in LZ4F_dctx_s
                                            9488 * ***                   size_t dictSize = dctx->dictSize;
00006294 E310 2068 0004          00000068   9489          LG    1,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
                                            9490 * ***                   int decodedSize;
                                            9491 * ***                   if (dict && dictSize > 1 *(1<<30)) {
0000629A B902 009F                          9492          LTGR  9,15
0000629E 4780 C698               000062BC   9493          BZ    @L324
000062A2 C21E 4000 0000                     9494          CLGFI 1,X'40000000'
000062A8 47D0 C698               000062BC   9495          BNH   @L324
                                            9496 * ***
                                            9497 * ***                       dict += dictSize - 64 *(1<<10);
000062AC C214 0001 0000                     9498          SLGFI 1,X'00010000'
000062B2 41F1 F000               00000000   9499          LA    15,0(1,15)
                                            9500 * ***                       dictSize = 64 *(1<<10);
000062B6 C01F 0001 0000                     9501          LLILF 1,X'00010000' ; 65536
                                            9502 * ***                   }
                                                                                                                           Page  191 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000062BC                                    9503 @L324    DS    0H
                                            9504 * ***                   decodedSize = LZ4_decompress_safe_usingDict(
                                            9505 * ***                           (const char*)selectedIn, (char*)dctx->\
                                            9506 * tmpOut,
                                            9507 * ***                           (int)dctx->tmpInTarget, (int)dctx->max\
                                            9508 * BlockSize,
                                            9509 * ***                           dict, (int)dictSize);
000062BC E360 D0B8 0024          000000B8   9510          STG   6,184(0,13)
000062C2 E390 2070 0004          00000070   9511          LG    9,112(0,2)
000062C8 E390 D0C0 0024          000000C0   9512          STG   9,192(0,13)
000062CE E390 2054 0014          00000054   9513          LGF   9,84(0,2)
000062D4 E390 D0C8 0024          000000C8   9514          STG   9,200(0,13)
000062DA E390 2034 0014          00000034   9515          LGF   9,52(0,2)
000062E0 E390 D0D0 0024          000000D0   9516          STG   9,208(0,13)
000062E6 E3F0 D0D8 0024          000000D8   9517          STG   15,216(0,13)
000062EC B914 00F1                          9518          LGFR  15,1
000062F0 E3F0 D0E0 0024          000000E0   9519          STG   15,224(0,13)
000062F6 4110 D0B8               000000B8   9520          LA    1,184(0,13)
000062FA E3F0 C0B4 0004          00005CD8   9521          LG    15,@lit_776_360 ; LZ4_decompress_safe_usingDict
00006300                                    9522 @@gen_label626 DS    0H
00006300 05EF                               9523          BALR  14,15
00006302                                    9524 @@gen_label627 DS    0H
00006302 129F                               9525          LTR   9,15
                                            9526 * ***                   if (decodedSize < 0)
00006304 47B0 C700               00006324   9527          BNL   @L325
                                            9528 * ***                       return err0r(LZ4F_ERROR_decompressionFaile\
                                            9529 * d);
00006308 E548 D0B8 0010          000000B8   9530          MVGHI 184(13),16
0000630E 4110 D0B8               000000B8   9531          LA    1,184(0,13)
00006312 E3F0 C094 0004          00005CB8   9532          LG    15,@lit_776_344 ; err0r
00006318                                    9533 @@gen_label629 DS    0H
00006318 05EF                               9534          BALR  14,15
0000631A                                    9535 @@gen_label630 DS    0H
0000631A E3C0 C06C 001A          00005C90   9536          ALGF  12,@lit_region_diff_776_2_3
                                            9537          DROP  12
                        0000650A            9538          USING @REGION_776_3,12
00006320 47F0 C620               00006B2A   9539          B     @ret_lab_776
                                            9540          DROP  12
                        00005C24            9541          USING @REGION_776_2,12
00006324                                    9542 @L325    DS    0H
                                            9543 * ***                   if (dctx->frameInfo.contentChecksumFlag)
00006324 E3F0 2008 0012          00000008   9544          LT    15,8(0,2)   ; offset of contentChecksumFlag in 0000027
0000632A 4780 C736               0000635A   9545          BZ    @L326
                                            9546 * ***                       XXH32_update(&(dctx->xxh), dctx->tmpOut, (\
                                            9547 * size_t)decodedSize);
0000632E 41F0 2088               00000088   9548          LA    15,136(0,2)
00006332 E3F0 D0B8 0024          000000B8   9549          STG   15,184(0,13)
00006338 E3F0 2070 0004          00000070   9550          LG    15,112(0,2)
0000633E E3F0 D0C0 0024          000000C0   9551          STG   15,192(0,13)
00006344 B914 00F9                          9552          LGFR  15,9
00006348 E3F0 D0C8 0024          000000C8   9553          STG   15,200(0,13)
0000634E 4110 D0B8               000000B8   9554          LA    1,184(0,13)
                                                                                                                           Page  192 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006352 E3F0 C0BC 0004          00005CE0   9555          LG    15,@lit_776_362 ; XXH32_update
00006358                                    9556 @@gen_label632 DS    0H
00006358 05EF                               9557          BALR  14,15
0000635A                                    9558 @@gen_label633 DS    0H
0000635A                                    9559 @L326    DS    0H
                                            9560 * ***                   if (dctx->frameInfo.contentSize)
0000635A E3F0 2010 0002          00000010   9561          LTG   15,16(0,2)  ; offset of contentSize in 0000027
00006360 4780 C754               00006378   9562          BZ    @L327
                                            9563 * ***                       dctx->frameRemainingSize -= (size_t)decode\
                                            9564 * dSize;
00006364 E3F0 2028 0004          00000028   9565          LG    15,40(0,2)
0000636A B914 0019                          9566          LGFR  1,9
0000636E B90B 00F1                          9567          SLGR  15,1
00006372 E3F0 2028 0024          00000028   9568          STG   15,40(0,2)
00006378                                    9569 @L327    DS    0H
                                            9570 * ***                   dctx->tmpOutSize = (size_t)decodedSize;
00006378 B914 00F9                          9571          LGFR  15,9
0000637C E3F0 2078 0024          00000078   9572          STG   15,120(0,2) ; offset of tmpOutSize in LZ4F_dctx_s
                                            9573 * ***                   dctx->tmpOutStart = 0;
00006382 E548 2080 0000          00000080   9574          MVGHI 128(2),0    ; offset of tmpOutStart in LZ4F_dctx_s
                                            9575 * ***                   dctx->dStage = dstage_flushOut;
00006388 E54C 2024 0009          00000024   9576          MVHI  36(2),9     ; offset of dStage in LZ4F_dctx_s
                                            9577 * ***               }
                                            9578 * ***
                                            9579 * ***
                                            9580 * ***           case dstage_flushOut:
0000638E                                    9581 @L328    DS    0H
                                            9582 * ***               {};
                                            9583 * ***               if (dstPtr != ((void *)0)) {
0000638E B902 00F4                          9584          LTGR  15,4
00006392 4780 C838               0000645C   9585          BE    @L329
                                            9586 * ***                   size_t const sizeToCopy = ( (dctx->tmpOutSize \
                                            9587 * - dctx->tmpOutStart) < ((size_t)(dstEnd-dstPtr)) ? (dctx->tmpOutSize\
                                            9588 *  - dctx->tmpOutStart) : ((size_t)(dstEnd-dstPtr)) );
00006396 E3F0 2078 0004          00000078   9589          LG    15,120(0,2) ; offset of tmpOutSize in LZ4F_dctx_s
0000639C E3F0 2080 000B          00000080   9590          SLG   15,128(0,2)
000063A2 E310 D108 0004          00000108   9591          LG    1,264(0,13) ; spill
000063A8 B909 0014                          9592          SGR   1,4
000063AC B921 00F1                          9593          CLGR  15,1
000063B0 47B0 C7A0               000063C4   9594          BNL   @L330
000063B4 E3B0 2078 0004          00000078   9595          LG    11,120(0,2) ; offset of tmpOutSize in LZ4F_dctx_s
000063BA E3B0 2080 000B          00000080   9596          SLG   11,128(0,2)
000063C0 47F0 C7AA               000063CE   9597          B     @L331
000063C4                                    9598 @L330    DS    0H
000063C4 E3B0 D108 0004          00000108   9599          LG    11,264(0,13) ; spill
000063CA B909 00B4                          9600          SGR   11,4
000063CE                                    9601 @L331    DS    0H
                                            9602 * ***                   __memcpy(dstPtr,dctx->tmpOut + dctx->tmpOutSta\
                                            9603 * rt,sizeToCopy);
000063CE E3F0 2070 0004          00000070   9604          LG    15,112(0,2) ; offset of tmpOut in LZ4F_dctx_s
000063D4 E310 2080 0004          00000080   9605          LG    1,128(0,2)  ; offset of tmpOutStart in LZ4F_dctx_s
000063DA 4111 F000               00000000   9606          LA    1,0(1,15)
                                                                                                                           Page  193 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000063DE B904 00E4                          9607          LGR   14,4
000063E2 B902 00FB                          9608          LTGR  15,11
000063E6 4780 C7F0               00006414   9609          BZ    @@gen_label639
000063EA A7FB FFFF               0000FFFF   9610          AGHI  15,-1
000063EE EB9F 0008 000A          00000008   9611          SRAG  9,15,8(0)
000063F4 B902 0099                          9612          LTGR  9,9
000063F8 4780 C7EC               00006410   9613          BZ    @@gen_label638
000063FC                                    9614 @@gen_label637 DS 0H
000063FC D2FF E000 1000 00000000 00000000   9615          MVC   0(256,14),0(1)
00006402 41E0 E100               00000100   9616          LA    14,256(0,14)
00006406 4110 1100               00000100   9617          LA    1,256(0,1)
0000640A E390 C7D8 0046          000063FC   9618          BCTG  9,@@gen_label637
00006410                                    9619 @@gen_label638 DS 0H
00006410 44F0 C07C               00005CA0   9620          EX    15,@lit_776_340
00006414                                    9621 @@gen_label639 DS 0H
                                            9622 * ***
                                            9623 * ***
                                            9624 * ***                   if (dctx->frameInfo.blockMode == LZ4F_blockLin\
                                            9625 * ked)
00006414 E55C 2004 0000          00000004   9626          CHSI  4(2),0
0000641A 4770 C824               00006448   9627          BNE   @L332
                                            9628 * ***                       LZ4F_updateDict(dctx, dstPtr, sizeToCopy, \
                                            9629 * dstStart, 1 );
0000641E E320 D0B8 0024          000000B8   9630          STG   2,184(0,13)
00006424 E340 D0C0 0024          000000C0   9631          STG   4,192(0,13)
0000642A E3B0 D0C8 0024          000000C8   9632          STG   11,200(0,13)
00006430 E3A0 D0D0 0024          000000D0   9633          STG   10,208(0,13)
00006436 E548 D0D8 0001          000000D8   9634          MVGHI 216(13),1
0000643C 4110 D0B8               000000B8   9635          LA    1,184(0,13)
00006440 E3F0 C064 0004          00005C88   9636          LG    15,@lit_776_334 ; LZ4F_updateDict
00006446                                    9637 @@gen_label641 DS    0H
00006446 05EF                               9638          BALR  14,15
00006448                                    9639 @@gen_label642 DS    0H
00006448                                    9640 @L332    DS    0H
                                            9641 * ***
                                            9642 * ***                   dctx->tmpOutStart += sizeToCopy;
00006448 B904 00FB                          9643          LGR   15,11
0000644C E3F0 2080 000A          00000080   9644          ALG   15,128(0,2)
00006452 E3F0 2080 0024          00000080   9645          STG   15,128(0,2)
                                            9646 * ***                   dstPtr += sizeToCopy;
00006458 414B 4000               00000000   9647          LA    4,0(11,4)
                                            9648 * ***               }
0000645C                                    9649 @L329    DS    0H
                                            9650 * ***               if (dctx->tmpOutStart == dctx->tmpOutSize) {
0000645C E3F0 2080 0004          00000080   9651          LG    15,128(0,2) ; offset of tmpOutStart in LZ4F_dctx_s
00006462 E3F0 2078 0021          00000078   9652          CLG   15,120(0,2)
00006468 4770 C858               0000647C   9653          BNE   @L333
                                            9654 * ***                   dctx->dStage = dstage_getBlockHeader;
0000646C E54C 2024 0003          00000024   9655          MVHI  36(2),3     ; offset of dStage in LZ4F_dctx_s
                                            9656 * ***                   break;
00006472 E3C0 C06C 001A          00005C90   9657          ALGF  12,@lit_region_diff_776_2_3
                                            9658          DROP  12
                                                                                                                           Page  194 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        0000650A            9659          USING @REGION_776_3,12
00006478 47F0 C40E               00006918   9660          B     @L241
                                            9661          DROP  12
                        00005C24            9662          USING @REGION_776_2,12
                                            9663 * ***               }
0000647C                                    9664 @L333    DS    0H
                                            9665 * ***
                                            9666 * ***               doAnotherStage = 0;
0000647C A778 0000               00000000   9667          LHI   7,0         ; 0
                                            9668 * ***               nextSrcSizeHint = BHSize;
00006480 E3F0 C074 0004          00005C98   9669          LG    15,@lit_776_335
00006486 E380 F058 0004          00000058   9670          LG    8,88(0,15)  ; BHSize
                                            9671 * ***               break;
0000648C E3C0 C06C 001A          00005C90   9672          ALGF  12,@lit_region_diff_776_2_3
                                            9673          DROP  12
                        0000650A            9674          USING @REGION_776_3,12
00006492 47F0 C40E               00006918   9675          B     @L241
                                            9676          DROP  12
                        00005C24            9677          USING @REGION_776_2,12
                                            9678 * ***
                                            9679 * ***           case dstage_getSuffix:
00006496                                    9680 @L334    DS    0H
                                            9681 * ***               if (dctx->frameRemainingSize)
00006496 E3F0 2028 0002          00000028   9682          LTG   15,40(0,2)  ; offset of frameRemainingSize in LZ4F_dctx_*
                                                                s
0000649C 4780 C898               000064BC   9683          BZ    @L335
                                            9684 * ***                   return err0r(LZ4F_ERROR_frameSize_wrong);
000064A0 E548 D0B8 000E          000000B8   9685          MVGHI 184(13),14
000064A6 4110 D0B8               000000B8   9686          LA    1,184(0,13)
000064AA E3F0 C094 0004          00005CB8   9687          LG    15,@lit_776_344 ; err0r
000064B0                                    9688 @@gen_label645 DS    0H
000064B0 05EF                               9689          BALR  14,15
000064B2                                    9690 @@gen_label646 DS    0H
000064B2 E3C0 C06C 001A          00005C90   9691          ALGF  12,@lit_region_diff_776_2_3
                                            9692          DROP  12
                        0000650A            9693          USING @REGION_776_3,12
000064B8 47F0 C620               00006B2A   9694          B     @ret_lab_776
                                            9695          DROP  12
                        00005C24            9696          USING @REGION_776_2,12
000064BC                                    9697 @L335    DS    0H
                                            9698 * ***               if (!dctx->frameInfo.contentChecksumFlag) {
000064BC E3F0 2008 0012          00000008   9699          LT    15,8(0,2)   ; offset of contentChecksumFlag in 0000027
000064C2 4770 C8C6               000064EA   9700          BNZ   @L336
                                            9701 * ***                   nextSrcSizeHint = 0;
000064C6 A789 0000               00000000   9702          LGHI  8,0         ; 0
                                            9703 * ***                   LZ4F_resetDecompressionContext(dctx);
000064CA E320 D0B8 0024          000000B8   9704          STG   2,184(0,13)
000064D0 4110 D0B8               000000B8   9705          LA    1,184(0,13)
000064D4 E3F0 C0CC 0004          00005CF0   9706          LG    15,@lit_776_378 ; LZ4F_resetDecompressionContext
000064DA                                    9707 @@gen_label648 DS    0H
000064DA 05EF                               9708          BALR  14,15
000064DC                                    9709 @@gen_label649 DS    0H
                                                                                                                           Page  195 
  Active Usings: @REGION_776_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9710 * ***                   doAnotherStage = 0;
000064DC A778 0000               00000000   9711          LHI   7,0         ; 0
                                            9712 * ***                   break;
000064E0 E3C0 C06C 001A          00005C90   9713          ALGF  12,@lit_region_diff_776_2_3
                                            9714          DROP  12
                        0000650A            9715          USING @REGION_776_3,12
000064E6 47F0 C40E               00006918   9716          B     @L241
                                            9717          DROP  12
                        00005C24            9718          USING @REGION_776_2,12
                                            9719 * ***               }
000064EA                                    9720 @L336    DS    0H
                                            9721 * ***               if ((srcEnd - srcPtr) < 4) {
000064EA B904 00F5                          9722          LGR   15,5
000064EE B909 00F3                          9723          SGR   15,3
000064F2 A7FF 0004               00000004   9724          CGHI  15,4
000064F6 4740 C8E0               00006504   9725          BL    *+14  Around region break
000064FA E3C0 C06C 001A          00005C90   9726          ALGF  12,@lit_region_diff_776_2_3
                                            9727          DROP  12
                        0000650A            9728          USING @REGION_776_3,12
00006500 47F0 C06A               00006574   9729          B     @L337
                                            9730          DROP  12
                        00005C24            9731          USING @REGION_776_2,12
00006504 E3C0 C06C 001A          00005C90   9732          ALGF  12,@lit_region_diff_776_2_3
0000650A                                    9733 @REGION_776_3 DS 0H
                                            9734          DROP  12
                        0000650A            9735          USING @REGION_776_3,12
                                            9736 * ***                   dctx->tmpInSize = 0;
0000650A E548 2048 0000          00000048   9737          MVGHI 72(2),0     ; offset of tmpInSize in LZ4F_dctx_s
                                            9738 * ***                   dctx->dStage = dstage_storeSuffix;
00006510 E54C 2024 000B          00000024   9739          MVHI  36(2),11    ; offset of dStage in LZ4F_dctx_s
                                            9740 * ***               } else {
00006516 47F0 C072               0000657C   9741          B     @L338
00006520                                    9742          DS    0D
00006520 D200 7000 1000 00000000 00000000   9743 @lit_776_381          MVC 0(1,7),0(1)
00006526 0000
00006528 0000000000000440                   9744 @lit_776_384 DC AD($L$Z4$F_read$L$E32)
00006530 0000000000000000                   9745 @lit_776_385 DC AD($X$X$H32_digest)
00006538 0000000000000A60                   9746 @lit_776_386 DC AD(err0r)
00006540 0000000000004400                   9747 @lit_776_388 DC AD($L$Z4$F_reset$Decompression$Context)
00006548 D200 E000 1000 00000000 00000000   9748 @lit_776_390          MVC 0(1,14),0(1)
0000654E 0000
00006550 0000000000000000                   9749 @lit_776_400 DC AD(__assert)
00006558 0000000000006DDE                   9750 @lit_776_399 DC AD(@strings@)
00006560 0000000000006CE8                   9751 @lit_776_398 DC AD(@DATA)
00006568 D200 1000 7000 00000000 00000000   9752 @lit_776_401          MVC 0(1,1),0(7)
0000656E D200 6000 5000 00000000 00000000   9753 @lit_776_403          MVC 0(1,6),0(5)
00006574                                    9754 @L337    DS    0H
                                            9755 * ***                   selectedIn = srcPtr;
00006574 B904 0063                          9756          LGR   6,3         ; selectedIn
                                            9757 * ***                   srcPtr += 4;
00006578 4130 3004               00000004   9758          LA    3,4(0,3)
                                            9759 * ***               }
                                                                                                                           Page  196 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000657C                                    9760 @L338    DS    0H
                                            9761 * ***
                                            9762 * ***               if (dctx->dStage == dstage_storeSuffix)
0000657C E55C 2024 000B          00000024   9763          CHSI  36(2),11
00006582 4770 C114               0000661E   9764          BNE   @L339
                                            9765 * ***           case dstage_storeSuffix:
00006586                                    9766 @L340    DS    0H
                                            9767 * ***               {   size_t const remainingInput = (size_t)(srcEnd \
                                            9768 * - srcPtr);
00006586 B904 00F5                          9769          LGR   15,5
0000658A B909 00F3                          9770          SGR   15,3
                                            9771 * ***                   size_t const wantedData = 4 - dctx->tmpInSize;
0000658E A719 0004               00000004   9772          LGHI  1,4         ; 4
00006592 E310 2048 000B          00000048   9773          SLG   1,72(0,2)
                                            9774 * ***                   size_t const sizeToCopy = ( (wantedData) < (re\
                                            9775 * mainingInput) ? (wantedData) : (remainingInput) );
00006598 B921 001F                          9776          CLGR  1,15
0000659C 47B0 C09E               000065A8   9777          BNL   @L341
000065A0 B904 0091                          9778          LGR   9,1
000065A4 47F0 C0A2               000065AC   9779          B     @L342
000065A8                                    9780 @L341    DS    0H
000065A8 B904 009F                          9781          LGR   9,15
000065AC                                    9782 @L342    DS    0H
                                            9783 * ***                   __memcpy(dctx->tmpIn + dctx->tmpInSize,srcPtr,\
                                            9784 * sizeToCopy);
000065AC EB78 2040 0004          00000040   9785          LMG   7,8,64(2)   ; offset of tmpIn in LZ4F_dctx_s
000065B2 B904 0013                          9786          LGR   1,3
000065B6 4178 7000               00000000   9787          LA    7,0(8,7)
000065BA B902 00F9                          9788          LTGR  15,9
000065BE 4780 C0E2               000065EC   9789          BZ    @@gen_label655
000065C2 A7FB FFFF               0000FFFF   9790          AGHI  15,-1
000065C6 EB8F 0008 000A          00000008   9791          SRAG  8,15,8(0)
000065CC B902 0088                          9792          LTGR  8,8
000065D0 4780 C0DE               000065E8   9793          BZ    @@gen_label654
000065D4                                    9794 @@gen_label653 DS 0H
000065D4 D2FF 7000 1000 00000000 00000000   9795          MVC   0(256,7),0(1)
000065DA 4170 7100               00000100   9796          LA    7,256(0,7)
000065DE 4110 1100               00000100   9797          LA    1,256(0,1)
000065E2 E380 C0CA 0046          000065D4   9798          BCTG  8,@@gen_label653
000065E8                                    9799 @@gen_label654 DS 0H
000065E8 44F0 C016               00006520   9800          EX    15,@lit_776_381
000065EC                                    9801 @@gen_label655 DS 0H
                                            9802 * ***                   srcPtr += sizeToCopy;
000065EC 4139 3000               00000000   9803          LA    3,0(9,3)
                                            9804 * ***                   dctx->tmpInSize += sizeToCopy;
000065F0 E390 2048 000A          00000048   9805          ALG   9,72(0,2)
000065F6 E390 2048 0024          00000048   9806          STG   9,72(0,2)
                                            9807 * ***                   if (dctx->tmpInSize < 4) {
000065FC E559 2048 0004          00000048   9808          CLGHSI 72(2),4
00006602 47B0 C10E               00006618   9809          BNL   @L343
                                            9810 * ***                       nextSrcSizeHint = 4 - dctx->tmpInSize;
00006606 A789 0004               00000004   9811          LGHI  8,4         ; 4
                                                                                                                           Page  197 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000660A E380 2048 000B          00000048   9812          SLG   8,72(0,2)
                                            9813 * ***                       doAnotherStage=0;
00006610 A778 0000               00000000   9814          LHI   7,0         ; 0
                                            9815 * ***                       break;
00006614 47F0 C40E               00006918   9816          B     @L241
                                            9817 * ***                   }
00006618                                    9818 @L343    DS    0H
                                            9819 * ***                   selectedIn = dctx->tmpIn;
00006618 E360 2040 0004          00000040   9820          LG    6,64(0,2)   ; offset of tmpIn in LZ4F_dctx_s
                                            9821 * ***               }
                                            9822 * ***
                                            9823 * ***
                                            9824 * ***               {   U32 const readCRC = LZ4F_readLE32(selectedIn);
0000661E                                    9825 @L339    DS    0H
0000661E E360 D0B8 0024          000000B8   9826          STG   6,184(0,13)
00006624 4110 D0B8               000000B8   9827          LA    1,184(0,13)
00006628 E3F0 C01E 0004          00006528   9828          LG    15,@lit_776_384 ; LZ4F_readLE32
0000662E                                    9829 @@gen_label657 DS    0H
0000662E 05EF                               9830          BALR  14,15
00006630                                    9831 @@gen_label658 DS    0H
00006630 187F                               9832          LR    7,15
                                            9833 * ***                   U32 const resultCRC = XXH32_digest(&(dctx->xxh\
                                            9834 * ));
00006632 41F0 2088               00000088   9835          LA    15,136(0,2)
00006636 E3F0 D0B8 0024          000000B8   9836          STG   15,184(0,13)
0000663C 4110 D0B8               000000B8   9837          LA    1,184(0,13)
00006640 E3F0 C026 0004          00006530   9838          LG    15,@lit_776_385 ; XXH32_digest
00006646                                    9839 @@gen_label659 DS    0H
00006646 05EF                               9840          BALR  14,15
00006648                                    9841 @@gen_label660 DS    0H
                                            9842 * ***
                                            9843 * ***                   if (readCRC != resultCRC)
00006648 157F                               9844          CLR   7,15
0000664A 4780 C15A               00006664   9845          BE    @L344
                                            9846 * ***                       return err0r(LZ4F_ERROR_contentChecksum_in\
                                            9847 * valid);
0000664E E548 D0B8 0012          000000B8   9848          MVGHI 184(13),18
00006654 4110 D0B8               000000B8   9849          LA    1,184(0,13)
00006658 E3F0 C02E 0004          00006538   9850          LG    15,@lit_776_386 ; err0r
0000665E                                    9851 @@gen_label662 DS    0H
0000665E 05EF                               9852          BALR  14,15
00006660                                    9853 @@gen_label663 DS    0H
00006660 47F0 C620               00006B2A   9854          B     @ret_lab_776
00006664                                    9855 @L344    DS    0H
                                            9856 * ***
                                            9857 * ***
                                            9858 * ***
                                            9859 * ***
                                            9860 * ***                   nextSrcSizeHint = 0;
00006664 A789 0000               00000000   9861          LGHI  8,0         ; 0
                                            9862 * ***                   LZ4F_resetDecompressionContext(dctx);
00006668 E320 D0B8 0024          000000B8   9863          STG   2,184(0,13)
                                                                                                                           Page  198 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000666E 4110 D0B8               000000B8   9864          LA    1,184(0,13)
00006672 E3F0 C036 0004          00006540   9865          LG    15,@lit_776_388 ; LZ4F_resetDecompressionContext
00006678                                    9866 @@gen_label664 DS    0H
00006678 05EF                               9867          BALR  14,15
0000667A                                    9868 @@gen_label665 DS    0H
                                            9869 * ***                   doAnotherStage = 0;
0000667A A778 0000               00000000   9870          LHI   7,0         ; 0
                                            9871 * ***                   break;
0000667E 47F0 C40E               00006918   9872          B     @L241
                                            9873 * ***               }
                                            9874 * ***
                                            9875 * ***           case dstage_getSFrameSize:
00006682                                    9876 @L345    DS    0H
                                            9877 * ***               if ((srcEnd - srcPtr) >= 4) {
00006682 B904 00F5                          9878          LGR   15,5
00006686 B909 00F3                          9879          SGR   15,3
0000668A A7FF 0004               00000004   9880          CGHI  15,4
0000668E 4740 C194               0000669E   9881          BL    @L346
                                            9882 * ***                   selectedIn = srcPtr;
00006692 B904 0063                          9883          LGR   6,3         ; selectedIn
                                            9884 * ***                   srcPtr += 4;
00006696 4130 3004               00000004   9885          LA    3,4(0,3)
                                            9886 * ***               } else {
0000669A 47F0 C1A6               000066B0   9887          B     @L347
0000669E                                    9888 @L346    DS    0H
                                            9889 * ***
                                            9890 * ***                   dctx->tmpInSize = 4;
0000669E E548 2048 0004          00000048   9891          MVGHI 72(2),4     ; offset of tmpInSize in LZ4F_dctx_s
                                            9892 * ***                   dctx->tmpInTarget = 8;
000066A4 E548 2050 0008          00000050   9893          MVGHI 80(2),8     ; offset of tmpInTarget in LZ4F_dctx_s
                                            9894 * ***                   dctx->dStage = dstage_storeSFrameSize;
000066AA E54C 2024 000D          00000024   9895          MVHI  36(2),13    ; offset of dStage in LZ4F_dctx_s
                                            9896 * ***               }
000066B0                                    9897 @L347    DS    0H
                                            9898 * ***
                                            9899 * ***               if (dctx->dStage == dstage_storeSFrameSize)
000066B0 E55C 2024 000D          00000024   9900          CHSI  36(2),13
000066B6 4770 C25E               00006768   9901          BNE   @L348
                                            9902 * ***           case dstage_storeSFrameSize:
000066BA                                    9903 @L349    DS    0H
                                            9904 * ***               {   size_t const sizeToCopy = ( (dctx->tmpInTarget\
                                            9905 *  - dctx->tmpInSize) < ((size_t)(srcEnd - srcPtr)) ? (dctx->tmpInTarg\
                                            9906 * et - dctx->tmpInSize) : ((size_t)(srcEnd - srcPtr)) );
000066BA E3F0 2050 0004          00000050   9907          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
000066C0 E3F0 2048 000B          00000048   9908          SLG   15,72(0,2)
000066C6 B904 0015                          9909          LGR   1,5
000066CA B909 0013                          9910          SGR   1,3
000066CE B921 00F1                          9911          CLGR  15,1
000066D2 47B0 C1E0               000066EA   9912          BNL   @L350
000066D6 E3F0 2050 0004          00000050   9913          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
000066DC E3F0 2048 000B          00000048   9914          SLG   15,72(0,2)
000066E2 B904 00BF                          9915          LGR   11,15
                                                                                                                           Page  199 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000066E6 47F0 C1E8               000066F2   9916          B     @L351
000066EA                                    9917 @L350    DS    0H
000066EA B904 00B5                          9918          LGR   11,5
000066EE B909 00B3                          9919          SGR   11,3
000066F2                                    9920 @L351    DS    0H
                                            9921 * ***
                                            9922 * ***                   __memcpy(dctx->header + dctx->tmpInSize,srcPtr\
                                            9923 * ,sizeToCopy);
000066F2 E390 2048 0004          00000048   9924          LG    9,72(0,2)   ; offset of tmpInSize in LZ4F_dctx_s
000066F8 B904 0013                          9925          LGR   1,3
000066FC 41E9 20E8               000000E8   9926          LA    14,232(9,2)
00006700 B902 00FB                          9927          LTGR  15,11
00006704 4780 C228               00006732   9928          BZ    @@gen_label671
00006708 A7FB FFFF               0000FFFF   9929          AGHI  15,-1
0000670C EB9F 0008 000A          00000008   9930          SRAG  9,15,8(0)
00006712 B902 0099                          9931          LTGR  9,9
00006716 4780 C224               0000672E   9932          BZ    @@gen_label670
0000671A                                    9933 @@gen_label669 DS 0H
0000671A D2FF E000 1000 00000000 00000000   9934          MVC   0(256,14),0(1)
00006720 41E0 E100               00000100   9935          LA    14,256(0,14)
00006724 4110 1100               00000100   9936          LA    1,256(0,1)
00006728 E390 C210 0046          0000671A   9937          BCTG  9,@@gen_label669
0000672E                                    9938 @@gen_label670 DS 0H
0000672E 44F0 C03E               00006548   9939          EX    15,@lit_776_390
00006732                                    9940 @@gen_label671 DS 0H
                                            9941 * ***                   srcPtr += sizeToCopy;
00006732 413B 3000               00000000   9942          LA    3,0(11,3)
                                            9943 * ***                   dctx->tmpInSize += sizeToCopy;
00006736 E3B0 2048 000A          00000048   9944          ALG   11,72(0,2)
0000673C E3B0 2048 0024          00000048   9945          STG   11,72(0,2)
                                            9946 * ***                   if (dctx->tmpInSize < dctx->tmpInTarget) {
00006742 B904 00FB                          9947          LGR   15,11       ; offset of tmpInSize in LZ4F_dctx_s
00006746 E3F0 2050 0021          00000050   9948          CLG   15,80(0,2)
0000674C 47B0 C25A               00006764   9949          BNL   @L352
                                            9950 * ***
                                            9951 * ***                       nextSrcSizeHint = dctx->tmpInTarget - dctx\
                                            9952 * ->tmpInSize;
00006750 E380 2050 0004          00000050   9953          LG    8,80(0,2)   ; offset of tmpInTarget in LZ4F_dctx_s
00006756 E380 2048 000B          00000048   9954          SLG   8,72(0,2)
                                            9955 * ***                       doAnotherStage = 0;
0000675C A778 0000               00000000   9956          LHI   7,0         ; 0
                                            9957 * ***                       break;
00006760 47F0 C40E               00006918   9958          B     @L241
                                            9959 * ***                   }
00006764                                    9960 @L352    DS    0H
                                            9961 * ***                   selectedIn = dctx->header + 4;
00006764 4160 20EC               000000EC   9962          LA    6,236(0,2)
                                            9963 * ***               }
                                            9964 * ***
                                            9965 * ***
                                            9966 * ***               {   size_t const SFrameSize = LZ4F_readLE32(select\
                                            9967 * edIn);
                                                                                                                           Page  200 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006768                                    9968 @L348    DS    0H
00006768 E360 D0B8 0024          000000B8   9969          STG   6,184(0,13)
0000676E 4110 D0B8               000000B8   9970          LA    1,184(0,13)
00006772 E3F0 C01E 0004          00006528   9971          LG    15,@lit_776_384 ; LZ4F_readLE32
00006778                                    9972 @@gen_label673 DS    0H
00006778 05EF                               9973          BALR  14,15
0000677A                                    9974 @@gen_label674 DS    0H
0000677A B916 00FF                          9975          LLGFR 15,15
                                            9976 * ***                   dctx->frameInfo.contentSize = SFrameSize;
0000677E E3F0 2010 0024          00000010   9977          STG   15,16(0,2)  ; offset of contentSize in 0000027
                                            9978 * ***                   dctx->tmpInTarget = SFrameSize;
00006784 E3F0 2050 0024          00000050   9979          STG   15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
                                            9980 * ***                   dctx->dStage = dstage_skipSkippable;
0000678A E54C 2024 000E          00000024   9981          MVHI  36(2),14    ; offset of dStage in LZ4F_dctx_s
                                            9982 * ***                   break;
00006790 47F0 C40E               00006918   9983          B     @L241
                                            9984 * ***               }
                                            9985 * ***
                                            9986 * ***           case dstage_skipSkippable:
00006794                                    9987 @L353    DS    0H
                                            9988 * ***               {   size_t const skipSize = ( (dctx->tmpInTarget) \
                                            9989 * < ((size_t)(srcEnd-srcPtr)) ? (dctx->tmpInTarget) : ((size_t)(srcEnd\
                                            9990 * -srcPtr)) );
00006794 E3F0 2050 0004          00000050   9991          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
0000679A B904 0015                          9992          LGR   1,5
0000679E B909 0013                          9993          SGR   1,3
000067A2 B921 00F1                          9994          CLGR  15,1
000067A6 47B0 C2AA               000067B4   9995          BNL   @L354
000067AA E3F0 2050 0004          00000050   9996          LG    15,80(0,2)  ; offset of tmpInTarget in LZ4F_dctx_s
000067B0 47F0 C2B2               000067BC   9997          B     @L355
000067B4                                    9998 @L354    DS    0H
000067B4 B904 00F5                          9999          LGR   15,5
000067B8 B909 00F3                         10000          SGR   15,3
000067BC                                   10001 @L355    DS    0H
                                           10002 * ***                   srcPtr += skipSize;
000067BC 413F 3000               00000000  10003          LA    3,0(15,3)
                                           10004 * ***                   dctx->tmpInTarget -= skipSize;
000067C0 E310 2050 0004          00000050  10005          LG    1,80(0,2)
000067C6 B90B 001F                         10006          SLGR  1,15
000067CA E310 2050 0024          00000050  10007          STG   1,80(0,2)
                                           10008 * ***                   doAnotherStage = 0;
000067D0 A778 0000               00000000  10009          LHI   7,0         ; 0
                                           10010 * ***                   nextSrcSizeHint = dctx->tmpInTarget;
000067D4 E380 2050 0004          00000050  10011          LG    8,80(0,2)   ; offset of tmpInTarget in LZ4F_dctx_s
                                           10012 * ***                   if (nextSrcSizeHint) break;
000067DA B902 00F8                         10013          LTGR  15,8
000067DE 4770 C40E               00006918  10014          BNZ   @L241
000067E2                                   10015 @L356    DS    0H
                                           10016 * ***
                                           10017 * ***                   LZ4F_resetDecompressionContext(dctx);
000067E2 E320 D0B8 0024          000000B8  10018          STG   2,184(0,13)
000067E8 4110 D0B8               000000B8  10019          LA    1,184(0,13)
                                                                                                                           Page  201 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000067EC E3F0 C036 0004          00006540  10020          LG    15,@lit_776_388 ; LZ4F_resetDecompressionContext
000067F2                                   10021 @@gen_label677 DS    0H
000067F2 05EF                              10022          BALR  14,15
000067F4                                   10023 @@gen_label678 DS    0H
                                           10024 * ***                   break;
000067F4 47F0 C40E               00006918  10025          B     @L241
                                           10026 * ***               }
                                           10027 * ***           }
000067F8                                   10028 @L242    DS    0H
000067F8 58F0 2024               00000024  10029          L     15,36(0,2)  ; offset of dStage in LZ4F_dctx_s
000067FC C2FF 0000 000E                    10030          CLFI  15,X'0000000E'
00006802 4720 C40E               00006918  10031          BH    @L241
00006806 B914 00FF                         10032          LGFR  15,15
0000680A 4110 C31E               00006828  10033          LA    1,@@gen_label679
0000680E EBFF 0004 000D          00000004  10034          SLLG  15,15,4(0)
00006814 E3C1 F008 000A          00000008  10035          ALG   12,8(1,15)
0000681A E3F1 F000 0004          00000000  10036          LG    15,0(1,15)
00006820 47FF C000               00000000  10037          B     0(15,12)
00006828                                   10038 @@gen_label679 DS    0D
00006828 0000000000000224                  10039          DC AD(@L244-@REGION_776_1)
00006830 FFFFFFFFFFFFEECE                  10040          DC AD(@REGION_776_1-@REGION_776_3)
00006838 00000000000002CC                  10041          DC AD(@L248-@REGION_776_1)
00006840 FFFFFFFFFFFFEECE                  10042          DC AD(@REGION_776_1-@REGION_776_3)
00006848 00000000000003EA                  10043          DC AD(@L253-@REGION_776_1)
00006850 FFFFFFFFFFFFEECE                  10044          DC AD(@REGION_776_1-@REGION_776_3)
00006858 0000000000000530                  10045          DC AD(@L260-@REGION_776_1)
00006860 FFFFFFFFFFFFEECE                  10046          DC AD(@REGION_776_1-@REGION_776_3)
00006868 0000000000000570                  10047          DC AD(@L264-@REGION_776_1)
00006870 FFFFFFFFFFFFEECE                  10048          DC AD(@REGION_776_1-@REGION_776_3)
00006878 0000000000000732                  10049          DC AD(@L274-@REGION_776_1)
00006880 FFFFFFFFFFFFEECE                  10050          DC AD(@REGION_776_1-@REGION_776_3)
00006888 0000000000000134                  10051          DC AD(@L290-@REGION_776_2)
00006890 FFFFFFFFFFFFF71A                  10052          DC AD(@REGION_776_2-@REGION_776_3)
00006898 0000000000000250                  10053          DC AD(@L297-@REGION_776_2)
000068A0 FFFFFFFFFFFFF71A                  10054          DC AD(@REGION_776_2-@REGION_776_3)
000068A8 000000000000028A                  10055          DC AD(@L300-@REGION_776_2)
000068B0 FFFFFFFFFFFFF71A                  10056          DC AD(@REGION_776_2-@REGION_776_3)
000068B8 000000000000076A                  10057          DC AD(@L328-@REGION_776_2)
000068C0 FFFFFFFFFFFFF71A                  10058          DC AD(@REGION_776_2-@REGION_776_3)
000068C8 0000000000000872                  10059          DC AD(@L334-@REGION_776_2)
000068D0 FFFFFFFFFFFFF71A                  10060          DC AD(@REGION_776_2-@REGION_776_3)
000068D8 000000000000007C                  10061          DC AD(@L340-@REGION_776_3)
000068E0 0000000000000000                  10062          DC AD(@REGION_776_3-@REGION_776_3)
000068E8 0000000000000178                  10063          DC AD(@L345-@REGION_776_3)
000068F0 0000000000000000                  10064          DC AD(@REGION_776_3-@REGION_776_3)
000068F8 00000000000001B0                  10065          DC AD(@L349-@REGION_776_3)
00006900 0000000000000000                  10066          DC AD(@REGION_776_3-@REGION_776_3)
00006908 000000000000028A                  10067          DC AD(@L353-@REGION_776_3)
00006910 0000000000000000                  10068          DC AD(@REGION_776_3-@REGION_776_3)
                                           10069 * ***       }
00006918                                   10070 @L241    DS    0H
00006918 1277                              10071          LTR   7,7
                                                                                                                           Page  202 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000691A 4770 C2EE               000067F8  10072          BNZ   @L242
                                           10073 * ***
                                           10074 * ***
                                           10075 * ***       { enum { LZ4F_static_assert = 1/(int)(!!((unsigned)dstage_\
                                           10076 * init == 2)) }; };
                                           10077 * ***       if ( (dctx->frameInfo.blockMode==LZ4F_blockLinked)
                                           10078 * ***         && (dctx->dict != dctx->tmpOutBuffer)
0000691E E55C 2004 0000          00000004  10079          CHSI  4(2),0
00006924 4770 C5F6               00006B00  10080          BNE   @L357
                                           10081 * ***         && (dctx->dict != ((void *)0))                          \
                                           10082 *
00006928 E3F0 2060 0004          00000060  10083          LG    15,96(0,2)  ; offset of dict in LZ4F_dctx_s
0000692E E310 2058 0004          00000058  10084          LG    1,88(0,2)   ; offset of tmpOutBuffer in LZ4F_dctx_s
00006934 B920 00F1                         10085          CGR   15,1
00006938 4780 C5F6               00006B00  10086          BE    @L357
                                           10087 * ***         && (!decompressOptionsPtr->stableDst)
0000693C E3F0 2060 0002          00000060  10088          LTG   15,96(0,2)  ; offset of dict in LZ4F_dctx_s
00006942 4780 C5F6               00006B00  10089          BE    @L357
                                           10090 * ***         && ((unsigned)(dctx->dStage)-2 < (unsigned)(dstage_getSu\
                                           10091 * ffix)-2) )
00006946 E3F0 D0F0 0004          000000F0  10092          LG    15,240(0,13) ; spill
0000694C E3F0 F000 0012          00000000  10093          LT    15,0(0,15)  ; decompressOptionsPtr
00006952 4770 C5F6               00006B00  10094          BNZ   @L357
00006956 58F0 2024               00000024  10095          L     15,36(0,2)  ; offset of dStage in LZ4F_dctx_s
0000695A A7FA FFFE               0000FFFE  10096          AHI   15,-2
0000695E C2FF 0000 0008                    10097          CLFI  15,X'00000008'
00006964 47B0 C5F6               00006B00  10098          BNL   @L357
                                           10099 * ***       {
                                           10100 * ***           if (dctx->dStage == dstage_flushOut) {
00006968 E55C 2024 0009          00000024  10101          CHSI  36(2),9
0000696E 4770 C564               00006A6E  10102          BNE   @L358
                                           10103 * ***               size_t const preserveSize = (size_t)(dctx->tmpOut \
                                           10104 * - dctx->tmpOutBuffer);
00006972 E360 2070 0004          00000070  10105          LG    6,112(0,2)  ; offset of tmpOut in LZ4F_dctx_s
00006978 E360 2058 0009          00000058  10106          SG    6,88(0,2)
                                           10107 * ***               size_t copySize = 64 *(1<<10) - dctx->tmpOutSize;
0000697E C05F 0001 0000                    10108          LLILF 5,X'00010000' ; 65536
00006984 E350 2078 000B          00000078  10109          SLG   5,120(0,2)
                                           10110 * ***               const BYTE* oldDictEnd = dctx->dict + dctx->dictSi\
                                           10111 * ze - dctx->tmpOutStart;
0000698A E3F0 2060 0004          00000060  10112          LG    15,96(0,2)  ; offset of dict in LZ4F_dctx_s
00006990 E310 2068 0004          00000068  10113          LG    1,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
00006996 4171 F000               00000000  10114          LA    7,0(1,15)
0000699A E3F0 2080 0004          00000080  10115          LG    15,128(0,2) ; offset of tmpOutStart in LZ4F_dctx_s
000069A0 B909 007F                         10116          SGR   7,15
                                           10117 * ***               if (dctx->tmpOutSize > 64 *(1<<10)) copySize = 0;
000069A4 E3F0 2078 0004          00000078  10118          LG    15,120(0,2)
000069AA C2FE 0001 0000                    10119          CLGFI 15,X'00010000'
000069B0 47D0 C4AE               000069B8  10120          BNH   @L359
000069B4 A759 0000               00000000  10121          LGHI  5,0         ; 0
000069B8                                   10122 @L359    DS    0H
                                           10123 * ***               if (copySize > preserveSize) copySize = preserveSi\
                                                                                                                           Page  203 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10124 * ze;
000069B8 B921 0056                         10125          CLGR  5,6
000069BC 47D0 C4BA               000069C4  10126          BNH   @L360
000069C0 B904 0056                         10127          LGR   5,6         ; copySize
000069C4                                   10128 @L360    DS    0H
                                           10129 * ***               ((dctx->tmpOutBuffer != ((void *)0)) ? (void)0 : _\
                                           10130 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\lz4frame.c", 1858,\
                                           10131 *  "dctx->tmpOutBuffer != NULL"));
000069C4 E3F0 2058 0002          00000058  10132          LTG   15,88(0,2)  ; offset of tmpOutBuffer in LZ4F_dctx_s
000069CA 4770 C500               00006A0A  10133          BNE   @L362
000069CE                                   10134 @L361    DS    0H
000069CE E3F0 C056 0004          00006560  10135          LG    15,@lit_776_398
000069D4 41F0 F0E6               000000E6  10136          LA    15,230(0,15)
000069D8 E3F0 D0B8 0024          000000B8  10137          STG   15,184(0,13)
000069DE E3F0 C04E 0004          00006558  10138          LG    15,@lit_776_399
000069E4 4110 F022               00000022  10139          LA    1,34(0,15)
000069E8 E310 D0C0 0024          000000C0  10140          STG   1,192(0,13)
000069EE E548 D0C8 0742          000000C8  10141          MVGHI 200(13),1858
000069F4 41F0 F13C               0000013C  10142          LA    15,316(0,15)
000069F8 E3F0 D0D0 0024          000000D0  10143          STG   15,208(0,13)
000069FE 4110 D0B8               000000B8  10144          LA    1,184(0,13)
00006A02 E3F0 C046 0004          00006550  10145          LG    15,@lit_776_400 ; __assert
00006A08                                   10146 @@gen_label690 DS    0H
00006A08 05EF                              10147          BALR  14,15
00006A0A                                   10148 @@gen_label691 DS    0H
00006A0A                                   10149 @L362    DS    0H
                                           10150 * ***
                                           10151 * ***               __memcpy(dctx->tmpOutBuffer + preserveSize - copyS\
                                           10152 * ize,oldDictEnd - copySize,copySize);
00006A0A E3F0 2058 0004          00000058  10153          LG    15,88(0,2)  ; offset of tmpOutBuffer in LZ4F_dctx_s
00006A10 41F6 F000               00000000  10154          LA    15,0(6,15)
00006A14 B909 00F5                         10155          SGR   15,5
00006A18 B909 0075                         10156          SGR   7,5
00006A1C B904 001F                         10157          LGR   1,15
00006A20 B902 00F5                         10158          LTGR  15,5
00006A24 4780 C548               00006A52  10159          BZ    @@gen_label694
00006A28 A7FB FFFF               0000FFFF  10160          AGHI  15,-1
00006A2C EB5F 0008 000A          00000008  10161          SRAG  5,15,8(0)
00006A32 B902 0055                         10162          LTGR  5,5
00006A36 4780 C544               00006A4E  10163          BZ    @@gen_label693
00006A3A                                   10164 @@gen_label692 DS 0H
00006A3A D2FF 1000 7000 00000000 00000000  10165          MVC   0(256,1),0(7)
00006A40 4110 1100               00000100  10166          LA    1,256(0,1)
00006A44 4170 7100               00000100  10167          LA    7,256(0,7)
00006A48 E350 C530 0046          00006A3A  10168          BCTG  5,@@gen_label692
00006A4E                                   10169 @@gen_label693 DS 0H
00006A4E 44F0 C05E               00006568  10170          EX    15,@lit_776_401
00006A52                                   10171 @@gen_label694 DS 0H
                                           10172 * ***
                                           10173 * ***               dctx->dict = dctx->tmpOutBuffer;
00006A52 E3F0 2058 0004          00000058  10174          LG    15,88(0,2)  ; offset of tmpOutBuffer in LZ4F_dctx_s
00006A58 E3F0 2060 0024          00000060  10175          STG   15,96(0,2)  ; offset of dict in LZ4F_dctx_s
                                                                                                                           Page  204 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10176 * ***               dctx->dictSize = preserveSize + dctx->tmpOutStart;
00006A5E E360 2080 000A          00000080  10177          ALG   6,128(0,2)
00006A64 E360 2068 0024          00000068  10178          STG   6,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
                                           10179 * ***           } else {
00006A6A 47F0 C5F6               00006B00  10180          B     @L357
00006A6E                                   10181 @L358    DS    0H
                                           10182 * ***               const BYTE* const oldDictEnd = dctx->dict + dctx->\
                                           10183 * dictSize;
00006A6E E3F0 2060 0004          00000060  10184          LG    15,96(0,2)  ; offset of dict in LZ4F_dctx_s
00006A74 E310 2068 0004          00000068  10185          LG    1,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
00006A7A 41F1 F000               00000000  10186          LA    15,0(1,15)
                                           10187 * ***               size_t const newDictSize = ( (dctx->dictSize) < (6\
                                           10188 * 4 *(1<<10)) ? (dctx->dictSize) : (64 *(1<<10)) );
00006A7E E310 2068 0004          00000068  10189          LG    1,104(0,2)
00006A84 C21E 0001 0000                    10190          CLGFI 1,X'00010000'
00006A8A 47B0 C58E               00006A98  10191          BNL   @L364
00006A8E E310 2068 0004          00000068  10192          LG    1,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
00006A94 47F0 C594               00006A9E  10193          B     @L365
00006A98                                   10194 @L364    DS    0H
00006A98 C01F 0001 0000                    10195          LLILF 1,X'00010000' ; 65536
00006A9E                                   10196 @L365    DS    0H
                                           10197 * ***
                                           10198 * ***               __memcpy(dctx->tmpOutBuffer,oldDictEnd - newDictSi\
                                           10199 * ze,newDictSize);
00006A9E B909 00F1                         10200          SGR   15,1
00006AA2 B904 005F                         10201          LGR   5,15
00006AA6 E360 2058 0004          00000058  10202          LG    6,88(0,2)
00006AAC B902 00F1                         10203          LTGR  15,1
00006AB0 4780 C5D4               00006ADE  10204          BZ    @@gen_label698
00006AB4 A7FB FFFF               0000FFFF  10205          AGHI  15,-1
00006AB8 EB7F 0008 000A          00000008  10206          SRAG  7,15,8(0)
00006ABE B902 0077                         10207          LTGR  7,7
00006AC2 4780 C5D0               00006ADA  10208          BZ    @@gen_label697
00006AC6                                   10209 @@gen_label696 DS 0H
00006AC6 D2FF 6000 5000 00000000 00000000  10210          MVC   0(256,6),0(5)
00006ACC 4160 6100               00000100  10211          LA    6,256(0,6)
00006AD0 4150 5100               00000100  10212          LA    5,256(0,5)
00006AD4 E370 C5BC 0046          00006AC6  10213          BCTG  7,@@gen_label696
00006ADA                                   10214 @@gen_label697 DS 0H
00006ADA 44F0 C064               0000656E  10215          EX    15,@lit_776_403
00006ADE                                   10216 @@gen_label698 DS 0H
                                           10217 * ***
                                           10218 * ***               dctx->dict = dctx->tmpOutBuffer;
00006ADE E3F0 2058 0004          00000058  10219          LG    15,88(0,2)  ; offset of tmpOutBuffer in LZ4F_dctx_s
00006AE4 E3F0 2060 0024          00000060  10220          STG   15,96(0,2)  ; offset of dict in LZ4F_dctx_s
                                           10221 * ***               dctx->dictSize = newDictSize;
00006AEA E310 2068 0024          00000068  10222          STG   1,104(0,2)  ; offset of dictSize in LZ4F_dctx_s
                                           10223 * ***               dctx->tmpOut = dctx->tmpOutBuffer + newDictSize;
00006AF0 E3F0 2058 0004          00000058  10224          LG    15,88(0,2)  ; offset of tmpOutBuffer in LZ4F_dctx_s
00006AF6 41F1 F000               00000000  10225          LA    15,0(1,15)
00006AFA E3F0 2070 0024          00000070  10226          STG   15,112(0,2) ; offset of tmpOut in LZ4F_dctx_s
                                           10227 * ***           }
                                                                                                                           Page  205 
  Active Usings: @REGION_776_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006B00                                   10228 @L363    DS    0H
                                           10229 * ***       }
00006B00                                   10230 @L357    DS    0H
                                           10231 * ***
                                           10232 * ***       *srcSizePtr = (size_t)(srcPtr - srcStart);
00006B00 E3F0 D100 0004          00000100  10233          LG    15,256(0,13) ; spill
00006B06 B909 003F                         10234          SGR   3,15
00006B0A E3F0 D0F8 0004          000000F8  10235          LG    15,248(0,13) ; spill
00006B10 E330 F000 0024          00000000  10236          STG   3,0(0,15)   ; srcSizePtr
                                           10237 * ***       *dstSizePtr = (size_t)(dstPtr - dstStart);
00006B16 B909 004A                         10238          SGR   4,10
00006B1A E3F0 D0E8 0004          000000E8  10239          LG    15,232(0,13) ; spill
00006B20 E340 F000 0024          00000000  10240          STG   4,0(0,15)   ; dstSizePtr
                                           10241 * ***       return nextSrcSizeHint;
00006B26 B904 00F8                         10242          LGR   15,8
                                           10243 * ***   }
00006B2A                                   10244 @ret_lab_776 DS 0H
                                           10245 * * **** Start of Epilogue
                                           10246          DCCEPIL
00006B2A                                   10247+         ds 0h                                                          01-DCCEP
                                           10248+* Epilog
00006B2A D707 D088 D088 00000088 00000088  10249+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006B30 E3D0 D080 0004          00000080  10250+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006B36 E3C0 D090 0004          00000090  10251+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006B3C E3B0 C018 0004          00000018  10252+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006B42 E3C0 B010 0021          00000010  10253+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006B48 E3E0 D008 0004          00000008  10254+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006B4E EB1C D020 0004          00000020  10255+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006B54 078E                              10256+         bcr 8,14                if same dsab, just return              01-DCCEP
00006B56 E3F0 D010 0024          00000010  10257+         stg 15,16(0,13)         save return code                       01-DCCEP
00006B5C E300 D018 0024          00000018  10258+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006B62 E3F0 D090 0004          00000090  10259+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006B68 E3F0 F018 0004          00000018  10260+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006B6E 47F0 F040               00000040  10261+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10262+* End of Epilog
                                           10263 * * **** End of Epilogue
                                           10264          DROP  12
                                           10265 *
                                           10266 *   DSECT for automatic variables in "LZ4F_decompress"
                                           10267 *      (FUNCTION #776)
                                           10268 *
00000000                00000000 000000B8  10269 @AUTO#$L$Z4$F_decompress DSECT
00000000                                   10270          DS    XL168
000000A8                                   10271 $L$Z4$F_decompress#new$Dict$Size#75 DS 8XL1 ; newDictSize
000000B0                000000B0 000000A8  10272          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10273 $L$Z4$F_decompress#copy$Size#74 DS 8XL1 ; copySize
000000B0                000000B0 000000A8  10274          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10275 $L$Z4$F_decompress#preserve$Size#74 DS 8XL1 ; preserveSize
000000B0                000000B0 000000A8  10276          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10277 $L$Z4$F_decompress#skip$Size#71 DS 8XL1 ; skipSize
000000B0                000000B0 000000A8  10278          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10279 $L$Z4$F_decompress#$S$Frame$Size#70 DS 8XL1 ; SFrameSize
                                                                                                                           Page  206 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000B0                000000B0 000000A8  10280          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10281 $L$Z4$F_decompress#size$To$Copy#68 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8  10282          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10283 $L$Z4$F_decompress#result$C$R$C#65 DS 1F ; resultCRC
000000AC                000000AC 000000A8  10284          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10285 $L$Z4$F_decompress#read$C$R$C#65 DS 1F ; readCRC
000000AC                000000AC 000000A8  10286          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10287 $L$Z4$F_decompress#size$To$Copy#63 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8  10288          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10289 $L$Z4$F_decompress#wanted$Data#63 DS 8XL1 ; wantedData
000000B0                000000B0 000000A8  10290          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10291 $L$Z4$F_decompress#remaining$Input#63 DS 8XL1 ; remainingInput
000000B0                000000B0 000000A8  10292          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10293 $L$Z4$F_decompress#size$To$Copy#58 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8  10294          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10295 $L$Z4$F_decompress#decoded$Size#55 DS 1F ; decodedSize
000000AC                000000AC 000000A8  10296          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10297 $L$Z4$F_decompress#dict$Size#55 DS 8XL1 ; dictSize
000000B0                000000B0 000000A8  10298          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10299 $L$Z4$F_decompress#reserved$Dict$Space#54 DS 8XL1 ; reservedDictSpace
000000B0                000000B0 000000A8  10300          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10301 $L$Z4$F_decompress#decoded$Size#48 DS 1F ; decodedSize
000000AC                000000AC 000000A8  10302          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10303 $L$Z4$F_decompress#dict$Size#48 DS 8XL1 ; dictSize
000000B0                000000B0 000000A8  10304          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10305 $L$Z4$F_decompress#calc$Block$Crc#47 DS 1F ; calcBlockCrc
000000AC                000000AC 000000A8  10306          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10307 $L$Z4$F_decompress#read$Block$Crc#47 DS 1F ; readBlockCrc
000000AC                000000AC 000000A8  10308          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10309 $L$Z4$F_decompress#size$To$Copy#44 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8  10310          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10311 $L$Z4$F_decompress#input$Left#44 DS 8XL1 ; inputLeft
000000B0                000000B0 000000A8  10312          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10313 $L$Z4$F_decompress#wanted$Data#44 DS 8XL1 ; wantedData
000000B0                000000B0 000000A8  10314          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10315 $L$Z4$F_decompress#calc$C$R$C#38 DS 1F ; calcCRC
000000AC                000000AC 000000A8  10316          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10317 $L$Z4$F_decompress#read$C$R$C#38 DS 1F ; readCRC
000000AC                000000AC 000000A8  10318          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10319 $L$Z4$F_decompress#size$To$Copy#36 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8  10320          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10321 $L$Z4$F_decompress#still$To$Copy#36 DS 8XL1 ; stillToCopy
000000B0                000000B0 000000A8  10322          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10323 $L$Z4$F_decompress#min$Buff$Size#28 DS 8XL1 ; minBuffSize
000000B0                000000B0 000000A8  10324          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10325 $L$Z4$F_decompress#size$To$Copy#26 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8  10326          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10327 $L$Z4$F_decompress#crc$Size#17 DS 8XL1 ; crcSize
000000B0                000000B0 000000A8  10328          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10329 $L$Z4$F_decompress#next$C$Block$Size#17 DS 8XL1 ; nextCBlockSize
000000B0                000000B0 000000A8  10330          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10331 $L$Z4$F_decompress#block$Header#17 DS 1F ; blockHeader
                                                                                                                           Page  207 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000AC                000000AC 000000A8  10332          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10333 $L$Z4$F_decompress#size$To$Copy#15 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8  10334          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10335 $L$Z4$F_decompress#wanted$Data#15 DS 8XL1 ; wantedData
000000B0                000000B0 000000A8  10336          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10337 $L$Z4$F_decompress#remaining$Input#15 DS 8XL1 ; remainingInput
000000B0                000000B0 000000A8  10338          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10339 $L$Z4$F_decompress#buffer$Needed#11 DS 8XL1 ; bufferNeeded
000000B0                000000B0 000000A8  10340          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10341 $L$Z4$F_decompress#h$Size#9 DS 8XL1 ; hSize
000000B0                000000B0 000000A8  10342          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10343 $L$Z4$F_decompress#size$To$Copy#7 DS 8XL1 ; sizeToCopy
000000B0                000000B0 000000A8  10344          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10345 $L$Z4$F_decompress#h$Size#5 DS 8XL1 ; hSize
000000B0                000000B0 000000A8  10346          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10347 $L$Z4$F_decompress#next$Src$Size$Hint#0 DS 8XL1 ; nextSrcSizeHint
000000B0                000000B0 000000A8  10348          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10349 $L$Z4$F_decompress#do$Another$Stage#0 DS 1F ; doAnotherStage
000000AC                000000AC 000000A8  10350          ORG   @AUTO#$L$Z4$F_decompress+168
000000A8                                   10351 $L$Z4$F_decompress#options$Null#0 DS 16XL1 ; optionsNull
                                           10352 *
00006B72                00000000 00006CE8  10353 @CODE    CSECT
                                           10354 *
                                           10355 *
                                           10356 *
                                           10357 * ....... start of LZ4F_decompress_usingDict
                                           10358 $L$Z4$F_decompress_using$Dict ALIAS X'D3E9F4C66D8485839694979985A2A26DA*
                                                                4A2899587C48983A3'
00006B72                                   10359 @LNAME784 DS   0H
00006B72 00000019                          10360          DC    X'00000019'
00006B76 D3E9F4C66D848583                  10361          DC    C'LZ4F_decompress_usingDict'
00006B8F 00                                10362          DC    X'00'
                                           10363 $L$Z4$F_decompress_using$Dict DCCPRLG CINDEX=784,BASER=12,FRAME=216,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME784
                                           10364          macro
                                           10365          dccextrn &m
                                           10366          gblc    &$dccext(1000)
                                           10367          gbla    &$dccexti
                                           10368          lcla    &i
                                           10369 &$dccext(&$dccexti+1) setc    '&m'
                                           10370 &i       seta    1
                                           10371 .loop    aif    (&i gt &$dccexti).around
                                           10372          aif    ('&$dccext(&i)' eq '&m').getout
                                           10373 &i       seta    &i+1
                                           10374          ago     .loop
                                           10375 .around  anop
                                           10376 &$dccexti seta &$dccexti+1
                                           10377          extrn  &m
                                           10378 .getout  anop
                                           10379          mend
00006B90                                   10380+$eye0141    ds    0d                                                    02-DCCCA
00006B90 C4C3C3                            10381+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page  208 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006B93 01                                10382+         dc xl1'01' format one                                          02-DCCCA
00006B94 00000000                          10383+         dc a(0)                                                        02-DCCCA
00006B98 0000000000006C02                  10384+         dc ad(@PER_784)                                                02-DCCCA
00006BA0 00000000000000D8                  10385+         dc ad(216)                                                     02-DCCCA
00006BA8 0000000000000000                  10386+         dc ad(0)                                                       02-DCCCA
00006BB0 0000000000001000                  10387+         dc ad(4096)                                                    02-DCCCA
00006BB8 20                                10388+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006BB9 03                                10389+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006BBA 03                                10390+         dc al1(3)                                                      02-DCCCA
00006BBB 08                                10391+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006BBC 00                                10392+         dc bl.8'00000000'                                              02-DCCCA
00006BBD 000000                            10393+         dc al3(0)                                                      02-DCCCA
00006BC0 0000000000006B72                  10394+         dc ad(@LNAME784)                                               02-DCCCA
00006BC8                                   10395+         ds 0d                                                          02-DCCCA
00006BC8 0000000000006B90                  10396+         dc ad($eye0141)                                                02-DCCCA
00006BD0 0000000000000000                  10397+         dc ad(0)                                                       02-DCCCA
00006BD8                                   10398+         ds    0d                                                       01-DCCPR
                                           10399+         entry $L$Z4$F_decompress_using$Dict                            01-DCCPR
00006BD8                                   10400+$L$Z4$F_decompress_using$Dict ds 0d                                     01-DCCPR
00006BD8                                   10401+@REGION_784_1 ds 0h                                                     01-DCCPR
00006BD8 EBEC D008 0024          00000008  10402+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006BDE E3E0 D088 0004          00000088  10403+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006BE4 E3C0 D090 0004          00000090  10404+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006BEA B904 002E                         10405+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006BEE E3B0 C018 0004          00000018  10406+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006BF4 A7EB 00D8               000000D8  10407+         aghi  14,216              increase by frame size               01-DCCPR
00006BF8 E3E0 C020 0021          00000020  10408+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006BFE 4720 B020               00000020  10409+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006C02                                   10410+@PER_784 ds    0h                                                       01-DCCPR
00006C02 EBDE 2080 0024          00000080  10411+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006C08 E3C0 2090 0024          00000090  10412+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006C0E B904 00D2                         10413+         lgr   13,2                set real frame pointer               01-DCCPR
00006C12 B904 00CF                         10414+         lgr   12,15               set base reg                         01-DCCPR
                        00006BD8           10415+         using @REGION_784_1,12                                         01-DCCPR
                                           10416 * ******* End of Prologue
                                           10417 * *
                                           10418 * ***       if (dctx->dStage <= dstage_init) {
00006C16 E3F0 1000 0004          00000000  10419          LG    15,0(0,1)   ; dctx
00006C1C E55C F024 0002          00000024  10420          CHSI  36(15),2
00006C22 4720 C066               00006C3E  10421          BH    @L366
                                           10422 * ***           dctx->dict = (const BYTE*)dict;
00006C26 E320 1028 0004          00000028  10423          LG    2,40(0,1)   ; dict
00006C2C E320 F060 0024          00000060  10424          STG   2,96(0,15)  ; offset of dict in LZ4F_dctx_s
                                           10425 * ***           dctx->dictSize = dictSize;
00006C32 E320 1030 0004          00000030  10426          LG    2,48(0,1)   ; dictSize
00006C38 E320 F068 0024          00000068  10427          STG   2,104(0,15) ; offset of dictSize in LZ4F_dctx_s
                                           10428 * ***       }
00006C3E                                   10429 @L366    DS    0H
                                           10430 * ***       return LZ4F_decompress(dctx, dstBuffer, dstSizePtr,
                                           10431 * ***                              srcBuffer, srcSizePtr,
                                           10432 * ***                              decompressOptionsPtr);
00006C3E E3F0 D0A8 0024          000000A8  10433          STG   15,168(0,13)
                                                                                                                           Page  209 
  Active Usings: @REGION_784_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006C44 E3F0 1008 0004          00000008  10434          LG    15,8(0,1)   ; dstBuffer
00006C4A E3F0 D0B0 0024          000000B0  10435          STG   15,176(0,13)
00006C50 E3F0 1010 0004          00000010  10436          LG    15,16(0,1)  ; dstSizePtr
00006C56 E3F0 D0B8 0024          000000B8  10437          STG   15,184(0,13)
00006C5C E3F0 1018 0004          00000018  10438          LG    15,24(0,1)  ; srcBuffer
00006C62 E3F0 D0C0 0024          000000C0  10439          STG   15,192(0,13)
00006C68 E3F0 1020 0004          00000020  10440          LG    15,32(0,1)  ; srcSizePtr
00006C6E E3F0 D0C8 0024          000000C8  10441          STG   15,200(0,13)
00006C74 E3F0 1038 0004          00000038  10442          LG    15,56(0,1)  ; decompressOptionsPtr
00006C7A E3F0 D0D0 0024          000000D0  10443          STG   15,208(0,13)
00006C80 4110 D0A8               000000A8  10444          LA    1,168(0,13)
00006C84 E3F0 C108 0004          00006CE0  10445          LG    15,@lit_784_447 ; LZ4F_decompress
00006C8A                                   10446 @@gen_label700 DS    0H
00006C8A 05EF                              10447          BALR  14,15
00006C8C                                   10448 @@gen_label701 DS    0H
                                           10449 * ***   }
                                           10450 * * **** Start of Epilogue
                                           10451          DCCEPIL
00006C8C                                   10452+         ds 0h                                                          01-DCCEP
                                           10453+* Epilog
00006C8C D707 D088 D088 00000088 00000088  10454+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006C92 E3D0 D080 0004          00000080  10455+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006C98 E3C0 D090 0004          00000090  10456+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006C9E E3B0 C018 0004          00000018  10457+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006CA4 E3C0 B010 0021          00000010  10458+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006CAA E3E0 D008 0004          00000008  10459+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006CB0 EB1C D020 0004          00000020  10460+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006CB6 078E                              10461+         bcr 8,14                if same dsab, just return              01-DCCEP
00006CB8 E3F0 D010 0024          00000010  10462+         stg 15,16(0,13)         save return code                       01-DCCEP
00006CBE E300 D018 0024          00000018  10463+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006CC4 E3F0 D090 0004          00000090  10464+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006CCA E3F0 F018 0004          00000018  10465+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006CD0 47F0 F040               00000040  10466+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10467+* End of Epilog
                                           10468 * * **** End of Epilogue
00006CD8                                   10469          DS    0D
00006CD8 000000D8                          10470 @FRAMESIZE_784 DC F'216'
00006CDC 00000000
00006CE0 00000000000053D8                  10471 @lit_784_447 DC AD($L$Z4$F_decompress)
                                           10472          DROP  12
                                           10473 *
                                           10474 *   DSECT for automatic variables in "LZ4F_decompress_usingDict"
                                           10475 *      (FUNCTION #784)
                                           10476 *
00000000                00000000 000000A8  10477 @AUTO#$L$Z4$F_decompress_using$Dict DSECT
00000000                                   10478          DS    XL168
                                           10479 *
00006CE8                00000000 00006CE8  10480 @CODE    CSECT
                                           10481 @@STATIC ALIAS X'7C93A9F4869981948550'
                                           10482 @@STATIC DXD   86D
                                           10483 *
                                           10484 *  Non-Re-Entrant Data Section
                                                                                                                           Page  210 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10485 *
00006CE8                00006CE8 000004EA  10486 @DATA    CSECT
                                           10487 @DATA    RMODE ANY
                                           10488 @DATA    AMODE ANY
00006CE8 99846D8381939396                  10489 @@T349   DC    X'99846D838193939683'               rd.calloc
00006CF1 00                                10490          DC    1X'00'
00006CF2 99846D9481939396                  10491 @@T34D   DC    X'99846D948193939683'               rd.malloc
00006CFB 00                                10492          DC    1X'00'
00006CFC 99846D9985819393                  10493 @@T352   DC    X'99846D99858193939683'             rd.realloc
00006D06 0000                              10494          DC    2X'00'
00006D08 99846DA2A39984A4                  10495 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00006D11 00                                10496          DC    1X'00'
00006D12 99846DA2A3999584                  10497 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
00006D1C 0000                              10498          DC    2X'00'
00006D1E 99846D9985868395                  10499 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00006D2C 00000000                          10500          DC    4X'00'
00006D30 00000000                          10501 min$F$H$Size DC    4X'00'
00006D34 00000007                          10502          DC    X'00000007'                         ....
00006D38 00000000                          10503 max$F$H$Size DC    4X'00'
00006D3C 00000013                          10504          DC    X'00000013'                         ....
00006D40 00000000                          10505 $B$H$Size DC    4X'00'
00006D44 00000004                          10506          DC    X'00000004'                         ....
00006D48 00000000                          10507 $B$F$Size DC    4X'00'
00006D4C 00000004                          10508          DC    X'00000004'                         ....
00006D50 00000000                          10509 @@T3FC   DC    4X'00'
00006D54 0001000000000000                  10510          DC    X'00010000000000000004000000000000' ................
00006D64 0010000000000000                  10511          DC    X'001000000000000000400000'         ............
00006D70 D3E9F4C66D839694                  10512 @@T42C   DC    X'D3E9F4C66D839694979985A2A2C69981' LZ4F.compressFra
00006D80 94856DA4A2899587                  10513          DC    X'94856DA4A2899587C3C48983A3'       me.usingCDict
00006D8D 00                                10514          DC    1X'00'
00006D8E D3E9F4C66D8693A4                  10515 @@T4AB   DC    X'D3E9F4C66D8693A4A288'             LZ4F.flush
00006D98 0000                              10516          DC    2X'00'
00006D9A D3E9F4C66D839694                  10517 @@T4B4   DC    X'D3E9F4C66D839694979985A2A2C59584' LZ4F.compressEnd
00006DAA 0000                              10518          DC    2X'00'
00006DAC D3E9F4C66D848583                  10519 @@T4CD   DC    X'D3E9F4C66D848583968485C885818485' LZ4F.decodeHeade
00006DBC 99                                10520          DC    X'99'                               r
00006DBD 00                                10521          DC    1X'00'
00006DBE D3E9F4C66DA49784                  10522 @@T4E4   DC    X'D3E9F4C66DA4978481A385C48983A3'   LZ4F.updateDict
00006DCD 00                                10523          DC    1X'00'
00006DCE D3E9F4C66D848583                  10524 @@T4FB   DC    X'D3E9F4C66D8485839694979985A2A2'   LZ4F.decompress
00006DDD 00                                10525          DC    1X'00'
00006DDE                                   10526 @strings@ DS   0H
00006DDE C37AE081A2879281                  10527          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00006DEE 849281869281E0A2                  10528          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00006DFE 9700C37AE081A287                  10529          DC    X'9700C37AE081A2879281869281E09389' p.C..asgkafka.li
00006E0E 8299849281869281                  10530          DC    X'8299849281869281E0A29983E093A9F4' brdkafka.src.lz4
00006E1E 86998194854B8300                  10531          DC    X'86998194854B830084A2A3C59584406E' frame.c.dstEnd..
00006E2E 7E4084A2A3D7A399                  10532          DC    X'7E4084A2A3D7A399000084A2A3C59584' ..dstPtr..dstEnd
00006E3E 406E7E4084A2A3E2                  10533          DC    X'406E7E4084A2A3E2A38199A300004D4D' ....dstStart....
00006E4E A59689845D7F8693                  10534          DC    X'A59689845D7F8693A4A2884096A58599' void..flush.over
00006E5E 869396A6A24084A2                  10535          DC    X'869396A6A24084A2A3C2A4868685995A' flows.dstBuffer.
00006E6E 7F6B404DA289A985                  10536          DC    X'7F6B404DA289A9856DA35D4D84A2A3D7' ....size.t..dstP
                                                                                                                           Page  211 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006E7E A39940604084A2A3                  10537          DC    X'A39940604084A2A3E2A38199A35D404C' tr...dstStart...
00006E8E 7E4084A2A3C38197                  10538          DC    X'7E4084A2A3C38197818389A3A85D0000' ..dstCapacity...
00006E9E 8693A4A288E289A9                  10539          DC    X'8693A4A288E289A985404C7E4084A2A3' flushSize....dst
00006EAE C38197818389A3A8                  10540          DC    X'C38197818389A3A800008699819485C8' Capacity..frameH
00006EBE 8581848599E289A9                  10541          DC    X'8581848599E289A985406E40F50084A2' eaderSize...5.ds
00006ECE A3D7A399405A7E40                  10542          DC    X'A3D7A399405A7E40D5E4D3D300008483' tPtr....NULL..dc
00006EDE A3A7606E848983A3                  10543          DC    X'A3A7606E848983A3405A7E40D5E4D3D3' tx..dict....NULL
00006EEE 000084A2A3D7A399                  10544          DC    X'000084A2A3D7A399406E7E4084A2A3C2' ..dstPtr....dstB
00006EFE A486868599E2A381                  10545          DC    X'A486868599E2A38199A3000084A2A3E2' ufferStart..dstS
00006F0E 89A985404C40F6F4                  10546          DC    X'89A985404C40F6F440D2C2008483A3A7' ize...64.KB.dctx
00006F1E 606EA39497D6A4A3                  10547          DC    X'606EA39497D6A4A3C2A486868599405A' ..tmpOutBuffer..
00006F2E 7E40D5E4D3D30000                  10548          DC    X'7E40D5E4D3D300008483A3A7606E8489' ..NULL..dctx..di
00006F3E 83A3404E408483A3                  10549          DC    X'83A3404E408483A3A7606E848983A3E2' ct...dctx..dictS
00006F4E 89A985407E7E4084                  10550          DC    X'89A985407E7E408483A3A7606EA39497' ize....dctx..tmp
00006F5E D6A4A3404E408483                  10551          DC    X'D6A4A3404E408483A3A7606EA39497D6' Out...dctx..tmpO
00006F6E A4A3E2A38199A300                  10552          DC    X'A4A3E2A38199A3005C84A2A3E289A985' utStart..dstSize
00006F7E D7A399407E7E40F0                  10553          DC    X'D7A399407E7E40F000008483A3A7405A' Ptr....0..dctx..
00006F8E 7E40D5E4D3D30000                  10554          DC    X'7E40D5E4D3D30000A285938583A38584' ..NULL..selected
00006F9E C995405A7E40D5E4                  10555          DC    X'C995405A7E40D5E4D3D30000D6D26DD5' In....NULL..OK.N
00006FAE 96C5999996990000                  10556          DC    X'96C5999996990000C5D9D9D6D96DC7C5' oError..ERROR.GE
00006FBE D5C5D9C9C300C5D9                  10557          DC    X'D5C5D9C9C300C5D9D9D6D96D9481A7C2' NERIC.ERROR.maxB
00006FCE 93968392E289A985                  10558          DC    X'93968392E289A9856D8995A581938984' lockSize.invalid
00006FDE 0000C5D9D9D6D96D                  10559          DC    X'0000C5D9D9D6D96D8293968392D49684' ..ERROR.blockMod
00006FEE 856D8995A5819389                  10560          DC    X'856D8995A58193898400C5D9D9D6D96D' e.invalid.ERROR.
00006FFE 839695A38595A3C3                  10561          DC    X'839695A38595A3C388858392A2A494C6' contentChecksumF
0000700E 9381876D8995A581                  10562          DC    X'9381876D8995A58193898400C5D9D9D6' lag.invalid.ERRO
0000701E D96D839694979985                  10563          DC    X'D96D839694979985A2A2899695D385A5' R.compressionLev
0000702E 85936D8995A58193                  10564          DC    X'85936D8995A5819389840000C5D9D9D6' el.invalid..ERRO
0000703E D96D888581848599                  10565          DC    X'D96D888581848599E58599A28996956D' R.headerVersion.
0000704E A69996958700C5D9                  10566          DC    X'A69996958700C5D9D9D6D96D82939683' wrong.ERROR.bloc
0000705E 92C388858392A2A4                  10567          DC    X'92C388858392A2A4946D8995A5819389' kChecksum.invali
0000706E 8400C5D9D9D6D96D                  10568          DC    X'8400C5D9D9D6D96D9985A28599A58584' d.ERROR.reserved
0000707E C69381876DA285A3                  10569          DC    X'C69381876DA285A30000C5D9D9D6D96D' Flag.set..ERROR.
0000708E 819393968381A389                  10570          DC    X'819393968381A38996956D8681899385' allocation.faile
0000709E 8400C5D9D9D6D96D                  10571          DC    X'8400C5D9D9D6D96DA29983E289A9856D' d.ERROR.srcSize.
000070AE A39696D381998785                  10572          DC    X'A39696D3819987850000C5D9D9D6D96D' tooLarge..ERROR.
000070BE 84A2A3D481A7E289                  10573          DC    X'84A2A3D481A7E289A9856DA39696E294' dstMaxSize.tooSm
000070CE 81939300C5D9D9D6                  10574          DC    X'81939300C5D9D9D6D96D8699819485C8' all.ERROR.frameH
000070DE 85818485996D8995                  10575          DC    X'85818485996D8995839694979385A385' eader.incomplete
000070EE 0000C5D9D9D6D96D                  10576          DC    X'0000C5D9D9D6D96D8699819485E3A897' ..ERROR.frameTyp
000070FE 856DA495929596A6                  10577          DC    X'856DA495929596A69500C5D9D9D6D96D' e.unknown.ERROR.
0000710E 8699819485E289A9                  10578          DC    X'8699819485E289A9856DA69996958700' frameSize.wrong.
0000711E C5D9D9D6D96DA299                  10579          DC    X'C5D9D9D6D96DA29983D7A3996DA69996' ERROR.srcPtr.wro
0000712E 95870000C5D9D9D6                  10580          DC    X'95870000C5D9D9D6D96D848583969497' ng..ERROR.decomp
0000713E 9985A2A2899695C6                  10581          DC    X'9985A2A2899695C6818993858400C5D9' ressionFailed.ER
0000714E D9D6D96D88858184                  10582          DC    X'D9D6D96D888581848599C388858392A2' ROR.headerChecks
0000715E A4946D8995A58193                  10583          DC    X'A4946D8995A5819389840000C5D9D9D6' um.invalid..ERRO
0000716E D96D839695A38595                  10584          DC    X'D96D839695A38595A3C388858392A2A4' R.contentChecksu
0000717E 946D8995A5819389                  10585          DC    X'946D8995A58193898400C5D9D9D6D96D' m.invalid.ERROR.
0000718E 8699819485C48583                  10586          DC    X'8699819485C4858396848995876D8193' frameDecoding.al
0000719E 99858184A8E2A381                  10587          DC    X'99858184A8E2A38199A385840000C5D9' readyStarted..ER
000071AE D9D6D96D9481A7C3                  10588          DC    X'D9D6D96D9481A7C396848500E495A297' ROR.maxCode.Unsp
                                                                                                                           Page  212 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000071BE 8583898689858440                  10589          DC    X'85838986898584408599999699408396' ecified.error.co
000071CE 84850000                          10590          DC    X'84850000'                         de..
                                           10591 *
                                           10592 *
                                           10593 *   Re-entrant Data Initialization Section
                                           10594 *
                                           10595 @@INIT@  ALIAS C'lz4frame:'
000071D8                000071D8 000005A0  10596 @@INIT@  CSECT
                                           10597 @@INIT@  AMODE ANY
                                           10598 @@INIT@  RMODE ANY
000071D8 05                                10599          DC    XL1'5'
000071D9 000000                            10600          DC    AL3(0)
000071DC 00000120                          10601          DC    AL4(288)
000071E0 00000000                          10602          DC    4X'00'
000071E4 00000000                          10603          DC    Q(@@STATIC)
000071E8 00000000                          10604          DC    X'00000000'
000071EC 00000001                          10605          DC    X'00000001'
000071F0 00000000                          10606          DC    X'00000000'
000071F4 000000FF                          10607          DC    X'000000FF'
000071F8 0102039C09867F97                  10608          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00007208 1112139D85088718                  10609          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00007218 818283840A171B88                  10610          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00007228 9116939495960498                  10611          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00007238 A0E2E4E0E1E3E5E7                  10612          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00007248 E9EAEBE8EDEEEFEC                  10613          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00007258 2FC2C4C0C1C3C5C7                  10614          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00007268 C9CACBC8CDCECFCC                  10615          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00007278 6162636465666768                  10616          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00007288 6A6B6C6D6E6F7071                  10617          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00007298 7E73747576777879                  10618          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
000072A8 A3A5B7A9A7B6BCBD                  10619          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
000072B8 4142434445464748                  10620          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
000072C8 4A4B4C4D4E4F5051                  10621          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
000072D8 F753545556575859                  10622          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
000072E8 3132333435363738                  10623          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                           10624 *
000072F8 05                                10625          DC    XL1'5'
000072F9 000000                            10626          DC    AL3(0)
000072FC 000001E0                          10627          DC    AL4(480)
00007300 00000000                          10628          DC    4X'00'
00007304 00000000                          10629          DC    Q(@@STATIC)
00007308 00000000                          10630          DC    X'00000000'
0000730C 00000101                          10631          DC    X'00000101'
00007310 00000000                          10632          DC    X'00000000'
00007314 000000A0                          10633          DC    X'000000A0'
00007318 010203372D2E2F16                  10634          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00007328 1112133C3D322618                  10635          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00007338 5A7F7B5B6C507D4D                  10636          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00007348 F1F2F3F4F5F6F7F8                  10637          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00007358 C1C2C3C4C5C6C7C8                  10638          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00007368 D8D9E2E3E4E5E6E7                  10639          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00007378 8182838485868788                  10640          DC    X'81828384858687888991929394959697' abcdefghijklmnop
                                                                                                                           Page  213 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007388 9899A2A3A4A5A6A7                  10641          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00007398 2122232425061728                  10642          DC    X'2122232425061728292A2B2C090A1B30' ................
000073A8 311A333435360838                  10643          DC    X'311A333435360838393A3B04143EFF80' ................
                                           10644 *
000073B8 05                                10645          DC    XL1'5'
000073B9 000000                            10646          DC    AL3(0)
000073BC 00000208                          10647          DC    AL4(520)
000073C0 00000000                          10648          DC    4X'00'
000073C4 00000000                          10649          DC    Q(@@STATIC)
000073C8 00000000                          10650          DC    X'00000000'
000073CC 000001C0                          10651          DC    X'000001C0'
000073D0 00000000                          10652          DC    X'00000000'
000073D4 00000001                          10653          DC    X'00000001'
000073D8 8A40404040404040                  10654          DC    X'8A40404040404040'                 ........
                                           10655 *
000073E0 05                                10656          DC    XL1'5'
000073E1 000000                            10657          DC    AL3(0)
000073E4 00000230                          10658          DC    AL4(560)
000073E8 00000000                          10659          DC    4X'00'
000073EC 00000000                          10660          DC    Q(@@STATIC)
000073F0 00000000                          10661          DC    X'00000000'
000073F4 000001E0                          10662          DC    X'000001E0'
000073F8 00000000                          10663          DC    X'00000000'
000073FC 00000001                          10664          DC    X'00000001'
00007400 8B40404040404040                  10665          DC    X'8B40404040404040'                 ........
                                           10666 *
00007408 0D                                10667          DC    XL1'D'
00007409 000000                            10668          DC    AL3(0)
0000740C 00000258                          10669          DC    AL4(600)
00007410 00000000                          10670          DC    4X'00'
00007414 00000000                          10671          DC    Q(@@STATIC)
00007418 00000000                          10672          DC    X'00000000'
0000741C 00000200                          10673          DC    X'00000200'
00007420 0000000000006CE8                  10674          DC    ADL8(@DATA)
00007428 00000000                          10675          DC    X'00000000'
0000742C 000002C2                          10676          DC    X'000002C2'
                                           10677 *
00007430 0D                                10678          DC    XL1'D'
00007431 000000                            10679          DC    AL3(0)
00007434 00000280                          10680          DC    AL4(640)
00007438 00000000                          10681          DC    4X'00'
0000743C 00000000                          10682          DC    Q(@@STATIC)
00007440 00000000                          10683          DC    X'00000000'
00007444 00000208                          10684          DC    X'00000208'
00007448 0000000000006CE8                  10685          DC    ADL8(@DATA)
00007450 00000000                          10686          DC    X'00000000'
00007454 000002CE                          10687          DC    X'000002CE'
                                           10688 *
00007458 0D                                10689          DC    XL1'D'
00007459 000000                            10690          DC    AL3(0)
0000745C 000002A8                          10691          DC    AL4(680)
00007460 00000000                          10692          DC    4X'00'
                                                                                                                           Page  214 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007464 00000000                          10693          DC    Q(@@STATIC)
00007468 00000000                          10694          DC    X'00000000'
0000746C 00000210                          10695          DC    X'00000210'
00007470 0000000000006CE8                  10696          DC    ADL8(@DATA)
00007478 00000000                          10697          DC    X'00000000'
0000747C 000002DC                          10698          DC    X'000002DC'
                                           10699 *
00007480 0D                                10700          DC    XL1'D'
00007481 000000                            10701          DC    AL3(0)
00007484 000002D0                          10702          DC    AL4(720)
00007488 00000000                          10703          DC    4X'00'
0000748C 00000000                          10704          DC    Q(@@STATIC)
00007490 00000000                          10705          DC    X'00000000'
00007494 00000218                          10706          DC    X'00000218'
00007498 0000000000006CE8                  10707          DC    ADL8(@DATA)
000074A0 00000000                          10708          DC    X'00000000'
000074A4 000002F8                          10709          DC    X'000002F8'
                                           10710 *
000074A8 0D                                10711          DC    XL1'D'
000074A9 000000                            10712          DC    AL3(0)
000074AC 000002F8                          10713          DC    AL4(760)
000074B0 00000000                          10714          DC    4X'00'
000074B4 00000000                          10715          DC    Q(@@STATIC)
000074B8 00000000                          10716          DC    X'00000000'
000074BC 00000220                          10717          DC    X'00000220'
000074C0 0000000000006CE8                  10718          DC    ADL8(@DATA)
000074C8 00000000                          10719          DC    X'00000000'
000074CC 00000310                          10720          DC    X'00000310'
                                           10721 *
000074D0 0D                                10722          DC    XL1'D'
000074D1 000000                            10723          DC    AL3(0)
000074D4 00000320                          10724          DC    AL4(800)
000074D8 00000000                          10725          DC    4X'00'
000074DC 00000000                          10726          DC    Q(@@STATIC)
000074E0 00000000                          10727          DC    X'00000000'
000074E4 00000228                          10728          DC    X'00000228'
000074E8 0000000000006CE8                  10729          DC    ADL8(@DATA)
000074F0 00000000                          10730          DC    X'00000000'
000074F4 00000332                          10731          DC    X'00000332'
                                           10732 *
000074F8 0D                                10733          DC    XL1'D'
000074F9 000000                            10734          DC    AL3(0)
000074FC 00000348                          10735          DC    AL4(840)
00007500 00000000                          10736          DC    4X'00'
00007504 00000000                          10737          DC    Q(@@STATIC)
00007508 00000000                          10738          DC    X'00000000'
0000750C 00000230                          10739          DC    X'00000230'
00007510 0000000000006CE8                  10740          DC    ADL8(@DATA)
00007518 00000000                          10741          DC    X'00000000'
0000751C 00000352                          10742          DC    X'00000352'
                                           10743 *
00007520 0D                                10744          DC    XL1'D'
                                                                                                                           Page  215 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007521 000000                            10745          DC    AL3(0)
00007524 00000370                          10746          DC    AL4(880)
00007528 00000000                          10747          DC    4X'00'
0000752C 00000000                          10748          DC    Q(@@STATIC)
00007530 00000000                          10749          DC    X'00000000'
00007534 00000238                          10750          DC    X'00000238'
00007538 0000000000006CE8                  10751          DC    ADL8(@DATA)
00007540 00000000                          10752          DC    X'00000000'
00007544 0000036C                          10753          DC    X'0000036C'
                                           10754 *
00007548 0D                                10755          DC    XL1'D'
00007549 000000                            10756          DC    AL3(0)
0000754C 00000398                          10757          DC    AL4(920)
00007550 00000000                          10758          DC    4X'00'
00007554 00000000                          10759          DC    Q(@@STATIC)
00007558 00000000                          10760          DC    X'00000000'
0000755C 00000240                          10761          DC    X'00000240'
00007560 0000000000006CE8                  10762          DC    ADL8(@DATA)
00007568 00000000                          10763          DC    X'00000000'
0000756C 00000388                          10764          DC    X'00000388'
                                           10765 *
00007570 0D                                10766          DC    XL1'D'
00007571 000000                            10767          DC    AL3(0)
00007574 000003C0                          10768          DC    AL4(960)
00007578 00000000                          10769          DC    4X'00'
0000757C 00000000                          10770          DC    Q(@@STATIC)
00007580 00000000                          10771          DC    X'00000000'
00007584 00000248                          10772          DC    X'00000248'
00007588 0000000000006CE8                  10773          DC    ADL8(@DATA)
00007590 00000000                          10774          DC    X'00000000'
00007594 000003A0                          10775          DC    X'000003A0'
                                           10776 *
00007598 0D                                10777          DC    XL1'D'
00007599 000000                            10778          DC    AL3(0)
0000759C 000003E8                          10779          DC    AL4(1000)
000075A0 00000000                          10780          DC    4X'00'
000075A4 00000000                          10781          DC    Q(@@STATIC)
000075A8 00000000                          10782          DC    X'00000000'
000075AC 00000250                          10783          DC    X'00000250'
000075B0 0000000000006CE8                  10784          DC    ADL8(@DATA)
000075B8 00000000                          10785          DC    X'00000000'
000075BC 000003B8                          10786          DC    X'000003B8'
                                           10787 *
000075C0 0D                                10788          DC    XL1'D'
000075C1 000000                            10789          DC    AL3(0)
000075C4 00000410                          10790          DC    AL4(1040)
000075C8 00000000                          10791          DC    4X'00'
000075CC 00000000                          10792          DC    Q(@@STATIC)
000075D0 00000000                          10793          DC    X'00000000'
000075D4 00000258                          10794          DC    X'00000258'
000075D8 0000000000006CE8                  10795          DC    ADL8(@DATA)
000075E0 00000000                          10796          DC    X'00000000'
                                                                                                                           Page  216 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000075E4 000003D0                          10797          DC    X'000003D0'
                                           10798 *
000075E8 0D                                10799          DC    XL1'D'
000075E9 000000                            10800          DC    AL3(0)
000075EC 00000438                          10801          DC    AL4(1080)
000075F0 00000000                          10802          DC    4X'00'
000075F4 00000000                          10803          DC    Q(@@STATIC)
000075F8 00000000                          10804          DC    X'00000000'
000075FC 00000260                          10805          DC    X'00000260'
00007600 0000000000006CE8                  10806          DC    ADL8(@DATA)
00007608 00000000                          10807          DC    X'00000000'
0000760C 000003EA                          10808          DC    X'000003EA'
                                           10809 *
00007610 0D                                10810          DC    XL1'D'
00007611 000000                            10811          DC    AL3(0)
00007614 00000460                          10812          DC    AL4(1120)
00007618 00000000                          10813          DC    4X'00'
0000761C 00000000                          10814          DC    Q(@@STATIC)
00007620 00000000                          10815          DC    X'00000000'
00007624 00000268                          10816          DC    X'00000268'
00007628 0000000000006CE8                  10817          DC    ADL8(@DATA)
00007630 00000000                          10818          DC    X'00000000'
00007634 00000408                          10819          DC    X'00000408'
                                           10820 *
00007638 0D                                10821          DC    XL1'D'
00007639 000000                            10822          DC    AL3(0)
0000763C 00000488                          10823          DC    AL4(1160)
00007640 00000000                          10824          DC    4X'00'
00007644 00000000                          10825          DC    Q(@@STATIC)
00007648 00000000                          10826          DC    X'00000000'
0000764C 00000270                          10827          DC    X'00000270'
00007650 0000000000006CE8                  10828          DC    ADL8(@DATA)
00007658 00000000                          10829          DC    X'00000000'
0000765C 00000420                          10830          DC    X'00000420'
                                           10831 *
00007660 0D                                10832          DC    XL1'D'
00007661 000000                            10833          DC    AL3(0)
00007664 000004B0                          10834          DC    AL4(1200)
00007668 00000000                          10835          DC    4X'00'
0000766C 00000000                          10836          DC    Q(@@STATIC)
00007670 00000000                          10837          DC    X'00000000'
00007674 00000278                          10838          DC    X'00000278'
00007678 0000000000006CE8                  10839          DC    ADL8(@DATA)
00007680 00000000                          10840          DC    X'00000000'
00007684 00000436                          10841          DC    X'00000436'
                                           10842 *
00007688 0D                                10843          DC    XL1'D'
00007689 000000                            10844          DC    AL3(0)
0000768C 000004D8                          10845          DC    AL4(1240)
00007690 00000000                          10846          DC    4X'00'
00007694 00000000                          10847          DC    Q(@@STATIC)
00007698 00000000                          10848          DC    X'00000000'
                                                                                                                           Page  217 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000769C 00000280                          10849          DC    X'00000280'
000076A0 0000000000006CE8                  10850          DC    ADL8(@DATA)
000076A8 00000000                          10851          DC    X'00000000'
000076AC 0000044A                          10852          DC    X'0000044A'
                                           10853 *
000076B0 0D                                10854          DC    XL1'D'
000076B1 000000                            10855          DC    AL3(0)
000076B4 00000500                          10856          DC    AL4(1280)
000076B8 00000000                          10857          DC    4X'00'
000076BC 00000000                          10858          DC    Q(@@STATIC)
000076C0 00000000                          10859          DC    X'00000000'
000076C4 00000288                          10860          DC    X'00000288'
000076C8 0000000000006CE8                  10861          DC    ADL8(@DATA)
000076D0 00000000                          10862          DC    X'00000000'
000076D4 00000464                          10863          DC    X'00000464'
                                           10864 *
000076D8 0D                                10865          DC    XL1'D'
000076D9 000000                            10866          DC    AL3(0)
000076DC 00000528                          10867          DC    AL4(1320)
000076E0 00000000                          10868          DC    4X'00'
000076E4 00000000                          10869          DC    Q(@@STATIC)
000076E8 00000000                          10870          DC    X'00000000'
000076EC 00000290                          10871          DC    X'00000290'
000076F0 0000000000006CE8                  10872          DC    ADL8(@DATA)
000076F8 00000000                          10873          DC    X'00000000'
000076FC 00000482                          10874          DC    X'00000482'
                                           10875 *
00007700 0D                                10876          DC    XL1'D'
00007701 000000                            10877          DC    AL3(0)
00007704 00000550                          10878          DC    AL4(1360)
00007708 00000000                          10879          DC    4X'00'
0000770C 00000000                          10880          DC    Q(@@STATIC)
00007710 00000000                          10881          DC    X'00000000'
00007714 00000298                          10882          DC    X'00000298'
00007718 0000000000006CE8                  10883          DC    ADL8(@DATA)
00007720 00000000                          10884          DC    X'00000000'
00007724 000004A0                          10885          DC    X'000004A0'
                                           10886 *
00007728 0D                                10887          DC    XL1'D'
00007729 000000                            10888          DC    AL3(0)
0000772C 00000578                          10889          DC    AL4(1400)
00007730 00000000                          10890          DC    4X'00'
00007734 00000000                          10891          DC    Q(@@STATIC)
00007738 00000000                          10892          DC    X'00000000'
0000773C 000002A0                          10893          DC    X'000002A0'
00007740 0000000000006CE8                  10894          DC    ADL8(@DATA)
00007748 00000000                          10895          DC    X'00000000'
0000774C 000004C4                          10896          DC    X'000004C4'
                                           10897 *
00007750 0D                                10898          DC    XL1'D'
00007751 000000                            10899          DC    AL3(0)
00007754 00000000                          10900          DC    AL4(0)
                                                                                                                           Page  218 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007758 00000000                          10901          DC    4X'00'
0000775C 00000000                          10902          DC    Q(@@STATIC)
00007760 00000000                          10903          DC    X'00000000'
00007764 000002A8                          10904          DC    X'000002A8'
00007768 0000000000006CE8                  10905          DC    ADL8(@DATA)
00007770 00000000                          10906          DC    X'00000000'
00007774 000004D2                          10907          DC    X'000004D2'
                                           10908 *
                                           10909          END
                                                 Relocation Dictionary                                                     Page  219 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 0000001D 00000150   A 4      +
 00000002 00000015 00000158   A 4      +
 00000002 00000021 00000160   A 4      +
 00000002 00000021 00000168   A 4      +
 00000002 00000002 00000188   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 00000002 000001B8   A 4      +
 00000002 00000006 000002B8   A 4      +
 00000002 00000015 000002C0   A 4      +
 00000002 00000021 000002C8   A 4      +
 00000002 00000021 000002D0   A 4      +
 00000002 00000002 000002F0   A 4      +
 00000002 00000002 00000318   A 4      +
 00000002 00000002 00000320   A 4      +
 00000002 0000001E 000003D8   A 4      +
 00000002 00000002 00000428   A 4      +
 00000002 00000002 00000430   A 4      +
 00000002 00000002 000004D0   A 4      +
 00000002 00000002 000004D8   A 4      +
 00000002 00000002 00000568   A 4      +
 00000002 00000002 00000570   A 4      +
 00000002 00000002 00000658   A 4      +
 00000002 00000002 00000660   A 4      +
 00000002 00000002 00000720   A 4      +
 00000002 00000002 00000728   A 4      +
 00000002 00000002 000007A0   A 4      +
 00000002 00000002 000007C8   A 4      +
 00000002 00000002 000007D0   A 4      +
 00000002 00000002 00000878   A 4      +
 00000002 00000020 00000880   Q 4      +
 00000002 00000002 00000900   A 4      +
 00000002 00000002 00000928   A 4      +
 00000002 00000002 00000930   A 4      +
 00000002 00000002 000009B0   A 4      +
 00000002 00000002 00000A48   A 4      +
 00000002 00000002 00000A50   A 4      +
 00000002 00000002 00000AC0   A 4      +
 00000002 00000002 00000AC8   A 4      +
 00000002 00000002 00000B40   A 4      +
 00000002 00000002 00000B48   A 4      +
 00000002 00000002 00000B90   A 4      +
 00000002 00000002 00000BB8   A 4      +
 00000002 00000002 00000BC0   A 4      +
 00000002 00000002 00000C50   A 4      +
 00000002 00000021 00000C58   A 4      +
 00000002 00000002 00000CE8   A 4      +
 00000002 00000002 00000D10   A 4      +
 00000002 00000002 00000D18   A 4      +
 00000002 00000007 00000DF0   A 4      +
 00000002 00000002 00000E48   A 4      +
                                                 Relocation Dictionary                                                     Page  220 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000E50   A 4      +
 00000002 00000002 00000EE0   A 4      +
 00000002 00000002 00000F08   A 4      +
 00000002 00000002 00000F10   A 4      +
 00000002 00000002 00000F98   A 4      +
 00000002 00000021 00000FA0   A 4      +
 00000002 00000002 00001100   A 4      +
 00000002 00000002 00001128   A 4      +
 00000002 00000002 00001130   A 4      +
 00000002 00000021 000011B0   A 4      +
 00000002 00000002 000011B8   A 4      +
 00000002 00000002 00001278   A 4      +
 00000002 00000002 000012A0   A 4      +
 00000002 00000002 000012A8   A 4      +
 00000002 00000002 00001340   A 4      +
 00000002 00000002 00001348   A 4      +
 00000002 00000002 00001350   A 4      +
 00000002 00000002 00001358   A 4      +
 00000002 00000002 00001360   A 4      +
 00000002 00000002 00001368   A 4      +
 00000002 00000015 00001370   A 4      +
 00000002 00000021 00001378   A 4      +
 00000002 00000021 00001380   A 4      +
 00000002 00000002 00001388   A 4      +
 00000002 00000002 00001390   A 4      +
 00000002 00000002 000016A8   A 4      +
 00000002 00000002 000016D0   A 4      +
 00000002 00000002 000016D8   A 4      +
 00000002 00000014 00001878   A 4      +
 00000002 00000002 00001880   A 4      +
 00000002 00000002 00001888   A 4      +
 00000002 00000002 000018B0   A 4      +
 00000002 00000002 000018D8   A 4      +
 00000002 00000002 000018E0   A 4      +
 00000002 00000002 00001970   A 4      +
 00000002 0000000B 00001978   A 4      +
 00000002 00000016 00001980   A 4      +
 00000002 00000002 00001988   A 4      +
 00000002 0000000E 00001998   A 4      +
 00000002 0000001F 000019A0   A 4      +
 00000002 00000019 000019A8   A 4      +
 00000002 00000002 00001B50   A 4      +
 00000002 00000002 00001B78   A 4      +
 00000002 00000002 00001B80   A 4      +
 00000002 00000002 00001C88   A 4      +
 00000002 0000000C 00001C90   A 4      +
 00000002 00000017 00001C98   A 4      +
 00000002 00000002 00001CD0   A 4      +
 00000002 00000002 00001CF8   A 4      +
 00000002 00000002 00001D00   A 4      +
 00000002 00000002 00001D90   A 4      +
 00000002 00000002 00001D98   A 4      +
 00000002 00000002 00001E30   A 4      +
                                                 Relocation Dictionary                                                     Page  221 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00001E58   A 4      +
 00000002 00000002 00001E60   A 4      +
 00000002 00000002 00001F58   A 4      +
 00000002 00000002 00001F80   A 4      +
 00000002 00000002 00001FA8   A 4      +
 00000002 00000002 00001FB0   A 4      +
 00000002 0000000D 00002050   A 4      +
 00000002 00000013 00002058   A 4      +
 00000002 00000018 00002060   A 4      +
 00000002 00000005 00002068   A 4      +
 00000002 00000002 00002150   A 4      +
 00000002 00000002 00002178   A 4      +
 00000002 00000002 00002180   A 4      +
 00000002 00000021 00002220   A 4      +
 00000002 00000002 00002228   A 4      +
 00000002 00000002 00002230   A 4      +
 00000002 0000000B 00002238   A 4      +
 00000002 00000016 00002240   A 4      +
 00000002 00000014 00002248   A 4      +
 00000002 0000001C 00002250   A 4      +
 00000002 0000001F 00002258   A 4      +
 00000002 00000002 00002260   A 4      +
 00000002 00000002 00002268   A 4      +
 00000002 00000008 00002270   A 4      +
 00000002 00000002 00002278   A 4      +
 00000002 00000003 00002280   A 4      +
 00000002 00000002 00002288   A 4      +
 00000002 00000002 00002290   A 4      +
 00000002 00000002 00002298   A 4      +
 00000002 00000002 00002710   A 4      +
 00000002 00000002 00002738   A 4      +
 00000002 00000002 00002740   A 4      +
 00000002 00000002 00002820   A 4      +
 00000002 00000002 00002848   A 4      +
 00000002 00000002 00002870   A 4      +
 00000002 00000002 00002878   A 4      +
 00000002 00000002 00002910   A 4      +
 00000002 00000002 000029A0   A 4      +
 00000002 00000002 000029C8   A 4      +
 00000002 00000002 000029D0   A 4      +
 00000002 00000021 00002B18   A 4      +
 00000002 00000002 00002B20   A 4      +
 00000002 00000007 00002B30   A 4      +
 00000002 00000002 00002C50   A 4      +
 00000002 00000002 00002C78   A 4      +
 00000002 00000002 00002C80   A 4      +
 00000002 00000002 00002CF8   A 4      +
 00000002 0000000F 00002D00   A 4      +
 00000002 00000012 00002D08   A 4      +
 00000002 00000002 00002E60   A 4      +
 00000002 00000002 00002E88   A 4      +
 00000002 00000002 00002E90   A 4      +
 00000002 0000000F 00002F00   A 4      +
                                                 Relocation Dictionary                                                     Page  222 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00002FD0   A 4      +
 00000002 00000002 00002FF8   A 4      +
 00000002 00000002 00003000   A 4      +
 00000002 00000002 000030E8   A 4      +
 00000002 0000001A 000030F0   A 4      +
 00000002 00000004 000030F8   A 4      +
 00000002 00000002 000031C8   A 4      +
 00000002 00000002 000031F0   A 4      +
 00000002 00000002 000031F8   A 4      +
 00000002 0000001A 000032E8   A 4      +
 00000002 00000002 00003340   A 4      +
 00000002 00000002 00003348   A 4      +
 00000002 00000002 00003380   A 4      +
 00000002 00000002 00003388   A 4      +
 00000002 00000002 00003390   A 4      +
 00000002 00000002 00003398   A 4      +
 00000002 00000002 000033F8   A 4      +
 00000002 00000002 00003420   A 4      +
 00000002 00000002 00003428   A 4      +
 00000002 00000010 000034C8   A 4      +
 00000002 0000001B 000034D0   A 4      +
 00000002 00000002 00003578   A 4      +
 00000002 00000002 000035A0   A 4      +
 00000002 00000002 000035A8   A 4      +
 00000002 00000002 00003688   A 4      +
 00000002 00000002 00003690   A 4      +
 00000002 00000002 00003698   A 4      +
 00000002 00000002 000036B0   A 4      +
 00000002 00000002 000036B8   A 4      +
 00000002 00000009 000036C8   A 4      +
 00000002 00000002 00003B28   A 4      +
 00000002 00000002 00003B50   A 4      +
 00000002 00000002 00003B58   A 4      +
 00000002 00000002 00003BD0   A 4      +
 00000002 00000021 00003BD8   A 4      +
 00000002 00000002 00003BE0   A 4      +
 00000002 00000002 00003BE8   A 4      +
 00000002 00000015 00003BF0   A 4      +
 00000002 00000021 00003BF8   A 4      +
 00000002 00000002 00003C00   A 4      +
 00000002 00000002 00003E18   A 4      +
 00000002 00000002 00003E40   A 4      +
 00000002 00000002 00003E48   A 4      +
 00000002 00000002 00003F00   A 4      +
 00000002 00000002 00003F08   A 4      +
 00000002 00000015 00003F10   A 4      +
 00000002 00000021 00003F18   A 4      +
 00000002 00000021 00003F20   A 4      +
 00000002 00000002 00003F28   A 4      +
 00000002 00000002 00003F30   A 4      +
 00000002 0000000A 00003F38   A 4      +
 00000002 00000002 000040E8   A 4      +
 00000002 00000002 00004110   A 4      +
                                                 Relocation Dictionary                                                     Page  223 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00004118   A 4      +
 00000002 00000002 000041B8   A 4      +
 00000002 00000002 000041C0   A 4      +
 00000002 00000002 00004258   A 4      +
 00000002 00000002 00004280   A 4      +
 00000002 00000002 00004288   A 4      +
 00000002 00000002 00004388   A 4      +
 00000002 00000002 000043E8   A 4      +
 00000002 00000002 000043F0   A 4      +
 00000002 00000002 00004450   A 4      +
 00000002 00000002 00004478   A 4      +
 00000002 00000002 00004480   A 4      +
 00000002 00000021 00004510   A 4      +
 00000002 00000002 00004518   A 4      +
 00000002 00000002 00004520   A 4      +
 00000002 00000015 00004530   A 4      +
 00000002 00000021 00004538   A 4      +
 00000002 00000002 00004540   A 4      +
 00000002 00000002 00004548   A 4      +
 00000002 00000002 00004550   A 4      +
 00000002 00000002 00004920   A 4      +
 00000002 00000002 00004948   A 4      +
 00000002 00000002 00004950   A 4      +
 00000002 00000002 000049D0   A 4      +
 00000002 00000002 000049D8   A 4      +
 00000002 00000021 000049E0   A 4      +
 00000002 00000002 00004B30   A 4      +
 00000002 00000002 00004B58   A 4      +
 00000002 00000002 00004B60   A 4      +
 00000002 00000002 00004C30   A 4      +
 00000002 00000002 00004C38   A 4      +
 00000002 00000002 00004C40   A 4      +
 00000002 00000002 00004C48   A 4      +
 00000002 00000002 00004C50   A 4      +
 00000002 00000021 00004C58   A 4      +
 00000002 00000002 00004DD0   A 4      +
 00000002 00000002 00004DF8   A 4      +
 00000002 00000002 00004E00   A 4      +
 00000002 00000015 00004F28   A 4      +
 00000002 00000021 00004F30   A 4      +
 00000002 00000021 00004F38   A 4      +
 00000002 00000002 00005398   A 4      +
 00000002 00000002 000053C0   A 4      +
 00000002 00000002 000053C8   A 4      +
 00000002 00000015 00005488   A 4      +
 00000002 00000021 00005490   A 4      +
 00000002 00000021 00005498   A 4      +
 00000002 00000002 000054A8   A 4      +
 00000002 00000002 000054B0   A 4      +
 00000002 00000008 000054C0   A 4      +
 00000002 00000002 000054C8   A 4      +
 00000002 00000002 000054D0   A 4      +
 00000002 00000002 000054D8   A 4      +
                                                 Relocation Dictionary                                                     Page  224 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 000054E0   A 4      +
 00000002 00000009 000054F8   A 4      +
 00000002 00000002 00005C88   A 4      +
 00000002 00000021 00005C98   A 4      +
 00000002 00000002 00005CA8   A 4      +
 00000002 0000000A 00005CB0   A 4      +
 00000002 00000002 00005CB8   A 4      +
 00000002 00000015 00005CC0   A 4      +
 00000002 00000021 00005CC8   A 4      +
 00000002 00000007 00005CD0   A 4      +
 00000002 00000011 00005CD8   A 4      +
 00000002 00000009 00005CE0   A 4      +
 00000002 00000002 00005CF0   A 4      +
 00000002 00000002 00006528   A 4      +
 00000002 0000000A 00006530   A 4      +
 00000002 00000002 00006538   A 4      +
 00000002 00000002 00006540   A 4      +
 00000002 00000015 00006550   A 4      +
 00000002 00000021 00006558   A 4      +
 00000002 00000021 00006560   A 4      +
 00000002 00000002 00006B98   A 4      +
 00000002 00000002 00006BC0   A 4      +
 00000002 00000002 00006BC8   A 4      +
 00000002 00000002 00006CE0   A 4      +
 00000022 00000020 000071E4   Q 4      +
 00000022 00000020 00007304   Q 4      +
 00000022 00000020 000073C4   Q 4      +
 00000022 00000020 000073EC   Q 4      +
 00000022 00000020 00007414   Q 4      +
 00000022 00000021 00007420   A 4      +
 00000022 00000020 0000743C   Q 4      +
 00000022 00000021 00007448   A 4      +
 00000022 00000020 00007464   Q 4      +
 00000022 00000021 00007470   A 4      +
 00000022 00000020 0000748C   Q 4      +
 00000022 00000021 00007498   A 4      +
 00000022 00000020 000074B4   Q 4      +
 00000022 00000021 000074C0   A 4      +
 00000022 00000020 000074DC   Q 4      +
 00000022 00000021 000074E8   A 4      +
 00000022 00000020 00007504   Q 4      +
 00000022 00000021 00007510   A 4      +
 00000022 00000020 0000752C   Q 4      +
 00000022 00000021 00007538   A 4      +
 00000022 00000020 00007554   Q 4      +
 00000022 00000021 00007560   A 4      +
 00000022 00000020 0000757C   Q 4      +
 00000022 00000021 00007588   A 4      +
 00000022 00000020 000075A4   Q 4      +
 00000022 00000021 000075B0   A 4      +
 00000022 00000020 000075CC   Q 4      +
 00000022 00000021 000075D8   A 4      +
 00000022 00000020 000075F4   Q 4      +
                                                 Relocation Dictionary                                                     Page  225 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000022 00000021 00007600   A 4      +
 00000022 00000020 0000761C   Q 4      +
 00000022 00000021 00007628   A 4      +
 00000022 00000020 00007644   Q 4      +
 00000022 00000021 00007650   A 4      +
 00000022 00000020 0000766C   Q 4      +
 00000022 00000021 00007678   A 4      +
 00000022 00000020 00007694   Q 4      +
 00000022 00000021 000076A0   A 4      +
 00000022 00000020 000076BC   Q 4      +
 00000022 00000021 000076C8   A 4      +
 00000022 00000020 000076E4   Q 4      +
 00000022 00000021 000076F0   A 4      +
 00000022 00000020 0000770C   Q 4      +
 00000022 00000021 00007718   A 4      +
 00000022 00000020 00007734   Q 4      +
 00000022 00000021 00007740   A 4      +
 00000022 00000020 0000775C   Q 4      +
 00000022 00000021 00007768   A 4      +
                                                 DSECT Cross Reference                                                     Page  226 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#$L$Z4$F_compress$Begin
         000000A8  FFFFFFE5  04054
@AUTO#$L$Z4$F_compress$Begin_using$C$Dict
         000000E2  FFFFFFE6  03935
@AUTO#$L$Z4$F_compress$Block
         000000AC  FFFFFFE2  04568
@AUTO#$L$Z4$F_compress$Block$H$C
         000000A8  FFFFFFE0  04848
@AUTO#$L$Z4$F_compress$Block$H$C_continue
         000000A8  FFFFFFDF  04961
@AUTO#$L$Z4$F_compress$Block_continue
         000000AC  FFFFFFE1  04694
@AUTO#$L$Z4$F_compress$Bound
         000000A8  FFFFFFE4  04182
@AUTO#$L$Z4$F_compress$Bound_internal
         000000E0  FFFFFFEF  01886
@AUTO#$L$Z4$F_compress$End
         000000B0  FFFFFFDA  06219
@AUTO#$L$Z4$F_compress$Frame
         00004210  FFFFFFEC  02605
@AUTO#$L$Z4$F_compress$Frame$Bound
         000000E0  FFFFFFEE  02043
@AUTO#$L$Z4$F_compress$Frame_using$C$Dict
         000000F0  FFFFFFED  02401
@AUTO#$L$Z4$F_compress$Update
         000000B8  FFFFFFDC  05698
@AUTO#$L$Z4$F_compression$Level_max
         000000A8  FFFFFFF3  01340
@AUTO#$L$Z4$F_create$C$Dict
         000000A8  FFFFFFEB  02839
@AUTO#$L$Z4$F_create$Compression$Context
         000000A8  FFFFFFE9  03108
@AUTO#$L$Z4$F_create$Decompression$Context
         000000A8  FFFFFFD9  06356
@AUTO#$L$Z4$F_decode$Header
         000000B0  FFFFFFD6  07041
@AUTO#$L$Z4$F_decompress
         000000B8  FFFFFFD2  10269
@AUTO#$L$Z4$F_decompress_using$Dict
         000000A8  FFFFFFD1  10477
@AUTO#$L$Z4$F_flush
         000000AC  FFFFFFDB  05965
@AUTO#$L$Z4$F_free$C$Dict
         000000A8  FFFFFFEA  02975
@AUTO#$L$Z4$F_free$Compression$Context
         000000A8  FFFFFFE8  03237
@AUTO#$L$Z4$F_free$Decompression$Context
         000000B0  FFFFFFD8  06488
@AUTO#$L$Z4$F_get$Block$Size
         000000A8  FFFFFFF2  01469
@AUTO#$L$Z4$F_get$Error$Code
         000000A8  FFFFFFF6  01126
@AUTO#$L$Z4$F_get$Error$Name
                                                 DSECT Cross Reference                                                     Page  227 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
         000000A8  FFFFFFF7  01011
@AUTO#$L$Z4$F_get$Frame$Info
         000000B8  FFFFFFD4  07507
@AUTO#$L$Z4$F_get$Version
         000000A8  FFFFFFF4  01270
@AUTO#$L$Z4$F_header$Checksum
         000000AC  FFFFFFF1  01578
@AUTO#$L$Z4$F_header$Size
         000000AC  FFFFFFD5  07263
@AUTO#$L$Z4$F_init$Stream
         000000A8  FFFFFFE7  03403
@AUTO#$L$Z4$F_is$Error
         000000A8  FFFFFFF8  00885
@AUTO#$L$Z4$F_local$Save$Dict
         000000A8  FFFFFFDD  05192
@AUTO#$L$Z4$F_make$Block
         000000AC  FFFFFFE3  04400
@AUTO#$L$Z4$F_optimal$B$S$I$D
         000000B0  FFFFFFF0  01679
@AUTO#$L$Z4$F_read$L$E32
         000000AC  FFFFFFFC  00516
@AUTO#$L$Z4$F_read$L$E64
         000000B0  FFFFFFFA  00704
@AUTO#$L$Z4$F_reset$Decompression$Context
         000000A8  FFFFFFD7  06568
@AUTO#$L$Z4$F_select$Compression
         000000A8  FFFFFFDE  05062
@AUTO#$L$Z4$F_update$Dict
         000000B0  FFFFFFD3  07995
@AUTO#$L$Z4$F_write$L$E32
         000000A8  FFFFFFFB  00602
@AUTO#$L$Z4$F_write$L$E64
         000000A8  FFFFFFF9  00800
@AUTO#err0r
         000000A8  FFFFFFF5  01200
@AUTO#rd_calloc
         000000A8  FFFFFFFF  00200
@AUTO#rd_free
         000000A8  FFFFFFFD  00430
@AUTO#rd_malloc
         000000A8  FFFFFFFE  00327
                                          Macro and Copy Code Source Summary                                               Page  228 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:35 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  229 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   135  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00110    162 @REGION_751_1,12
   195  00000170  00000002 DROP                                           12              12
   263  00000206  00000002 USING  ORDINARY    000001C8 00001000 00000002  12 00108    289 @REGION_752_1,12
   322  000002D8  00000002 DROP                                           12              12
   390  0000036E  00000002 USING  ORDINARY    00000330 00001000 00000002  12 000A8    397 @REGION_754_1,12
   425  000003E0  00000002 DROP                                           12              12
   854  00000742  00000002 USING  ORDINARY    00000738 00001000 00000002  12 00034    862 @REGION_759_1,12
   880  0000077E  00000002 DROP                                           12              12
   950  0000081E  00000002 USING  ORDINARY    000007E0 00001000 00000002  12 000B4    982 @REGION_760_1,12
  1006  000008DC  00000002 DROP                                           12              12
  1076  0000097E  00000002 USING  ORDINARY    00000940 00001000 00000002  12 00086   1091 @REGION_778_1,12
  1121  00000A0E  00000002 DROP                                           12              12
  1405  00000C0E  00000002 USING  ORDINARY    00000BD0 00001000 00000002  12 000AA   1440 @REGION_779_1,12
  1464  00000CC2  00000002 DROP                                           12              12
  1532  00000D66  00000002 USING  ORDINARY    00000D28 00001000 00000002  12 000D0   1548 @REGION_886_1,12
  1573  00000E00  00000002 DROP                                           12              12
  1631  00000E6A  00000002 USING  ORDINARY    00000E60 00001000 00000002  12 0004A   1659 @REGION_887_1,12
  1674  00000EB8  00000002 DROP                                           12              12
  1745  00000F5E  00000002 USING  ORDINARY    00000F20 00001000 00000002  12 0011C   1837 @REGION_888_1,12
  1881  000010D8  00000002 DROP                                           12              12
  1976  0000117E  00000002 USING  ORDINARY    00001140 00001000 00000002  12 0008A   2012 @REGION_762_1,12
  2038  0000124C  00000002 DROP                                           12              12
  2111  000012F6  00000002 USING  ORDINARY    000012B8 00001000 00000002  12 00384   2367 @REGION_782_1,12
  2396  00001684  00000002 DROP                                           12              12
  2475  00001726  00000002 USING  ORDINARY    000016E8 00001000 00000002  12 001A0   2566 @REGION_763_1,12
  2600  00001890  00000002 DROP                                           12              12
  2675  0000192E  00000002 USING  ORDINARY    000018F0 00001000 00000002  12 001FA   2807 @REGION_780_1,12
  2834  00001B32  00000002 DROP                                           12              12
  2904  00001BCE  00000002 USING  ORDINARY    00001B90 00001000 00000002  12 00108   2933 @REGION_781_1,12
  2970  00001CA0  00000002 DROP                                           12              12
  3040  00001D4E  00000002 USING  ORDINARY    00001D10 00001000 00000002  12 000AE   3063 @REGION_765_1,12
  3103  00001E06  00000002 DROP                                           12              12
  3173  00001EAE  00000002 USING  ORDINARY    00001E70 00001000 00000002  12 000E8   3184 @REGION_766_1,12
  3232  00001F60  00000002 DROP                                           12              12
  3300  00001FFE  00000002 USING  ORDINARY    00001FC0 00001000 00000002  12 0011C   3371 @REGION_889_1,12
  3398  00002124  00000002 DROP                                           12              12
  3468  000021CE  00000002 USING  ORDINARY    00002190 00001000 00000002  12 00516   3897 @REGION_783_1,12
  3930  000026EE  00000002 DROP                                           12              12
  4005  0000278E  00000002 USING  ORDINARY    00002750 00001000 00000002  12 000D0   4022 @REGION_767_1,12
  4049  00002828  00000002 DROP                                           12              12
  4119  000028C6  00000002 USING  ORDINARY    00002888 00001000 00000002  12 000B4   4152 @REGION_768_1,12
  4177  00002984  00000002 DROP                                           12              12
  4245  00002A1E  00000002 USING  ORDINARY    000029E0 00001000 00000002  12 001DE   4367 @REGION_890_1,12
  4395  00002C2C  00000002 DROP                                           12              12
  4466  00002CCE  00000002 USING  ORDINARY    00002C90 00001000 00000002  12 00160   4536 @REGION_891_1,12
  4563  00002E38  00000002 DROP                                           12              12
  4632  00002EDE  00000002 USING  ORDINARY    00002EA0 00001000 00000002  12 0006C   4664 @REGION_892_1,12
  4689  00002FAA  00000002 DROP                                           12              12
  4758  0000304E  00000002 USING  ORDINARY    00003010 00001000 00000002  12 00142   4817 @REGION_893_1,12
  4843  0000319A  00000002 DROP                                           12              12
  4911  00003246  00000002 USING  ORDINARY    00003208 00001000 00000002  12 000E0   4928 @REGION_894_1,12
                                                      Using Map                                                            Page  230 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  4956  000032F0  00000002 DROP                                           12              12
  5013  00003362  00000002 USING  ORDINARY    00003358 00001000 00000002  12 0006C   5044 @REGION_895_1,12
  5057  000033D2  00000002 DROP                                           12              12
  5125  00003476  00000002 USING  ORDINARY    00003438 00001000 00000002  12 000D4   5161 @REGION_896_1,12
  5187  00003554  00000002 DROP                                           12              12
  5257  000035F6  00000002 USING  ORDINARY    000035B8 00001000 00000002  12 0050C   5659 @REGION_769_1,12
  5693  00003B0C  00000002 DROP                                           12              12
  5776  00003BA6  00000002 USING  ORDINARY    00003B68 00001000 00000002  12 00246   5924 @REGION_770_1,12
  5960  00003DF6  00000002 DROP                                           12              12
  6031  00003E96  00000002 USING  ORDINARY    00003E58 00001000 00000002  12 00216   6186 @REGION_771_1,12
  6214  000040B6  00000002 DROP                                           12              12
  6287  00004166  00000002 USING  ORDINARY    00004128 00001000 00000002  12 000B8   6314 @REGION_772_1,12
  6351  00004228  00000002 DROP                                           12              12
  6421  000042D6  00000002 USING  ORDINARY    00004298 00001000 00000002  12 000F0   6436 @REGION_773_1,12
  6483  00004390  00000002 DROP                                           12              12
  6631  000044CE  00000002 USING  ORDINARY    00004490 00001000 00000002  12 0042A   7003 @REGION_897_1,12
  7036  00004902  00000002 DROP                                           12              12
  7127  0000499E  00000002 USING  ORDINARY    00004960 00001000 00000002  12 00168   7229 @REGION_774_1,12
  7258  00004B10  00000002 DROP                                           12              12
  7333  00004BAE  00000002 USING  ORDINARY    00004B70 00001000 00000002  12 001FC   7471 @REGION_775_1,12
  7502  00004DB4  00000002 DROP                                           12              12
  7577  00004E4E  00000002 USING  ORDINARY    00004E10 00001000 00000002  12 00524   7960 @REGION_898_1,12
  7990  0000537C  00000002 DROP                                           12              12
  8067  00005416  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 001DE   8175 @REGION_776_1,12
  8176  000055B2  00000002 DROP                                           12              12
  8177  000055B2  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8178 @REGION_776_3,12
  8179  000055B6  00000002 DROP                                           12              12
  8180  000055B6  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 000C8   8201 @REGION_776_1,12
  8202  000055F8  00000002 DROP                                           12              12
  8203  000055F8  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8204 @REGION_776_3,12
  8205  000055FC  00000002 DROP                                           12              12
  8206  000055FC  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 00294   8242 @REGION_776_1,12
  8243  0000565A  00000002 DROP                                           12              12
  8244  0000565A  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   8245 @REGION_776_3,12
  8246  0000565E  00000002 DROP                                           12              12
  8247  0000565E  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 000C8   8252 @REGION_776_1,12
  8253  00005668  00000002 DROP                                           12              12
  8254  00005668  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8255 @REGION_776_3,12
  8256  0000566C  00000002 DROP                                           12              12
  8257  0000566C  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 002BA   8268 @REGION_776_1,12
  8269  0000568E  00000002 DROP                                           12              12
  8270  0000568E  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   8271 @REGION_776_3,12
  8272  00005692  00000002 DROP                                           12              12
  8273  00005692  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 0038E   8341 @REGION_776_1,12
  8342  00005762  00000002 DROP                                           12              12
  8343  00005762  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8344 @REGION_776_3,12
  8345  00005766  00000002 DROP                                           12              12
  8346  00005766  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 003DC   8371 @REGION_776_1,12
  8372  000057B0  00000002 DROP                                           12              12
  8373  000057B0  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8374 @REGION_776_3,12
  8375  000057B4  00000002 DROP                                           12              12
  8376  000057B4  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 000C8   8378 @REGION_776_1,12
  8379  000057BE  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  231 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  8380  000057BE  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   8381 @REGION_776_3,12
  8382  000057C2  00000002 DROP                                           12              12
  8383  000057C2  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 00506   8454 @REGION_776_1,12
  8455  00005880  00000002 DROP                                           12              12
  8456  00005880  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   8457 @REGION_776_3,12
  8458  00005884  00000002 DROP                                           12              12
  8459  00005884  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 00500   8489 @REGION_776_1,12
  8490  000058D4  00000002 DROP                                           12              12
  8491  000058D4  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   8492 @REGION_776_3,12
  8493  000058D8  00000002 DROP                                           12              12
  8494  000058D8  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 00628   8601 @REGION_776_1,12
  8602  000059F6  00000002 DROP                                           12              12
  8603  000059F6  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8604 @REGION_776_3,12
  8605  000059FA  00000002 DROP                                           12              12
  8606  000059FA  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 00674   8642 @REGION_776_1,12
  8643  00005A48  00000002 DROP                                           12              12
  8644  00005A48  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8645 @REGION_776_3,12
  8646  00005A4C  00000002 DROP                                           12              12
  8647  00005A4C  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 0069A   8661 @REGION_776_1,12
  8662  00005A6E  00000002 DROP                                           12              12
  8663  00005A6E  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   8664 @REGION_776_3,12
  8665  00005A72  00000002 DROP                                           12              12
  8666  00005A72  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 006E2   8695 @REGION_776_1,12
  8696  00005AB6  00000002 DROP                                           12              12
  8697  00005AB6  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8698 @REGION_776_3,12
  8699  00005ABA  00000002 DROP                                           12              12
  8700  00005ABA  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 00716   8716 @REGION_776_1,12
  8717  00005AEA  00000002 DROP                                           12              12
  8718  00005AEA  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8719 @REGION_776_3,12
  8720  00005AEE  00000002 DROP                                           12              12
  8721  00005AEE  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 000C8   8733 @REGION_776_1,12
  8734  00005B06  00000002 DROP                                           12              12
  8735  00005B06  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8736 @REGION_776_3,12
  8737  00005B0A  00000002 DROP                                           12              12
  8738  00005B0A  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 00748   8751 @REGION_776_1,12
  8752  00005B1C  00000002 DROP                                           12              12
  8753  00005B1C  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 0002E   8754 @REGION_776_2,12
  8755  00005B20  00000002 DROP                                           12              12
  8756  00005B20  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 00836   8834 @REGION_776_1,12
  8835  00005C0A  00000002 DROP                                           12              12
  8836  00005C0A  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 00000   8837 @REGION_776_2,12
  8838  00005C0E  00000002 DROP                                           12              12
  8839  00005C0E  00000002 USING  ORDINARY    000053D8 00001000 00000002  12 00110   8845 @REGION_776_1,12
  8847  00005C24  00000002 DROP                                           12              12
  8848  00005C24  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 000E4   8887 @REGION_776_2,12
  8888  00005C80  00000002 DROP                                           12              12
  8889  00005C80  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8890 @REGION_776_3,12
  8891  00005C84  00000002 DROP                                           12              12
  8892  00005C84  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 0006C   8914 @REGION_776_2,12
  8915  00005D04  00000002 DROP                                           12              12
  8916  00005D04  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8917 @REGION_776_3,12
  8918  00005D08  00000002 DROP                                           12              12
  8919  00005D08  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 00116   8946 @REGION_776_2,12
                                                      Using Map                                                            Page  232 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  8947  00005D54  00000002 DROP                                           12              12
  8948  00005D54  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   8949 @REGION_776_3,12
  8950  00005D58  00000002 DROP                                           12              12
  8951  00005D58  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 001F4   9021 @REGION_776_2,12
  9022  00005E10  00000002 DROP                                           12              12
  9023  00005E10  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   9024 @REGION_776_3,12
  9025  00005E14  00000002 DROP                                           12              12
  9026  00005E14  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 00240   9065 @REGION_776_2,12
  9066  00005E60  00000002 DROP                                           12              12
  9067  00005E60  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   9068 @REGION_776_3,12
  9069  00005E64  00000002 DROP                                           12              12
  9070  00005E64  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 0006C   9081 @REGION_776_2,12
  9082  00005E70  00000002 DROP                                           12              12
  9083  00005E70  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   9084 @REGION_776_3,12
  9085  00005E74  00000002 DROP                                           12              12
  9086  00005E74  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 00278   9101 @REGION_776_2,12
  9102  00005E98  00000002 DROP                                           12              12
  9103  00005E98  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   9104 @REGION_776_3,12
  9105  00005E9C  00000002 DROP                                           12              12
  9106  00005E9C  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 0036A   9188 @REGION_776_2,12
  9189  00005F84  00000002 DROP                                           12              12
  9190  00005F84  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   9191 @REGION_776_3,12
  9192  00005F88  00000002 DROP                                           12              12
  9193  00005F88  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 0042C   9264 @REGION_776_2,12
  9265  0000604C  00000002 DROP                                           12              12
  9266  0000604C  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   9267 @REGION_776_3,12
  9268  00006050  00000002 DROP                                           12              12
  9269  00006050  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 005B2   9354 @REGION_776_2,12
  9355  00006134  00000002 DROP                                           12              12
  9356  00006134  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   9357 @REGION_776_3,12
  9358  00006138  00000002 DROP                                           12              12
  9359  00006138  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 0059A   9415 @REGION_776_2,12
  9416  000061D2  00000002 DROP                                           12              12
  9417  000061D2  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   9418 @REGION_776_3,12
  9419  000061D6  00000002 DROP                                           12              12
  9420  000061D6  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 00700   9536 @REGION_776_2,12
  9537  00006320  00000002 DROP                                           12              12
  9538  00006320  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   9539 @REGION_776_3,12
  9540  00006324  00000002 DROP                                           12              12
  9541  00006324  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 00858   9657 @REGION_776_2,12
  9658  00006478  00000002 DROP                                           12              12
  9659  00006478  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   9660 @REGION_776_3,12
  9661  0000647C  00000002 DROP                                           12              12
  9662  0000647C  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 00074   9672 @REGION_776_2,12
  9673  00006492  00000002 DROP                                           12              12
  9674  00006492  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   9675 @REGION_776_3,12
  9676  00006496  00000002 DROP                                           12              12
  9677  00006496  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 00898   9691 @REGION_776_2,12
  9692  000064B8  00000002 DROP                                           12              12
  9693  000064B8  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620   9694 @REGION_776_3,12
  9695  000064BC  00000002 DROP                                           12              12
  9696  000064BC  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 008C6   9713 @REGION_776_2,12
  9714  000064E6  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  233 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  9715  000064E6  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0040E   9716 @REGION_776_3,12
  9717  000064EA  00000002 DROP                                           12              12
  9718  000064EA  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 008E0   9726 @REGION_776_2,12
  9727  00006500  00000002 DROP                                           12              12
  9728  00006500  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 0006A   9729 @REGION_776_3,12
  9730  00006504  00000002 DROP                                           12              12
  9731  00006504  00000002 USING  ORDINARY    00005C24 00001000 00000002  12 0006C   9732 @REGION_776_2,12
  9734  0000650A  00000002 DROP                                           12              12
  9735  0000650A  00000002 USING  ORDINARY    0000650A 00001000 00000002  12 00620  10215 @REGION_776_3,12
 10264  00006B72  00000002 DROP                                           12              12
 10415  00006C16  00000002 USING  ORDINARY    00006BD8 00001000 00000002  12 00108  10445 @REGION_784_1,12
 10472  00006CE8  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  234 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  LZ4FRAME ..\asg\asm\lz4frame.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.35.13 Stop Time: 15.35.13 Processor Time: 00.00.00.0690
Return Code 000
