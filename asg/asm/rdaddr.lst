                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdaddr.obj ../asg/asm/rdaddr.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdaddr.obj)  CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

Libraries in Search Order:
                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@@ZARCH#  WX 00000001                              00
@RDADDR   SD 00000002 00000000 00001018            07  @CODE
rd_array_shuffle
          ER 00000003                                  RD_ARRAY_SHUFFLE
snprintf  ER 00000004                                  SNPRINTF
strerror  ER 00000005                                  STRERROR
##ERROR   ER 00000006                                  __ERROR
@@ASSERT  ER 00000007                                  __ASSERT
@@GTAINF  ER 00000008                                  GETADDRINFO
calloc    ER 00000009                                  CALLOC
@@GTNINF  ER 0000000A                                  GETNAMEINFO
freeaddrinfo
          ER 0000000B                                  FREEADDRINFO
@@GAISRR  ER 0000000C                                  GAI_STRERROR
free      ER 0000000D                                  FREE
@rdaddr&  XD 0000000E 00000007 00002348                @@STATIC
@rdaddr   SD 0000000F 00001018 000000D2            07  @DATA
@rdaddr:  SD 00000010 000010F0 00000230            07  @@INIT@
rd_sockaddr2str
          LD          000003A8          00000002   00  RD_SOCKADDR2STR
rd_addrinfo_prepare
          LD          00000868          00000002   00  RD_ADDRINFO_PREPARE
rd_getaddrinfo
          LD          00000B80          00000002   00  RD_GETADDRINFO
rd_sockaddr_list_destroy
          LD          00000F68          00000002   00  RD_SOCKADDR_LIST_DESTROY
                                                                                                                           Page    4 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:35:14 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@RDADDR'
00000000                00000000 00001018     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@rdaddr'
                                              18 rd_array_shuffle ALIAS X'99846D81999981A86DA288A486869385'
                                              19          EXTRN rd_array_shuffle
                                              20 snprintf ALIAS C'snprintf'
                                              21          EXTRN snprintf
                                              22 strerror ALIAS C'strerror'
                                              23          EXTRN strerror
                                              24 __error  ALIAS C'##ERROR'
                                              25          EXTRN __error
                                              26 __assert ALIAS C'@@ASSERT'
                                              27          EXTRN __assert
                                              28 getaddrinfo ALIAS C'@@GTAINF'
                                              29          EXTRN getaddrinfo
                                              30 calloc   ALIAS C'calloc'
                                              31          EXTRN calloc
                                              32 getnameinfo ALIAS C'@@GTNINF'
                                              33          EXTRN getnameinfo
                                              34 freeaddrinfo ALIAS C'freeaddrinfo'
                                              35          EXTRN freeaddrinfo
                                              36 gai_strerror ALIAS C'@@GAISRR'
                                              37          EXTRN gai_strerror
                                              38 free     ALIAS C'free'
                                              39          EXTRN free
                                              40 *
                                              41 *
                                              42 *
                                              43 * ....... start of rd_calloc
00000000                                      44 @LNAME751 DS   0H
00000000 00000009                             45          DC    X'00000009'
00000004 99846D8381939396                     46          DC    C'rd_calloc'
0000000D 00                                   47          DC    X'00'
                                              48 rd_calloc DCCPRLG CINDEX=751,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME751
                                              49          macro
                                              50          dccextrn &m
                                              51          gblc    &$dccext(1000)
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              52          gbla    &$dccexti
                                              53          lcla    &i
                                              54 &$dccext(&$dccexti+1) setc    '&m'
                                              55 &i       seta    1
                                              56 .loop    aif    (&i gt &$dccexti).around
                                              57          aif    ('&$dccext(&i)' eq '&m').getout
                                              58 &i       seta    &i+1
                                              59          ago     .loop
                                              60 .around  anop
                                              61 &$dccexti seta &$dccexti+1
                                              62          extrn  &m
                                              63 .getout  anop
                                              64          mend
00000010                                      65+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                               66+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                   67+         dc xl1'01' format one                                          02-DCCCA
00000014 00000000                             68+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                     69+         dc ad(@PER_751)                                                02-DCCCA
00000020 00000000000000D0                     70+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                     71+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                     72+         dc ad(4096)                                                    02-DCCCA
00000038 20                                   73+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                   74+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                   75+         dc al1(3)                                                      02-DCCCA
0000003B 08                                   76+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                   77+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                               78+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                     79+         dc ad(@LNAME751)                                               02-DCCCA
00000048                                      80+         ds 0d                                                          02-DCCCA
00000048 0000000000000010                     81+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                     82+         dc ad(0)                                                       02-DCCCA
00000058                                      83+         ds    0d                                                       01-DCCPR
00000058                                      84+rd_calloc ds   0d                                                       01-DCCPR
00000058                                      85+@REGION_751_1 ds 0h                                                     01-DCCPR
00000058 EBEC D008 0024          00000008     86+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088     87+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090     88+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                            89+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018     90+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0     91+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020     92+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020     93+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                      94+@PER_751 ds    0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080     95+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090     96+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                            97+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                            98+         lgr   12,15               set base reg                         01-DCCPR
                        00000058              99+         using @REGION_751_1,12                                         01-DCCPR
                                             100 * ******* End of Prologue
                                             101 * *
                                             102 * ***      void *p = calloc(num, sz);
00000096 E3F0 1000 0004          00000000    103          LG    15,0(0,1)   ; num
                                                                                                                           Page    6 
  Active Usings: @REGION_751_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000009C E3F0 D0B0 0024          000000B0    104          STG   15,176(0,13)
000000A2 E3F0 1008 0004          00000008    105          LG    15,8(0,1)   ; sz
000000A8 E3F0 D0B8 0024          000000B8    106          STG   15,184(0,13)
000000AE 4110 D0B0               000000B0    107          LA    1,176(0,13)
000000B2 E3F0 C0F8 0004          00000150    108          LG    15,@lit_751_0 ; calloc
000000B8                                     109 @@gen_label0 DS    0H
000000B8 05EF                                110          BALR  14,15
000000BA                                     111 @@gen_label1 DS    0H
000000BA B904 002F                           112          LGR   2,15
                                             113 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             114 * ka\\src\\rd.h", 122, "p"));
000000BE B902 00F2                           115          LTGR  15,2
000000C2 4770 C0A2               000000FA    116          BNZ   @L32
000000C6                                     117 @L31     DS    0H
000000C6 E3F0 C110 0004          00000168    118          LG    15,@lit_751_1
000000CC E3F0 D0B0 0024          000000B0    119          STG   15,176(0,13)
000000D2 E3F0 C108 0004          00000160    120          LG    15,@lit_751_2
000000D8 E3F0 D0B8 0024          000000B8    121          STG   15,184(0,13)
000000DE E548 D0C0 007A          000000C0    122          MVGHI 192(13),122
000000E4 41F0 F020               00000020    123          LA    15,32(0,15)
000000E8 E3F0 D0C8 0024          000000C8    124          STG   15,200(0,13)
000000EE 4110 D0B0               000000B0    125          LA    1,176(0,13)
000000F2 E3F0 C100 0004          00000158    126          LG    15,@lit_751_3 ; __assert
000000F8                                     127 @@gen_label3 DS    0H
000000F8 05EF                                128          BALR  14,15
000000FA                                     129 @@gen_label4 DS    0H
000000FA                                     130 @L32     DS    0H
                                             131 * ***      return p;
000000FA B904 00F2                           132          LGR   15,2
                                             133 * ***   }
                                             134 * * **** Start of Epilogue
                                             135          DCCEPIL
000000FE                                     136+         ds 0h                                                          01-DCCEP
                                             137+* Epilog
000000FE D707 D088 D088 00000088 00000088    138+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000104 E3D0 D080 0004          00000080    139+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000010A E3C0 D090 0004          00000090    140+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000110 E3B0 C018 0004          00000018    141+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000116 E3C0 B010 0021          00000010    142+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000011C E3E0 D008 0004          00000008    143+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000122 EB1C D020 0004          00000020    144+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000128 078E                                145+         bcr 8,14                if same dsab, just return              01-DCCEP
0000012A E3F0 D010 0024          00000010    146+         stg 15,16(0,13)         save return code                       01-DCCEP
00000130 E300 D018 0024          00000018    147+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000136 E3F0 D090 0004          00000090    148+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000013C E3F0 F018 0004          00000018    149+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000142 47F0 F040               00000040    150+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             151+* End of Epilog
                                             152 * * **** End of Epilogue
00000148                                     153          DS    0D
00000148 000000D0                            154 @FRAMESIZE_751 DC F'208'
0000014C 00000000
                                                                                                                           Page    7 
  Active Usings: @REGION_751_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000150 0000000000000000                    155 @lit_751_0 DC  AD(calloc)
00000158 0000000000000000                    156 @lit_751_3 DC  AD(__assert)
00000160 000000000000105E                    157 @lit_751_2 DC  AD(@strings@)
00000168 0000000000001018                    158 @lit_751_1 DC  AD(@DATA)
                                             159          DROP  12
                                             160 *
                                             161 *   DSECT for automatic variables in "rd_calloc"
                                             162 *      (FUNCTION #751)
                                             163 *
00000000                00000000 000000A8    164 @AUTO#rd_calloc DSECT
00000000                                     165          DS    XL168
                                             166 *
00000170                00000000 00001018    167 @CODE    CSECT
                                             168 *
                                             169 *
                                             170 *
                                             171 * ....... start of rd_free
00000170                                     172 @LNAME754 DS   0H
00000170 00000007                            173          DC    X'00000007'
00000174 99846D86998585                      174          DC    C'rd_free'
0000017B 00                                  175          DC    X'00'
                                             176 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             177          macro
                                             178          dccextrn &m
                                             179          gblc    &$dccext(1000)
                                             180          gbla    &$dccexti
                                             181          lcla    &i
                                             182 &$dccext(&$dccexti+1) setc    '&m'
                                             183 &i       seta    1
                                             184 .loop    aif    (&i gt &$dccexti).around
                                             185          aif    ('&$dccext(&i)' eq '&m').getout
                                             186 &i       seta    &i+1
                                             187          ago     .loop
                                             188 .around  anop
                                             189 &$dccexti seta &$dccexti+1
                                             190          extrn  &m
                                             191 .getout  anop
                                             192          mend
00000180                                     193+$eye0005    ds    0d                                                    02-DCCCA
00000180 C4C3C3                              194+         dc cl3'DCC'                                                    02-DCCCA
00000183 01                                  195+         dc xl1'01' format one                                          02-DCCCA
00000184 00000000                            196+         dc a(0)                                                        02-DCCCA
00000188 00000000000001F2                    197+         dc ad(@PER_754)                                                02-DCCCA
00000190 00000000000000B0                    198+         dc ad(176)                                                     02-DCCCA
00000198 0000000000000000                    199+         dc ad(0)                                                       02-DCCCA
000001A0 0000000000001000                    200+         dc ad(4096)                                                    02-DCCCA
000001A8 20                                  201+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A9 03                                  202+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001AA 03                                  203+         dc al1(3)                                                      02-DCCCA
000001AB 08                                  204+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000001AC 00                                  205+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000001AD 000000                              206+         dc al3(0)                                                      02-DCCCA
000001B0 0000000000000170                    207+         dc ad(@LNAME754)                                               02-DCCCA
000001B8                                     208+         ds 0d                                                          02-DCCCA
000001B8 0000000000000180                    209+         dc ad($eye0005)                                                02-DCCCA
000001C0 0000000000000000                    210+         dc ad(0)                                                       02-DCCCA
000001C8                                     211+         ds    0d                                                       01-DCCPR
000001C8                                     212+rd_free  ds    0d                                                       01-DCCPR
000001C8                                     213+@REGION_754_1 ds 0h                                                     01-DCCPR
000001C8 EBEC D008 0024          00000008    214+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001CE E3E0 D088 0004          00000088    215+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001D4 E3C0 D090 0004          00000090    216+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001DA B904 002E                           217+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001DE E3B0 C018 0004          00000018    218+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001E4 A7EB 00B0               000000B0    219+         aghi  14,176              increase by frame size               01-DCCPR
000001E8 E3E0 C020 0021          00000020    220+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001EE 4720 B020               00000020    221+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001F2                                     222+@PER_754 ds    0h                                                       01-DCCPR
000001F2 EBDE 2080 0024          00000080    223+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F8 E3C0 2090 0024          00000090    224+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001FE B904 00D2                           225+         lgr   13,2                set real frame pointer               01-DCCPR
00000202 B904 00CF                           226+         lgr   12,15               set base reg                         01-DCCPR
                        000001C8             227+         using @REGION_754_1,12                                         01-DCCPR
                                             228 * ******* End of Prologue
                                             229 * *
                                             230 * ***      free(ptr);
00000206 E3F0 1000 0004          00000000    231          LG    15,0(0,1)   ; ptr
0000020C E3F0 D0A8 0024          000000A8    232          STG   15,168(0,13)
00000212 4110 D0A8               000000A8    233          LA    1,168(0,13)
00000216 E3F0 C0A8 0004          00000270    234          LG    15,@lit_754_5 ; free
0000021C                                     235 @@gen_label5 DS    0H
0000021C 05EF                                236          BALR  14,15
0000021E                                     237 @@gen_label6 DS    0H
                                             238 * ***   }
0000021E                                     239 @ret_lab_754 DS 0H
                                             240 * * **** Start of Epilogue
                                             241          DCCEPIL
0000021E                                     242+         ds 0h                                                          01-DCCEP
                                             243+* Epilog
0000021E D707 D088 D088 00000088 00000088    244+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000224 E3D0 D080 0004          00000080    245+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000022A E3C0 D090 0004          00000090    246+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000230 E3B0 C018 0004          00000018    247+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000236 E3C0 B010 0021          00000010    248+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000023C E3E0 D008 0004          00000008    249+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000242 EB1C D020 0004          00000020    250+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000248 078E                                251+         bcr 8,14                if same dsab, just return              01-DCCEP
0000024A E3F0 D010 0024          00000010    252+         stg 15,16(0,13)         save return code                       01-DCCEP
00000250 E300 D018 0024          00000018    253+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000256 E3F0 D090 0004          00000090    254+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000025C E3F0 F018 0004          00000018    255+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000262 47F0 F040               00000040    256+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             257+* End of Epilog
                                                                                                                           Page    9 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             258 * * **** End of Epilogue
00000268                                     259          DS    0D
00000268 000000B0                            260 @FRAMESIZE_754 DC F'176'
0000026C 00000000
00000270 0000000000000000                    261 @lit_754_5 DC  AD(free)
                                             262          DROP  12
                                             263 *
                                             264 *   DSECT for automatic variables in "rd_free"
                                             265 *      (FUNCTION #754)
                                             266 *
00000000                00000000 000000A8    267 @AUTO#rd_free DSECT
00000000                                     268          DS    XL168
                                             269 *
00000278                00000000 00001018    270 @CODE    CSECT
                                             271 *
                                             272 *
                                             273 *
                                             274 * ....... start of rd_family2str
00000278                                     275 @LNAME885 DS   0H
00000278 0000000D                            276          DC    X'0000000D'
0000027C 99846D8681948993                    277          DC    C'rd_family2str'
00000289 00                                  278          DC    X'00'
                                             279 rd_family2str DCCPRLG CINDEX=885,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME885
                                             280          macro
                                             281          dccextrn &m
                                             282          gblc    &$dccext(1000)
                                             283          gbla    &$dccexti
                                             284          lcla    &i
                                             285 &$dccext(&$dccexti+1) setc    '&m'
                                             286 &i       seta    1
                                             287 .loop    aif    (&i gt &$dccexti).around
                                             288          aif    ('&$dccext(&i)' eq '&m').getout
                                             289 &i       seta    &i+1
                                             290          ago     .loop
                                             291 .around  anop
                                             292 &$dccexti seta &$dccexti+1
                                             293          extrn  &m
                                             294 .getout  anop
                                             295          mend
00000290                                     296+$eye0008    ds    0d                                                    02-DCCCA
00000290 C4C3C3                              297+         dc cl3'DCC'                                                    02-DCCCA
00000293 01                                  298+         dc xl1'01' format one                                          02-DCCCA
00000294 00000000                            299+         dc a(0)                                                        02-DCCCA
00000298 0000000000000000                    300+         dc ad(0)                                                       02-DCCCA
000002A0 00000000000000A8                    301+         dc ad(168)                                                     02-DCCCA
000002A8 0000000000000000                    302+         dc ad(0)                                                       02-DCCCA
000002B0 0000000000001000                    303+         dc ad(4096)                                                    02-DCCCA
000002B8 20                                  304+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002B9 03                                  305+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002BA 03                                  306+         dc al1(3)                                                      02-DCCCA
000002BB 08                                  307+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000002BC 00                                  308+         dc bl.8'00000000'                                              02-DCCCA
000002BD 000000                              309+         dc al3(0)                                                      02-DCCCA
000002C0 0000000000000278                    310+         dc ad(@LNAME885)                                               02-DCCCA
000002C8                                     311+         ds 0d                                                          02-DCCCA
000002C8 0000000000000290                    312+         dc ad($eye0008)                                                02-DCCCA
000002D0 0000000000000000                    313+         dc ad(0)                                                       02-DCCCA
000002D8                                     314+         ds    0d                                                       01-DCCPR
000002D8                                     315+rd_family2str ds 0d                                                     01-DCCPR
000002D8                                     316+@REGION_885_1 ds 0h                                                     01-DCCPR
000002D8 EBEC D008 0024          00000008    317+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002DE B904 00CF                           318+         lgr   12,15               set base reg                         01-DCCPR
                        000002D8             319+         using @REGION_885_1,12                                         01-DCCPR
                                             320 * ******* End of Prologue
                                             321 * *
                                             322 * ***      switch(af){
000002E2 47F0 C042               0000031A    323          B     @L44
000002E8                                     324          DS    0D
000002E8 000000000000105E                    325 @lit_885_7 DC  AD(@strings@)
                                             326 * ***         case 2:
000002F0                                     327 @L46     DS    0H
                                             328 * ***            return "inet";
000002F0 E3F0 C010 0004          000002E8    329          LG    15,@lit_885_7
000002F6 41F0 F022               00000022    330          LA    15,34(0,15)
000002FA 47F0 C062               0000033A    331          B     @ret_lab_885
                                             332 * ***         case 19:
000002FE                                     333 @L47     DS    0H
                                             334 * ***            return "inet6";
000002FE E3F0 C010 0004          000002E8    335          LG    15,@lit_885_7
00000304 41F0 F028               00000028    336          LA    15,40(0,15)
00000308 47F0 C062               0000033A    337          B     @ret_lab_885
                                             338 * ***         default:
                                             339 * ***            return "af?";
0000030C                                     340 @L48     DS    0H
0000030C E3F0 C010 0004          000002E8    341          LG    15,@lit_885_7
00000312 41F0 F02E               0000002E    342          LA    15,46(0,15)
00000316 47F0 C062               0000033A    343          B     @ret_lab_885
                                             344 * ***      };
0000031A                                     345 @L44     DS    0H
0000031A 58F0 1004               00000004    346          L     15,4(0,1)   ; af
0000031E A7FE 0002               00000002    347          CHI   15,2
00000322 4740 C034               0000030C    348          BL    @L48
00000326 A7FE 0002               00000002    349          CHI   15,2
0000032A 4780 C018               000002F0    350          BE    @L46
0000032E A7FE 0013               00000013    351          CHI   15,19
00000332 4780 C026               000002FE    352          BE    @L47
00000336 47F0 C034               0000030C    353          B     @L48
                                             354 * ***   }
0000033A                                     355 @ret_lab_885 DS 0H
                                             356 * * **** Start of Epilogue
                                             357          DCCEPIL
0000033A                                     358+         ds 0h                                                          01-DCCEP
                                             359+* Epilog
                                                                                                                           Page   11 
  Active Usings: @REGION_885_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             360+* Epilog
0000033A E3E0 D008 0004          00000008    361+         lg    14,8(,13) restore the reg                                01-DCCEP
00000340 EB1C D020 0004          00000020    362+         lmg   1,12,32(13)                                              01-DCCEP
00000346 07FE                                363+         br   14                                                        01-DCCEP
                                             364+* End of Epilog
                                             365 * * **** End of Epilogue
                                             366          DROP  12
                                             367 *
                                             368 *   DSECT for automatic variables in "rd_family2str"
                                             369 *      (FUNCTION #885)
                                             370 *
00000000                00000000 000000A8    371 @AUTO#rd_family2str DSECT
00000000                                     372          DS    XL168
                                             373 *
00000348                00000000 00001018    374 @CODE    CSECT
                                             375 *
                                             376 *
                                             377 *
                                             378 * ....... start of rd_sockaddr2str
                                             379 rd_sockaddr2str ALIAS X'99846DA296839281848499F2A2A399'
00000348                                     380 @LNAME880 DS   0H
00000348 0000000F                            381          DC    X'0000000F'
0000034C 99846DA296839281                    382          DC    C'rd_sockaddr2str'
0000035B 00                                  383          DC    X'00'
                                             384 rd_sockaddr2str DCCPRLG CINDEX=880,BASER=12,FRAME=256,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME880
                                             385          macro
                                             386          dccextrn &m
                                             387          gblc    &$dccext(1000)
                                             388          gbla    &$dccexti
                                             389          lcla    &i
                                             390 &$dccext(&$dccexti+1) setc    '&m'
                                             391 &i       seta    1
                                             392 .loop    aif    (&i gt &$dccexti).around
                                             393          aif    ('&$dccext(&i)' eq '&m').getout
                                             394 &i       seta    &i+1
                                             395          ago     .loop
                                             396 .around  anop
                                             397 &$dccexti seta &$dccexti+1
                                             398          extrn  &m
                                             399 .getout  anop
                                             400          mend
00000360                                     401+$eye0011    ds    0d                                                    02-DCCCA
00000360 C4C3C3                              402+         dc cl3'DCC'                                                    02-DCCCA
00000363 01                                  403+         dc xl1'01' format one                                          02-DCCCA
00000364 00000000                            404+         dc a(0)                                                        02-DCCCA
00000368 00000000000003D2                    405+         dc ad(@PER_880)                                                02-DCCCA
00000370 0000000000000100                    406+         dc ad(256)                                                     02-DCCCA
00000378 0000000000000000                    407+         dc ad(0)                                                       02-DCCCA
00000380 0000000000001000                    408+         dc ad(4096)                                                    02-DCCCA
00000388 20                                  409+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000389 03                                  410+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000038A 03                                  411+         dc al1(3)                                                      02-DCCCA
0000038B 08                                  412+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000038C 00                                  413+         dc bl.8'00000000'                                              02-DCCCA
0000038D 000000                              414+         dc al3(0)                                                      02-DCCCA
00000390 0000000000000348                    415+         dc ad(@LNAME880)                                               02-DCCCA
00000398                                     416+         ds 0d                                                          02-DCCCA
00000398 0000000000000360                    417+         dc ad($eye0011)                                                02-DCCCA
000003A0 0000000000000000                    418+         dc ad(0)                                                       02-DCCCA
000003A8                                     419+         ds    0d                                                       01-DCCPR
                                             420+         entry rd_sockaddr2str                                          01-DCCPR
000003A8                                     421+rd_sockaddr2str ds 0d                                                   01-DCCPR
000003A8                                     422+@REGION_880_1 ds 0h                                                     01-DCCPR
000003A8 EBEC D008 0024          00000008    423+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000003AE E3E0 D088 0004          00000088    424+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000003B4 E3C0 D090 0004          00000090    425+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000003BA B904 002E                           426+         lgr   2,14                copy addr of our savearea            01-DCCPR
000003BE E3B0 C018 0004          00000018    427+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000003C4 A7EB 0100               00000100    428+         aghi  14,256              increase by frame size               01-DCCPR
000003C8 E3E0 C020 0021          00000020    429+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000003CE 4720 B020               00000020    430+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000003D2                                     431+@PER_880 ds    0h                                                       01-DCCPR
000003D2 EBDE 2080 0024          00000080    432+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000003D8 E3C0 2090 0024          00000090    433+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000003DE B904 00D2                           434+         lgr   13,2                set real frame pointer               01-DCCPR
000003E2 B904 00CF                           435+         lgr   12,15               set base reg                         01-DCCPR
                        000003A8             436+         using @REGION_880_1,12                                         01-DCCPR
                                             437          DCCPRV REG=7      ; Get PRV from DVT
000003E6 E370 B008 0004          00000008    438+         LG 7,8(0,11)                                                   01-DCCPR
                                             439 * ******* End of Prologue
                                             440 * *
                                             441 * ***      const rd_sockaddr_inx_t *a = (const rd_sockaddr_inx_t *)add\
                                             442 * r;
000003EC 5850 100C               0000000C    443          L     5,12(0,1)   ; flags
000003F0 E360 1000 0004          00000000    444          LG    6,0(0,1)    ; addr
                                             445 * ***      static  char ret[32][256];
                                             446 * ***      static  int  reti = 0;
                                             447 * ***      char portstr[32];
                                             448 * ***      int of = 0;
000003F6 A728 0000               00000000    449          LHI   2,0         ; 0
                                             450 * ***      int niflags = 0x00000008;
000003FA A738 0008               00000008    451          LHI   3,8         ; 8
                                             452 * ***           int r;
                                             453 * ***
                                             454 * ***      reti = (reti + 1) % 32;
000003FE E3F0 C08C 0014          00000434    455          LGF   15,@lit_880_12
00000404 41FF 7000               00000000    456          LA    15,0(15,7)
00000408 A7FB 2000               00002000    457          AGHI  15,8192
0000040C 5810 F200               00000200    458          L     1,512(0,15) ; reti
00000410 A71A 0001               00000001    459          AHI   1,1
00000414 1841                                460          LR    4,1
00000416 C04B 0000 001F                      461          NILF  4,X'0000001F'
0000041C 1211                                462          LTR   1,1
                                                                                                                           Page   13 
  Active Usings: @REGION_880_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000041E 47B0 C0B6               0000045E    463          BNL   @@gen_label7
00000422 1244                                464          LTR   4,4
00000424 4770 C0B0               00000458    465          BNE   @@gen_label8
00000428 A748 0000               00000000    466          LHI   4,0
0000042C 47F0 C0B6               0000045E    467          B     @@gen_label7
00000430                                     468          DS    0D
00000430 00000100                            469 @FRAMESIZE_880 DC F'256'
00000434 00000000                            470 @lit_880_12 DC Q(@@STATIC)
00000438 0000000000000000                    471 @lit_880_19 DC AD(snprintf)
00000440 000000000000105E                    472 @lit_880_18 DC AD(@strings@)
00000448 0000000000000000                    473 @lit_880_31 DC AD(getnameinfo)
00000450 00000000000002D8                    474 @lit_880_41 DC AD(rd_family2str)
00000458                                     475 @@gen_label8 DS 0H
00000458 C04D FFFF FFE0                      476          OILF  4,X'FFFFFFE0'
0000045E                                     477 @@gen_label7 DS 0H
0000045E 5040 F200               00000200    478          ST    4,512(0,15) ; reti
                                             479 * ***
                                             480 * ***      switch (a->in.sin_family)
00000462 47F0 C36C               00000714    481          B     @L49
                                             482 * ***      {
                                             483 * ***      case 2:
                                             484 * ***      case 19:
00000466                                     485 @L52     DS    0H
                                             486 * ***         if (flags & 0x4)
00000466 A751 0004               00000004    487          TML   5,4
0000046A 4780 C14A               000004F2    488          BZ    @L53
                                             489 * ***            of += snprintf(&ret[reti][of], sizeof(ret[reti])-of, \
                                             490 * "ipv%i#", a->in.sin_family == 2 ? 4 : 6);
0000046E 9502 6001      00000001 00000002    491          CLI   1(6),2
00000472 4770 C0D6               0000047E    492          BNE   @L54
00000476 A7F8 0004               00000004    493          LHI   15,4        ; 4
0000047A 47F0 C0DA               00000482    494          B     @L55
0000047E                                     495 @L54     DS    0H
0000047E A7F8 0006               00000006    496          LHI   15,6        ; 6
00000482                                     497 @L55     DS    0H
00000482 E310 C08C 0014          00000434    498          LGF   1,@lit_880_12
00000488 4111 7000               00000000    499          LA    1,0(1,7)
0000048C A71B 2000               00002000    500          AGHI  1,8192
00000490 E310 1200 0014          00000200    501          LGF   1,512(0,1)  ; reti
00000496 E340 C08C 0014          00000434    502          LGF   4,@lit_880_12
0000049C 4144 7000               00000000    503          LA    4,0(4,7)
000004A0 EB11 0008 000D          00000008    504          SLLG  1,1,8(0)    ; *0x100
000004A6 B914 0082                           505          LGFR  8,2
000004AA 4111 8000               00000000    506          LA    1,0(1,8)
000004AE 4111 4200               00000200    507          LA    1,512(1,4)
000004B2 E310 D0C8 0024          000000C8    508          STG   1,200(0,13)
000004B8 A719 0100               00000100    509          LGHI  1,256       ; 256
000004BC B914 0042                           510          LGFR  4,2
000004C0 B90B 0014                           511          SLGR  1,4
000004C4 E310 D0D0 0024          000000D0    512          STG   1,208(0,13)
000004CA E310 C098 0004          00000440    513          LG    1,@lit_880_18
000004D0 4110 1032               00000032    514          LA    1,50(0,1)
                                                                                                                           Page   14 
  Active Usings: @REGION_880_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000004D4 E310 D0D8 0024          000000D8    515          STG   1,216(0,13)
000004DA B914 00FF                           516          LGFR  15,15
000004DE E3F0 D0E0 0024          000000E0    517          STG   15,224(0,13)
000004E4 4110 D0C8               000000C8    518          LA    1,200(0,13)
000004E8 E3F0 C090 0004          00000438    519          LG    15,@lit_880_19 ; snprintf
000004EE                                     520 @@gen_label11 DS    0H
000004EE 05EF                                521          BALR  14,15
000004F0                                     522 @@gen_label12 DS    0H
000004F0 1A2F                                523          AR    2,15
000004F2                                     524 @L53     DS    0H
                                             525 * ***
                                             526 * ***
                                             527 * ***         if ((flags & 0x1) &&
000004F2 A751 0001               00000001    528          TML   5,1
000004F6 4780 C194               0000053C    529          BZ    @L56
                                             530 * ***             a->in.sin_family == 19)
000004FA 9513 6001      00000001 00000013    531          CLI   1(6),19
000004FE 4770 C194               0000053C    532          BNE   @L56
                                             533 * ***            ret[reti][of++] = '[';
00000502 E3F0 C08C 0014          00000434    534          LGF   15,@lit_880_12
00000508 41FF 7000               00000000    535          LA    15,0(15,7)
0000050C A7FB 2000               00002000    536          AGHI  15,8192
00000510 E3F0 F200 0014          00000200    537          LGF   15,512(0,15) ; reti
00000516 E310 C08C 0014          00000434    538          LGF   1,@lit_880_12
0000051C 4111 7000               00000000    539          LA    1,0(1,7)
00000520 EBFF 0008 000D          00000008    540          SLLG  15,15,8(0)  ; *0x100
00000526 1842                                541          LR    4,2
00000528 A72A 0001               00000001    542          AHI   2,1
0000052C B914 0044                           543          LGFR  4,4
00000530 41FF 4000               00000000    544          LA    15,0(15,4)
00000534 41FF 1000               00000000    545          LA    15,0(15,1)
00000538 92AD F200      00000200 000000AD    546          MVI   512(15),173
0000053C                                     547 @L56     DS    0H
                                             548 * ***
                                             549 * ***         if (!(flags & 0x2))
0000053C A751 0002               00000002    550          TML   5,2
00000540 4770 C1A0               00000548    551          BNZ   @_retry@880@0
                                             552 * ***            niflags |= 0x00000002;
00000544 A53B 0002               00000002    553          OILL  3,2
00000548                                     554 @L57     DS    0H
                                             555 * ***
                                             556 * ***           retry:
                                             557 * ***                   if ((r = getnameinfo(
00000548                                     558 @_retry@880@0 DS 0H
                                             559 * ***                                (const struct sockaddr *)a,
                                             560 * ***                                ((a)->in.sin_family == 2 ? sizeof\
                                             561 * (struct sockaddr_in) : (a)->in.sin_family == 19 ? sizeof(struct sock\
                                             562 * addr_in6): sizeof(rd_sockaddr_inx_t)),
                                             563 * ***
                                             564 * ***                                ret[reti]+of, sizeof(ret[reti])-o\
                                             565 * f,
                                             566 * ***
                                                                                                                           Page   15 
  Active Usings: @REGION_880_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             567 * ***                                (flags & 0x1) ?
                                             568 * ***
                                             569 * ***                                (flags & 0x1) ?
                                             570 * ***
                                             571 * ***                                niflags))) {
00000548 9502 6001      00000001 00000002    572          CLI   1(6),2
0000054C 4770 C1B0               00000558    573          BNE   @L58
00000550 A7F9 0010               00000010    574          LGHI  15,16       ; 16
00000554 47F0 C1C4               0000056C    575          B     @L61
00000558                                     576 @L58     DS    0H
00000558 9513 6001      00000001 00000013    577          CLI   1(6),19
0000055C 4770 C1C0               00000568    578          BNE   @L59
00000560 A7F9 001C               0000001C    579          LGHI  15,28       ; 28
00000564 47F0 C1C4               0000056C    580          B     @L60
00000568                                     581 @L59     DS    0H
00000568 A7F9 001C               0000001C    582          LGHI  15,28       ; 28
0000056C                                     583 @L60     DS    0H
0000056C                                     584 @L61     DS    0H
0000056C A751 0001               00000001    585          TML   5,1
00000570 4780 C1D4               0000057C    586          BZ    @L62
                                             587 * ***                                portstr : ((void *)0),
00000574 4110 D0A8               000000A8    588          LA    1,168(0,13)
00000578 47F0 C1D8               00000580    589          B     @L63
0000057C                                     590 @L62     DS    0H
0000057C A719 0000               00000000    591          LGHI  1,0         ; 0
00000580                                     592 @L63     DS    0H
00000580 A751 0001               00000001    593          TML   5,1
00000584 4780 C1E8               00000590    594          BZ    @L64
                                             595 * ***                                sizeof(portstr) : 0,
00000588 A789 0020               00000020    596          LGHI  8,32        ; 32
0000058C 47F0 C1EC               00000594    597          B     @L65
00000590                                     598 @L64     DS    0H
00000590 A789 0000               00000000    599          LGHI  8,0         ; 0
00000594                                     600 @L65     DS    0H
00000594 E360 D0C8 0024          000000C8    601          STG   6,200(0,13)
0000059A B916 00FF                           602          LLGFR 15,15
0000059E E3F0 D0D0 0024          000000D0    603          STG   15,208(0,13)
000005A4 E3F0 C08C 0014          00000434    604          LGF   15,@lit_880_12
000005AA 414F 7000               00000000    605          LA    4,0(15,7)
000005AE A74B 2000               00002000    606          AGHI  4,8192
000005B2 E3F0 4200 0014          00000200    607          LGF   15,512(0,4) ; reti
000005B8 E390 C08C 0014          00000434    608          LGF   9,@lit_880_12
000005BE 4199 7000               00000000    609          LA    9,0(9,7)
000005C2 EBFF 0008 000D          00000008    610          SLLG  15,15,8(0)  ; *0x100
000005C8 B914 00A2                           611          LGFR  10,2
000005CC 41FF A000               00000000    612          LA    15,0(15,10)
000005D0 41FF 9200               00000200    613          LA    15,512(15,9)
000005D4 E3F0 D0D8 0024          000000D8    614          STG   15,216(0,13)
000005DA A7F9 0100               00000100    615          LGHI  15,256      ; 256
000005DE B914 00A2                           616          LGFR  10,2
000005E2 B90B 00FA                           617          SLGR  15,10
000005E6 E3F0 D0E0 0024          000000E0    618          STG   15,224(0,13)
                                                                                                                           Page   16 
  Active Usings: @REGION_880_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000005EC E310 D0E8 0024          000000E8    619          STG   1,232(0,13)
000005F2 E380 D0F0 0024          000000F0    620          STG   8,240(0,13)
000005F8 B914 00F3                           621          LGFR  15,3
000005FC E3F0 D0F8 0024          000000F8    622          STG   15,248(0,13)
00000602 4110 D0C8               000000C8    623          LA    1,200(0,13)
00000606 E3F0 C0A0 0004          00000448    624          LG    15,@lit_880_31 ; getnameinfo
0000060C                                     625 @@gen_label20 DS    0H
0000060C 05EF                                626          BALR  14,15
0000060E                                     627 @@gen_label21 DS    0H
0000060E 12FF                                628          LTR   15,15
00000610 4780 C284               0000062C    629          BZ    @L66
                                             630 * ***
                                             631 * ***                           if (r == 2 && !(niflags & 0x00000002))\
                                             632 *  {
00000614 A7FE 0002               00000002    633          CHI   15,2
00000618 4770 C390               00000738    634          BNE   @L50
0000061C A731 0002               00000002    635          TML   3,2
00000620 4770 C390               00000738    636          BNZ   @L50
                                             637 * ***
                                             638 * ***
                                             639 * ***                                   niflags |= 0x00000002;
00000624 A53B 0002               00000002    640          OILL  3,2
                                             641 * ***                                   goto retry;
00000628 47F0 C1A0               00000548    642          B     @_retry@880@0
                                             643 * ***                           }
                                             644 * ***                           break;
                                             645 * ***                   }
0000062C                                     646 @L66     DS    0H
                                             647 * ***
                                             648 * ***
                                             649 * ***         if (flags & 0x1) {
0000062C A751 0001               00000001    650          TML   5,1
00000630 4780 C340               000006E8    651          BZ    @L68
                                             652 * ***            size_t len = __strlen(ret[reti]);
00000634 E3F0 4200 0014          00000200    653          LGF   15,512(0,4) ; reti
0000063A EBFF 0008 000D          00000008    654          SLLG  15,15,8(0)  ; *0x100
00000640 41FF 9200               00000200    655          LA    15,512(15,9)
00000644 B904 001F                           656          LGR   1,15
00000648 A709 0000               00000000    657          LGHI  0,0
0000064C                                     658 @@gen_label26 DS 0H
0000064C B25E 000F                           659          SRST  0,15
00000650 4710 C2A4               0000064C    660          BC  1,@@gen_label26
00000654 B904 00F0                           661          LGR   15,0
00000658 B90B 00F1                           662          SLGR  15,1
                                             663 * ***            snprintf(ret[reti]+len, sizeof(ret[reti])-len, "%s:%s\
                                             664 * ", a->in.sin_family == 19 ? "]" : "", portstr);
0000065C 9513 6001      00000001 00000013    665          CLI   1(6),19
00000660 4770 C2CA               00000672    666          BNE   @L69
00000664 E310 C098 0004          00000440    667          LG    1,@lit_880_18
0000066A 4110 103A               0000003A    668          LA    1,58(0,1)
0000066E 47F0 C2D4               0000067C    669          B     @L70
00000672                                     670 @L69     DS    0H
                                                                                                                           Page   17 
  Active Usings: @REGION_880_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000672 E310 C098 0004          00000440    671          LG    1,@lit_880_18
00000678 4110 103C               0000003C    672          LA    1,60(0,1)
0000067C                                     673 @L70     DS    0H
0000067C E320 C08C 0014          00000434    674          LGF   2,@lit_880_12
00000682 4122 7000               00000000    675          LA    2,0(2,7)
00000686 A72B 2000               00002000    676          AGHI  2,8192
0000068A E320 2200 0014          00000200    677          LGF   2,512(0,2)  ; reti
00000690 E330 C08C 0014          00000434    678          LGF   3,@lit_880_12
00000696 4133 7000               00000000    679          LA    3,0(3,7)
0000069A EB22 0008 000D          00000008    680          SLLG  2,2,8(0)    ; *0x100
000006A0 4122 F000               00000000    681          LA    2,0(2,15)
000006A4 4122 3200               00000200    682          LA    2,512(2,3)
000006A8 E320 D0C8 0024          000000C8    683          STG   2,200(0,13)
000006AE A729 0100               00000100    684          LGHI  2,256       ; 256
000006B2 B90B 002F                           685          SLGR  2,15
000006B6 E320 D0D0 0024          000000D0    686          STG   2,208(0,13)
000006BC E3F0 C098 0004          00000440    687          LG    15,@lit_880_18
000006C2 41F0 F03E               0000003E    688          LA    15,62(0,15)
000006C6 E3F0 D0D8 0024          000000D8    689          STG   15,216(0,13)
000006CC E310 D0E0 0024          000000E0    690          STG   1,224(0,13)
000006D2 41F0 D0A8               000000A8    691          LA    15,168(0,13)
000006D6 E3F0 D0E8 0024          000000E8    692          STG   15,232(0,13)
000006DC 4110 D0C8               000000C8    693          LA    1,200(0,13)
000006E0 E3F0 C090 0004          00000438    694          LG    15,@lit_880_19 ; snprintf
000006E6                                     695 @@gen_label28 DS    0H
000006E6 05EF                                696          BALR  14,15
000006E8                                     697 @@gen_label29 DS    0H
                                             698 * ***
                                             699 * ***
                                             700 * ***
                                             701 * ***         }
000006E8                                     702 @L68     DS    0H
                                             703 * ***
                                             704 * ***         return ret[reti];
000006E8 E3F0 C08C 0014          00000434    705          LGF   15,@lit_880_12
000006EE 41FF 7000               00000000    706          LA    15,0(15,7)
000006F2 A7FB 2000               00002000    707          AGHI  15,8192
000006F6 E3F0 F200 0014          00000200    708          LGF   15,512(0,15) ; reti
000006FC E310 C08C 0014          00000434    709          LGF   1,@lit_880_12
00000702 4111 7000               00000000    710          LA    1,0(1,7)
00000706 EBFF 0008 000D          00000008    711          SLLG  15,15,8(0)  ; *0x100
0000070C 41FF 1200               00000200    712          LA    15,512(15,1)
00000710 47F0 C412               000007BA    713          B     @ret_lab_880
                                             714 * ***      }
00000714                                     715 @L49     DS    0H
00000714 E3F0 6001 0094          00000001    716          LLC   15,1(0,6)
0000071A C2FF 0000 0002                      717          CLFI  15,X'00000002'
00000720 4740 C390               00000738    718          BL    @L50
00000724 C2FF 0000 0002                      719          CLFI  15,X'00000002'
0000072A 4780 C0BE               00000466    720          BE    @L52
0000072E C2FF 0000 0013                      721          CLFI  15,X'00000013'
00000734 4780 C0BE               00000466    722          BE    @L52
                                                                                                                           Page   18 
  Active Usings: @REGION_880_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000738                                     723 @L50     DS    0H
                                             724 * ***
                                             725 * ***
                                             726 * ***
                                             727 * ***      snprintf(ret[reti], sizeof(ret[reti]), "<unsupported:%s>", \
                                             728 * rd_family2str(a->in.sin_family));
00000738 E3F0 6001 0094          00000001    729          LLC   15,1(0,6)
0000073E B914 00FF                           730          LGFR  15,15
00000742 E3F0 D0C8 0024          000000C8    731          STG   15,200(0,13)
00000748 4110 D0C8               000000C8    732          LA    1,200(0,13)
0000074C E3F0 C0A8 0004          00000450    733          LG    15,@lit_880_41 ; rd_family2str
00000752                                     734 @@gen_label30 DS    0H
00000752 05EF                                735          BALR  14,15
00000754                                     736 @@gen_label31 DS    0H
00000754 E310 C08C 0014          00000434    737          LGF   1,@lit_880_12
0000075A 4121 7000               00000000    738          LA    2,0(1,7)
0000075E A72B 2000               00002000    739          AGHI  2,8192
00000762 E310 2200 0014          00000200    740          LGF   1,512(0,2)  ; reti
00000768 E330 C08C 0014          00000434    741          LGF   3,@lit_880_12
0000076E 4133 7000               00000000    742          LA    3,0(3,7)
00000772 EB11 0008 000D          00000008    743          SLLG  1,1,8(0)    ; *0x100
00000778 4111 3200               00000200    744          LA    1,512(1,3)
0000077C E310 D0C8 0024          000000C8    745          STG   1,200(0,13)
00000782 E548 D0D0 0100          000000D0    746          MVGHI 208(13),256
00000788 E310 C098 0004          00000440    747          LG    1,@lit_880_18
0000078E 4110 1044               00000044    748          LA    1,68(0,1)
00000792 E310 D0D8 0024          000000D8    749          STG   1,216(0,13)
00000798 E3F0 D0E0 0024          000000E0    750          STG   15,224(0,13)
0000079E 4110 D0C8               000000C8    751          LA    1,200(0,13)
000007A2 E3F0 C090 0004          00000438    752          LG    15,@lit_880_19 ; snprintf
000007A8                                     753 @@gen_label32 DS    0H
000007A8 05EF                                754          BALR  14,15
000007AA                                     755 @@gen_label33 DS    0H
                                             756 * ***
                                             757 * ***
                                             758 * ***      return ret[reti];
000007AA E3F0 2200 0014          00000200    759          LGF   15,512(0,2) ; reti
000007B0 EBFF 0008 000D          00000008    760          SLLG  15,15,8(0)  ; *0x100
000007B6 41FF 3200               00000200    761          LA    15,512(15,3)
                                             762 * ***   }
000007BA                                     763 @ret_lab_880 DS 0H
                                             764 * * **** Start of Epilogue
                                             765          DCCEPIL
000007BA                                     766+         ds 0h                                                          01-DCCEP
                                             767+* Epilog
000007BA D707 D088 D088 00000088 00000088    768+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000007C0 E3D0 D080 0004          00000080    769+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000007C6 E3C0 D090 0004          00000090    770+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000007CC E3B0 C018 0004          00000018    771+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000007D2 E3C0 B010 0021          00000010    772+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000007D8 E3E0 D008 0004          00000008    773+         lg  14,8(0,13)          load up return address                 01-DCCEP
000007DE EB1C D020 0004          00000020    774+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   19 
  Active Usings: @REGION_880_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000007E4 078E                                775+         bcr 8,14                if same dsab, just return              01-DCCEP
000007E6 E3F0 D010 0024          00000010    776+         stg 15,16(0,13)         save return code                       01-DCCEP
000007EC E300 D018 0024          00000018    777+         stg 0,24(0,13)          save more return code                  01-DCCEP
000007F2 E3F0 D090 0004          00000090    778+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000007F8 E3F0 F018 0004          00000018    779+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000007FE 47F0 F040               00000040    780+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             781+* End of Epilog
                                             782 * * **** End of Epilogue
                                             783          DROP  12
                                             784 *
                                             785 *   DSECT for automatic variables in "rd_sockaddr2str"
                                             786 *      (FUNCTION #880)
                                             787 *
00000000                00000000 000000C8    788 @AUTO#rd_sockaddr2str DSECT
00000000                                     789          DS    XL168
000000A8                                     790 rd_sockaddr2str#len#4 DS 8XL1 ; len
000000B0                000000B0 000000A8    791          ORG   @AUTO#rd_sockaddr2str+168
000000A8                                     792 rd_sockaddr2str#r#0 DS 1F  ; r
000000AC                000000AC 000000A8    793          ORG   @AUTO#rd_sockaddr2str+168
000000A8                                     794 rd_sockaddr2str#niflags#0 DS 1F ; niflags
000000AC                000000AC 000000A8    795          ORG   @AUTO#rd_sockaddr2str+168
000000A8                                     796 rd_sockaddr2str#of#0 DS 1F ; of
000000AC                000000AC 000000A8    797          ORG   @AUTO#rd_sockaddr2str+168
000000A8                                     798 rd_sockaddr2str#portstr#0 DS 32XL1 ; portstr
                                             799 *
00000802                00000000 00001018    800 @CODE    CSECT
                                             801 *
                                             802 *
                                             803 *
                                             804 * ....... start of rd_addrinfo_prepare
                                             805 rd_addrinfo_prepare ALIAS X'99846D81848499899586966D97998597819985'
00000802                                     806 @LNAME881 DS   0H
00000802 00000013                            807          DC    X'00000013'
00000806 99846D8184849989                    808          DC    C'rd_addrinfo_prepare'
00000819 00                                  809          DC    X'00'
                                             810 rd_addrinfo_prepare DCCPRLG CINDEX=881,BASER=12,FRAME=176,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME881
                                             811          macro
                                             812          dccextrn &m
                                             813          gblc    &$dccext(1000)
                                             814          gbla    &$dccexti
                                             815          lcla    &i
                                             816 &$dccext(&$dccexti+1) setc    '&m'
                                             817 &i       seta    1
                                             818 .loop    aif    (&i gt &$dccexti).around
                                             819          aif    ('&$dccext(&i)' eq '&m').getout
                                             820 &i       seta    &i+1
                                             821          ago     .loop
                                             822 .around  anop
                                             823 &$dccexti seta &$dccexti+1
                                             824          extrn  &m
                                             825 .getout  anop
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             826          mend
00000820                                     827+$eye0015    ds    0d                                                    02-DCCCA
00000820 C4C3C3                              828+         dc cl3'DCC'                                                    02-DCCCA
00000823 01                                  829+         dc xl1'01' format one                                          02-DCCCA
00000824 00000000                            830+         dc a(0)                                                        02-DCCCA
00000828 0000000000000892                    831+         dc ad(@PER_881)                                                02-DCCCA
00000830 00000000000000B0                    832+         dc ad(176)                                                     02-DCCCA
00000838 0000000000000000                    833+         dc ad(0)                                                       02-DCCCA
00000840 0000000000001000                    834+         dc ad(4096)                                                    02-DCCCA
00000848 20                                  835+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000849 03                                  836+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000084A 03                                  837+         dc al1(3)                                                      02-DCCCA
0000084B 08                                  838+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000084C 00                                  839+         dc bl.8'00000000'                                              02-DCCCA
0000084D 000000                              840+         dc al3(0)                                                      02-DCCCA
00000850 0000000000000802                    841+         dc ad(@LNAME881)                                               02-DCCCA
00000858                                     842+         ds 0d                                                          02-DCCCA
00000858 0000000000000820                    843+         dc ad($eye0015)                                                02-DCCCA
00000860 0000000000000000                    844+         dc ad(0)                                                       02-DCCCA
00000868                                     845+         ds    0d                                                       01-DCCPR
                                             846+         entry rd_addrinfo_prepare                                      01-DCCPR
00000868                                     847+rd_addrinfo_prepare ds 0d                                               01-DCCPR
00000868                                     848+@REGION_881_1 ds 0h                                                     01-DCCPR
00000868 EBEC D008 0024          00000008    849+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000086E E3E0 D088 0004          00000088    850+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000874 E3C0 D090 0004          00000090    851+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000087A B904 002E                           852+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000087E E3B0 C018 0004          00000018    853+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000884 A7EB 00B0               000000B0    854+         aghi  14,176              increase by frame size               01-DCCPR
00000888 E3E0 C020 0021          00000020    855+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000088E 4720 B020               00000020    856+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000892                                     857+@PER_881 ds    0h                                                       01-DCCPR
00000892 EBDE 2080 0024          00000080    858+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000898 E3C0 2090 0024          00000090    859+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000089E B904 00D2                           860+         lgr   13,2                set real frame pointer               01-DCCPR
000008A2 B904 00CF                           861+         lgr   12,15               set base reg                         01-DCCPR
                        00000868             862+         using @REGION_881_1,12                                         01-DCCPR
                                             863          DCCPRV REG=3      ; Get PRV from DVT
000008A6 E330 B008 0004          00000008    864+         LG 3,8(0,11)                                                   01-DCCPR
000008AC B904 0041                           865          LGR   4,1         ; ptr to parm area
                                             866 * ******* End of Prologue
                                             867 * *
                                             868 * ***      static  char snode[256];
                                             869 * ***      static  char ssvc[64];
000008B0 E3F0 4000 0004          00000000    870          LG    15,0(0,4)   ; nodesvc
                                             871 * ***      const char *t;
                                             872 * ***      const char *svct = ((void *)0);
000008B6 A719 0000               00000000    873          LGHI  1,0         ; 0
                                             874 * ***      size_t nodelen = 0;
000008BA B904 0021                           875          LGR   2,1         ; nodelen
                                             876 * ***
                                             877 * ***      *snode = '\0';
                                                                                                                           Page   21 
  Active Usings: @REGION_881_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000008BE E350 C094 0014          000008FC    878          LGF   5,@lit_881_49
000008C4 4155 3000               00000000    879          LA    5,0(5,3)
000008C8 A75B 2000               00002000    880          AGHI  5,8192
000008CC 9200 5204      00000204 00000000    881          MVI   516(5),0
                                             882 * ***      *ssvc = '\0';
000008D0 9200 5304      00000304 00000000    883          MVI   772(5),0
                                             884 * ***
                                             885 * ***      if (*nodesvc == '[') {
000008D4 95AD F000      00000000 000000AD    886          CLI   0(15),173
000008D8 4770 C0D4               0000093C    887          BNE   @L71
                                             888 * ***
                                             889 * ***         if  (!(t = __strchr(nodesvc,']')))
000008DC B904 001F                           890          LGR   1,15
000008E0                                     891 @@gen_label35 DS 0H
000008E0 95BD 1000      00000000 000000BD    892          CLI   0(1),189
000008E4 4780 C0AA               00000912    893          BE    @@gen_label36
000008E8 9500 1000      00000000 00000000    894          CLI   0(1),0
000008EC 4780 C0A6               0000090E    895          BE    @@gen_label37
000008F0 4110 1001               00000001    896          LA    1,1(0,1)
000008F4 47F0 C078               000008E0    897          B     @@gen_label35
000008F8                                     898          DS    0D
000008F8 000000B0                            899 @FRAMESIZE_881 DC F'176'
000008FC 00000000                            900 @lit_881_49 DC Q(@@STATIC)
00000900 000000000000105E                    901 @lit_881_50 DC AD(@strings@)
00000908 D200 1000 5000 00000000 00000000    902 @lit_881_57          MVC 0(1,1),0(5)
0000090E                                     903 @@gen_label37 DS 0H
0000090E A719 0000               00000000    904          LGHI  1,0
00000912                                     905 @@gen_label36 DS 0H
00000912 B902 0021                           906          LTGR  2,1
00000916 4770 C0C0               00000928    907          BNZ   @L72
                                             908 * ***            return "Missing close-']'";
0000091A E3F0 C098 0004          00000900    909          LG    15,@lit_881_50
00000920 41F0 F056               00000056    910          LA    15,86(0,15)
00000924 47F0 C274               00000ADC    911          B     @ret_lab_881
00000928                                     912 @L72     DS    0H
                                             913 * ***         nodesvc++;
00000928 41F0 F001               00000001    914          LA    15,1(0,15)
                                             915 * ***         nodelen = t-nodesvc;
0000092C B904 0021                           916          LGR   2,1
00000930 B909 002F                           917          SGR   2,15
                                             918 * ***         svct = t+1;
00000934 4110 1001               00000001    919          LA    1,1(0,1)
                                             920 * ***
                                             921 * ***      } else if (*nodesvc == ':' && *(nodesvc+1) != ':') {
00000938 47F0 C0EC               00000954    922          B     @L73
0000093C                                     923 @L71     DS    0H
0000093C 957A F000      00000000 0000007A    924          CLI   0(15),122
00000940 4770 C0EC               00000954    925          BNE   @L73
00000944 957A F001      00000001 0000007A    926          CLI   1(15),122
00000948 4780 C0EC               00000954    927          BE    @L73
                                             928 * ***
                                             929 * ***         nodelen = 0;
                                                                                                                           Page   22 
  Active Usings: @REGION_881_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000094C B904 0021                           930          LGR   2,1         ; nodelen
                                             931 * ***         svct = nodesvc;
00000950 B904 001F                           932          LGR   1,15        ; svct
                                             933 * ***      }
00000954                                     934 @L74     DS    0H
                                             935 * ***
                                             936 * ***      if ((svct = __strrchr(svct ? svct : nodesvc,':')) && (*(svc\
                                             937 * t-1) != ':') &&
00000954                                     938 @L73     DS    0H
00000954 B902 0051                           939          LTGR  5,1
00000958 4780 C0F8               00000960    940          BZ    @L75
0000095C 47F0 C0FC               00000964    941          B     @L76
00000960                                     942 @L75     DS    0H
00000960 B904 001F                           943          LGR   1,15
00000964                                     944 @L76     DS    0H
00000964 A759 0000               00000000    945          LGHI  5,0
00000968                                     946 @@gen_label42 DS 0H
00000968 957A 1000      00000000 0000007A    947          CLI   0(1),122
0000096C 4770 C10C               00000974    948          BNE   @@gen_label43
00000970 B904 0051                           949          LGR   5,1
00000974                                     950 @@gen_label43 DS 0H
00000974 9500 1000      00000000 00000000    951          CLI   0(1),0
00000978 4780 C11C               00000984    952          BE    @@gen_label44
0000097C 4110 1001               00000001    953          LA    1,1(0,1)
00000980 47F0 C100               00000968    954          B     @@gen_label42
00000984                                     955 @@gen_label44 DS 0H
00000984 B902 0015                           956          LTGR  1,5         ; svct
00000988 4780 C1AA               00000A12    957          BZ    @L77
0000098C A759 FFFF               0000FFFF    958          LGHI  5,-1        ; -1
00000990 4155 1000               00000000    959          LA    5,0(5,1)
00000994 957A 5000      00000000 0000007A    960          CLI   0(5),122
00000998 4780 C1AA               00000A12    961          BE    @L77
                                             962 * ***          *(++svct)) {
0000099C B904 0051                           963          LGR   5,1
000009A0 4110 1001               00000001    964          LA    1,1(0,1)
000009A4 9500 5001      00000001 00000000    965          CLI   1(5),0
000009A8 4780 C1AA               00000A12    966          BE    @L77
                                             967 * ***
                                             968 * ***         if (__strlen(svct) >= sizeof(ssvc))
000009AC B904 0051                           969          LGR   5,1
000009B0 A709 0000               00000000    970          LGHI  0,0
000009B4                                     971 @@gen_label48 DS 0H
000009B4 B25E 0005                           972          SRST  0,5
000009B8 4710 C14C               000009B4    973          BC  1,@@gen_label48
000009BC B90B 0001                           974          SLGR  0,1
000009C0 C20E 0000 0040                      975          CLGFI 0,X'00000040'
000009C6 4740 C170               000009D8    976          BL    @L78
                                             977 * ***            return "Service name too long";
000009CA E3F0 C098 0004          00000900    978          LG    15,@lit_881_50
000009D0 41F0 F068               00000068    979          LA    15,104(0,15)
000009D4 47F0 C274               00000ADC    980          B     @ret_lab_881
000009D8                                     981 @L78     DS    0H
                                                                                                                           Page   23 
  Active Usings: @REGION_881_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             982 * ***         __strcpy(ssvc,svct);
000009D8 E350 C094 0014          000008FC    983          LGF   5,@lit_881_49
000009DE 4155 3000               00000000    984          LA    5,0(5,3)
000009E2 A75B 2000               00002000    985          AGHI  5,8192
000009E6 4150 5304               00000304    986          LA    5,772(0,5)
000009EA B904 0061                           987          LGR   6,1
000009EE 4100 0000               00000000    988          LA    0,0(0,0)
000009F2                                     989 @@gen_label50 DS 0H
000009F2 B255 0056                           990          MVST  5,6
000009F6 4710 C18A               000009F2    991          BC  1,@@gen_label50
                                             992 * ***         if (!nodelen)
000009FA B902 0052                           993          LTGR  5,2
000009FE 4770 C1CA               00000A32    994          BNZ   @L80
                                             995 * ***            nodelen = svct - nodesvc - 1;
00000A02 B909 001F                           996          SGR   1,15
00000A06 A71B FFFF               0000FFFF    997          AGHI  1,-1
00000A0A B904 0021                           998          LGR   2,1         ; nodelen
00000A0E                                     999 @L79     DS    0H
                                            1000 * ***
                                            1001 * ***      } else if (!nodelen)
00000A0E 47F0 C1CA               00000A32   1002          B     @L80
00000A12                                    1003 @L77     DS    0H
00000A12 B902 0012                          1004          LTGR  1,2
00000A16 4770 C1CA               00000A32   1005          BNZ   @L80
                                            1006 * ***         nodelen = __strlen(nodesvc);
00000A1A B904 001F                          1007          LGR   1,15
00000A1E A709 0000               00000000   1008          LGHI  0,0
00000A22                                    1009 @@gen_label53 DS 0H
00000A22 B25E 0001                          1010          SRST  0,1
00000A26 4710 C1BA               00000A22   1011          BC  1,@@gen_label53
00000A2A B90B 000F                          1012          SLGR  0,15
00000A2E B904 0020                          1013          LGR   2,0         ; nodelen
00000A32                                    1014 @L81     DS    0H
                                            1015 * ***
                                            1016 * ***      if (nodelen) {
00000A32                                    1017 @L80     DS    0H
00000A32 B902 0012                          1018          LTGR  1,2
00000A36 4780 C242               00000AAA   1019          BZ    @L82
                                            1020 * ***
                                            1021 * ***         nodelen = ((nodelen) < (sizeof(snode)-1) ? (nodelen) : (\
                                            1022 * sizeof(snode)-1));
00000A3A C22E 0000 00FF                     1023          CLGFI 2,X'000000FF'
00000A40 47B0 C1E0               00000A48   1024          BNL   @L83
00000A44 47F0 C1E4               00000A4C   1025          B     @L84
00000A48                                    1026 @L83     DS    0H
00000A48 A729 00FF               000000FF   1027          LGHI  2,255       ; 255
00000A4C                                    1028 @L84     DS    0H
                                            1029 * ***         __memcpy(snode,nodesvc,nodelen);
00000A4C E310 C094 0014          000008FC   1030          LGF   1,@lit_881_49
00000A52 4111 3000               00000000   1031          LA    1,0(1,3)
00000A56 A71B 2000               00002000   1032          AGHI  1,8192
00000A5A B904 005F                          1033          LGR   5,15
                                                                                                                           Page   24 
  Active Usings: @REGION_881_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000A5E 4110 1204               00000204   1034          LA    1,516(0,1)
00000A62 B902 00F2                          1035          LTGR  15,2
00000A66 4780 C22C               00000A94   1036          BZ    @@gen_label58
00000A6A A7FB FFFF               0000FFFF   1037          AGHI  15,-1
00000A6E EB6F 0008 000A          00000008   1038          SRAG  6,15,8(0)
00000A74 B902 0066                          1039          LTGR  6,6
00000A78 4780 C228               00000A90   1040          BZ    @@gen_label57
00000A7C                                    1041 @@gen_label56 DS 0H
00000A7C D2FF 1000 5000 00000000 00000000   1042          MVC   0(256,1),0(5)
00000A82 4110 1100               00000100   1043          LA    1,256(0,1)
00000A86 4150 5100               00000100   1044          LA    5,256(0,5)
00000A8A E360 C214 0046          00000A7C   1045          BCTG  6,@@gen_label56
00000A90                                    1046 @@gen_label57 DS 0H
00000A90 44F0 C0A0               00000908   1047          EX    15,@lit_881_57
00000A94                                    1048 @@gen_label58 DS 0H
                                            1049 * ***         snode[nodelen] = '\0';
00000A94 E3F0 C094 0014          000008FC   1050          LGF   15,@lit_881_49
00000A9A 41FF 3000               00000000   1051          LA    15,0(15,3)
00000A9E A7FB 2000               00002000   1052          AGHI  15,8192
00000AA2 41F2 F000               00000000   1053          LA    15,0(2,15)
00000AA6 9200 F204      00000204 00000000   1054          MVI   516(15),0
                                            1055 * ***      }
00000AAA                                    1056 @L82     DS    0H
                                            1057 * ***
                                            1058 * ***      *node = snode;
00000AAA E3F0 4008 0004          00000008   1059          LG    15,8(0,4)   ; node
00000AB0 E310 C094 0014          000008FC   1060          LGF   1,@lit_881_49
00000AB6 4111 3000               00000000   1061          LA    1,0(1,3)
00000ABA A71B 2000               00002000   1062          AGHI  1,8192
00000ABE 4120 1204               00000204   1063          LA    2,516(0,1)
00000AC2 E320 F000 0024          00000000   1064          STG   2,0(0,15)   ; node
                                            1065 * ***      *svc = ssvc;
00000AC8 E3F0 4010 0004          00000010   1066          LG    15,16(0,4)  ; svc
00000ACE 4110 1304               00000304   1067          LA    1,772(0,1)
00000AD2 E310 F000 0024          00000000   1068          STG   1,0(0,15)   ; svc
                                            1069 * ***
                                            1070 * ***      return ((void *)0);
00000AD8 A7F9 0000               00000000   1071          LGHI  15,0        ; 0
                                            1072 * ***   }
00000ADC                                    1073 @ret_lab_881 DS 0H
                                            1074 * * **** Start of Epilogue
                                            1075          DCCEPIL
00000ADC                                    1076+         ds 0h                                                          01-DCCEP
                                            1077+* Epilog
00000ADC D707 D088 D088 00000088 00000088   1078+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000AE2 E3D0 D080 0004          00000080   1079+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000AE8 E3C0 D090 0004          00000090   1080+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000AEE E3B0 C018 0004          00000018   1081+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000AF4 E3C0 B010 0021          00000010   1082+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000AFA E3E0 D008 0004          00000008   1083+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000B00 EB1C D020 0004          00000020   1084+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000B06 078E                               1085+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page   25 
  Active Usings: @REGION_881_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000B08 E3F0 D010 0024          00000010   1086+         stg 15,16(0,13)         save return code                       01-DCCEP
00000B0E E300 D018 0024          00000018   1087+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000B14 E3F0 D090 0004          00000090   1088+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000B1A E3F0 F018 0004          00000018   1089+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000B20 47F0 F040               00000040   1090+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1091+* End of Epilog
                                            1092 * * **** End of Epilogue
                                            1093          DROP  12
                                            1094 *
                                            1095 *   DSECT for automatic variables in "rd_addrinfo_prepare"
                                            1096 *      (FUNCTION #881)
                                            1097 *
00000000                00000000 000000B0   1098 @AUTO#rd_addrinfo_prepare DSECT
00000000                                    1099          DS    XL168
000000A8                                    1100 rd_addrinfo_prepare#nodelen#0 DS 8XL1 ; nodelen
                                            1101 *
00000B24                00000000 00001018   1102 @CODE    CSECT
                                            1103 *
                                            1104 *
                                            1105 *
                                            1106 * ....... start of rd_getaddrinfo
                                            1107 rd_getaddrinfo ALIAS X'99846D8785A38184849989958696'
00000B24                                    1108 @LNAME883 DS   0H
00000B24 0000000E                           1109          DC    X'0000000E'
00000B28 99846D8785A38184                   1110          DC    C'rd_getaddrinfo'
00000B36 00                                 1111          DC    X'00'
                                            1112 rd_getaddrinfo DCCPRLG CINDEX=883,BASER=12,FRAME=272,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME883
                                            1113          macro
                                            1114          dccextrn &m
                                            1115          gblc    &$dccext(1000)
                                            1116          gbla    &$dccexti
                                            1117          lcla    &i
                                            1118 &$dccext(&$dccexti+1) setc    '&m'
                                            1119 &i       seta    1
                                            1120 .loop    aif    (&i gt &$dccexti).around
                                            1121          aif    ('&$dccext(&i)' eq '&m').getout
                                            1122 &i       seta    &i+1
                                            1123          ago     .loop
                                            1124 .around  anop
                                            1125 &$dccexti seta &$dccexti+1
                                            1126          extrn  &m
                                            1127 .getout  anop
                                            1128          mend
00000B38                                    1129+$eye0019    ds    0d                                                    02-DCCCA
00000B38 C4C3C3                             1130+         dc cl3'DCC'                                                    02-DCCCA
00000B3B 01                                 1131+         dc xl1'01' format one                                          02-DCCCA
00000B3C 00000000                           1132+         dc a(0)                                                        02-DCCCA
00000B40 0000000000000BAA                   1133+         dc ad(@PER_883)                                                02-DCCCA
00000B48 0000000000000110                   1134+         dc ad(272)                                                     02-DCCCA
00000B50 0000000000000000                   1135+         dc ad(0)                                                       02-DCCCA
00000B58 0000000000001000                   1136+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000B60 20                                 1137+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B61 03                                 1138+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B62 03                                 1139+         dc al1(3)                                                      02-DCCCA
00000B63 08                                 1140+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B64 00                                 1141+         dc bl.8'00000000'                                              02-DCCCA
00000B65 000000                             1142+         dc al3(0)                                                      02-DCCCA
00000B68 0000000000000B24                   1143+         dc ad(@LNAME883)                                               02-DCCCA
00000B70                                    1144+         ds 0d                                                          02-DCCCA
00000B70 0000000000000B38                   1145+         dc ad($eye0019)                                                02-DCCCA
00000B78 0000000000000000                   1146+         dc ad(0)                                                       02-DCCCA
00000B80                                    1147+         ds    0d                                                       01-DCCPR
                                            1148+         entry rd_getaddrinfo                                           01-DCCPR
00000B80                                    1149+rd_getaddrinfo ds 0d                                                    01-DCCPR
00000B80                                    1150+@REGION_883_1 ds 0h                                                     01-DCCPR
00000B80 EBEC D008 0024          00000008   1151+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B86 E3E0 D088 0004          00000088   1152+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B8C E3C0 D090 0004          00000090   1153+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B92 B904 002E                          1154+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B96 E3B0 C018 0004          00000018   1155+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B9C A7EB 0110               00000110   1156+         aghi  14,272              increase by frame size               01-DCCPR
00000BA0 E3E0 C020 0021          00000020   1157+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000BA6 4720 B020               00000020   1158+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000BAA                                    1159+@PER_883 ds    0h                                                       01-DCCPR
00000BAA EBDE 2080 0024          00000080   1160+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000BB0 E3C0 2090 0024          00000090   1161+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000BB6 B904 00D2                          1162+         lgr   13,2                set real frame pointer               01-DCCPR
00000BBA B904 00CF                          1163+         lgr   12,15               set base reg                         01-DCCPR
                        00000B80            1164+         using @REGION_883_1,12                                         01-DCCPR
00000BBE B904 0041                          1165          LGR   4,1         ; ptr to parm area
                                            1166 * ******* End of Prologue
                                            1167 * *
00000BC2 E330 4030 0004          00000030   1168          LG    3,48(0,4)   ; errstr
                                            1169 * ***      struct addrinfo hints;
                                            1170 * ***         __memset(&hints,0,sizeof(hints));
00000BC8 41F0 D0A8               000000A8   1171          LA    15,168(0,13)
                                            1172 * setting 48 bytes to 0x00
00000BCC D72F F000 F000 00000000 00000000   1173          XC    0(48,15),0(15)
                                            1174 * ***         hints.ai_family = family;
00000BD2 58F0 401C               0000001C   1175          L     15,28(0,4)  ; family
00000BD6 50F0 D0AC               000000AC   1176          ST    15,172(0,13) ; offset of ai_family in addrinfo
                                            1177 * ***      hints.ai_socktype = socktype;
00000BDA 58F0 4024               00000024   1178          L     15,36(0,4)  ; socktype
00000BDE 50F0 D0B0               000000B0   1179          ST    15,176(0,13) ; offset of ai_socktype in addrinfo
                                            1180 * ***      hints.ai_protocol = protocol;
00000BE2 58F0 402C               0000002C   1181          L     15,44(0,4)  ; protocol
00000BE6 50F0 D0B4               000000B4   1182          ST    15,180(0,13) ; offset of ai_protocol in addrinfo
                                            1183 * ***      hints.ai_flags = flags;
00000BEA 58F0 4014               00000014   1184          L     15,20(0,4)  ; flags
00000BEE 50F0 D0A8               000000A8   1185          ST    15,168(0,13)
                                            1186 * ***
                                            1187 * ***      struct addrinfo *ais, *ai;
                                            1188 * ***      char *node, *svc;
                                                                                                                           Page   27 
  Active Usings: @REGION_883_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1189 * ***      int r;
                                            1190 * ***      int cnt = 0;
00000BF2 A728 0000               00000000   1191          LHI   2,0         ; 0
                                            1192 * ***      rd_sockaddr_list_t *rsal;
                                            1193 * ***
                                            1194 * ***      if ((*errstr = rd_addrinfo_prepare(nodesvc, &node, &svc))) \
                                            1195 * {
00000BF6 E3F0 4000 0004          00000000   1196          LG    15,0(0,4)   ; nodesvc
00000BFC E3F0 D0F0 0024          000000F0   1197          STG   15,240(0,13)
00000C02 41F0 D0E0               000000E0   1198          LA    15,224(0,13)
00000C06 E3F0 D0F8 0024          000000F8   1199          STG   15,248(0,13)
00000C0C 41F0 D0E8               000000E8   1200          LA    15,232(0,13)
00000C10 E3F0 D100 0024          00000100   1201          STG   15,256(0,13)
00000C16 4110 D0F0               000000F0   1202          LA    1,240(0,13)
00000C1A E3F0 C0D0 0004          00000C50   1203          LG    15,@lit_883_63 ; rd_addrinfo_prepare
00000C20                                    1204 @@gen_label59 DS    0H
00000C20 05EF                               1205          BALR  14,15
00000C22                                    1206 @@gen_label60 DS    0H
00000C22 E3F0 3000 0024          00000000   1207          STG   15,0(0,3)
00000C28 B902 00FF                          1208          LTGR  15,15
00000C2C 4780 C120               00000CA0   1209          BZ    @L85
                                            1210 * ***         (* __error()) = 22;
00000C30 E3F0 C0D8 0004          00000C58   1211          LG    15,@lit_883_64 ; __error
00000C36                                    1212 @@gen_label62 DS    0H
00000C36 05EF                               1213          BALR  14,15
00000C38                                    1214 @@gen_label63 DS    0H
00000C38 E54C F000 0016          00000000   1215          MVHI  0(15),22
                                            1216 * ***         return ((void *)0);
00000C3E A7F9 0000               00000000   1217          LGHI  15,0        ; 0
00000C42 47F0 C334               00000EB4   1218          B     @ret_lab_883
00000C48                                    1219          DS    0D
00000C48 00000110                           1220 @FRAMESIZE_883 DC F'272'
00000C4C 00000000
00000C50 0000000000000868                   1221 @lit_883_63 DC AD(rd_addrinfo_prepare)
00000C58 0000000000000000                   1222 @lit_883_64 DC AD(__error)
00000C60 0000000000000000                   1223 @lit_883_66 DC AD(getaddrinfo)
00000C68 0000000000000000                   1224 @lit_883_68 DC AD(strerror)
00000C70 0000000000000000                   1225 @lit_883_69 DC AD(gai_strerror)
00000C78 0000000000000000                   1226 @lit_883_72 DC AD(freeaddrinfo)
00000C80 000000000000105E                   1227 @lit_883_74 DC AD(@strings@)
00000C88 0000000000000058                   1228 @lit_883_76 DC AD(rd_calloc)
00000C90 D200 3000 5000 00000000 00000000   1229 @lit_883_77          MVC 0(1,3),0(5)
00000C96 0000
00000C98 0000000000000000                   1230 @lit_883_79 DC AD(rd_array_shuffle)
                                            1231 * ***      }
00000CA0                                    1232 @L85     DS    0H
                                            1233 * ***
                                            1234 * ***      if (*svc)
00000CA0 E3F0 D0E8 0004          000000E8   1235          LG    15,232(0,13) ; svc
00000CA6 9500 F000      00000000 00000000   1236          CLI   0(15),0
00000CAA 4780 C134               00000CB4   1237          BE    @L86
                                            1238 * ***         defsvc = svc;
                                                                                                                           Page   28 
  Active Usings: @REGION_883_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000CAE E3F0 4008 0024          00000008   1239          STG   15,8(0,4)   ; defsvc
00000CB4                                    1240 @L86     DS    0H
                                            1241 * ***
                                            1242 * ***      if ((r = getaddrinfo(node, defsvc, &hints, &ais))) {
00000CB4 E3F0 D0E0 0004          000000E0   1243          LG    15,224(0,13) ; node
00000CBA E3F0 D0F0 0024          000000F0   1244          STG   15,240(0,13)
00000CC0 E3F0 4008 0004          00000008   1245          LG    15,8(0,4)   ; defsvc
00000CC6 E3F0 D0F8 0024          000000F8   1246          STG   15,248(0,13)
00000CCC 41F0 D0A8               000000A8   1247          LA    15,168(0,13)
00000CD0 E3F0 D100 0024          00000100   1248          STG   15,256(0,13)
00000CD6 41F0 D0D8               000000D8   1249          LA    15,216(0,13)
00000CDA E3F0 D108 0024          00000108   1250          STG   15,264(0,13)
00000CE0 4110 D0F0               000000F0   1251          LA    1,240(0,13)
00000CE4 E3F0 C0E0 0004          00000C60   1252          LG    15,@lit_883_66 ; getaddrinfo
00000CEA                                    1253 @@gen_label65 DS    0H
00000CEA 05EF                               1254          BALR  14,15
00000CEC                                    1255 @@gen_label66 DS    0H
00000CEC 12FF                               1256          LTR   15,15
00000CEE 4780 C1D8               00000D58   1257          BZ    @L87
                                            1258 * ***
                                            1259 * ***         if (r == 11)
00000CF2 A7FE 000B               0000000B   1260          CHI   15,11
00000CF6 4770 C1A6               00000D26   1261          BNE   @L88
                                            1262 * ***
                                            1263 * ***
                                            1264 * ***
                                            1265 * ***            *errstr = strerror((* __error()));
00000CFA E3F0 C0D8 0004          00000C58   1266          LG    15,@lit_883_64 ; __error
00000D00                                    1267 @@gen_label69 DS    0H
00000D00 05EF                               1268          BALR  14,15
00000D02                                    1269 @@gen_label70 DS    0H
00000D02 58F0 F000               00000000   1270          L     15,0(0,15)
00000D06 B914 00FF                          1271          LGFR  15,15
00000D0A E3F0 D0F0 0024          000000F0   1272          STG   15,240(0,13)
00000D10 4110 D0F0               000000F0   1273          LA    1,240(0,13)
00000D14 E3F0 C0E8 0004          00000C68   1274          LG    15,@lit_883_68 ; strerror
00000D1A                                    1275 @@gen_label71 DS    0H
00000D1A 05EF                               1276          BALR  14,15
00000D1C                                    1277 @@gen_label72 DS    0H
00000D1C E3F0 3000 0024          00000000   1278          STG   15,0(0,3)
00000D22 47F0 C1D0               00000D50   1279          B     @L89
                                            1280 * ***         else {
00000D26                                    1281 @L88     DS    0H
                                            1282 * ***
                                            1283 * ***
                                            1284 * ***
                                            1285 * ***            *errstr = gai_strerror(r);
00000D26 B914 00FF                          1286          LGFR  15,15
00000D2A E3F0 D0F0 0024          000000F0   1287          STG   15,240(0,13)
00000D30 4110 D0F0               000000F0   1288          LA    1,240(0,13)
00000D34 E3F0 C0F0 0004          00000C70   1289          LG    15,@lit_883_69 ; gai_strerror
00000D3A                                    1290 @@gen_label73 DS    0H
                                                                                                                           Page   29 
  Active Usings: @REGION_883_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000D3A 05EF                               1291          BALR  14,15
00000D3C                                    1292 @@gen_label74 DS    0H
00000D3C E3F0 3000 0024          00000000   1293          STG   15,0(0,3)
                                            1294 * ***
                                            1295 * ***            (* __error()) = 14;
00000D42 E3F0 C0D8 0004          00000C58   1296          LG    15,@lit_883_64 ; __error
00000D48                                    1297 @@gen_label75 DS    0H
00000D48 05EF                               1298          BALR  14,15
00000D4A                                    1299 @@gen_label76 DS    0H
00000D4A E54C F000 000E          00000000   1300          MVHI  0(15),14
                                            1301 * ***         }
00000D50                                    1302 @L89     DS    0H
                                            1303 * ***         return ((void *)0);
00000D50 A7F9 0000               00000000   1304          LGHI  15,0        ; 0
00000D54 47F0 C334               00000EB4   1305          B     @ret_lab_883
                                            1306 * ***      }
00000D58                                    1307 @L87     DS    0H
                                            1308 * ***
                                            1309 * ***
                                            1310 * ***      for (ai = ais ; ai != ((void *)0) ; ai = ai->ai_next)
00000D58 E3F0 D0D8 0004          000000D8   1311          LG    15,216(0,13) ; ais
00000D5E 47F0 C1EC               00000D6C   1312          B     @L91
00000D62                                    1313 @L90     DS    0H
                                            1314 * ***         cnt++;
00000D62 A72A 0001               00000001   1315          AHI   2,1
00000D66 E3F0 F028 0004          00000028   1316          LG    15,40(0,15) ; offset of ai_next in addrinfo
00000D6C                                    1317 @L91     DS    0H
00000D6C B902 001F                          1318          LTGR  1,15
00000D70 4770 C1E2               00000D62   1319          BNE   @L90
                                            1320 * ***
                                            1321 * ***      if (cnt == 0) {
00000D74 1222                               1322          LTR   2,2
00000D76 4770 C238               00000DB8   1323          BNE   @L94
                                            1324 * ***
                                            1325 * ***         freeaddrinfo(ais);
00000D7A E3F0 D0D8 0004          000000D8   1326          LG    15,216(0,13) ; ais
00000D80 E3F0 D0F0 0024          000000F0   1327          STG   15,240(0,13)
00000D86 4110 D0F0               000000F0   1328          LA    1,240(0,13)
00000D8A E3F0 C0F8 0004          00000C78   1329          LG    15,@lit_883_72 ; freeaddrinfo
00000D90                                    1330 @@gen_label79 DS    0H
00000D90 05EF                               1331          BALR  14,15
00000D92                                    1332 @@gen_label80 DS    0H
                                            1333 * ***         (* __error()) = 2;
00000D92 E3F0 C0D8 0004          00000C58   1334          LG    15,@lit_883_64 ; __error
00000D98                                    1335 @@gen_label81 DS    0H
00000D98 05EF                               1336          BALR  14,15
00000D9A                                    1337 @@gen_label82 DS    0H
00000D9A E54C F000 0002          00000000   1338          MVHI  0(15),2
                                            1339 * ***         *errstr = "No addresses";
00000DA0 E3F0 C100 0004          00000C80   1340          LG    15,@lit_883_74
00000DA6 41F0 F07E               0000007E   1341          LA    15,126(0,15)
00000DAA E3F0 3000 0024          00000000   1342          STG   15,0(0,3)   ; errstr
                                                                                                                           Page   30 
  Active Usings: @REGION_883_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1343 * ***         return ((void *)0);
00000DB0 A7F9 0000               00000000   1344          LGHI  15,0        ; 0
00000DB4 47F0 C334               00000EB4   1345          B     @ret_lab_883
                                            1346 * ***      }
00000DB8                                    1347 @L94     DS    0H
                                            1348 * ***
                                            1349 * ***
                                            1350 * ***      rsal = rd_calloc(1, sizeof(*rsal) + (sizeof(*rsal->rsal_add\
                                            1351 * r) * cnt));
00000DB8 E548 D0F0 0001          000000F0   1352          MVGHI 240(13),1
00000DBE B914 00F2                          1353          LGFR  15,2
00000DC2 EB1F 0003 000D          00000003   1354          SLLG  1,15,3(0)   ;   .
00000DC8 B90B 001F                          1355          SLGR  1,15        ;   .
00000DCC EB11 0002 000D          00000002   1356          SLLG  1,1,2(0)    ;   .
00000DD2 A71B 0008               00000008   1357          AGHI  1,8
00000DD6 E310 D0F8 0024          000000F8   1358          STG   1,248(0,13)
00000DDC 4110 D0F0               000000F0   1359          LA    1,240(0,13)
00000DE0 E3F0 C108 0004          00000C88   1360          LG    15,@lit_883_76 ; rd_calloc
00000DE6                                    1361 @@gen_label83 DS    0H
00000DE6 05EF                               1362          BALR  14,15
00000DE8                                    1363 @@gen_label84 DS    0H
00000DE8 B904 002F                          1364          LGR   2,15
                                            1365 * ***
                                            1366 * ***      for (ai = ais ; ai != ((void *)0) ; ai = ai->ai_next)
00000DEC E3F0 D0D8 0004          000000D8   1367          LG    15,216(0,13) ; ais
00000DF2 47F0 C2E0               00000E60   1368          B     @L96
00000DF6                                    1369 @L95     DS    0H
                                            1370 * ***         __memcpy(&rsal->rsal_addr[rsal->rsal_cnt++],ai->ai_addr,\
                                            1371 * ai->ai_addrlen);
00000DF6 5810 2000               00000000   1372          L     1,0(0,2)
00000DFA 1831                               1373          LR    3,1
00000DFC A73A 0001               00000001   1374          AHI   3,1
00000E00 5030 2000               00000000   1375          ST    3,0(0,2)
00000E04 B914 0011                          1376          LGFR  1,1
00000E08 EB31 0003 000D          00000003   1377          SLLG  3,1,3(0)    ;   .
00000E0E B90B 0031                          1378          SLGR  3,1         ;   .
00000E12 EB33 0002 000D          00000002   1379          SLLG  3,3,2(0)    ;   .
00000E18 E310 F010 0016          00000010   1380          LLGF  1,16(0,15)
00000E1E E350 F020 0004          00000020   1381          LG    5,32(0,15)
00000E24 4133 2008               00000008   1382          LA    3,8(3,2)
00000E28 B902 0011                          1383          LTGR  1,1
00000E2C 4780 C2DA               00000E5A   1384          BZ    @@gen_label87
00000E30 A71B FFFF               0000FFFF   1385          AGHI  1,-1
00000E34 EB61 0008 000A          00000008   1386          SRAG  6,1,8(0)
00000E3A B902 0066                          1387          LTGR  6,6
00000E3E 4780 C2D6               00000E56   1388          BZ    @@gen_label86
00000E42                                    1389 @@gen_label85 DS 0H
00000E42 D2FF 3000 5000 00000000 00000000   1390          MVC   0(256,3),0(5)
00000E48 4130 3100               00000100   1391          LA    3,256(0,3)
00000E4C 4150 5100               00000100   1392          LA    5,256(0,5)
00000E50 E360 C2C2 0046          00000E42   1393          BCTG  6,@@gen_label85
00000E56                                    1394 @@gen_label86 DS 0H
                                                                                                                           Page   31 
  Active Usings: @REGION_883_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000E56 4410 C110               00000C90   1395          EX    1,@lit_883_77
00000E5A                                    1396 @@gen_label87 DS 0H
00000E5A E3F0 F028 0004          00000028   1397          LG    15,40(0,15) ; offset of ai_next in addrinfo
00000E60                                    1398 @L96     DS    0H
00000E60 B902 001F                          1399          LTGR  1,15
00000E64 4770 C276               00000DF6   1400          BNE   @L95
                                            1401 * ***
                                            1402 * ***
                                            1403 * ***      freeaddrinfo(ais);
00000E68 E3F0 D0D8 0004          000000D8   1404          LG    15,216(0,13) ; ais
00000E6E E3F0 D0F0 0024          000000F0   1405          STG   15,240(0,13)
00000E74 4110 D0F0               000000F0   1406          LA    1,240(0,13)
00000E78 E3F0 C0F8 0004          00000C78   1407          LG    15,@lit_883_72 ; freeaddrinfo
00000E7E                                    1408 @@gen_label89 DS    0H
00000E7E 05EF                               1409          BALR  14,15
00000E80                                    1410 @@gen_label90 DS    0H
                                            1411 * ***
                                            1412 * ***
                                            1413 * ***      if (!(flags & 0x10000000))
00000E80 9110 4014      00000014 00000010   1414          TM    20(4),16
00000E84 4770 C330               00000EB0   1415          BNZ   @L99
                                            1416 * ***         rd_array_shuffle(rsal->rsal_addr, rsal->rsal_cnt,
                                            1417 * ***                sizeof(*rsal->rsal_addr));
00000E88 41F0 2008               00000008   1418          LA    15,8(0,2)
00000E8C E3F0 D0F0 0024          000000F0   1419          STG   15,240(0,13)
00000E92 E3F0 2000 0014          00000000   1420          LGF   15,0(0,2)
00000E98 E3F0 D0F8 0024          000000F8   1421          STG   15,248(0,13)
00000E9E E548 D100 001C          00000100   1422          MVGHI 256(13),28
00000EA4 4110 D0F0               000000F0   1423          LA    1,240(0,13)
00000EA8 E3F0 C118 0004          00000C98   1424          LG    15,@lit_883_79 ; rd_array_shuffle
00000EAE                                    1425 @@gen_label92 DS    0H
00000EAE 05EF                               1426          BALR  14,15
00000EB0                                    1427 @@gen_label93 DS    0H
00000EB0                                    1428 @L99     DS    0H
                                            1429 * ***
                                            1430 * ***      return rsal;
00000EB0 B904 00F2                          1431          LGR   15,2
                                            1432 * ***   }
00000EB4                                    1433 @ret_lab_883 DS 0H
                                            1434 * * **** Start of Epilogue
                                            1435          DCCEPIL
00000EB4                                    1436+         ds 0h                                                          01-DCCEP
                                            1437+* Epilog
00000EB4 D707 D088 D088 00000088 00000088   1438+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000EBA E3D0 D080 0004          00000080   1439+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000EC0 E3C0 D090 0004          00000090   1440+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000EC6 E3B0 C018 0004          00000018   1441+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000ECC E3C0 B010 0021          00000010   1442+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000ED2 E3E0 D008 0004          00000008   1443+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000ED8 EB1C D020 0004          00000020   1444+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000EDE 078E                               1445+         bcr 8,14                if same dsab, just return              01-DCCEP
00000EE0 E3F0 D010 0024          00000010   1446+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page   32 
  Active Usings: @REGION_883_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000EE6 E300 D018 0024          00000018   1447+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000EEC E3F0 D090 0004          00000090   1448+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000EF2 E3F0 F018 0004          00000018   1449+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000EF8 47F0 F040               00000040   1450+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1451+* End of Epilog
                                            1452 * * **** End of Epilogue
                                            1453          DROP  12
                                            1454 *
                                            1455 *   DSECT for automatic variables in "rd_getaddrinfo"
                                            1456 *      (FUNCTION #883)
                                            1457 *
00000000                00000000 000000D8   1458 @AUTO#rd_getaddrinfo DSECT
00000000                                    1459          DS    XL168
000000A8                                    1460 rd_getaddrinfo#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8   1461          ORG   @AUTO#rd_getaddrinfo+168
000000A8                                    1462 rd_getaddrinfo#r#0 DS 1F   ; r
000000AC                000000AC 000000A8   1463          ORG   @AUTO#rd_getaddrinfo+168
000000A8                                    1464 rd_getaddrinfo#hints#0 DS 48XL1 ; hints
                                            1465 *
00000EFC                00000000 00001018   1466 @CODE    CSECT
                                            1467 *
                                            1468 *
                                            1469 *
                                            1470 * ....... start of rd_sockaddr_list_destroy
                                            1471 rd_sockaddr_list_destroy ALIAS X'99846DA2968392818484996D9389A2A36D8485*
                                                                A2A39996A8'
00000EFC                                    1472 @LNAME884 DS   0H
00000EFC 00000018                           1473          DC    X'00000018'
00000F00 99846DA296839281                   1474          DC    C'rd_sockaddr_list_destroy'
00000F18 00                                 1475          DC    X'00'
                                            1476 rd_sockaddr_list_destroy DCCPRLG CINDEX=884,BASER=12,FRAME=176,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME884
                                            1477          macro
                                            1478          dccextrn &m
                                            1479          gblc    &$dccext(1000)
                                            1480          gbla    &$dccexti
                                            1481          lcla    &i
                                            1482 &$dccext(&$dccexti+1) setc    '&m'
                                            1483 &i       seta    1
                                            1484 .loop    aif    (&i gt &$dccexti).around
                                            1485          aif    ('&$dccext(&i)' eq '&m').getout
                                            1486 &i       seta    &i+1
                                            1487          ago     .loop
                                            1488 .around  anop
                                            1489 &$dccexti seta &$dccexti+1
                                            1490          extrn  &m
                                            1491 .getout  anop
                                            1492          mend
00000F20                                    1493+$eye0022    ds    0d                                                    02-DCCCA
00000F20 C4C3C3                             1494+         dc cl3'DCC'                                                    02-DCCCA
00000F23 01                                 1495+         dc xl1'01' format one                                          02-DCCCA
00000F24 00000000                           1496+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000F28 0000000000000F92                   1497+         dc ad(@PER_884)                                                02-DCCCA
00000F30 00000000000000B0                   1498+         dc ad(176)                                                     02-DCCCA
00000F38 0000000000000000                   1499+         dc ad(0)                                                       02-DCCCA
00000F40 0000000000001000                   1500+         dc ad(4096)                                                    02-DCCCA
00000F48 20                                 1501+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F49 03                                 1502+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F4A 03                                 1503+         dc al1(3)                                                      02-DCCCA
00000F4B 08                                 1504+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F4C 00                                 1505+         dc bl.8'00000000'                                              02-DCCCA
00000F4D 000000                             1506+         dc al3(0)                                                      02-DCCCA
00000F50 0000000000000EFC                   1507+         dc ad(@LNAME884)                                               02-DCCCA
00000F58                                    1508+         ds 0d                                                          02-DCCCA
00000F58 0000000000000F20                   1509+         dc ad($eye0022)                                                02-DCCCA
00000F60 0000000000000000                   1510+         dc ad(0)                                                       02-DCCCA
00000F68                                    1511+         ds    0d                                                       01-DCCPR
                                            1512+         entry rd_sockaddr_list_destroy                                 01-DCCPR
00000F68                                    1513+rd_sockaddr_list_destroy ds 0d                                          01-DCCPR
00000F68                                    1514+@REGION_884_1 ds 0h                                                     01-DCCPR
00000F68 EBEC D008 0024          00000008   1515+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F6E E3E0 D088 0004          00000088   1516+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F74 E3C0 D090 0004          00000090   1517+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F7A B904 002E                          1518+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F7E E3B0 C018 0004          00000018   1519+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F84 A7EB 00B0               000000B0   1520+         aghi  14,176              increase by frame size               01-DCCPR
00000F88 E3E0 C020 0021          00000020   1521+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F8E 4720 B020               00000020   1522+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F92                                    1523+@PER_884 ds    0h                                                       01-DCCPR
00000F92 EBDE 2080 0024          00000080   1524+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F98 E3C0 2090 0024          00000090   1525+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F9E B904 00D2                          1526+         lgr   13,2                set real frame pointer               01-DCCPR
00000FA2 B904 00CF                          1527+         lgr   12,15               set base reg                         01-DCCPR
                        00000F68            1528+         using @REGION_884_1,12                                         01-DCCPR
                                            1529 * ******* End of Prologue
                                            1530 * *
                                            1531 * ***      rd_free(rsal);
00000FA6 E3F0 1000 0004          00000000   1532          LG    15,0(0,1)   ; rsal
00000FAC E3F0 D0A8 0024          000000A8   1533          STG   15,168(0,13)
00000FB2 4110 D0A8               000000A8   1534          LA    1,168(0,13)
00000FB6 E3F0 C0A8 0004          00001010   1535          LG    15,@lit_884_81 ; rd_free
00000FBC                                    1536 @@gen_label94 DS    0H
00000FBC 05EF                               1537          BALR  14,15
00000FBE                                    1538 @@gen_label95 DS    0H
                                            1539 * ***   }
00000FBE                                    1540 @ret_lab_884 DS 0H
                                            1541 * * **** Start of Epilogue
                                            1542          DCCEPIL
00000FBE                                    1543+         ds 0h                                                          01-DCCEP
                                            1544+* Epilog
00000FBE D707 D088 D088 00000088 00000088   1545+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000FC4 E3D0 D080 0004          00000080   1546+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000FCA E3C0 D090 0004          00000090   1547+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000FD0 E3B0 C018 0004          00000018   1548+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page   34 
  Active Usings: @REGION_884_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000FD6 E3C0 B010 0021          00000010   1549+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000FDC E3E0 D008 0004          00000008   1550+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000FE2 EB1C D020 0004          00000020   1551+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000FE8 078E                               1552+         bcr 8,14                if same dsab, just return              01-DCCEP
00000FEA E3F0 D010 0024          00000010   1553+         stg 15,16(0,13)         save return code                       01-DCCEP
00000FF0 E300 D018 0024          00000018   1554+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000FF6 E3F0 D090 0004          00000090   1555+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000FFC E3F0 F018 0004          00000018   1556+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001002 47F0 F040               00000040   1557+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1558+* End of Epilog
                                            1559 * * **** End of Epilogue
00001008                                    1560          DS    0D
00001008 000000B0                           1561 @FRAMESIZE_884 DC F'176'
0000100C 00000000
00001010 00000000000001C8                   1562 @lit_884_81 DC AD(rd_free)
                                            1563          DROP  12
                                            1564 *
                                            1565 *   DSECT for automatic variables in "rd_sockaddr_list_destroy"
                                            1566 *      (FUNCTION #884)
                                            1567 *
00000000                00000000 000000A8   1568 @AUTO#rd_sockaddr_list_destroy DSECT
00000000                                    1569          DS    XL168
                                            1570 *
00001018                00000000 00001018   1571 @CODE    CSECT
                                            1572 @@STATIC ALIAS X'7C99848184849950'
                                            1573 @@STATIC DXD   1129D
                                            1574 *
                                            1575 *  Non-Re-Entrant Data Section
                                            1576 *
00001018                00001018 000000D2   1577 @DATA    CSECT
                                            1578 @DATA    RMODE ANY
                                            1579 @DATA    AMODE ANY
00001018 99846D8381939396                   1580 @@T349   DC    X'99846D838193939683'               rd.calloc
00001021 00                                 1581          DC    1X'00'
00001022 99846D9481939396                   1582 @@T34D   DC    X'99846D948193939683'               rd.malloc
0000102B 00                                 1583          DC    1X'00'
0000102C 99846D9985819393                   1584 @@T352   DC    X'99846D99858193939683'             rd.realloc
00001036 0000                               1585          DC    2X'00'
00001038 99846DA2A39984A4                   1586 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00001041 00                                 1587          DC    1X'00'
00001042 99846DA2A3999584                   1588 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
0000104C 0000                               1589          DC    2X'00'
0000104E 99846D9985868395                   1590 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
0000105C 00                                 1591          DC    1X'00'
0000105E                                    1592 @strings@ DS   0H
0000105E C37AE081A2879281                   1593          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
0000106E 849281869281E0A2                   1594          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
0000107E 9700899585A30000                   1595          DC    X'9700899585A30000899585A3F6008186' p.inet..inet6.af
0000108E 6F008997A56C897B                   1596          DC    X'6F008997A56C897B0000BD0000006CA2' ..ipv.i........s
0000109E 7A6CA2004CA495A2                   1597          DC    X'7A6CA2004CA495A2A497979699A38584' ..s..unsupported
000010AE 7A6CA26E0000D489                   1598          DC    X'7A6CA26E0000D489A2A2899587408393' ..s...Missing.cl
000010BE 96A285607DBD7D00                   1599          DC    X'96A285607DBD7D00E28599A589838540' ose.....Service.
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000010CE 9581948540A39696                   1600          DC    X'9581948540A39696409396958700D596' name.too.long.No
000010DE 408184849985A2A2                   1601          DC    X'408184849985A2A285A20000'         .addresses..
                                            1602 *
                                            1603 *
                                            1604 *   Re-entrant Data Initialization Section
                                            1605 *
                                            1606 @@INIT@  ALIAS C'@rdaddr:'
000010F0                000010F0 00000230   1607 @@INIT@  CSECT
                                            1608 @@INIT@  AMODE ANY
                                            1609 @@INIT@  RMODE ANY
000010F0 05                                 1610          DC    XL1'5'
000010F1 000000                             1611          DC    AL3(0)
000010F4 00000120                           1612          DC    AL4(288)
000010F8 00000000                           1613          DC    4X'00'
000010FC 00000000                           1614          DC    Q(@@STATIC)
00001100 00000000                           1615          DC    X'00000000'
00001104 00000001                           1616          DC    X'00000001'
00001108 00000000                           1617          DC    X'00000000'
0000110C 000000FF                           1618          DC    X'000000FF'
00001110 0102039C09867F97                   1619          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00001120 1112139D85088718                   1620          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00001130 818283840A171B88                   1621          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00001140 9116939495960498                   1622          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00001150 A0E2E4E0E1E3E5E7                   1623          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00001160 E9EAEBE8EDEEEFEC                   1624          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00001170 2FC2C4C0C1C3C5C7                   1625          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00001180 C9CACBC8CDCECFCC                   1626          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00001190 6162636465666768                   1627          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
000011A0 6A6B6C6D6E6F7071                   1628          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
000011B0 7E73747576777879                   1629          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
000011C0 A3A5B7A9A7B6BCBD                   1630          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
000011D0 4142434445464748                   1631          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
000011E0 4A4B4C4D4E4F5051                   1632          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
000011F0 F753545556575859                   1633          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00001200 3132333435363738                   1634          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            1635 *
00001210 05                                 1636          DC    XL1'5'
00001211 000000                             1637          DC    AL3(0)
00001214 000001E0                           1638          DC    AL4(480)
00001218 00000000                           1639          DC    4X'00'
0000121C 00000000                           1640          DC    Q(@@STATIC)
00001220 00000000                           1641          DC    X'00000000'
00001224 00000101                           1642          DC    X'00000101'
00001228 00000000                           1643          DC    X'00000000'
0000122C 000000A0                           1644          DC    X'000000A0'
00001230 010203372D2E2F16                   1645          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00001240 1112133C3D322618                   1646          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00001250 5A7F7B5B6C507D4D                   1647          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00001260 F1F2F3F4F5F6F7F8                   1648          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00001270 C1C2C3C4C5C6C7C8                   1649          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00001280 D8D9E2E3E4E5E6E7                   1650          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00001290 8182838485868788                   1651          DC    X'81828384858687888991929394959697' abcdefghijklmnop
                                                                                                                           Page   36 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000012A0 9899A2A3A4A5A6A7                   1652          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
000012B0 2122232425061728                   1653          DC    X'2122232425061728292A2B2C090A1B30' ................
000012C0 311A333435360838                   1654          DC    X'311A333435360838393A3B04143EFF80' ................
                                            1655 *
000012D0 05                                 1656          DC    XL1'5'
000012D1 000000                             1657          DC    AL3(0)
000012D4 00000208                           1658          DC    AL4(520)
000012D8 00000000                           1659          DC    4X'00'
000012DC 00000000                           1660          DC    Q(@@STATIC)
000012E0 00000000                           1661          DC    X'00000000'
000012E4 000001C0                           1662          DC    X'000001C0'
000012E8 00000000                           1663          DC    X'00000000'
000012EC 00000001                           1664          DC    X'00000001'
000012F0 8A40404040404040                   1665          DC    X'8A40404040404040'                 ........
                                            1666 *
000012F8 05                                 1667          DC    XL1'5'
000012F9 000000                             1668          DC    AL3(0)
000012FC 00000000                           1669          DC    AL4(0)
00001300 00000000                           1670          DC    4X'00'
00001304 00000000                           1671          DC    Q(@@STATIC)
00001308 00000000                           1672          DC    X'00000000'
0000130C 000001E0                           1673          DC    X'000001E0'
00001310 00000000                           1674          DC    X'00000000'
00001314 00000001                           1675          DC    X'00000001'
00001318 8B40404040404040                   1676          DC    X'8B40404040404040'                 ........
                                            1677 *
                                            1678          END
                                                 Relocation Dictionary                                                     Page   37 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000009 00000150   A 4      +
 00000002 00000007 00000158   A 4      +
 00000002 0000000F 00000160   A 4      +
 00000002 0000000F 00000168   A 4      +
 00000002 00000002 00000188   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 00000002 000001B8   A 4      +
 00000002 0000000D 00000270   A 4      +
 00000002 00000002 000002C0   A 4      +
 00000002 00000002 000002C8   A 4      +
 00000002 0000000F 000002E8   A 4      +
 00000002 00000002 00000368   A 4      +
 00000002 00000002 00000390   A 4      +
 00000002 00000002 00000398   A 4      +
 00000002 0000000E 00000434   Q 4      +
 00000002 00000004 00000438   A 4      +
 00000002 0000000F 00000440   A 4      +
 00000002 0000000A 00000448   A 4      +
 00000002 00000002 00000450   A 4      +
 00000002 00000002 00000828   A 4      +
 00000002 00000002 00000850   A 4      +
 00000002 00000002 00000858   A 4      +
 00000002 0000000E 000008FC   Q 4      +
 00000002 0000000F 00000900   A 4      +
 00000002 00000002 00000B40   A 4      +
 00000002 00000002 00000B68   A 4      +
 00000002 00000002 00000B70   A 4      +
 00000002 00000002 00000C50   A 4      +
 00000002 00000006 00000C58   A 4      +
 00000002 00000008 00000C60   A 4      +
 00000002 00000005 00000C68   A 4      +
 00000002 0000000C 00000C70   A 4      +
 00000002 0000000B 00000C78   A 4      +
 00000002 0000000F 00000C80   A 4      +
 00000002 00000002 00000C88   A 4      +
 00000002 00000003 00000C98   A 4      +
 00000002 00000002 00000F28   A 4      +
 00000002 00000002 00000F50   A 4      +
 00000002 00000002 00000F58   A 4      +
 00000002 00000002 00001010   A 4      +
 00000010 0000000E 000010FC   Q 4      +
 00000010 0000000E 0000121C   Q 4      +
 00000010 0000000E 000012DC   Q 4      +
 00000010 0000000E 00001304   Q 4      +
                                                 DSECT Cross Reference                                                     Page   38 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#rd_addrinfo_prepare
         000000B0  FFFFFFFB  01098
@AUTO#rd_calloc
         000000A8  FFFFFFFF  00164
@AUTO#rd_family2str
         000000A8  FFFFFFFD  00371
@AUTO#rd_free
         000000A8  FFFFFFFE  00267
@AUTO#rd_getaddrinfo
         000000D8  FFFFFFFA  01458
@AUTO#rd_sockaddr_list_destroy
         000000A8  FFFFFFF9  01568
@AUTO#rd_sockaddr2str
         000000C8  FFFFFFFC  00788
                                          Macro and Copy Code Source Summary                                               Page   39 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:35 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page   40 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
    99  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00110    126 @REGION_751_1,12
   159  00000170  00000002 DROP                                           12              12
   227  00000206  00000002 USING  ORDINARY    000001C8 00001000 00000002  12 000A8    234 @REGION_754_1,12
   262  00000278  00000002 DROP                                           12              12
   319  000002E2  00000002 USING  ORDINARY    000002D8 00001000 00000002  12 00062    353 @REGION_885_1,12
   366  00000348  00000002 DROP                                           12              12
   436  000003E6  00000002 USING  ORDINARY    000003A8 00001000 00000002  12 00412    752 @REGION_880_1,12
   783  00000802  00000002 DROP                                           12              12
   862  000008A6  00000002 USING  ORDINARY    00000868 00001000 00000002  12 00274   1060 @REGION_881_1,12
  1093  00000B24  00000002 DROP                                           12              12
  1164  00000BBE  00000002 USING  ORDINARY    00000B80 00001000 00000002  12 00334   1424 @REGION_883_1,12
  1453  00000EFC  00000002 DROP                                           12              12
  1528  00000FA6  00000002 USING  ORDINARY    00000F68 00001000 00000002  12 000A8   1535 @REGION_884_1,12
  1563  00001018  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page   41 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDADDR   ..\asg\asm\rdaddr.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.35.14 Stop Time: 15.35.14 Processor Time: 00.00.00.0130
Return Code 000
