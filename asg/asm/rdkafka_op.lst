                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_op.obj ../asg/asm/rdkafka_op.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_op.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_OP
          SD 00000002 00000000 00005F80            07  @CODE
rd_kafka_metadata_destroy
          ER 00000003                                  RD_KAFKA_METADATA_DESTROY
write     ER 00000004                                  WRITE
@@ASSERT  ER 00000005                                  __ASSERT
mtx_lock  ER 00000006                                  MTX_LOCK
fprintf   ER 00000007                                  FPRINTF
rd_hdr_histogram_record
          ER 00000008                                  RD_HDR_HISTOGRAM_RECORD
mtx_unlock
          ER 00000009                                  MTX_UNLOCK
cnd_signal
          ER 0000000A                                  CND_SIGNAL
rd_kafka_toppar_destroy_final
          ER 0000000B                                  RD_KAFKA_TOPPAR_DESTROY_FINAL
rd_kafka_err2str
          ER 0000000C                                  RD_KAFKA_ERR2STR
rd_kafka_q_new0
          ER 0000000D                                  RD_KAFKA_Q_NEW0
rd_kafka_q_destroy_final
          ER 0000000E                                  RD_KAFKA_Q_DESTROY_FINAL
rd_kafka_error_code
          ER 0000000F                                  RD_KAFKA_ERROR_CODE
rd_kafka_error_destroy
          ER 00000010                                  RD_KAFKA_ERROR_DESTROY
rd_kafka_error_new
          ER 00000011                                  RD_KAFKA_ERROR_NEW
rd_kafka_topic_partition_list_destroy
          ER 00000012                                  RD_KAFKA_TOPIC_PARTITION_LIST_DESTROY
calloc    ER 00000013                                  CALLOC
rd_kafka_q_purge0
          ER 00000014                                  RD_KAFKA_Q_PURGE0
VSNPRNT@  ER 00000015                                  VSNPRINTF
free      ER 00000016                                  FREE
rd_kafka_q_pop
          ER 00000017                                  RD_KAFKA_Q_POP
@@PT3ML   ER 00000018                                  PTHREAD_MUTEX_LOCK
rd_list_destroy
          ER 00000019                                  RD_LIST_DESTROY
@@PT3MU   ER 0000001A                                  PTHREAD_MUTEX_UNLOCK
rd_kafka_lwtopic_destroy
          ER 0000001B                                  RD_KAFKA_LWTOPIC_DESTROY
rd_kafka_lwtopic_new
          ER 0000001C                                  RD_KAFKA_LWTOPIC_NEW
rd_kafka_broker_destroy_final
          ER 0000001D                                  RD_KAFKA_BROKER_DESTROY_FINAL
rd_kafka_yield_thread
          XD 0000001E 00000003 00000000                RD_KAFKA_YIELD_THREAD
rd_kafka_buf_destroy_final
          ER 0000001F                                  RD_KAFKA_BUF_DESTROY_FINAL
rd_kafka_topic_destroy_final
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
          ER 00000020                                  RD_KAFKA_TOPIC_DESTROY_FINAL
rd_kafka_buf_handle_op
          ER 00000021                                  RD_KAFKA_BUF_HANDLE_OP
strdup    ER 00000022                                  STRDUP
rd_kafka_crash
          ER 00000023                                  RD_KAFKA_CRASH
rd_kafka_msg_destroy
          ER 00000024                                  RD_KAFKA_MSG_DESTROY
rd_kafka_consumer_group_metadata_destroy
          ER 00000025                                  RD_KAFKA_CONSUMER_GROUP_METADATA_DESTROY
rd_kafka_op_cnt
          XD 00000026 00000007 00000030                RD_KAFKA_OP_CNT
@rdkafka_op&
          XD 00000027 00000007 00000870                @@STATIC
@rdkafka_op
          SD 00000028 00005F80 0000105C            07  @DATA
rd_kafka_yield_thread
          ER 00000029                                  @ERD_KAFKA_YIELD_THREAD
rdkafka_op:
          SD 0000002A 00006FE0 00001838            07  @@INIT@
rd_kafka_op2str
          LD          00002AD0          00000002   00  RD_KAFKA_OP2STR
rd_kafka_op_print
          LD          00002C80          00000002   00  RD_KAFKA_OP_PRINT
rd_kafka_op_new0
          LD          00003180          00000002   00  RD_KAFKA_OP_NEW0
rd_kafka_op_destroy
          LD          00003330          00000002   00  RD_KAFKA_OP_DESTROY
rd_kafka_q_op_err
          LD          00004188          00000002   00  RD_KAFKA_Q_OP_ERR
rd_kafka_consumer_err
          LD          00004338          00000002   00  RD_KAFKA_CONSUMER_ERR
rd_kafka_op_new_reply
          LD          00004588          00000002   00  RD_KAFKA_OP_NEW_REPLY
rd_kafka_op_new_cb
          LD          00004718          00000002   00  RD_KAFKA_OP_NEW_CB
rd_kafka_op_reply
          LD          00004850          00000002   00  RD_KAFKA_OP_REPLY
rd_kafka_op_error_reply
          LD          000049D8          00000002   00  RD_KAFKA_OP_ERROR_REPLY
rd_kafka_op_req0
          LD          00004BA8          00000002   00  RD_KAFKA_OP_REQ0
rd_kafka_op_req
          LD          00004D50          00000002   00  RD_KAFKA_OP_REQ
rd_kafka_op_req2
          LD          00004EE8          00000002   00  RD_KAFKA_OP_REQ2
rd_kafka_op_err_destroy
          LD          00005038          00000002   00  RD_KAFKA_OP_ERR_DESTROY
rd_kafka_op_error_destroy
          LD          00005168          00000002   00  RD_KAFKA_OP_ERROR_DESTROY
rd_kafka_op_call
          LD          000052C8          00000002   00  RD_KAFKA_OP_CALL
rd_kafka_op_new_ctrl_msg
                                              External Symbol Dictionary                                                   Page    5 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
          LD          00005490          00000002   00  RD_KAFKA_OP_NEW_CTRL_MSG
rd_kafka_op_new_fetch_msg
          LD          000055F0          00000002   00  RD_KAFKA_OP_NEW_FETCH_MSG
rd_kafka_op_throttle_time
          LD          000057F8          00000002   00  RD_KAFKA_OP_THROTTLE_TIME
rd_kafka_op_handle_std
          LD          00005A20          00000002   00  RD_KAFKA_OP_HANDLE_STD
rd_kafka_op_handle
          LD          00005C28          00000002   00  RD_KAFKA_OP_HANDLE
rd_kafka_op_offset_store
          LD          00005E38          00000002   00  RD_KAFKA_OP_OFFSET_STORE
rd_kafka_op_cnt
          LD          00006FDC          00000028   00  @DRD_KAFKA_OP_CNT
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:43:15 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DD6D7'
00000000                00000000 00005F80     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D9697'
                                              18 rd_kafka_metadata_destroy ALIAS X'99846D92818692816D9485A3818481A3816D8*
                                                                485A2A39996A8'
                                              19          EXTRN rd_kafka_metadata_destroy
                                              20 write    ALIAS C'write'
                                              21          EXTRN write
                                              22 __assert ALIAS C'@@ASSERT'
                                              23          EXTRN __assert
                                              24 mtx_lock ALIAS X'94A3A76D93968392'
                                              25          EXTRN mtx_lock
                                              26 fprintf  ALIAS C'fprintf'
                                              27          EXTRN fprintf
                                              28 rd_hdr_histogram_record ALIAS X'99846D8884996D8889A2A396879981946D99858*
                                                                3969984'
                                              29          EXTRN rd_hdr_histogram_record
                                              30 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              31          EXTRN mtx_unlock
                                              32 cnd_signal ALIAS X'8395846DA28987958193'
                                              33          EXTRN cnd_signal
                                              34 rd_kafka_toppar_destroy_final ALIAS X'99846D92818692816DA396979781996D8*
                                                                485A2A39996A86D8689958193'
                                              35          EXTRN rd_kafka_toppar_destroy_final
                                              36 rd_kafka_err2str ALIAS X'99846D92818692816D859999F2A2A399'
                                              37          EXTRN rd_kafka_err2str
                                              38 rd_kafka_q_new0 ALIAS X'99846D92818692816D986D9585A6F0'
                                              39          EXTRN rd_kafka_q_new0
                                              40 rd_kafka_q_destroy_final ALIAS X'99846D92818692816D986D8485A2A39996A86D*
                                                                8689958193'
                                              41          EXTRN rd_kafka_q_destroy_final
                                              42 rd_kafka_error_code ALIAS X'99846D92818692816D85999996996D83968485'
                                              43          EXTRN rd_kafka_error_code
                                              44 rd_kafka_error_destroy ALIAS X'99846D92818692816D85999996996D8485A2A399*
                                                                96A8'
                                              45          EXTRN rd_kafka_error_destroy
                                              46 rd_kafka_error_new ALIAS X'99846D92818692816D85999996996D9585A6'
                                              47          EXTRN rd_kafka_error_new
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                              48 rd_kafka_topic_partition_list_destroy ALIAS X'99846D92818692816DA396978*
                                                                9836D978199A389A38996956D9389A2A36D8485A2A39996A8'
                                              49          EXTRN rd_kafka_topic_partition_list_destroy
                                              50 calloc   ALIAS C'calloc'
                                              51          EXTRN calloc
                                              52 rd_kafka_q_purge0 ALIAS X'99846D92818692816D986D97A4998785F0'
                                              53          EXTRN rd_kafka_q_purge0
                                              54 vsnprintf ALIAS C'VSNPRNT@'
                                              55          EXTRN vsnprintf
                                              56 free     ALIAS C'free'
                                              57          EXTRN free
                                              58 rd_kafka_q_pop ALIAS X'99846D92818692816D986D979697'
                                              59          EXTRN rd_kafka_q_pop
                                              60 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              61          EXTRN pthread_mutex_lock
                                              62 rd_list_destroy ALIAS X'99846D9389A2A36D8485A2A39996A8'
                                              63          EXTRN rd_list_destroy
                                              64 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              65          EXTRN pthread_mutex_unlock
                                              66 rd_kafka_lwtopic_destroy ALIAS X'99846D92818692816D93A6A3969789836D8485*
                                                                A2A39996A8'
                                              67          EXTRN rd_kafka_lwtopic_destroy
                                              68 rd_kafka_lwtopic_new ALIAS X'99846D92818692816D93A6A3969789836D9585A6'
                                              69          EXTRN rd_kafka_lwtopic_new
                                              70 rd_kafka_broker_destroy_final ALIAS X'99846D92818692816D8299969285996D8*
                                                                485A2A39996A86D8689958193'
                                              71          EXTRN rd_kafka_broker_destroy_final
                                              72 rd_kafka_yield_thread ALIAS X'99846D92818692816DA8898593846DA3889985818*
                                                                4'
                                              73 rd_kafka_yield_thread DXD   0F
                                              74 rd_kafka_buf_destroy_final ALIAS X'99846D92818692816D82A4866D8485A2A399*
                                                                96A86D8689958193'
                                              75          EXTRN rd_kafka_buf_destroy_final
                                              76 rd_kafka_topic_destroy_final ALIAS X'99846D92818692816DA3969789836D8485*
                                                                A2A39996A86D8689958193'
                                              77          EXTRN rd_kafka_topic_destroy_final
                                              78 rd_kafka_buf_handle_op ALIAS X'99846D92818692816D82A4866D8881958493856D*
                                                                9697'
                                              79          EXTRN rd_kafka_buf_handle_op
                                              80 strdup   ALIAS C'strdup'
                                              81          EXTRN strdup
                                              82 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                              83          EXTRN rd_kafka_crash
                                              84 rd_kafka_msg_destroy ALIAS X'99846D92818692816D94A2876D8485A2A39996A8'
                                              85          EXTRN rd_kafka_msg_destroy
                                              86 rd_kafka_consumer_group_metadata_destroy ALIAS X'99846D92818692816D8396*
                                                                95A2A49485996D879996A4976D9485A3818481A3816D8485A2A39996*
                                                                A8'
                                              87          EXTRN rd_kafka_consumer_group_metadata_destroy
                                              88 *
                                              89 *
                                              90 *
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                              91 * ....... start of rd_atomic32_add
00000000                                      92 @LNAME1059 DS  0H
00000000 0000000F                             93          DC    X'0000000F'
00000004 99846D81A3969489                     94          DC    C'rd_atomic32_add'
00000013 00                                   95          DC    X'00'
                                              96 rd_atomic32_add DCCPRLG CINDEX=1059,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1059
                                              97          macro
                                              98          dccextrn &m
                                              99          gblc    &$dccext(1000)
                                             100          gbla    &$dccexti
                                             101          lcla    &i
                                             102 &$dccext(&$dccexti+1) setc    '&m'
                                             103 &i       seta    1
                                             104 .loop    aif    (&i gt &$dccexti).around
                                             105          aif    ('&$dccext(&i)' eq '&m').getout
                                             106 &i       seta    &i+1
                                             107          ago     .loop
                                             108 .around  anop
                                             109 &$dccexti seta &$dccexti+1
                                             110          extrn  &m
                                             111 .getout  anop
                                             112          mend
00000018                                     113+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              114+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  115+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            116+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    117+         dc ad(@PER_1059)                                               02-DCCCA
00000028 00000000000000B8                    118+         dc ad(184)                                                     02-DCCCA
00000030 0000000000000000                    119+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    120+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  121+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  122+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  123+         dc al1(3)                                                      02-DCCCA
00000043 08                                  124+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  125+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              126+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    127+         dc ad(@LNAME1059)                                              02-DCCCA
00000050                                     128+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                    129+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    130+         dc ad(0)                                                       02-DCCCA
00000060                                     131+         ds    0d                                                       01-DCCPR
00000060                                     132+rd_atomic32_add ds 0d                                                   01-DCCPR
00000060                                     133+@REGION_1059_1 ds 0h                                                    01-DCCPR
00000060 EBEC D008 0024          00000008    134+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    135+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    136+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           137+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    138+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B8               000000B8    139+         aghi  14,184              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    140+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    141+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000008A                                     142+@PER_1059 ds   0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    143+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    144+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           145+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           146+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             147+         using @REGION_1059_1,12                                        01-DCCPR
0000009E B904 0031                           148          LGR   3,1         ; ptr to parm area
                                             149 * ******* End of Prologue
                                             150 * *
000000A2 E320 3000 0004          00000000    151          LG    2,0(0,3)    ; ra
                                             152 * ***
                                             153 * ***      int32_t r;
                                             154 * ***      pthread_mutex_lock(&ra->lock);
000000A8 41F0 2008               00000008    155          LA    15,8(0,2)
000000AC E3F0 D0B0 0024          000000B0    156          STG   15,176(0,13)
000000B2 4110 D0B0               000000B0    157          LA    1,176(0,13)
000000B6 E3F0 C0D8 0004          00000138    158          LG    15,@lit_1059_0 ; pthread_mutex_lock
000000BC                                     159 @@gen_label0 DS    0H
000000BC 05EF                                160          BALR  14,15
000000BE                                     161 @@gen_label1 DS    0H
                                             162 * ***      ra->val += v;
000000BE 58F0 2000               00000000    163          L     15,0(0,2)
000000C2 5AF0 300C               0000000C    164          A     15,12(0,3)
000000C6 50F0 2000               00000000    165          ST    15,0(0,2)
                                             166 * ***      r = ra->val;
000000CA 183F                                167          LR    3,15        ; ra
                                             168 * ***      pthread_mutex_unlock(&ra->lock);
000000CC 41F0 2008               00000008    169          LA    15,8(0,2)
000000D0 E3F0 D0B0 0024          000000B0    170          STG   15,176(0,13)
000000D6 4110 D0B0               000000B0    171          LA    1,176(0,13)
000000DA E3F0 C0E0 0004          00000140    172          LG    15,@lit_1059_1 ; pthread_mutex_unlock
000000E0                                     173 @@gen_label2 DS    0H
000000E0 05EF                                174          BALR  14,15
000000E2                                     175 @@gen_label3 DS    0H
                                             176 * ***      return r;
000000E2 B914 00F3                           177          LGFR  15,3
                                             178 * ***   # 103 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             179 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             180 * ***
                                             181 * ***   }
                                             182 * * **** Start of Epilogue
                                             183          DCCEPIL
000000E6                                     184+         ds 0h                                                          01-DCCEP
                                             185+* Epilog
000000E6 D707 D088 D088 00000088 00000088    186+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000EC E3D0 D080 0004          00000080    187+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000000F2 E3C0 D090 0004          00000090    188+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000000F8 E3B0 C018 0004          00000018    189+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000000FE E3C0 B010 0021          00000010    190+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000104 E3E0 D008 0004          00000008    191+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000010A EB1C D020 0004          00000020    192+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000110 078E                                193+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page   10 
  Active Usings: @REGION_1059_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000112 E3F0 D010 0024          00000010    194+         stg 15,16(0,13)         save return code                       01-DCCEP
00000118 E300 D018 0024          00000018    195+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000011E E3F0 D090 0004          00000090    196+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000124 E3F0 F018 0004          00000018    197+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000012A 47F0 F040               00000040    198+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             199+* End of Epilog
                                             200 * * **** End of Epilogue
00000130                                     201          DS    0D
00000130 000000B8                            202 @FRAMESIZE_1059 DC F'184'
00000134 00000000
00000138 0000000000000000                    203 @lit_1059_0 DC AD(pthread_mutex_lock)
00000140 0000000000000000                    204 @lit_1059_1 DC AD(pthread_mutex_unlock)
                                             205          DROP  12
                                             206 *
                                             207 *   DSECT for automatic variables in "rd_atomic32_add"
                                             208 *      (FUNCTION #1059)
                                             209 *
00000000                00000000 000000AC    210 @AUTO#rd_atomic32_add DSECT
00000000                                     211          DS    XL168
000000A8                                     212 rd_atomic32_add#r#0 DS 1F  ; r
                                             213 *
00000148                00000000 00005F80    214 @CODE    CSECT
                                             215 *
                                             216 *
                                             217 *
                                             218 * ....... start of rd_atomic32_sub
00000148                                     219 @LNAME1060 DS  0H
00000148 0000000F                            220          DC    X'0000000F'
0000014C 99846D81A3969489                    221          DC    C'rd_atomic32_sub'
0000015B 00                                  222          DC    X'00'
                                             223 rd_atomic32_sub DCCPRLG CINDEX=1060,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1060
                                             224          macro
                                             225          dccextrn &m
                                             226          gblc    &$dccext(1000)
                                             227          gbla    &$dccexti
                                             228          lcla    &i
                                             229 &$dccext(&$dccexti+1) setc    '&m'
                                             230 &i       seta    1
                                             231 .loop    aif    (&i gt &$dccexti).around
                                             232          aif    ('&$dccext(&i)' eq '&m').getout
                                             233 &i       seta    &i+1
                                             234          ago     .loop
                                             235 .around  anop
                                             236 &$dccexti seta &$dccexti+1
                                             237          extrn  &m
                                             238 .getout  anop
                                             239          mend
00000160                                     240+$eye0005    ds    0d                                                    02-DCCCA
00000160 C4C3C3                              241+         dc cl3'DCC'                                                    02-DCCCA
00000163 01                                  242+         dc xl1'01' format one                                          02-DCCCA
00000164 00000000                            243+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000168 00000000000001D2                    244+         dc ad(@PER_1060)                                               02-DCCCA
00000170 00000000000000B8                    245+         dc ad(184)                                                     02-DCCCA
00000178 0000000000000000                    246+         dc ad(0)                                                       02-DCCCA
00000180 0000000000001000                    247+         dc ad(4096)                                                    02-DCCCA
00000188 20                                  248+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000189 03                                  249+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000018A 03                                  250+         dc al1(3)                                                      02-DCCCA
0000018B 08                                  251+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000018C 00                                  252+         dc bl.8'00000000'                                              02-DCCCA
0000018D 000000                              253+         dc al3(0)                                                      02-DCCCA
00000190 0000000000000148                    254+         dc ad(@LNAME1060)                                              02-DCCCA
00000198                                     255+         ds 0d                                                          02-DCCCA
00000198 0000000000000160                    256+         dc ad($eye0005)                                                02-DCCCA
000001A0 0000000000000000                    257+         dc ad(0)                                                       02-DCCCA
000001A8                                     258+         ds    0d                                                       01-DCCPR
000001A8                                     259+rd_atomic32_sub ds 0d                                                   01-DCCPR
000001A8                                     260+@REGION_1060_1 ds 0h                                                    01-DCCPR
000001A8 EBEC D008 0024          00000008    261+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001AE E3E0 D088 0004          00000088    262+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001B4 E3C0 D090 0004          00000090    263+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001BA B904 002E                           264+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001BE E3B0 C018 0004          00000018    265+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001C4 A7EB 00B8               000000B8    266+         aghi  14,184              increase by frame size               01-DCCPR
000001C8 E3E0 C020 0021          00000020    267+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001CE 4720 B020               00000020    268+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001D2                                     269+@PER_1060 ds   0h                                                       01-DCCPR
000001D2 EBDE 2080 0024          00000080    270+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001D8 E3C0 2090 0024          00000090    271+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001DE B904 00D2                           272+         lgr   13,2                set real frame pointer               01-DCCPR
000001E2 B904 00CF                           273+         lgr   12,15               set base reg                         01-DCCPR
                        000001A8             274+         using @REGION_1060_1,12                                        01-DCCPR
000001E6 B904 0031                           275          LGR   3,1         ; ptr to parm area
                                             276 * ******* End of Prologue
                                             277 * *
000001EA E320 3000 0004          00000000    278          LG    2,0(0,3)    ; ra
                                             279 * ***
                                             280 * ***      int32_t r;
                                             281 * ***      pthread_mutex_lock(&ra->lock);
000001F0 41F0 2008               00000008    282          LA    15,8(0,2)
000001F4 E3F0 D0B0 0024          000000B0    283          STG   15,176(0,13)
000001FA 4110 D0B0               000000B0    284          LA    1,176(0,13)
000001FE E3F0 C0D8 0004          00000280    285          LG    15,@lit_1060_3 ; pthread_mutex_lock
00000204                                     286 @@gen_label4 DS    0H
00000204 05EF                                287          BALR  14,15
00000206                                     288 @@gen_label5 DS    0H
                                             289 * ***      ra->val -= v;
00000206 58F0 2000               00000000    290          L     15,0(0,2)
0000020A 5BF0 300C               0000000C    291          S     15,12(0,3)
0000020E 50F0 2000               00000000    292          ST    15,0(0,2)
                                             293 * ***      r = ra->val;
00000212 183F                                294          LR    3,15        ; ra
                                             295 * ***      pthread_mutex_unlock(&ra->lock);
                                                                                                                           Page   12 
  Active Usings: @REGION_1060_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000214 41F0 2008               00000008    296          LA    15,8(0,2)
00000218 E3F0 D0B0 0024          000000B0    297          STG   15,176(0,13)
0000021E 4110 D0B0               000000B0    298          LA    1,176(0,13)
00000222 E3F0 C0E0 0004          00000288    299          LG    15,@lit_1060_4 ; pthread_mutex_unlock
00000228                                     300 @@gen_label6 DS    0H
00000228 05EF                                301          BALR  14,15
0000022A                                     302 @@gen_label7 DS    0H
                                             303 * ***      return r;
0000022A B914 00F3                           304          LGFR  15,3
                                             305 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             306 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             307 * ***
                                             308 * ***   }
                                             309 * * **** Start of Epilogue
                                             310          DCCEPIL
0000022E                                     311+         ds 0h                                                          01-DCCEP
                                             312+* Epilog
0000022E D707 D088 D088 00000088 00000088    313+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000234 E3D0 D080 0004          00000080    314+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000023A E3C0 D090 0004          00000090    315+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000240 E3B0 C018 0004          00000018    316+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000246 E3C0 B010 0021          00000010    317+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000024C E3E0 D008 0004          00000008    318+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000252 EB1C D020 0004          00000020    319+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000258 078E                                320+         bcr 8,14                if same dsab, just return              01-DCCEP
0000025A E3F0 D010 0024          00000010    321+         stg 15,16(0,13)         save return code                       01-DCCEP
00000260 E300 D018 0024          00000018    322+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000266 E3F0 D090 0004          00000090    323+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000026C E3F0 F018 0004          00000018    324+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000272 47F0 F040               00000040    325+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             326+* End of Epilog
                                             327 * * **** End of Epilogue
00000278                                     328          DS    0D
00000278 000000B8                            329 @FRAMESIZE_1060 DC F'184'
0000027C 00000000
00000280 0000000000000000                    330 @lit_1060_3 DC AD(pthread_mutex_lock)
00000288 0000000000000000                    331 @lit_1060_4 DC AD(pthread_mutex_unlock)
                                             332          DROP  12
                                             333 *
                                             334 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             335 *      (FUNCTION #1060)
                                             336 *
00000000                00000000 000000AC    337 @AUTO#rd_atomic32_sub DSECT
00000000                                     338          DS    XL168
000000A8                                     339 rd_atomic32_sub#r#0 DS 1F  ; r
                                             340 *
00000290                00000000 00005F80    341 @CODE    CSECT
                                             342 *
                                             343 *
                                             344 *
                                             345 * ....... start of rd_atomic32_get
00000290                                     346 @LNAME1061 DS  0H
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000290 0000000F                            347          DC    X'0000000F'
00000294 99846D81A3969489                    348          DC    C'rd_atomic32_get'
000002A3 00                                  349          DC    X'00'
                                             350 rd_atomic32_get DCCPRLG CINDEX=1061,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1061
                                             351          macro
                                             352          dccextrn &m
                                             353          gblc    &$dccext(1000)
                                             354          gbla    &$dccexti
                                             355          lcla    &i
                                             356 &$dccext(&$dccexti+1) setc    '&m'
                                             357 &i       seta    1
                                             358 .loop    aif    (&i gt &$dccexti).around
                                             359          aif    ('&$dccext(&i)' eq '&m').getout
                                             360 &i       seta    &i+1
                                             361          ago     .loop
                                             362 .around  anop
                                             363 &$dccexti seta &$dccexti+1
                                             364          extrn  &m
                                             365 .getout  anop
                                             366          mend
000002A8                                     367+$eye0008    ds    0d                                                    02-DCCCA
000002A8 C4C3C3                              368+         dc cl3'DCC'                                                    02-DCCCA
000002AB 01                                  369+         dc xl1'01' format one                                          02-DCCCA
000002AC 00000000                            370+         dc a(0)                                                        02-DCCCA
000002B0 000000000000031A                    371+         dc ad(@PER_1061)                                               02-DCCCA
000002B8 00000000000000B8                    372+         dc ad(184)                                                     02-DCCCA
000002C0 0000000000000000                    373+         dc ad(0)                                                       02-DCCCA
000002C8 0000000000001000                    374+         dc ad(4096)                                                    02-DCCCA
000002D0 20                                  375+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002D1 03                                  376+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002D2 03                                  377+         dc al1(3)                                                      02-DCCCA
000002D3 08                                  378+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002D4 00                                  379+         dc bl.8'00000000'                                              02-DCCCA
000002D5 000000                              380+         dc al3(0)                                                      02-DCCCA
000002D8 0000000000000290                    381+         dc ad(@LNAME1061)                                              02-DCCCA
000002E0                                     382+         ds 0d                                                          02-DCCCA
000002E0 00000000000002A8                    383+         dc ad($eye0008)                                                02-DCCCA
000002E8 0000000000000000                    384+         dc ad(0)                                                       02-DCCCA
000002F0                                     385+         ds    0d                                                       01-DCCPR
000002F0                                     386+rd_atomic32_get ds 0d                                                   01-DCCPR
000002F0                                     387+@REGION_1061_1 ds 0h                                                    01-DCCPR
000002F0 EBEC D008 0024          00000008    388+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002F6 E3E0 D088 0004          00000088    389+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002FC E3C0 D090 0004          00000090    390+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000302 B904 002E                           391+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000306 E3B0 C018 0004          00000018    392+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000030C A7EB 00B8               000000B8    393+         aghi  14,184              increase by frame size               01-DCCPR
00000310 E3E0 C020 0021          00000020    394+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000316 4720 B020               00000020    395+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000031A                                     396+@PER_1061 ds   0h                                                       01-DCCPR
0000031A EBDE 2080 0024          00000080    397+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page   14 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000320 E3C0 2090 0024          00000090    398+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000326 B904 00D2                           399+         lgr   13,2                set real frame pointer               01-DCCPR
0000032A B904 00CF                           400+         lgr   12,15               set base reg                         01-DCCPR
                        000002F0             401+         using @REGION_1061_1,12                                        01-DCCPR
                                             402 * ******* End of Prologue
                                             403 * *
0000032E E320 1000 0004          00000000    404          LG    2,0(0,1)    ; ra
                                             405 * ***
                                             406 * ***      int32_t r;
                                             407 * ***      pthread_mutex_lock(&ra->lock);
00000334 41F0 2008               00000008    408          LA    15,8(0,2)
00000338 E3F0 D0B0 0024          000000B0    409          STG   15,176(0,13)
0000033E 4110 D0B0               000000B0    410          LA    1,176(0,13)
00000342 E3F0 C0C8 0004          000003B8    411          LG    15,@lit_1061_6 ; pthread_mutex_lock
00000348                                     412 @@gen_label8 DS    0H
00000348 05EF                                413          BALR  14,15
0000034A                                     414 @@gen_label9 DS    0H
                                             415 * ***      r = ra->val;
0000034A 5830 2000               00000000    416          L     3,0(0,2)    ; ra
                                             417 * ***      pthread_mutex_unlock(&ra->lock);
0000034E 41F0 2008               00000008    418          LA    15,8(0,2)
00000352 E3F0 D0B0 0024          000000B0    419          STG   15,176(0,13)
00000358 4110 D0B0               000000B0    420          LA    1,176(0,13)
0000035C E3F0 C0D0 0004          000003C0    421          LG    15,@lit_1061_7 ; pthread_mutex_unlock
00000362                                     422 @@gen_label10 DS    0H
00000362 05EF                                423          BALR  14,15
00000364                                     424 @@gen_label11 DS    0H
                                             425 * ***      return r;
00000364 B914 00F3                           426          LGFR  15,3
                                             427 * ***   # 157 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             428 * ***      return __atomic_fetch_add(&ra->val, 0, 6);
                                             429 * ***
                                             430 * ***   }
                                             431 * * **** Start of Epilogue
                                             432          DCCEPIL
00000368                                     433+         ds 0h                                                          01-DCCEP
                                             434+* Epilog
00000368 D707 D088 D088 00000088 00000088    435+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000036E E3D0 D080 0004          00000080    436+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000374 E3C0 D090 0004          00000090    437+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000037A E3B0 C018 0004          00000018    438+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000380 E3C0 B010 0021          00000010    439+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000386 E3E0 D008 0004          00000008    440+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000038C EB1C D020 0004          00000020    441+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000392 078E                                442+         bcr 8,14                if same dsab, just return              01-DCCEP
00000394 E3F0 D010 0024          00000010    443+         stg 15,16(0,13)         save return code                       01-DCCEP
0000039A E300 D018 0024          00000018    444+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003A0 E3F0 D090 0004          00000090    445+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003A6 E3F0 F018 0004          00000018    446+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003AC 47F0 F040               00000040    447+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             448+* End of Epilog
                                             449 * * **** End of Epilogue
                                                                                                                           Page   15 
  Active Usings: @REGION_1061_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000003B0                                     450          DS    0D
000003B0 000000B8                            451 @FRAMESIZE_1061 DC F'184'
000003B4 00000000
000003B8 0000000000000000                    452 @lit_1061_6 DC AD(pthread_mutex_lock)
000003C0 0000000000000000                    453 @lit_1061_7 DC AD(pthread_mutex_unlock)
                                             454          DROP  12
                                             455 *
                                             456 *   DSECT for automatic variables in "rd_atomic32_get"
                                             457 *      (FUNCTION #1061)
                                             458 *
00000000                00000000 000000AC    459 @AUTO#rd_atomic32_get DSECT
00000000                                     460          DS    XL168
000000A8                                     461 rd_atomic32_get#r#0 DS 1F  ; r
                                             462 *
000003C8                00000000 00005F80    463 @CODE    CSECT
                                             464 *
                                             465 *
                                             466 *
                                             467 * ....... start of rd_atomic32_set
000003C8                                     468 @LNAME1062 DS  0H
000003C8 0000000F                            469          DC    X'0000000F'
000003CC 99846D81A3969489                    470          DC    C'rd_atomic32_set'
000003DB 00                                  471          DC    X'00'
                                             472 rd_atomic32_set DCCPRLG CINDEX=1062,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1062
                                             473          macro
                                             474          dccextrn &m
                                             475          gblc    &$dccext(1000)
                                             476          gbla    &$dccexti
                                             477          lcla    &i
                                             478 &$dccext(&$dccexti+1) setc    '&m'
                                             479 &i       seta    1
                                             480 .loop    aif    (&i gt &$dccexti).around
                                             481          aif    ('&$dccext(&i)' eq '&m').getout
                                             482 &i       seta    &i+1
                                             483          ago     .loop
                                             484 .around  anop
                                             485 &$dccexti seta &$dccexti+1
                                             486          extrn  &m
                                             487 .getout  anop
                                             488          mend
000003E0                                     489+$eye0011    ds    0d                                                    02-DCCCA
000003E0 C4C3C3                              490+         dc cl3'DCC'                                                    02-DCCCA
000003E3 01                                  491+         dc xl1'01' format one                                          02-DCCCA
000003E4 00000000                            492+         dc a(0)                                                        02-DCCCA
000003E8 0000000000000452                    493+         dc ad(@PER_1062)                                               02-DCCCA
000003F0 00000000000000B8                    494+         dc ad(184)                                                     02-DCCCA
000003F8 0000000000000000                    495+         dc ad(0)                                                       02-DCCCA
00000400 0000000000001000                    496+         dc ad(4096)                                                    02-DCCCA
00000408 20                                  497+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000409 03                                  498+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000040A 03                                  499+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000040B 08                                  500+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000040C 00                                  501+         dc bl.8'00000000'                                              02-DCCCA
0000040D 000000                              502+         dc al3(0)                                                      02-DCCCA
00000410 00000000000003C8                    503+         dc ad(@LNAME1062)                                              02-DCCCA
00000418                                     504+         ds 0d                                                          02-DCCCA
00000418 00000000000003E0                    505+         dc ad($eye0011)                                                02-DCCCA
00000420 0000000000000000                    506+         dc ad(0)                                                       02-DCCCA
00000428                                     507+         ds    0d                                                       01-DCCPR
00000428                                     508+rd_atomic32_set ds 0d                                                   01-DCCPR
00000428                                     509+@REGION_1062_1 ds 0h                                                    01-DCCPR
00000428 EBEC D008 0024          00000008    510+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000042E E3E0 D088 0004          00000088    511+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000434 E3C0 D090 0004          00000090    512+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000043A B904 002E                           513+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000043E E3B0 C018 0004          00000018    514+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000444 A7EB 00B8               000000B8    515+         aghi  14,184              increase by frame size               01-DCCPR
00000448 E3E0 C020 0021          00000020    516+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000044E 4720 B020               00000020    517+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000452                                     518+@PER_1062 ds   0h                                                       01-DCCPR
00000452 EBDE 2080 0024          00000080    519+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000458 E3C0 2090 0024          00000090    520+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000045E B904 00D2                           521+         lgr   13,2                set real frame pointer               01-DCCPR
00000462 B904 00CF                           522+         lgr   12,15               set base reg                         01-DCCPR
                        00000428             523+         using @REGION_1062_1,12                                        01-DCCPR
00000466 B904 0031                           524          LGR   3,1         ; ptr to parm area
                                             525 * ******* End of Prologue
                                             526 * *
0000046A E320 3000 0004          00000000    527          LG    2,0(0,3)    ; ra
                                             528 * ***
                                             529 * ***      int32_t r;
                                             530 * ***      pthread_mutex_lock(&ra->lock);
00000470 41F0 2008               00000008    531          LA    15,8(0,2)
00000474 E3F0 D0B0 0024          000000B0    532          STG   15,176(0,13)
0000047A 4110 D0B0               000000B0    533          LA    1,176(0,13)
0000047E E3F0 C0D0 0004          000004F8    534          LG    15,@lit_1062_9 ; pthread_mutex_lock
00000484                                     535 @@gen_label12 DS    0H
00000484 05EF                                536          BALR  14,15
00000486                                     537 @@gen_label13 DS    0H
                                             538 * ***      r = ra->val = v;
00000486 5830 300C               0000000C    539          L     3,12(0,3)   ; v
0000048A 5030 2000               00000000    540          ST    3,0(0,2)
                                             541 * ***      pthread_mutex_unlock(&ra->lock);
0000048E 41F0 2008               00000008    542          LA    15,8(0,2)
00000492 E3F0 D0B0 0024          000000B0    543          STG   15,176(0,13)
00000498 4110 D0B0               000000B0    544          LA    1,176(0,13)
0000049C E3F0 C0D8 0004          00000500    545          LG    15,@lit_1062_10 ; pthread_mutex_unlock
000004A2                                     546 @@gen_label14 DS    0H
000004A2 05EF                                547          BALR  14,15
000004A4                                     548 @@gen_label15 DS    0H
                                             549 * ***      return r;
000004A4 B914 00F3                           550          LGFR  15,3
                                             551 * ***   # 178 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                                                                                                           Page   17 
  Active Usings: @REGION_1062_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             552 * ***           __atomic_store_n(&ra->val, v, 6);
                                             553 * ***           return v;
                                             554 * ***   # 186 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             555 * ***   }
                                             556 * * **** Start of Epilogue
                                             557          DCCEPIL
000004A8                                     558+         ds 0h                                                          01-DCCEP
                                             559+* Epilog
000004A8 D707 D088 D088 00000088 00000088    560+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000004AE E3D0 D080 0004          00000080    561+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000004B4 E3C0 D090 0004          00000090    562+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000004BA E3B0 C018 0004          00000018    563+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000004C0 E3C0 B010 0021          00000010    564+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000004C6 E3E0 D008 0004          00000008    565+         lg  14,8(0,13)          load up return address                 01-DCCEP
000004CC EB1C D020 0004          00000020    566+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000004D2 078E                                567+         bcr 8,14                if same dsab, just return              01-DCCEP
000004D4 E3F0 D010 0024          00000010    568+         stg 15,16(0,13)         save return code                       01-DCCEP
000004DA E300 D018 0024          00000018    569+         stg 0,24(0,13)          save more return code                  01-DCCEP
000004E0 E3F0 D090 0004          00000090    570+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000004E6 E3F0 F018 0004          00000018    571+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000004EC 47F0 F040               00000040    572+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             573+* End of Epilog
                                             574 * * **** End of Epilogue
000004F0                                     575          DS    0D
000004F0 000000B8                            576 @FRAMESIZE_1062 DC F'184'
000004F4 00000000
000004F8 0000000000000000                    577 @lit_1062_9 DC AD(pthread_mutex_lock)
00000500 0000000000000000                    578 @lit_1062_10 DC AD(pthread_mutex_unlock)
                                             579          DROP  12
                                             580 *
                                             581 *   DSECT for automatic variables in "rd_atomic32_set"
                                             582 *      (FUNCTION #1062)
                                             583 *
00000000                00000000 000000AC    584 @AUTO#rd_atomic32_set DSECT
00000000                                     585          DS    XL168
000000A8                                     586 rd_atomic32_set#r#0 DS 1F  ; r
                                             587 *
00000508                00000000 00005F80    588 @CODE    CSECT
                                             589 *
                                             590 *
                                             591 *
                                             592 * ....... start of rd_calloc
00000508                                     593 @LNAME1077 DS  0H
00000508 00000009                            594          DC    X'00000009'
0000050C 99846D8381939396                    595          DC    C'rd_calloc'
00000515 00                                  596          DC    X'00'
                                             597 rd_calloc DCCPRLG CINDEX=1077,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1077
                                             598          macro
                                             599          dccextrn &m
                                             600          gblc    &$dccext(1000)
                                             601          gbla    &$dccexti
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             602          lcla    &i
                                             603 &$dccext(&$dccexti+1) setc    '&m'
                                             604 &i       seta    1
                                             605 .loop    aif    (&i gt &$dccexti).around
                                             606          aif    ('&$dccext(&i)' eq '&m').getout
                                             607 &i       seta    &i+1
                                             608          ago     .loop
                                             609 .around  anop
                                             610 &$dccexti seta &$dccexti+1
                                             611          extrn  &m
                                             612 .getout  anop
                                             613          mend
00000518                                     614+$eye0014    ds    0d                                                    02-DCCCA
00000518 C4C3C3                              615+         dc cl3'DCC'                                                    02-DCCCA
0000051B 01                                  616+         dc xl1'01' format one                                          02-DCCCA
0000051C 00000000                            617+         dc a(0)                                                        02-DCCCA
00000520 000000000000058A                    618+         dc ad(@PER_1077)                                               02-DCCCA
00000528 00000000000000D0                    619+         dc ad(208)                                                     02-DCCCA
00000530 0000000000000000                    620+         dc ad(0)                                                       02-DCCCA
00000538 0000000000001000                    621+         dc ad(4096)                                                    02-DCCCA
00000540 20                                  622+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000541 03                                  623+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000542 03                                  624+         dc al1(3)                                                      02-DCCCA
00000543 08                                  625+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000544 00                                  626+         dc bl.8'00000000'                                              02-DCCCA
00000545 000000                              627+         dc al3(0)                                                      02-DCCCA
00000548 0000000000000508                    628+         dc ad(@LNAME1077)                                              02-DCCCA
00000550                                     629+         ds 0d                                                          02-DCCCA
00000550 0000000000000518                    630+         dc ad($eye0014)                                                02-DCCCA
00000558 0000000000000000                    631+         dc ad(0)                                                       02-DCCCA
00000560                                     632+         ds    0d                                                       01-DCCPR
00000560                                     633+rd_calloc ds   0d                                                       01-DCCPR
00000560                                     634+@REGION_1077_1 ds 0h                                                    01-DCCPR
00000560 EBEC D008 0024          00000008    635+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000566 E3E0 D088 0004          00000088    636+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000056C E3C0 D090 0004          00000090    637+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000572 B904 002E                           638+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000576 E3B0 C018 0004          00000018    639+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000057C A7EB 00D0               000000D0    640+         aghi  14,208              increase by frame size               01-DCCPR
00000580 E3E0 C020 0021          00000020    641+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000586 4720 B020               00000020    642+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000058A                                     643+@PER_1077 ds   0h                                                       01-DCCPR
0000058A EBDE 2080 0024          00000080    644+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000590 E3C0 2090 0024          00000090    645+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000596 B904 00D2                           646+         lgr   13,2                set real frame pointer               01-DCCPR
0000059A B904 00CF                           647+         lgr   12,15               set base reg                         01-DCCPR
                        00000560             648+         using @REGION_1077_1,12                                        01-DCCPR
                                             649 * ******* End of Prologue
                                             650 * *
                                             651 * ***      void *p = calloc(num, sz);
0000059E E3F0 1000 0004          00000000    652          LG    15,0(0,1)   ; num
000005A4 E3F0 D0B0 0024          000000B0    653          STG   15,176(0,13)
                                                                                                                           Page   19 
  Active Usings: @REGION_1077_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000005AA E3F0 1008 0004          00000008    654          LG    15,8(0,1)   ; sz
000005B0 E3F0 D0B8 0024          000000B8    655          STG   15,184(0,13)
000005B6 4110 D0B0               000000B0    656          LA    1,176(0,13)
000005BA E3F0 C0F8 0004          00000658    657          LG    15,@lit_1077_12 ; calloc
000005C0                                     658 @@gen_label16 DS    0H
000005C0 05EF                                659          BALR  14,15
000005C2                                     660 @@gen_label17 DS    0H
000005C2 B904 002F                           661          LGR   2,15
                                             662 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             663 * ka\\src\\rd.h", 122, "p"));
000005C6 B902 00F2                           664          LTGR  15,2
000005CA 4770 C0A2               00000602    665          BNZ   @L32
000005CE                                     666 @L31     DS    0H
000005CE E3F0 C110 0004          00000670    667          LG    15,@lit_1077_13
000005D4 E3F0 D0B0 0024          000000B0    668          STG   15,176(0,13)
000005DA E3F0 C108 0004          00000668    669          LG    15,@lit_1077_14
000005E0 E3F0 D0B8 0024          000000B8    670          STG   15,184(0,13)
000005E6 E548 D0C0 007A          000000C0    671          MVGHI 192(13),122
000005EC 41F0 F020               00000020    672          LA    15,32(0,15)
000005F0 E3F0 D0C8 0024          000000C8    673          STG   15,200(0,13)
000005F6 4110 D0B0               000000B0    674          LA    1,176(0,13)
000005FA E3F0 C100 0004          00000660    675          LG    15,@lit_1077_15 ; __assert
00000600                                     676 @@gen_label19 DS    0H
00000600 05EF                                677          BALR  14,15
00000602                                     678 @@gen_label20 DS    0H
00000602                                     679 @L32     DS    0H
                                             680 * ***      return p;
00000602 B904 00F2                           681          LGR   15,2
                                             682 * ***   }
                                             683 * * **** Start of Epilogue
                                             684          DCCEPIL
00000606                                     685+         ds 0h                                                          01-DCCEP
                                             686+* Epilog
00000606 D707 D088 D088 00000088 00000088    687+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000060C E3D0 D080 0004          00000080    688+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000612 E3C0 D090 0004          00000090    689+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000618 E3B0 C018 0004          00000018    690+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000061E E3C0 B010 0021          00000010    691+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000624 E3E0 D008 0004          00000008    692+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000062A EB1C D020 0004          00000020    693+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000630 078E                                694+         bcr 8,14                if same dsab, just return              01-DCCEP
00000632 E3F0 D010 0024          00000010    695+         stg 15,16(0,13)         save return code                       01-DCCEP
00000638 E300 D018 0024          00000018    696+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000063E E3F0 D090 0004          00000090    697+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000644 E3F0 F018 0004          00000018    698+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000064A 47F0 F040               00000040    699+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             700+* End of Epilog
                                             701 * * **** End of Epilogue
00000650                                     702          DS    0D
00000650 000000D0                            703 @FRAMESIZE_1077 DC F'208'
00000654 00000000
00000658 0000000000000000                    704 @lit_1077_12 DC AD(calloc)
                                                                                                                           Page   20 
  Active Usings: @REGION_1077_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000660 0000000000000000                    705 @lit_1077_15 DC AD(__assert)
00000668 000000000000635E                    706 @lit_1077_14 DC AD(@strings@)
00000670 0000000000005F80                    707 @lit_1077_13 DC AD(@DATA)
                                             708          DROP  12
                                             709 *
                                             710 *   DSECT for automatic variables in "rd_calloc"
                                             711 *      (FUNCTION #1077)
                                             712 *
00000000                00000000 000000A8    713 @AUTO#rd_calloc DSECT
00000000                                     714          DS    XL168
                                             715 *
00000678                00000000 00005F80    716 @CODE    CSECT
                                             717 *
                                             718 *
                                             719 *
                                             720 * ....... start of rd_free
00000678                                     721 @LNAME1080 DS  0H
00000678 00000007                            722          DC    X'00000007'
0000067C 99846D86998585                      723          DC    C'rd_free'
00000683 00                                  724          DC    X'00'
                                             725 rd_free  DCCPRLG CINDEX=1080,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1080
                                             726          macro
                                             727          dccextrn &m
                                             728          gblc    &$dccext(1000)
                                             729          gbla    &$dccexti
                                             730          lcla    &i
                                             731 &$dccext(&$dccexti+1) setc    '&m'
                                             732 &i       seta    1
                                             733 .loop    aif    (&i gt &$dccexti).around
                                             734          aif    ('&$dccext(&i)' eq '&m').getout
                                             735 &i       seta    &i+1
                                             736          ago     .loop
                                             737 .around  anop
                                             738 &$dccexti seta &$dccexti+1
                                             739          extrn  &m
                                             740 .getout  anop
                                             741          mend
00000688                                     742+$eye0017    ds    0d                                                    02-DCCCA
00000688 C4C3C3                              743+         dc cl3'DCC'                                                    02-DCCCA
0000068B 01                                  744+         dc xl1'01' format one                                          02-DCCCA
0000068C 00000000                            745+         dc a(0)                                                        02-DCCCA
00000690 00000000000006FA                    746+         dc ad(@PER_1080)                                               02-DCCCA
00000698 00000000000000B0                    747+         dc ad(176)                                                     02-DCCCA
000006A0 0000000000000000                    748+         dc ad(0)                                                       02-DCCCA
000006A8 0000000000001000                    749+         dc ad(4096)                                                    02-DCCCA
000006B0 20                                  750+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000006B1 03                                  751+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000006B2 03                                  752+         dc al1(3)                                                      02-DCCCA
000006B3 08                                  753+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000006B4 00                                  754+         dc bl.8'00000000'                                              02-DCCCA
000006B5 000000                              755+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000006B8 0000000000000678                    756+         dc ad(@LNAME1080)                                              02-DCCCA
000006C0                                     757+         ds 0d                                                          02-DCCCA
000006C0 0000000000000688                    758+         dc ad($eye0017)                                                02-DCCCA
000006C8 0000000000000000                    759+         dc ad(0)                                                       02-DCCCA
000006D0                                     760+         ds    0d                                                       01-DCCPR
000006D0                                     761+rd_free  ds    0d                                                       01-DCCPR
000006D0                                     762+@REGION_1080_1 ds 0h                                                    01-DCCPR
000006D0 EBEC D008 0024          00000008    763+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000006D6 E3E0 D088 0004          00000088    764+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000006DC E3C0 D090 0004          00000090    765+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000006E2 B904 002E                           766+         lgr   2,14                copy addr of our savearea            01-DCCPR
000006E6 E3B0 C018 0004          00000018    767+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000006EC A7EB 00B0               000000B0    768+         aghi  14,176              increase by frame size               01-DCCPR
000006F0 E3E0 C020 0021          00000020    769+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000006F6 4720 B020               00000020    770+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000006FA                                     771+@PER_1080 ds   0h                                                       01-DCCPR
000006FA EBDE 2080 0024          00000080    772+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000700 E3C0 2090 0024          00000090    773+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000706 B904 00D2                           774+         lgr   13,2                set real frame pointer               01-DCCPR
0000070A B904 00CF                           775+         lgr   12,15               set base reg                         01-DCCPR
                        000006D0             776+         using @REGION_1080_1,12                                        01-DCCPR
                                             777 * ******* End of Prologue
                                             778 * *
                                             779 * ***      free(ptr);
0000070E E3F0 1000 0004          00000000    780          LG    15,0(0,1)   ; ptr
00000714 E3F0 D0A8 0024          000000A8    781          STG   15,168(0,13)
0000071A 4110 D0A8               000000A8    782          LA    1,168(0,13)
0000071E E3F0 C0A8 0004          00000778    783          LG    15,@lit_1080_17 ; free
00000724                                     784 @@gen_label21 DS    0H
00000724 05EF                                785          BALR  14,15
00000726                                     786 @@gen_label22 DS    0H
                                             787 * ***   }
00000726                                     788 @ret_lab_1080 DS 0H
                                             789 * * **** Start of Epilogue
                                             790          DCCEPIL
00000726                                     791+         ds 0h                                                          01-DCCEP
                                             792+* Epilog
00000726 D707 D088 D088 00000088 00000088    793+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000072C E3D0 D080 0004          00000080    794+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000732 E3C0 D090 0004          00000090    795+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000738 E3B0 C018 0004          00000018    796+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000073E E3C0 B010 0021          00000010    797+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000744 E3E0 D008 0004          00000008    798+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000074A EB1C D020 0004          00000020    799+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000750 078E                                800+         bcr 8,14                if same dsab, just return              01-DCCEP
00000752 E3F0 D010 0024          00000010    801+         stg 15,16(0,13)         save return code                       01-DCCEP
00000758 E300 D018 0024          00000018    802+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000075E E3F0 D090 0004          00000090    803+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000764 E3F0 F018 0004          00000018    804+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000076A 47F0 F040               00000040    805+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             806+* End of Epilog
                                             807 * * **** End of Epilogue
                                                                                                                           Page   22 
  Active Usings: @REGION_1080_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000770                                     808          DS    0D
00000770 000000B0                            809 @FRAMESIZE_1080 DC F'176'
00000774 00000000
00000778 0000000000000000                    810 @lit_1080_17 DC AD(free)
                                             811          DROP  12
                                             812 *
                                             813 *   DSECT for automatic variables in "rd_free"
                                             814 *      (FUNCTION #1080)
                                             815 *
00000000                00000000 000000A8    816 @AUTO#rd_free DSECT
00000000                                     817          DS    XL168
                                             818 *
00000780                00000000 00005F80    819 @CODE    CSECT
                                             820 *
                                             821 *
                                             822 *
                                             823 * ....... start of rd_strdup
00000780                                     824 @LNAME1081 DS  0H
00000780 00000009                            825          DC    X'00000009'
00000784 99846DA2A39984A4                    826          DC    C'rd_strdup'
0000078D 00                                  827          DC    X'00'
                                             828 rd_strdup DCCPRLG CINDEX=1081,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1081
                                             829          macro
                                             830          dccextrn &m
                                             831          gblc    &$dccext(1000)
                                             832          gbla    &$dccexti
                                             833          lcla    &i
                                             834 &$dccext(&$dccexti+1) setc    '&m'
                                             835 &i       seta    1
                                             836 .loop    aif    (&i gt &$dccexti).around
                                             837          aif    ('&$dccext(&i)' eq '&m').getout
                                             838 &i       seta    &i+1
                                             839          ago     .loop
                                             840 .around  anop
                                             841 &$dccexti seta &$dccexti+1
                                             842          extrn  &m
                                             843 .getout  anop
                                             844          mend
00000790                                     845+$eye0020    ds    0d                                                    02-DCCCA
00000790 C4C3C3                              846+         dc cl3'DCC'                                                    02-DCCCA
00000793 01                                  847+         dc xl1'01' format one                                          02-DCCCA
00000794 00000000                            848+         dc a(0)                                                        02-DCCCA
00000798 0000000000000802                    849+         dc ad(@PER_1081)                                               02-DCCCA
000007A0 00000000000000D0                    850+         dc ad(208)                                                     02-DCCCA
000007A8 0000000000000000                    851+         dc ad(0)                                                       02-DCCCA
000007B0 0000000000001000                    852+         dc ad(4096)                                                    02-DCCCA
000007B8 20                                  853+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000007B9 03                                  854+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000007BA 03                                  855+         dc al1(3)                                                      02-DCCCA
000007BB 08                                  856+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000007BC 00                                  857+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000007BD 000000                              858+         dc al3(0)                                                      02-DCCCA
000007C0 0000000000000780                    859+         dc ad(@LNAME1081)                                              02-DCCCA
000007C8                                     860+         ds 0d                                                          02-DCCCA
000007C8 0000000000000790                    861+         dc ad($eye0020)                                                02-DCCCA
000007D0 0000000000000000                    862+         dc ad(0)                                                       02-DCCCA
000007D8                                     863+         ds    0d                                                       01-DCCPR
000007D8                                     864+rd_strdup ds   0d                                                       01-DCCPR
000007D8                                     865+@REGION_1081_1 ds 0h                                                    01-DCCPR
000007D8 EBEC D008 0024          00000008    866+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000007DE E3E0 D088 0004          00000088    867+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000007E4 E3C0 D090 0004          00000090    868+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000007EA B904 002E                           869+         lgr   2,14                copy addr of our savearea            01-DCCPR
000007EE E3B0 C018 0004          00000018    870+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000007F4 A7EB 00D0               000000D0    871+         aghi  14,208              increase by frame size               01-DCCPR
000007F8 E3E0 C020 0021          00000020    872+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000007FE 4720 B020               00000020    873+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000802                                     874+@PER_1081 ds   0h                                                       01-DCCPR
00000802 EBDE 2080 0024          00000080    875+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000808 E3C0 2090 0024          00000090    876+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000080E B904 00D2                           877+         lgr   13,2                set real frame pointer               01-DCCPR
00000812 B904 00CF                           878+         lgr   12,15               set base reg                         01-DCCPR
                        000007D8             879+         using @REGION_1081_1,12                                        01-DCCPR
                                             880 * ******* End of Prologue
                                             881 * *
                                             882 * ***
                                             883 * ***      char *n = strdup(s);
00000816 E3F0 1000 0004          00000000    884          LG    15,0(0,1)   ; s
0000081C E3F0 D0B0 0024          000000B0    885          STG   15,176(0,13)
00000822 4110 D0B0               000000B0    886          LA    1,176(0,13)
00000826 E3F0 C0F0 0004          000008C8    887          LG    15,@lit_1081_19 ; strdup
0000082C                                     888 @@gen_label23 DS    0H
0000082C 05EF                                889          BALR  14,15
0000082E                                     890 @@gen_label24 DS    0H
0000082E B904 002F                           891          LGR   2,15
                                             892 * ***
                                             893 * ***
                                             894 * ***
                                             895 * ***      ((n) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             896 * ka\\src\\rd.h", 148, "n"));
00000832 B902 00F2                           897          LTGR  15,2
00000836 4770 C09A               00000872    898          BNZ   @L38
0000083A                                     899 @L37     DS    0H
0000083A E3F0 C108 0004          000008E0    900          LG    15,@lit_1081_20
00000840 41F0 F020               00000020    901          LA    15,32(0,15)
00000844 E3F0 D0B0 0024          000000B0    902          STG   15,176(0,13)
0000084A E3F0 C100 0004          000008D8    903          LG    15,@lit_1081_21
00000850 E3F0 D0B8 0024          000000B8    904          STG   15,184(0,13)
00000856 E548 D0C0 0094          000000C0    905          MVGHI 192(13),148
0000085C 41F0 F022               00000022    906          LA    15,34(0,15)
00000860 E3F0 D0C8 0024          000000C8    907          STG   15,200(0,13)
00000866 4110 D0B0               000000B0    908          LA    1,176(0,13)
0000086A E3F0 C0F8 0004          000008D0    909          LG    15,@lit_1081_22 ; __assert
                                                                                                                           Page   24 
  Active Usings: @REGION_1081_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000870                                     910 @@gen_label26 DS    0H
00000870 05EF                                911          BALR  14,15
00000872                                     912 @@gen_label27 DS    0H
00000872                                     913 @L38     DS    0H
                                             914 * ***      return n;
00000872 B904 00F2                           915          LGR   15,2
                                             916 * ***   }
                                             917 * * **** Start of Epilogue
                                             918          DCCEPIL
00000876                                     919+         ds 0h                                                          01-DCCEP
                                             920+* Epilog
00000876 D707 D088 D088 00000088 00000088    921+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000087C E3D0 D080 0004          00000080    922+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000882 E3C0 D090 0004          00000090    923+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000888 E3B0 C018 0004          00000018    924+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000088E E3C0 B010 0021          00000010    925+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000894 E3E0 D008 0004          00000008    926+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000089A EB1C D020 0004          00000020    927+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000008A0 078E                                928+         bcr 8,14                if same dsab, just return              01-DCCEP
000008A2 E3F0 D010 0024          00000010    929+         stg 15,16(0,13)         save return code                       01-DCCEP
000008A8 E300 D018 0024          00000018    930+         stg 0,24(0,13)          save more return code                  01-DCCEP
000008AE E3F0 D090 0004          00000090    931+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000008B4 E3F0 F018 0004          00000018    932+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000008BA 47F0 F040               00000040    933+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             934+* End of Epilog
                                             935 * * **** End of Epilogue
000008C0                                     936          DS    0D
000008C0 000000D0                            937 @FRAMESIZE_1081 DC F'208'
000008C4 00000000
000008C8 0000000000000000                    938 @lit_1081_19 DC AD(strdup)
000008D0 0000000000000000                    939 @lit_1081_22 DC AD(__assert)
000008D8 000000000000635E                    940 @lit_1081_21 DC AD(@strings@)
000008E0 0000000000005F80                    941 @lit_1081_20 DC AD(@DATA)
                                             942          DROP  12
                                             943 *
                                             944 *   DSECT for automatic variables in "rd_strdup"
                                             945 *      (FUNCTION #1081)
                                             946 *
00000000                00000000 000000A8    947 @AUTO#rd_strdup DSECT
00000000                                     948          DS    XL168
                                             949 *
000008E8                00000000 00005F80    950 @CODE    CSECT
                                             951 *
                                             952 *
                                             953 *
                                             954 * ....... start of rd_refcnt_sub0
000008E8                                     955 @LNAME1084 DS  0H
000008E8 0000000E                            956          DC    X'0000000E'
000008EC 99846D9985868395                    957          DC    C'rd_refcnt_sub0'
000008FA 00                                  958          DC    X'00'
                                             959 rd_refcnt_sub0 DCCPRLG CINDEX=1084,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1084
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             960          macro
                                             961          dccextrn &m
                                             962          gblc    &$dccext(1000)
                                             963          gbla    &$dccexti
                                             964          lcla    &i
                                             965 &$dccext(&$dccexti+1) setc    '&m'
                                             966 &i       seta    1
                                             967 .loop    aif    (&i gt &$dccexti).around
                                             968          aif    ('&$dccext(&i)' eq '&m').getout
                                             969 &i       seta    &i+1
                                             970          ago     .loop
                                             971 .around  anop
                                             972 &$dccexti seta &$dccexti+1
                                             973          extrn  &m
                                             974 .getout  anop
                                             975          mend
00000900                                     976+$eye0023    ds    0d                                                    02-DCCCA
00000900 C4C3C3                              977+         dc cl3'DCC'                                                    02-DCCCA
00000903 01                                  978+         dc xl1'01' format one                                          02-DCCCA
00000904 00000000                            979+         dc a(0)                                                        02-DCCCA
00000908 0000000000000972                    980+         dc ad(@PER_1084)                                               02-DCCCA
00000910 00000000000000D0                    981+         dc ad(208)                                                     02-DCCCA
00000918 0000000000000000                    982+         dc ad(0)                                                       02-DCCCA
00000920 0000000000001000                    983+         dc ad(4096)                                                    02-DCCCA
00000928 20                                  984+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000929 03                                  985+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000092A 03                                  986+         dc al1(3)                                                      02-DCCCA
0000092B 08                                  987+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000092C 00                                  988+         dc bl.8'00000000'                                              02-DCCCA
0000092D 000000                              989+         dc al3(0)                                                      02-DCCCA
00000930 00000000000008E8                    990+         dc ad(@LNAME1084)                                              02-DCCCA
00000938                                     991+         ds 0d                                                          02-DCCCA
00000938 0000000000000900                    992+         dc ad($eye0023)                                                02-DCCCA
00000940 0000000000000000                    993+         dc ad(0)                                                       02-DCCCA
00000948                                     994+         ds    0d                                                       01-DCCPR
00000948                                     995+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
00000948                                     996+@REGION_1084_1 ds 0h                                                    01-DCCPR
00000948 EBEC D008 0024          00000008    997+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000094E E3E0 D088 0004          00000088    998+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000954 E3C0 D090 0004          00000090    999+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000095A B904 002E                          1000+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000095E E3B0 C018 0004          00000018   1001+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000964 A7EB 00D0               000000D0   1002+         aghi  14,208              increase by frame size               01-DCCPR
00000968 E3E0 C020 0021          00000020   1003+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000096E 4720 B020               00000020   1004+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000972                                    1005+@PER_1084 ds   0h                                                       01-DCCPR
00000972 EBDE 2080 0024          00000080   1006+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000978 E3C0 2090 0024          00000090   1007+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000097E B904 00D2                          1008+         lgr   13,2                set real frame pointer               01-DCCPR
00000982 B904 00CF                          1009+         lgr   12,15               set base reg                         01-DCCPR
                        00000948            1010+         using @REGION_1084_1,12                                        01-DCCPR
                                            1011 * ******* End of Prologue
                                                                                                                           Page   26 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1012 * *
                                            1013 * ***           int r;
                                            1014 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                            1015 * ***           r = rd_atomic32_sub(R, 1);
00000986 E3F0 1000 0004          00000000   1016          LG    15,0(0,1)   ; R
0000098C E3F0 D0B0 0024          000000B0   1017          STG   15,176(0,13)
00000992 E548 D0B8 0001          000000B8   1018          MVGHI 184(13),1
00000998 4110 D0B0               000000B0   1019          LA    1,176(0,13)
0000099C E3F0 C100 0004          00000A48   1020          LG    15,@lit_1084_24 ; rd_atomic32_sub
000009A2                                    1021 @@gen_label28 DS    0H
000009A2 05EF                               1022          BALR  14,15
000009A4                                    1023 @@gen_label29 DS    0H
000009A4 122F                               1024          LTR   2,15
                                            1025 * ***
                                            1026 * ***           if (r < 0)
000009A6 47B0 C0A6               000009EE   1027          BNL   @L41
                                            1028 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                            1029 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                            1030 * zero\""));
000009AA E3F0 C108 0004          00000A50   1031          LG    15,@lit_1084_25
000009B0 4110 F024               00000024   1032          LA    1,36(0,15)
000009B4 9500 1000      00000000 00000000   1033          CLI   0(1),0
000009B8 4780 C0A6               000009EE   1034          BE    @L41
000009BC                                    1035 @L42     DS    0H
000009BC E310 C118 0004          00000A60   1036          LG    1,@lit_1084_26
000009C2 4110 1036               00000036   1037          LA    1,54(0,1)
000009C6 E310 D0B0 0024          000000B0   1038          STG   1,176(0,13)
000009CC E3F0 D0B8 0024          000000B8   1039          STG   15,184(0,13)
000009D2 E548 D0C0 014F          000000C0   1040          MVGHI 192(13),335
000009D8 41F0 F034               00000034   1041          LA    15,52(0,15)
000009DC E3F0 D0C8 0024          000000C8   1042          STG   15,200(0,13)
000009E2 4110 D0B0               000000B0   1043          LA    1,176(0,13)
000009E6 E3F0 C110 0004          00000A58   1044          LG    15,@lit_1084_27 ; __assert
000009EC                                    1045 @@gen_label32 DS    0H
000009EC 05EF                               1046          BALR  14,15
000009EE                                    1047 @@gen_label33 DS    0H
000009EE                                    1048 @L43     DS    0H
000009EE                                    1049 @L41     DS    0H
                                            1050 * ***           return r;
000009EE B914 00F2                          1051          LGFR  15,2
                                            1052 * ***   }
                                            1053 * * **** Start of Epilogue
                                            1054          DCCEPIL
000009F2                                    1055+         ds 0h                                                          01-DCCEP
                                            1056+* Epilog
000009F2 D707 D088 D088 00000088 00000088   1057+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000009F8 E3D0 D080 0004          00000080   1058+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000009FE E3C0 D090 0004          00000090   1059+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000A04 E3B0 C018 0004          00000018   1060+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000A0A E3C0 B010 0021          00000010   1061+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000A10 E3E0 D008 0004          00000008   1062+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000A16 EB1C D020 0004          00000020   1063+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   27 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000A1C 078E                               1064+         bcr 8,14                if same dsab, just return              01-DCCEP
00000A1E E3F0 D010 0024          00000010   1065+         stg 15,16(0,13)         save return code                       01-DCCEP
00000A24 E300 D018 0024          00000018   1066+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000A2A E3F0 D090 0004          00000090   1067+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000A30 E3F0 F018 0004          00000018   1068+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000A36 47F0 F040               00000040   1069+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1070+* End of Epilog
                                            1071 * * **** End of Epilogue
00000A40                                    1072          DS    0D
00000A40 000000D0                           1073 @FRAMESIZE_1084 DC F'208'
00000A44 00000000
00000A48 00000000000001A8                   1074 @lit_1084_24 DC AD(rd_atomic32_sub)
00000A50 000000000000635E                   1075 @lit_1084_25 DC AD(@strings@)
00000A58 0000000000000000                   1076 @lit_1084_27 DC AD(__assert)
00000A60 0000000000005F80                   1077 @lit_1084_26 DC AD(@DATA)
                                            1078          DROP  12
                                            1079 *
                                            1080 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                            1081 *      (FUNCTION #1084)
                                            1082 *
00000000                00000000 000000AC   1083 @AUTO#rd_refcnt_sub0 DSECT
00000000                                    1084          DS    XL168
000000A8                                    1085 rd_refcnt_sub0#r#0 DS 1F   ; r
                                            1086 *
00000A68                00000000 00005F80   1087 @CODE    CSECT
                                            1088 *
                                            1089 *
                                            1090 *
                                            1091 * ....... start of rd_timeout_us
00000A68                                    1092 @LNAME1091 DS  0H
00000A68 0000000D                           1093          DC    X'0000000D'
00000A6C 99846DA389948596                   1094          DC    C'rd_timeout_us'
00000A79 00                                 1095          DC    X'00'
                                            1096 rd_timeout_us DCCPRLG CINDEX=1091,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1091
                                            1097          macro
                                            1098          dccextrn &m
                                            1099          gblc    &$dccext(1000)
                                            1100          gbla    &$dccexti
                                            1101          lcla    &i
                                            1102 &$dccext(&$dccexti+1) setc    '&m'
                                            1103 &i       seta    1
                                            1104 .loop    aif    (&i gt &$dccexti).around
                                            1105          aif    ('&$dccext(&i)' eq '&m').getout
                                            1106 &i       seta    &i+1
                                            1107          ago     .loop
                                            1108 .around  anop
                                            1109 &$dccexti seta &$dccexti+1
                                            1110          extrn  &m
                                            1111 .getout  anop
                                            1112          mend
00000A80                                    1113+$eye0026    ds    0d                                                    02-DCCCA
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000A80 C4C3C3                             1114+         dc cl3'DCC'                                                    02-DCCCA
00000A83 01                                 1115+         dc xl1'01' format one                                          02-DCCCA
00000A84 00000000                           1116+         dc a(0)                                                        02-DCCCA
00000A88 0000000000000000                   1117+         dc ad(0)                                                       02-DCCCA
00000A90 00000000000000A8                   1118+         dc ad(168)                                                     02-DCCCA
00000A98 0000000000000000                   1119+         dc ad(0)                                                       02-DCCCA
00000AA0 0000000000001000                   1120+         dc ad(4096)                                                    02-DCCCA
00000AA8 20                                 1121+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000AA9 03                                 1122+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000AAA 03                                 1123+         dc al1(3)                                                      02-DCCCA
00000AAB 08                                 1124+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000AAC 00                                 1125+         dc bl.8'00000000'                                              02-DCCCA
00000AAD 000000                             1126+         dc al3(0)                                                      02-DCCCA
00000AB0 0000000000000A68                   1127+         dc ad(@LNAME1091)                                              02-DCCCA
00000AB8                                    1128+         ds 0d                                                          02-DCCCA
00000AB8 0000000000000A80                   1129+         dc ad($eye0026)                                                02-DCCCA
00000AC0 0000000000000000                   1130+         dc ad(0)                                                       02-DCCCA
00000AC8                                    1131+         ds    0d                                                       01-DCCPR
00000AC8                                    1132+rd_timeout_us ds 0d                                                     01-DCCPR
00000AC8                                    1133+@REGION_1091_1 ds 0h                                                    01-DCCPR
00000AC8 EBEC D008 0024          00000008   1134+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000ACE B904 00CF                          1135+         lgr   12,15               set base reg                         01-DCCPR
                        00000AC8            1136+         using @REGION_1091_1,12                                        01-DCCPR
                                            1137 * ******* End of Prologue
                                            1138 * *
                                            1139 * ***           if (timeout_ms <= 0)
00000AD2 E3F0 1004 0012          00000004   1140          LT    15,4(0,1)   ; timeout_ms
00000AD8 4720 C01C               00000AE4   1141          BH    @L44
                                            1142 * ***                   return (rd_ts_t)timeout_ms;
00000ADC B914 00FF                          1143          LGFR  15,15
00000AE0 47F0 C024               00000AEC   1144          B     @ret_lab_1091
                                            1145 * ***           else
00000AE4                                    1146 @L44     DS    0H
                                            1147 * ***                   return (rd_ts_t)timeout_ms * 1000;
00000AE4 B914 00FF                          1148          LGFR  15,15
00000AE8 A7FD 03E8               000003E8   1149          MGHI  15,1000
                                            1150 * ***   }
00000AEC                                    1151 @ret_lab_1091 DS 0H
                                            1152 * * **** Start of Epilogue
                                            1153          DCCEPIL
00000AEC                                    1154+         ds 0h                                                          01-DCCEP
                                            1155+* Epilog
                                            1156+* Epilog
00000AEC E3E0 D008 0004          00000008   1157+         lg    14,8(,13) restore the reg                                01-DCCEP
00000AF2 EB1C D020 0004          00000020   1158+         lmg   1,12,32(13)                                              01-DCCEP
00000AF8 07FE                               1159+         br   14                                                        01-DCCEP
                                            1160+* End of Epilog
                                            1161 * * **** End of Epilogue
                                            1162          DROP  12
                                            1163 *
                                            1164 *   DSECT for automatic variables in "rd_timeout_us"
                                            1165 *      (FUNCTION #1091)
                                                                                                                           Page   29 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1166 *
00000000                00000000 000000A8   1167 @AUTO#rd_timeout_us DSECT
00000000                                    1168          DS    XL168
                                            1169 *
00000AFA                00000000 00005F80   1170 @CODE    CSECT
                                            1171 *
                                            1172 *
                                            1173 *
                                            1174 * ....... start of rd_avg_add
00000AFA                                    1175 @LNAME1222 DS  0H
00000AFA 0000000A                           1176          DC    X'0000000A'
00000AFE 99846D81A5876D81                   1177          DC    C'rd_avg_add'
00000B08 00                                 1178          DC    X'00'
                                            1179 rd_avg_add DCCPRLG CINDEX=1222,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME1222
                                            1180          macro
                                            1181          dccextrn &m
                                            1182          gblc    &$dccext(1000)
                                            1183          gbla    &$dccexti
                                            1184          lcla    &i
                                            1185 &$dccext(&$dccexti+1) setc    '&m'
                                            1186 &i       seta    1
                                            1187 .loop    aif    (&i gt &$dccexti).around
                                            1188          aif    ('&$dccext(&i)' eq '&m').getout
                                            1189 &i       seta    &i+1
                                            1190          ago     .loop
                                            1191 .around  anop
                                            1192 &$dccexti seta &$dccexti+1
                                            1193          extrn  &m
                                            1194 .getout  anop
                                            1195          mend
00000B10                                    1196+$eye0029    ds    0d                                                    02-DCCCA
00000B10 C4C3C3                             1197+         dc cl3'DCC'                                                    02-DCCCA
00000B13 01                                 1198+         dc xl1'01' format one                                          02-DCCCA
00000B14 00000000                           1199+         dc a(0)                                                        02-DCCCA
00000B18 0000000000000B82                   1200+         dc ad(@PER_1222)                                               02-DCCCA
00000B20 00000000000000B8                   1201+         dc ad(184)                                                     02-DCCCA
00000B28 0000000000000000                   1202+         dc ad(0)                                                       02-DCCCA
00000B30 0000000000001000                   1203+         dc ad(4096)                                                    02-DCCCA
00000B38 20                                 1204+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B39 03                                 1205+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B3A 03                                 1206+         dc al1(3)                                                      02-DCCCA
00000B3B 08                                 1207+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B3C 00                                 1208+         dc bl.8'00000000'                                              02-DCCCA
00000B3D 000000                             1209+         dc al3(0)                                                      02-DCCCA
00000B40 0000000000000AFA                   1210+         dc ad(@LNAME1222)                                              02-DCCCA
00000B48                                    1211+         ds 0d                                                          02-DCCCA
00000B48 0000000000000B10                   1212+         dc ad($eye0029)                                                02-DCCCA
00000B50 0000000000000000                   1213+         dc ad(0)                                                       02-DCCCA
00000B58                                    1214+         ds    0d                                                       01-DCCPR
00000B58                                    1215+rd_avg_add ds  0d                                                       01-DCCPR
00000B58                                    1216+@REGION_1222_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000B58 EBEC D008 0024          00000008   1217+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B5E E3E0 D088 0004          00000088   1218+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B64 E3C0 D090 0004          00000090   1219+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B6A B904 002E                          1220+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B6E E3B0 C018 0004          00000018   1221+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B74 A7EB 00B8               000000B8   1222+         aghi  14,184              increase by frame size               01-DCCPR
00000B78 E3E0 C020 0021          00000020   1223+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B7E 4720 B020               00000020   1224+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B82                                    1225+@PER_1222 ds   0h                                                       01-DCCPR
00000B82 EBDE 2080 0024          00000080   1226+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B88 E3C0 2090 0024          00000090   1227+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000B8E B904 00D2                          1228+         lgr   13,2                set real frame pointer               01-DCCPR
00000B92 B904 00CF                          1229+         lgr   12,15               set base reg                         01-DCCPR
                        00000B58            1230+         using @REGION_1222_1,12                                        01-DCCPR
                                            1231 * ******* End of Prologue
                                            1232 * *
                                            1233 * ***           mtx_lock(&ra->ra_lock);
00000B96 E320 1008 0004          00000008   1234          LG    2,8(0,1)    ; v
00000B9C E330 1000 0004          00000000   1235          LG    3,0(0,1)    ; ra
00000BA2 41F0 3030               00000030   1236          LA    15,48(0,3)
00000BA6 E3F0 D0A8 0024          000000A8   1237          STG   15,168(0,13)
00000BAC 4110 D0A8               000000A8   1238          LA    1,168(0,13)
00000BB0 E3F0 C090 0004          00000BE8   1239          LG    15,@lit_1222_29 ; mtx_lock
00000BB6                                    1240 @@gen_label35 DS    0H
00000BB6 05EF                               1241          BALR  14,15
00000BB8                                    1242 @@gen_label36 DS    0H
                                            1243 * ***           if (!ra->ra_enabled) {
00000BB8 E3F0 3058 0012          00000058   1244          LT    15,88(0,3)  ; offset of ra_enabled in rd_avg_s
00000BBE 4770 C0A8               00000C00   1245          BNZ   @L79
                                            1246 * ***                   mtx_unlock(&ra->ra_lock);
00000BC2 41F0 3030               00000030   1247          LA    15,48(0,3)
00000BC6 E3F0 D0A8 0024          000000A8   1248          STG   15,168(0,13)
00000BCC 4110 D0A8               000000A8   1249          LA    1,168(0,13)
00000BD0 E3F0 C098 0004          00000BF0   1250          LG    15,@lit_1222_30 ; mtx_unlock
00000BD6                                    1251 @@gen_label38 DS    0H
00000BD6 05EF                               1252          BALR  14,15
00000BD8                                    1253 @@gen_label39 DS    0H
                                            1254 * ***                   return;
00000BD8 47F0 C122               00000C7A   1255          B     @ret_lab_1222
00000BE0                                    1256          DS    0D
00000BE0 000000B8                           1257 @FRAMESIZE_1222 DC F'184'
00000BE4 00000000
00000BE8 0000000000000000                   1258 @lit_1222_29 DC AD(mtx_lock)
00000BF0 0000000000000000                   1259 @lit_1222_30 DC AD(mtx_unlock)
00000BF8 0000000000000000                   1260 @lit_1222_31 DC AD(rd_hdr_histogram_record)
                                            1261 * ***           }
00000C00                                    1262 @L79     DS    0H
                                            1263 * ***      if (v > ra->ra_v.maxv)
00000C00 E320 3000 0020          00000000   1264          CG    2,0(0,3)
00000C06 47D0 C0B8               00000C10   1265          BNH   @L80
                                            1266 * ***         ra->ra_v.maxv = v;
00000C0A E320 3000 0024          00000000   1267          STG   2,0(0,3)    ; ra
                                                                                                                           Page   31 
  Active Usings: @REGION_1222_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000C10                                    1268 @L80     DS    0H
                                            1269 * ***      if (ra->ra_v.minv == 0 || v < ra->ra_v.minv)
00000C10 E558 3008 0000          00000008   1270          CGHSI 8(3),0
00000C16 4780 C0CC               00000C24   1271          BE    @L82
00000C1A E320 3008 0020          00000008   1272          CG    2,8(0,3)
00000C20 47B0 C0D2               00000C2A   1273          BNL   @L81
00000C24                                    1274 @L82     DS    0H
                                            1275 * ***         ra->ra_v.minv = v;
00000C24 E320 3008 0024          00000008   1276          STG   2,8(0,3)    ; offset of minv in 0000035
00000C2A                                    1277 @L81     DS    0H
                                            1278 * ***      ra->ra_v.sum += v;
00000C2A B904 00F2                          1279          LGR   15,2
00000C2E E3F0 3018 0008          00000018   1280          AG    15,24(0,3)
00000C34 E3F0 3018 0024          00000018   1281          STG   15,24(0,3)
                                            1282 * ***      ra->ra_v.cnt++;
00000C3A 58F0 3020               00000020   1283          L     15,32(0,3)
00000C3E A7FA 0001               00000001   1284          AHI   15,1
00000C42 50F0 3020               00000020   1285          ST    15,32(0,3)
                                            1286 * ***
                                            1287 * ***           rd_hdr_histogram_record(ra->ra_hdr, v);
00000C46 E3F0 3060 0004          00000060   1288          LG    15,96(0,3)
00000C4C E3F0 D0A8 0024          000000A8   1289          STG   15,168(0,13)
00000C52 E320 D0B0 0024          000000B0   1290          STG   2,176(0,13)
00000C58 4110 D0A8               000000A8   1291          LA    1,168(0,13)
00000C5C E3F0 C0A0 0004          00000BF8   1292          LG    15,@lit_1222_31 ; rd_hdr_histogram_record
00000C62                                    1293 @@gen_label43 DS    0H
00000C62 05EF                               1294          BALR  14,15
00000C64                                    1295 @@gen_label44 DS    0H
                                            1296 * ***
                                            1297 * ***           mtx_unlock(&ra->ra_lock);
00000C64 41F0 3030               00000030   1298          LA    15,48(0,3)
00000C68 E3F0 D0A8 0024          000000A8   1299          STG   15,168(0,13)
00000C6E 4110 D0A8               000000A8   1300          LA    1,168(0,13)
00000C72 E3F0 C098 0004          00000BF0   1301          LG    15,@lit_1222_30 ; mtx_unlock
00000C78                                    1302 @@gen_label45 DS    0H
00000C78 05EF                               1303          BALR  14,15
00000C7A                                    1304 @@gen_label46 DS    0H
                                            1305 * ***   }
00000C7A                                    1306 @ret_lab_1222 DS 0H
                                            1307 * * **** Start of Epilogue
                                            1308          DCCEPIL
00000C7A                                    1309+         ds 0h                                                          01-DCCEP
                                            1310+* Epilog
00000C7A D707 D088 D088 00000088 00000088   1311+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000C80 E3D0 D080 0004          00000080   1312+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000C86 E3C0 D090 0004          00000090   1313+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000C8C E3B0 C018 0004          00000018   1314+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000C92 E3C0 B010 0021          00000010   1315+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C98 E3E0 D008 0004          00000008   1316+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C9E EB1C D020 0004          00000020   1317+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000CA4 078E                               1318+         bcr 8,14                if same dsab, just return              01-DCCEP
00000CA6 E3F0 D010 0024          00000010   1319+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page   32 
  Active Usings: @REGION_1222_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000CAC E300 D018 0024          00000018   1320+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000CB2 E3F0 D090 0004          00000090   1321+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000CB8 E3F0 F018 0004          00000018   1322+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000CBE 47F0 F040               00000040   1323+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1324+* End of Epilog
                                            1325 * * **** End of Epilogue
                                            1326          DROP  12
                                            1327 *
                                            1328 *   DSECT for automatic variables in "rd_avg_add"
                                            1329 *      (FUNCTION #1222)
                                            1330 *
00000000                00000000 000000A8   1331 @AUTO#rd_avg_add DSECT
00000000                                    1332          DS    XL168
                                            1333 *
00000CC2                00000000 00005F80   1334 @CODE    CSECT
                                            1335 *
                                            1336 *
                                            1337 *
                                            1338 * ....... start of rd_kafka_msgq_init
00000CC2                                    1339 @LNAME1341 DS  0H
00000CC2 00000012                           1340          DC    X'00000012'
00000CC6 99846D9281869281                   1341          DC    C'rd_kafka_msgq_init'
00000CD8 00                                 1342          DC    X'00'
                                            1343 rd_kafka_msgq_init DCCPRLG CINDEX=1341,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1341
                                            1344          macro
                                            1345          dccextrn &m
                                            1346          gblc    &$dccext(1000)
                                            1347          gbla    &$dccexti
                                            1348          lcla    &i
                                            1349 &$dccext(&$dccexti+1) setc    '&m'
                                            1350 &i       seta    1
                                            1351 .loop    aif    (&i gt &$dccexti).around
                                            1352          aif    ('&$dccext(&i)' eq '&m').getout
                                            1353 &i       seta    &i+1
                                            1354          ago     .loop
                                            1355 .around  anop
                                            1356 &$dccexti seta &$dccexti+1
                                            1357          extrn  &m
                                            1358 .getout  anop
                                            1359          mend
00000CE0                                    1360+$eye0032    ds    0d                                                    02-DCCCA
00000CE0 C4C3C3                             1361+         dc cl3'DCC'                                                    02-DCCCA
00000CE3 01                                 1362+         dc xl1'01' format one                                          02-DCCCA
00000CE4 00000000                           1363+         dc a(0)                                                        02-DCCCA
00000CE8 0000000000000000                   1364+         dc ad(0)                                                       02-DCCCA
00000CF0 00000000000000A8                   1365+         dc ad(168)                                                     02-DCCCA
00000CF8 0000000000000000                   1366+         dc ad(0)                                                       02-DCCCA
00000D00 0000000000001000                   1367+         dc ad(4096)                                                    02-DCCCA
00000D08 20                                 1368+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D09 03                                 1369+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D0A 03                                 1370+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000D0B 08                                 1371+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D0C 00                                 1372+         dc bl.8'00000000'                                              02-DCCCA
00000D0D 000000                             1373+         dc al3(0)                                                      02-DCCCA
00000D10 0000000000000CC2                   1374+         dc ad(@LNAME1341)                                              02-DCCCA
00000D18                                    1375+         ds 0d                                                          02-DCCCA
00000D18 0000000000000CE0                   1376+         dc ad($eye0032)                                                02-DCCCA
00000D20 0000000000000000                   1377+         dc ad(0)                                                       02-DCCCA
00000D28                                    1378+         ds    0d                                                       01-DCCPR
00000D28                                    1379+rd_kafka_msgq_init ds 0d                                                01-DCCPR
00000D28                                    1380+@REGION_1341_1 ds 0h                                                    01-DCCPR
00000D28 EBEC D008 0024          00000008   1381+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1382 * ******* End of Prologue
                                            1383 * *
                                            1384 * ***           do { (&rkmq->rkmq_msgs)->tqh_first = (((void *)0)); (&\
                                            1385 * rkmq->rkmq_msgs)->tqh_last = &(&rkmq->rkmq_msgs)->tqh_first; } while\
                                            1386 *  ( 0);
00000D2E E3F0 1000 0004          00000000   1387          LG    15,0(0,1)   ; rkmq
00000D34                                    1388 @L178    DS    0H
00000D34 A719 0000               00000000   1389          LGHI  1,0         ; 0
00000D38 E310 F000 0024          00000000   1390          STG   1,0(0,15)   ; rkmq
00000D3E E3F0 F008 0024          00000008   1391          STG   15,8(0,15)  ; offset of tqh_last in rd_kafka_msgs_head_s
                                            1392 * ***           rkmq->rkmq_msg_cnt   = 0;
00000D44 E54C F010 0000          00000010   1393          MVHI  16(15),0    ; offset of rkmq_msg_cnt in rd_kafka_msgq_s
                                            1394 * ***           rkmq->rkmq_msg_bytes = 0;
00000D4A E548 F018 0000          00000018   1395          MVGHI 24(15),0    ; offset of rkmq_msg_bytes in rd_kafka_msgq_*
                                                                s
                                            1396 * ***   }
00000D50                                    1397 @ret_lab_1341 DS 0H
                                            1398 * * **** Start of Epilogue
                                            1399          DCCEPIL
00000D50                                    1400+         ds 0h                                                          01-DCCEP
                                            1401+* Epilog
                                            1402+* Epilog
00000D50 E3E0 D008 0004          00000008   1403+         lg    14,8(,13) restore the reg                                01-DCCEP
00000D56 EB1C D020 0004          00000020   1404+         lmg   1,12,32(13)                                              01-DCCEP
00000D5C 07FE                               1405+         br   14                                                        01-DCCEP
                                            1406+* End of Epilog
                                            1407 * * **** End of Epilogue
                                            1408 *
                                            1409 *   DSECT for automatic variables in "rd_kafka_msgq_init"
                                            1410 *      (FUNCTION #1341)
                                            1411 *
00000000                00000000 000000A8   1412 @AUTO#rd_kafka_msgq_init DSECT
00000000                                    1413          DS    XL168
                                            1414 *
00000D5E                00000000 00005F80   1415 @CODE    CSECT
                                            1416 *
                                            1417 *
                                            1418 *
                                            1419 * ....... start of rd_kafka_msgq_purge
00000D5E                                    1420 @LNAME1346 DS  0H
00000D5E 00000013                           1421          DC    X'00000013'
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000D62 99846D9281869281                   1422          DC    C'rd_kafka_msgq_purge'
00000D75 00                                 1423          DC    X'00'
                                            1424 rd_kafka_msgq_purge DCCPRLG CINDEX=1346,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1346
                                            1425          macro
                                            1426          dccextrn &m
                                            1427          gblc    &$dccext(1000)
                                            1428          gbla    &$dccexti
                                            1429          lcla    &i
                                            1430 &$dccext(&$dccexti+1) setc    '&m'
                                            1431 &i       seta    1
                                            1432 .loop    aif    (&i gt &$dccexti).around
                                            1433          aif    ('&$dccext(&i)' eq '&m').getout
                                            1434 &i       seta    &i+1
                                            1435          ago     .loop
                                            1436 .around  anop
                                            1437 &$dccexti seta &$dccexti+1
                                            1438          extrn  &m
                                            1439 .getout  anop
                                            1440          mend
00000D78                                    1441+$eye0035    ds    0d                                                    02-DCCCA
00000D78 C4C3C3                             1442+         dc cl3'DCC'                                                    02-DCCCA
00000D7B 01                                 1443+         dc xl1'01' format one                                          02-DCCCA
00000D7C 00000000                           1444+         dc a(0)                                                        02-DCCCA
00000D80 0000000000000DEA                   1445+         dc ad(@PER_1346)                                               02-DCCCA
00000D88 00000000000000C0                   1446+         dc ad(192)                                                     02-DCCCA
00000D90 0000000000000000                   1447+         dc ad(0)                                                       02-DCCCA
00000D98 0000000000001000                   1448+         dc ad(4096)                                                    02-DCCCA
00000DA0 20                                 1449+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000DA1 03                                 1450+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000DA2 03                                 1451+         dc al1(3)                                                      02-DCCCA
00000DA3 08                                 1452+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000DA4 00                                 1453+         dc bl.8'00000000'                                              02-DCCCA
00000DA5 000000                             1454+         dc al3(0)                                                      02-DCCCA
00000DA8 0000000000000D5E                   1455+         dc ad(@LNAME1346)                                              02-DCCCA
00000DB0                                    1456+         ds 0d                                                          02-DCCCA
00000DB0 0000000000000D78                   1457+         dc ad($eye0035)                                                02-DCCCA
00000DB8 0000000000000000                   1458+         dc ad(0)                                                       02-DCCCA
00000DC0                                    1459+         ds    0d                                                       01-DCCPR
00000DC0                                    1460+rd_kafka_msgq_purge ds 0d                                               01-DCCPR
00000DC0                                    1461+@REGION_1346_1 ds 0h                                                    01-DCCPR
00000DC0 EBEC D008 0024          00000008   1462+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000DC6 E3E0 D088 0004          00000088   1463+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000DCC E3C0 D090 0004          00000090   1464+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000DD2 B904 002E                          1465+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000DD6 E3B0 C018 0004          00000018   1466+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DDC A7EB 00C0               000000C0   1467+         aghi  14,192              increase by frame size               01-DCCPR
00000DE0 E3E0 C020 0021          00000020   1468+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DE6 4720 B020               00000020   1469+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000DEA                                    1470+@PER_1346 ds   0h                                                       01-DCCPR
00000DEA EBDE 2080 0024          00000080   1471+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000DF0 E3C0 2090 0024          00000090   1472+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000DF6 B904 00D2                          1473+         lgr   13,2                set real frame pointer               01-DCCPR
00000DFA B904 00CF                          1474+         lgr   12,15               set base reg                         01-DCCPR
                        00000DC0            1475+         using @REGION_1346_1,12                                        01-DCCPR
00000DFE B904 0031                          1476          LGR   3,1         ; ptr to parm area
                                            1477 * ******* End of Prologue
                                            1478 * *
                                            1479 * ***      rd_kafka_msg_t *rkm, *next;
                                            1480 * ***
                                            1481 * ***      next = ((&rkmq->rkmq_msgs)->tqh_first);
00000E02 E3F0 3008 0004          00000008   1482          LG    15,8(0,3)   ; rkmq
00000E08 E320 F000 0004          00000000   1483          LG    2,0(0,15)   ; rkmq
                                            1484 * ***      while (next) {
00000E0E 47F0 C098               00000E58   1485          B     @L211
00000E18                                    1486          DS    0D
00000E18 000000C0                           1487 @FRAMESIZE_1346 DC F'192'
00000E1C 00000000
00000E20 0000000000000000                   1488 @lit_1346_35 DC AD(rd_kafka_msg_destroy)
00000E28 0000000000000D28                   1489 @lit_1346_36 DC AD(rd_kafka_msgq_init)
00000E30                                    1490 @L210    DS    0H
                                            1491 * ***         rkm = next;
00000E30 B904 00F2                          1492          LGR   15,2
                                            1493 * ***         next = ((next)->rkm_link .tqe_next);
00000E34 E320 2048 0004          00000048   1494          LG    2,72(0,2)   ; offset of rkm_link in rd_kafka_msg_s
                                            1495 * ***
                                            1496 * ***         rd_kafka_msg_destroy(rk, rkm);
00000E3A E310 3000 0004          00000000   1497          LG    1,0(0,3)    ; rk
00000E40 E310 D0B0 0024          000000B0   1498          STG   1,176(0,13)
00000E46 E3F0 D0B8 0024          000000B8   1499          STG   15,184(0,13)
00000E4C 4110 D0B0               000000B0   1500          LA    1,176(0,13)
00000E50 E3F0 C060 0004          00000E20   1501          LG    15,@lit_1346_35 ; rd_kafka_msg_destroy
00000E56                                    1502 @@gen_label47 DS    0H
00000E56 05EF                               1503          BALR  14,15
00000E58                                    1504 @@gen_label48 DS    0H
                                            1505 * ***      }
00000E58                                    1506 @L211    DS    0H
00000E58 B902 00F2                          1507          LTGR  15,2
00000E5C 4770 C070               00000E30   1508          BNZ   @L210
                                            1509 * ***
                                            1510 * ***      rd_kafka_msgq_init(rkmq);
00000E60 E3F0 3008 0004          00000008   1511          LG    15,8(0,3)   ; rkmq
00000E66 E3F0 D0B0 0024          000000B0   1512          STG   15,176(0,13)
00000E6C 4110 D0B0               000000B0   1513          LA    1,176(0,13)
00000E70 E3F0 C068 0004          00000E28   1514          LG    15,@lit_1346_36 ; rd_kafka_msgq_init
00000E76                                    1515 @@gen_label50 DS    0H
00000E76 05EF                               1516          BALR  14,15
00000E78                                    1517 @@gen_label51 DS    0H
                                            1518 * ***   }
00000E78                                    1519 @ret_lab_1346 DS 0H
                                            1520 * * **** Start of Epilogue
                                            1521          DCCEPIL
00000E78                                    1522+         ds 0h                                                          01-DCCEP
                                            1523+* Epilog
                                                                                                                           Page   36 
  Active Usings: @REGION_1346_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000E78 D707 D088 D088 00000088 00000088   1524+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000E7E E3D0 D080 0004          00000080   1525+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000E84 E3C0 D090 0004          00000090   1526+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000E8A E3B0 C018 0004          00000018   1527+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000E90 E3C0 B010 0021          00000010   1528+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000E96 E3E0 D008 0004          00000008   1529+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000E9C EB1C D020 0004          00000020   1530+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000EA2 078E                               1531+         bcr 8,14                if same dsab, just return              01-DCCEP
00000EA4 E3F0 D010 0024          00000010   1532+         stg 15,16(0,13)         save return code                       01-DCCEP
00000EAA E300 D018 0024          00000018   1533+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000EB0 E3F0 D090 0004          00000090   1534+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000EB6 E3F0 F018 0004          00000018   1535+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000EBC 47F0 F040               00000040   1536+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1537+* End of Epilog
                                            1538 * * **** End of Epilogue
                                            1539          DROP  12
                                            1540 *
                                            1541 *   DSECT for automatic variables in "rd_kafka_msgq_purge"
                                            1542 *      (FUNCTION #1346)
                                            1543 *
00000000                00000000 000000A8   1544 @AUTO#rd_kafka_msgq_purge DSECT
00000000                                    1545          DS    XL168
                                            1546 *
00000EC0                00000000 00005F80   1547 @CODE    CSECT
                                            1548 *
                                            1549 *
                                            1550 *
                                            1551 * ....... start of rd_kafka_q_keep
00000EC0                                    1552 @LNAME1428 DS  0H
00000EC0 0000000F                           1553          DC    X'0000000F'
00000EC4 99846D9281869281                   1554          DC    C'rd_kafka_q_keep'
00000ED3 00                                 1555          DC    X'00'
                                            1556 rd_kafka_q_keep DCCPRLG CINDEX=1428,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1428
                                            1557          macro
                                            1558          dccextrn &m
                                            1559          gblc    &$dccext(1000)
                                            1560          gbla    &$dccexti
                                            1561          lcla    &i
                                            1562 &$dccext(&$dccexti+1) setc    '&m'
                                            1563 &i       seta    1
                                            1564 .loop    aif    (&i gt &$dccexti).around
                                            1565          aif    ('&$dccext(&i)' eq '&m').getout
                                            1566 &i       seta    &i+1
                                            1567          ago     .loop
                                            1568 .around  anop
                                            1569 &$dccexti seta &$dccexti+1
                                            1570          extrn  &m
                                            1571 .getout  anop
                                            1572          mend
00000ED8                                    1573+$eye0038    ds    0d                                                    02-DCCCA
00000ED8 C4C3C3                             1574+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000EDB 01                                 1575+         dc xl1'01' format one                                          02-DCCCA
00000EDC 00000000                           1576+         dc a(0)                                                        02-DCCCA
00000EE0 0000000000000F4A                   1577+         dc ad(@PER_1428)                                               02-DCCCA
00000EE8 00000000000000B0                   1578+         dc ad(176)                                                     02-DCCCA
00000EF0 0000000000000000                   1579+         dc ad(0)                                                       02-DCCCA
00000EF8 0000000000001000                   1580+         dc ad(4096)                                                    02-DCCCA
00000F00 20                                 1581+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F01 03                                 1582+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F02 03                                 1583+         dc al1(3)                                                      02-DCCCA
00000F03 08                                 1584+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F04 00                                 1585+         dc bl.8'00000000'                                              02-DCCCA
00000F05 000000                             1586+         dc al3(0)                                                      02-DCCCA
00000F08 0000000000000EC0                   1587+         dc ad(@LNAME1428)                                              02-DCCCA
00000F10                                    1588+         ds 0d                                                          02-DCCCA
00000F10 0000000000000ED8                   1589+         dc ad($eye0038)                                                02-DCCCA
00000F18 0000000000000000                   1590+         dc ad(0)                                                       02-DCCCA
00000F20                                    1591+         ds    0d                                                       01-DCCPR
00000F20                                    1592+rd_kafka_q_keep ds 0d                                                   01-DCCPR
00000F20                                    1593+@REGION_1428_1 ds 0h                                                    01-DCCPR
00000F20 EBEC D008 0024          00000008   1594+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F26 E3E0 D088 0004          00000088   1595+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F2C E3C0 D090 0004          00000090   1596+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F32 B904 002E                          1597+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F36 E3B0 C018 0004          00000018   1598+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F3C A7EB 00B0               000000B0   1599+         aghi  14,176              increase by frame size               01-DCCPR
00000F40 E3E0 C020 0021          00000020   1600+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F46 4720 B020               00000020   1601+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F4A                                    1602+@PER_1428 ds   0h                                                       01-DCCPR
00000F4A EBDE 2080 0024          00000080   1603+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F50 E3C0 2090 0024          00000090   1604+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F56 B904 00D2                          1605+         lgr   13,2                set real frame pointer               01-DCCPR
00000F5A B904 00CF                          1606+         lgr   12,15               set base reg                         01-DCCPR
                        00000F20            1607+         using @REGION_1428_1,12                                        01-DCCPR
                                            1608 * ******* End of Prologue
                                            1609 * *
                                            1610 * ***           mtx_lock(&rkq->rkq_lock);
00000F5E E320 1000 0004          00000000   1611          LG    2,0(0,1)    ; rkq
00000F64 E320 D0A8 0024          000000A8   1612          STG   2,168(0,13)
00000F6A 4110 D0A8               000000A8   1613          LA    1,168(0,13)
00000F6E E3F0 C0C8 0004          00000FE8   1614          LG    15,@lit_1428_38 ; mtx_lock
00000F74                                    1615 @@gen_label52 DS    0H
00000F74 05EF                               1616          BALR  14,15
00000F76                                    1617 @@gen_label53 DS    0H
                                            1618 * ***           rkq->rkq_refcnt++;
00000F76 58F0 2080               00000080   1619          L     15,128(0,2)
00000F7A A7FA 0001               00000001   1620          AHI   15,1
00000F7E 50F0 2080               00000080   1621          ST    15,128(0,2)
                                            1622 * ***           mtx_unlock(&rkq->rkq_lock);
00000F82 E320 D0A8 0024          000000A8   1623          STG   2,168(0,13)
00000F88 4110 D0A8               000000A8   1624          LA    1,168(0,13)
00000F8C E3F0 C0D0 0004          00000FF0   1625          LG    15,@lit_1428_39 ; mtx_unlock
00000F92                                    1626 @@gen_label54 DS    0H
                                                                                                                           Page   38 
  Active Usings: @REGION_1428_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000F92 05EF                               1627          BALR  14,15
00000F94                                    1628 @@gen_label55 DS    0H
                                            1629 * ***      return rkq;
00000F94 B904 00F2                          1630          LGR   15,2
                                            1631 * ***   }
                                            1632 * * **** Start of Epilogue
                                            1633          DCCEPIL
00000F98                                    1634+         ds 0h                                                          01-DCCEP
                                            1635+* Epilog
00000F98 D707 D088 D088 00000088 00000088   1636+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000F9E E3D0 D080 0004          00000080   1637+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000FA4 E3C0 D090 0004          00000090   1638+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000FAA E3B0 C018 0004          00000018   1639+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000FB0 E3C0 B010 0021          00000010   1640+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000FB6 E3E0 D008 0004          00000008   1641+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000FBC EB1C D020 0004          00000020   1642+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000FC2 078E                               1643+         bcr 8,14                if same dsab, just return              01-DCCEP
00000FC4 E3F0 D010 0024          00000010   1644+         stg 15,16(0,13)         save return code                       01-DCCEP
00000FCA E300 D018 0024          00000018   1645+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000FD0 E3F0 D090 0004          00000090   1646+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000FD6 E3F0 F018 0004          00000018   1647+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000FDC 47F0 F040               00000040   1648+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1649+* End of Epilog
                                            1650 * * **** End of Epilogue
00000FE0                                    1651          DS    0D
00000FE0 000000B0                           1652 @FRAMESIZE_1428 DC F'176'
00000FE4 00000000
00000FE8 0000000000000000                   1653 @lit_1428_38 DC AD(mtx_lock)
00000FF0 0000000000000000                   1654 @lit_1428_39 DC AD(mtx_unlock)
                                            1655          DROP  12
                                            1656 *
                                            1657 *   DSECT for automatic variables in "rd_kafka_q_keep"
                                            1658 *      (FUNCTION #1428)
                                            1659 *
00000000                00000000 000000A8   1660 @AUTO#rd_kafka_q_keep DSECT
00000000                                    1661          DS    XL168
                                            1662 *
00000FF8                00000000 00005F80   1663 @CODE    CSECT
                                            1664 *
                                            1665 *
                                            1666 *
                                            1667 * ....... start of rd_kafka_q_disable0
00000FF8                                    1668 @LNAME1432 DS  0H
00000FF8 00000013                           1669          DC    X'00000013'
00000FFC 99846D9281869281                   1670          DC    C'rd_kafka_q_disable0'
0000100F 00                                 1671          DC    X'00'
                                            1672 rd_kafka_q_disable0 DCCPRLG CINDEX=1432,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1432
                                            1673          macro
                                            1674          dccextrn &m
                                            1675          gblc    &$dccext(1000)
                                            1676          gbla    &$dccexti
                                                                                                                           Page   39 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1677          lcla    &i
                                            1678 &$dccext(&$dccexti+1) setc    '&m'
                                            1679 &i       seta    1
                                            1680 .loop    aif    (&i gt &$dccexti).around
                                            1681          aif    ('&$dccext(&i)' eq '&m').getout
                                            1682 &i       seta    &i+1
                                            1683          ago     .loop
                                            1684 .around  anop
                                            1685 &$dccexti seta &$dccexti+1
                                            1686          extrn  &m
                                            1687 .getout  anop
                                            1688          mend
00001010                                    1689+$eye0041    ds    0d                                                    02-DCCCA
00001010 C4C3C3                             1690+         dc cl3'DCC'                                                    02-DCCCA
00001013 01                                 1691+         dc xl1'01' format one                                          02-DCCCA
00001014 00000000                           1692+         dc a(0)                                                        02-DCCCA
00001018 0000000000001082                   1693+         dc ad(@PER_1432)                                               02-DCCCA
00001020 00000000000000B0                   1694+         dc ad(176)                                                     02-DCCCA
00001028 0000000000000000                   1695+         dc ad(0)                                                       02-DCCCA
00001030 0000000000001000                   1696+         dc ad(4096)                                                    02-DCCCA
00001038 20                                 1697+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001039 03                                 1698+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000103A 03                                 1699+         dc al1(3)                                                      02-DCCCA
0000103B 08                                 1700+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000103C 00                                 1701+         dc bl.8'00000000'                                              02-DCCCA
0000103D 000000                             1702+         dc al3(0)                                                      02-DCCCA
00001040 0000000000000FF8                   1703+         dc ad(@LNAME1432)                                              02-DCCCA
00001048                                    1704+         ds 0d                                                          02-DCCCA
00001048 0000000000001010                   1705+         dc ad($eye0041)                                                02-DCCCA
00001050 0000000000000000                   1706+         dc ad(0)                                                       02-DCCCA
00001058                                    1707+         ds    0d                                                       01-DCCPR
00001058                                    1708+rd_kafka_q_disable0 ds 0d                                               01-DCCPR
00001058                                    1709+@REGION_1432_1 ds 0h                                                    01-DCCPR
00001058 EBEC D008 0024          00000008   1710+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000105E E3E0 D088 0004          00000088   1711+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001064 E3C0 D090 0004          00000090   1712+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000106A B904 002E                          1713+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000106E E3B0 C018 0004          00000018   1714+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001074 A7EB 00B0               000000B0   1715+         aghi  14,176              increase by frame size               01-DCCPR
00001078 E3E0 C020 0021          00000020   1716+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000107E 4720 B020               00000020   1717+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001082                                    1718+@PER_1432 ds   0h                                                       01-DCCPR
00001082 EBDE 2080 0024          00000080   1719+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001088 E3C0 2090 0024          00000090   1720+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000108E B904 00D2                          1721+         lgr   13,2                set real frame pointer               01-DCCPR
00001092 B904 00CF                          1722+         lgr   12,15               set base reg                         01-DCCPR
                        00001058            1723+         using @REGION_1432_1,12                                        01-DCCPR
                                            1724 * ******* End of Prologue
                                            1725 * *
                                            1726 * ***           if (do_lock)
00001096 E320 1000 0004          00000000   1727          LG    2,0(0,1)    ; rkq
0000109C E330 100C 0012          0000000C   1728          LT    3,12(0,1)   ; do_lock
                                                                                                                           Page   40 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000010A2 4780 C060               000010B8   1729          BZ    @L256
                                            1730 * ***                   mtx_lock(&rkq->rkq_lock);
000010A6 E320 D0A8 0024          000000A8   1731          STG   2,168(0,13)
000010AC 4110 D0A8               000000A8   1732          LA    1,168(0,13)
000010B0 E3F0 C0D8 0004          00001130   1733          LG    15,@lit_1432_41 ; mtx_lock
000010B6                                    1734 @@gen_label57 DS    0H
000010B6 05EF                               1735          BALR  14,15
000010B8                                    1736 @@gen_label58 DS    0H
000010B8                                    1737 @L256    DS    0H
                                            1738 * ***           rkq->rkq_flags &= ~0x2;
000010B8 58F0 2084               00000084   1739          L     15,132(0,2)
000010BC A5F7 FFFD               0000FFFD   1740          NILL  15,65533
000010C0 50F0 2084               00000084   1741          ST    15,132(0,2)
                                            1742 * ***           if (do_lock)
000010C4 1233                               1743          LTR   3,3
000010C6 4780 C084               000010DC   1744          BZ    @ret_lab_1432
                                            1745 * ***                   mtx_unlock(&rkq->rkq_lock);
000010CA E320 D0A8 0024          000000A8   1746          STG   2,168(0,13)
000010D0 4110 D0A8               000000A8   1747          LA    1,168(0,13)
000010D4 E3F0 C0E0 0004          00001138   1748          LG    15,@lit_1432_42 ; mtx_unlock
000010DA                                    1749 @@gen_label60 DS    0H
000010DA 05EF                               1750          BALR  14,15
000010DC                                    1751 @@gen_label61 DS    0H
000010DC                                    1752 @L257    DS    0H
                                            1753 * ***   }
000010DC                                    1754 @ret_lab_1432 DS 0H
                                            1755 * * **** Start of Epilogue
                                            1756          DCCEPIL
000010DC                                    1757+         ds 0h                                                          01-DCCEP
                                            1758+* Epilog
000010DC D707 D088 D088 00000088 00000088   1759+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000010E2 E3D0 D080 0004          00000080   1760+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000010E8 E3C0 D090 0004          00000090   1761+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000010EE E3B0 C018 0004          00000018   1762+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000010F4 E3C0 B010 0021          00000010   1763+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000010FA E3E0 D008 0004          00000008   1764+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001100 EB1C D020 0004          00000020   1765+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001106 078E                               1766+         bcr 8,14                if same dsab, just return              01-DCCEP
00001108 E3F0 D010 0024          00000010   1767+         stg 15,16(0,13)         save return code                       01-DCCEP
0000110E E300 D018 0024          00000018   1768+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001114 E3F0 D090 0004          00000090   1769+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000111A E3F0 F018 0004          00000018   1770+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001120 47F0 F040               00000040   1771+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1772+* End of Epilog
                                            1773 * * **** End of Epilogue
00001128                                    1774          DS    0D
00001128 000000B0                           1775 @FRAMESIZE_1432 DC F'176'
0000112C 00000000
00001130 0000000000000000                   1776 @lit_1432_41 DC AD(mtx_lock)
00001138 0000000000000000                   1777 @lit_1432_42 DC AD(mtx_unlock)
                                            1778          DROP  12
                                            1779 *
                                                                                                                           Page   41 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1780 *   DSECT for automatic variables in "rd_kafka_q_disable0"
                                            1781 *      (FUNCTION #1432)
                                            1782 *
00000000                00000000 000000A8   1783 @AUTO#rd_kafka_q_disable0 DSECT
00000000                                    1784          DS    XL168
                                            1785 *
00001140                00000000 00005F80   1786 @CODE    CSECT
                                            1787 *
                                            1788 *
                                            1789 *
                                            1790 * ....... start of rd_kafka_q_destroy0
00001140                                    1791 @LNAME1435 DS  0H
00001140 00000013                           1792          DC    X'00000013'
00001144 99846D9281869281                   1793          DC    C'rd_kafka_q_destroy0'
00001157 00                                 1794          DC    X'00'
                                            1795 rd_kafka_q_destroy0 DCCPRLG CINDEX=1435,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1435
                                            1796          macro
                                            1797          dccextrn &m
                                            1798          gblc    &$dccext(1000)
                                            1799          gbla    &$dccexti
                                            1800          lcla    &i
                                            1801 &$dccext(&$dccexti+1) setc    '&m'
                                            1802 &i       seta    1
                                            1803 .loop    aif    (&i gt &$dccexti).around
                                            1804          aif    ('&$dccext(&i)' eq '&m').getout
                                            1805 &i       seta    &i+1
                                            1806          ago     .loop
                                            1807 .around  anop
                                            1808 &$dccexti seta &$dccexti+1
                                            1809          extrn  &m
                                            1810 .getout  anop
                                            1811          mend
00001158                                    1812+$eye0044    ds    0d                                                    02-DCCCA
00001158 C4C3C3                             1813+         dc cl3'DCC'                                                    02-DCCCA
0000115B 01                                 1814+         dc xl1'01' format one                                          02-DCCCA
0000115C 00000000                           1815+         dc a(0)                                                        02-DCCCA
00001160 00000000000011CA                   1816+         dc ad(@PER_1435)                                               02-DCCCA
00001168 00000000000000D8                   1817+         dc ad(216)                                                     02-DCCCA
00001170 0000000000000000                   1818+         dc ad(0)                                                       02-DCCCA
00001178 0000000000001000                   1819+         dc ad(4096)                                                    02-DCCCA
00001180 20                                 1820+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001181 03                                 1821+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001182 03                                 1822+         dc al1(3)                                                      02-DCCCA
00001183 08                                 1823+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001184 00                                 1824+         dc bl.8'00000000'                                              02-DCCCA
00001185 000000                             1825+         dc al3(0)                                                      02-DCCCA
00001188 0000000000001140                   1826+         dc ad(@LNAME1435)                                              02-DCCCA
00001190                                    1827+         ds 0d                                                          02-DCCCA
00001190 0000000000001158                   1828+         dc ad($eye0044)                                                02-DCCCA
00001198 0000000000000000                   1829+         dc ad(0)                                                       02-DCCCA
000011A0                                    1830+         ds    0d                                                       01-DCCPR
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000011A0                                    1831+rd_kafka_q_destroy0 ds 0d                                               01-DCCPR
000011A0                                    1832+@REGION_1435_1 ds 0h                                                    01-DCCPR
000011A0 EBEC D008 0024          00000008   1833+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000011A6 E3E0 D088 0004          00000088   1834+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000011AC E3C0 D090 0004          00000090   1835+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000011B2 B904 002E                          1836+         lgr   2,14                copy addr of our savearea            01-DCCPR
000011B6 E3B0 C018 0004          00000018   1837+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000011BC A7EB 00D8               000000D8   1838+         aghi  14,216              increase by frame size               01-DCCPR
000011C0 E3E0 C020 0021          00000020   1839+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000011C6 4720 B020               00000020   1840+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000011CA                                    1841+@PER_1435 ds   0h                                                       01-DCCPR
000011CA EBDE 2080 0024          00000080   1842+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000011D0 E3C0 2090 0024          00000090   1843+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000011D6 B904 00D2                          1844+         lgr   13,2                set real frame pointer               01-DCCPR
000011DA B904 00CF                          1845+         lgr   12,15               set base reg                         01-DCCPR
                        000011A0            1846+         using @REGION_1435_1,12                                        01-DCCPR
                                            1847 * ******* End of Prologue
                                            1848 * *
                                            1849 * ***           int do_delete = 0;
000011DE E320 1000 0004          00000000   1850          LG    2,0(0,1)    ; rkq
                                            1851 * ***
                                            1852 * ***           if (disable) {
000011E4 E3F0 100C 0012          0000000C   1853          LT    15,12(0,1)  ; disable
000011EA 4780 C07E               0000121E   1854          BZ    @L258
                                            1855 * ***
                                            1856 * ***
                                            1857 * ***
                                            1858 * ***
                                            1859 * ***                   rd_kafka_q_disable0(rkq, 1);
000011EE E320 D0B0 0024          000000B0   1860          STG   2,176(0,13)
000011F4 E548 D0B8 0001          000000B8   1861          MVGHI 184(13),1
000011FA 4110 D0B0               000000B0   1862          LA    1,176(0,13)
000011FE E3F0 C170 0004          00001310   1863          LG    15,@lit_1435_45 ; rd_kafka_q_disable0
00001204                                    1864 @@gen_label63 DS    0H
00001204 05EF                               1865          BALR  14,15
00001206                                    1866 @@gen_label64 DS    0H
                                            1867 * ***                   rd_kafka_q_purge0(rkq, 1);
00001206 E320 D0B0 0024          000000B0   1868          STG   2,176(0,13)
0000120C E548 D0B8 0001          000000B8   1869          MVGHI 184(13),1
00001212 4110 D0B0               000000B0   1870          LA    1,176(0,13)
00001216 E3F0 C178 0004          00001318   1871          LG    15,@lit_1435_46 ; rd_kafka_q_purge0
0000121C                                    1872 @@gen_label65 DS    0H
0000121C 05EF                               1873          BALR  14,15
0000121E                                    1874 @@gen_label66 DS    0H
                                            1875 * ***           }
0000121E                                    1876 @L258    DS    0H
                                            1877 * ***
                                            1878 * ***           mtx_lock(&rkq->rkq_lock);
0000121E E320 D0B0 0024          000000B0   1879          STG   2,176(0,13)
00001224 4110 D0B0               000000B0   1880          LA    1,176(0,13)
00001228 E3F0 C180 0004          00001320   1881          LG    15,@lit_1435_47 ; mtx_lock
0000122E                                    1882 @@gen_label67 DS    0H
                                                                                                                           Page   43 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000122E 05EF                               1883          BALR  14,15
00001230                                    1884 @@gen_label68 DS    0H
                                            1885 * ***           do { if (((!(rkq->rkq_refcnt > 0)))) rd_kafka_crash("C\
                                            1886 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h",211, __FUNCTION__, ((\
                                            1887 * (void *)0)), "assert: " "rkq->rkq_refcnt > 0"); } while (0);
00001230                                    1888 @L259    DS    0H
00001230 E55C 2080 0000          00000080   1889          CHSI  128(2),0
00001236 4720 C0DC               0000127C   1890          BH    @L262
0000123A E3F0 C198 0004          00001338   1891          LG    15,@lit_1435_48
00001240 4110 F048               00000048   1892          LA    1,72(0,15)
00001244 E310 D0B0 0024          000000B0   1893          STG   1,176(0,13)
0000124A E548 D0B8 00D3          000000B8   1894          MVGHI 184(13),211
00001250 E310 C190 0004          00001330   1895          LG    1,@lit_1435_49
00001256 4110 1072               00000072   1896          LA    1,114(0,1)
0000125A E310 D0C0 0024          000000C0   1897          STG   1,192(0,13)
00001260 D707 D0C8 D0C8 000000C8 000000C8   1898          XC    200(8,13),200(13)
00001266 41F0 F074               00000074   1899          LA    15,116(0,15)
0000126A E3F0 D0D0 0024          000000D0   1900          STG   15,208(0,13)
00001270 4110 D0B0               000000B0   1901          LA    1,176(0,13)
00001274 E3F0 C188 0004          00001328   1902          LG    15,@lit_1435_50 ; rd_kafka_crash
0000127A                                    1903 @@gen_label70 DS    0H
0000127A 05EF                               1904          BALR  14,15
0000127C                                    1905 @@gen_label71 DS    0H
0000127C                                    1906 @L262    DS    0H
                                            1907 * ***           do_delete = !--rkq->rkq_refcnt;
0000127C 58F0 2080               00000080   1908          L     15,128(0,2)
00001280 A7FA FFFF               0000FFFF   1909          AHI   15,-1
00001284 50F0 2080               00000080   1910          ST    15,128(0,2)
00001288 103F                               1911          LPR   3,15
0000128A A73A FFFF               0000FFFF   1912          AHI   3,-1
0000128E 8830 001F               0000001F   1913          SRL   3,31(0)
                                            1914 * ***           mtx_unlock(&rkq->rkq_lock);
00001292 E320 D0B0 0024          000000B0   1915          STG   2,176(0,13)
00001298 4110 D0B0               000000B0   1916          LA    1,176(0,13)
0000129C E3F0 C1A0 0004          00001340   1917          LG    15,@lit_1435_51 ; mtx_unlock
000012A2                                    1918 @@gen_label72 DS    0H
000012A2 05EF                               1919          BALR  14,15
000012A4                                    1920 @@gen_label73 DS    0H
                                            1921 * ***
                                            1922 * ***           if (((do_delete)))
000012A4 1233                               1923          LTR   3,3
000012A6 4780 C11C               000012BC   1924          BZ    @L263
                                            1925 * ***                   rd_kafka_q_destroy_final(rkq);
000012AA E320 D0B0 0024          000000B0   1926          STG   2,176(0,13)
000012B0 4110 D0B0               000000B0   1927          LA    1,176(0,13)
000012B4 E3F0 C1A8 0004          00001348   1928          LG    15,@lit_1435_52 ; rd_kafka_q_destroy_final
000012BA                                    1929 @@gen_label75 DS    0H
000012BA 05EF                               1930          BALR  14,15
000012BC                                    1931 @@gen_label76 DS    0H
000012BC                                    1932 @L263    DS    0H
                                            1933 * ***   }
000012BC                                    1934 @ret_lab_1435 DS 0H
                                                                                                                           Page   44 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1935 * * **** Start of Epilogue
                                            1936          DCCEPIL
000012BC                                    1937+         ds 0h                                                          01-DCCEP
                                            1938+* Epilog
000012BC D707 D088 D088 00000088 00000088   1939+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000012C2 E3D0 D080 0004          00000080   1940+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000012C8 E3C0 D090 0004          00000090   1941+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000012CE E3B0 C018 0004          00000018   1942+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000012D4 E3C0 B010 0021          00000010   1943+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000012DA E3E0 D008 0004          00000008   1944+         lg  14,8(0,13)          load up return address                 01-DCCEP
000012E0 EB1C D020 0004          00000020   1945+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000012E6 078E                               1946+         bcr 8,14                if same dsab, just return              01-DCCEP
000012E8 E3F0 D010 0024          00000010   1947+         stg 15,16(0,13)         save return code                       01-DCCEP
000012EE E300 D018 0024          00000018   1948+         stg 0,24(0,13)          save more return code                  01-DCCEP
000012F4 E3F0 D090 0004          00000090   1949+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000012FA E3F0 F018 0004          00000018   1950+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001300 47F0 F040               00000040   1951+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1952+* End of Epilog
                                            1953 * * **** End of Epilogue
00001308                                    1954          DS    0D
00001308 000000D8                           1955 @FRAMESIZE_1435 DC F'216'
0000130C 00000000
00001310 0000000000001058                   1956 @lit_1435_45 DC AD(rd_kafka_q_disable0)
00001318 0000000000000000                   1957 @lit_1435_46 DC AD(rd_kafka_q_purge0)
00001320 0000000000000000                   1958 @lit_1435_47 DC AD(mtx_lock)
00001328 0000000000000000                   1959 @lit_1435_50 DC AD(rd_kafka_crash)
00001330 0000000000005F80                   1960 @lit_1435_49 DC AD(@DATA)
00001338 000000000000635E                   1961 @lit_1435_48 DC AD(@strings@)
00001340 0000000000000000                   1962 @lit_1435_51 DC AD(mtx_unlock)
00001348 0000000000000000                   1963 @lit_1435_52 DC AD(rd_kafka_q_destroy_final)
                                            1964          DROP  12
                                            1965 *
                                            1966 *   DSECT for automatic variables in "rd_kafka_q_destroy0"
                                            1967 *      (FUNCTION #1435)
                                            1968 *
00000000                00000000 000000AC   1969 @AUTO#rd_kafka_q_destroy0 DSECT
00000000                                    1970          DS    XL168
000000A8                                    1971 rd_kafka_q_destroy0#do_delete#0 DS 1F ; do_delete
                                            1972 *
00001350                00000000 00005F80   1973 @CODE    CSECT
                                            1974 *
                                            1975 *
                                            1976 *
                                            1977 * ....... start of rd_kafka_q_destroy_owner
00001350                                    1978 @LNAME1436 DS  0H
00001350 00000018                           1979          DC    X'00000018'
00001354 99846D9281869281                   1980          DC    C'rd_kafka_q_destroy_owner'
0000136C 00                                 1981          DC    X'00'
                                            1982 rd_kafka_q_destroy_owner DCCPRLG CINDEX=1436,BASER=12,FRAME=184,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1436
                                            1983          macro
                                            1984          dccextrn &m
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1985          gblc    &$dccext(1000)
                                            1986          gbla    &$dccexti
                                            1987          lcla    &i
                                            1988 &$dccext(&$dccexti+1) setc    '&m'
                                            1989 &i       seta    1
                                            1990 .loop    aif    (&i gt &$dccexti).around
                                            1991          aif    ('&$dccext(&i)' eq '&m').getout
                                            1992 &i       seta    &i+1
                                            1993          ago     .loop
                                            1994 .around  anop
                                            1995 &$dccexti seta &$dccexti+1
                                            1996          extrn  &m
                                            1997 .getout  anop
                                            1998          mend
00001370                                    1999+$eye0047    ds    0d                                                    02-DCCCA
00001370 C4C3C3                             2000+         dc cl3'DCC'                                                    02-DCCCA
00001373 01                                 2001+         dc xl1'01' format one                                          02-DCCCA
00001374 00000000                           2002+         dc a(0)                                                        02-DCCCA
00001378 00000000000013E2                   2003+         dc ad(@PER_1436)                                               02-DCCCA
00001380 00000000000000B8                   2004+         dc ad(184)                                                     02-DCCCA
00001388 0000000000000000                   2005+         dc ad(0)                                                       02-DCCCA
00001390 0000000000001000                   2006+         dc ad(4096)                                                    02-DCCCA
00001398 20                                 2007+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001399 03                                 2008+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000139A 03                                 2009+         dc al1(3)                                                      02-DCCCA
0000139B 08                                 2010+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000139C 00                                 2011+         dc bl.8'00000000'                                              02-DCCCA
0000139D 000000                             2012+         dc al3(0)                                                      02-DCCCA
000013A0 0000000000001350                   2013+         dc ad(@LNAME1436)                                              02-DCCCA
000013A8                                    2014+         ds 0d                                                          02-DCCCA
000013A8 0000000000001370                   2015+         dc ad($eye0047)                                                02-DCCCA
000013B0 0000000000000000                   2016+         dc ad(0)                                                       02-DCCCA
000013B8                                    2017+         ds    0d                                                       01-DCCPR
000013B8                                    2018+rd_kafka_q_destroy_owner ds 0d                                          01-DCCPR
000013B8                                    2019+@REGION_1436_1 ds 0h                                                    01-DCCPR
000013B8 EBEC D008 0024          00000008   2020+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000013BE E3E0 D088 0004          00000088   2021+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000013C4 E3C0 D090 0004          00000090   2022+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000013CA B904 002E                          2023+         lgr   2,14                copy addr of our savearea            01-DCCPR
000013CE E3B0 C018 0004          00000018   2024+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000013D4 A7EB 00B8               000000B8   2025+         aghi  14,184              increase by frame size               01-DCCPR
000013D8 E3E0 C020 0021          00000020   2026+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000013DE 4720 B020               00000020   2027+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000013E2                                    2028+@PER_1436 ds   0h                                                       01-DCCPR
000013E2 EBDE 2080 0024          00000080   2029+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000013E8 E3C0 2090 0024          00000090   2030+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000013EE B904 00D2                          2031+         lgr   13,2                set real frame pointer               01-DCCPR
000013F2 B904 00CF                          2032+         lgr   12,15               set base reg                         01-DCCPR
                        000013B8            2033+         using @REGION_1436_1,12                                        01-DCCPR
                                            2034 * ******* End of Prologue
                                            2035 * *
                                            2036 * ***           rd_kafka_q_destroy0(rkq, 1);
                                                                                                                           Page   46 
  Active Usings: @REGION_1436_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000013F6 E3F0 1000 0004          00000000   2037          LG    15,0(0,1)   ; rkq
000013FC E3F0 D0A8 0024          000000A8   2038          STG   15,168(0,13)
00001402 E548 D0B0 0001          000000B0   2039          MVGHI 176(13),1
00001408 4110 D0A8               000000A8   2040          LA    1,168(0,13)
0000140C E3F0 C0B0 0004          00001468   2041          LG    15,@lit_1436_54 ; rd_kafka_q_destroy0
00001412                                    2042 @@gen_label77 DS    0H
00001412 05EF                               2043          BALR  14,15
00001414                                    2044 @@gen_label78 DS    0H
                                            2045 * ***   }
00001414                                    2046 @ret_lab_1436 DS 0H
                                            2047 * * **** Start of Epilogue
                                            2048          DCCEPIL
00001414                                    2049+         ds 0h                                                          01-DCCEP
                                            2050+* Epilog
00001414 D707 D088 D088 00000088 00000088   2051+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000141A E3D0 D080 0004          00000080   2052+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001420 E3C0 D090 0004          00000090   2053+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001426 E3B0 C018 0004          00000018   2054+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000142C E3C0 B010 0021          00000010   2055+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001432 E3E0 D008 0004          00000008   2056+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001438 EB1C D020 0004          00000020   2057+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000143E 078E                               2058+         bcr 8,14                if same dsab, just return              01-DCCEP
00001440 E3F0 D010 0024          00000010   2059+         stg 15,16(0,13)         save return code                       01-DCCEP
00001446 E300 D018 0024          00000018   2060+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000144C E3F0 D090 0004          00000090   2061+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001452 E3F0 F018 0004          00000018   2062+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001458 47F0 F040               00000040   2063+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2064+* End of Epilog
                                            2065 * * **** End of Epilogue
00001460                                    2066          DS    0D
00001460 000000B8                           2067 @FRAMESIZE_1436 DC F'184'
00001464 00000000
00001468 00000000000011A0                   2068 @lit_1436_54 DC AD(rd_kafka_q_destroy0)
                                            2069          DROP  12
                                            2070 *
                                            2071 *   DSECT for automatic variables in "rd_kafka_q_destroy_owner"
                                            2072 *      (FUNCTION #1436)
                                            2073 *
00000000                00000000 000000A8   2074 @AUTO#rd_kafka_q_destroy_owner DSECT
00000000                                    2075          DS    XL168
                                            2076 *
00001470                00000000 00005F80   2077 @CODE    CSECT
                                            2078 *
                                            2079 *
                                            2080 *
                                            2081 * ....... start of rd_kafka_q_fwd_get
00001470                                    2082 @LNAME1439 DS  0H
00001470 00000012                           2083          DC    X'00000012'
00001474 99846D9281869281                   2084          DC    C'rd_kafka_q_fwd_get'
00001486 00                                 2085          DC    X'00'
                                            2086 rd_kafka_q_fwd_get DCCPRLG CINDEX=1439,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1439
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2087          macro
                                            2088          dccextrn &m
                                            2089          gblc    &$dccext(1000)
                                            2090          gbla    &$dccexti
                                            2091          lcla    &i
                                            2092 &$dccext(&$dccexti+1) setc    '&m'
                                            2093 &i       seta    1
                                            2094 .loop    aif    (&i gt &$dccexti).around
                                            2095          aif    ('&$dccext(&i)' eq '&m').getout
                                            2096 &i       seta    &i+1
                                            2097          ago     .loop
                                            2098 .around  anop
                                            2099 &$dccexti seta &$dccexti+1
                                            2100          extrn  &m
                                            2101 .getout  anop
                                            2102          mend
00001488                                    2103+$eye0050    ds    0d                                                    02-DCCCA
00001488 C4C3C3                             2104+         dc cl3'DCC'                                                    02-DCCCA
0000148B 01                                 2105+         dc xl1'01' format one                                          02-DCCCA
0000148C 00000000                           2106+         dc a(0)                                                        02-DCCCA
00001490 00000000000014FA                   2107+         dc ad(@PER_1439)                                               02-DCCCA
00001498 00000000000000B8                   2108+         dc ad(184)                                                     02-DCCCA
000014A0 0000000000000000                   2109+         dc ad(0)                                                       02-DCCCA
000014A8 0000000000001000                   2110+         dc ad(4096)                                                    02-DCCCA
000014B0 20                                 2111+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000014B1 03                                 2112+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000014B2 03                                 2113+         dc al1(3)                                                      02-DCCCA
000014B3 08                                 2114+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000014B4 00                                 2115+         dc bl.8'00000000'                                              02-DCCCA
000014B5 000000                             2116+         dc al3(0)                                                      02-DCCCA
000014B8 0000000000001470                   2117+         dc ad(@LNAME1439)                                              02-DCCCA
000014C0                                    2118+         ds 0d                                                          02-DCCCA
000014C0 0000000000001488                   2119+         dc ad($eye0050)                                                02-DCCCA
000014C8 0000000000000000                   2120+         dc ad(0)                                                       02-DCCCA
000014D0                                    2121+         ds    0d                                                       01-DCCPR
000014D0                                    2122+rd_kafka_q_fwd_get ds 0d                                                01-DCCPR
000014D0                                    2123+@REGION_1439_1 ds 0h                                                    01-DCCPR
000014D0 EBEC D008 0024          00000008   2124+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000014D6 E3E0 D088 0004          00000088   2125+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000014DC E3C0 D090 0004          00000090   2126+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000014E2 B904 002E                          2127+         lgr   2,14                copy addr of our savearea            01-DCCPR
000014E6 E3B0 C018 0004          00000018   2128+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000014EC A7EB 00B8               000000B8   2129+         aghi  14,184              increase by frame size               01-DCCPR
000014F0 E3E0 C020 0021          00000020   2130+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000014F6 4720 B020               00000020   2131+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000014FA                                    2132+@PER_1439 ds   0h                                                       01-DCCPR
000014FA EBDE 2080 0024          00000080   2133+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001500 E3C0 2090 0024          00000090   2134+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001506 B904 00D2                          2135+         lgr   13,2                set real frame pointer               01-DCCPR
0000150A B904 00CF                          2136+         lgr   12,15               set base reg                         01-DCCPR
                        000014D0            2137+         using @REGION_1439_1,12                                        01-DCCPR
                                            2138 * ******* End of Prologue
                                                                                                                           Page   48 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2139 * *
0000150E E320 1000 0004          00000000   2140          LG    2,0(0,1)    ; rkq
                                            2141 * ***           rd_kafka_q_t *fwdq;
                                            2142 * ***           if (do_lock)
00001514 E340 100C 0012          0000000C   2143          LT    4,12(0,1)   ; do_lock
0000151A 4780 C060               00001530   2144          BZ    @L270
                                            2145 * ***                   mtx_lock(&rkq->rkq_lock);
0000151E E320 D0B0 0024          000000B0   2146          STG   2,176(0,13)
00001524 4110 D0B0               000000B0   2147          LA    1,176(0,13)
00001528 E3F0 C0F0 0004          000015C0   2148          LG    15,@lit_1439_56 ; mtx_lock
0000152E                                    2149 @@gen_label80 DS    0H
0000152E 05EF                               2150          BALR  14,15
00001530                                    2151 @@gen_label81 DS    0H
00001530                                    2152 @L270    DS    0H
                                            2153 * ***
                                            2154 * ***           if ((fwdq = rkq->rkq_fwdq))
00001530 E330 2058 0004          00000058   2155          LG    3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
00001536 B902 00F3                          2156          LTGR  15,3
0000153A 4780 C080               00001550   2157          BZ    @L271
                                            2158 * ***                   rd_kafka_q_keep(fwdq);
0000153E E330 D0B0 0024          000000B0   2159          STG   3,176(0,13)
00001544 4110 D0B0               000000B0   2160          LA    1,176(0,13)
00001548 E3F0 C0F8 0004          000015C8   2161          LG    15,@lit_1439_57 ; rd_kafka_q_keep
0000154E                                    2162 @@gen_label83 DS    0H
0000154E 05EF                               2163          BALR  14,15
00001550                                    2164 @@gen_label84 DS    0H
00001550                                    2165 @L271    DS    0H
                                            2166 * ***
                                            2167 * ***           if (do_lock)
00001550 1244                               2168          LTR   4,4
00001552 4780 C098               00001568   2169          BZ    @L272
                                            2170 * ***                   mtx_unlock(&rkq->rkq_lock);
00001556 E320 D0B0 0024          000000B0   2171          STG   2,176(0,13)
0000155C 4110 D0B0               000000B0   2172          LA    1,176(0,13)
00001560 E3F0 C100 0004          000015D0   2173          LG    15,@lit_1439_58 ; mtx_unlock
00001566                                    2174 @@gen_label86 DS    0H
00001566 05EF                               2175          BALR  14,15
00001568                                    2176 @@gen_label87 DS    0H
00001568                                    2177 @L272    DS    0H
                                            2178 * ***
                                            2179 * ***           return fwdq;
00001568 B904 00F3                          2180          LGR   15,3
                                            2181 * ***   }
                                            2182 * * **** Start of Epilogue
                                            2183          DCCEPIL
0000156C                                    2184+         ds 0h                                                          01-DCCEP
                                            2185+* Epilog
0000156C D707 D088 D088 00000088 00000088   2186+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001572 E3D0 D080 0004          00000080   2187+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001578 E3C0 D090 0004          00000090   2188+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000157E E3B0 C018 0004          00000018   2189+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001584 E3C0 B010 0021          00000010   2190+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   49 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000158A E3E0 D008 0004          00000008   2191+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001590 EB1C D020 0004          00000020   2192+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001596 078E                               2193+         bcr 8,14                if same dsab, just return              01-DCCEP
00001598 E3F0 D010 0024          00000010   2194+         stg 15,16(0,13)         save return code                       01-DCCEP
0000159E E300 D018 0024          00000018   2195+         stg 0,24(0,13)          save more return code                  01-DCCEP
000015A4 E3F0 D090 0004          00000090   2196+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000015AA E3F0 F018 0004          00000018   2197+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000015B0 47F0 F040               00000040   2198+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2199+* End of Epilog
                                            2200 * * **** End of Epilogue
000015B8                                    2201          DS    0D
000015B8 000000B8                           2202 @FRAMESIZE_1439 DC F'184'
000015BC 00000000
000015C0 0000000000000000                   2203 @lit_1439_56 DC AD(mtx_lock)
000015C8 0000000000000F20                   2204 @lit_1439_57 DC AD(rd_kafka_q_keep)
000015D0 0000000000000000                   2205 @lit_1439_58 DC AD(mtx_unlock)
                                            2206          DROP  12
                                            2207 *
                                            2208 *   DSECT for automatic variables in "rd_kafka_q_fwd_get"
                                            2209 *      (FUNCTION #1439)
                                            2210 *
00000000                00000000 000000A8   2211 @AUTO#rd_kafka_q_fwd_get DSECT
00000000                                    2212          DS    XL168
                                            2213 *
000015D8                00000000 00005F80   2214 @CODE    CSECT
                                            2215 *
                                            2216 *
                                            2217 *
                                            2218 * ....... start of rd_kafka_q_io_event
000015D8                                    2219 @LNAME1441 DS  0H
000015D8 00000013                           2220          DC    X'00000013'
000015DC 99846D9281869281                   2221          DC    C'rd_kafka_q_io_event'
000015EF 00                                 2222          DC    X'00'
                                            2223 rd_kafka_q_io_event DCCPRLG CINDEX=1441,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1441
                                            2224          macro
                                            2225          dccextrn &m
                                            2226          gblc    &$dccext(1000)
                                            2227          gbla    &$dccexti
                                            2228          lcla    &i
                                            2229 &$dccext(&$dccexti+1) setc    '&m'
                                            2230 &i       seta    1
                                            2231 .loop    aif    (&i gt &$dccexti).around
                                            2232          aif    ('&$dccext(&i)' eq '&m').getout
                                            2233 &i       seta    &i+1
                                            2234          ago     .loop
                                            2235 .around  anop
                                            2236 &$dccexti seta &$dccexti+1
                                            2237          extrn  &m
                                            2238 .getout  anop
                                            2239          mend
000015F0                                    2240+$eye0053    ds    0d                                                    02-DCCCA
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000015F0 C4C3C3                             2241+         dc cl3'DCC'                                                    02-DCCCA
000015F3 01                                 2242+         dc xl1'01' format one                                          02-DCCCA
000015F4 00000000                           2243+         dc a(0)                                                        02-DCCCA
000015F8 0000000000001662                   2244+         dc ad(@PER_1441)                                               02-DCCCA
00001600 00000000000000C0                   2245+         dc ad(192)                                                     02-DCCCA
00001608 0000000000000000                   2246+         dc ad(0)                                                       02-DCCCA
00001610 0000000000001000                   2247+         dc ad(4096)                                                    02-DCCCA
00001618 20                                 2248+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001619 03                                 2249+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000161A 03                                 2250+         dc al1(3)                                                      02-DCCCA
0000161B 08                                 2251+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000161C 00                                 2252+         dc bl.8'00000000'                                              02-DCCCA
0000161D 000000                             2253+         dc al3(0)                                                      02-DCCCA
00001620 00000000000015D8                   2254+         dc ad(@LNAME1441)                                              02-DCCCA
00001628                                    2255+         ds 0d                                                          02-DCCCA
00001628 00000000000015F0                   2256+         dc ad($eye0053)                                                02-DCCCA
00001630 0000000000000000                   2257+         dc ad(0)                                                       02-DCCCA
00001638                                    2258+         ds    0d                                                       01-DCCPR
00001638                                    2259+rd_kafka_q_io_event ds 0d                                               01-DCCPR
00001638                                    2260+@REGION_1441_1 ds 0h                                                    01-DCCPR
00001638 EBEC D008 0024          00000008   2261+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000163E E3E0 D088 0004          00000088   2262+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001644 E3C0 D090 0004          00000090   2263+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000164A B904 002E                          2264+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000164E E3B0 C018 0004          00000018   2265+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001654 A7EB 00C0               000000C0   2266+         aghi  14,192              increase by frame size               01-DCCPR
00001658 E3E0 C020 0021          00000020   2267+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000165E 4720 B020               00000020   2268+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001662                                    2269+@PER_1441 ds   0h                                                       01-DCCPR
00001662 EBDE 2080 0024          00000080   2270+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001668 E3C0 2090 0024          00000090   2271+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000166E B904 00D2                          2272+         lgr   13,2                set real frame pointer               01-DCCPR
00001672 B904 00CF                          2273+         lgr   12,15               set base reg                         01-DCCPR
                        00001638            2274+         using @REGION_1441_1,12                                        01-DCCPR
                                            2275 * ******* End of Prologue
                                            2276 * *
00001676 E3F0 1000 0004          00000000   2277          LG    15,0(0,1)   ; rkq
                                            2278 * ***
                                            2279 * ***      if (((!rkq->rkq_qio)))
0000167C E310 F090 0002          00000090   2280          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001682 4780 C102               0000173A   2281          BZ    @ret_lab_1441
                                            2282 * ***         return;
00001686                                    2283 @L275    DS    0H
                                            2284 * ***
                                            2285 * ***           if (rkq->rkq_qio->event_cb) {
00001686 E310 F090 0004          00000090   2286          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000168C E310 1020 0002          00000020   2287          LTG   1,32(0,1)   ; offset of event_cb in rd_kafka_q_io
00001692 4780 C0A8               000016E0   2288          BZ    @L276
                                            2289 * ***                   rkq->rkq_qio->event_cb(rkq->rkq_rk,
                                            2290 * ***                                          rkq->rkq_qio->event_cb_\
                                            2291 * opaque);
00001696 E310 F088 0004          00000088   2292          LG    1,136(0,15)
                                                                                                                           Page   51 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000169C E310 D0A8 0024          000000A8   2293          STG   1,168(0,13)
000016A2 E310 F090 0004          00000090   2294          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000016A8 E310 1028 0004          00000028   2295          LG    1,40(0,1)
000016AE E310 D0B0 0024          000000B0   2296          STG   1,176(0,13)
000016B4 E3F0 F090 0004          00000090   2297          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000016BA E3F0 F020 0004          00000020   2298          LG    15,32(0,15) ; offset of event_cb in rd_kafka_q_io
000016C0 4110 D0A8               000000A8   2299          LA    1,168(0,13)
000016C4                                    2300 @@gen_label90 DS    0H
000016C4 05EF                               2301          BALR  14,15
000016C6                                    2302 @@gen_label91 DS    0H
                                            2303 * ***                   return;
000016C6 47F0 C102               0000173A   2304          B     @ret_lab_1441
000016D0                                    2305          DS    0D
000016D0 000000C0                           2306 @FRAMESIZE_1441 DC F'192'
000016D4 00000000
000016D8 0000000000000000                   2307 @lit_1441_60 DC AD(write)
                                            2308 * ***           }
000016E0                                    2309 @L276    DS    0H
                                            2310 * ***
                                            2311 * ***
                                            2312 * ***
                                            2313 * ***
                                            2314 * ***
                                            2315 * ***
                                            2316 * ***           if (rkq->rkq_qio->sent)
000016E0 E310 F090 0004          00000090   2317          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000016E6 9500 1018      00000018 00000000   2318          CLI   24(1),0
000016EA 4770 C102               0000173A   2319          BNE   @ret_lab_1441
                                            2320 * ***                   return;
000016EE                                    2321 @L277    DS    0H
                                            2322 * ***
                                            2323 * ***           rkq->rkq_qio->sent = 1;
000016EE E310 F090 0004          00000090   2324          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000016F4 9201 1018      00000018 00000001   2325          MVI   24(1),1     ; offset of sent in rd_kafka_q_io
                                            2326 * ***
                                            2327 * ***
                                            2328 * ***
                                            2329 * ***           if (write(rkq->rkq_qio->fd,rkq->rkq_qio->payload,(int)\
                                            2330 * rkq->rkq_qio->size) == -1)
000016F8 E310 F090 0004          00000090   2331          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000016FE E310 1000 0014          00000000   2332          LGF   1,0(0,1)
00001704 E310 D0A8 0024          000000A8   2333          STG   1,168(0,13)
0000170A E310 F090 0004          00000090   2334          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001710 E310 1008 0004          00000008   2335          LG    1,8(0,1)
00001716 E310 D0B0 0024          000000B0   2336          STG   1,176(0,13)
0000171C E3F0 F090 0004          00000090   2337          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001722 E3F0 F014 0014          00000014   2338          LGF   15,20(0,15)
00001728 E3F0 D0B8 0024          000000B8   2339          STG   15,184(0,13)
0000172E 4110 D0A8               000000A8   2340          LA    1,168(0,13)
00001732 E3F0 C0A0 0004          000016D8   2341          LG    15,@lit_1441_60 ; write
00001738                                    2342 @@gen_label93 DS    0H
00001738 05EF                               2343          BALR  14,15
                                                                                                                           Page   52 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000173A                                    2344 @@gen_label94 DS    0H
                                            2345 * ***
                                            2346 * ***                   ;
0000173A                                    2347 @L278    DS    0H
                                            2348 * ***   }
0000173A                                    2349 @ret_lab_1441 DS 0H
                                            2350 * * **** Start of Epilogue
                                            2351          DCCEPIL
0000173A                                    2352+         ds 0h                                                          01-DCCEP
                                            2353+* Epilog
0000173A D707 D088 D088 00000088 00000088   2354+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001740 E3D0 D080 0004          00000080   2355+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001746 E3C0 D090 0004          00000090   2356+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000174C E3B0 C018 0004          00000018   2357+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001752 E3C0 B010 0021          00000010   2358+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001758 E3E0 D008 0004          00000008   2359+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000175E EB1C D020 0004          00000020   2360+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001764 078E                               2361+         bcr 8,14                if same dsab, just return              01-DCCEP
00001766 E3F0 D010 0024          00000010   2362+         stg 15,16(0,13)         save return code                       01-DCCEP
0000176C E300 D018 0024          00000018   2363+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001772 E3F0 D090 0004          00000090   2364+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001778 E3F0 F018 0004          00000018   2365+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000177E 47F0 F040               00000040   2366+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2367+* End of Epilog
                                            2368 * * **** End of Epilogue
                                            2369          DROP  12
                                            2370 *
                                            2371 *   DSECT for automatic variables in "rd_kafka_q_io_event"
                                            2372 *      (FUNCTION #1441)
                                            2373 *
00000000                00000000 000000A8   2374 @AUTO#rd_kafka_q_io_event DSECT
00000000                                    2375          DS    XL168
                                            2376 *
00001782                00000000 00005F80   2377 @CODE    CSECT
                                            2378 *
                                            2379 *
                                            2380 *
                                            2381 * ....... start of rd_kafka_op_cmp_prio
00001782                                    2382 @LNAME1442 DS  0H
00001782 00000014                           2383          DC    X'00000014'
00001786 99846D9281869281                   2384          DC    C'rd_kafka_op_cmp_prio'
0000179A 00                                 2385          DC    X'00'
                                            2386 rd_kafka_op_cmp_prio DCCPRLG CINDEX=1442,BASER=12,FRAME=176,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1442
                                            2387          macro
                                            2388          dccextrn &m
                                            2389          gblc    &$dccext(1000)
                                            2390          gbla    &$dccexti
                                            2391          lcla    &i
                                            2392 &$dccext(&$dccexti+1) setc    '&m'
                                            2393 &i       seta    1
                                            2394 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2395          aif    ('&$dccext(&i)' eq '&m').getout
                                            2396 &i       seta    &i+1
                                            2397          ago     .loop
                                            2398 .around  anop
                                            2399 &$dccexti seta &$dccexti+1
                                            2400          extrn  &m
                                            2401 .getout  anop
                                            2402          mend
000017A0                                    2403+$eye0056    ds    0d                                                    02-DCCCA
000017A0 C4C3C3                             2404+         dc cl3'DCC'                                                    02-DCCCA
000017A3 01                                 2405+         dc xl1'01' format one                                          02-DCCCA
000017A4 00000000                           2406+         dc a(0)                                                        02-DCCCA
000017A8 0000000000000000                   2407+         dc ad(0)                                                       02-DCCCA
000017B0 00000000000000B0                   2408+         dc ad(176)                                                     02-DCCCA
000017B8 0000000000000000                   2409+         dc ad(0)                                                       02-DCCCA
000017C0 0000000000001000                   2410+         dc ad(4096)                                                    02-DCCCA
000017C8 20                                 2411+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000017C9 03                                 2412+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000017CA 03                                 2413+         dc al1(3)                                                      02-DCCCA
000017CB 08                                 2414+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000017CC 00                                 2415+         dc bl.8'00000000'                                              02-DCCCA
000017CD 000000                             2416+         dc al3(0)                                                      02-DCCCA
000017D0 0000000000001782                   2417+         dc ad(@LNAME1442)                                              02-DCCCA
000017D8                                    2418+         ds 0d                                                          02-DCCCA
000017D8 00000000000017A0                   2419+         dc ad($eye0056)                                                02-DCCCA
000017E0 0000000000000000                   2420+         dc ad(0)                                                       02-DCCCA
000017E8                                    2421+         ds    0d                                                       01-DCCPR
000017E8                                    2422+rd_kafka_op_cmp_prio ds 0d                                              01-DCCPR
000017E8                                    2423+@REGION_1442_1 ds 0h                                                    01-DCCPR
000017E8 EBEC D008 0024          00000008   2424+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000017EE B904 00CF                          2425+         lgr   12,15               set base reg                         01-DCCPR
                        000017E8            2426+         using @REGION_1442_1,12                                        01-DCCPR
                                            2427 * ******* End of Prologue
                                            2428 * *
                                            2429 * ***           const rd_kafka_op_t *a = _a, *b = _b;
000017F2 E3F0 1000 0004          00000000   2430          LG    15,0(0,1)   ; _a
000017F8 E310 1008 0004          00000008   2431          LG    1,8(0,1)    ; _b
                                            2432 * ***
                                            2433 * ***           return (int)((b->rko_prio) < (a->rko_prio) ? -1 : ((b-\
                                            2434 * >rko_prio) > (a->rko_prio)));
000017FE 5820 1034               00000034   2435          L     2,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
00001802 5920 F034               00000034   2436          C     2,52(0,15)
00001806 47B0 C02A               00001812   2437          BNL   @L279
0000180A A7F8 FFFF               0000FFFF   2438          LHI   15,-1       ; -1
0000180E 47F0 C042               0000182A   2439          B     @L280
00001812                                    2440 @L279    DS    0H
00001812 5810 1034               00000034   2441          L     1,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
00001816 5910 F034               00000034   2442          C     1,52(0,15)
0000181A 47D0 C03E               00001826   2443          BNH   @@gen_label96
0000181E A7F8 0001               00000001   2444          LHI   15,1
00001822 47F0 C042               0000182A   2445          B     @@gen_label97
00001826                                    2446 @@gen_label96 DS 0H
                                                                                                                           Page   54 
  Active Usings: @REGION_1442_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001826 A7F8 0000               00000000   2447          LHI   15,0
0000182A                                    2448 @@gen_label97 DS 0H
0000182A                                    2449 @L280    DS    0H
0000182A B914 00FF                          2450          LGFR  15,15
                                            2451 * ***   }
                                            2452 * * **** Start of Epilogue
                                            2453          DCCEPIL
0000182E                                    2454+         ds 0h                                                          01-DCCEP
                                            2455+* Epilog
                                            2456+* Epilog
0000182E E3E0 D008 0004          00000008   2457+         lg    14,8(,13) restore the reg                                01-DCCEP
00001834 EB1C D020 0004          00000020   2458+         lmg   1,12,32(13)                                              01-DCCEP
0000183A 07FE                               2459+         br   14                                                        01-DCCEP
                                            2460+* End of Epilog
                                            2461 * * **** End of Epilogue
                                            2462          DROP  12
                                            2463 *
                                            2464 *   DSECT for automatic variables in "rd_kafka_op_cmp_prio"
                                            2465 *      (FUNCTION #1442)
                                            2466 *
00000000                00000000 000000A8   2467 @AUTO#rd_kafka_op_cmp_prio DSECT
00000000                                    2468          DS    XL168
                                            2469 *
0000183C                00000000 00005F80   2470 @CODE    CSECT
                                            2471 *
                                            2472 *
                                            2473 *
                                            2474 * ....... start of rd_kafka_q_enq0
0000183C                                    2475 @LNAME1444 DS  0H
0000183C 0000000F                           2476          DC    X'0000000F'
00001840 99846D9281869281                   2477          DC    C'rd_kafka_q_enq0'
0000184F 00                                 2478          DC    X'00'
                                            2479 rd_kafka_q_enq0 DCCPRLG CINDEX=1444,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1444
                                            2480          macro
                                            2481          dccextrn &m
                                            2482          gblc    &$dccext(1000)
                                            2483          gbla    &$dccexti
                                            2484          lcla    &i
                                            2485 &$dccext(&$dccexti+1) setc    '&m'
                                            2486 &i       seta    1
                                            2487 .loop    aif    (&i gt &$dccexti).around
                                            2488          aif    ('&$dccext(&i)' eq '&m').getout
                                            2489 &i       seta    &i+1
                                            2490          ago     .loop
                                            2491 .around  anop
                                            2492 &$dccexti seta &$dccexti+1
                                            2493          extrn  &m
                                            2494 .getout  anop
                                            2495          mend
00001850                                    2496+$eye0059    ds    0d                                                    02-DCCCA
00001850 C4C3C3                             2497+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   55 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001853 01                                 2498+         dc xl1'01' format one                                          02-DCCCA
00001854 00000000                           2499+         dc a(0)                                                        02-DCCCA
00001858 00000000000018C2                   2500+         dc ad(@PER_1444)                                               02-DCCCA
00001860 00000000000000C0                   2501+         dc ad(192)                                                     02-DCCCA
00001868 0000000000000000                   2502+         dc ad(0)                                                       02-DCCCA
00001870 0000000000001000                   2503+         dc ad(4096)                                                    02-DCCCA
00001878 20                                 2504+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001879 03                                 2505+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000187A 03                                 2506+         dc al1(3)                                                      02-DCCCA
0000187B 08                                 2507+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000187C 00                                 2508+         dc bl.8'00000000'                                              02-DCCCA
0000187D 000000                             2509+         dc al3(0)                                                      02-DCCCA
00001880 000000000000183C                   2510+         dc ad(@LNAME1444)                                              02-DCCCA
00001888                                    2511+         ds 0d                                                          02-DCCCA
00001888 0000000000001850                   2512+         dc ad($eye0059)                                                02-DCCCA
00001890 0000000000000000                   2513+         dc ad(0)                                                       02-DCCCA
00001898                                    2514+         ds    0d                                                       01-DCCPR
00001898                                    2515+rd_kafka_q_enq0 ds 0d                                                   01-DCCPR
00001898                                    2516+@REGION_1444_1 ds 0h                                                    01-DCCPR
00001898 EBEC D008 0024          00000008   2517+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000189E E3E0 D088 0004          00000088   2518+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000018A4 E3C0 D090 0004          00000090   2519+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000018AA B904 002E                          2520+         lgr   2,14                copy addr of our savearea            01-DCCPR
000018AE E3B0 C018 0004          00000018   2521+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000018B4 A7EB 00C0               000000C0   2522+         aghi  14,192              increase by frame size               01-DCCPR
000018B8 E3E0 C020 0021          00000020   2523+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000018BE 4720 B020               00000020   2524+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000018C2                                    2525+@PER_1444 ds   0h                                                       01-DCCPR
000018C2 EBDE 2080 0024          00000080   2526+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000018C8 E3C0 2090 0024          00000090   2527+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000018CE B904 00D2                          2528+         lgr   13,2                set real frame pointer               01-DCCPR
000018D2 B904 00CF                          2529+         lgr   12,15               set base reg                         01-DCCPR
                        00001898            2530+         using @REGION_1444_1,12                                        01-DCCPR
                                            2531 * ******* End of Prologue
                                            2532 * *
                                            2533 * ***       if (((!rko->rko_prio)))
000018D6 EB34 1000 0004          00000000   2534          LMG   3,4,0(1)    ; rkq
000018DC E3F0 4034 0012          00000034   2535          LT    15,52(0,4)  ; offset of rko_prio in rd_kafka_op_s
000018E2 4770 C090               00001928   2536          BNZ   @L288
                                            2537 * ***           do {  (rko)->rko_link .tqe_next = (((void *)0)); (rko)\
                                            2538 * ->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; *(&rkq->rkq_q)->tqh_\
                                            2539 * last = (rko); (&rkq->rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; \
                                            2540 * } while ( 0);
000018E6                                    2541 @L289    DS    0H
000018E6 A7F9 0000               00000000   2542          LGHI  15,0        ; 0
000018EA E3F0 4000 0024          00000000   2543          STG   15,0(0,4)   ; rko
000018F0 E3F0 3068 0004          00000068   2544          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
000018F6 E3F0 4008 0024          00000008   2545          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
000018FC E3F0 3068 0004          00000068   2546          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00001902 E340 F000 0024          00000000   2547          STG   4,0(0,15)
00001908 E340 3068 0024          00000068   2548          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
                                            2549 * ***       else if (at_head)
                                                                                                                           Page   56 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000190E 47F0 C1C2               00001A5A   2550          B     @L292
00001918                                    2551          DS    0D
00001918 000000C0                           2552 @FRAMESIZE_1444 DC F'192'
0000191C 00000000
00001920 00000000000017E8                   2553 @lit_1444_64 DC AD(rd_kafka_op_cmp_prio)
00001928                                    2554 @L288    DS    0H
00001928 E3F0 1014 0012          00000014   2555          LT    15,20(0,1)  ; at_head
0000192E 4780 C0D8               00001970   2556          BZ    @L300
                                            2557 * ***               do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_\
                                            2558 * q)->tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link \
                                            2559 * .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last\
                                            2560 *  = &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rk\
                                            2561 * o)->rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0);
00001932                                    2562 @L294    DS    0H
00001932 E3F0 3060 0004          00000060   2563          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001938 E3F0 4000 0024          00000000   2564          STG   15,0(0,4)
0000193E B902 00FF                          2565          LTGR  15,15
00001942 4780 C0BE               00001956   2566          BE    @L297
00001946 E3F0 3060 0004          00000060   2567          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
0000194C E340 F008 0024          00000008   2568          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001952 47F0 C0C4               0000195C   2569          B     @L298
00001956                                    2570 @L297    DS    0H
00001956 E340 3068 0024          00000068   2571          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
0000195C                                    2572 @L298    DS    0H
0000195C E340 3060 0024          00000060   2573          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00001962 41F0 3060               00000060   2574          LA    15,96(0,3)
00001966 E3F0 4008 0024          00000008   2575          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
                                            2576 * ***       else
0000196C 47F0 C1C2               00001A5A   2577          B     @L292
                                            2578 * ***           do { if(((&rkq->rkq_q)->tqh_first) == ((void *)0)) { d\
                                            2579 * o {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)->tqh_first) != (\
                                            2580 * ((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tqe_prev = &(rko)-\
                                            2581 * >rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rko_link\
                                            2582 *  .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)->rko_link .tqe_p\
                                            2583 * rev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } else { rd_kafka_op_\
                                            2584 * t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); (_tmp) != (((voi\
                                            2585 * d *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if(rd_kafka_op_cmp\
                                            2586 * _prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_prev = (_tmp)->rko\
                                            2587 * _link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp); *(_tmp)->rko_li\
                                            2588 * nk .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &(rko)->rko_link \
                                            2589 * .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_link .tqe_next)) \
                                            2590 * { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko_link .tqe_next)\
                                            2591 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = &\
                                            2592 * (rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rk\
                                            2593 * o_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko); (rko)->rko_lin\
                                            2594 * k .tqe_prev = &(_tmp)->rko_link .tqe_next; } while ( 0); break; } } \
                                            2595 * } } while(0);
00001970                                    2596 @L300    DS    0H
00001970 E3F0 3060 0002          00000060   2597          LTG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001976 4770 C120               000019B8   2598          BNE   @L303
0000197A                                    2599 @L304    DS    0H
0000197A E3F0 3060 0004          00000060   2600          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
                                                                                                                           Page   57 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001980 E3F0 4000 0024          00000000   2601          STG   15,0(0,4)
00001986 B902 00FF                          2602          LTGR  15,15
0000198A 4780 C106               0000199E   2603          BE    @L307
0000198E E3F0 3060 0004          00000060   2604          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001994 E340 F008 0024          00000008   2605          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
0000199A 47F0 C10C               000019A4   2606          B     @L308
0000199E                                    2607 @L307    DS    0H
0000199E E340 3068 0024          00000068   2608          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
000019A4                                    2609 @L308    DS    0H
000019A4 E340 3060 0024          00000060   2610          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
000019AA 41F0 3060               00000060   2611          LA    15,96(0,3)
000019AE E3F0 4008 0024          00000008   2612          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
000019B4 47F0 C1C2               00001A5A   2613          B     @L309
000019B8                                    2614 @L303    DS    0H
000019B8 E320 3060 0004          00000060   2615          LG    2,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
000019BE 47F0 C1BA               00001A52   2616          B     @L311
000019C2                                    2617 @L310    DS    0H
000019C2 E340 D0B0 0024          000000B0   2618          STG   4,176(0,13)
000019C8 E320 D0B8 0024          000000B8   2619          STG   2,184(0,13)
000019CE 4110 D0B0               000000B0   2620          LA    1,176(0,13)
000019D2 E3F0 C088 0004          00001920   2621          LG    15,@lit_1444_64 ; rd_kafka_op_cmp_prio
000019D8                                    2622 @@gen_label103 DS    0H
000019D8 05EF                               2623          BALR  14,15
000019DA                                    2624 @@gen_label104 DS    0H
000019DA 12FF                               2625          LTR   15,15
000019DC 47B0 C170               00001A08   2626          BNL   @L314
000019E0                                    2627 @L315    DS    0H
000019E0 E3F0 2008 0004          00000008   2628          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
000019E6 E3F0 4008 0024          00000008   2629          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
000019EC E320 4000 0024          00000000   2630          STG   2,0(0,4)    ; rko
000019F2 E3F0 2008 0004          00000008   2631          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
000019F8 E340 F000 0024          00000000   2632          STG   4,0(0,15)
000019FE E340 2008 0024          00000008   2633          STG   4,8(0,2)    ; offset of tqe_prev in 0000055
00001A04 47F0 C1C2               00001A5A   2634          B     @L312
00001A08                                    2635 @L314    DS    0H
00001A08 E3F0 2000 0002          00000000   2636          LTG   15,0(0,2)   ; _tmp
00001A0E 4770 C1B4               00001A4C   2637          BNZ   @L318
00001A12                                    2638 @L319    DS    0H
00001A12 E3F0 2000 0004          00000000   2639          LG    15,0(0,2)   ; _tmp
00001A18 E3F0 4000 0024          00000000   2640          STG   15,0(0,4)
00001A1E B902 00FF                          2641          LTGR  15,15
00001A22 4780 C19E               00001A36   2642          BE    @L322
00001A26 E3F0 4000 0004          00000000   2643          LG    15,0(0,4)   ; rko
00001A2C E340 F008 0024          00000008   2644          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001A32 47F0 C1A4               00001A3C   2645          B     @L323
00001A36                                    2646 @L322    DS    0H
00001A36 E340 3068 0024          00000068   2647          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001A3C                                    2648 @L323    DS    0H
00001A3C E340 2000 0024          00000000   2649          STG   4,0(0,2)    ; _tmp
00001A42 E320 4008 0024          00000008   2650          STG   2,8(0,4)    ; offset of tqe_prev in 0000055
00001A48 47F0 C1C2               00001A5A   2651          B     @L312
00001A4C                                    2652 @L318    DS    0H
                                                                                                                           Page   58 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001A4C E320 2000 0004          00000000   2653          LG    2,0(0,2)    ; _tmp
00001A52                                    2654 @L311    DS    0H
00001A52 B902 00F2                          2655          LTGR  15,2
00001A56 4770 C12A               000019C2   2656          BNE   @L310
00001A5A                                    2657 @L312    DS    0H
00001A5A                                    2658 @L309    DS    0H
                                            2659 * ***
                                            2660 * ***       rkq->rkq_qlen++;
00001A5A                                    2661 @L299    DS    0H
00001A5A                                    2662 @L292    DS    0H
00001A5A 58F0 3070               00000070   2663          L     15,112(0,3)
00001A5E A7FA 0001               00000001   2664          AHI   15,1
00001A62 50F0 3070               00000070   2665          ST    15,112(0,3)
                                            2666 * ***       rkq->rkq_qsize += rko->rko_len;
00001A66 E3F0 3078 0004          00000078   2667          LG    15,120(0,3)
00001A6C E3F0 4030 0018          00000030   2668          AGF   15,48(0,4)
00001A72 E3F0 3078 0024          00000078   2669          STG   15,120(0,3)
                                            2670 * ***   }
00001A78                                    2671 @ret_lab_1444 DS 0H
                                            2672 * * **** Start of Epilogue
                                            2673          DCCEPIL
00001A78                                    2674+         ds 0h                                                          01-DCCEP
                                            2675+* Epilog
00001A78 D707 D088 D088 00000088 00000088   2676+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001A7E E3D0 D080 0004          00000080   2677+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001A84 E3C0 D090 0004          00000090   2678+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001A8A E3B0 C018 0004          00000018   2679+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001A90 E3C0 B010 0021          00000010   2680+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001A96 E3E0 D008 0004          00000008   2681+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001A9C EB1C D020 0004          00000020   2682+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001AA2 078E                               2683+         bcr 8,14                if same dsab, just return              01-DCCEP
00001AA4 E3F0 D010 0024          00000010   2684+         stg 15,16(0,13)         save return code                       01-DCCEP
00001AAA E300 D018 0024          00000018   2685+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001AB0 E3F0 D090 0004          00000090   2686+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001AB6 E3F0 F018 0004          00000018   2687+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001ABC 47F0 F040               00000040   2688+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2689+* End of Epilog
                                            2690 * * **** End of Epilogue
                                            2691          DROP  12
                                            2692 *
                                            2693 *   DSECT for automatic variables in "rd_kafka_q_enq0"
                                            2694 *      (FUNCTION #1444)
                                            2695 *
00000000                00000000 000000A8   2696 @AUTO#rd_kafka_q_enq0 DSECT
00000000                                    2697          DS    XL168
                                            2698 *
00001AC0                00000000 00005F80   2699 @CODE    CSECT
                                            2700 *
                                            2701 *
                                            2702 *
                                            2703 * ....... start of rd_kafka_q_enq1
00001AC0                                    2704 @LNAME1445 DS  0H
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001AC0 0000000F                           2705          DC    X'0000000F'
00001AC4 99846D9281869281                   2706          DC    C'rd_kafka_q_enq1'
00001AD3 00                                 2707          DC    X'00'
                                            2708 rd_kafka_q_enq1 DCCPRLG CINDEX=1445,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1445
                                            2709          macro
                                            2710          dccextrn &m
                                            2711          gblc    &$dccext(1000)
                                            2712          gbla    &$dccexti
                                            2713          lcla    &i
                                            2714 &$dccext(&$dccexti+1) setc    '&m'
                                            2715 &i       seta    1
                                            2716 .loop    aif    (&i gt &$dccexti).around
                                            2717          aif    ('&$dccext(&i)' eq '&m').getout
                                            2718 &i       seta    &i+1
                                            2719          ago     .loop
                                            2720 .around  anop
                                            2721 &$dccexti seta &$dccexti+1
                                            2722          extrn  &m
                                            2723 .getout  anop
                                            2724          mend
00001AD8                                    2725+$eye0062    ds    0d                                                    02-DCCCA
00001AD8 C4C3C3                             2726+         dc cl3'DCC'                                                    02-DCCCA
00001ADB 01                                 2727+         dc xl1'01' format one                                          02-DCCCA
00001ADC 00000000                           2728+         dc a(0)                                                        02-DCCCA
00001AE0 0000000000001B4A                   2729+         dc ad(@PER_1445)                                               02-DCCCA
00001AE8 00000000000000D8                   2730+         dc ad(216)                                                     02-DCCCA
00001AF0 0000000000000000                   2731+         dc ad(0)                                                       02-DCCCA
00001AF8 0000000000001000                   2732+         dc ad(4096)                                                    02-DCCCA
00001B00 20                                 2733+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001B01 03                                 2734+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001B02 03                                 2735+         dc al1(3)                                                      02-DCCCA
00001B03 08                                 2736+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001B04 00                                 2737+         dc bl.8'00000000'                                              02-DCCCA
00001B05 000000                             2738+         dc al3(0)                                                      02-DCCCA
00001B08 0000000000001AC0                   2739+         dc ad(@LNAME1445)                                              02-DCCCA
00001B10                                    2740+         ds 0d                                                          02-DCCCA
00001B10 0000000000001AD8                   2741+         dc ad($eye0062)                                                02-DCCCA
00001B18 0000000000000000                   2742+         dc ad(0)                                                       02-DCCCA
00001B20                                    2743+         ds    0d                                                       01-DCCPR
00001B20                                    2744+rd_kafka_q_enq1 ds 0d                                                   01-DCCPR
00001B20                                    2745+@REGION_1445_1 ds 0h                                                    01-DCCPR
00001B20 EBEC D008 0024          00000008   2746+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001B26 E3E0 D088 0004          00000088   2747+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001B2C E3C0 D090 0004          00000090   2748+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001B32 B904 002E                          2749+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001B36 E3B0 C018 0004          00000018   2750+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001B3C A7EB 00D8               000000D8   2751+         aghi  14,216              increase by frame size               01-DCCPR
00001B40 E3E0 C020 0021          00000020   2752+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001B46 4720 B020               00000020   2753+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001B4A                                    2754+@PER_1445 ds   0h                                                       01-DCCPR
00001B4A EBDE 2080 0024          00000080   2755+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001B50 E3C0 2090 0024          00000090   2756+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001B56 B904 00D2                          2757+         lgr   13,2                set real frame pointer               01-DCCPR
00001B5A B904 00CF                          2758+         lgr   12,15               set base reg                         01-DCCPR
                        00001B20            2759+         using @REGION_1445_1,12                                        01-DCCPR
00001B5E B904 0071                          2760          LGR   7,1         ; ptr to parm area
                                            2761 * ******* End of Prologue
                                            2762 * *
00001B62 EB24 7000 0004          00000000   2763          LMG   2,4,0(7)    ; rkq
00001B68 E350 7024 0012          00000024   2764          LT    5,36(0,7)   ; do_lock
                                            2765 * ***           rd_kafka_q_t *fwdq;
                                            2766 * ***
                                            2767 * ***           if (do_lock)
00001B6E 4780 C064               00001B84   2768          BZ    @L325
                                            2769 * ***                   mtx_lock(&rkq->rkq_lock);
00001B72 E320 D0B0 0024          000000B0   2770          STG   2,176(0,13)
00001B78 4110 D0B0               000000B0   2771          LA    1,176(0,13)
00001B7C E3F0 C0B0 0004          00001BD0   2772          LG    15,@lit_1445_66 ; mtx_lock
00001B82                                    2773 @@gen_label110 DS    0H
00001B82 05EF                               2774          BALR  14,15
00001B84                                    2775 @@gen_label111 DS    0H
00001B84                                    2776 @L324    DS    0H
                                            2777 * ***
                                            2778 * ***           do {} while (0);
00001B84                                    2779 @L325    DS    0H
                                            2780 * ***
                                            2781 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
00001B84 9102 2087      00000087 00000002   2782          TM    135(2),2
00001B88 4770 C0F8               00001C18   2783          BNZ   @L328
                                            2784 * ***
                                            2785 * ***                   if (do_lock)
00001B8C 1255                               2786          LTR   5,5
00001B8E 4780 C084               00001BA4   2787          BZ    @L329
                                            2788 * ***                           mtx_unlock(&rkq->rkq_lock);
00001B92 E320 D0B0 0024          000000B0   2789          STG   2,176(0,13)
00001B98 4110 D0B0               000000B0   2790          LA    1,176(0,13)
00001B9C E3F0 C0B8 0004          00001BD8   2791          LG    15,@lit_1445_67 ; mtx_unlock
00001BA2                                    2792 @@gen_label114 DS    0H
00001BA2 05EF                               2793          BALR  14,15
00001BA4                                    2794 @@gen_label115 DS    0H
00001BA4                                    2795 @L329    DS    0H
                                            2796 * ***
                                            2797 * ***                   return rd_kafka_op_reply(rko, RD_KAFKA_RESP_ER\
                                            2798 * R__DESTROY);
00001BA4 E330 D0B0 0024          000000B0   2799          STG   3,176(0,13)
00001BAA E548 D0B8 FF3B          000000B8   2800          MVGHI 184(13),-197
00001BB0 4110 D0B0               000000B0   2801          LA    1,176(0,13)
00001BB4 E3F0 C0C0 0004          00001BE0   2802          LG    15,@lit_1445_68 ; rd_kafka_op_reply
00001BBA                                    2803 @@gen_label116 DS    0H
00001BBA 05EF                               2804          BALR  14,15
00001BBC                                    2805 @@gen_label117 DS    0H
00001BBC B914 00FF                          2806          LGFR  15,15
00001BC0 47F0 C212               00001D32   2807          B     @ret_lab_1445
                                                                                                                           Page   61 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001BC8                                    2808          DS    0D
00001BC8 000000D8                           2809 @FRAMESIZE_1445 DC F'216'
00001BCC 00000000
00001BD0 0000000000000000                   2810 @lit_1445_66 DC AD(mtx_lock)
00001BD8 0000000000000000                   2811 @lit_1445_67 DC AD(mtx_unlock)
00001BE0 0000000000004850                   2812 @lit_1445_68 DC AD(rd_kafka_op_reply)
00001BE8 00000000000014D0                   2813 @lit_1445_69 DC AD(rd_kafka_q_fwd_get)
00001BF0 0000000000001898                   2814 @lit_1445_70 DC AD(rd_kafka_q_enq0)
00001BF8 0000000000000000                   2815 @lit_1445_71 DC AD(cnd_signal)
00001C00 0000000000001638                   2816 @lit_1445_72 DC AD(rd_kafka_q_io_event)
00001C08 0000000000001B20                   2817 @lit_1445_75 DC AD(rd_kafka_q_enq1)
00001C10 00000000000011A0                   2818 @lit_1445_76 DC AD(rd_kafka_q_destroy0)
                                            2819 * ***           }
00001C18                                    2820 @L328    DS    0H
                                            2821 * ***
                                            2822 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00001C18 E320 D0B0 0024          000000B0   2823          STG   2,176(0,13)
00001C1E D707 D0B8 D0B8 000000B8 000000B8   2824          XC    184(8,13),184(13)
00001C24 4110 D0B0               000000B0   2825          LA    1,176(0,13)
00001C28 E3F0 C0C8 0004          00001BE8   2826          LG    15,@lit_1445_69 ; rd_kafka_q_fwd_get
00001C2E                                    2827 @@gen_label118 DS    0H
00001C2E 05EF                               2828          BALR  14,15
00001C30                                    2829 @@gen_label119 DS    0H
00001C30 B904 006F                          2830          LGR   6,15
00001C34 B902 00F6                          2831          LTGR  15,6
00001C38 4770 C1B4               00001CD4   2832          BNZ   @L330
                                            2833 * ***                   if (!rko->rko_serve && orig_destq->rkq_serve) \
                                            2834 * {
00001C3C E3F0 3050 0002          00000050   2835          LTG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
00001C42 4770 C148               00001C68   2836          BNZ   @L331
00001C46 E3F0 4098 0002          00000098   2837          LTG   15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00001C4C 4780 C148               00001C68   2838          BZ    @L331
                                            2839 * ***
                                            2840 * ***
                                            2841 * ***                           rko->rko_serve = orig_destq->rkq_serve\
                                            2842 * ;
00001C50 E3F0 4098 0004          00000098   2843          LG    15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00001C56 E3F0 3050 0024          00000050   2844          STG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
                                            2845 * ***                           rko->rko_serve_opaque = orig_destq->rk\
                                            2846 * q_opaque;
00001C5C E3F0 40A0 0004          000000A0   2847          LG    15,160(0,4) ; offset of rkq_opaque in rd_kafka_q_s
00001C62 E3F0 3058 0024          00000058   2848          STG   15,88(0,3)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                s
                                            2849 * ***                   }
00001C68                                    2850 @L331    DS    0H
                                            2851 * ***
                                            2852 * ***                   rd_kafka_q_enq0(rkq, rko, at_head);
00001C68 EB23 D0B0 0024          000000B0   2853          STMG  2,3,176(13)
00001C6E E3F0 701C 0014          0000001C   2854          LGF   15,28(0,7)  ; at_head
00001C74 E3F0 D0C0 0024          000000C0   2855          STG   15,192(0,13)
00001C7A 4110 D0B0               000000B0   2856          LA    1,176(0,13)
00001C7E E3F0 C0D0 0004          00001BF0   2857          LG    15,@lit_1445_70 ; rd_kafka_q_enq0
                                                                                                                           Page   62 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001C84                                    2858 @@gen_label123 DS    0H
00001C84 05EF                               2859          BALR  14,15
00001C86                                    2860 @@gen_label124 DS    0H
                                            2861 * ***                   cnd_signal(&rkq->rkq_cond);
00001C86 41F0 2028               00000028   2862          LA    15,40(0,2)
00001C8A E3F0 D0B0 0024          000000B0   2863          STG   15,176(0,13)
00001C90 4110 D0B0               000000B0   2864          LA    1,176(0,13)
00001C94 E3F0 C0D8 0004          00001BF8   2865          LG    15,@lit_1445_71 ; cnd_signal
00001C9A                                    2866 @@gen_label125 DS    0H
00001C9A 05EF                               2867          BALR  14,15
00001C9C                                    2868 @@gen_label126 DS    0H
                                            2869 * ***                   if (rkq->rkq_qlen == 1)
00001C9C E55C 2070 0001          00000070   2870          CHSI  112(2),1
00001CA2 4770 C198               00001CB8   2871          BNE   @L332
                                            2872 * ***                           rd_kafka_q_io_event(rkq);
00001CA6 E320 D0B0 0024          000000B0   2873          STG   2,176(0,13)
00001CAC 4110 D0B0               000000B0   2874          LA    1,176(0,13)
00001CB0 E3F0 C0E0 0004          00001C00   2875          LG    15,@lit_1445_72 ; rd_kafka_q_io_event
00001CB6                                    2876 @@gen_label128 DS    0H
00001CB6 05EF                               2877          BALR  14,15
00001CB8                                    2878 @@gen_label129 DS    0H
00001CB8                                    2879 @L332    DS    0H
                                            2880 * ***
                                            2881 * ***                   if (do_lock)
00001CB8 1255                               2882          LTR   5,5
00001CBA 4780 C20E               00001D2E   2883          BZ    @L334
                                            2884 * ***                           mtx_unlock(&rkq->rkq_lock);
00001CBE E320 D0B0 0024          000000B0   2885          STG   2,176(0,13)
00001CC4 4110 D0B0               000000B0   2886          LA    1,176(0,13)
00001CC8 E3F0 C0B8 0004          00001BD8   2887          LG    15,@lit_1445_67 ; mtx_unlock
00001CCE                                    2888 @@gen_label131 DS    0H
00001CCE 05EF                               2889          BALR  14,15
00001CD0                                    2890 @@gen_label132 DS    0H
00001CD0                                    2891 @L333    DS    0H
                                            2892 * ***           } else {
00001CD0 47F0 C20E               00001D2E   2893          B     @L334
00001CD4                                    2894 @L330    DS    0H
                                            2895 * ***                   if (do_lock)
00001CD4 1255                               2896          LTR   5,5
00001CD6 4780 C1CC               00001CEC   2897          BZ    @L335
                                            2898 * ***                           mtx_unlock(&rkq->rkq_lock);
00001CDA E320 D0B0 0024          000000B0   2899          STG   2,176(0,13)
00001CE0 4110 D0B0               000000B0   2900          LA    1,176(0,13)
00001CE4 E3F0 C0B8 0004          00001BD8   2901          LG    15,@lit_1445_67 ; mtx_unlock
00001CEA                                    2902 @@gen_label134 DS    0H
00001CEA 05EF                               2903          BALR  14,15
00001CEC                                    2904 @@gen_label135 DS    0H
00001CEC                                    2905 @L335    DS    0H
                                            2906 * ***                   rd_kafka_q_enq1(fwdq, rko, orig_destq, at_head\
                                            2907 * , 1);
00001CEC E360 D0B0 0024          000000B0   2908          STG   6,176(0,13)
00001CF2 EB34 D0B8 0024          000000B8   2909          STMG  3,4,184(13)
                                                                                                                           Page   63 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001CF8 E3F0 701C 0014          0000001C   2910          LGF   15,28(0,7)  ; at_head
00001CFE E3F0 D0C8 0024          000000C8   2911          STG   15,200(0,13)
00001D04 E548 D0D0 0001          000000D0   2912          MVGHI 208(13),1
00001D0A 4110 D0B0               000000B0   2913          LA    1,176(0,13)
00001D0E E3F0 C0E8 0004          00001C08   2914          LG    15,@lit_1445_75 ; rd_kafka_q_enq1
00001D14                                    2915 @@gen_label136 DS    0H
00001D14 05EF                               2916          BALR  14,15
00001D16                                    2917 @@gen_label137 DS    0H
                                            2918 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00001D16 E360 D0B0 0024          000000B0   2919          STG   6,176(0,13)
00001D1C D707 D0B8 D0B8 000000B8 000000B8   2920          XC    184(8,13),184(13)
00001D22 4110 D0B0               000000B0   2921          LA    1,176(0,13)
00001D26 E3F0 C0F0 0004          00001C10   2922          LG    15,@lit_1445_76 ; rd_kafka_q_destroy0
00001D2C                                    2923 @@gen_label138 DS    0H
00001D2C 05EF                               2924          BALR  14,15
00001D2E                                    2925 @@gen_label139 DS    0H
                                            2926 * ***           }
00001D2E                                    2927 @L334    DS    0H
                                            2928 * ***
                                            2929 * ***           return 1;
00001D2E A7F9 0001               00000001   2930          LGHI  15,1        ; 1
                                            2931 * ***   }
00001D32                                    2932 @ret_lab_1445 DS 0H
                                            2933 * * **** Start of Epilogue
                                            2934          DCCEPIL
00001D32                                    2935+         ds 0h                                                          01-DCCEP
                                            2936+* Epilog
00001D32 D707 D088 D088 00000088 00000088   2937+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001D38 E3D0 D080 0004          00000080   2938+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001D3E E3C0 D090 0004          00000090   2939+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001D44 E3B0 C018 0004          00000018   2940+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001D4A E3C0 B010 0021          00000010   2941+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001D50 E3E0 D008 0004          00000008   2942+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001D56 EB1C D020 0004          00000020   2943+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001D5C 078E                               2944+         bcr 8,14                if same dsab, just return              01-DCCEP
00001D5E E3F0 D010 0024          00000010   2945+         stg 15,16(0,13)         save return code                       01-DCCEP
00001D64 E300 D018 0024          00000018   2946+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001D6A E3F0 D090 0004          00000090   2947+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001D70 E3F0 F018 0004          00000018   2948+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001D76 47F0 F040               00000040   2949+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2950+* End of Epilog
                                            2951 * * **** End of Epilogue
                                            2952          DROP  12
                                            2953 *
                                            2954 *   DSECT for automatic variables in "rd_kafka_q_enq1"
                                            2955 *      (FUNCTION #1445)
                                            2956 *
00000000                00000000 000000A8   2957 @AUTO#rd_kafka_q_enq1 DSECT
00000000                                    2958          DS    XL168
                                            2959 *
00001D7A                00000000 00005F80   2960 @CODE    CSECT
                                            2961 *
                                                                                                                           Page   64 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2962 *
                                            2963 *
                                            2964 * ....... start of rd_kafka_q_enq
00001D7A                                    2965 @LNAME1446 DS  0H
00001D7A 0000000E                           2966          DC    X'0000000E'
00001D7E 99846D9281869281                   2967          DC    C'rd_kafka_q_enq'
00001D8C 00                                 2968          DC    X'00'
                                            2969 rd_kafka_q_enq DCCPRLG CINDEX=1446,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1446
                                            2970          macro
                                            2971          dccextrn &m
                                            2972          gblc    &$dccext(1000)
                                            2973          gbla    &$dccexti
                                            2974          lcla    &i
                                            2975 &$dccext(&$dccexti+1) setc    '&m'
                                            2976 &i       seta    1
                                            2977 .loop    aif    (&i gt &$dccexti).around
                                            2978          aif    ('&$dccext(&i)' eq '&m').getout
                                            2979 &i       seta    &i+1
                                            2980          ago     .loop
                                            2981 .around  anop
                                            2982 &$dccexti seta &$dccexti+1
                                            2983          extrn  &m
                                            2984 .getout  anop
                                            2985          mend
00001D90                                    2986+$eye0065    ds    0d                                                    02-DCCCA
00001D90 C4C3C3                             2987+         dc cl3'DCC'                                                    02-DCCCA
00001D93 01                                 2988+         dc xl1'01' format one                                          02-DCCCA
00001D94 00000000                           2989+         dc a(0)                                                        02-DCCCA
00001D98 0000000000001E02                   2990+         dc ad(@PER_1446)                                               02-DCCCA
00001DA0 00000000000000D0                   2991+         dc ad(208)                                                     02-DCCCA
00001DA8 0000000000000000                   2992+         dc ad(0)                                                       02-DCCCA
00001DB0 0000000000001000                   2993+         dc ad(4096)                                                    02-DCCCA
00001DB8 20                                 2994+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001DB9 03                                 2995+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001DBA 03                                 2996+         dc al1(3)                                                      02-DCCCA
00001DBB 08                                 2997+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001DBC 00                                 2998+         dc bl.8'00000000'                                              02-DCCCA
00001DBD 000000                             2999+         dc al3(0)                                                      02-DCCCA
00001DC0 0000000000001D7A                   3000+         dc ad(@LNAME1446)                                              02-DCCCA
00001DC8                                    3001+         ds 0d                                                          02-DCCCA
00001DC8 0000000000001D90                   3002+         dc ad($eye0065)                                                02-DCCCA
00001DD0 0000000000000000                   3003+         dc ad(0)                                                       02-DCCCA
00001DD8                                    3004+         ds    0d                                                       01-DCCPR
00001DD8                                    3005+rd_kafka_q_enq ds 0d                                                    01-DCCPR
00001DD8                                    3006+@REGION_1446_1 ds 0h                                                    01-DCCPR
00001DD8 EBEC D008 0024          00000008   3007+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001DDE E3E0 D088 0004          00000088   3008+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001DE4 E3C0 D090 0004          00000090   3009+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001DEA B904 002E                          3010+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001DEE E3B0 C018 0004          00000018   3011+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001DF4 A7EB 00D0               000000D0   3012+         aghi  14,208              increase by frame size               01-DCCPR
                                                                                                                           Page   65 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001DF8 E3E0 C020 0021          00000020   3013+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001DFE 4720 B020               00000020   3014+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001E02                                    3015+@PER_1446 ds   0h                                                       01-DCCPR
00001E02 EBDE 2080 0024          00000080   3016+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001E08 E3C0 2090 0024          00000090   3017+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001E0E B904 00D2                          3018+         lgr   13,2                set real frame pointer               01-DCCPR
00001E12 B904 00CF                          3019+         lgr   12,15               set base reg                         01-DCCPR
                        00001DD8            3020+         using @REGION_1446_1,12                                        01-DCCPR
                                            3021 * ******* End of Prologue
                                            3022 * *
                                            3023 * ***           return rd_kafka_q_enq1(rkq, rko, rkq, 0, 1);
00001E16 E3F0 1000 0004          00000000   3024          LG    15,0(0,1)   ; rkq
00001E1C E3F0 D0A8 0024          000000A8   3025          STG   15,168(0,13)
00001E22 E3F0 1008 0004          00000008   3026          LG    15,8(0,1)   ; rko
00001E28 E3F0 D0B0 0024          000000B0   3027          STG   15,176(0,13)
00001E2E E3F0 1000 0004          00000000   3028          LG    15,0(0,1)   ; rkq
00001E34 E3F0 D0B8 0024          000000B8   3029          STG   15,184(0,13)
00001E3A D707 D0C0 D0C0 000000C0 000000C0   3030          XC    192(8,13),192(13)
00001E40 E548 D0C8 0001          000000C8   3031          MVGHI 200(13),1
00001E46 4110 D0A8               000000A8   3032          LA    1,168(0,13)
00001E4A E3F0 C0D0 0004          00001EA8   3033          LG    15,@lit_1446_79 ; rd_kafka_q_enq1
00001E50                                    3034 @@gen_label140 DS    0H
00001E50 05EF                               3035          BALR  14,15
00001E52                                    3036 @@gen_label141 DS    0H
00001E52 B914 00FF                          3037          LGFR  15,15
                                            3038 * ***   }
                                            3039 * * **** Start of Epilogue
                                            3040          DCCEPIL
00001E56                                    3041+         ds 0h                                                          01-DCCEP
                                            3042+* Epilog
00001E56 D707 D088 D088 00000088 00000088   3043+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001E5C E3D0 D080 0004          00000080   3044+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001E62 E3C0 D090 0004          00000090   3045+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001E68 E3B0 C018 0004          00000018   3046+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001E6E E3C0 B010 0021          00000010   3047+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001E74 E3E0 D008 0004          00000008   3048+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001E7A EB1C D020 0004          00000020   3049+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001E80 078E                               3050+         bcr 8,14                if same dsab, just return              01-DCCEP
00001E82 E3F0 D010 0024          00000010   3051+         stg 15,16(0,13)         save return code                       01-DCCEP
00001E88 E300 D018 0024          00000018   3052+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001E8E E3F0 D090 0004          00000090   3053+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001E94 E3F0 F018 0004          00000018   3054+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E9A 47F0 F040               00000040   3055+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3056+* End of Epilog
                                            3057 * * **** End of Epilogue
00001EA0                                    3058          DS    0D
00001EA0 000000D0                           3059 @FRAMESIZE_1446 DC F'208'
00001EA4 00000000
00001EA8 0000000000001B20                   3060 @lit_1446_79 DC AD(rd_kafka_q_enq1)
                                            3061          DROP  12
                                            3062 *
                                            3063 *   DSECT for automatic variables in "rd_kafka_q_enq"
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3064 *      (FUNCTION #1446)
                                            3065 *
00000000                00000000 000000A8   3066 @AUTO#rd_kafka_q_enq DSECT
00000000                                    3067          DS    XL168
                                            3068 *
00001EB0                00000000 00005F80   3069 @CODE    CSECT
                                            3070 *
                                            3071 *
                                            3072 *
                                            3073 * ....... start of rd_kafka_set_replyq
00001EB0                                    3074 @LNAME1456 DS  0H
00001EB0 00000013                           3075          DC    X'00000013'
00001EB4 99846D9281869281                   3076          DC    C'rd_kafka_set_replyq'
00001EC7 00                                 3077          DC    X'00'
                                            3078 rd_kafka_set_replyq DCCPRLG CINDEX=1456,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1456
                                            3079          macro
                                            3080          dccextrn &m
                                            3081          gblc    &$dccext(1000)
                                            3082          gbla    &$dccexti
                                            3083          lcla    &i
                                            3084 &$dccext(&$dccexti+1) setc    '&m'
                                            3085 &i       seta    1
                                            3086 .loop    aif    (&i gt &$dccexti).around
                                            3087          aif    ('&$dccext(&i)' eq '&m').getout
                                            3088 &i       seta    &i+1
                                            3089          ago     .loop
                                            3090 .around  anop
                                            3091 &$dccexti seta &$dccexti+1
                                            3092          extrn  &m
                                            3093 .getout  anop
                                            3094          mend
00001EC8                                    3095+$eye0068    ds    0d                                                    02-DCCCA
00001EC8 C4C3C3                             3096+         dc cl3'DCC'                                                    02-DCCCA
00001ECB 01                                 3097+         dc xl1'01' format one                                          02-DCCCA
00001ECC 00000000                           3098+         dc a(0)                                                        02-DCCCA
00001ED0 0000000000001F3A                   3099+         dc ad(@PER_1456)                                               02-DCCCA
00001ED8 00000000000000B0                   3100+         dc ad(176)                                                     02-DCCCA
00001EE0 0000000000000000                   3101+         dc ad(0)                                                       02-DCCCA
00001EE8 0000000000001000                   3102+         dc ad(4096)                                                    02-DCCCA
00001EF0 20                                 3103+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001EF1 03                                 3104+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001EF2 03                                 3105+         dc al1(3)                                                      02-DCCCA
00001EF3 08                                 3106+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001EF4 00                                 3107+         dc bl.8'00000000'                                              02-DCCCA
00001EF5 000000                             3108+         dc al3(0)                                                      02-DCCCA
00001EF8 0000000000001EB0                   3109+         dc ad(@LNAME1456)                                              02-DCCCA
00001F00                                    3110+         ds 0d                                                          02-DCCCA
00001F00 0000000000001EC8                   3111+         dc ad($eye0068)                                                02-DCCCA
00001F08 0000000000000000                   3112+         dc ad(0)                                                       02-DCCCA
00001F10                                    3113+         ds    0d                                                       01-DCCPR
00001F10                                    3114+rd_kafka_set_replyq ds 0d                                               01-DCCPR
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001F10                                    3115+@REGION_1456_1 ds 0h                                                    01-DCCPR
00001F10 EBEC D008 0024          00000008   3116+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001F16 E3E0 D088 0004          00000088   3117+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001F1C E3C0 D090 0004          00000090   3118+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001F22 B904 002E                          3119+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001F26 E3B0 C018 0004          00000018   3120+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001F2C A7EB 00B0               000000B0   3121+         aghi  14,176              increase by frame size               01-DCCPR
00001F30 E3E0 C020 0021          00000020   3122+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001F36 4720 B020               00000020   3123+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001F3A                                    3124+@PER_1456 ds   0h                                                       01-DCCPR
00001F3A EBDE 2080 0024          00000080   3125+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001F40 E3C0 2090 0024          00000090   3126+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001F46 B904 00D2                          3127+         lgr   13,2                set real frame pointer               01-DCCPR
00001F4A B904 00CF                          3128+         lgr   12,15               set base reg                         01-DCCPR
                        00001F10            3129+         using @REGION_1456_1,12                                        01-DCCPR
00001F4E B904 0021                          3130          LGR   2,1         ; ptr to parm area
                                            3131 * ******* End of Prologue
                                            3132 * *
                                            3133 * ***      replyq->q = rkq ? rd_kafka_q_keep(rkq) : ((void *)0);
00001F52 E330 2000 0004          00000000   3134          LG    3,0(0,2)    ; replyq
00001F58 E3F0 2008 0004          00000008   3135          LG    15,8(0,2)   ; rkq
00001F5E B902 001F                          3136          LTGR  1,15
00001F62 4780 C080               00001F90   3137          BZ    @L440
00001F66 E3F0 D0A8 0024          000000A8   3138          STG   15,168(0,13)
00001F6C 4110 D0A8               000000A8   3139          LA    1,168(0,13)
00001F70 E3F0 C078 0004          00001F88   3140          LG    15,@lit_1456_81 ; rd_kafka_q_keep
00001F76                                    3141 @@gen_label143 DS    0H
00001F76 05EF                               3142          BALR  14,15
00001F78                                    3143 @@gen_label144 DS    0H
00001F78 47F0 C084               00001F94   3144          B     @L441
00001F80                                    3145          DS    0D
00001F80 000000B0                           3146 @FRAMESIZE_1456 DC F'176'
00001F84 00000000
00001F88 0000000000000F20                   3147 @lit_1456_81 DC AD(rd_kafka_q_keep)
00001F90                                    3148 @L440    DS    0H
00001F90 A7F9 0000               00000000   3149          LGHI  15,0        ; 0
00001F94                                    3150 @L441    DS    0H
00001F94 E3F0 3000 0024          00000000   3151          STG   15,0(0,3)
                                            3152 * ***      replyq->version = version;
00001F9A 58F0 2014               00000014   3153          L     15,20(0,2)  ; version
00001F9E 50F0 3008               00000008   3154          ST    15,8(0,3)   ; offset of version in rd_kafka_replyq_s
                                            3155 * ***
                                            3156 * ***
                                            3157 * ***
                                            3158 * ***   }
00001FA2                                    3159 @ret_lab_1456 DS 0H
                                            3160 * * **** Start of Epilogue
                                            3161          DCCEPIL
00001FA2                                    3162+         ds 0h                                                          01-DCCEP
                                            3163+* Epilog
00001FA2 D707 D088 D088 00000088 00000088   3164+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001FA8 E3D0 D080 0004          00000080   3165+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page   68 
  Active Usings: @REGION_1456_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001FAE E3C0 D090 0004          00000090   3166+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001FB4 E3B0 C018 0004          00000018   3167+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001FBA E3C0 B010 0021          00000010   3168+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001FC0 E3E0 D008 0004          00000008   3169+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001FC6 EB1C D020 0004          00000020   3170+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001FCC 078E                               3171+         bcr 8,14                if same dsab, just return              01-DCCEP
00001FCE E3F0 D010 0024          00000010   3172+         stg 15,16(0,13)         save return code                       01-DCCEP
00001FD4 E300 D018 0024          00000018   3173+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001FDA E3F0 D090 0004          00000090   3174+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001FE0 E3F0 F018 0004          00000018   3175+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001FE6 47F0 F040               00000040   3176+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3177+* End of Epilog
                                            3178 * * **** End of Epilogue
                                            3179          DROP  12
                                            3180 *
                                            3181 *   DSECT for automatic variables in "rd_kafka_set_replyq"
                                            3182 *      (FUNCTION #1456)
                                            3183 *
00000000                00000000 000000A8   3184 @AUTO#rd_kafka_set_replyq DSECT
00000000                                    3185          DS    XL168
                                            3186 *
00001FEA                00000000 00005F80   3187 @CODE    CSECT
                                            3188 *
                                            3189 *
                                            3190 *
                                            3191 * ....... start of rd_kafka_op_set_replyq
00001FEA                                    3192 @LNAME1457 DS  0H
00001FEA 00000016                           3193          DC    X'00000016'
00001FEE 99846D9281869281                   3194          DC    C'rd_kafka_op_set_replyq'
00002004 00                                 3195          DC    X'00'
                                            3196 rd_kafka_op_set_replyq DCCPRLG CINDEX=1457,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1457
                                            3197          macro
                                            3198          dccextrn &m
                                            3199          gblc    &$dccext(1000)
                                            3200          gbla    &$dccexti
                                            3201          lcla    &i
                                            3202 &$dccext(&$dccexti+1) setc    '&m'
                                            3203 &i       seta    1
                                            3204 .loop    aif    (&i gt &$dccexti).around
                                            3205          aif    ('&$dccext(&i)' eq '&m').getout
                                            3206 &i       seta    &i+1
                                            3207          ago     .loop
                                            3208 .around  anop
                                            3209 &$dccexti seta &$dccexti+1
                                            3210          extrn  &m
                                            3211 .getout  anop
                                            3212          mend
00002008                                    3213+$eye0071    ds    0d                                                    02-DCCCA
00002008 C4C3C3                             3214+         dc cl3'DCC'                                                    02-DCCCA
0000200B 01                                 3215+         dc xl1'01' format one                                          02-DCCCA
0000200C 00000000                           3216+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   69 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002010 000000000000207A                   3217+         dc ad(@PER_1457)                                               02-DCCCA
00002018 00000000000000C0                   3218+         dc ad(192)                                                     02-DCCCA
00002020 0000000000000000                   3219+         dc ad(0)                                                       02-DCCCA
00002028 0000000000001000                   3220+         dc ad(4096)                                                    02-DCCCA
00002030 20                                 3221+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002031 03                                 3222+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002032 03                                 3223+         dc al1(3)                                                      02-DCCCA
00002033 08                                 3224+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002034 00                                 3225+         dc bl.8'00000000'                                              02-DCCCA
00002035 000000                             3226+         dc al3(0)                                                      02-DCCCA
00002038 0000000000001FEA                   3227+         dc ad(@LNAME1457)                                              02-DCCCA
00002040                                    3228+         ds 0d                                                          02-DCCCA
00002040 0000000000002008                   3229+         dc ad($eye0071)                                                02-DCCCA
00002048 0000000000000000                   3230+         dc ad(0)                                                       02-DCCCA
00002050                                    3231+         ds    0d                                                       01-DCCPR
00002050                                    3232+rd_kafka_op_set_replyq ds 0d                                            01-DCCPR
00002050                                    3233+@REGION_1457_1 ds 0h                                                    01-DCCPR
00002050 EBEC D008 0024          00000008   3234+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002056 E3E0 D088 0004          00000088   3235+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000205C E3C0 D090 0004          00000090   3236+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002062 B904 002E                          3237+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002066 E3B0 C018 0004          00000018   3238+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000206C A7EB 00C0               000000C0   3239+         aghi  14,192              increase by frame size               01-DCCPR
00002070 E3E0 C020 0021          00000020   3240+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002076 4720 B020               00000020   3241+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000207A                                    3242+@PER_1457 ds   0h                                                       01-DCCPR
0000207A EBDE 2080 0024          00000080   3243+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002080 E3C0 2090 0024          00000090   3244+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002086 B904 00D2                          3245+         lgr   13,2                set real frame pointer               01-DCCPR
0000208A B904 00CF                          3246+         lgr   12,15               set base reg                         01-DCCPR
                        00002050            3247+         using @REGION_1457_1,12                                        01-DCCPR
0000208E B904 0021                          3248          LGR   2,1         ; ptr to parm area
                                            3249 * ******* End of Prologue
                                            3250 * *
                                            3251 * ***      rd_kafka_set_replyq(&rko->rko_replyq, rkq,
                                            3252 * ***                versionptr ? rd_atomic32_get(versionptr) : 0);
00002092 E3F0 2010 0004          00000010   3253          LG    15,16(0,2)  ; versionptr
00002098 B902 001F                          3254          LTGR  1,15
0000209C 4780 C080               000020D0   3255          BZ    @L442
000020A0 E3F0 D0A8 0024          000000A8   3256          STG   15,168(0,13)
000020A6 4110 D0A8               000000A8   3257          LA    1,168(0,13)
000020AA E3F0 C070 0004          000020C0   3258          LG    15,@lit_1457_84 ; rd_atomic32_get
000020B0                                    3259 @@gen_label146 DS    0H
000020B0 05EF                               3260          BALR  14,15
000020B2                                    3261 @@gen_label147 DS    0H
000020B2 47F0 C084               000020D4   3262          B     @L443
000020B8                                    3263          DS    0D
000020B8 000000C0                           3264 @FRAMESIZE_1457 DC F'192'
000020BC 00000000
000020C0 00000000000002F0                   3265 @lit_1457_84 DC AD(rd_atomic32_get)
000020C8 0000000000001F10                   3266 @lit_1457_86 DC AD(rd_kafka_set_replyq)
000020D0                                    3267 @L442    DS    0H
                                                                                                                           Page   70 
  Active Usings: @REGION_1457_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000020D0 A7F8 0000               00000000   3268          LHI   15,0        ; 0
000020D4                                    3269 @L443    DS    0H
000020D4 E310 2000 0004          00000000   3270          LG    1,0(0,2)    ; rko
000020DA 4110 1040               00000040   3271          LA    1,64(0,1)
000020DE E310 D0A8 0024          000000A8   3272          STG   1,168(0,13)
000020E4 E310 2008 0004          00000008   3273          LG    1,8(0,2)    ; rkq
000020EA E310 D0B0 0024          000000B0   3274          STG   1,176(0,13)
000020F0 B914 00FF                          3275          LGFR  15,15
000020F4 E3F0 D0B8 0024          000000B8   3276          STG   15,184(0,13)
000020FA 4110 D0A8               000000A8   3277          LA    1,168(0,13)
000020FE E3F0 C078 0004          000020C8   3278          LG    15,@lit_1457_86 ; rd_kafka_set_replyq
00002104                                    3279 @@gen_label148 DS    0H
00002104 05EF                               3280          BALR  14,15
00002106                                    3281 @@gen_label149 DS    0H
                                            3282 * ***   }
00002106                                    3283 @ret_lab_1457 DS 0H
                                            3284 * * **** Start of Epilogue
                                            3285          DCCEPIL
00002106                                    3286+         ds 0h                                                          01-DCCEP
                                            3287+* Epilog
00002106 D707 D088 D088 00000088 00000088   3288+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000210C E3D0 D080 0004          00000080   3289+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002112 E3C0 D090 0004          00000090   3290+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002118 E3B0 C018 0004          00000018   3291+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000211E E3C0 B010 0021          00000010   3292+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002124 E3E0 D008 0004          00000008   3293+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000212A EB1C D020 0004          00000020   3294+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002130 078E                               3295+         bcr 8,14                if same dsab, just return              01-DCCEP
00002132 E3F0 D010 0024          00000010   3296+         stg 15,16(0,13)         save return code                       01-DCCEP
00002138 E300 D018 0024          00000018   3297+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000213E E3F0 D090 0004          00000090   3298+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002144 E3F0 F018 0004          00000018   3299+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000214A 47F0 F040               00000040   3300+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3301+* End of Epilog
                                            3302 * * **** End of Epilogue
                                            3303          DROP  12
                                            3304 *
                                            3305 *   DSECT for automatic variables in "rd_kafka_op_set_replyq"
                                            3306 *      (FUNCTION #1457)
                                            3307 *
00000000                00000000 000000A8   3308 @AUTO#rd_kafka_op_set_replyq DSECT
00000000                                    3309          DS    XL168
                                            3310 *
0000214E                00000000 00005F80   3311 @CODE    CSECT
                                            3312 *
                                            3313 *
                                            3314 *
                                            3315 * ....... start of rd_kafka_replyq_clear
0000214E                                    3316 @LNAME1458 DS  0H
0000214E 00000015                           3317          DC    X'00000015'
00002152 99846D9281869281                   3318          DC    C'rd_kafka_replyq_clear'
00002167 00                                 3319          DC    X'00'
                                                                                                                           Page   71 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3320 rd_kafka_replyq_clear DCCPRLG CINDEX=1458,BASER=0,FRAME=168,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1458
                                            3321          macro
                                            3322          dccextrn &m
                                            3323          gblc    &$dccext(1000)
                                            3324          gbla    &$dccexti
                                            3325          lcla    &i
                                            3326 &$dccext(&$dccexti+1) setc    '&m'
                                            3327 &i       seta    1
                                            3328 .loop    aif    (&i gt &$dccexti).around
                                            3329          aif    ('&$dccext(&i)' eq '&m').getout
                                            3330 &i       seta    &i+1
                                            3331          ago     .loop
                                            3332 .around  anop
                                            3333 &$dccexti seta &$dccexti+1
                                            3334          extrn  &m
                                            3335 .getout  anop
                                            3336          mend
00002168                                    3337+$eye0074    ds    0d                                                    02-DCCCA
00002168 C4C3C3                             3338+         dc cl3'DCC'                                                    02-DCCCA
0000216B 01                                 3339+         dc xl1'01' format one                                          02-DCCCA
0000216C 00000000                           3340+         dc a(0)                                                        02-DCCCA
00002170 0000000000000000                   3341+         dc ad(0)                                                       02-DCCCA
00002178 00000000000000A8                   3342+         dc ad(168)                                                     02-DCCCA
00002180 0000000000000000                   3343+         dc ad(0)                                                       02-DCCCA
00002188 0000000000001000                   3344+         dc ad(4096)                                                    02-DCCCA
00002190 20                                 3345+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002191 03                                 3346+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002192 03                                 3347+         dc al1(3)                                                      02-DCCCA
00002193 08                                 3348+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002194 00                                 3349+         dc bl.8'00000000'                                              02-DCCCA
00002195 000000                             3350+         dc al3(0)                                                      02-DCCCA
00002198 000000000000214E                   3351+         dc ad(@LNAME1458)                                              02-DCCCA
000021A0                                    3352+         ds 0d                                                          02-DCCCA
000021A0 0000000000002168                   3353+         dc ad($eye0074)                                                02-DCCCA
000021A8 0000000000000000                   3354+         dc ad(0)                                                       02-DCCCA
000021B0                                    3355+         ds    0d                                                       01-DCCPR
000021B0                                    3356+rd_kafka_replyq_clear ds 0d                                             01-DCCPR
000021B0                                    3357+@REGION_1458_1 ds 0h                                                    01-DCCPR
000021B0 EBEC D008 0024          00000008   3358+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3359 * ******* End of Prologue
                                            3360 * *
                                            3361 * ***      __memset(replyq,0,sizeof(*replyq));
000021B6 E3F0 1000 0004          00000000   3362          LG    15,0(0,1)
                                            3363 * setting 16 bytes to 0x00
000021BC D70F F000 F000 00000000 00000000   3364          XC    0(16,15),0(15)
                                            3365 * ***   }
000021C2                                    3366 @ret_lab_1458 DS 0H
                                            3367 * * **** Start of Epilogue
                                            3368          DCCEPIL
000021C2                                    3369+         ds 0h                                                          01-DCCEP
                                            3370+* Epilog
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3371+* Epilog
000021C2 E3E0 D008 0004          00000008   3372+         lg    14,8(,13) restore the reg                                01-DCCEP
000021C8 EB1C D020 0004          00000020   3373+         lmg   1,12,32(13)                                              01-DCCEP
000021CE 07FE                               3374+         br   14                                                        01-DCCEP
                                            3375+* End of Epilog
                                            3376 * * **** End of Epilogue
                                            3377 *
                                            3378 *   DSECT for automatic variables in "rd_kafka_replyq_clear"
                                            3379 *      (FUNCTION #1458)
                                            3380 *
00000000                00000000 000000A8   3381 @AUTO#rd_kafka_replyq_clear DSECT
00000000                                    3382          DS    XL168
                                            3383 *
000021D0                00000000 00005F80   3384 @CODE    CSECT
                                            3385 *
                                            3386 *
                                            3387 *
                                            3388 * ....... start of rd_kafka_replyq_destroy
000021D0                                    3389 @LNAME1460 DS  0H
000021D0 00000017                           3390          DC    X'00000017'
000021D4 99846D9281869281                   3391          DC    C'rd_kafka_replyq_destroy'
000021EB 00                                 3392          DC    X'00'
                                            3393 rd_kafka_replyq_destroy DCCPRLG CINDEX=1460,BASER=12,FRAME=184,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1460
                                            3394          macro
                                            3395          dccextrn &m
                                            3396          gblc    &$dccext(1000)
                                            3397          gbla    &$dccexti
                                            3398          lcla    &i
                                            3399 &$dccext(&$dccexti+1) setc    '&m'
                                            3400 &i       seta    1
                                            3401 .loop    aif    (&i gt &$dccexti).around
                                            3402          aif    ('&$dccext(&i)' eq '&m').getout
                                            3403 &i       seta    &i+1
                                            3404          ago     .loop
                                            3405 .around  anop
                                            3406 &$dccexti seta &$dccexti+1
                                            3407          extrn  &m
                                            3408 .getout  anop
                                            3409          mend
000021F0                                    3410+$eye0077    ds    0d                                                    02-DCCCA
000021F0 C4C3C3                             3411+         dc cl3'DCC'                                                    02-DCCCA
000021F3 01                                 3412+         dc xl1'01' format one                                          02-DCCCA
000021F4 00000000                           3413+         dc a(0)                                                        02-DCCCA
000021F8 0000000000002262                   3414+         dc ad(@PER_1460)                                               02-DCCCA
00002200 00000000000000B8                   3415+         dc ad(184)                                                     02-DCCCA
00002208 0000000000000000                   3416+         dc ad(0)                                                       02-DCCCA
00002210 0000000000001000                   3417+         dc ad(4096)                                                    02-DCCCA
00002218 20                                 3418+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002219 03                                 3419+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000221A 03                                 3420+         dc al1(3)                                                      02-DCCCA
0000221B 08                                 3421+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000221C 00                                 3422+         dc bl.8'00000000'                                              02-DCCCA
0000221D 000000                             3423+         dc al3(0)                                                      02-DCCCA
00002220 00000000000021D0                   3424+         dc ad(@LNAME1460)                                              02-DCCCA
00002228                                    3425+         ds 0d                                                          02-DCCCA
00002228 00000000000021F0                   3426+         dc ad($eye0077)                                                02-DCCCA
00002230 0000000000000000                   3427+         dc ad(0)                                                       02-DCCCA
00002238                                    3428+         ds    0d                                                       01-DCCPR
00002238                                    3429+rd_kafka_replyq_destroy ds 0d                                           01-DCCPR
00002238                                    3430+@REGION_1460_1 ds 0h                                                    01-DCCPR
00002238 EBEC D008 0024          00000008   3431+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000223E E3E0 D088 0004          00000088   3432+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002244 E3C0 D090 0004          00000090   3433+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000224A B904 002E                          3434+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000224E E3B0 C018 0004          00000018   3435+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002254 A7EB 00B8               000000B8   3436+         aghi  14,184              increase by frame size               01-DCCPR
00002258 E3E0 C020 0021          00000020   3437+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000225E 4720 B020               00000020   3438+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002262                                    3439+@PER_1460 ds   0h                                                       01-DCCPR
00002262 EBDE 2080 0024          00000080   3440+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002268 E3C0 2090 0024          00000090   3441+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000226E B904 00D2                          3442+         lgr   13,2                set real frame pointer               01-DCCPR
00002272 B904 00CF                          3443+         lgr   12,15               set base reg                         01-DCCPR
                        00002238            3444+         using @REGION_1460_1,12                                        01-DCCPR
                                            3445 * ******* End of Prologue
                                            3446 * *
                                            3447 * ***      if (replyq->q)
00002276 E320 1000 0004          00000000   3448          LG    2,0(0,1)    ; replyq
0000227C E3F0 2000 0002          00000000   3449          LTG   15,0(0,2)   ; replyq
00002282 4780 C06C               000022A4   3450          BZ    @L445
                                            3451 * ***         rd_kafka_q_destroy0(replyq->q, 0 );
00002286 E3F0 2000 0004          00000000   3452          LG    15,0(0,2)
0000228C E3F0 D0A8 0024          000000A8   3453          STG   15,168(0,13)
00002292 D707 D0B0 D0B0 000000B0 000000B0   3454          XC    176(8,13),176(13)
00002298 4110 D0A8               000000A8   3455          LA    1,168(0,13)
0000229C E3F0 C0D0 0004          00002308   3456          LG    15,@lit_1460_88 ; rd_kafka_q_destroy0
000022A2                                    3457 @@gen_label151 DS    0H
000022A2 05EF                               3458          BALR  14,15
000022A4                                    3459 @@gen_label152 DS    0H
000022A4                                    3460 @L445    DS    0H
                                            3461 * ***   # 772 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            3462 * ***      rd_kafka_replyq_clear(replyq);
000022A4 E320 D0A8 0024          000000A8   3463          STG   2,168(0,13)
000022AA 4110 D0A8               000000A8   3464          LA    1,168(0,13)
000022AE E3F0 C0D8 0004          00002310   3465          LG    15,@lit_1460_89 ; rd_kafka_replyq_clear
000022B4                                    3466 @@gen_label153 DS    0H
000022B4 05EF                               3467          BALR  14,15
000022B6                                    3468 @@gen_label154 DS    0H
                                            3469 * ***   }
000022B6                                    3470 @ret_lab_1460 DS 0H
                                            3471 * * **** Start of Epilogue
                                            3472          DCCEPIL
000022B6                                    3473+         ds 0h                                                          01-DCCEP
                                                                                                                           Page   74 
  Active Usings: @REGION_1460_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3474+* Epilog
000022B6 D707 D088 D088 00000088 00000088   3475+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000022BC E3D0 D080 0004          00000080   3476+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000022C2 E3C0 D090 0004          00000090   3477+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000022C8 E3B0 C018 0004          00000018   3478+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000022CE E3C0 B010 0021          00000010   3479+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000022D4 E3E0 D008 0004          00000008   3480+         lg  14,8(0,13)          load up return address                 01-DCCEP
000022DA EB1C D020 0004          00000020   3481+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000022E0 078E                               3482+         bcr 8,14                if same dsab, just return              01-DCCEP
000022E2 E3F0 D010 0024          00000010   3483+         stg 15,16(0,13)         save return code                       01-DCCEP
000022E8 E300 D018 0024          00000018   3484+         stg 0,24(0,13)          save more return code                  01-DCCEP
000022EE E3F0 D090 0004          00000090   3485+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000022F4 E3F0 F018 0004          00000018   3486+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000022FA 47F0 F040               00000040   3487+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3488+* End of Epilog
                                            3489 * * **** End of Epilogue
00002300                                    3490          DS    0D
00002300 000000B8                           3491 @FRAMESIZE_1460 DC F'184'
00002304 00000000
00002308 00000000000011A0                   3492 @lit_1460_88 DC AD(rd_kafka_q_destroy0)
00002310 00000000000021B0                   3493 @lit_1460_89 DC AD(rd_kafka_replyq_clear)
                                            3494          DROP  12
                                            3495 *
                                            3496 *   DSECT for automatic variables in "rd_kafka_replyq_destroy"
                                            3497 *      (FUNCTION #1460)
                                            3498 *
00000000                00000000 000000A8   3499 @AUTO#rd_kafka_replyq_destroy DSECT
00000000                                    3500          DS    XL168
                                            3501 *
00002318                00000000 00005F80   3502 @CODE    CSECT
                                            3503 *
                                            3504 *
                                            3505 *
                                            3506 * ....... start of rd_kafka_replyq_enq
00002318                                    3507 @LNAME1461 DS  0H
00002318 00000013                           3508          DC    X'00000013'
0000231C 99846D9281869281                   3509          DC    C'rd_kafka_replyq_enq'
0000232F 00                                 3510          DC    X'00'
                                            3511 rd_kafka_replyq_enq DCCPRLG CINDEX=1461,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1461
                                            3512          macro
                                            3513          dccextrn &m
                                            3514          gblc    &$dccext(1000)
                                            3515          gbla    &$dccexti
                                            3516          lcla    &i
                                            3517 &$dccext(&$dccexti+1) setc    '&m'
                                            3518 &i       seta    1
                                            3519 .loop    aif    (&i gt &$dccexti).around
                                            3520          aif    ('&$dccext(&i)' eq '&m').getout
                                            3521 &i       seta    &i+1
                                            3522          ago     .loop
                                            3523 .around  anop
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3524 &$dccexti seta &$dccexti+1
                                            3525          extrn  &m
                                            3526 .getout  anop
                                            3527          mend
00002330                                    3528+$eye0080    ds    0d                                                    02-DCCCA
00002330 C4C3C3                             3529+         dc cl3'DCC'                                                    02-DCCCA
00002333 01                                 3530+         dc xl1'01' format one                                          02-DCCCA
00002334 00000000                           3531+         dc a(0)                                                        02-DCCCA
00002338 00000000000023A2                   3532+         dc ad(@PER_1461)                                               02-DCCCA
00002340 00000000000000C0                   3533+         dc ad(192)                                                     02-DCCCA
00002348 0000000000000000                   3534+         dc ad(0)                                                       02-DCCCA
00002350 0000000000001000                   3535+         dc ad(4096)                                                    02-DCCCA
00002358 20                                 3536+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002359 03                                 3537+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000235A 03                                 3538+         dc al1(3)                                                      02-DCCCA
0000235B 08                                 3539+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000235C 00                                 3540+         dc bl.8'00000000'                                              02-DCCCA
0000235D 000000                             3541+         dc al3(0)                                                      02-DCCCA
00002360 0000000000002318                   3542+         dc ad(@LNAME1461)                                              02-DCCCA
00002368                                    3543+         ds 0d                                                          02-DCCCA
00002368 0000000000002330                   3544+         dc ad($eye0080)                                                02-DCCCA
00002370 0000000000000000                   3545+         dc ad(0)                                                       02-DCCCA
00002378                                    3546+         ds    0d                                                       01-DCCPR
00002378                                    3547+rd_kafka_replyq_enq ds 0d                                               01-DCCPR
00002378                                    3548+@REGION_1461_1 ds 0h                                                    01-DCCPR
00002378 EBEC D008 0024          00000008   3549+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000237E E3E0 D088 0004          00000088   3550+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002384 E3C0 D090 0004          00000090   3551+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000238A B904 002E                          3552+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000238E E3B0 C018 0004          00000018   3553+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002394 A7EB 00C0               000000C0   3554+         aghi  14,192              increase by frame size               01-DCCPR
00002398 E3E0 C020 0021          00000020   3555+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000239E 4720 B020               00000020   3556+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000023A2                                    3557+@PER_1461 ds   0h                                                       01-DCCPR
000023A2 EBDE 2080 0024          00000080   3558+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000023A8 E3C0 2090 0024          00000090   3559+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000023AE B904 00D2                          3560+         lgr   13,2                set real frame pointer               01-DCCPR
000023B2 B904 00CF                          3561+         lgr   12,15               set base reg                         01-DCCPR
                        00002378            3562+         using @REGION_1461_1,12                                        01-DCCPR
000023B6 B904 0031                          3563          LGR   3,1         ; ptr to parm area
                                            3564 * ******* End of Prologue
                                            3565 * *
                                            3566 * ***      rd_kafka_q_t *rkq = replyq->q;
000023BA E3F0 3000 0004          00000000   3567          LG    15,0(0,3)   ; replyq
000023C0 E310 3008 0004          00000008   3568          LG    1,8(0,3)    ; rko
000023C6 E320 F000 0004          00000000   3569          LG    2,0(0,15)   ; replyq
                                            3570 * ***      int r;
                                            3571 * ***
                                            3572 * ***      if (version)
000023CC E330 3014 0012          00000014   3573          LT    3,20(0,3)   ; version
000023D2 4780 C080               000023F8   3574          BZ    @L446
                                            3575 * ***         rko->rko_version = version;
                                                                                                                           Page   76 
  Active Usings: @REGION_1461_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000023D6 5030 101C               0000001C   3576          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
000023DA 47F0 C088               00002400   3577          B     @L447
000023E0                                    3578          DS    0D
000023E0 000000C0                           3579 @FRAMESIZE_1461 DC F'192'
000023E4 00000000
000023E8 0000000000001DD8                   3580 @lit_1461_92 DC AD(rd_kafka_q_enq)
000023F0 00000000000011A0                   3581 @lit_1461_93 DC AD(rd_kafka_q_destroy0)
                                            3582 * ***      else
000023F8                                    3583 @L446    DS    0H
                                            3584 * ***         rko->rko_version = replyq->version;
000023F8 5830 F008               00000008   3585          L     3,8(0,15)   ; offset of version in rd_kafka_replyq_s
000023FC 5030 101C               0000001C   3586          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
00002400                                    3587 @L447    DS    0H
                                            3588 * ***
                                            3589 * ***
                                            3590 * ***
                                            3591 * ***           replyq->q = ((void *)0);
00002400 A739 0000               00000000   3592          LGHI  3,0         ; 0
00002404 E330 F000 0024          00000000   3593          STG   3,0(0,15)   ; replyq
                                            3594 * ***
                                            3595 * ***
                                            3596 * ***   # 807 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            3597 * ***
                                            3598 * ***
                                            3599 * ***
                                            3600 * ***      r = rd_kafka_q_enq(rkq, rko);
0000240A E320 D0B0 0024          000000B0   3601          STG   2,176(0,13)
00002410 E310 D0B8 0024          000000B8   3602          STG   1,184(0,13)
00002416 4110 D0B0               000000B0   3603          LA    1,176(0,13)
0000241A E3F0 C070 0004          000023E8   3604          LG    15,@lit_1461_92 ; rd_kafka_q_enq
00002420                                    3605 @@gen_label156 DS    0H
00002420 05EF                               3606          BALR  14,15
00002422                                    3607 @@gen_label157 DS    0H
00002422 183F                               3608          LR    3,15
                                            3609 * ***
                                            3610 * ***      rd_kafka_q_destroy0(rkq, 0 );
00002424 E320 D0B0 0024          000000B0   3611          STG   2,176(0,13)
0000242A D707 D0B8 D0B8 000000B8 000000B8   3612          XC    184(8,13),184(13)
00002430 4110 D0B0               000000B0   3613          LA    1,176(0,13)
00002434 E3F0 C078 0004          000023F0   3614          LG    15,@lit_1461_93 ; rd_kafka_q_destroy0
0000243A                                    3615 @@gen_label158 DS    0H
0000243A 05EF                               3616          BALR  14,15
0000243C                                    3617 @@gen_label159 DS    0H
                                            3618 * ***
                                            3619 * ***      return r;
0000243C B914 00F3                          3620          LGFR  15,3
                                            3621 * ***   }
                                            3622 * * **** Start of Epilogue
                                            3623          DCCEPIL
00002440                                    3624+         ds 0h                                                          01-DCCEP
                                            3625+* Epilog
00002440 D707 D088 D088 00000088 00000088   3626+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page   77 
  Active Usings: @REGION_1461_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002446 E3D0 D080 0004          00000080   3627+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000244C E3C0 D090 0004          00000090   3628+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002452 E3B0 C018 0004          00000018   3629+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002458 E3C0 B010 0021          00000010   3630+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000245E E3E0 D008 0004          00000008   3631+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002464 EB1C D020 0004          00000020   3632+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000246A 078E                               3633+         bcr 8,14                if same dsab, just return              01-DCCEP
0000246C E3F0 D010 0024          00000010   3634+         stg 15,16(0,13)         save return code                       01-DCCEP
00002472 E300 D018 0024          00000018   3635+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002478 E3F0 D090 0004          00000090   3636+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000247E E3F0 F018 0004          00000018   3637+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002484 47F0 F040               00000040   3638+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3639+* End of Epilog
                                            3640 * * **** End of Epilogue
                                            3641          DROP  12
                                            3642 *
                                            3643 *   DSECT for automatic variables in "rd_kafka_replyq_enq"
                                            3644 *      (FUNCTION #1461)
                                            3645 *
00000000                00000000 000000AC   3646 @AUTO#rd_kafka_replyq_enq DSECT
00000000                                    3647          DS    XL168
000000A8                                    3648 rd_kafka_replyq_enq#r#0 DS 1F ; r
                                            3649 *
00002488                00000000 00005F80   3650 @CODE    CSECT
                                            3651 *
                                            3652 *
                                            3653 *
                                            3654 * ....... start of rd_kafka_rkt_is_lw
00002488                                    3655 @LNAME1670 DS  0H
00002488 00000012                           3656          DC    X'00000012'
0000248C 99846D9281869281                   3657          DC    C'rd_kafka_rkt_is_lw'
0000249E 00                                 3658          DC    X'00'
                                            3659 rd_kafka_rkt_is_lw DCCPRLG CINDEX=1670,BASER=12,FRAME=176,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1670
                                            3660          macro
                                            3661          dccextrn &m
                                            3662          gblc    &$dccext(1000)
                                            3663          gbla    &$dccexti
                                            3664          lcla    &i
                                            3665 &$dccext(&$dccexti+1) setc    '&m'
                                            3666 &i       seta    1
                                            3667 .loop    aif    (&i gt &$dccexti).around
                                            3668          aif    ('&$dccext(&i)' eq '&m').getout
                                            3669 &i       seta    &i+1
                                            3670          ago     .loop
                                            3671 .around  anop
                                            3672 &$dccexti seta &$dccexti+1
                                            3673          extrn  &m
                                            3674 .getout  anop
                                            3675          mend
000024A0                                    3676+$eye0083    ds    0d                                                    02-DCCCA
000024A0 C4C3C3                             3677+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   78 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000024A3 01                                 3678+         dc xl1'01' format one                                          02-DCCCA
000024A4 00000000                           3679+         dc a(0)                                                        02-DCCCA
000024A8 0000000000000000                   3680+         dc ad(0)                                                       02-DCCCA
000024B0 00000000000000B0                   3681+         dc ad(176)                                                     02-DCCCA
000024B8 0000000000000000                   3682+         dc ad(0)                                                       02-DCCCA
000024C0 0000000000001000                   3683+         dc ad(4096)                                                    02-DCCCA
000024C8 20                                 3684+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000024C9 03                                 3685+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000024CA 03                                 3686+         dc al1(3)                                                      02-DCCCA
000024CB 08                                 3687+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000024CC 00                                 3688+         dc bl.8'00000000'                                              02-DCCCA
000024CD 000000                             3689+         dc al3(0)                                                      02-DCCCA
000024D0 0000000000002488                   3690+         dc ad(@LNAME1670)                                              02-DCCCA
000024D8                                    3691+         ds 0d                                                          02-DCCCA
000024D8 00000000000024A0                   3692+         dc ad($eye0083)                                                02-DCCCA
000024E0 0000000000000000                   3693+         dc ad(0)                                                       02-DCCCA
000024E8                                    3694+         ds    0d                                                       01-DCCPR
000024E8                                    3695+rd_kafka_rkt_is_lw ds 0d                                                01-DCCPR
000024E8                                    3696+@REGION_1670_1 ds 0h                                                    01-DCCPR
000024E8 EBEC D008 0024          00000008   3697+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000024EE B904 00CF                          3698+         lgr   12,15               set base reg                         01-DCCPR
                        000024E8            3699+         using @REGION_1670_1,12                                        01-DCCPR
                                            3700 * ******* End of Prologue
                                            3701 * *
                                            3702 * ***           const rd_kafka_lwtopic_t *lrkt = ((const rd_kafka_lwto\
                                            3703 * pic_t *)app_rkt);
000024F2 E3F0 1000 0004          00000000   3704          LG    15,0(0,1)   ; app_rkt
                                            3705 * ***           return !__memcmp(lrkt->lrkt_magic,"LRKT",4);
000024F8 E310 C058 0004          00002540   3706          LG    1,@lit_1670_95
000024FE 4110 1090               00000090   3707          LA    1,144(0,1)
00002502 D503 F000 1000 00000000 00000000   3708          CLC   0(4,15),0(1)
00002508 A7F9 0001               00000001   3709          LGHI  15,1
0000250C 4720 C034               0000251C   3710          BH    @@gen_label160
00002510 4780 C030               00002518   3711          BE    @@gen_label161
00002514 A7FB FFFF               0000FFFF   3712          AGHI  15,-1
00002518                                    3713 @@gen_label161 DS 0H
00002518 A7FB FFFF               0000FFFF   3714          AGHI  15,-1
0000251C                                    3715 @@gen_label160 DS 0H
0000251C 10FF                               3716          LPR   15,15
0000251E A7FA FFFF               0000FFFF   3717          AHI   15,-1
00002522 88F0 001F               0000001F   3718          SRL   15,31(0)
00002526 E3F0 C060 0080          00002548   3719          NG    15,@lit_1670_96
                                            3720 * ***   }
                                            3721 * * **** Start of Epilogue
                                            3722          DCCEPIL
0000252C                                    3723+         ds 0h                                                          01-DCCEP
                                            3724+* Epilog
                                            3725+* Epilog
0000252C E3E0 D008 0004          00000008   3726+         lg    14,8(,13) restore the reg                                01-DCCEP
00002532 EB1C D020 0004          00000020   3727+         lmg   1,12,32(13)                                              01-DCCEP
00002538 07FE                               3728+         br   14                                                        01-DCCEP
                                            3729+* End of Epilog
                                                                                                                           Page   79 
  Active Usings: @REGION_1670_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3730 * * **** End of Epilogue
00002540                                    3731          DS    0D
00002540 000000000000635E                   3732 @lit_1670_95 DC AD(@strings@)
00002548 00000000000000FF                   3733 @lit_1670_96 DC FD'255' 0x00000000000000ff
                                            3734          DROP  12
                                            3735 *
                                            3736 *   DSECT for automatic variables in "rd_kafka_rkt_is_lw"
                                            3737 *      (FUNCTION #1670)
                                            3738 *
00000000                00000000 000000A8   3739 @AUTO#rd_kafka_rkt_is_lw DSECT
00000000                                    3740          DS    XL168
                                            3741 *
00002550                00000000 00005F80   3742 @CODE    CSECT
                                            3743 *
                                            3744 *
                                            3745 *
                                            3746 * ....... start of rd_kafka_rkt_get_lw
00002550                                    3747 @LNAME1671 DS  0H
00002550 00000013                           3748          DC    X'00000013'
00002554 99846D9281869281                   3749          DC    C'rd_kafka_rkt_get_lw'
00002567 00                                 3750          DC    X'00'
                                            3751 rd_kafka_rkt_get_lw DCCPRLG CINDEX=1671,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1671
                                            3752          macro
                                            3753          dccextrn &m
                                            3754          gblc    &$dccext(1000)
                                            3755          gbla    &$dccexti
                                            3756          lcla    &i
                                            3757 &$dccext(&$dccexti+1) setc    '&m'
                                            3758 &i       seta    1
                                            3759 .loop    aif    (&i gt &$dccexti).around
                                            3760          aif    ('&$dccext(&i)' eq '&m').getout
                                            3761 &i       seta    &i+1
                                            3762          ago     .loop
                                            3763 .around  anop
                                            3764 &$dccexti seta &$dccexti+1
                                            3765          extrn  &m
                                            3766 .getout  anop
                                            3767          mend
00002568                                    3768+$eye0086    ds    0d                                                    02-DCCCA
00002568 C4C3C3                             3769+         dc cl3'DCC'                                                    02-DCCCA
0000256B 01                                 3770+         dc xl1'01' format one                                          02-DCCCA
0000256C 00000000                           3771+         dc a(0)                                                        02-DCCCA
00002570 00000000000025DA                   3772+         dc ad(@PER_1671)                                               02-DCCCA
00002578 00000000000000B0                   3773+         dc ad(176)                                                     02-DCCCA
00002580 0000000000000000                   3774+         dc ad(0)                                                       02-DCCCA
00002588 0000000000001000                   3775+         dc ad(4096)                                                    02-DCCCA
00002590 20                                 3776+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002591 03                                 3777+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002592 03                                 3778+         dc al1(3)                                                      02-DCCCA
00002593 08                                 3779+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002594 00                                 3780+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   80 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002595 000000                             3781+         dc al3(0)                                                      02-DCCCA
00002598 0000000000002550                   3782+         dc ad(@LNAME1671)                                              02-DCCCA
000025A0                                    3783+         ds 0d                                                          02-DCCCA
000025A0 0000000000002568                   3784+         dc ad($eye0086)                                                02-DCCCA
000025A8 0000000000000000                   3785+         dc ad(0)                                                       02-DCCCA
000025B0                                    3786+         ds    0d                                                       01-DCCPR
000025B0                                    3787+rd_kafka_rkt_get_lw ds 0d                                               01-DCCPR
000025B0                                    3788+@REGION_1671_1 ds 0h                                                    01-DCCPR
000025B0 EBEC D008 0024          00000008   3789+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000025B6 E3E0 D088 0004          00000088   3790+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000025BC E3C0 D090 0004          00000090   3791+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000025C2 B904 002E                          3792+         lgr   2,14                copy addr of our savearea            01-DCCPR
000025C6 E3B0 C018 0004          00000018   3793+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000025CC A7EB 00B0               000000B0   3794+         aghi  14,176              increase by frame size               01-DCCPR
000025D0 E3E0 C020 0021          00000020   3795+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000025D6 4720 B020               00000020   3796+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000025DA                                    3797+@PER_1671 ds   0h                                                       01-DCCPR
000025DA EBDE 2080 0024          00000080   3798+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000025E0 E3C0 2090 0024          00000090   3799+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000025E6 B904 00D2                          3800+         lgr   13,2                set real frame pointer               01-DCCPR
000025EA B904 00CF                          3801+         lgr   12,15               set base reg                         01-DCCPR
                        000025B0            3802+         using @REGION_1671_1,12                                        01-DCCPR
000025EE B904 0021                          3803          LGR   2,1         ; ptr to parm area
                                            3804 * ******* End of Prologue
                                            3805 * *
                                            3806 * ***           if (rd_kafka_rkt_is_lw(rkt))
000025F2 E3F0 2000 0004          00000000   3807          LG    15,0(0,2)   ; rkt
000025F8 E3F0 D0A8 0024          000000A8   3808          STG   15,168(0,13)
000025FE 4110 D0A8               000000A8   3809          LA    1,168(0,13)
00002602 E3F0 C078 0004          00002628   3810          LG    15,@lit_1671_97 ; rd_kafka_rkt_is_lw
00002608                                    3811 @@gen_label162 DS    0H
00002608 05EF                               3812          BALR  14,15
0000260A                                    3813 @@gen_label163 DS    0H
0000260A C0FB 0000 00FF                     3814          NILF  15,X'000000FF'
00002610 12FF                               3815          LTR   15,15
00002612 4780 C080               00002630   3816          BZ    @L555
                                            3817 * ***                   return ((rd_kafka_lwtopic_t *)rkt);
00002616 E3F0 2000 0004          00000000   3818          LG    15,0(0,2)   ; rkt
0000261C 47F0 C084               00002634   3819          B     @ret_lab_1671
00002620                                    3820          DS    0D
00002620 000000B0                           3821 @FRAMESIZE_1671 DC F'176'
00002624 00000000
00002628 00000000000024E8                   3822 @lit_1671_97 DC AD(rd_kafka_rkt_is_lw)
00002630                                    3823 @L555    DS    0H
                                            3824 * ***           return ((void *)0);
00002630 A7F9 0000               00000000   3825          LGHI  15,0        ; 0
                                            3826 * ***   }
00002634                                    3827 @ret_lab_1671 DS 0H
                                            3828 * * **** Start of Epilogue
                                            3829          DCCEPIL
00002634                                    3830+         ds 0h                                                          01-DCCEP
                                            3831+* Epilog
                                                                                                                           Page   81 
  Active Usings: @REGION_1671_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002634 D707 D088 D088 00000088 00000088   3832+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000263A E3D0 D080 0004          00000080   3833+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002640 E3C0 D090 0004          00000090   3834+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002646 E3B0 C018 0004          00000018   3835+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000264C E3C0 B010 0021          00000010   3836+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002652 E3E0 D008 0004          00000008   3837+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002658 EB1C D020 0004          00000020   3838+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000265E 078E                               3839+         bcr 8,14                if same dsab, just return              01-DCCEP
00002660 E3F0 D010 0024          00000010   3840+         stg 15,16(0,13)         save return code                       01-DCCEP
00002666 E300 D018 0024          00000018   3841+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000266C E3F0 D090 0004          00000090   3842+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002672 E3F0 F018 0004          00000018   3843+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002678 47F0 F040               00000040   3844+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3845+* End of Epilog
                                            3846 * * **** End of Epilogue
                                            3847          DROP  12
                                            3848 *
                                            3849 *   DSECT for automatic variables in "rd_kafka_rkt_get_lw"
                                            3850 *      (FUNCTION #1671)
                                            3851 *
00000000                00000000 000000A8   3852 @AUTO#rd_kafka_rkt_get_lw DSECT
00000000                                    3853          DS    XL168
                                            3854 *
0000267C                00000000 00005F80   3855 @CODE    CSECT
                                            3856 *
                                            3857 *
                                            3858 *
                                            3859 * ....... start of rd_kafka_topic_destroy0
0000267C                                    3860 @LNAME1678 DS  0H
0000267C 00000017                           3861          DC    X'00000017'
00002680 99846D9281869281                   3862          DC    C'rd_kafka_topic_destroy0'
00002697 00                                 3863          DC    X'00'
                                            3864 rd_kafka_topic_destroy0 DCCPRLG CINDEX=1678,BASER=12,FRAME=184,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1678
                                            3865          macro
                                            3866          dccextrn &m
                                            3867          gblc    &$dccext(1000)
                                            3868          gbla    &$dccexti
                                            3869          lcla    &i
                                            3870 &$dccext(&$dccexti+1) setc    '&m'
                                            3871 &i       seta    1
                                            3872 .loop    aif    (&i gt &$dccexti).around
                                            3873          aif    ('&$dccext(&i)' eq '&m').getout
                                            3874 &i       seta    &i+1
                                            3875          ago     .loop
                                            3876 .around  anop
                                            3877 &$dccexti seta &$dccexti+1
                                            3878          extrn  &m
                                            3879 .getout  anop
                                            3880          mend
00002698                                    3881+$eye0089    ds    0d                                                    02-DCCCA
00002698 C4C3C3                             3882+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   82 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000269B 01                                 3883+         dc xl1'01' format one                                          02-DCCCA
0000269C 00000000                           3884+         dc a(0)                                                        02-DCCCA
000026A0 000000000000270A                   3885+         dc ad(@PER_1678)                                               02-DCCCA
000026A8 00000000000000B8                   3886+         dc ad(184)                                                     02-DCCCA
000026B0 0000000000000000                   3887+         dc ad(0)                                                       02-DCCCA
000026B8 0000000000001000                   3888+         dc ad(4096)                                                    02-DCCCA
000026C0 20                                 3889+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000026C1 03                                 3890+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000026C2 03                                 3891+         dc al1(3)                                                      02-DCCCA
000026C3 08                                 3892+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000026C4 00                                 3893+         dc bl.8'00000000'                                              02-DCCCA
000026C5 000000                             3894+         dc al3(0)                                                      02-DCCCA
000026C8 000000000000267C                   3895+         dc ad(@LNAME1678)                                              02-DCCCA
000026D0                                    3896+         ds 0d                                                          02-DCCCA
000026D0 0000000000002698                   3897+         dc ad($eye0089)                                                02-DCCCA
000026D8 0000000000000000                   3898+         dc ad(0)                                                       02-DCCCA
000026E0                                    3899+         ds    0d                                                       01-DCCPR
000026E0                                    3900+rd_kafka_topic_destroy0 ds 0d                                           01-DCCPR
000026E0                                    3901+@REGION_1678_1 ds 0h                                                    01-DCCPR
000026E0 EBEC D008 0024          00000008   3902+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000026E6 E3E0 D088 0004          00000088   3903+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000026EC E3C0 D090 0004          00000090   3904+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000026F2 B904 002E                          3905+         lgr   2,14                copy addr of our savearea            01-DCCPR
000026F6 E3B0 C018 0004          00000018   3906+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000026FC A7EB 00B8               000000B8   3907+         aghi  14,184              increase by frame size               01-DCCPR
00002700 E3E0 C020 0021          00000020   3908+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002706 4720 B020               00000020   3909+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000270A                                    3910+@PER_1678 ds   0h                                                       01-DCCPR
0000270A EBDE 2080 0024          00000080   3911+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002710 E3C0 2090 0024          00000090   3912+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002716 B904 00D2                          3913+         lgr   13,2                set real frame pointer               01-DCCPR
0000271A B904 00CF                          3914+         lgr   12,15               set base reg                         01-DCCPR
                        000026E0            3915+         using @REGION_1678_1,12                                        01-DCCPR
                                            3916 * ******* End of Prologue
                                            3917 * *
0000271E E320 1000 0004          00000000   3918          LG    2,0(0,1)    ; rkt
                                            3919 * ***           rd_kafka_lwtopic_t *lrkt;
                                            3920 * ***           if ((((lrkt = rd_kafka_rkt_get_lw(rkt)) != ((void *)0)\
                                            3921 * )))
00002724 E320 D0B0 0024          000000B0   3922          STG   2,176(0,13)
0000272A 4110 D0B0               000000B0   3923          LA    1,176(0,13)
0000272E E3F0 C080 0004          00002760   3924          LG    15,@lit_1678_100 ; rd_kafka_rkt_get_lw
00002734                                    3925 @@gen_label165 DS    0H
00002734 05EF                               3926          BALR  14,15
00002736                                    3927 @@gen_label166 DS    0H
00002736 B902 001F                          3928          LTGR  1,15
0000273A 4780 C0A0               00002780   3929          BE    @L558
                                            3930 * ***                   rd_kafka_lwtopic_destroy(lrkt);
0000273E E3F0 D0B0 0024          000000B0   3931          STG   15,176(0,13)
00002744 4110 D0B0               000000B0   3932          LA    1,176(0,13)
00002748 E3F0 C088 0004          00002768   3933          LG    15,@lit_1678_101 ; rd_kafka_lwtopic_destroy
0000274E                                    3934 @@gen_label168 DS    0H
                                                                                                                           Page   83 
  Active Usings: @REGION_1678_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000274E 05EF                               3935          BALR  14,15
00002750                                    3936 @@gen_label169 DS    0H
00002750 47F0 C0CE               000027AE   3937          B     @L559
00002758                                    3938          DS    0D
00002758 000000B8                           3939 @FRAMESIZE_1678 DC F'184'
0000275C 00000000
00002760 00000000000025B0                   3940 @lit_1678_100 DC AD(rd_kafka_rkt_get_lw)
00002768 0000000000000000                   3941 @lit_1678_101 DC AD(rd_kafka_lwtopic_destroy)
00002770 0000000000000948                   3942 @lit_1678_102 DC AD(rd_refcnt_sub0)
00002778 0000000000000000                   3943 @lit_1678_103 DC AD(rd_kafka_topic_destroy_final)
                                            3944 * ***           else if (((rd_refcnt_sub0(&rkt->rkt_refcnt) == 0)))
00002780                                    3945 @L558    DS    0H
00002780 41F0 2018               00000018   3946          LA    15,24(0,2)
00002784 E3F0 D0B0 0024          000000B0   3947          STG   15,176(0,13)
0000278A 4110 D0B0               000000B0   3948          LA    1,176(0,13)
0000278E E3F0 C090 0004          00002770   3949          LG    15,@lit_1678_102 ; rd_refcnt_sub0
00002794                                    3950 @@gen_label170 DS    0H
00002794 05EF                               3951          BALR  14,15
00002796                                    3952 @@gen_label171 DS    0H
00002796 12FF                               3953          LTR   15,15
00002798 4770 C0CE               000027AE   3954          BNE   @L559
                                            3955 * ***                   rd_kafka_topic_destroy_final(rkt);
0000279C E320 D0B0 0024          000000B0   3956          STG   2,176(0,13)
000027A2 4110 D0B0               000000B0   3957          LA    1,176(0,13)
000027A6 E3F0 C098 0004          00002778   3958          LG    15,@lit_1678_103 ; rd_kafka_topic_destroy_final
000027AC                                    3959 @@gen_label173 DS    0H
000027AC 05EF                               3960          BALR  14,15
000027AE                                    3961 @@gen_label174 DS    0H
000027AE                                    3962 @L560    DS    0H
                                            3963 * ***   }
000027AE                                    3964 @L559    DS    0H
000027AE                                    3965 @ret_lab_1678 DS 0H
                                            3966 * * **** Start of Epilogue
                                            3967          DCCEPIL
000027AE                                    3968+         ds 0h                                                          01-DCCEP
                                            3969+* Epilog
000027AE D707 D088 D088 00000088 00000088   3970+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000027B4 E3D0 D080 0004          00000080   3971+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000027BA E3C0 D090 0004          00000090   3972+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000027C0 E3B0 C018 0004          00000018   3973+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000027C6 E3C0 B010 0021          00000010   3974+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000027CC E3E0 D008 0004          00000008   3975+         lg  14,8(0,13)          load up return address                 01-DCCEP
000027D2 EB1C D020 0004          00000020   3976+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000027D8 078E                               3977+         bcr 8,14                if same dsab, just return              01-DCCEP
000027DA E3F0 D010 0024          00000010   3978+         stg 15,16(0,13)         save return code                       01-DCCEP
000027E0 E300 D018 0024          00000018   3979+         stg 0,24(0,13)          save more return code                  01-DCCEP
000027E6 E3F0 D090 0004          00000090   3980+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000027EC E3F0 F018 0004          00000018   3981+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000027F2 47F0 F040               00000040   3982+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3983+* End of Epilog
                                            3984 * * **** End of Epilogue
                                            3985          DROP  12
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3986 *
                                            3987 *   DSECT for automatic variables in "rd_kafka_topic_destroy0"
                                            3988 *      (FUNCTION #1678)
                                            3989 *
00000000                00000000 000000A8   3990 @AUTO#rd_kafka_topic_destroy0 DSECT
00000000                                    3991          DS    XL168
                                            3992 *
000027F6                00000000 00005F80   3993 @CODE    CSECT
                                            3994 *
                                            3995 *
                                            3996 *
                                            3997 * ....... start of rd_kafka_toppar_keep0
000027F6                                    3998 @LNAME1780 DS  0H
000027F6 00000015                           3999          DC    X'00000015'
000027FA 99846D9281869281                   4000          DC    C'rd_kafka_toppar_keep0'
0000280F 00                                 4001          DC    X'00'
                                            4002 rd_kafka_toppar_keep0 DCCPRLG CINDEX=1780,BASER=12,FRAME=184,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1780
                                            4003          macro
                                            4004          dccextrn &m
                                            4005          gblc    &$dccext(1000)
                                            4006          gbla    &$dccexti
                                            4007          lcla    &i
                                            4008 &$dccext(&$dccexti+1) setc    '&m'
                                            4009 &i       seta    1
                                            4010 .loop    aif    (&i gt &$dccexti).around
                                            4011          aif    ('&$dccext(&i)' eq '&m').getout
                                            4012 &i       seta    &i+1
                                            4013          ago     .loop
                                            4014 .around  anop
                                            4015 &$dccexti seta &$dccexti+1
                                            4016          extrn  &m
                                            4017 .getout  anop
                                            4018          mend
00002810                                    4019+$eye0092    ds    0d                                                    02-DCCCA
00002810 C4C3C3                             4020+         dc cl3'DCC'                                                    02-DCCCA
00002813 01                                 4021+         dc xl1'01' format one                                          02-DCCCA
00002814 00000000                           4022+         dc a(0)                                                        02-DCCCA
00002818 0000000000002882                   4023+         dc ad(@PER_1780)                                               02-DCCCA
00002820 00000000000000B8                   4024+         dc ad(184)                                                     02-DCCCA
00002828 0000000000000000                   4025+         dc ad(0)                                                       02-DCCCA
00002830 0000000000001000                   4026+         dc ad(4096)                                                    02-DCCCA
00002838 20                                 4027+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002839 03                                 4028+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000283A 03                                 4029+         dc al1(3)                                                      02-DCCCA
0000283B 08                                 4030+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000283C 00                                 4031+         dc bl.8'00000000'                                              02-DCCCA
0000283D 000000                             4032+         dc al3(0)                                                      02-DCCCA
00002840 00000000000027F6                   4033+         dc ad(@LNAME1780)                                              02-DCCCA
00002848                                    4034+         ds 0d                                                          02-DCCCA
00002848 0000000000002810                   4035+         dc ad($eye0092)                                                02-DCCCA
00002850 0000000000000000                   4036+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   85 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002858                                    4037+         ds    0d                                                       01-DCCPR
00002858                                    4038+rd_kafka_toppar_keep0 ds 0d                                             01-DCCPR
00002858                                    4039+@REGION_1780_1 ds 0h                                                    01-DCCPR
00002858 EBEC D008 0024          00000008   4040+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000285E E3E0 D088 0004          00000088   4041+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002864 E3C0 D090 0004          00000090   4042+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000286A B904 002E                          4043+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000286E E3B0 C018 0004          00000018   4044+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002874 A7EB 00B8               000000B8   4045+         aghi  14,184              increase by frame size               01-DCCPR
00002878 E3E0 C020 0021          00000020   4046+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000287E 4720 B020               00000020   4047+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002882                                    4048+@PER_1780 ds   0h                                                       01-DCCPR
00002882 EBDE 2080 0024          00000080   4049+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002888 E3C0 2090 0024          00000090   4050+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000288E B904 00D2                          4051+         lgr   13,2                set real frame pointer               01-DCCPR
00002892 B904 00CF                          4052+         lgr   12,15               set base reg                         01-DCCPR
                        00002858            4053+         using @REGION_1780_1,12                                        01-DCCPR
                                            4054 * ******* End of Prologue
                                            4055 * *
                                            4056 * ***           rd_atomic32_add(&rktp->rktp_refcnt, 1);
00002896 E320 1010 0004          00000010   4057          LG    2,16(0,1)   ; rktp
0000289C 41F0 2090               00000090   4058          LA    15,144(0,2)
000028A0 E3F0 D0A8 0024          000000A8   4059          STG   15,168(0,13)
000028A6 E548 D0B0 0001          000000B0   4060          MVGHI 176(13),1
000028AC 4110 D0A8               000000A8   4061          LA    1,168(0,13)
000028B0 E3F0 C0B8 0004          00002910   4062          LG    15,@lit_1780_105 ; rd_atomic32_add
000028B6                                    4063 @@gen_label175 DS    0H
000028B6 05EF                               4064          BALR  14,15
000028B8                                    4065 @@gen_label176 DS    0H
                                            4066 * ***           return rktp;
000028B8 B904 00F2                          4067          LGR   15,2
                                            4068 * ***   }
                                            4069 * * **** Start of Epilogue
                                            4070          DCCEPIL
000028BC                                    4071+         ds 0h                                                          01-DCCEP
                                            4072+* Epilog
000028BC D707 D088 D088 00000088 00000088   4073+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000028C2 E3D0 D080 0004          00000080   4074+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000028C8 E3C0 D090 0004          00000090   4075+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000028CE E3B0 C018 0004          00000018   4076+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000028D4 E3C0 B010 0021          00000010   4077+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000028DA E3E0 D008 0004          00000008   4078+         lg  14,8(0,13)          load up return address                 01-DCCEP
000028E0 EB1C D020 0004          00000020   4079+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000028E6 078E                               4080+         bcr 8,14                if same dsab, just return              01-DCCEP
000028E8 E3F0 D010 0024          00000010   4081+         stg 15,16(0,13)         save return code                       01-DCCEP
000028EE E300 D018 0024          00000018   4082+         stg 0,24(0,13)          save more return code                  01-DCCEP
000028F4 E3F0 D090 0004          00000090   4083+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000028FA E3F0 F018 0004          00000018   4084+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002900 47F0 F040               00000040   4085+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4086+* End of Epilog
                                            4087 * * **** End of Epilogue
00002908                                    4088          DS    0D
                                                                                                                           Page   86 
  Active Usings: @REGION_1780_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002908 000000B8                           4089 @FRAMESIZE_1780 DC F'184'
0000290C 00000000
00002910 0000000000000060                   4090 @lit_1780_105 DC AD(rd_atomic32_add)
                                            4091          DROP  12
                                            4092 *
                                            4093 *   DSECT for automatic variables in "rd_kafka_toppar_keep0"
                                            4094 *      (FUNCTION #1780)
                                            4095 *
00000000                00000000 000000A8   4096 @AUTO#rd_kafka_toppar_keep0 DSECT
00000000                                    4097          DS    XL168
                                            4098 *
00002918                00000000 00005F80   4099 @CODE    CSECT
                                            4100 *
                                            4101 *
                                            4102 *
                                            4103 * ....... start of rd_kafka_offset_store0
00002918                                    4104 @LNAME1918 DS  0H
00002918 00000016                           4105          DC    X'00000016'
0000291C 99846D9281869281                   4106          DC    C'rd_kafka_offset_store0'
00002932 00                                 4107          DC    X'00'
                                            4108 rd_kafka_offset_store0 DCCPRLG CINDEX=1918,BASER=12,FRAME=176,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1918
                                            4109          macro
                                            4110          dccextrn &m
                                            4111          gblc    &$dccext(1000)
                                            4112          gbla    &$dccexti
                                            4113          lcla    &i
                                            4114 &$dccext(&$dccexti+1) setc    '&m'
                                            4115 &i       seta    1
                                            4116 .loop    aif    (&i gt &$dccexti).around
                                            4117          aif    ('&$dccext(&i)' eq '&m').getout
                                            4118 &i       seta    &i+1
                                            4119          ago     .loop
                                            4120 .around  anop
                                            4121 &$dccexti seta &$dccexti+1
                                            4122          extrn  &m
                                            4123 .getout  anop
                                            4124          mend
00002938                                    4125+$eye0095    ds    0d                                                    02-DCCCA
00002938 C4C3C3                             4126+         dc cl3'DCC'                                                    02-DCCCA
0000293B 01                                 4127+         dc xl1'01' format one                                          02-DCCCA
0000293C 00000000                           4128+         dc a(0)                                                        02-DCCCA
00002940 00000000000029AA                   4129+         dc ad(@PER_1918)                                               02-DCCCA
00002948 00000000000000B0                   4130+         dc ad(176)                                                     02-DCCCA
00002950 0000000000000000                   4131+         dc ad(0)                                                       02-DCCCA
00002958 0000000000001000                   4132+         dc ad(4096)                                                    02-DCCCA
00002960 20                                 4133+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002961 03                                 4134+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002962 03                                 4135+         dc al1(3)                                                      02-DCCCA
00002963 08                                 4136+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002964 00                                 4137+         dc bl.8'00000000'                                              02-DCCCA
00002965 000000                             4138+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   87 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002968 0000000000002918                   4139+         dc ad(@LNAME1918)                                              02-DCCCA
00002970                                    4140+         ds 0d                                                          02-DCCCA
00002970 0000000000002938                   4141+         dc ad($eye0095)                                                02-DCCCA
00002978 0000000000000000                   4142+         dc ad(0)                                                       02-DCCCA
00002980                                    4143+         ds    0d                                                       01-DCCPR
00002980                                    4144+rd_kafka_offset_store0 ds 0d                                            01-DCCPR
00002980                                    4145+@REGION_1918_1 ds 0h                                                    01-DCCPR
00002980 EBEC D008 0024          00000008   4146+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002986 E3E0 D088 0004          00000088   4147+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000298C E3C0 D090 0004          00000090   4148+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002992 B904 002E                          4149+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002996 E3B0 C018 0004          00000018   4150+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000299C A7EB 00B0               000000B0   4151+         aghi  14,176              increase by frame size               01-DCCPR
000029A0 E3E0 C020 0021          00000020   4152+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000029A6 4720 B020               00000020   4153+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000029AA                                    4154+@PER_1918 ds   0h                                                       01-DCCPR
000029AA EBDE 2080 0024          00000080   4155+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000029B0 E3C0 2090 0024          00000090   4156+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000029B6 B904 00D2                          4157+         lgr   13,2                set real frame pointer               01-DCCPR
000029BA B904 00CF                          4158+         lgr   12,15               set base reg                         01-DCCPR
                        00002980            4159+         using @REGION_1918_1,12                                        01-DCCPR
000029BE B904 0031                          4160          LGR   3,1         ; ptr to parm area
                                            4161 * ******* End of Prologue
                                            4162 * *
                                            4163 * ***      if (lock)
000029C2 E320 3000 0004          00000000   4164          LG    2,0(0,3)    ; rktp
000029C8 E340 3014 0012          00000014   4165          LT    4,20(0,3)   ; lock
000029CE 4780 C068               000029E8   4166          BZ    @L630
                                            4167 * ***         mtx_lock(&(rktp)->rktp_lock);
000029D2 41F0 20C0               000000C0   4168          LA    15,192(0,2)
000029D6 E3F0 D0A8 0024          000000A8   4169          STG   15,168(0,13)
000029DC 4110 D0A8               000000A8   4170          LA    1,168(0,13)
000029E0 E3F0 C0E0 0004          00002A60   4171          LG    15,@lit_1918_107 ; mtx_lock
000029E6                                    4172 @@gen_label178 DS    0H
000029E6 05EF                               4173          BALR  14,15
000029E8                                    4174 @@gen_label179 DS    0H
000029E8                                    4175 @L630    DS    0H
                                            4176 * ***      rktp->rktp_stored_offset = offset;
000029E8 E3F0 3008 0004          00000008   4177          LG    15,8(0,3)   ; offset
000029EE E3F0 2218 0024          00000218   4178          STG   15,536(0,2) ; offset of rktp_stored_offset in rd_kafka_t*
                                                                oppar_s
                                            4179 * ***      if (lock)
000029F4 1244                               4180          LTR   4,4
000029F6 4780 C090               00002A10   4181          BZ    @ret_lab_1918
                                            4182 * ***         mtx_unlock(&(rktp)->rktp_lock);
000029FA 41F0 20C0               000000C0   4183          LA    15,192(0,2)
000029FE E3F0 D0A8 0024          000000A8   4184          STG   15,168(0,13)
00002A04 4110 D0A8               000000A8   4185          LA    1,168(0,13)
00002A08 E3F0 C0E8 0004          00002A68   4186          LG    15,@lit_1918_108 ; mtx_unlock
00002A0E                                    4187 @@gen_label181 DS    0H
00002A0E 05EF                               4188          BALR  14,15
00002A10                                    4189 @@gen_label182 DS    0H
                                                                                                                           Page   88 
  Active Usings: @REGION_1918_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002A10                                    4190 @L631    DS    0H
                                            4191 * ***   }
00002A10                                    4192 @ret_lab_1918 DS 0H
                                            4193 * * **** Start of Epilogue
                                            4194          DCCEPIL
00002A10                                    4195+         ds 0h                                                          01-DCCEP
                                            4196+* Epilog
00002A10 D707 D088 D088 00000088 00000088   4197+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002A16 E3D0 D080 0004          00000080   4198+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002A1C E3C0 D090 0004          00000090   4199+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002A22 E3B0 C018 0004          00000018   4200+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002A28 E3C0 B010 0021          00000010   4201+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002A2E E3E0 D008 0004          00000008   4202+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002A34 EB1C D020 0004          00000020   4203+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002A3A 078E                               4204+         bcr 8,14                if same dsab, just return              01-DCCEP
00002A3C E3F0 D010 0024          00000010   4205+         stg 15,16(0,13)         save return code                       01-DCCEP
00002A42 E300 D018 0024          00000018   4206+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002A48 E3F0 D090 0004          00000090   4207+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002A4E E3F0 F018 0004          00000018   4208+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002A54 47F0 F040               00000040   4209+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4210+* End of Epilog
                                            4211 * * **** End of Epilogue
00002A58                                    4212          DS    0D
00002A58 000000B0                           4213 @FRAMESIZE_1918 DC F'176'
00002A5C 00000000
00002A60 0000000000000000                   4214 @lit_1918_107 DC AD(mtx_lock)
00002A68 0000000000000000                   4215 @lit_1918_108 DC AD(mtx_unlock)
                                            4216          DROP  12
                                            4217 *
                                            4218 *   DSECT for automatic variables in "rd_kafka_offset_store0"
                                            4219 *      (FUNCTION #1918)
                                            4220 *
00000000                00000000 000000A8   4221 @AUTO#rd_kafka_offset_store0 DSECT
00000000                                    4222          DS    XL168
                                            4223 *
00002A70                00000000 00005F80   4224 @CODE    CSECT
                                            4225 *
                                            4226 *
                                            4227 *
                                            4228 * ....... start of rd_kafka_op2str
                                            4229 rd_kafka_op2str ALIAS X'99846D92818692816D9697F2A2A399'
00002A70                                    4230 @LNAME1403 DS  0H
00002A70 0000000F                           4231          DC    X'0000000F'
00002A74 99846D9281869281                   4232          DC    C'rd_kafka_op2str'
00002A83 00                                 4233          DC    X'00'
                                            4234 rd_kafka_op2str DCCPRLG CINDEX=1403,BASER=12,FRAME=208,ENTRY=YES,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1403
                                            4235          macro
                                            4236          dccextrn &m
                                            4237          gblc    &$dccext(1000)
                                            4238          gbla    &$dccexti
                                            4239          lcla    &i
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4240 &$dccext(&$dccexti+1) setc    '&m'
                                            4241 &i       seta    1
                                            4242 .loop    aif    (&i gt &$dccexti).around
                                            4243          aif    ('&$dccext(&i)' eq '&m').getout
                                            4244 &i       seta    &i+1
                                            4245          ago     .loop
                                            4246 .around  anop
                                            4247 &$dccexti seta &$dccexti+1
                                            4248          extrn  &m
                                            4249 .getout  anop
                                            4250          mend
00002A88                                    4251+$eye0098    ds    0d                                                    02-DCCCA
00002A88 C4C3C3                             4252+         dc cl3'DCC'                                                    02-DCCCA
00002A8B 01                                 4253+         dc xl1'01' format one                                          02-DCCCA
00002A8C 00000000                           4254+         dc a(0)                                                        02-DCCCA
00002A90 0000000000002AFA                   4255+         dc ad(@PER_1403)                                               02-DCCCA
00002A98 00000000000000D0                   4256+         dc ad(208)                                                     02-DCCCA
00002AA0 0000000000000000                   4257+         dc ad(0)                                                       02-DCCCA
00002AA8 0000000000001000                   4258+         dc ad(4096)                                                    02-DCCCA
00002AB0 20                                 4259+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002AB1 03                                 4260+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002AB2 03                                 4261+         dc al1(3)                                                      02-DCCCA
00002AB3 08                                 4262+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002AB4 00                                 4263+         dc bl.8'00000000'                                              02-DCCCA
00002AB5 000000                             4264+         dc al3(0)                                                      02-DCCCA
00002AB8 0000000000002A70                   4265+         dc ad(@LNAME1403)                                              02-DCCCA
00002AC0                                    4266+         ds 0d                                                          02-DCCCA
00002AC0 0000000000002A88                   4267+         dc ad($eye0098)                                                02-DCCCA
00002AC8 0000000000000000                   4268+         dc ad(0)                                                       02-DCCCA
00002AD0                                    4269+         ds    0d                                                       01-DCCPR
                                            4270+         entry rd_kafka_op2str                                          01-DCCPR
00002AD0                                    4271+rd_kafka_op2str ds 0d                                                   01-DCCPR
00002AD0                                    4272+@REGION_1403_1 ds 0h                                                    01-DCCPR
00002AD0 EBEC D008 0024          00000008   4273+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002AD6 E3E0 D088 0004          00000088   4274+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002ADC E3C0 D090 0004          00000090   4275+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002AE2 B904 002E                          4276+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002AE6 E3B0 C018 0004          00000018   4277+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002AEC A7EB 00D0               000000D0   4278+         aghi  14,208              increase by frame size               01-DCCPR
00002AF0 E3E0 C020 0021          00000020   4279+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002AF6 4720 B020               00000020   4280+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002AFA                                    4281+@PER_1403 ds   0h                                                       01-DCCPR
00002AFA EBDE 2080 0024          00000080   4282+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002B00 E3C0 2090 0024          00000090   4283+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002B06 B904 00D2                          4284+         lgr   13,2                set real frame pointer               01-DCCPR
00002B0A B904 00CF                          4285+         lgr   12,15               set base reg                         01-DCCPR
                        00002AD0            4286+         using @REGION_1403_1,12                                        01-DCCPR
                                            4287          DCCPRV REG=15     ; Get PRV from DVT
00002B0E E3F0 B008 0004          00000008   4288+         LG 15,8(0,11)                                                  01-DCCPR
                                            4289 * ******* End of Prologue
                                            4290 * *
                                            4291 * ***           int skiplen = 6;
                                                                                                                           Page   90 
  Active Usings: @REGION_1403_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002B14 5830 1004               00000004   4292          L     3,4(0,1)    ; type
00002B18 A728 0006               00000006   4293          LHI   2,6         ; 6
                                            4294 * ***           static const char *names[RD_KAFKA_OP__END] = {
                                            4295 * ***                   [RD_KAFKA_OP_NONE] = "REPLY:NONE",
                                            4296 * ***                   [RD_KAFKA_OP_FETCH] = "REPLY:FETCH",
                                            4297 * ***                   [RD_KAFKA_OP_ERR] = "REPLY:ERR",
                                            4298 * ***                   [RD_KAFKA_OP_CONSUMER_ERR] = "REPLY:CONSUMER_E\
                                            4299 * RR",
                                            4300 * ***                   [RD_KAFKA_OP_DR] = "REPLY:DR",
                                            4301 * ***                   [RD_KAFKA_OP_STATS] = "REPLY:STATS",
                                            4302 * ***                   [RD_KAFKA_OP_OFFSET_COMMIT] = "REPLY:OFFSET_CO\
                                            4303 * MMIT",
                                            4304 * ***                   [RD_KAFKA_OP_NODE_UPDATE] = "REPLY:NODE_UPDATE\
                                            4305 * ",
                                            4306 * ***                   [RD_KAFKA_OP_XMIT_BUF] = "REPLY:XMIT_BUF",
                                            4307 * ***                   [RD_KAFKA_OP_RECV_BUF] = "REPLY:RECV_BUF",
                                            4308 * ***                   [RD_KAFKA_OP_XMIT_RETRY] = "REPLY:XMIT_RETRY",
                                            4309 * ***                   [RD_KAFKA_OP_FETCH_START] = "REPLY:FETCH_START\
                                            4310 * ",
                                            4311 * ***                   [RD_KAFKA_OP_FETCH_STOP] = "REPLY:FETCH_STOP",
                                            4312 * ***                   [RD_KAFKA_OP_SEEK] = "REPLY:SEEK",
                                            4313 * ***                   [RD_KAFKA_OP_PAUSE] = "REPLY:PAUSE",
                                            4314 * ***                   [RD_KAFKA_OP_OFFSET_FETCH] = "REPLY:OFFSET_FET\
                                            4315 * CH",
                                            4316 * ***                   [RD_KAFKA_OP_PARTITION_JOIN] = "REPLY:PARTITIO\
                                            4317 * N_JOIN",
                                            4318 * ***                   [RD_KAFKA_OP_PARTITION_LEAVE] = "REPLY:PARTITI\
                                            4319 * ON_LEAVE",
                                            4320 * ***                   [RD_KAFKA_OP_REBALANCE] = "REPLY:REBALANCE",
                                            4321 * ***                   [RD_KAFKA_OP_TERMINATE] = "REPLY:TERMINATE",
                                            4322 * ***                   [RD_KAFKA_OP_COORD_QUERY] = "REPLY:COORD_QUERY\
                                            4323 * ",
                                            4324 * ***                   [RD_KAFKA_OP_SUBSCRIBE] = "REPLY:SUBSCRIBE",
                                            4325 * ***                   [RD_KAFKA_OP_ASSIGN] = "REPLY:ASSIGN",
                                            4326 * ***                   [RD_KAFKA_OP_GET_SUBSCRIPTION] = "REPLY:GET_SU\
                                            4327 * BSCRIPTION",
                                            4328 * ***                   [RD_KAFKA_OP_GET_ASSIGNMENT] = "REPLY:GET_ASSI\
                                            4329 * GNMENT",
                                            4330 * ***                   [RD_KAFKA_OP_THROTTLE] = "REPLY:THROTTLE",
                                            4331 * ***                   [RD_KAFKA_OP_NAME] = "REPLY:NAME",
                                            4332 * ***                   [RD_KAFKA_OP_CG_METADATA] = "REPLY:CG_METADATA\
                                            4333 * ",
                                            4334 * ***                   [RD_KAFKA_OP_OFFSET_RESET] = "REPLY:OFFSET_RES\
                                            4335 * ET",
                                            4336 * ***                   [RD_KAFKA_OP_METADATA] = "REPLY:METADATA",
                                            4337 * ***                   [RD_KAFKA_OP_LOG] = "REPLY:LOG",
                                            4338 * ***                   [RD_KAFKA_OP_WAKEUP] = "REPLY:WAKEUP",
                                            4339 * ***                   [RD_KAFKA_OP_CREATETOPICS] = "REPLY:CREATETOPI\
                                            4340 * CS",
                                            4341 * ***                   [RD_KAFKA_OP_DELETETOPICS] = "REPLY:DELETETOPI\
                                            4342 * CS",
                                            4343 * ***                   [RD_KAFKA_OP_CREATEPARTITIONS] = "REPLY:CREATE\
                                                                                                                           Page   91 
  Active Usings: @REGION_1403_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4344 * PARTITIONS",
                                            4345 * ***                   [RD_KAFKA_OP_ALTERCONFIGS] = "REPLY:ALTERCONFI\
                                            4346 * GS",
                                            4347 * ***                   [RD_KAFKA_OP_DESCRIBECONFIGS] = "REPLY:DESCRIB\
                                            4348 * ECONFIGS",
                                            4349 * ***                   [RD_KAFKA_OP_DELETERECORDS] = "REPLY:DELETEREC\
                                            4350 * ORDS",
                                            4351 * ***                   [RD_KAFKA_OP_DELETEGROUPS] = "REPLY:DELETEGROU\
                                            4352 * PS",
                                            4353 * ***                   [RD_KAFKA_OP_DELETECONSUMERGROUPOFFSETS] =
                                            4354 * ***                   "REPLY:DELETECONSUMERGROUPOFFSETS",
                                            4355 * ***                   [RD_KAFKA_OP_ADMIN_FANOUT] = "REPLY:ADMIN_FANO\
                                            4356 * UT",
                                            4357 * ***                   [RD_KAFKA_OP_ADMIN_RESULT] = "REPLY:ADMIN_RESU\
                                            4358 * LT",
                                            4359 * ***                   [RD_KAFKA_OP_PURGE] = "REPLY:PURGE",
                                            4360 * ***                   [RD_KAFKA_OP_CONNECT] = "REPLY:CONNECT",
                                            4361 * ***                   [RD_KAFKA_OP_OAUTHBEARER_REFRESH] = "REPLY:OAU\
                                            4362 * THBEARER_REFRESH",
                                            4363 * ***                   [RD_KAFKA_OP_MOCK] = "REPLY:MOCK",
                                            4364 * ***                   [RD_KAFKA_OP_BROKER_MONITOR] = "REPLY:BROKER_M\
                                            4365 * ONITOR",
                                            4366 * ***                   [RD_KAFKA_OP_TXN] = "REPLY:TXN",
                                            4367 * ***                   [RD_KAFKA_OP_GET_REBALANCE_PROTOCOL] =
                                            4368 * ***                   "REPLY:GET_REBALANCE_PROTOCOL",
                                            4369 * ***                   [RD_KAFKA_OP_LEADERS] = "REPLY:LEADERS",
                                            4370 * ***                   [RD_KAFKA_OP_BARRIER] = "REPLY:BARRIER",
                                            4371 * ***           };
                                            4372 * ***
                                            4373 * ***           if (type & (int)(1 << 30))
00002B1C 1813                               4374          LR    1,3
00002B1E C01B 4000 0000                     4375          NILF  1,X'40000000'
00002B24 1211                               4376          LTR   1,1
00002B26 4780 C05E               00002B2E   4377          BZ    @L632
                                            4378 * ***                   skiplen = 0;
00002B2A A728 0000               00000000   4379          LHI   2,0         ; 0
00002B2E                                    4380 @L632    DS    0H
                                            4381 * ***
                                            4382 * ***           (((names[type & ~((int)(1 << 29) | (int)(1 << 30))] !=\
                                            4383 *  ((void *)0)) || !*"add OP type to rd_kafka_op2str()") ? (void)0 : _\
                                            4384 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_op.c", 104\
                                            4385 * , "(names[type & ~((int)(1 << 29) | (int)(1 << 30))] != ((void *)0))\
                                            4386 *  || !*\"add OP type to rd_kafka_op2str()\""));
00002B2E 1813                               4387          LR    1,3
00002B30 A516 9FFF               00009FFF   4388          NILH  1,40959
00002B34 B914 0011                          4389          LGFR  1,1
00002B38 E340 C09C 0014          00002B6C   4390          LGF   4,@lit_1403_112
00002B3E 4144 F000               00000000   4391          LA    4,0(4,15)
00002B42 EBF1 0003 000D          00000003   4392          SLLG  15,1,3(0)   ; *0x8
00002B48 E3FF 46D8 0002          000006D8   4393          LTG   15,1752(15,4)
00002B4E 4770 C0EE               00002BBE   4394          BNE   @L635
00002B52 E3F0 C0A0 0004          00002B70   4395          LG    15,@lit_1403_113
                                                                                                                           Page   92 
  Active Usings: @REGION_1403_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002B58 4110 F096               00000096   4396          LA    1,150(0,15)
00002B5C 9500 1000      00000000 00000000   4397          CLI   0(1),0
00002B60 4770 C0B8               00002B88   4398          BNE   @L633
00002B64                                    4399 @L634    DS    0H
00002B64 47F0 C0EE               00002BBE   4400          B     @L635
00002B68                                    4401          DS    0D
00002B68 000000D0                           4402 @FRAMESIZE_1403 DC F'208'
00002B6C 00000000                           4403 @lit_1403_112 DC Q(@@STATIC)
00002B70 000000000000635E                   4404 @lit_1403_113 DC AD(@strings@)
00002B78 0000000000000000                   4405 @lit_1403_115 DC AD(__assert)
00002B80 0000000000005F80                   4406 @lit_1403_114 DC AD(@DATA)
00002B88                                    4407 @L633    DS    0H
00002B88 E310 C0B0 0004          00002B80   4408          LG    1,@lit_1403_114
00002B8E 4110 11A6               000001A6   4409          LA    1,422(0,1)
00002B92 E310 D0B0 0024          000000B0   4410          STG   1,176(0,13)
00002B98 4110 F0B8               000000B8   4411          LA    1,184(0,15)
00002B9C E310 D0B8 0024          000000B8   4412          STG   1,184(0,13)
00002BA2 E548 D0C0 0068          000000C0   4413          MVGHI 192(13),104
00002BA8 41F0 F0E0               000000E0   4414          LA    15,224(0,15)
00002BAC E3F0 D0C8 0024          000000C8   4415          STG   15,200(0,13)
00002BB2 4110 D0B0               000000B0   4416          LA    1,176(0,13)
00002BB6 E3F0 C0A8 0004          00002B78   4417          LG    15,@lit_1403_115 ; __assert
00002BBC                                    4418 @@gen_label186 DS    0H
00002BBC 05EF                               4419          BALR  14,15
00002BBE                                    4420 @@gen_label187 DS    0H
00002BBE                                    4421 @L635    DS    0H
                                            4422 * ***
                                            4423 * ***           return names[type & ~((int)(1 << 29) | (int)(1 << 30))\
                                            4424 * ]+skiplen;
00002BBE A536 9FFF               00009FFF   4425          NILH  3,40959
00002BC2 B914 00F3                          4426          LGFR  15,3
00002BC6 EBFF 0003 000D          00000003   4427          SLLG  15,15,3(0)  ; *0x8
00002BCC E3FF 46D8 0004          000006D8   4428          LG    15,1752(15,4)
00002BD2 B914 0012                          4429          LGFR  1,2
00002BD6 41F1 F000               00000000   4430          LA    15,0(1,15)
                                            4431 * ***   }
                                            4432 * * **** Start of Epilogue
                                            4433          DCCEPIL
00002BDA                                    4434+         ds 0h                                                          01-DCCEP
                                            4435+* Epilog
00002BDA D707 D088 D088 00000088 00000088   4436+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002BE0 E3D0 D080 0004          00000080   4437+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002BE6 E3C0 D090 0004          00000090   4438+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002BEC E3B0 C018 0004          00000018   4439+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002BF2 E3C0 B010 0021          00000010   4440+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002BF8 E3E0 D008 0004          00000008   4441+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002BFE EB1C D020 0004          00000020   4442+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002C04 078E                               4443+         bcr 8,14                if same dsab, just return              01-DCCEP
00002C06 E3F0 D010 0024          00000010   4444+         stg 15,16(0,13)         save return code                       01-DCCEP
00002C0C E300 D018 0024          00000018   4445+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002C12 E3F0 D090 0004          00000090   4446+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002C18 E3F0 F018 0004          00000018   4447+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   93 
  Active Usings: @REGION_1403_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002C1E 47F0 F040               00000040   4448+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4449+* End of Epilog
                                            4450 * * **** End of Epilogue
                                            4451          DROP  12
                                            4452 *
                                            4453 *   DSECT for automatic variables in "rd_kafka_op2str"
                                            4454 *      (FUNCTION #1403)
                                            4455 *
00000000                00000000 000000AC   4456 @AUTO#rd_kafka_op2str DSECT
00000000                                    4457          DS    XL168
000000A8                                    4458 rd_kafka_op2str#skiplen#0 DS 1F ; skiplen
                                            4459 *
00002C22                00000000 00005F80   4460 @CODE    CSECT
                                            4461 *
                                            4462 *
                                            4463 *
                                            4464 * ....... start of rd_kafka_op_print
                                            4465 rd_kafka_op_print ALIAS X'99846D92818692816D96976D97998995A3'
00002C22                                    4466 @LNAME1422 DS  0H
00002C22 00000011                           4467          DC    X'00000011'
00002C26 99846D9281869281                   4468          DC    C'rd_kafka_op_print'
00002C37 00                                 4469          DC    X'00'
                                            4470 rd_kafka_op_print DCCPRLG CINDEX=1422,BASER=12,FRAME=232,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1422
                                            4471          macro
                                            4472          dccextrn &m
                                            4473          gblc    &$dccext(1000)
                                            4474          gbla    &$dccexti
                                            4475          lcla    &i
                                            4476 &$dccext(&$dccexti+1) setc    '&m'
                                            4477 &i       seta    1
                                            4478 .loop    aif    (&i gt &$dccexti).around
                                            4479          aif    ('&$dccext(&i)' eq '&m').getout
                                            4480 &i       seta    &i+1
                                            4481          ago     .loop
                                            4482 .around  anop
                                            4483 &$dccexti seta &$dccexti+1
                                            4484          extrn  &m
                                            4485 .getout  anop
                                            4486          mend
00002C38                                    4487+$eye0102    ds    0d                                                    02-DCCCA
00002C38 C4C3C3                             4488+         dc cl3'DCC'                                                    02-DCCCA
00002C3B 01                                 4489+         dc xl1'01' format one                                          02-DCCCA
00002C3C 00000000                           4490+         dc a(0)                                                        02-DCCCA
00002C40 0000000000002CAA                   4491+         dc ad(@PER_1422)                                               02-DCCCA
00002C48 00000000000000E8                   4492+         dc ad(232)                                                     02-DCCCA
00002C50 0000000000000000                   4493+         dc ad(0)                                                       02-DCCCA
00002C58 0000000000001000                   4494+         dc ad(4096)                                                    02-DCCCA
00002C60 20                                 4495+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002C61 03                                 4496+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002C62 03                                 4497+         dc al1(3)                                                      02-DCCCA
00002C63 08                                 4498+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   94 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002C64 00                                 4499+         dc bl.8'00000000'                                              02-DCCCA
00002C65 000000                             4500+         dc al3(0)                                                      02-DCCCA
00002C68 0000000000002C22                   4501+         dc ad(@LNAME1422)                                              02-DCCCA
00002C70                                    4502+         ds 0d                                                          02-DCCCA
00002C70 0000000000002C38                   4503+         dc ad($eye0102)                                                02-DCCCA
00002C78 0000000000000000                   4504+         dc ad(0)                                                       02-DCCCA
00002C80                                    4505+         ds    0d                                                       01-DCCPR
                                            4506+         entry rd_kafka_op_print                                        01-DCCPR
00002C80                                    4507+rd_kafka_op_print ds 0d                                                 01-DCCPR
00002C80                                    4508+@REGION_1422_1 ds 0h                                                    01-DCCPR
00002C80 EBEC D008 0024          00000008   4509+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002C86 E3E0 D088 0004          00000088   4510+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002C8C E3C0 D090 0004          00000090   4511+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002C92 B904 002E                          4512+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002C96 E3B0 C018 0004          00000018   4513+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002C9C A7EB 00E8               000000E8   4514+         aghi  14,232              increase by frame size               01-DCCPR
00002CA0 E3E0 C020 0021          00000020   4515+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002CA6 4720 B020               00000020   4516+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002CAA                                    4517+@PER_1422 ds   0h                                                       01-DCCPR
00002CAA EBDE 2080 0024          00000080   4518+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002CB0 E3C0 2090 0024          00000090   4519+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002CB6 B904 00D2                          4520+         lgr   13,2                set real frame pointer               01-DCCPR
00002CBA B904 00CF                          4521+         lgr   12,15               set base reg                         01-DCCPR
                        00002C80            4522+         using @REGION_1422_1,12                                        01-DCCPR
                                            4523 * ******* End of Prologue
                                            4524 * *
                                            4525 * ***      fprintf(fp,
00002CBE EB24 1000 0004          00000000   4526          LMG   2,4,0(1)    ; fp
                                            4527 * ***         "%s((rd_kafka_op_t*)%p)\n"
                                            4528 * ***         prefix, rko,
                                            4529 * ***         prefix, rd_kafka_op2str(rko->rko_type), rko->rko_type,
                                            4530 * ***         rko->rko_version);
00002CC4 E3F0 4010 0014          00000010   4531          LGF   15,16(0,4)
00002CCA E3F0 D0A8 0024          000000A8   4532          STG   15,168(0,13)
00002CD0 4110 D0A8               000000A8   4533          LA    1,168(0,13)
00002CD4 E3F0 C1D8 0004          00002E58   4534          LG    15,@lit_1422_117 ; rd_kafka_op2str
00002CDA                                    4535 @@gen_label188 DS    0H
00002CDA 05EF                               4536          BALR  14,15
00002CDC                                    4537 @@gen_label189 DS    0H
00002CDC E320 D0A8 0024          000000A8   4538          STG   2,168(0,13)
                                            4539 * ***         "%s Type: %s (0x%x), Version: %" "d" "\n",
00002CE2 E350 C1E8 0004          00002E68   4540          LG    5,@lit_1422_118
00002CE8 4110 514A               0000014A   4541          LA    1,330(0,5)
00002CEC E310 D0B0 0024          000000B0   4542          STG   1,176(0,13)
00002CF2 EB34 D0B8 0024          000000B8   4543          STMG  3,4,184(13)
00002CF8 E330 D0C8 0024          000000C8   4544          STG   3,200(0,13)
00002CFE E3F0 D0D0 0024          000000D0   4545          STG   15,208(0,13)
00002D04 E3F0 4010 0014          00000010   4546          LGF   15,16(0,4)
00002D0A E3F0 D0D8 0024          000000D8   4547          STG   15,216(0,13)
00002D10 E3F0 401C 0014          0000001C   4548          LGF   15,28(0,4)
00002D16 E3F0 D0E0 0024          000000E0   4549          STG   15,224(0,13)
00002D1C 4110 D0A8               000000A8   4550          LA    1,168(0,13)
                                                                                                                           Page   95 
  Active Usings: @REGION_1422_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002D20 E360 C1E0 0004          00002E60   4551          LG    6,@lit_1422_119 ; fprintf
00002D26 B904 00F6                          4552          LGR   15,6
00002D2A                                    4553 @@gen_label190 DS    0H
00002D2A 05EF                               4554          BALR  14,15
00002D2C                                    4555 @@gen_label191 DS    0H
                                            4556 * ***      if (rko->rko_err)
00002D2C E3F0 4020 0012          00000020   4557          LT    15,32(0,4)  ; offset of rko_err in rd_kafka_op_s
00002D32 4780 C0F4               00002D74   4558          BZ    @L636
                                            4559 * ***         fprintf(fp, "%s Error: %s\n",
                                            4560 * ***            prefix, rd_kafka_err2str(rko->rko_err));
00002D36 E3F0 4020 0014          00000020   4561          LGF   15,32(0,4)
00002D3C E3F0 D0A8 0024          000000A8   4562          STG   15,168(0,13)
00002D42 4110 D0A8               000000A8   4563          LA    1,168(0,13)
00002D46 E3F0 C1F0 0004          00002E70   4564          LG    15,@lit_1422_120 ; rd_kafka_err2str
00002D4C                                    4565 @@gen_label193 DS    0H
00002D4C 05EF                               4566          BALR  14,15
00002D4E                                    4567 @@gen_label194 DS    0H
00002D4E E320 D0A8 0024          000000A8   4568          STG   2,168(0,13)
00002D54 4110 5182               00000182   4569          LA    1,386(0,5)
00002D58 E310 D0B0 0024          000000B0   4570          STG   1,176(0,13)
00002D5E E330 D0B8 0024          000000B8   4571          STG   3,184(0,13)
00002D64 E3F0 D0C0 0024          000000C0   4572          STG   15,192(0,13)
00002D6A 4110 D0A8               000000A8   4573          LA    1,168(0,13)
00002D6E B904 00F6                          4574          LGR   15,6
00002D72                                    4575 @@gen_label195 DS    0H
00002D72 05EF                               4576          BALR  14,15
00002D74                                    4577 @@gen_label196 DS    0H
00002D74                                    4578 @L636    DS    0H
                                            4579 * ***      if (rko->rko_replyq.q)
00002D74 E3F0 4040 0002          00000040   4580          LTG   15,64(0,4)  ; offset of rko_replyq in rd_kafka_op_s
00002D7A 4780 C140               00002DC0   4581          BZ    @L637
                                            4582 * ***         fprintf(fp, "%s Replyq %p v%d (%s)\n",
                                            4583 * ***            prefix, rko->rko_replyq.q, rko->rko_replyq.version,
                                            4584 * ***
                                            4585 * ***
                                            4586 * ***
                                            4587 * ***            ""
00002D7E E320 D0A8 0024          000000A8   4588          STG   2,168(0,13)
00002D84 41F0 5190               00000190   4589          LA    15,400(0,5)
00002D88 E3F0 D0B0 0024          000000B0   4590          STG   15,176(0,13)
00002D8E E330 D0B8 0024          000000B8   4591          STG   3,184(0,13)
00002D94 E3F0 4040 0004          00000040   4592          LG    15,64(0,4)
00002D9A E3F0 D0C0 0024          000000C0   4593          STG   15,192(0,13)
00002DA0 E3F0 4048 0014          00000048   4594          LGF   15,72(0,4)
00002DA6 E3F0 D0C8 0024          000000C8   4595          STG   15,200(0,13)
                                            4596 * ***
                                            4597 * ***            );
00002DAC 41F0 51A8               000001A8   4598          LA    15,424(0,5)
00002DB0 E3F0 D0D0 0024          000000D0   4599          STG   15,208(0,13)
00002DB6 4110 D0A8               000000A8   4600          LA    1,168(0,13)
00002DBA B904 00F6                          4601          LGR   15,6
00002DBE                                    4602 @@gen_label198 DS    0H
                                                                                                                           Page   96 
  Active Usings: @REGION_1422_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002DBE 05EF                               4603          BALR  14,15
00002DC0                                    4604 @@gen_label199 DS    0H
00002DC0                                    4605 @L637    DS    0H
                                            4606 * ***      if (rko->rko_rktp) {
00002DC0 E3F0 4038 0002          00000038   4607          LTG   15,56(0,4)  ; offset of rko_rktp in rd_kafka_op_s
00002DC6 4780 C3E8               00003068   4608          BZ    @L639
                                            4609 * ***         fprintf(fp, "%s ((rd_kafka_toppar_t*)%p) "
                                            4610 * ***            prefix, rko->rko_rktp,
                                            4611 * ***                           rko->rko_rktp->rktp_rkt->rkt_topic->st\
                                            4612 * r,
                                            4613 * ***            rko->rko_rktp->rktp_partition,
                                            4614 * ***            rd_atomic32_get(&rko->rko_rktp->rktp_version));
00002DCA E3F0 4038 0004          00000038   4615          LG    15,56(0,4)  ; offset of rko_rktp in rd_kafka_op_s
00002DD0 41F0 F1B0               000001B0   4616          LA    15,432(0,15)
00002DD4 E3F0 D0A8 0024          000000A8   4617          STG   15,168(0,13)
00002DDA 4110 D0A8               000000A8   4618          LA    1,168(0,13)
00002DDE E3F0 C1F8 0004          00002E78   4619          LG    15,@lit_1422_123 ; rd_atomic32_get
00002DE4                                    4620 @@gen_label201 DS    0H
00002DE4 05EF                               4621          BALR  14,15
00002DE6                                    4622 @@gen_label202 DS    0H
00002DE6 E320 D0A8 0024          000000A8   4623          STG   2,168(0,13)
                                            4624 * ***            "%s [%" "d" "] v%d\n",
00002DEC 4110 51AA               000001AA   4625          LA    1,426(0,5)
00002DF0 E310 D0B0 0024          000000B0   4626          STG   1,176(0,13)
00002DF6 E330 D0B8 0024          000000B8   4627          STG   3,184(0,13)
00002DFC E310 4038 0004          00000038   4628          LG    1,56(0,4)
00002E02 E310 D0C0 0024          000000C0   4629          STG   1,192(0,13)
00002E08 E310 4038 0004          00000038   4630          LG    1,56(0,4)   ; offset of rko_rktp in rd_kafka_op_s
00002E0E E310 1060 0004          00000060   4631          LG    1,96(0,1)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002E14 E310 1080 0004          00000080   4632          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00002E1A E310 1008 0004          00000008   4633          LG    1,8(0,1)
00002E20 E310 D0C8 0024          000000C8   4634          STG   1,200(0,13)
00002E26 E310 4038 0004          00000038   4635          LG    1,56(0,4)   ; offset of rko_rktp in rd_kafka_op_s
00002E2C E310 1068 0014          00000068   4636          LGF   1,104(0,1)
00002E32 E310 D0D0 0024          000000D0   4637          STG   1,208(0,13)
00002E38 B914 00FF                          4638          LGFR  15,15
00002E3C E3F0 D0D8 0024          000000D8   4639          STG   15,216(0,13)
00002E42 4110 D0A8               000000A8   4640          LA    1,168(0,13)
00002E46 B904 00F6                          4641          LGR   15,6
00002E4A                                    4642 @@gen_label203 DS    0H
00002E4A 05EF                               4643          BALR  14,15
00002E4C                                    4644 @@gen_label204 DS    0H
                                            4645 * ***      }
00002E4C                                    4646 @L638    DS    0H
                                            4647 * ***
                                            4648 * ***      switch (rko->rko_type & ~((int)(1 << 29) | (int)(1 << 30)))
00002E4C 47F0 C3E8               00003068   4649          B     @L639
00002E50                                    4650          DS    0D
00002E50 000000E8                           4651 @FRAMESIZE_1422 DC F'232'
00002E54 00000000
00002E58 0000000000002AD0                   4652 @lit_1422_117 DC AD(rd_kafka_op2str)
00002E60 0000000000000000                   4653 @lit_1422_119 DC AD(fprintf)
                                                                                                                           Page   97 
  Active Usings: @REGION_1422_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002E68 000000000000635E                   4654 @lit_1422_118 DC AD(@strings@)
00002E70 0000000000000000                   4655 @lit_1422_120 DC AD(rd_kafka_err2str)
00002E78 00000000000002F0                   4656 @lit_1422_123 DC AD(rd_atomic32_get)
                                            4657 * ***      {
                                            4658 * ***      case RD_KAFKA_OP_FETCH:
00002E80                                    4659 @L641    DS    0H
                                            4660 * ***         fprintf(fp,  "%s Offset: %" "lld" "\n",
                                            4661 * ***            prefix, rko->rko_u.fetch.rkm. rkm_rkmessage.offset);
00002E80 E320 D0A8 0024          000000A8   4662          STG   2,168(0,13)
00002E86 E3F0 C1E8 0004          00002E68   4663          LG    15,@lit_1422_118
00002E8C 41F0 F1D4               000001D4   4664          LA    15,468(0,15)
00002E90 E3F0 D0B0 0024          000000B0   4665          STG   15,176(0,13)
00002E96 E330 D0B8 0024          000000B8   4666          STG   3,184(0,13)
00002E9C E3F0 40B0 0004          000000B0   4667          LG    15,176(0,4)
00002EA2 E3F0 D0C0 0024          000000C0   4668          STG   15,192(0,13)
00002EA8 4110 D0A8               000000A8   4669          LA    1,168(0,13)
00002EAC E3F0 C1E0 0004          00002E60   4670          LG    15,@lit_1422_119 ; fprintf
00002EB2                                    4671 @@gen_label205 DS    0H
00002EB2 05EF                               4672          BALR  14,15
00002EB4                                    4673 @@gen_label206 DS    0H
                                            4674 * ***         break;
00002EB4 47F0 C458               000030D8   4675          B     @ret_lab_1422
                                            4676 * ***      case RD_KAFKA_OP_CONSUMER_ERR:
00002EB8                                    4677 @L642    DS    0H
                                            4678 * ***         fprintf(fp,  "%s Offset: %" "lld" "\n",
                                            4679 * ***            prefix, rko->rko_u.err.offset);
00002EB8 E320 D0A8 0024          000000A8   4680          STG   2,168(0,13)
00002EBE E3F0 C1E8 0004          00002E68   4681          LG    15,@lit_1422_118
00002EC4 41F0 F1D4               000001D4   4682          LA    15,468(0,15)
00002EC8 E3F0 D0B0 0024          000000B0   4683          STG   15,176(0,13)
00002ECE E330 D0B8 0024          000000B8   4684          STG   3,184(0,13)
00002ED4 E3F0 4070 0004          00000070   4685          LG    15,112(0,4)
00002EDA E3F0 D0C0 0024          000000C0   4686          STG   15,192(0,13)
00002EE0 4110 D0A8               000000A8   4687          LA    1,168(0,13)
00002EE4 E3F0 C1E0 0004          00002E60   4688          LG    15,@lit_1422_119 ; fprintf
00002EEA                                    4689 @@gen_label207 DS    0H
00002EEA 05EF                               4690          BALR  14,15
00002EEC                                    4691 @@gen_label208 DS    0H
                                            4692 * ***
                                            4693 * ***      case RD_KAFKA_OP_ERR:
00002EEC                                    4694 @L643    DS    0H
                                            4695 * ***         fprintf(fp, "%s Reason: %s\n", prefix, rko->rko_u.err.er\
                                            4696 * rstr);
00002EEC E320 D0A8 0024          000000A8   4697          STG   2,168(0,13)
00002EF2 E3F0 C1E8 0004          00002E68   4698          LG    15,@lit_1422_118
00002EF8 41F0 F1E6               000001E6   4699          LA    15,486(0,15)
00002EFC E3F0 D0B0 0024          000000B0   4700          STG   15,176(0,13)
00002F02 E330 D0B8 0024          000000B8   4701          STG   3,184(0,13)
00002F08 E3F0 4078 0004          00000078   4702          LG    15,120(0,4)
00002F0E E3F0 D0C0 0024          000000C0   4703          STG   15,192(0,13)
00002F14 4110 D0A8               000000A8   4704          LA    1,168(0,13)
00002F18 E3F0 C1E0 0004          00002E60   4705          LG    15,@lit_1422_119 ; fprintf
                                                                                                                           Page   98 
  Active Usings: @REGION_1422_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002F1E                                    4706 @@gen_label209 DS    0H
00002F1E 05EF                               4707          BALR  14,15
00002F20                                    4708 @@gen_label210 DS    0H
                                            4709 * ***         break;
00002F20 47F0 C458               000030D8   4710          B     @ret_lab_1422
                                            4711 * ***      case RD_KAFKA_OP_DR:
00002F24                                    4712 @L644    DS    0H
                                            4713 * ***         fprintf(fp, "%s %" "d" " messages on %s\n", prefix,
                                            4714 * ***            rko->rko_u.dr.msgq.rkmq_msg_cnt,
                                            4715 * ***            rko->rko_u.dr.rkt ?
00002F24 E3F0 4070 0002          00000070   4716          LTG   15,112(0,4) ; offset of rko_u in rd_kafka_op_s
00002F2A 4780 C2C4               00002F44   4717          BZ    @L645
                                            4718 * ***            rko->rko_u.dr.rkt->rkt_topic->str : "(n/a)");
00002F2E E3F0 4070 0004          00000070   4719          LG    15,112(0,4) ; offset of rko_u in rd_kafka_op_s
00002F34 E3F0 F080 0004          00000080   4720          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00002F3A E3F0 F008 0004          00000008   4721          LG    15,8(0,15)  ; offset of str in rd_kafkap_str_s
00002F40 47F0 C2CE               00002F4E   4722          B     @L646
00002F44                                    4723 @L645    DS    0H
00002F44 E3F0 C1E8 0004          00002E68   4724          LG    15,@lit_1422_118
00002F4A 41F0 F1F6               000001F6   4725          LA    15,502(0,15)
00002F4E                                    4726 @L646    DS    0H
00002F4E E320 D0A8 0024          000000A8   4727          STG   2,168(0,13)
00002F54 E310 C1E8 0004          00002E68   4728          LG    1,@lit_1422_118
00002F5A 4110 11FC               000001FC   4729          LA    1,508(0,1)
00002F5E E310 D0B0 0024          000000B0   4730          STG   1,176(0,13)
00002F64 E330 D0B8 0024          000000B8   4731          STG   3,184(0,13)
00002F6A E310 4088 0014          00000088   4732          LGF   1,136(0,4)
00002F70 E310 D0C0 0024          000000C0   4733          STG   1,192(0,13)
00002F76 E3F0 D0C8 0024          000000C8   4734          STG   15,200(0,13)
00002F7C 4110 D0A8               000000A8   4735          LA    1,168(0,13)
00002F80 E3F0 C1E0 0004          00002E60   4736          LG    15,@lit_1422_119 ; fprintf
00002F86                                    4737 @@gen_label212 DS    0H
00002F86 05EF                               4738          BALR  14,15
00002F88                                    4739 @@gen_label213 DS    0H
                                            4740 * ***         break;
00002F88 47F0 C458               000030D8   4741          B     @ret_lab_1422
                                            4742 * ***      case RD_KAFKA_OP_OFFSET_COMMIT:
00002F8C                                    4743 @L647    DS    0H
                                            4744 * ***         fprintf(fp, "%s Callback: %p (opaque %p)\n",
                                            4745 * ***            prefix, rko->rko_u.offset_commit.cb,
                                            4746 * ***            rko->rko_u.offset_commit.opaque);
00002F8C E320 D0A8 0024          000000A8   4747          STG   2,168(0,13)
00002F92 E350 C1E8 0004          00002E68   4748          LG    5,@lit_1422_118
00002F98 41F0 5212               00000212   4749          LA    15,530(0,5)
00002F9C E3F0 D0B0 0024          000000B0   4750          STG   15,176(0,13)
00002FA2 E330 D0B8 0024          000000B8   4751          STG   3,184(0,13)
00002FA8 E3F0 4078 0004          00000078   4752          LG    15,120(0,4)
00002FAE E3F0 D0C0 0024          000000C0   4753          STG   15,192(0,13)
00002FB4 E3F0 4080 0004          00000080   4754          LG    15,128(0,4)
00002FBA E3F0 D0C8 0024          000000C8   4755          STG   15,200(0,13)
00002FC0 4110 D0A8               000000A8   4756          LA    1,168(0,13)
00002FC4 E360 C1E0 0004          00002E60   4757          LG    6,@lit_1422_119 ; fprintf
                                                                                                                           Page   99 
  Active Usings: @REGION_1422_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002FCA B904 00F6                          4758          LGR   15,6
00002FCE                                    4759 @@gen_label214 DS    0H
00002FCE 05EF                               4760          BALR  14,15
00002FD0                                    4761 @@gen_label215 DS    0H
                                            4762 * ***         fprintf(fp, "%s %d partitions\n",
                                            4763 * ***            prefix,
                                            4764 * ***            rko->rko_u.offset_commit.partitions ?
00002FD0 E3F0 4070 0002          00000070   4765          LTG   15,112(0,4) ; offset of rko_u in rd_kafka_op_s
00002FD6 4780 C368               00002FE8   4766          BZ    @L648
                                            4767 * ***            rko->rko_u.offset_commit.partitions->cnt : 0);
00002FDA E3F0 4070 0004          00000070   4768          LG    15,112(0,4) ; offset of rko_u in rd_kafka_op_s
00002FE0 58F0 F000               00000000   4769          L     15,0(0,15)
00002FE4 47F0 C36C               00002FEC   4770          B     @L649
00002FE8                                    4771 @L648    DS    0H
00002FE8 A7F8 0000               00000000   4772          LHI   15,0        ; 0
00002FEC                                    4773 @L649    DS    0H
00002FEC E320 D0A8 0024          000000A8   4774          STG   2,168(0,13)
00002FF2 4110 5230               00000230   4775          LA    1,560(0,5)
00002FF6 E310 D0B0 0024          000000B0   4776          STG   1,176(0,13)
00002FFC E330 D0B8 0024          000000B8   4777          STG   3,184(0,13)
00003002 B914 00FF                          4778          LGFR  15,15
00003006 E3F0 D0C0 0024          000000C0   4779          STG   15,192(0,13)
0000300C 4110 D0A8               000000A8   4780          LA    1,168(0,13)
00003010 B904 00F6                          4781          LGR   15,6
00003014                                    4782 @@gen_label217 DS    0H
00003014 05EF                               4783          BALR  14,15
00003016                                    4784 @@gen_label218 DS    0H
                                            4785 * ***         break;
00003016 47F0 C458               000030D8   4786          B     @ret_lab_1422
                                            4787 * ***
                                            4788 * ***           case RD_KAFKA_OP_LOG:
0000301A                                    4789 @L650    DS    0H
                                            4790 * ***                   fprintf(fp, "%s Log: %%%d %s: %s\n",
                                            4791 * ***                           prefix, rko->rko_u.log.level,
                                            4792 * ***                           rko->rko_u.log.fac,
                                            4793 * ***                           rko->rko_u.log.str);
0000301A E320 D0A8 0024          000000A8   4794          STG   2,168(0,13)
00003020 E3F0 C1E8 0004          00002E68   4795          LG    15,@lit_1422_118
00003026 41F0 F242               00000242   4796          LA    15,578(0,15)
0000302A E3F0 D0B0 0024          000000B0   4797          STG   15,176(0,13)
00003030 E330 D0B8 0024          000000B8   4798          STG   3,184(0,13)
00003036 E3F0 40B0 0014          000000B0   4799          LGF   15,176(0,4)
0000303C E3F0 D0C0 0024          000000C0   4800          STG   15,192(0,13)
00003042 41F0 4070               00000070   4801          LA    15,112(0,4)
00003046 E3F0 D0C8 0024          000000C8   4802          STG   15,200(0,13)
0000304C E3F0 40B8 0004          000000B8   4803          LG    15,184(0,4)
00003052 E3F0 D0D0 0024          000000D0   4804          STG   15,208(0,13)
00003058 4110 D0A8               000000A8   4805          LA    1,168(0,13)
0000305C E3F0 C1E0 0004          00002E60   4806          LG    15,@lit_1422_119 ; fprintf
00003062                                    4807 @@gen_label219 DS    0H
00003062 05EF                               4808          BALR  14,15
00003064                                    4809 @@gen_label220 DS    0H
                                                                                                                           Page  100 
  Active Usings: @REGION_1422_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4810 * ***                   break;
00003064 47F0 C458               000030D8   4811          B     @ret_lab_1422
                                            4812 * ***
                                            4813 * ***      default:
                                            4814 * ***         break;
                                            4815 * ***      }
00003068                                    4816 @L639    DS    0H
00003068 58F0 4010               00000010   4817          L     15,16(0,4)  ; offset of rko_type in rd_kafka_op_s
0000306C A5F6 9FFF               00009FFF   4818          NILH  15,40959
00003070 A7FE 001E               0000001E   4819          CHI   15,30
00003074 47B0 C450               000030D0   4820          BNL   @@gen_label221
00003078 A7FA FFFF               0000FFFF   4821          AHI   15,-1
0000307C C2FF 0000 0005                     4822          CLFI  15,X'00000005'
00003082 4720 C458               000030D8   4823          BH    @ret_lab_1422
00003086 B914 00FF                          4824          LGFR  15,15
0000308A 4110 C420               000030A0   4825          LA    1,@@gen_label222
0000308E EBFF 0003 000D          00000003   4826          SLLG  15,15,3(0)
00003094 E3F1 F000 0004          00000000   4827          LG    15,0(1,15)
0000309A 47FF C000               00000000   4828          B     0(15,12)
000030A0                                    4829 @@gen_label222 DS    0D
000030A0 0000000000000200                   4830          DC AD(@L641-@REGION_1422_1)
000030A8 000000000000026C                   4831          DC AD(@L643-@REGION_1422_1)
000030B0 0000000000000238                   4832          DC AD(@L642-@REGION_1422_1)
000030B8 00000000000002A4                   4833          DC AD(@L644-@REGION_1422_1)
000030C0 0000000000000458                   4834          DC AD(@ret_lab_1422-@REGION_1422_1)
000030C8 000000000000030C                   4835          DC AD(@L647-@REGION_1422_1)
000030D0                                    4836 @@gen_label221 DS 0H
000030D0 A7FE 001E               0000001E   4837          CHI   15,30
000030D4 4780 C39A               0000301A   4838          BE    @L650
                                            4839 * ***   }
000030D8                                    4840 @ret_lab_1422 DS 0H
                                            4841 * * **** Start of Epilogue
                                            4842          DCCEPIL
000030D8                                    4843+         ds 0h                                                          01-DCCEP
                                            4844+* Epilog
000030D8 D707 D088 D088 00000088 00000088   4845+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000030DE E3D0 D080 0004          00000080   4846+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000030E4 E3C0 D090 0004          00000090   4847+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000030EA E3B0 C018 0004          00000018   4848+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000030F0 E3C0 B010 0021          00000010   4849+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000030F6 E3E0 D008 0004          00000008   4850+         lg  14,8(0,13)          load up return address                 01-DCCEP
000030FC EB1C D020 0004          00000020   4851+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003102 078E                               4852+         bcr 8,14                if same dsab, just return              01-DCCEP
00003104 E3F0 D010 0024          00000010   4853+         stg 15,16(0,13)         save return code                       01-DCCEP
0000310A E300 D018 0024          00000018   4854+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003110 E3F0 D090 0004          00000090   4855+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003116 E3F0 F018 0004          00000018   4856+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000311C 47F0 F040               00000040   4857+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4858+* End of Epilog
                                            4859 * * **** End of Epilogue
                                            4860          DROP  12
                                            4861 *
                                                                                                                           Page  101 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4862 *   DSECT for automatic variables in "rd_kafka_op_print"
                                            4863 *      (FUNCTION #1422)
                                            4864 *
00000000                00000000 000000A8   4865 @AUTO#rd_kafka_op_print DSECT
00000000                                    4866          DS    XL168
                                            4867 *
00003120                00000000 00005F80   4868 @CODE    CSECT
                                            4869 *
                                            4870 *
                                            4871 *
                                            4872 * ....... start of rd_kafka_op_new0
                                            4873 rd_kafka_op_new0 ALIAS X'99846D92818692816D96976D9585A6F0'
00003120                                    4874 @LNAME1405 DS  0H
00003120 00000010                           4875          DC    X'00000010'
00003124 99846D9281869281                   4876          DC    C'rd_kafka_op_new0'
00003134 00                                 4877          DC    X'00'
                                            4878 rd_kafka_op_new0 DCCPRLG CINDEX=1405,BASER=12,FRAME=208,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1405
                                            4879          macro
                                            4880          dccextrn &m
                                            4881          gblc    &$dccext(1000)
                                            4882          gbla    &$dccexti
                                            4883          lcla    &i
                                            4884 &$dccext(&$dccexti+1) setc    '&m'
                                            4885 &i       seta    1
                                            4886 .loop    aif    (&i gt &$dccexti).around
                                            4887          aif    ('&$dccext(&i)' eq '&m').getout
                                            4888 &i       seta    &i+1
                                            4889          ago     .loop
                                            4890 .around  anop
                                            4891 &$dccexti seta &$dccexti+1
                                            4892          extrn  &m
                                            4893 .getout  anop
                                            4894          mend
00003138                                    4895+$eye0105    ds    0d                                                    02-DCCCA
00003138 C4C3C3                             4896+         dc cl3'DCC'                                                    02-DCCCA
0000313B 01                                 4897+         dc xl1'01' format one                                          02-DCCCA
0000313C 00000000                           4898+         dc a(0)                                                        02-DCCCA
00003140 00000000000031AA                   4899+         dc ad(@PER_1405)                                               02-DCCCA
00003148 00000000000000D0                   4900+         dc ad(208)                                                     02-DCCCA
00003150 0000000000000000                   4901+         dc ad(0)                                                       02-DCCCA
00003158 0000000000001000                   4902+         dc ad(4096)                                                    02-DCCCA
00003160 20                                 4903+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003161 03                                 4904+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003162 03                                 4905+         dc al1(3)                                                      02-DCCCA
00003163 08                                 4906+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003164 00                                 4907+         dc bl.8'00000000'                                              02-DCCCA
00003165 000000                             4908+         dc al3(0)                                                      02-DCCCA
00003168 0000000000003120                   4909+         dc ad(@LNAME1405)                                              02-DCCCA
00003170                                    4910+         ds 0d                                                          02-DCCCA
00003170 0000000000003138                   4911+         dc ad($eye0105)                                                02-DCCCA
00003178 0000000000000000                   4912+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  102 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003180                                    4913+         ds    0d                                                       01-DCCPR
                                            4914+         entry rd_kafka_op_new0                                         01-DCCPR
00003180                                    4915+rd_kafka_op_new0 ds 0d                                                  01-DCCPR
00003180                                    4916+@REGION_1405_1 ds 0h                                                    01-DCCPR
00003180 EBEC D008 0024          00000008   4917+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003186 E3E0 D088 0004          00000088   4918+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000318C E3C0 D090 0004          00000090   4919+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003192 B904 002E                          4920+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003196 E3B0 C018 0004          00000018   4921+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000319C A7EB 00D0               000000D0   4922+         aghi  14,208              increase by frame size               01-DCCPR
000031A0 E3E0 C020 0021          00000020   4923+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000031A6 4720 B020               00000020   4924+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000031AA                                    4925+@PER_1405 ds   0h                                                       01-DCCPR
000031AA EBDE 2080 0024          00000080   4926+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000031B0 E3C0 2090 0024          00000090   4927+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000031B6 B904 00D2                          4928+         lgr   13,2                set real frame pointer               01-DCCPR
000031BA B904 00CF                          4929+         lgr   12,15               set base reg                         01-DCCPR
                        00003180            4930+         using @REGION_1405_1,12                                        01-DCCPR
                                            4931 * ******* End of Prologue
                                            4932 * *
                                            4933 * ***           rd_kafka_op_t *rko;
                                            4934 * ***
                                            4935 * ***
                                            4936 * ***
                                            4937 * ***
                                            4938 * ***           static const size_t op2size[RD_KAFKA_OP__END] = {
                                            4939 * ***                   [RD_KAFKA_OP_FETCH] = sizeof(rko->rko_u.fetch)\
                                            4940 * ,
                                            4941 * ***                   [RD_KAFKA_OP_ERR] = sizeof(rko->rko_u.err),
                                            4942 * ***                   [RD_KAFKA_OP_CONSUMER_ERR] = sizeof(rko->rko_u\
                                            4943 * .err),
                                            4944 * ***                   [RD_KAFKA_OP_DR] = sizeof(rko->rko_u.dr),
                                            4945 * ***                   [RD_KAFKA_OP_STATS] = sizeof(rko->rko_u.stats)\
                                            4946 * ,
                                            4947 * ***                   [RD_KAFKA_OP_OFFSET_COMMIT] = sizeof(rko->rko_\
                                            4948 * u.offset_commit),
                                            4949 * ***                   [RD_KAFKA_OP_NODE_UPDATE] = sizeof(rko->rko_u.\
                                            4950 * node),
                                            4951 * ***                   [RD_KAFKA_OP_XMIT_BUF] = sizeof(rko->rko_u.xbu\
                                            4952 * f),
                                            4953 * ***                   [RD_KAFKA_OP_RECV_BUF] = sizeof(rko->rko_u.xbu\
                                            4954 * f),
                                            4955 * ***                   [RD_KAFKA_OP_XMIT_RETRY] = sizeof(rko->rko_u.x\
                                            4956 * buf),
                                            4957 * ***                   [RD_KAFKA_OP_FETCH_START] = sizeof(rko->rko_u.\
                                            4958 * fetch_start),
                                            4959 * ***                   [RD_KAFKA_OP_FETCH_STOP] = 1234567,
                                            4960 * ***                   [RD_KAFKA_OP_SEEK] = sizeof(rko->rko_u.fetch_s\
                                            4961 * tart),
                                            4962 * ***                   [RD_KAFKA_OP_PAUSE] = sizeof(rko->rko_u.pause)\
                                            4963 * ,
                                            4964 * ***                   [RD_KAFKA_OP_OFFSET_FETCH] = sizeof(rko->rko_u\
                                                                                                                           Page  103 
  Active Usings: @REGION_1405_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4965 * .offset_fetch),
                                            4966 * ***                   [RD_KAFKA_OP_PARTITION_JOIN] = 1234567,
                                            4967 * ***                   [RD_KAFKA_OP_PARTITION_LEAVE] = 1234567,
                                            4968 * ***                   [RD_KAFKA_OP_REBALANCE] = sizeof(rko->rko_u.re\
                                            4969 * balance),
                                            4970 * ***                   [RD_KAFKA_OP_TERMINATE] = 1234567,
                                            4971 * ***                   [RD_KAFKA_OP_COORD_QUERY] = 1234567,
                                            4972 * ***                   [RD_KAFKA_OP_SUBSCRIBE] = sizeof(rko->rko_u.su\
                                            4973 * bscribe),
                                            4974 * ***                   [RD_KAFKA_OP_ASSIGN] = sizeof(rko->rko_u.assig\
                                            4975 * n),
                                            4976 * ***                   [RD_KAFKA_OP_GET_SUBSCRIPTION] = sizeof(rko->r\
                                            4977 * ko_u.subscribe),
                                            4978 * ***                   [RD_KAFKA_OP_GET_ASSIGNMENT] = sizeof(rko->rko\
                                            4979 * _u.assign),
                                            4980 * ***                   [RD_KAFKA_OP_THROTTLE] = sizeof(rko->rko_u.thr\
                                            4981 * ottle),
                                            4982 * ***                   [RD_KAFKA_OP_NAME] = sizeof(rko->rko_u.name),
                                            4983 * ***                   [RD_KAFKA_OP_CG_METADATA] = sizeof(rko->rko_u.\
                                            4984 * cg_metadata),
                                            4985 * ***                   [RD_KAFKA_OP_OFFSET_RESET] = sizeof(rko->rko_u\
                                            4986 * .offset_reset),
                                            4987 * ***                   [RD_KAFKA_OP_METADATA] = sizeof(rko->rko_u.met\
                                            4988 * adata),
                                            4989 * ***                   [RD_KAFKA_OP_LOG] = sizeof(rko->rko_u.log),
                                            4990 * ***                   [RD_KAFKA_OP_WAKEUP] = 1234567,
                                            4991 * ***                   [RD_KAFKA_OP_CREATETOPICS] = sizeof(rko->rko_u\
                                            4992 * .admin_request),
                                            4993 * ***                   [RD_KAFKA_OP_DELETETOPICS] = sizeof(rko->rko_u\
                                            4994 * .admin_request),
                                            4995 * ***                   [RD_KAFKA_OP_CREATEPARTITIONS] =
                                            4996 * ***                   sizeof(rko->rko_u.admin_request),
                                            4997 * ***                   [RD_KAFKA_OP_ALTERCONFIGS] = sizeof(rko->rko_u\
                                            4998 * .admin_request),
                                            4999 * ***                   [RD_KAFKA_OP_DESCRIBECONFIGS] =
                                            5000 * ***                   sizeof(rko->rko_u.admin_request),
                                            5001 * ***                   [RD_KAFKA_OP_DELETERECORDS] = sizeof(rko->rko_\
                                            5002 * u.admin_request),
                                            5003 * ***                   [RD_KAFKA_OP_DELETEGROUPS] = sizeof(rko->rko_u\
                                            5004 * .admin_request),
                                            5005 * ***                   [RD_KAFKA_OP_DELETECONSUMERGROUPOFFSETS] =
                                            5006 * ***                   sizeof(rko->rko_u.admin_request),
                                            5007 * ***                   [RD_KAFKA_OP_ADMIN_FANOUT] = sizeof(rko->rko_u\
                                            5008 * .admin_request),
                                            5009 * ***                   [RD_KAFKA_OP_ADMIN_RESULT] = sizeof(rko->rko_u\
                                            5010 * .admin_result),
                                            5011 * ***                   [RD_KAFKA_OP_PURGE] = sizeof(rko->rko_u.purge)\
                                            5012 * ,
                                            5013 * ***                   [RD_KAFKA_OP_CONNECT] = 1234567,
                                            5014 * ***                   [RD_KAFKA_OP_OAUTHBEARER_REFRESH] = 1234567,
                                            5015 * ***                   [RD_KAFKA_OP_MOCK] = sizeof(rko->rko_u.mock),
                                            5016 * ***                   [RD_KAFKA_OP_BROKER_MONITOR] =
                                                                                                                           Page  104 
  Active Usings: @REGION_1405_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5017 * ***                   sizeof(rko->rko_u.broker_monitor),
                                            5018 * ***                   [RD_KAFKA_OP_TXN] = sizeof(rko->rko_u.txn),
                                            5019 * ***                   [RD_KAFKA_OP_GET_REBALANCE_PROTOCOL] =
                                            5020 * ***                   sizeof(rko->rko_u.rebalance_protocol),
                                            5021 * ***                   [RD_KAFKA_OP_LEADERS] = sizeof(rko->rko_u.lead\
                                            5022 * ers),
                                            5023 * ***                   [RD_KAFKA_OP_BARRIER] = 1234567,
                                            5024 * ***           };
                                            5025 * ***           size_t tsize = op2size[type & ~((int)(1 << 29) | (int)\
                                            5026 * (1 << 30))];
000031BE 5830 100C               0000000C   5027          L     3,12(0,1)   ; type
000031C2 18F3                               5028          LR    15,3
000031C4 A5F6 9FFF               00009FFF   5029          NILH  15,40959
000031C8 B914 00FF                          5030          LGFR  15,15
000031CC E310 C088 0004          00003208   5031          LG    1,@lit_1405_142
000031D2 EBFF 0003 000D          00000003   5032          SLLG  15,15,3(0)  ; *0x8
000031D8 E32F 11B8 0004          000001B8   5033          LG    2,440(15,1)
                                            5034 * ***
                                            5035 * ***           ((tsize > 0 || !*"add OP type to rd_kafka_op_new0()") \
                                            5036 * ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkaf\
                                            5037 * ka_op.c", 245, "tsize > 0 || !*\"add OP type to rd_kafka_op_new0()\"\
                                            5038 * "));
000031DE C22E 0000 0000                     5039          CLGFI 2,X'00000000'
000031E4 4720 C0D8               00003258   5040          BH    @L654
000031E8 E3F0 C090 0004          00003210   5041          LG    15,@lit_1405_143
000031EE 4140 F258               00000258   5042          LA    4,600(0,15)
000031F2 9500 4000      00000000 00000000   5043          CLI   0(4),0
000031F6 4770 C0A8               00003228   5044          BNE   @L652
000031FA                                    5045 @L653    DS    0H
000031FA 47F0 C0D8               00003258   5046          B     @L654
00003200                                    5047          DS    0D
00003200 000000D0                           5048 @FRAMESIZE_1405 DC F'208'
00003204 00000000
00003208 0000000000005F80                   5049 @lit_1405_142 DC AD(@DATA)
00003210 000000000000635E                   5050 @lit_1405_143 DC AD(@strings@)
00003218 0000000000000000                   5051 @lit_1405_144 DC AD(__assert)
00003220 0000000000000560                   5052 @lit_1405_146 DC AD(rd_calloc)
00003228                                    5053 @L652    DS    0H
00003228 4110 1350               00000350   5054          LA    1,848(0,1)
0000322C E310 D0B0 0024          000000B0   5055          STG   1,176(0,13)
00003232 4110 F0B8               000000B8   5056          LA    1,184(0,15)
00003236 E310 D0B8 0024          000000B8   5057          STG   1,184(0,13)
0000323C E548 D0C0 00F5          000000C0   5058          MVGHI 192(13),245
00003242 41F0 F27A               0000027A   5059          LA    15,634(0,15)
00003246 E3F0 D0C8 0024          000000C8   5060          STG   15,200(0,13)
0000324C 4110 D0B0               000000B0   5061          LA    1,176(0,13)
00003250 E3F0 C098 0004          00003218   5062          LG    15,@lit_1405_144 ; __assert
00003256                                    5063 @@gen_label225 DS    0H
00003256 05EF                               5064          BALR  14,15
00003258                                    5065 @@gen_label226 DS    0H
00003258                                    5066 @L654    DS    0H
                                            5067 * ***           if (tsize == 1234567)
                                                                                                                           Page  105 
  Active Usings: @REGION_1405_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003258 C22C 0012 D687                     5068          CGFI  2,X'0012D687'
0000325E 4770 C0E6               00003266   5069          BNE   @L655
                                            5070 * ***                   tsize = 0;
00003262 A729 0000               00000000   5071          LGHI  2,0         ; 0
00003266                                    5072 @L655    DS    0H
                                            5073 * ***
                                            5074 * ***      rko = rd_calloc(1, sizeof(*rko)-sizeof(rko->rko_u)+tsize);
00003266 E548 D0B0 0001          000000B0   5075          MVGHI 176(13),1
0000326C A72B 0070               00000070   5076          AGHI  2,112
00003270 E320 D0B8 0024          000000B8   5077          STG   2,184(0,13)
00003276 4110 D0B0               000000B0   5078          LA    1,176(0,13)
0000327A E3F0 C0A0 0004          00003220   5079          LG    15,@lit_1405_146 ; rd_calloc
00003280                                    5080 @@gen_label228 DS    0H
00003280 05EF                               5081          BALR  14,15
00003282                                    5082 @@gen_label229 DS    0H
                                            5083 * ***      rko->rko_type = type;
00003282 5030 F010               00000010   5084          ST    3,16(0,15)  ; offset of rko_type in rd_kafka_op_s
                                            5085 * ***
                                            5086 * ***
                                            5087 * ***
                                            5088 * ***
                                            5089 * ***
                                            5090 * ***      return rko;
                                            5091 * ***   }
                                            5092 * * **** Start of Epilogue
                                            5093          DCCEPIL
00003286                                    5094+         ds 0h                                                          01-DCCEP
                                            5095+* Epilog
00003286 D707 D088 D088 00000088 00000088   5096+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000328C E3D0 D080 0004          00000080   5097+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003292 E3C0 D090 0004          00000090   5098+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003298 E3B0 C018 0004          00000018   5099+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000329E E3C0 B010 0021          00000010   5100+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000032A4 E3E0 D008 0004          00000008   5101+         lg  14,8(0,13)          load up return address                 01-DCCEP
000032AA EB1C D020 0004          00000020   5102+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000032B0 078E                               5103+         bcr 8,14                if same dsab, just return              01-DCCEP
000032B2 E3F0 D010 0024          00000010   5104+         stg 15,16(0,13)         save return code                       01-DCCEP
000032B8 E300 D018 0024          00000018   5105+         stg 0,24(0,13)          save more return code                  01-DCCEP
000032BE E3F0 D090 0004          00000090   5106+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000032C4 E3F0 F018 0004          00000018   5107+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000032CA 47F0 F040               00000040   5108+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5109+* End of Epilog
                                            5110 * * **** End of Epilogue
                                            5111          DROP  12
                                            5112 *
                                            5113 *   DSECT for automatic variables in "rd_kafka_op_new0"
                                            5114 *      (FUNCTION #1405)
                                            5115 *
00000000                00000000 000000B0   5116 @AUTO#rd_kafka_op_new0 DSECT
00000000                                    5117          DS    XL168
000000A8                                    5118 rd_kafka_op_new0#tsize#0 DS 8XL1 ; tsize
                                            5119 *
                                                                                                                           Page  106 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000032CE                00000000 00005F80   5120 @CODE    CSECT
                                            5121 *
                                            5122 *
                                            5123 *
                                            5124 * ....... start of rd_kafka_op_destroy
                                            5125 rd_kafka_op_destroy ALIAS X'99846D92818692816D96976D8485A2A39996A8'
000032CE                                    5126 @LNAME1404 DS  0H
000032CE 00000013                           5127          DC    X'00000013'
000032D2 99846D9281869281                   5128          DC    C'rd_kafka_op_destroy'
000032E5 00                                 5129          DC    X'00'
                                            5130 rd_kafka_op_destroy DCCPRLG CINDEX=1404,BASER=12,FRAME=208,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1404
                                            5131          macro
                                            5132          dccextrn &m
                                            5133          gblc    &$dccext(1000)
                                            5134          gbla    &$dccexti
                                            5135          lcla    &i
                                            5136 &$dccext(&$dccexti+1) setc    '&m'
                                            5137 &i       seta    1
                                            5138 .loop    aif    (&i gt &$dccexti).around
                                            5139          aif    ('&$dccext(&i)' eq '&m').getout
                                            5140 &i       seta    &i+1
                                            5141          ago     .loop
                                            5142 .around  anop
                                            5143 &$dccexti seta &$dccexti+1
                                            5144          extrn  &m
                                            5145 .getout  anop
                                            5146          mend
000032E8                                    5147+$eye0108    ds    0d                                                    02-DCCCA
000032E8 C4C3C3                             5148+         dc cl3'DCC'                                                    02-DCCCA
000032EB 01                                 5149+         dc xl1'01' format one                                          02-DCCCA
000032EC 00000000                           5150+         dc a(0)                                                        02-DCCCA
000032F0 000000000000335A                   5151+         dc ad(@PER_1404)                                               02-DCCCA
000032F8 00000000000000D0                   5152+         dc ad(208)                                                     02-DCCCA
00003300 0000000000000000                   5153+         dc ad(0)                                                       02-DCCCA
00003308 0000000000001000                   5154+         dc ad(4096)                                                    02-DCCCA
00003310 20                                 5155+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003311 03                                 5156+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003312 03                                 5157+         dc al1(3)                                                      02-DCCCA
00003313 08                                 5158+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003314 00                                 5159+         dc bl.8'00000000'                                              02-DCCCA
00003315 000000                             5160+         dc al3(0)                                                      02-DCCCA
00003318 00000000000032CE                   5161+         dc ad(@LNAME1404)                                              02-DCCCA
00003320                                    5162+         ds 0d                                                          02-DCCCA
00003320 00000000000032E8                   5163+         dc ad($eye0108)                                                02-DCCCA
00003328 0000000000000000                   5164+         dc ad(0)                                                       02-DCCCA
00003330                                    5165+         ds    0d                                                       01-DCCPR
                                            5166+         entry rd_kafka_op_destroy                                      01-DCCPR
00003330                                    5167+rd_kafka_op_destroy ds 0d                                               01-DCCPR
00003330                                    5168+@REGION_1404_1 ds 0h                                                    01-DCCPR
00003330 EBEC D008 0024          00000008   5169+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003336 E3E0 D088 0004          00000088   5170+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page  107 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000333C E3C0 D090 0004          00000090   5171+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003342 B904 002E                          5172+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003346 E3B0 C018 0004          00000018   5173+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000334C A7EB 00D0               000000D0   5174+         aghi  14,208              increase by frame size               01-DCCPR
00003350 E3E0 C020 0021          00000020   5175+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003356 4720 B020               00000020   5176+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000335A                                    5177+@PER_1404 ds   0h                                                       01-DCCPR
0000335A EBDE 2080 0024          00000080   5178+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003360 E3C0 2090 0024          00000090   5179+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003366 B904 00D2                          5180+         lgr   13,2                set real frame pointer               01-DCCPR
0000336A B904 00CF                          5181+         lgr   12,15               set base reg                         01-DCCPR
                        00003330            5182+         using @REGION_1404_1,12                                        01-DCCPR
                                            5183 * ******* End of Prologue
                                            5184 * *
0000336E E320 1000 0004          00000000   5185          LG    2,0(0,1)    ; rko
                                            5186 * ***
                                            5187 * ***
                                            5188 * ***
                                            5189 * ***           if ((rko->rko_type & (int)(1 << 29)) && rko->rko_op_cb\
                                            5190 * ) {
00003374 9120 2010      00000010 00000020   5191          TM    16(2),32
00003378 4770 C056               00003386   5192          BNZ   *+14  Around region break
0000337C E3C0 C12C 001A          0000345C   5193          ALGF  12,@lit_region_diff_1404_1_2
                                            5194          DROP  12
                        00003BC8            5195          USING @REGION_1404_2,12
00003382 47F0 C14C               00003D14   5196          B     @L661
                                            5197          DROP  12
                        00003330            5198          USING @REGION_1404_1,12
00003386 E3F0 2068 0002          00000068   5199          LTG   15,104(0,2) ; offset of rko_op_cb in rd_kafka_op_s
0000338C 4770 C06A               0000339A   5200          BNZ   *+14  Around region break
00003390 E3C0 C12C 001A          0000345C   5201          ALGF  12,@lit_region_diff_1404_1_2
                                            5202          DROP  12
                        00003BC8            5203          USING @REGION_1404_2,12
00003396 47F0 C14C               00003D14   5204          B     @L661
                                            5205          DROP  12
                        00003330            5206          USING @REGION_1404_1,12
                                            5207 * ***                   rd_kafka_op_res_t res;
                                            5208 * ***                   rko->rko_err = RD_KAFKA_RESP_ERR__DESTROY;
0000339A E54C 2020 FF3B          00000020   5209          MVHI  32(2),-197  ; offset of rko_err in rd_kafka_op_s
                                            5210 * ***                   res = rko->rko_op_cb(rko->rko_rk, ((void *)0),\
                                            5211 *  rko);
000033A0 E3F0 2060 0004          00000060   5212          LG    15,96(0,2)
000033A6 E3F0 D0B0 0024          000000B0   5213          STG   15,176(0,13)
000033AC D707 D0B8 D0B8 000000B8 000000B8   5214          XC    184(8,13),184(13)
000033B2 E320 D0C0 0024          000000C0   5215          STG   2,192(0,13)
000033B8 E3F0 2068 0004          00000068   5216          LG    15,104(0,2) ; offset of rko_op_cb in rd_kafka_op_s
000033BE 4110 D0B0               000000B0   5217          LA    1,176(0,13)
000033C2                                    5218 @@gen_label232 DS    0H
000033C2 05EF                               5219          BALR  14,15
000033C4                                    5220 @@gen_label233 DS    0H
000033C4 183F                               5221          LR    3,15
                                            5222 * ***                   ((res != RD_KAFKA_OP_RES_YIELD) ? (void)0 : __\
                                                                                                                           Page  108 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5223 * assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_op.c", 268,\
                                            5224 *  "res != RD_KAFKA_OP_RES_YIELD"));
000033C6 A73E 0003               00000003   5225          CHI   3,3
000033CA 4770 C0DA               0000340A   5226          BNE   @L658
000033CE                                    5227 @L657    DS    0H
000033CE E3F0 C140 0004          00003470   5228          LG    15,@lit_1404_148
000033D4 41F0 F362               00000362   5229          LA    15,866(0,15)
000033D8 E3F0 D0B0 0024          000000B0   5230          STG   15,176(0,13)
000033DE E3F0 C138 0004          00003468   5231          LG    15,@lit_1404_149
000033E4 4110 F0B8               000000B8   5232          LA    1,184(0,15)
000033E8 E310 D0B8 0024          000000B8   5233          STG   1,184(0,13)
000033EE E548 D0C0 010C          000000C0   5234          MVGHI 192(13),268
000033F4 41F0 F2AE               000002AE   5235          LA    15,686(0,15)
000033F8 E3F0 D0C8 0024          000000C8   5236          STG   15,200(0,13)
000033FE 4110 D0B0               000000B0   5237          LA    1,176(0,13)
00003402 E3F0 C130 0004          00003460   5238          LG    15,@lit_1404_150 ; __assert
00003408                                    5239 @@gen_label235 DS    0H
00003408 05EF                               5240          BALR  14,15
0000340A                                    5241 @@gen_label236 DS    0H
0000340A                                    5242 @L658    DS    0H
                                            5243 * ***                   ((res != RD_KAFKA_OP_RES_KEEP) ? (void)0 : __a\
                                            5244 * ssert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_op.c", 269, \
                                            5245 * "res != RD_KAFKA_OP_RES_KEEP"));
0000340A A73E 0002               00000002   5246          CHI   3,2
0000340E 4770 C11E               0000344E   5247          BNE   @L660
00003412                                    5248 @L659    DS    0H
00003412 E3F0 C140 0004          00003470   5249          LG    15,@lit_1404_148
00003418 41F0 F362               00000362   5250          LA    15,866(0,15)
0000341C E3F0 D0B0 0024          000000B0   5251          STG   15,176(0,13)
00003422 E3F0 C138 0004          00003468   5252          LG    15,@lit_1404_149
00003428 4110 F0B8               000000B8   5253          LA    1,184(0,15)
0000342C E310 D0B8 0024          000000B8   5254          STG   1,184(0,13)
00003432 E548 D0C0 010D          000000C0   5255          MVGHI 192(13),269
00003438 41F0 F2CC               000002CC   5256          LA    15,716(0,15)
0000343C E3F0 D0C8 0024          000000C8   5257          STG   15,200(0,13)
00003442 4110 D0B0               000000B0   5258          LA    1,176(0,13)
00003446 E3F0 C130 0004          00003460   5259          LG    15,@lit_1404_150 ; __assert
0000344C                                    5260 @@gen_label238 DS    0H
0000344C 05EF                               5261          BALR  14,15
0000344E                                    5262 @@gen_label239 DS    0H
0000344E                                    5263 @L660    DS    0H
                                            5264 * ***           }
0000344E                                    5265 @L656    DS    0H
                                            5266 * ***
                                            5267 * ***
                                            5268 * ***      switch (rko->rko_type & ~((int)(1 << 29) | (int)(1 << 30)))
0000344E E3C0 C12C 001A          0000345C   5269          ALGF  12,@lit_region_diff_1404_1_2
                                            5270          DROP  12
                        00003BC8            5271          USING @REGION_1404_2,12
00003454 47F0 C14C               00003D14   5272          B     @L661
                                            5273          DROP  12
                        00003330            5274          USING @REGION_1404_1,12
                                                                                                                           Page  109 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003458                                    5275          DS    0D
00003458 000000D0                           5276 @FRAMESIZE_1404 DC F'208'
0000345C 00000898                           5277 @lit_region_diff_1404_1_2  DC A(@REGION_1404_2-@REGION_1404_1)
00003460 0000000000000000                   5278 @lit_1404_150 DC AD(__assert)
00003468 000000000000635E                   5279 @lit_1404_149 DC AD(@strings@)
00003470 0000000000005F80                   5280 @lit_1404_148 DC AD(@DATA)
00003478 0000000000000000                   5281 @lit_1404_154 DC AD(rd_kafka_msg_destroy)
00003480 0000000000000000                   5282 @lit_1404_155 DC AD(rd_kafka_buf_handle_op)
00003488 0000000000000000                   5283 @lit_1404_156 DC AD(rd_kafka_topic_partition_list_destroy)
00003490 00000000000006D0                   5284 @lit_1404_158 DC AD(rd_free)
00003498 0000000000000000                   5285 @lit_1404_163 DC AD(rd_kafka_consumer_group_metadata_destroy)
000034A0 0000000000000948                   5286 @lit_1404_169 DC AD(rd_refcnt_sub0)
000034A8 0000000000000000                   5287 @lit_1404_170 DC AD(rd_kafka_buf_destroy_final)
000034B0 0000000000000DC0                   5288 @lit_1404_171 DC AD(rd_kafka_msgq_purge)
000034B8 00000000000026E0                   5289 @lit_1404_173 DC AD(rd_kafka_topic_destroy0)
000034C0 0000000000000000                   5290 @lit_1404_175 DC AD(rd_kafka_metadata_destroy)
000034C8 0000000000000000                   5291 @lit_1404_180 DC AD(rd_list_destroy)
000034D0 0000000000002238                   5292 @lit_1404_181 DC AD(rd_kafka_replyq_destroy)
000034D8 0000000000000000                   5293 @lit_1404_195 DC AD(rd_kafka_broker_destroy_final)
                                            5294 * ***      {
                                            5295 * ***      case RD_KAFKA_OP_FETCH:
000034E0                                    5296 @L663    DS    0H
                                            5297 * ***         rd_kafka_msg_destroy(((void *)0), &rko->rko_u.fetch.rkm)\
                                            5298 * ;
000034E0 D707 D0B0 D0B0 000000B0 000000B0   5299          XC    176(8,13),176(13)
000034E6 41F0 2078               00000078   5300          LA    15,120(0,2)
000034EA E3F0 D0B8 0024          000000B8   5301          STG   15,184(0,13)
000034F0 4110 D0B0               000000B0   5302          LA    1,176(0,13)
000034F4 E3F0 C148 0004          00003478   5303          LG    15,@lit_1404_154 ; rd_kafka_msg_destroy
000034FA                                    5304 @@gen_label240 DS    0H
000034FA 05EF                               5305          BALR  14,15
000034FC                                    5306 @@gen_label241 DS    0H
                                            5307 * ***
                                            5308 * ***         if (rko->rko_u.fetch.rkbuf)
000034FC E3F0 2070 0002          00000070   5309          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
00003502 4770 C1E0               00003510   5310          BNZ   *+14  Around region break
00003506 E3C0 C12C 001A          0000345C   5311          ALGF  12,@lit_region_diff_1404_1_2
                                            5312          DROP  12
                        00003BC8            5313          USING @REGION_1404_2,12
0000350C 47F0 C490               00004058   5314          B     @L810
                                            5315          DROP  12
                        00003330            5316          USING @REGION_1404_1,12
                                            5317 * ***            rd_kafka_buf_handle_op(rko, RD_KAFKA_RESP_ERR__DESTRO\
                                            5318 * Y);
00003510 E320 D0B0 0024          000000B0   5319          STG   2,176(0,13)
00003516 E548 D0B8 FF3B          000000B8   5320          MVGHI 184(13),-197
0000351C 4110 D0B0               000000B0   5321          LA    1,176(0,13)
00003520 E3F0 C150 0004          00003480   5322          LG    15,@lit_1404_155 ; rd_kafka_buf_handle_op
00003526                                    5323 @@gen_label243 DS    0H
00003526 05EF                               5324          BALR  14,15
00003528                                    5325 @@gen_label244 DS    0H
00003528                                    5326 @L664    DS    0H
                                                                                                                           Page  110 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5327 * ***
                                            5328 * ***         break;
00003528 E3C0 C12C 001A          0000345C   5329          ALGF  12,@lit_region_diff_1404_1_2
                                            5330          DROP  12
                        00003BC8            5331          USING @REGION_1404_2,12
0000352E 47F0 C490               00004058   5332          B     @L810
                                            5333          DROP  12
                        00003330            5334          USING @REGION_1404_1,12
                                            5335 * ***
                                            5336 * ***      case RD_KAFKA_OP_OFFSET_FETCH:
00003532                                    5337 @L665    DS    0H
                                            5338 * ***         if (rko->rko_u.offset_fetch.partitions &&
00003532 E3F0 2070 0002          00000070   5339          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
00003538 4770 C216               00003546   5340          BNZ   *+14  Around region break
0000353C E3C0 C12C 001A          0000345C   5341          ALGF  12,@lit_region_diff_1404_1_2
                                            5342          DROP  12
                        00003BC8            5343          USING @REGION_1404_2,12
00003542 47F0 C490               00004058   5344          B     @L810
                                            5345          DROP  12
                        00003330            5346          USING @REGION_1404_1,12
                                            5347 * ***             rko->rko_u.offset_fetch.do_free)
00003546 E3F0 207C 0012          0000007C   5348          LT    15,124(0,2) ; offset of do_free in 0000058
0000354C 4770 C22A               0000355A   5349          BNZ   *+14  Around region break
00003550 E3C0 C12C 001A          0000345C   5350          ALGF  12,@lit_region_diff_1404_1_2
                                            5351          DROP  12
                        00003BC8            5352          USING @REGION_1404_2,12
00003556 47F0 C490               00004058   5353          B     @L810
                                            5354          DROP  12
                        00003330            5355          USING @REGION_1404_1,12
                                            5356 * ***            rd_kafka_topic_partition_list_destroy(
                                            5357 * ***               rko->rko_u.offset_fetch.partitions);
0000355A E3F0 2070 0004          00000070   5358          LG    15,112(0,2)
00003560 E3F0 D0B0 0024          000000B0   5359          STG   15,176(0,13)
00003566 4110 D0B0               000000B0   5360          LA    1,176(0,13)
0000356A E3F0 C158 0004          00003488   5361          LG    15,@lit_1404_156 ; rd_kafka_topic_partition_list_destroy
00003570                                    5362 @@gen_label247 DS    0H
00003570 05EF                               5363          BALR  14,15
00003572                                    5364 @@gen_label248 DS    0H
00003572                                    5365 @L666    DS    0H
                                            5366 * ***         break;
00003572 E3C0 C12C 001A          0000345C   5367          ALGF  12,@lit_region_diff_1404_1_2
                                            5368          DROP  12
                        00003BC8            5369          USING @REGION_1404_2,12
00003578 47F0 C490               00004058   5370          B     @L810
                                            5371          DROP  12
                        00003330            5372          USING @REGION_1404_1,12
                                            5373 * ***
                                            5374 * ***      case RD_KAFKA_OP_OFFSET_COMMIT:
                                            5375 * ***         do { if ((rko->rko_u.offset_commit.partitions)) rd_kafka\
                                            5376 * _topic_partition_list_destroy(rko->rko_u.offset_commit.partitions); \
                                            5377 * } while (0);
0000357C                                    5378 @L668    DS    0H
                                                                                                                           Page  111 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000357C E3F0 2070 0002          00000070   5379          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
00003582 4780 C26E               0000359E   5380          BZ    @L671
00003586 E3F0 2070 0004          00000070   5381          LG    15,112(0,2)
0000358C E3F0 D0B0 0024          000000B0   5382          STG   15,176(0,13)
00003592 4110 D0B0               000000B0   5383          LA    1,176(0,13)
00003596 E3F0 C158 0004          00003488   5384          LG    15,@lit_1404_156 ; rd_kafka_topic_partition_list_destroy
0000359C                                    5385 @@gen_label250 DS    0H
0000359C 05EF                               5386          BALR  14,15
0000359E                                    5387 @@gen_label251 DS    0H
0000359E                                    5388 @L671    DS    0H
                                            5389 * ***
                                            5390 * ***                   do { if ((rko->rko_u.offset_commit.reason)) rd\
                                            5391 * _free(rko->rko_u.offset_commit.reason); } while (0);
0000359E                                    5392 @L672    DS    0H
0000359E E3F0 2098 0002          00000098   5393          LTG   15,152(0,2) ; offset of reason in 0000059
000035A4 4770 C282               000035B2   5394          BNZ   *+14  Around region break
000035A8 E3C0 C12C 001A          0000345C   5395          ALGF  12,@lit_region_diff_1404_1_2
                                            5396          DROP  12
                        00003BC8            5397          USING @REGION_1404_2,12
000035AE 47F0 C490               00004058   5398          B     @L810
                                            5399          DROP  12
                        00003330            5400          USING @REGION_1404_1,12
000035B2 E3F0 2098 0004          00000098   5401          LG    15,152(0,2)
000035B8 E3F0 D0B0 0024          000000B0   5402          STG   15,176(0,13)
000035BE 4110 D0B0               000000B0   5403          LA    1,176(0,13)
000035C2 E3F0 C160 0004          00003490   5404          LG    15,@lit_1404_158 ; rd_free
000035C8                                    5405 @@gen_label253 DS    0H
000035C8 05EF                               5406          BALR  14,15
000035CA                                    5407 @@gen_label254 DS    0H
000035CA                                    5408 @L675    DS    0H
                                            5409 * ***         break;
000035CA E3C0 C12C 001A          0000345C   5410          ALGF  12,@lit_region_diff_1404_1_2
                                            5411          DROP  12
                        00003BC8            5412          USING @REGION_1404_2,12
000035D0 47F0 C490               00004058   5413          B     @L810
                                            5414          DROP  12
                        00003330            5415          USING @REGION_1404_1,12
                                            5416 * ***
                                            5417 * ***      case RD_KAFKA_OP_SUBSCRIBE:
                                            5418 * ***      case RD_KAFKA_OP_GET_SUBSCRIPTION:
                                            5419 * ***         do { if ((rko->rko_u.subscribe.topics)) rd_kafka_topic_p\
                                            5420 * artition_list_destroy(rko->rko_u.subscribe.topics); } while (0);
000035D4                                    5421 @L678    DS    0H
000035D4 E3F0 2070 0002          00000070   5422          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
000035DA 4770 C2B8               000035E8   5423          BNZ   *+14  Around region break
000035DE E3C0 C12C 001A          0000345C   5424          ALGF  12,@lit_region_diff_1404_1_2
                                            5425          DROP  12
                        00003BC8            5426          USING @REGION_1404_2,12
000035E4 47F0 C490               00004058   5427          B     @L810
                                            5428          DROP  12
                        00003330            5429          USING @REGION_1404_1,12
000035E8 E3F0 2070 0004          00000070   5430          LG    15,112(0,2)
                                                                                                                           Page  112 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000035EE E3F0 D0B0 0024          000000B0   5431          STG   15,176(0,13)
000035F4 4110 D0B0               000000B0   5432          LA    1,176(0,13)
000035F8 E3F0 C158 0004          00003488   5433          LG    15,@lit_1404_156 ; rd_kafka_topic_partition_list_destroy
000035FE                                    5434 @@gen_label256 DS    0H
000035FE 05EF                               5435          BALR  14,15
00003600                                    5436 @@gen_label257 DS    0H
00003600                                    5437 @L681    DS    0H
                                            5438 * ***
                                            5439 * ***         break;
00003600 E3C0 C12C 001A          0000345C   5440          ALGF  12,@lit_region_diff_1404_1_2
                                            5441          DROP  12
                        00003BC8            5442          USING @REGION_1404_2,12
00003606 47F0 C490               00004058   5443          B     @L810
                                            5444          DROP  12
                        00003330            5445          USING @REGION_1404_1,12
                                            5446 * ***
                                            5447 * ***      case RD_KAFKA_OP_ASSIGN:
                                            5448 * ***      case RD_KAFKA_OP_GET_ASSIGNMENT:
                                            5449 * ***         do { if ((rko->rko_u.assign.partitions)) rd_kafka_topic_\
                                            5450 * partition_list_destroy(rko->rko_u.assign.partitions); } while (0);
0000360A                                    5451 @L684    DS    0H
0000360A E3F0 2070 0002          00000070   5452          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
00003610 4770 C2EE               0000361E   5453          BNZ   *+14  Around region break
00003614 E3C0 C12C 001A          0000345C   5454          ALGF  12,@lit_region_diff_1404_1_2
                                            5455          DROP  12
                        00003BC8            5456          USING @REGION_1404_2,12
0000361A 47F0 C490               00004058   5457          B     @L810
                                            5458          DROP  12
                        00003330            5459          USING @REGION_1404_1,12
0000361E E3F0 2070 0004          00000070   5460          LG    15,112(0,2)
00003624 E3F0 D0B0 0024          000000B0   5461          STG   15,176(0,13)
0000362A 4110 D0B0               000000B0   5462          LA    1,176(0,13)
0000362E E3F0 C158 0004          00003488   5463          LG    15,@lit_1404_156 ; rd_kafka_topic_partition_list_destroy
00003634                                    5464 @@gen_label259 DS    0H
00003634 05EF                               5465          BALR  14,15
00003636                                    5466 @@gen_label260 DS    0H
00003636                                    5467 @L687    DS    0H
                                            5468 * ***
                                            5469 * ***         break;
00003636 E3C0 C12C 001A          0000345C   5470          ALGF  12,@lit_region_diff_1404_1_2
                                            5471          DROP  12
                        00003BC8            5472          USING @REGION_1404_2,12
0000363C 47F0 C490               00004058   5473          B     @L810
                                            5474          DROP  12
                        00003330            5475          USING @REGION_1404_1,12
                                            5476 * ***
                                            5477 * ***      case RD_KAFKA_OP_REBALANCE:
                                            5478 * ***         do { if ((rko->rko_u.rebalance.partitions)) rd_kafka_top\
                                            5479 * ic_partition_list_destroy(rko->rko_u.rebalance.partitions); } while \
                                            5480 * (0);
00003640                                    5481 @L689    DS    0H
00003640 E3F0 2070 0002          00000070   5482          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
                                                                                                                           Page  113 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003646 4770 C324               00003654   5483          BNZ   *+14  Around region break
0000364A E3C0 C12C 001A          0000345C   5484          ALGF  12,@lit_region_diff_1404_1_2
                                            5485          DROP  12
                        00003BC8            5486          USING @REGION_1404_2,12
00003650 47F0 C490               00004058   5487          B     @L810
                                            5488          DROP  12
                        00003330            5489          USING @REGION_1404_1,12
00003654 E3F0 2070 0004          00000070   5490          LG    15,112(0,2)
0000365A E3F0 D0B0 0024          000000B0   5491          STG   15,176(0,13)
00003660 4110 D0B0               000000B0   5492          LA    1,176(0,13)
00003664 E3F0 C158 0004          00003488   5493          LG    15,@lit_1404_156 ; rd_kafka_topic_partition_list_destroy
0000366A                                    5494 @@gen_label262 DS    0H
0000366A 05EF                               5495          BALR  14,15
0000366C                                    5496 @@gen_label263 DS    0H
0000366C                                    5497 @L692    DS    0H
                                            5498 * ***
                                            5499 * ***         break;
0000366C E3C0 C12C 001A          0000345C   5500          ALGF  12,@lit_region_diff_1404_1_2
                                            5501          DROP  12
                        00003BC8            5502          USING @REGION_1404_2,12
00003672 47F0 C490               00004058   5503          B     @L810
                                            5504          DROP  12
                        00003330            5505          USING @REGION_1404_1,12
                                            5506 * ***
                                            5507 * ***      case RD_KAFKA_OP_NAME:
                                            5508 * ***         do { if ((rko->rko_u.name.str)) rd_free(rko->rko_u.name.\
                                            5509 * str); } while (0);
00003676                                    5510 @L694    DS    0H
00003676 E3F0 2070 0002          00000070   5511          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
0000367C 4770 C35A               0000368A   5512          BNZ   *+14  Around region break
00003680 E3C0 C12C 001A          0000345C   5513          ALGF  12,@lit_region_diff_1404_1_2
                                            5514          DROP  12
                        00003BC8            5515          USING @REGION_1404_2,12
00003686 47F0 C490               00004058   5516          B     @L810
                                            5517          DROP  12
                        00003330            5518          USING @REGION_1404_1,12
0000368A E3F0 2070 0004          00000070   5519          LG    15,112(0,2)
00003690 E3F0 D0B0 0024          000000B0   5520          STG   15,176(0,13)
00003696 4110 D0B0               000000B0   5521          LA    1,176(0,13)
0000369A E3F0 C160 0004          00003490   5522          LG    15,@lit_1404_158 ; rd_free
000036A0                                    5523 @@gen_label265 DS    0H
000036A0 05EF                               5524          BALR  14,15
000036A2                                    5525 @@gen_label266 DS    0H
000036A2                                    5526 @L697    DS    0H
                                            5527 * ***         break;
000036A2 E3C0 C12C 001A          0000345C   5528          ALGF  12,@lit_region_diff_1404_1_2
                                            5529          DROP  12
                        00003BC8            5530          USING @REGION_1404_2,12
000036A8 47F0 C490               00004058   5531          B     @L810
                                            5532          DROP  12
                        00003330            5533          USING @REGION_1404_1,12
                                            5534 * ***
                                                                                                                           Page  114 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5535 * ***      case RD_KAFKA_OP_CG_METADATA:
                                            5536 * ***                   do { if ((rko->rko_u.cg_metadata)) rd_kafka_co\
                                            5537 * nsumer_group_metadata_destroy(rko->rko_u.cg_metadata); } while (0);
000036AC                                    5538 @L699    DS    0H
000036AC E3F0 2070 0002          00000070   5539          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
000036B2 4770 C390               000036C0   5540          BNZ   *+14  Around region break
000036B6 E3C0 C12C 001A          0000345C   5541          ALGF  12,@lit_region_diff_1404_1_2
                                            5542          DROP  12
                        00003BC8            5543          USING @REGION_1404_2,12
000036BC 47F0 C490               00004058   5544          B     @L810
                                            5545          DROP  12
                        00003330            5546          USING @REGION_1404_1,12
000036C0 E3F0 2070 0004          00000070   5547          LG    15,112(0,2)
000036C6 E3F0 D0B0 0024          000000B0   5548          STG   15,176(0,13)
000036CC 4110 D0B0               000000B0   5549          LA    1,176(0,13)
000036D0 E3F0 C168 0004          00003498   5550          LG    15,@lit_1404_163 ; rd_kafka_consumer_group_metadata_dest*
                                                                roy
000036D6                                    5551 @@gen_label268 DS    0H
000036D6 05EF                               5552          BALR  14,15
000036D8                                    5553 @@gen_label269 DS    0H
000036D8                                    5554 @L702    DS    0H
                                            5555 * ***
                                            5556 * ***         break;
000036D8 E3C0 C12C 001A          0000345C   5557          ALGF  12,@lit_region_diff_1404_1_2
                                            5558          DROP  12
                        00003BC8            5559          USING @REGION_1404_2,12
000036DE 47F0 C490               00004058   5560          B     @L810
                                            5561          DROP  12
                        00003330            5562          USING @REGION_1404_1,12
                                            5563 * ***
                                            5564 * ***      case RD_KAFKA_OP_ERR:
                                            5565 * ***      case RD_KAFKA_OP_CONSUMER_ERR:
                                            5566 * ***         do { if ((rko->rko_u.err.errstr)) rd_free(rko->rko_u.err\
                                            5567 * .errstr); } while (0);
000036E2                                    5568 @L705    DS    0H
000036E2 E3F0 2078 0002          00000078   5569          LTG   15,120(0,2) ; offset of errstr in 0000065
000036E8 4780 C3D4               00003704   5570          BZ    @L708
000036EC E3F0 2078 0004          00000078   5571          LG    15,120(0,2)
000036F2 E3F0 D0B0 0024          000000B0   5572          STG   15,176(0,13)
000036F8 4110 D0B0               000000B0   5573          LA    1,176(0,13)
000036FC E3F0 C160 0004          00003490   5574          LG    15,@lit_1404_158 ; rd_free
00003702                                    5575 @@gen_label271 DS    0H
00003702 05EF                               5576          BALR  14,15
00003704                                    5577 @@gen_label272 DS    0H
00003704                                    5578 @L708    DS    0H
                                            5579 * ***         rd_kafka_msg_destroy(((void *)0), &rko->rko_u.err.rkm);
00003704 D707 D0B0 D0B0 000000B0 000000B0   5580          XC    176(8,13),176(13)
0000370A 41F0 2080               00000080   5581          LA    15,128(0,2)
0000370E E3F0 D0B8 0024          000000B8   5582          STG   15,184(0,13)
00003714 4110 D0B0               000000B0   5583          LA    1,176(0,13)
00003718 E3F0 C148 0004          00003478   5584          LG    15,@lit_1404_154 ; rd_kafka_msg_destroy
0000371E                                    5585 @@gen_label273 DS    0H
                                                                                                                           Page  115 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000371E 05EF                               5586          BALR  14,15
00003720                                    5587 @@gen_label274 DS    0H
                                            5588 * ***         break;
00003720 E3C0 C12C 001A          0000345C   5589          ALGF  12,@lit_region_diff_1404_1_2
                                            5590          DROP  12
                        00003BC8            5591          USING @REGION_1404_2,12
00003726 47F0 C490               00004058   5592          B     @L810
                                            5593          DROP  12
                        00003330            5594          USING @REGION_1404_1,12
                                            5595 * ***
                                            5596 * ***         break;
                                            5597 * ***
                                            5598 * ***      case RD_KAFKA_OP_THROTTLE:
                                            5599 * ***         do { if ((rko->rko_u.throttle.nodename)) rd_free(rko->rk\
                                            5600 * o_u.throttle.nodename); } while (0);
0000372A                                    5601 @L710    DS    0H
0000372A E3F0 2078 0002          00000078   5602          LTG   15,120(0,2) ; offset of nodename in 0000066
00003730 4770 C40E               0000373E   5603          BNZ   *+14  Around region break
00003734 E3C0 C12C 001A          0000345C   5604          ALGF  12,@lit_region_diff_1404_1_2
                                            5605          DROP  12
                        00003BC8            5606          USING @REGION_1404_2,12
0000373A 47F0 C490               00004058   5607          B     @L810
                                            5608          DROP  12
                        00003330            5609          USING @REGION_1404_1,12
0000373E E3F0 2078 0004          00000078   5610          LG    15,120(0,2)
00003744 E3F0 D0B0 0024          000000B0   5611          STG   15,176(0,13)
0000374A 4110 D0B0               000000B0   5612          LA    1,176(0,13)
0000374E E3F0 C160 0004          00003490   5613          LG    15,@lit_1404_158 ; rd_free
00003754                                    5614 @@gen_label276 DS    0H
00003754 05EF                               5615          BALR  14,15
00003756                                    5616 @@gen_label277 DS    0H
00003756                                    5617 @L713    DS    0H
                                            5618 * ***         break;
00003756 E3C0 C12C 001A          0000345C   5619          ALGF  12,@lit_region_diff_1404_1_2
                                            5620          DROP  12
                        00003BC8            5621          USING @REGION_1404_2,12
0000375C 47F0 C490               00004058   5622          B     @L810
                                            5623          DROP  12
                        00003330            5624          USING @REGION_1404_1,12
                                            5625 * ***
                                            5626 * ***      case RD_KAFKA_OP_STATS:
                                            5627 * ***         do { if ((rko->rko_u.stats.json)) rd_free(rko->rko_u.sta\
                                            5628 * ts.json); } while (0);
00003760                                    5629 @L715    DS    0H
00003760 E3F0 2070 0002          00000070   5630          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
00003766 4770 C444               00003774   5631          BNZ   *+14  Around region break
0000376A E3C0 C12C 001A          0000345C   5632          ALGF  12,@lit_region_diff_1404_1_2
                                            5633          DROP  12
                        00003BC8            5634          USING @REGION_1404_2,12
00003770 47F0 C490               00004058   5635          B     @L810
                                            5636          DROP  12
                        00003330            5637          USING @REGION_1404_1,12
                                                                                                                           Page  116 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003774 E3F0 2070 0004          00000070   5638          LG    15,112(0,2)
0000377A E3F0 D0B0 0024          000000B0   5639          STG   15,176(0,13)
00003780 4110 D0B0               000000B0   5640          LA    1,176(0,13)
00003784 E3F0 C160 0004          00003490   5641          LG    15,@lit_1404_158 ; rd_free
0000378A                                    5642 @@gen_label279 DS    0H
0000378A 05EF                               5643          BALR  14,15
0000378C                                    5644 @@gen_label280 DS    0H
0000378C                                    5645 @L718    DS    0H
                                            5646 * ***         break;
0000378C E3C0 C12C 001A          0000345C   5647          ALGF  12,@lit_region_diff_1404_1_2
                                            5648          DROP  12
                        00003BC8            5649          USING @REGION_1404_2,12
00003792 47F0 C490               00004058   5650          B     @L810
                                            5651          DROP  12
                        00003330            5652          USING @REGION_1404_1,12
                                            5653 * ***
                                            5654 * ***      case RD_KAFKA_OP_XMIT_RETRY:
                                            5655 * ***      case RD_KAFKA_OP_XMIT_BUF:
                                            5656 * ***      case RD_KAFKA_OP_RECV_BUF:
00003796                                    5657 @L721    DS    0H
                                            5658 * ***         if (rko->rko_u.xbuf.rkbuf)
00003796 E3F0 2070 0002          00000070   5659          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
0000379C 4780 C488               000037B8   5660          BZ    @L723
                                            5661 * ***            rd_kafka_buf_handle_op(rko, RD_KAFKA_RESP_ERR__DESTRO\
                                            5662 * Y);
000037A0 E320 D0B0 0024          000000B0   5663          STG   2,176(0,13)
000037A6 E548 D0B8 FF3B          000000B8   5664          MVGHI 184(13),-197
000037AC 4110 D0B0               000000B0   5665          LA    1,176(0,13)
000037B0 E3F0 C150 0004          00003480   5666          LG    15,@lit_1404_155 ; rd_kafka_buf_handle_op
000037B6                                    5667 @@gen_label282 DS    0H
000037B6 05EF                               5668          BALR  14,15
000037B8                                    5669 @@gen_label283 DS    0H
000037B8                                    5670 @L722    DS    0H
                                            5671 * ***
                                            5672 * ***         do { if ((rko->rko_u.xbuf.rkbuf)) do { if (rd_refcnt_sub\
                                            5673 * 0(&(rko->rko_u.xbuf.rkbuf)->rkbuf_refcnt) > 0) break; rd_kafka_buf_d\
                                            5674 * estroy_final(rko->rko_u.xbuf.rkbuf); } while (0); } while (0);
000037B8                                    5675 @L723    DS    0H
000037B8 E3F0 2070 0002          00000070   5676          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
000037BE 4770 C49C               000037CC   5677          BNZ   *+14  Around region break
000037C2 E3C0 C12C 001A          0000345C   5678          ALGF  12,@lit_region_diff_1404_1_2
                                            5679          DROP  12
                        00003BC8            5680          USING @REGION_1404_2,12
000037C8 47F0 C490               00004058   5681          B     @L810
                                            5682          DROP  12
                        00003330            5683          USING @REGION_1404_1,12
000037CC                                    5684 @L727    DS    0H
000037CC E3F0 2070 0004          00000070   5685          LG    15,112(0,2) ; offset of rko_u in rd_kafka_op_s
000037D2 41F0 F108               00000108   5686          LA    15,264(0,15)
000037D6 E3F0 D0B0 0024          000000B0   5687          STG   15,176(0,13)
000037DC 4110 D0B0               000000B0   5688          LA    1,176(0,13)
000037E0 E3F0 C170 0004          000034A0   5689          LG    15,@lit_1404_169 ; rd_refcnt_sub0
                                                                                                                           Page  117 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000037E6                                    5690 @@gen_label285 DS    0H
000037E6 05EF                               5691          BALR  14,15
000037E8                                    5692 @@gen_label286 DS    0H
000037E8 12FF                               5693          LTR   15,15
000037EA 47D0 C4C8               000037F8   5694          BNH   *+14  Around region break
000037EE E3C0 C12C 001A          0000345C   5695          ALGF  12,@lit_region_diff_1404_1_2
                                            5696          DROP  12
                        00003BC8            5697          USING @REGION_1404_2,12
000037F4 47F0 C490               00004058   5698          B     @L810
                                            5699          DROP  12
                        00003330            5700          USING @REGION_1404_1,12
000037F8                                    5701 @L730    DS    0H
000037F8 E3F0 2070 0004          00000070   5702          LG    15,112(0,2)
000037FE E3F0 D0B0 0024          000000B0   5703          STG   15,176(0,13)
00003804 4110 D0B0               000000B0   5704          LA    1,176(0,13)
00003808 E3F0 C178 0004          000034A8   5705          LG    15,@lit_1404_170 ; rd_kafka_buf_destroy_final
0000380E                                    5706 @@gen_label288 DS    0H
0000380E 05EF                               5707          BALR  14,15
00003810                                    5708 @@gen_label289 DS    0H
00003810                                    5709 @L728    DS    0H
00003810                                    5710 @L726    DS    0H
                                            5711 * ***         break;
00003810 E3C0 C12C 001A          0000345C   5712          ALGF  12,@lit_region_diff_1404_1_2
                                            5713          DROP  12
                        00003BC8            5714          USING @REGION_1404_2,12
00003816 47F0 C490               00004058   5715          B     @L810
                                            5716          DROP  12
                        00003330            5717          USING @REGION_1404_1,12
                                            5718 * ***
                                            5719 * ***      case RD_KAFKA_OP_DR:
0000381A                                    5720 @L731    DS    0H
                                            5721 * ***         rd_kafka_msgq_purge(rko->rko_rk, &rko->rko_u.dr.msgq);
0000381A E3F0 2060 0004          00000060   5722          LG    15,96(0,2)
00003820 E3F0 D0B0 0024          000000B0   5723          STG   15,176(0,13)
00003826 41F0 2078               00000078   5724          LA    15,120(0,2)
0000382A E3F0 D0B8 0024          000000B8   5725          STG   15,184(0,13)
00003830 4110 D0B0               000000B0   5726          LA    1,176(0,13)
00003834 E330 C180 0004          000034B0   5727          LG    3,@lit_1404_171 ; rd_kafka_msgq_purge
0000383A B904 00F3                          5728          LGR   15,3
0000383E                                    5729 @@gen_label290 DS    0H
0000383E 05EF                               5730          BALR  14,15
00003840                                    5731 @@gen_label291 DS    0H
                                            5732 * ***         if (rko->rko_u.dr.do_purge2)
00003840 E3F0 20B8 0012          000000B8   5733          LT    15,184(0,2) ; offset of do_purge2 in 0000070
00003846 4780 C53A               0000386A   5734          BZ    @L732
                                            5735 * ***            rd_kafka_msgq_purge(rko->rko_rk, &rko->rko_u.dr.msgq2\
                                            5736 * );
0000384A E3F0 2060 0004          00000060   5737          LG    15,96(0,2)
00003850 E3F0 D0B0 0024          000000B0   5738          STG   15,176(0,13)
00003856 41F0 2098               00000098   5739          LA    15,152(0,2)
0000385A E3F0 D0B8 0024          000000B8   5740          STG   15,184(0,13)
00003860 4110 D0B0               000000B0   5741          LA    1,176(0,13)
                                                                                                                           Page  118 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003864 B904 00F3                          5742          LGR   15,3
00003868                                    5743 @@gen_label293 DS    0H
00003868 05EF                               5744          BALR  14,15
0000386A                                    5745 @@gen_label294 DS    0H
0000386A                                    5746 @L732    DS    0H
                                            5747 * ***
                                            5748 * ***         if (rko->rko_u.dr.rkt)
0000386A E3F0 2070 0002          00000070   5749          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
00003870 4770 C54E               0000387E   5750          BNZ   *+14  Around region break
00003874 E3C0 C12C 001A          0000345C   5751          ALGF  12,@lit_region_diff_1404_1_2
                                            5752          DROP  12
                        00003BC8            5753          USING @REGION_1404_2,12
0000387A 47F0 C490               00004058   5754          B     @L810
                                            5755          DROP  12
                        00003330            5756          USING @REGION_1404_1,12
                                            5757 * ***            rd_kafka_topic_destroy0(rko->rko_u.dr.rkt);
0000387E E3F0 2070 0004          00000070   5758          LG    15,112(0,2)
00003884 E3F0 D0B0 0024          000000B0   5759          STG   15,176(0,13)
0000388A 4110 D0B0               000000B0   5760          LA    1,176(0,13)
0000388E E3F0 C188 0004          000034B8   5761          LG    15,@lit_1404_173 ; rd_kafka_topic_destroy0
00003894                                    5762 @@gen_label296 DS    0H
00003894 05EF                               5763          BALR  14,15
00003896                                    5764 @@gen_label297 DS    0H
00003896                                    5765 @L733    DS    0H
                                            5766 * ***         break;
00003896 E3C0 C12C 001A          0000345C   5767          ALGF  12,@lit_region_diff_1404_1_2
                                            5768          DROP  12
                        00003BC8            5769          USING @REGION_1404_2,12
0000389C 47F0 C490               00004058   5770          B     @L810
                                            5771          DROP  12
                        00003330            5772          USING @REGION_1404_1,12
                                            5773 * ***
                                            5774 * ***      case RD_KAFKA_OP_OFFSET_RESET:
                                            5775 * ***         do { if ((rko->rko_u.offset_reset.reason)) rd_free(rko->\
                                            5776 * rko_u.offset_reset.reason); } while (0);
000038A0                                    5777 @L735    DS    0H
000038A0 E3F0 2078 0002          00000078   5778          LTG   15,120(0,2) ; offset of reason in 0000072
000038A6 4770 C584               000038B4   5779          BNZ   *+14  Around region break
000038AA E3C0 C12C 001A          0000345C   5780          ALGF  12,@lit_region_diff_1404_1_2
                                            5781          DROP  12
                        00003BC8            5782          USING @REGION_1404_2,12
000038B0 47F0 C490               00004058   5783          B     @L810
                                            5784          DROP  12
                        00003330            5785          USING @REGION_1404_1,12
000038B4 E3F0 2078 0004          00000078   5786          LG    15,120(0,2)
000038BA E3F0 D0B0 0024          000000B0   5787          STG   15,176(0,13)
000038C0 4110 D0B0               000000B0   5788          LA    1,176(0,13)
000038C4 E3F0 C160 0004          00003490   5789          LG    15,@lit_1404_158 ; rd_free
000038CA                                    5790 @@gen_label299 DS    0H
000038CA 05EF                               5791          BALR  14,15
000038CC                                    5792 @@gen_label300 DS    0H
000038CC                                    5793 @L738    DS    0H
                                                                                                                           Page  119 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5794 * ***         break;
000038CC E3C0 C12C 001A          0000345C   5795          ALGF  12,@lit_region_diff_1404_1_2
                                            5796          DROP  12
                        00003BC8            5797          USING @REGION_1404_2,12
000038D2 47F0 C490               00004058   5798          B     @L810
                                            5799          DROP  12
                        00003330            5800          USING @REGION_1404_1,12
                                            5801 * ***
                                            5802 * ***           case RD_KAFKA_OP_METADATA:
                                            5803 * ***                   do { if ((rko->rko_u.metadata.md)) rd_kafka_me\
                                            5804 * tadata_destroy(rko->rko_u.metadata.md); } while (0);
000038D6                                    5805 @L740    DS    0H
000038D6 E3F0 2070 0002          00000070   5806          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
000038DC 4770 C5BA               000038EA   5807          BNZ   *+14  Around region break
000038E0 E3C0 C12C 001A          0000345C   5808          ALGF  12,@lit_region_diff_1404_1_2
                                            5809          DROP  12
                        00003BC8            5810          USING @REGION_1404_2,12
000038E6 47F0 C490               00004058   5811          B     @L810
                                            5812          DROP  12
                        00003330            5813          USING @REGION_1404_1,12
000038EA E3F0 2070 0004          00000070   5814          LG    15,112(0,2)
000038F0 E3F0 D0B0 0024          000000B0   5815          STG   15,176(0,13)
000038F6 4110 D0B0               000000B0   5816          LA    1,176(0,13)
000038FA E3F0 C190 0004          000034C0   5817          LG    15,@lit_1404_175 ; rd_kafka_metadata_destroy
00003900                                    5818 @@gen_label302 DS    0H
00003900 05EF                               5819          BALR  14,15
00003902                                    5820 @@gen_label303 DS    0H
00003902                                    5821 @L743    DS    0H
                                            5822 * ***                   break;
00003902 E3C0 C12C 001A          0000345C   5823          ALGF  12,@lit_region_diff_1404_1_2
                                            5824          DROP  12
                        00003BC8            5825          USING @REGION_1404_2,12
00003908 47F0 C490               00004058   5826          B     @L810
                                            5827          DROP  12
                        00003330            5828          USING @REGION_1404_1,12
                                            5829 * ***
                                            5830 * ***           case RD_KAFKA_OP_LOG:
0000390C                                    5831 @L744    DS    0H
                                            5832 * ***                   rd_free(rko->rko_u.log.str);
0000390C E3F0 20B8 0004          000000B8   5833          LG    15,184(0,2)
00003912 E3F0 D0B0 0024          000000B0   5834          STG   15,176(0,13)
00003918 4110 D0B0               000000B0   5835          LA    1,176(0,13)
0000391C E3F0 C160 0004          00003490   5836          LG    15,@lit_1404_158 ; rd_free
00003922                                    5837 @@gen_label304 DS    0H
00003922 05EF                               5838          BALR  14,15
00003924                                    5839 @@gen_label305 DS    0H
                                            5840 * ***                   break;
00003924 E3C0 C12C 001A          0000345C   5841          ALGF  12,@lit_region_diff_1404_1_2
                                            5842          DROP  12
                        00003BC8            5843          USING @REGION_1404_2,12
0000392A 47F0 C490               00004058   5844          B     @L810
                                            5845          DROP  12
                                                                                                                           Page  120 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        00003330            5846          USING @REGION_1404_1,12
                                            5847 * ***
                                            5848 * ***           case RD_KAFKA_OP_ADMIN_FANOUT:
0000392E                                    5849 @L745    DS    0H
                                            5850 * ***                   ((rko->rko_u.admin_request.fanout.outstanding \
                                            5851 * == 0) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\
                                            5852 * \rdkafka_op.c", 369, "rko->rko_u.admin_request.fanout.outstanding ==\
                                            5853 *  0"));
0000392E E55C 22C0 0000          000002C0   5854          CHSI  704(2),0
00003934 4780 C644               00003974   5855          BE    @L747
00003938                                    5856 @L746    DS    0H
00003938 E3F0 C140 0004          00003470   5857          LG    15,@lit_1404_148
0000393E 41F0 F362               00000362   5858          LA    15,866(0,15)
00003942 E3F0 D0B0 0024          000000B0   5859          STG   15,176(0,13)
00003948 E3F0 C138 0004          00003468   5860          LG    15,@lit_1404_149
0000394E 4110 F0B8               000000B8   5861          LA    1,184(0,15)
00003952 E310 D0B8 0024          000000B8   5862          STG   1,184(0,13)
00003958 E548 D0C0 0171          000000C0   5863          MVGHI 192(13),369
0000395E 41F0 F2E8               000002E8   5864          LA    15,744(0,15)
00003962 E3F0 D0C8 0024          000000C8   5865          STG   15,200(0,13)
00003968 4110 D0B0               000000B0   5866          LA    1,176(0,13)
0000396C E3F0 C130 0004          00003460   5867          LG    15,@lit_1404_150 ; __assert
00003972                                    5868 @@gen_label307 DS    0H
00003972 05EF                               5869          BALR  14,15
00003974                                    5870 @@gen_label308 DS    0H
00003974                                    5871 @L747    DS    0H
                                            5872 * ***                   rd_list_destroy(&rko->rko_u.admin_request.fano\
                                            5873 * ut.results);
00003974 41F0 22C8               000002C8   5874          LA    15,712(0,2)
00003978 E3F0 D0B0 0024          000000B0   5875          STG   15,176(0,13)
0000397E 4110 D0B0               000000B0   5876          LA    1,176(0,13)
00003982 E3F0 C198 0004          000034C8   5877          LG    15,@lit_1404_180 ; rd_list_destroy
00003988                                    5878 @@gen_label309 DS    0H
00003988 05EF                               5879          BALR  14,15
0000398A                                    5880 @@gen_label310 DS    0H
                                            5881 * ***           case RD_KAFKA_OP_CREATETOPICS:
0000398A                                    5882 @L748    DS    0H
                                            5883 * ***           case RD_KAFKA_OP_DELETETOPICS:
0000398A                                    5884 @L749    DS    0H
                                            5885 * ***           case RD_KAFKA_OP_CREATEPARTITIONS:
0000398A                                    5886 @L750    DS    0H
                                            5887 * ***           case RD_KAFKA_OP_ALTERCONFIGS:
0000398A                                    5888 @L751    DS    0H
                                            5889 * ***           case RD_KAFKA_OP_DESCRIBECONFIGS:
0000398A                                    5890 @L752    DS    0H
                                            5891 * ***           case RD_KAFKA_OP_DELETERECORDS:
0000398A                                    5892 @L753    DS    0H
                                            5893 * ***           case RD_KAFKA_OP_DELETEGROUPS:
0000398A                                    5894 @L754    DS    0H
                                            5895 * ***           case RD_KAFKA_OP_DELETECONSUMERGROUPOFFSETS:
0000398A                                    5896 @L755    DS    0H
                                            5897 * ***                   rd_kafka_replyq_destroy(&rko->rko_u.admin_requ\
                                                                                                                           Page  121 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5898 * est.replyq);
0000398A 41F0 2298               00000298   5899          LA    15,664(0,2)
0000398E E3F0 D0B0 0024          000000B0   5900          STG   15,176(0,13)
00003994 4110 D0B0               000000B0   5901          LA    1,176(0,13)
00003998 E3F0 C1A0 0004          000034D0   5902          LG    15,@lit_1404_181 ; rd_kafka_replyq_destroy
0000399E                                    5903 @@gen_label311 DS    0H
0000399E 05EF                               5904          BALR  14,15
000039A0                                    5905 @@gen_label312 DS    0H
                                            5906 * ***                   rd_list_destroy(&rko->rko_u.admin_request.args\
                                            5907 * );
000039A0 41F0 2248               00000248   5908          LA    15,584(0,2)
000039A4 E3F0 D0B0 0024          000000B0   5909          STG   15,176(0,13)
000039AA 4110 D0B0               000000B0   5910          LA    1,176(0,13)
000039AE E3F0 C198 0004          000034C8   5911          LG    15,@lit_1404_180 ; rd_list_destroy
000039B4                                    5912 @@gen_label313 DS    0H
000039B4 05EF                               5913          BALR  14,15
000039B6                                    5914 @@gen_label314 DS    0H
                                            5915 * ***                   ((!rko->rko_u.admin_request.fanout_parent) ? (\
                                            5916 * void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_\
                                            5917 * op.c", 381, "!rko->rko_u.admin_request.fanout_parent"));
000039B6 E3F0 22F8 0002          000002F8   5918          LTG   15,760(0,2) ; offset of fanout_parent in 0000076
000039BC 4780 C6CC               000039FC   5919          BZ    @L758
000039C0                                    5920 @L756    DS    0H
000039C0 E3F0 C140 0004          00003470   5921          LG    15,@lit_1404_148
000039C6 41F0 F362               00000362   5922          LA    15,866(0,15)
000039CA E3F0 D0B0 0024          000000B0   5923          STG   15,176(0,13)
000039D0 E3F0 C138 0004          00003468   5924          LG    15,@lit_1404_149
000039D6 4110 F0B8               000000B8   5925          LA    1,184(0,15)
000039DA E310 D0B8 0024          000000B8   5926          STG   1,184(0,13)
000039E0 E548 D0C0 017D          000000C0   5927          MVGHI 192(13),381
000039E6 41F0 F31A               0000031A   5928          LA    15,794(0,15)
000039EA E3F0 D0C8 0024          000000C8   5929          STG   15,200(0,13)
000039F0 4110 D0B0               000000B0   5930          LA    1,176(0,13)
000039F4 E3F0 C130 0004          00003460   5931          LG    15,@lit_1404_150 ; __assert
000039FA                                    5932 @@gen_label316 DS    0H
000039FA 05EF                               5933          BALR  14,15
000039FC                                    5934 @@gen_label317 DS    0H
000039FC                                    5935 @L757    DS    0H
                                            5936 * ***                   do { if ((rko->rko_u.admin_request.coordkey)) \
                                            5937 * rd_free(rko->rko_u.admin_request.coordkey); } while (0);
000039FC                                    5938 @L758    DS    0H
000039FC E3F0 2290 0002          00000290   5939          LTG   15,656(0,2) ; offset of coordkey in 0000076
00003A02 4770 C6E0               00003A10   5940          BNZ   *+14  Around region break
00003A06 E3C0 C12C 001A          0000345C   5941          ALGF  12,@lit_region_diff_1404_1_2
                                            5942          DROP  12
                        00003BC8            5943          USING @REGION_1404_2,12
00003A0C 47F0 C490               00004058   5944          B     @L810
                                            5945          DROP  12
                        00003330            5946          USING @REGION_1404_1,12
00003A10 E3F0 2290 0004          00000290   5947          LG    15,656(0,2)
00003A16 E3F0 D0B0 0024          000000B0   5948          STG   15,176(0,13)
00003A1C 4110 D0B0               000000B0   5949          LA    1,176(0,13)
                                                                                                                           Page  122 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003A20 E3F0 C160 0004          00003490   5950          LG    15,@lit_1404_158 ; rd_free
00003A26                                    5951 @@gen_label319 DS    0H
00003A26 05EF                               5952          BALR  14,15
00003A28                                    5953 @@gen_label320 DS    0H
00003A28                                    5954 @L761    DS    0H
                                            5955 * ***                   break;
00003A28 E3C0 C12C 001A          0000345C   5956          ALGF  12,@lit_region_diff_1404_1_2
                                            5957          DROP  12
                        00003BC8            5958          USING @REGION_1404_2,12
00003A2E 47F0 C490               00004058   5959          B     @L810
                                            5960          DROP  12
                        00003330            5961          USING @REGION_1404_1,12
                                            5962 * ***
                                            5963 * ***           case RD_KAFKA_OP_ADMIN_RESULT:
00003A32                                    5964 @L762    DS    0H
                                            5965 * ***                   rd_list_destroy(&rko->rko_u.admin_result.resul\
                                            5966 * ts);
00003A32 41F0 2080               00000080   5967          LA    15,128(0,2)
00003A36 E3F0 D0B0 0024          000000B0   5968          STG   15,176(0,13)
00003A3C 4110 D0B0               000000B0   5969          LA    1,176(0,13)
00003A40 E3F0 C198 0004          000034C8   5970          LG    15,@lit_1404_180 ; rd_list_destroy
00003A46                                    5971 @@gen_label321 DS    0H
00003A46 05EF                               5972          BALR  14,15
00003A48                                    5973 @@gen_label322 DS    0H
                                            5974 * ***                   do { if ((rko->rko_u.admin_result.errstr)) rd_\
                                            5975 * free(rko->rko_u.admin_result.errstr); } while (0);
00003A48                                    5976 @L763    DS    0H
00003A48 E3F0 2078 0002          00000078   5977          LTG   15,120(0,2) ; offset of errstr in 0000079
00003A4E 4780 C73A               00003A6A   5978          BZ    @L766
00003A52 E3F0 2078 0004          00000078   5979          LG    15,120(0,2)
00003A58 E3F0 D0B0 0024          000000B0   5980          STG   15,176(0,13)
00003A5E 4110 D0B0               000000B0   5981          LA    1,176(0,13)
00003A62 E3F0 C160 0004          00003490   5982          LG    15,@lit_1404_158 ; rd_free
00003A68                                    5983 @@gen_label324 DS    0H
00003A68 05EF                               5984          BALR  14,15
00003A6A                                    5985 @@gen_label325 DS    0H
00003A6A                                    5986 @L766    DS    0H
                                            5987 * ***                   ((!rko->rko_u.admin_result.fanout_parent) ? (v\
                                            5988 * oid)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_o\
                                            5989 * p.c", 388, "!rko->rko_u.admin_result.fanout_parent"));;
00003A6A E3F0 20B0 0002          000000B0   5990          LTG   15,176(0,2) ; offset of fanout_parent in 0000079
00003A70 4770 C74E               00003A7E   5991          BNZ   *+14  Around region break
00003A74 E3C0 C12C 001A          0000345C   5992          ALGF  12,@lit_region_diff_1404_1_2
                                            5993          DROP  12
                        00003BC8            5994          USING @REGION_1404_2,12
00003A7A 47F0 C490               00004058   5995          B     @L810
                                            5996          DROP  12
                        00003330            5997          USING @REGION_1404_1,12
00003A7E                                    5998 @L767    DS    0H
00003A7E E3F0 C140 0004          00003470   5999          LG    15,@lit_1404_148
00003A84 41F0 F362               00000362   6000          LA    15,866(0,15)
00003A88 E3F0 D0B0 0024          000000B0   6001          STG   15,176(0,13)
                                                                                                                           Page  123 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003A8E E3F0 C138 0004          00003468   6002          LG    15,@lit_1404_149
00003A94 4110 F0B8               000000B8   6003          LA    1,184(0,15)
00003A98 E310 D0B8 0024          000000B8   6004          STG   1,184(0,13)
00003A9E E548 D0C0 0184          000000C0   6005          MVGHI 192(13),388
00003AA4 41F0 F342               00000342   6006          LA    15,834(0,15)
00003AA8 E3F0 D0C8 0024          000000C8   6007          STG   15,200(0,13)
00003AAE 4110 D0B0               000000B0   6008          LA    1,176(0,13)
00003AB2 E3F0 C130 0004          00003460   6009          LG    15,@lit_1404_150 ; __assert
00003AB8                                    6010 @@gen_label327 DS    0H
00003AB8 05EF                               6011          BALR  14,15
00003ABA                                    6012 @@gen_label328 DS    0H
00003ABA                                    6013 @L768    DS    0H
                                            6014 * ***                   break;
00003ABA E3C0 C12C 001A          0000345C   6015          ALGF  12,@lit_region_diff_1404_1_2
                                            6016          DROP  12
                        00003BC8            6017          USING @REGION_1404_2,12
00003AC0 47F0 C490               00004058   6018          B     @L810
                                            6019          DROP  12
                        00003330            6020          USING @REGION_1404_1,12
                                            6021 * ***
                                            6022 * ***           case RD_KAFKA_OP_MOCK:
                                            6023 * ***                   do { if ((rko->rko_u.mock.name)) rd_free(rko->\
                                            6024 * rko_u.mock.name); } while (0);
00003AC4                                    6025 @L770    DS    0H
00003AC4 E3F0 2078 0002          00000078   6026          LTG   15,120(0,2) ; offset of name in 0000081
00003ACA 4780 C7B6               00003AE6   6027          BZ    @L773
00003ACE E3F0 2078 0004          00000078   6028          LG    15,120(0,2)
00003AD4 E3F0 D0B0 0024          000000B0   6029          STG   15,176(0,13)
00003ADA 4110 D0B0               000000B0   6030          LA    1,176(0,13)
00003ADE E3F0 C160 0004          00003490   6031          LG    15,@lit_1404_158 ; rd_free
00003AE4                                    6032 @@gen_label330 DS    0H
00003AE4 05EF                               6033          BALR  14,15
00003AE6                                    6034 @@gen_label331 DS    0H
00003AE6                                    6035 @L773    DS    0H
                                            6036 * ***                   do { if ((rko->rko_u.mock.str)) rd_free(rko->r\
                                            6037 * ko_u.mock.str); } while (0);
00003AE6                                    6038 @L774    DS    0H
00003AE6 E3F0 2080 0002          00000080   6039          LTG   15,128(0,2) ; offset of str in 0000081
00003AEC 4770 C7CA               00003AFA   6040          BNZ   *+14  Around region break
00003AF0 E3C0 C12C 001A          0000345C   6041          ALGF  12,@lit_region_diff_1404_1_2
                                            6042          DROP  12
                        00003BC8            6043          USING @REGION_1404_2,12
00003AF6 47F0 C490               00004058   6044          B     @L810
                                            6045          DROP  12
                        00003330            6046          USING @REGION_1404_1,12
00003AFA E3F0 2080 0004          00000080   6047          LG    15,128(0,2)
00003B00 E3F0 D0B0 0024          000000B0   6048          STG   15,176(0,13)
00003B06 4110 D0B0               000000B0   6049          LA    1,176(0,13)
00003B0A E3F0 C160 0004          00003490   6050          LG    15,@lit_1404_158 ; rd_free
00003B10                                    6051 @@gen_label333 DS    0H
00003B10 05EF                               6052          BALR  14,15
00003B12                                    6053 @@gen_label334 DS    0H
                                                                                                                           Page  124 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003B12                                    6054 @L777    DS    0H
                                            6055 * ***                   break;
00003B12 E3C0 C12C 001A          0000345C   6056          ALGF  12,@lit_region_diff_1404_1_2
                                            6057          DROP  12
                        00003BC8            6058          USING @REGION_1404_2,12
00003B18 47F0 C490               00004058   6059          B     @L810
                                            6060          DROP  12
                        00003330            6061          USING @REGION_1404_1,12
                                            6062 * ***
                                            6063 * ***           case RD_KAFKA_OP_BROKER_MONITOR:
                                            6064 * ***                   do { if (rd_refcnt_sub0(&(rko->rko_u.broker_mo\
                                            6065 * nitor.rkb)->rkb_refcnt) > 0) break; rd_kafka_broker_destroy_final(rk\
                                            6066 * o->rko_u.broker_monitor.rkb); } while (0);
00003B1C                                    6067 @L779    DS    0H
00003B1C E3F0 2070 0004          00000070   6068          LG    15,112(0,2) ; offset of rko_u in rd_kafka_op_s
00003B22 41F0 FFA0               00000FA0   6069          LA    15,4000(0,15)
00003B26 E3F0 D0B0 0024          000000B0   6070          STG   15,176(0,13)
00003B2C 4110 D0B0               000000B0   6071          LA    1,176(0,13)
00003B30 E3F0 C170 0004          000034A0   6072          LG    15,@lit_1404_169 ; rd_refcnt_sub0
00003B36                                    6073 @@gen_label335 DS    0H
00003B36 05EF                               6074          BALR  14,15
00003B38                                    6075 @@gen_label336 DS    0H
00003B38 12FF                               6076          LTR   15,15
00003B3A 47D0 C818               00003B48   6077          BNH   *+14  Around region break
00003B3E E3C0 C12C 001A          0000345C   6078          ALGF  12,@lit_region_diff_1404_1_2
                                            6079          DROP  12
                        00003BC8            6080          USING @REGION_1404_2,12
00003B44 47F0 C490               00004058   6081          B     @L810
                                            6082          DROP  12
                        00003330            6083          USING @REGION_1404_1,12
00003B48                                    6084 @L782    DS    0H
00003B48 E3F0 2070 0004          00000070   6085          LG    15,112(0,2)
00003B4E E3F0 D0B0 0024          000000B0   6086          STG   15,176(0,13)
00003B54 4110 D0B0               000000B0   6087          LA    1,176(0,13)
00003B58 E3F0 C1A8 0004          000034D8   6088          LG    15,@lit_1404_195 ; rd_kafka_broker_destroy_final
00003B5E                                    6089 @@gen_label338 DS    0H
00003B5E 05EF                               6090          BALR  14,15
00003B60                                    6091 @@gen_label339 DS    0H
00003B60                                    6092 @L780    DS    0H
                                            6093 * ***                   break;
00003B60 E3C0 C12C 001A          0000345C   6094          ALGF  12,@lit_region_diff_1404_1_2
                                            6095          DROP  12
                        00003BC8            6096          USING @REGION_1404_2,12
00003B66 47F0 C490               00004058   6097          B     @L810
                                            6098          DROP  12
                        00003330            6099          USING @REGION_1404_1,12
                                            6100 * ***
                                            6101 * ***           case RD_KAFKA_OP_TXN:
                                            6102 * ***                   do { if ((rko->rko_u.txn.group_id)) rd_free(rk\
                                            6103 * o->rko_u.txn.group_id); } while (0);
00003B6A                                    6104 @L784    DS    0H
00003B6A E3F0 2078 0002          00000078   6105          LTG   15,120(0,2) ; offset of group_id in 0000084
                                                                                                                           Page  125 
  Active Usings: @REGION_1404_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003B70 4780 C85C               00003B8C   6106          BZ    @L787
00003B74 E3F0 2078 0004          00000078   6107          LG    15,120(0,2)
00003B7A E3F0 D0B0 0024          000000B0   6108          STG   15,176(0,13)
00003B80 4110 D0B0               000000B0   6109          LA    1,176(0,13)
00003B84 E3F0 C160 0004          00003490   6110          LG    15,@lit_1404_158 ; rd_free
00003B8A                                    6111 @@gen_label341 DS    0H
00003B8A 05EF                               6112          BALR  14,15
00003B8C                                    6113 @@gen_label342 DS    0H
00003B8C                                    6114 @L787    DS    0H
                                            6115 * ***                   do { if ((rko->rko_u.txn.offsets)) rd_kafka_to\
                                            6116 * pic_partition_list_destroy(rko->rko_u.txn.offsets); } while (0);
00003B8C                                    6117 @L788    DS    0H
00003B8C E3F0 2090 0002          00000090   6118          LTG   15,144(0,2) ; offset of offsets in 0000084
00003B92 4780 C87E               00003BAE   6119          BZ    @L791
00003B96 E3F0 2090 0004          00000090   6120          LG    15,144(0,2)
00003B9C E3F0 D0B0 0024          000000B0   6121          STG   15,176(0,13)
00003BA2 4110 D0B0               000000B0   6122          LA    1,176(0,13)
00003BA6 E3F0 C158 0004          00003488   6123          LG    15,@lit_1404_156 ; rd_kafka_topic_partition_list_destroy
00003BAC                                    6124 @@gen_label344 DS    0H
00003BAC 05EF                               6125          BALR  14,15
00003BAE                                    6126 @@gen_label345 DS    0H
00003BAE                                    6127 @L791    DS    0H
                                            6128 * ***
                                            6129 * ***                   do { if ((rko->rko_u.txn.cgmetadata)) rd_kafka\
                                            6130 * _consumer_group_metadata_destroy(rko->rko_u.txn.cgmetadata); } while\
                                            6131 *  (0);
00003BAE                                    6132 @L792    DS    0H
00003BAE E3F0 2070 0002          00000070   6133          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
00003BB4 4770 C892               00003BC2   6134          BNZ   *+14  Around region break
00003BB8 E3C0 C12C 001A          0000345C   6135          ALGF  12,@lit_region_diff_1404_1_2
                                            6136          DROP  12
                        00003BC8            6137          USING @REGION_1404_2,12
00003BBE 47F0 C490               00004058   6138          B     @L810
                                            6139          DROP  12
                        00003330            6140          USING @REGION_1404_1,12
00003BC2 E3C0 C12C 001A          0000345C   6141          ALGF  12,@lit_region_diff_1404_1_2
00003BC8                                    6142 @REGION_1404_2 DS 0H
                                            6143          DROP  12
                        00003BC8            6144          USING @REGION_1404_2,12
00003BC8 E3F0 2070 0004          00000070   6145          LG    15,112(0,2)
00003BCE E3F0 D0B0 0024          000000B0   6146          STG   15,176(0,13)
00003BD4 4110 D0B0               000000B0   6147          LA    1,176(0,13)
00003BD8 E3F0 C020 0004          00003BE8   6148          LG    15,@lit_1404_198 ; rd_kafka_consumer_group_metadata_dest*
                                                                roy
00003BDE                                    6149 @@gen_label347 DS    0H
00003BDE 05EF                               6150          BALR  14,15
00003BE0                                    6151 @@gen_label348 DS    0H
00003BE0                                    6152 @L795    DS    0H
                                            6153 * ***
                                            6154 * ***                   break;
00003BE0 47F0 C490               00004058   6155          B     @L810
00003BE8                                    6156          DS    0D
                                                                                                                           Page  126 
  Active Usings: @REGION_1404_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003BE8 0000000000000000                   6157 @lit_1404_198 DC AD(rd_kafka_consumer_group_metadata_destroy)
00003BF0 0000000000000000                   6158 @lit_1404_201 DC AD(__assert)
00003BF8 000000000000635E                   6159 @lit_1404_200 DC AD(@strings@)
00003C00 0000000000005F80                   6160 @lit_1404_199 DC AD(@DATA)
00003C08 0000000000000000                   6161 @lit_1404_205 DC AD(rd_list_destroy)
00003C10 0000000000000000                   6162 @lit_1404_206 DC AD(rd_kafka_topic_partition_list_destroy)
00003C18 0000000000000948                   6163 @lit_1404_210 DC AD(rd_refcnt_sub0)
00003C20 0000000000000000                   6164 @lit_1404_211 DC AD(rd_kafka_toppar_destroy_final)
00003C28 0000000000000000                   6165 @lit_1404_212 DC AD(rd_kafka_error_destroy)
00003C30 0000000000002238                   6166 @lit_1404_213 DC AD(rd_kafka_replyq_destroy)
00003C38 00000000000006D0                   6167 @lit_1404_214 DC AD(rd_free)
                                            6168 * ***
                                            6169 * ***           case RD_KAFKA_OP_LEADERS:
00003C40                                    6170 @L796    DS    0H
                                            6171 * ***                   ((!rko->rko_u.leaders.eonce) ? (void)0 : __ass\
                                            6172 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_op.c", 409, "!\
                                            6173 * rko->rko_u.leaders.eonce"));
00003C40 E3F0 20F0 0002          000000F0   6174          LTG   15,240(0,2) ; offset of eonce in 0000085
00003C46 4780 C0BE               00003C86   6175          BZ    @L798
00003C4A                                    6176 @L797    DS    0H
00003C4A E3F0 C038 0004          00003C00   6177          LG    15,@lit_1404_199
00003C50 41F0 F362               00000362   6178          LA    15,866(0,15)
00003C54 E3F0 D0B0 0024          000000B0   6179          STG   15,176(0,13)
00003C5A E3F0 C030 0004          00003BF8   6180          LG    15,@lit_1404_200
00003C60 4110 F0B8               000000B8   6181          LA    1,184(0,15)
00003C64 E310 D0B8 0024          000000B8   6182          STG   1,184(0,13)
00003C6A E548 D0C0 0199          000000C0   6183          MVGHI 192(13),409
00003C70 41F0 F36A               0000036A   6184          LA    15,874(0,15)
00003C74 E3F0 D0C8 0024          000000C8   6185          STG   15,200(0,13)
00003C7A 4110 D0B0               000000B0   6186          LA    1,176(0,13)
00003C7E E3F0 C028 0004          00003BF0   6187          LG    15,@lit_1404_201 ; __assert
00003C84                                    6188 @@gen_label350 DS    0H
00003C84 05EF                               6189          BALR  14,15
00003C86                                    6190 @@gen_label351 DS    0H
00003C86                                    6191 @L798    DS    0H
                                            6192 * ***                   ((!rko->rko_u.leaders.replyq.q) ? (void)0 : __\
                                            6193 * assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_op.c", 410,\
                                            6194 *  "!rko->rko_u.leaders.replyq.q"));
00003C86 E3F0 20F8 0002          000000F8   6195          LTG   15,248(0,2) ; offset of replyq in 0000085
00003C8C 4780 C104               00003CCC   6196          BZ    @L801
00003C90                                    6197 @L799    DS    0H
00003C90 E3F0 C038 0004          00003C00   6198          LG    15,@lit_1404_199
00003C96 41F0 F362               00000362   6199          LA    15,866(0,15)
00003C9A E3F0 D0B0 0024          000000B0   6200          STG   15,176(0,13)
00003CA0 E3F0 C030 0004          00003BF8   6201          LG    15,@lit_1404_200
00003CA6 4110 F0B8               000000B8   6202          LA    1,184(0,15)
00003CAA E310 D0B8 0024          000000B8   6203          STG   1,184(0,13)
00003CB0 E548 D0C0 019A          000000C0   6204          MVGHI 192(13),410
00003CB6 41F0 F384               00000384   6205          LA    15,900(0,15)
00003CBA E3F0 D0C8 0024          000000C8   6206          STG   15,200(0,13)
00003CC0 4110 D0B0               000000B0   6207          LA    1,176(0,13)
00003CC4 E3F0 C028 0004          00003BF0   6208          LG    15,@lit_1404_201 ; __assert
                                                                                                                           Page  127 
  Active Usings: @REGION_1404_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003CCA                                    6209 @@gen_label353 DS    0H
00003CCA 05EF                               6210          BALR  14,15
00003CCC                                    6211 @@gen_label354 DS    0H
00003CCC                                    6212 @L800    DS    0H
                                            6213 * ***                   do { if ((rko->rko_u.leaders.leaders)) rd_list\
                                            6214 * _destroy(rko->rko_u.leaders.leaders); } while (0);
00003CCC                                    6215 @L801    DS    0H
00003CCC E3F0 2110 0002          00000110   6216          LTG   15,272(0,2) ; offset of leaders in 0000085
00003CD2 4780 C126               00003CEE   6217          BZ    @L804
00003CD6 E3F0 2110 0004          00000110   6218          LG    15,272(0,2)
00003CDC E3F0 D0B0 0024          000000B0   6219          STG   15,176(0,13)
00003CE2 4110 D0B0               000000B0   6220          LA    1,176(0,13)
00003CE6 E3F0 C040 0004          00003C08   6221          LG    15,@lit_1404_205 ; rd_list_destroy
00003CEC                                    6222 @@gen_label356 DS    0H
00003CEC 05EF                               6223          BALR  14,15
00003CEE                                    6224 @@gen_label357 DS    0H
00003CEE                                    6225 @L804    DS    0H
                                            6226 * ***                   do { if ((rko->rko_u.leaders.partitions)) rd_k\
                                            6227 * afka_topic_partition_list_destroy(rko->rko_u.leaders.partitions); } \
                                            6228 * while (0);
00003CEE                                    6229 @L805    DS    0H
00003CEE E3F0 2070 0002          00000070   6230          LTG   15,112(0,2) ; offset of rko_u in rd_kafka_op_s
00003CF4 4780 C490               00004058   6231          BZ    @L810
00003CF8 E3F0 2070 0004          00000070   6232          LG    15,112(0,2)
00003CFE E3F0 D0B0 0024          000000B0   6233          STG   15,176(0,13)
00003D04 4110 D0B0               000000B0   6234          LA    1,176(0,13)
00003D08 E3F0 C048 0004          00003C10   6235          LG    15,@lit_1404_206 ; rd_kafka_topic_partition_list_destroy
00003D0E                                    6236 @@gen_label359 DS    0H
00003D0E 05EF                               6237          BALR  14,15
00003D10                                    6238 @@gen_label360 DS    0H
00003D10                                    6239 @L808    DS    0H
                                            6240 * ***
                                            6241 * ***                   break;
00003D10 47F0 C490               00004058   6242          B     @L810
                                            6243 * ***
                                            6244 * ***      default:
                                            6245 * ***         break;
                                            6246 * ***      }
00003D14                                    6247 @L661    DS    0H
00003D14 58F0 2010               00000010   6248          L     15,16(0,2)  ; offset of rko_type in rd_kafka_op_s
00003D18 A5F6 9FFF               00009FFF   6249          NILH  15,40959
00003D1C A7FE 000F               0000000F   6250          CHI   15,15
00003D20 47B0 C228               00003DF0   6251          BNL   @@gen_label361
00003D24 A7FA FFFF               0000FFFF   6252          AHI   15,-1
00003D28 C2FF 0000 0009                     6253          CLFI  15,X'00000009'
00003D2E 4720 C490               00004058   6254          BH    @L810
00003D32 B914 00FF                          6255          LGFR  15,15
00003D36 4110 C188               00003D50   6256          LA    1,@@gen_label362
00003D3A EBFF 0004 000D          00000004   6257          SLLG  15,15,4(0)
00003D40 E3C1 F008 000A          00000008   6258          ALG   12,8(1,15)
00003D46 E3F1 F000 0004          00000000   6259          LG    15,0(1,15)
00003D4C 47FF C000               00000000   6260          B     0(15,12)
                                                                                                                           Page  128 
  Active Usings: @REGION_1404_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003D50                                    6261 @@gen_label362 DS    0D
00003D50 00000000000001B0                   6262          DC AD(@L663-@REGION_1404_1)
00003D58 FFFFFFFFFFFFF768                   6263          DC AD(@REGION_1404_1-@REGION_1404_2)
00003D60 00000000000003B2                   6264          DC AD(@L705-@REGION_1404_1)
00003D68 FFFFFFFFFFFFF768                   6265          DC AD(@REGION_1404_1-@REGION_1404_2)
00003D70 00000000000003B2                   6266          DC AD(@L705-@REGION_1404_1)
00003D78 FFFFFFFFFFFFF768                   6267          DC AD(@REGION_1404_1-@REGION_1404_2)
00003D80 00000000000004EA                   6268          DC AD(@L731-@REGION_1404_1)
00003D88 FFFFFFFFFFFFF768                   6269          DC AD(@REGION_1404_1-@REGION_1404_2)
00003D90 0000000000000430                   6270          DC AD(@L715-@REGION_1404_1)
00003D98 FFFFFFFFFFFFF768                   6271          DC AD(@REGION_1404_1-@REGION_1404_2)
00003DA0 000000000000024C                   6272          DC AD(@L668-@REGION_1404_1)
00003DA8 FFFFFFFFFFFFF768                   6273          DC AD(@REGION_1404_1-@REGION_1404_2)
00003DB0 0000000000000490                   6274          DC AD(@L810-@REGION_1404_2)
00003DB8 0000000000000000                   6275          DC AD(@REGION_1404_2-@REGION_1404_2)
00003DC0 0000000000000466                   6276          DC AD(@L721-@REGION_1404_1)
00003DC8 FFFFFFFFFFFFF768                   6277          DC AD(@REGION_1404_1-@REGION_1404_2)
00003DD0 0000000000000466                   6278          DC AD(@L721-@REGION_1404_1)
00003DD8 FFFFFFFFFFFFF768                   6279          DC AD(@REGION_1404_1-@REGION_1404_2)
00003DE0 0000000000000466                   6280          DC AD(@L721-@REGION_1404_1)
00003DE8 FFFFFFFFFFFFF768                   6281          DC AD(@REGION_1404_1-@REGION_1404_2)
00003DF0                                    6282 @@gen_label361 DS 0H
00003DF0 A7FE 002D               0000002D   6283          CHI   15,45
00003DF4 47B0 C410               00003FD8   6284          BNL   @@gen_label363
00003DF8 A7FA FFF1               0000FFF1   6285          AHI   15,-15
00003DFC C2FF 0000 001A                     6286          CLFI  15,X'0000001A'
00003E02 4720 C490               00004058   6287          BH    @L810
00003E06 B914 00FF                          6288          LGFR  15,15
00003E0A 4110 C260               00003E28   6289          LA    1,@@gen_label364
00003E0E EBFF 0004 000D          00000004   6290          SLLG  15,15,4(0)
00003E14 E3C1 F008 000A          00000008   6291          ALG   12,8(1,15)
00003E1A E3F1 F000 0004          00000000   6292          LG    15,0(1,15)
00003E20 47FF C000               00000000   6293          B     0(15,12)
00003E28                                    6294 @@gen_label364 DS    0D
00003E28 0000000000000202                   6295          DC AD(@L665-@REGION_1404_1)
00003E30 FFFFFFFFFFFFF768                   6296          DC AD(@REGION_1404_1-@REGION_1404_2)
00003E38 0000000000000490                   6297          DC AD(@L810-@REGION_1404_2)
00003E40 0000000000000000                   6298          DC AD(@REGION_1404_2-@REGION_1404_2)
00003E48 0000000000000490                   6299          DC AD(@L810-@REGION_1404_2)
00003E50 0000000000000000                   6300          DC AD(@REGION_1404_2-@REGION_1404_2)
00003E58 0000000000000310                   6301          DC AD(@L689-@REGION_1404_1)
00003E60 FFFFFFFFFFFFF768                   6302          DC AD(@REGION_1404_1-@REGION_1404_2)
00003E68 0000000000000490                   6303          DC AD(@L810-@REGION_1404_2)
00003E70 0000000000000000                   6304          DC AD(@REGION_1404_2-@REGION_1404_2)
00003E78 0000000000000490                   6305          DC AD(@L810-@REGION_1404_2)
00003E80 0000000000000000                   6306          DC AD(@REGION_1404_2-@REGION_1404_2)
00003E88 00000000000002A4                   6307          DC AD(@L678-@REGION_1404_1)
00003E90 FFFFFFFFFFFFF768                   6308          DC AD(@REGION_1404_1-@REGION_1404_2)
00003E98 00000000000002DA                   6309          DC AD(@L684-@REGION_1404_1)
00003EA0 FFFFFFFFFFFFF768                   6310          DC AD(@REGION_1404_1-@REGION_1404_2)
00003EA8 00000000000002A4                   6311          DC AD(@L678-@REGION_1404_1)
00003EB0 FFFFFFFFFFFFF768                   6312          DC AD(@REGION_1404_1-@REGION_1404_2)
                                                                                                                           Page  129 
  Active Usings: @REGION_1404_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003EB8 00000000000002DA                   6313          DC AD(@L684-@REGION_1404_1)
00003EC0 FFFFFFFFFFFFF768                   6314          DC AD(@REGION_1404_1-@REGION_1404_2)
00003EC8 00000000000003FA                   6315          DC AD(@L710-@REGION_1404_1)
00003ED0 FFFFFFFFFFFFF768                   6316          DC AD(@REGION_1404_1-@REGION_1404_2)
00003ED8 0000000000000346                   6317          DC AD(@L694-@REGION_1404_1)
00003EE0 FFFFFFFFFFFFF768                   6318          DC AD(@REGION_1404_1-@REGION_1404_2)
00003EE8 000000000000037C                   6319          DC AD(@L699-@REGION_1404_1)
00003EF0 FFFFFFFFFFFFF768                   6320          DC AD(@REGION_1404_1-@REGION_1404_2)
00003EF8 0000000000000570                   6321          DC AD(@L735-@REGION_1404_1)
00003F00 FFFFFFFFFFFFF768                   6322          DC AD(@REGION_1404_1-@REGION_1404_2)
00003F08 00000000000005A6                   6323          DC AD(@L740-@REGION_1404_1)
00003F10 FFFFFFFFFFFFF768                   6324          DC AD(@REGION_1404_1-@REGION_1404_2)
00003F18 00000000000005DC                   6325          DC AD(@L744-@REGION_1404_1)
00003F20 FFFFFFFFFFFFF768                   6326          DC AD(@REGION_1404_1-@REGION_1404_2)
00003F28 0000000000000490                   6327          DC AD(@L810-@REGION_1404_2)
00003F30 0000000000000000                   6328          DC AD(@REGION_1404_2-@REGION_1404_2)
00003F38 000000000000065A                   6329          DC AD(@L755-@REGION_1404_1)
00003F40 FFFFFFFFFFFFF768                   6330          DC AD(@REGION_1404_1-@REGION_1404_2)
00003F48 000000000000065A                   6331          DC AD(@L755-@REGION_1404_1)
00003F50 FFFFFFFFFFFFF768                   6332          DC AD(@REGION_1404_1-@REGION_1404_2)
00003F58 000000000000065A                   6333          DC AD(@L755-@REGION_1404_1)
00003F60 FFFFFFFFFFFFF768                   6334          DC AD(@REGION_1404_1-@REGION_1404_2)
00003F68 000000000000065A                   6335          DC AD(@L755-@REGION_1404_1)
00003F70 FFFFFFFFFFFFF768                   6336          DC AD(@REGION_1404_1-@REGION_1404_2)
00003F78 000000000000065A                   6337          DC AD(@L755-@REGION_1404_1)
00003F80 FFFFFFFFFFFFF768                   6338          DC AD(@REGION_1404_1-@REGION_1404_2)
00003F88 000000000000065A                   6339          DC AD(@L755-@REGION_1404_1)
00003F90 FFFFFFFFFFFFF768                   6340          DC AD(@REGION_1404_1-@REGION_1404_2)
00003F98 000000000000065A                   6341          DC AD(@L755-@REGION_1404_1)
00003FA0 FFFFFFFFFFFFF768                   6342          DC AD(@REGION_1404_1-@REGION_1404_2)
00003FA8 000000000000065A                   6343          DC AD(@L755-@REGION_1404_1)
00003FB0 FFFFFFFFFFFFF768                   6344          DC AD(@REGION_1404_1-@REGION_1404_2)
00003FB8 00000000000005FE                   6345          DC AD(@L745-@REGION_1404_1)
00003FC0 FFFFFFFFFFFFF768                   6346          DC AD(@REGION_1404_1-@REGION_1404_2)
00003FC8 0000000000000702                   6347          DC AD(@L762-@REGION_1404_1)
00003FD0 FFFFFFFFFFFFF768                   6348          DC AD(@REGION_1404_1-@REGION_1404_2)
00003FD8                                    6349 @@gen_label363 DS 0H
00003FD8 A7FA FFD3               0000FFD3   6350          AHI   15,-45
00003FDC C2FF 0000 0004                     6351          CLFI  15,X'00000004'
00003FE2 4720 C490               00004058   6352          BH    @L810
00003FE6 B914 00FF                          6353          LGFR  15,15
00003FEA 4110 C440               00004008   6354          LA    1,@@gen_label365
00003FEE EBFF 0004 000D          00000004   6355          SLLG  15,15,4(0)
00003FF4 E3C1 F008 000A          00000008   6356          ALG   12,8(1,15)
00003FFA E3F1 F000 0004          00000000   6357          LG    15,0(1,15)
00004000 47FF C000               00000000   6358          B     0(15,12)
00004008                                    6359 @@gen_label365 DS    0D
00004008 0000000000000794                   6360          DC AD(@L770-@REGION_1404_1)
00004010 FFFFFFFFFFFFF768                   6361          DC AD(@REGION_1404_1-@REGION_1404_2)
00004018 00000000000007EC                   6362          DC AD(@L779-@REGION_1404_1)
00004020 FFFFFFFFFFFFF768                   6363          DC AD(@REGION_1404_1-@REGION_1404_2)
00004028 000000000000083A                   6364          DC AD(@L784-@REGION_1404_1)
                                                                                                                           Page  130 
  Active Usings: @REGION_1404_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004030 FFFFFFFFFFFFF768                   6365          DC AD(@REGION_1404_1-@REGION_1404_2)
00004038 0000000000000490                   6366          DC AD(@L810-@REGION_1404_2)
00004040 0000000000000000                   6367          DC AD(@REGION_1404_2-@REGION_1404_2)
00004048 0000000000000078                   6368          DC AD(@L796-@REGION_1404_2)
00004050 0000000000000000                   6369          DC AD(@REGION_1404_2-@REGION_1404_2)
                                            6370 * ***
                                            6371 * ***      do { if ((rko->rko_rktp)) do { rd_kafka_toppar_t *_RKTP = (\
                                            6372 * rko->rko_rktp); if (((rd_refcnt_sub0(&_RKTP->rktp_refcnt) == 0))) rd\
                                            6373 * _kafka_toppar_destroy_final(_RKTP); } while (0); } while (0);
00004058                                    6374 @L810    DS    0H
00004058 E3F0 2038 0002          00000038   6375          LTG   15,56(0,2)  ; offset of rko_rktp in rd_kafka_op_s
0000405E 4780 C4CE               00004096   6376          BZ    @L813
00004062                                    6377 @L814    DS    0H
00004062 E330 2038 0004          00000038   6378          LG    3,56(0,2)   ; offset of rko_rktp in rd_kafka_op_s
00004068 41F0 3090               00000090   6379          LA    15,144(0,3)
0000406C E3F0 D0B0 0024          000000B0   6380          STG   15,176(0,13)
00004072 4110 D0B0               000000B0   6381          LA    1,176(0,13)
00004076 E3F0 C050 0004          00003C18   6382          LG    15,@lit_1404_210 ; rd_refcnt_sub0
0000407C                                    6383 @@gen_label367 DS    0H
0000407C 05EF                               6384          BALR  14,15
0000407E                                    6385 @@gen_label368 DS    0H
0000407E 12FF                               6386          LTR   15,15
00004080 4770 C4CE               00004096   6387          BNE   @L817
00004084 E330 D0B0 0024          000000B0   6388          STG   3,176(0,13)
0000408A 4110 D0B0               000000B0   6389          LA    1,176(0,13)
0000408E E3F0 C058 0004          00003C20   6390          LG    15,@lit_1404_211 ; rd_kafka_toppar_destroy_final
00004094                                    6391 @@gen_label370 DS    0H
00004094 05EF                               6392          BALR  14,15
00004096                                    6393 @@gen_label371 DS    0H
00004096                                    6394 @L817    DS    0H
00004096                                    6395 @L813    DS    0H
                                            6396 * ***
                                            6397 * ***           do { if ((rko->rko_error)) rd_kafka_error_destroy(rko-\
                                            6398 * >rko_error); } while (0);
00004096                                    6399 @L818    DS    0H
00004096 E3F0 2028 0002          00000028   6400          LTG   15,40(0,2)  ; offset of rko_error in rd_kafka_op_s
0000409C 4780 C4F0               000040B8   6401          BZ    @L821
000040A0 E3F0 2028 0004          00000028   6402          LG    15,40(0,2)
000040A6 E3F0 D0B0 0024          000000B0   6403          STG   15,176(0,13)
000040AC 4110 D0B0               000000B0   6404          LA    1,176(0,13)
000040B0 E3F0 C060 0004          00003C28   6405          LG    15,@lit_1404_212 ; rd_kafka_error_destroy
000040B6                                    6406 @@gen_label373 DS    0H
000040B6 05EF                               6407          BALR  14,15
000040B8                                    6408 @@gen_label374 DS    0H
000040B8                                    6409 @L821    DS    0H
                                            6410 * ***
                                            6411 * ***      rd_kafka_replyq_destroy(&rko->rko_replyq);
000040B8 41F0 2040               00000040   6412          LA    15,64(0,2)
000040BC E3F0 D0B0 0024          000000B0   6413          STG   15,176(0,13)
000040C2 4110 D0B0               000000B0   6414          LA    1,176(0,13)
000040C6 E3F0 C068 0004          00003C30   6415          LG    15,@lit_1404_213 ; rd_kafka_replyq_destroy
000040CC                                    6416 @@gen_label375 DS    0H
                                                                                                                           Page  131 
  Active Usings: @REGION_1404_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000040CC 05EF                               6417          BALR  14,15
000040CE                                    6418 @@gen_label376 DS    0H
                                            6419 * ***
                                            6420 * ***
                                            6421 * ***
                                            6422 * ***
                                            6423 * ***
                                            6424 * ***
                                            6425 * ***      rd_free(rko);
000040CE E320 D0B0 0024          000000B0   6426          STG   2,176(0,13)
000040D4 4110 D0B0               000000B0   6427          LA    1,176(0,13)
000040D8 E3F0 C070 0004          00003C38   6428          LG    15,@lit_1404_214 ; rd_free
000040DE                                    6429 @@gen_label377 DS    0H
000040DE 05EF                               6430          BALR  14,15
000040E0                                    6431 @@gen_label378 DS    0H
                                            6432 * ***   }
000040E0                                    6433 @ret_lab_1404 DS 0H
                                            6434 * * **** Start of Epilogue
                                            6435          DCCEPIL
000040E0                                    6436+         ds 0h                                                          01-DCCEP
                                            6437+* Epilog
000040E0 D707 D088 D088 00000088 00000088   6438+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000040E6 E3D0 D080 0004          00000080   6439+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000040EC E3C0 D090 0004          00000090   6440+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000040F2 E3B0 C018 0004          00000018   6441+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000040F8 E3C0 B010 0021          00000010   6442+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000040FE E3E0 D008 0004          00000008   6443+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004104 EB1C D020 0004          00000020   6444+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000410A 078E                               6445+         bcr 8,14                if same dsab, just return              01-DCCEP
0000410C E3F0 D010 0024          00000010   6446+         stg 15,16(0,13)         save return code                       01-DCCEP
00004112 E300 D018 0024          00000018   6447+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004118 E3F0 D090 0004          00000090   6448+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000411E E3F0 F018 0004          00000018   6449+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004124 47F0 F040               00000040   6450+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6451+* End of Epilog
                                            6452 * * **** End of Epilogue
                                            6453          DROP  12
                                            6454 *
                                            6455 *   DSECT for automatic variables in "rd_kafka_op_destroy"
                                            6456 *      (FUNCTION #1404)
                                            6457 *
00000000                00000000 000000AC   6458 @AUTO#rd_kafka_op_destroy DSECT
00000000                                    6459          DS    XL168
000000A8                                    6460 rd_kafka_op_destroy#res#1 DS 1F ; res
                                            6461 *
00004128                00000000 00005F80   6462 @CODE    CSECT
                                            6463 *
                                            6464 *
                                            6465 *
                                            6466 * ....... start of rd_kafka_q_op_err
                                            6467 rd_kafka_q_op_err ALIAS X'99846D92818692816D986D96976D859999'
00004128                                    6468 @LNAME1410 DS  0H
                                                                                                                           Page  132 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004128 00000011                           6469          DC    X'00000011'
0000412C 99846D9281869281                   6470          DC    C'rd_kafka_q_op_err'
0000413D 00                                 6471          DC    X'00'
                                            6472 rd_kafka_q_op_err DCCPRLG CINDEX=1410,BASER=12,FRAME=2248,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1410
                                            6473          macro
                                            6474          dccextrn &m
                                            6475          gblc    &$dccext(1000)
                                            6476          gbla    &$dccexti
                                            6477          lcla    &i
                                            6478 &$dccext(&$dccexti+1) setc    '&m'
                                            6479 &i       seta    1
                                            6480 .loop    aif    (&i gt &$dccexti).around
                                            6481          aif    ('&$dccext(&i)' eq '&m').getout
                                            6482 &i       seta    &i+1
                                            6483          ago     .loop
                                            6484 .around  anop
                                            6485 &$dccexti seta &$dccexti+1
                                            6486          extrn  &m
                                            6487 .getout  anop
                                            6488          mend
00004140                                    6489+$eye0111    ds    0d                                                    02-DCCCA
00004140 C4C3C3                             6490+         dc cl3'DCC'                                                    02-DCCCA
00004143 01                                 6491+         dc xl1'01' format one                                          02-DCCCA
00004144 00000000                           6492+         dc a(0)                                                        02-DCCCA
00004148 00000000000041B2                   6493+         dc ad(@PER_1410)                                               02-DCCCA
00004150 00000000000008C8                   6494+         dc ad(2248)                                                    02-DCCCA
00004158 0000000000000000                   6495+         dc ad(0)                                                       02-DCCCA
00004160 0000000000001000                   6496+         dc ad(4096)                                                    02-DCCCA
00004168 20                                 6497+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004169 03                                 6498+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000416A 03                                 6499+         dc al1(3)                                                      02-DCCCA
0000416B 08                                 6500+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000416C 00                                 6501+         dc bl.8'00000000'                                              02-DCCCA
0000416D 000000                             6502+         dc al3(0)                                                      02-DCCCA
00004170 0000000000004128                   6503+         dc ad(@LNAME1410)                                              02-DCCCA
00004178                                    6504+         ds 0d                                                          02-DCCCA
00004178 0000000000004140                   6505+         dc ad($eye0111)                                                02-DCCCA
00004180 0000000000000000                   6506+         dc ad(0)                                                       02-DCCCA
00004188                                    6507+         ds    0d                                                       01-DCCPR
                                            6508+         entry rd_kafka_q_op_err                                        01-DCCPR
00004188                                    6509+rd_kafka_q_op_err ds 0d                                                 01-DCCPR
00004188                                    6510+@REGION_1410_1 ds 0h                                                    01-DCCPR
00004188 EBEC D008 0024          00000008   6511+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000418E E3E0 D088 0004          00000088   6512+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004194 E3C0 D090 0004          00000090   6513+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000419A B904 002E                          6514+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000419E E3B0 C018 0004          00000018   6515+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000041A4 A7EB 08C8               000008C8   6516+         aghi  14,2248             increase by frame size               01-DCCPR
000041A8 E3E0 C020 0021          00000020   6517+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000041AE 4720 B020               00000020   6518+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000041B2                                    6519+@PER_1410 ds   0h                                                       01-DCCPR
                                                                                                                           Page  133 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000041B2 EBDE 2080 0024          00000080   6520+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000041B8 E3C0 2090 0024          00000090   6521+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000041BE B904 00D2                          6522+         lgr   13,2                set real frame pointer               01-DCCPR
000041C2 B904 00CF                          6523+         lgr   12,15               set base reg                         01-DCCPR
                        00004188            6524+         using @REGION_1410_1,12                                        01-DCCPR
000041C6 B904 0031                          6525          LGR   3,1         ; ptr to parm area
                                            6526 * ******* End of Prologue
                                            6527 * *
                                            6528 * ***           va_list ap;
                                            6529 * ***           char buf[2048];
                                            6530 * ***           rd_kafka_op_t *rko;
                                            6531 * ***
                                            6532 * ***           ((ap) = (va_list)&(fmt) + ((__builtin_classify_type(fm\
                                            6533 * t) == 1 || __builtin_classify_type(fmt) == 2 || __builtin_classify_t\
                                            6534 * ype(fmt) == 4) ? sizeof(fmt) : (((sizeof(fmt) + sizeof(long) - 1) & \
                                            6535 * ~(sizeof(long) -1)))));
000041CA 41F0 3018               00000018   6536          LA    15,24(0,3)
                                            6537 * ***           vsnprintf(buf, sizeof(buf), fmt, ap);
000041CE 4110 D0A8               000000A8   6538          LA    1,168(0,13)
000041D2 E310 D8A8 0024          000008A8   6539          STG   1,2216(0,13)
000041D8 E548 D8B0 0800          000008B0   6540          MVGHI 2224(13),2048
000041DE E310 3010 0004          00000010   6541          LG    1,16(0,3)   ; fmt
000041E4 E310 D8B8 0024          000008B8   6542          STG   1,2232(0,13)
000041EA E3F0 D8C0 0024          000008C0   6543          STG   15,2240(0,13)
000041F0 4110 D8A8               000008A8   6544          LA    1,2216(0,13)
000041F4 E3F0 C128 0004          000042B0   6545          LG    15,@lit_1410_264 ; vsnprintf
000041FA                                    6546 @@gen_label379 DS    0H
000041FA 05EF                               6547          BALR  14,15
000041FC                                    6548 @@gen_label380 DS    0H
                                            6549 * ***           ;
                                            6550 * ***
                                            6551 * ***           rko = rd_kafka_op_new0(((void *)0), RD_KAFKA_OP_ERR);
000041FC D707 D8A8 D8A8 000008A8 000008A8   6552          XC    2216(8,13),2216(13)
00004202 E548 D8B0 0002          000008B0   6553          MVGHI 2224(13),2
00004208 4110 D8A8               000008A8   6554          LA    1,2216(0,13)
0000420C E3F0 C130 0004          000042B8   6555          LG    15,@lit_1410_265 ; rd_kafka_op_new0
00004212                                    6556 @@gen_label381 DS    0H
00004212 05EF                               6557          BALR  14,15
00004214                                    6558 @@gen_label382 DS    0H
00004214 B904 002F                          6559          LGR   2,15
                                            6560 * ***           rko->rko_err = err;
00004218 5810 300C               0000000C   6561          L     1,12(0,3)   ; err
0000421C 5010 2020               00000020   6562          ST    1,32(0,2)   ; offset of rko_err in rd_kafka_op_s
                                            6563 * ***           rko->rko_u.err.errstr = rd_strdup(buf);
00004220 41F0 D0A8               000000A8   6564          LA    15,168(0,13)
00004224 E3F0 D8A8 0024          000008A8   6565          STG   15,2216(0,13)
0000422A 4110 D8A8               000008A8   6566          LA    1,2216(0,13)
0000422E E3F0 C138 0004          000042C0   6567          LG    15,@lit_1410_266 ; rd_strdup
00004234                                    6568 @@gen_label383 DS    0H
00004234 05EF                               6569          BALR  14,15
00004236                                    6570 @@gen_label384 DS    0H
00004236 E3F0 2078 0024          00000078   6571          STG   15,120(0,2)
                                                                                                                           Page  134 
  Active Usings: @REGION_1410_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6572 * ***
                                            6573 * ***           rd_kafka_q_enq(rkq, rko);
0000423C E3F0 3000 0004          00000000   6574          LG    15,0(0,3)   ; rkq
00004242 E3F0 D8A8 0024          000008A8   6575          STG   15,2216(0,13)
00004248 E320 D8B0 0024          000008B0   6576          STG   2,2224(0,13)
0000424E 4110 D8A8               000008A8   6577          LA    1,2216(0,13)
00004252 E3F0 C140 0004          000042C8   6578          LG    15,@lit_1410_267 ; rd_kafka_q_enq
00004258                                    6579 @@gen_label385 DS    0H
00004258 05EF                               6580          BALR  14,15
0000425A                                    6581 @@gen_label386 DS    0H
                                            6582 * ***   }
0000425A                                    6583 @ret_lab_1410 DS 0H
                                            6584 * * **** Start of Epilogue
                                            6585          DCCEPIL
0000425A                                    6586+         ds 0h                                                          01-DCCEP
                                            6587+* Epilog
0000425A D707 D088 D088 00000088 00000088   6588+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004260 E3D0 D080 0004          00000080   6589+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004266 E3C0 D090 0004          00000090   6590+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000426C E3B0 C018 0004          00000018   6591+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004272 E3C0 B010 0021          00000010   6592+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004278 E3E0 D008 0004          00000008   6593+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000427E EB1C D020 0004          00000020   6594+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004284 078E                               6595+         bcr 8,14                if same dsab, just return              01-DCCEP
00004286 E3F0 D010 0024          00000010   6596+         stg 15,16(0,13)         save return code                       01-DCCEP
0000428C E300 D018 0024          00000018   6597+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004292 E3F0 D090 0004          00000090   6598+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004298 E3F0 F018 0004          00000018   6599+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000429E 47F0 F040               00000040   6600+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6601+* End of Epilog
                                            6602 * * **** End of Epilogue
000042A8                                    6603          DS    0D
000042A8 000008C8                           6604 @FRAMESIZE_1410 DC F'2248'
000042AC 00000000
000042B0 0000000000000000                   6605 @lit_1410_264 DC AD(vsnprintf)
000042B8 0000000000003180                   6606 @lit_1410_265 DC AD(rd_kafka_op_new0)
000042C0 00000000000007D8                   6607 @lit_1410_266 DC AD(rd_strdup)
000042C8 0000000000001DD8                   6608 @lit_1410_267 DC AD(rd_kafka_q_enq)
                                            6609          DROP  12
                                            6610 *
                                            6611 *   DSECT for automatic variables in "rd_kafka_q_op_err"
                                            6612 *      (FUNCTION #1410)
                                            6613 *
00000000                00000000 000008A8   6614 @AUTO#rd_kafka_q_op_err DSECT
00000000                                    6615          DS    XL168
000000A8                                    6616 rd_kafka_q_op_err#buf#0 DS 2048XL1 ; buf
                                            6617 *
000042D0                00000000 00005F80   6618 @CODE    CSECT
                                            6619 *
                                            6620 *
                                            6621 *
                                            6622 * ....... start of rd_kafka_consumer_err
                                                                                                                           Page  135 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6623 rd_kafka_consumer_err ALIAS X'99846D92818692816D839695A2A49485996D85999*
                                                                9'
000042D0                                    6624 @LNAME1411 DS  0H
000042D0 00000015                           6625          DC    X'00000015'
000042D4 99846D9281869281                   6626          DC    C'rd_kafka_consumer_err'
000042E9 00                                 6627          DC    X'00'
                                            6628 rd_kafka_consumer_err DCCPRLG CINDEX=1411,BASER=12,FRAME=2248,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1411
                                            6629          macro
                                            6630          dccextrn &m
                                            6631          gblc    &$dccext(1000)
                                            6632          gbla    &$dccexti
                                            6633          lcla    &i
                                            6634 &$dccext(&$dccexti+1) setc    '&m'
                                            6635 &i       seta    1
                                            6636 .loop    aif    (&i gt &$dccexti).around
                                            6637          aif    ('&$dccext(&i)' eq '&m').getout
                                            6638 &i       seta    &i+1
                                            6639          ago     .loop
                                            6640 .around  anop
                                            6641 &$dccexti seta &$dccexti+1
                                            6642          extrn  &m
                                            6643 .getout  anop
                                            6644          mend
000042F0                                    6645+$eye0114    ds    0d                                                    02-DCCCA
000042F0 C4C3C3                             6646+         dc cl3'DCC'                                                    02-DCCCA
000042F3 01                                 6647+         dc xl1'01' format one                                          02-DCCCA
000042F4 00000000                           6648+         dc a(0)                                                        02-DCCCA
000042F8 0000000000004362                   6649+         dc ad(@PER_1411)                                               02-DCCCA
00004300 00000000000008C8                   6650+         dc ad(2248)                                                    02-DCCCA
00004308 0000000000000000                   6651+         dc ad(0)                                                       02-DCCCA
00004310 0000000000001000                   6652+         dc ad(4096)                                                    02-DCCCA
00004318 20                                 6653+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004319 03                                 6654+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000431A 03                                 6655+         dc al1(3)                                                      02-DCCCA
0000431B 08                                 6656+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000431C 00                                 6657+         dc bl.8'00000000'                                              02-DCCCA
0000431D 000000                             6658+         dc al3(0)                                                      02-DCCCA
00004320 00000000000042D0                   6659+         dc ad(@LNAME1411)                                              02-DCCCA
00004328                                    6660+         ds 0d                                                          02-DCCCA
00004328 00000000000042F0                   6661+         dc ad($eye0114)                                                02-DCCCA
00004330 0000000000000000                   6662+         dc ad(0)                                                       02-DCCCA
00004338                                    6663+         ds    0d                                                       01-DCCPR
                                            6664+         entry rd_kafka_consumer_err                                    01-DCCPR
00004338                                    6665+rd_kafka_consumer_err ds 0d                                             01-DCCPR
00004338                                    6666+@REGION_1411_1 ds 0h                                                    01-DCCPR
00004338 EBEC D008 0024          00000008   6667+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000433E E3E0 D088 0004          00000088   6668+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004344 E3C0 D090 0004          00000090   6669+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000434A B904 002E                          6670+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000434E E3B0 C018 0004          00000018   6671+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004354 A7EB 08C8               000008C8   6672+         aghi  14,2248             increase by frame size               01-DCCPR
                                                                                                                           Page  136 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004358 E3E0 C020 0021          00000020   6673+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000435E 4720 B020               00000020   6674+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004362                                    6675+@PER_1411 ds   0h                                                       01-DCCPR
00004362 EBDE 2080 0024          00000080   6676+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004368 E3C0 2090 0024          00000090   6677+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000436E B904 00D2                          6678+         lgr   13,2                set real frame pointer               01-DCCPR
00004372 B904 00CF                          6679+         lgr   12,15               set base reg                         01-DCCPR
                        00004338            6680+         using @REGION_1411_1,12                                        01-DCCPR
00004376 B904 0031                          6681          LGR   3,1         ; ptr to parm area
                                            6682 * ******* End of Prologue
                                            6683 * *
                                            6684 * ***           va_list ap;
                                            6685 * ***           char buf[2048];
                                            6686 * ***           rd_kafka_op_t *rko;
                                            6687 * ***
                                            6688 * ***           ((ap) = (va_list)&(fmt) + ((__builtin_classify_type(fm\
                                            6689 * t) == 1 || __builtin_classify_type(fmt) == 2 || __builtin_classify_t\
                                            6690 * ype(fmt) == 4) ? sizeof(fmt) : (((sizeof(fmt) + sizeof(long) - 1) & \
                                            6691 * ~(sizeof(long) -1)))));
0000437A 41F0 3040               00000040   6692          LA    15,64(0,3)
                                            6693 * ***           vsnprintf(buf, sizeof(buf), fmt, ap);
0000437E 4110 D0A8               000000A8   6694          LA    1,168(0,13)
00004382 E310 D8A8 0024          000008A8   6695          STG   1,2216(0,13)
00004388 E548 D8B0 0800          000008B0   6696          MVGHI 2224(13),2048
0000438E E310 3038 0004          00000038   6697          LG    1,56(0,3)   ; fmt
00004394 E310 D8B8 0024          000008B8   6698          STG   1,2232(0,13)
0000439A E3F0 D8C0 0024          000008C0   6699          STG   15,2240(0,13)
000043A0 4110 D8A8               000008A8   6700          LA    1,2216(0,13)
000043A4 E3F0 C118 0004          00004450   6701          LG    15,@lit_1411_269 ; vsnprintf
000043AA                                    6702 @@gen_label387 DS    0H
000043AA 05EF                               6703          BALR  14,15
000043AC                                    6704 @@gen_label388 DS    0H
                                            6705 * ***           ;
                                            6706 * ***
                                            6707 * ***           rko = rd_kafka_op_new0(((void *)0), RD_KAFKA_OP_CONSUM\
                                            6708 * ER_ERR);
000043AC D707 D8A8 D8A8 000008A8 000008A8   6709          XC    2216(8,13),2216(13)
000043B2 E548 D8B0 0003          000008B0   6710          MVGHI 2224(13),3
000043B8 4110 D8A8               000008A8   6711          LA    1,2216(0,13)
000043BC E3F0 C120 0004          00004458   6712          LG    15,@lit_1411_270 ; rd_kafka_op_new0
000043C2                                    6713 @@gen_label389 DS    0H
000043C2 05EF                               6714          BALR  14,15
000043C4                                    6715 @@gen_label390 DS    0H
000043C4 B904 002F                          6716          LGR   2,15
                                            6717 * ***           rko->rko_version = version;
000043C8 5810 301C               0000001C   6718          L     1,28(0,3)   ; version
000043CC 5010 201C               0000001C   6719          ST    1,28(0,2)   ; offset of rko_version in rd_kafka_op_s
                                            6720 * ***           rko->rko_err = err;
000043D0 5810 3014               00000014   6721          L     1,20(0,3)   ; err
000043D4 5010 2020               00000020   6722          ST    1,32(0,2)   ; offset of rko_err in rd_kafka_op_s
                                            6723 * ***           rko->rko_u.err.offset = offset;
000043D8 E310 3030 0004          00000030   6724          LG    1,48(0,3)   ; offset
                                                                                                                           Page  137 
  Active Usings: @REGION_1411_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000043DE E310 2070 0024          00000070   6725          STG   1,112(0,2)  ; offset of rko_u in rd_kafka_op_s
                                            6726 * ***           rko->rko_u.err.errstr = rd_strdup(buf);
000043E4 41F0 D0A8               000000A8   6727          LA    15,168(0,13)
000043E8 E3F0 D8A8 0024          000008A8   6728          STG   15,2216(0,13)
000043EE 4110 D8A8               000008A8   6729          LA    1,2216(0,13)
000043F2 E3F0 C128 0004          00004460   6730          LG    15,@lit_1411_271 ; rd_strdup
000043F8                                    6731 @@gen_label391 DS    0H
000043F8 05EF                               6732          BALR  14,15
000043FA                                    6733 @@gen_label392 DS    0H
000043FA E3F0 2078 0024          00000078   6734          STG   15,120(0,2)
                                            6735 * ***           rko->rko_u.err.rkm.rkm_broker_id = broker_id;
00004400 58F0 300C               0000000C   6736          L     15,12(0,3)  ; broker_id
00004404 50F0 20F4               000000F4   6737          ST    15,244(0,2) ; offset of rkm_broker_id in rd_kafka_msg_s
                                            6738 * ***
                                            6739 * ***           if (rktp)
00004408 E3F0 3028 0004          00000028   6740          LG    15,40(0,3)  ; rktp
0000440E B902 001F                          6741          LTGR  1,15
00004412 4780 C150               00004488   6742          BZ    @L822
                                            6743 * ***                   rko->rko_rktp = rd_kafka_toppar_keep0(__FUNCTI\
                                            6744 * ON__,499,rktp);
00004416 E310 C138 0004          00004470   6745          LG    1,@lit_1411_272
0000441C 4110 1376               00000376   6746          LA    1,886(0,1)
00004420 E310 D8A8 0024          000008A8   6747          STG   1,2216(0,13)
00004426 E548 D8B0 01F3          000008B0   6748          MVGHI 2224(13),499
0000442C E3F0 D8B8 0024          000008B8   6749          STG   15,2232(0,13)
00004432 4110 D8A8               000008A8   6750          LA    1,2216(0,13)
00004436 E3F0 C130 0004          00004468   6751          LG    15,@lit_1411_273 ; rd_kafka_toppar_keep0
0000443C                                    6752 @@gen_label394 DS    0H
0000443C 05EF                               6753          BALR  14,15
0000443E                                    6754 @@gen_label395 DS    0H
0000443E E3F0 2038 0024          00000038   6755          STG   15,56(0,2)
00004444 47F0 C188               000044C0   6756          B     @L823
00004448                                    6757          DS    0D
00004448 000008C8                           6758 @FRAMESIZE_1411 DC F'2248'
0000444C 00000000
00004450 0000000000000000                   6759 @lit_1411_269 DC AD(vsnprintf)
00004458 0000000000003180                   6760 @lit_1411_270 DC AD(rd_kafka_op_new0)
00004460 00000000000007D8                   6761 @lit_1411_271 DC AD(rd_strdup)
00004468 0000000000002858                   6762 @lit_1411_273 DC AD(rd_kafka_toppar_keep0)
00004470 0000000000005F80                   6763 @lit_1411_272 DC AD(@DATA)
00004478 0000000000000000                   6764 @lit_1411_274 DC AD(rd_kafka_lwtopic_new)
00004480 0000000000001DD8                   6765 @lit_1411_275 DC AD(rd_kafka_q_enq)
                                            6766 * ***           else if (topic)
00004488                                    6767 @L822    DS    0H
00004488 E3F0 3020 0004          00000020   6768          LG    15,32(0,3)  ; topic
0000448E B902 001F                          6769          LTGR  1,15
00004492 4780 C188               000044C0   6770          BZ    @L823
                                            6771 * ***                   rko->rko_u.err.rkm.rkm_rkmessage.rkt =
                                            6772 * ***                           (rd_kafka_topic_t *)rd_kafka_lwtopic_n\
                                            6773 * ew(rkq->rkq_rk,
                                            6774 * ***                                                                 \
                                            6775 *    topic);
                                                                                                                           Page  138 
  Active Usings: @REGION_1411_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004496 E310 3000 0004          00000000   6776          LG    1,0(0,3)    ; rkq
0000449C E310 1088 0004          00000088   6777          LG    1,136(0,1)
000044A2 E310 D8A8 0024          000008A8   6778          STG   1,2216(0,13)
000044A8 E3F0 D8B0 0024          000008B0   6779          STG   15,2224(0,13)
000044AE 4110 D8A8               000008A8   6780          LA    1,2216(0,13)
000044B2 E3F0 C140 0004          00004478   6781          LG    15,@lit_1411_274 ; rd_kafka_lwtopic_new
000044B8                                    6782 @@gen_label397 DS    0H
000044B8 05EF                               6783          BALR  14,15
000044BA                                    6784 @@gen_label398 DS    0H
000044BA E3F0 2088 0024          00000088   6785          STG   15,136(0,2)
000044C0                                    6786 @L824    DS    0H
                                            6787 * ***
                                            6788 * ***
                                            6789 * ***           rd_kafka_q_enq(rkq, rko);
000044C0                                    6790 @L823    DS    0H
000044C0 E3F0 3000 0004          00000000   6791          LG    15,0(0,3)   ; rkq
000044C6 E3F0 D8A8 0024          000008A8   6792          STG   15,2216(0,13)
000044CC E320 D8B0 0024          000008B0   6793          STG   2,2224(0,13)
000044D2 4110 D8A8               000008A8   6794          LA    1,2216(0,13)
000044D6 E3F0 C148 0004          00004480   6795          LG    15,@lit_1411_275 ; rd_kafka_q_enq
000044DC                                    6796 @@gen_label399 DS    0H
000044DC 05EF                               6797          BALR  14,15
000044DE                                    6798 @@gen_label400 DS    0H
                                            6799 * ***   }
000044DE                                    6800 @ret_lab_1411 DS 0H
                                            6801 * * **** Start of Epilogue
                                            6802          DCCEPIL
000044DE                                    6803+         ds 0h                                                          01-DCCEP
                                            6804+* Epilog
000044DE D707 D088 D088 00000088 00000088   6805+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000044E4 E3D0 D080 0004          00000080   6806+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000044EA E3C0 D090 0004          00000090   6807+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000044F0 E3B0 C018 0004          00000018   6808+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000044F6 E3C0 B010 0021          00000010   6809+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000044FC E3E0 D008 0004          00000008   6810+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004502 EB1C D020 0004          00000020   6811+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004508 078E                               6812+         bcr 8,14                if same dsab, just return              01-DCCEP
0000450A E3F0 D010 0024          00000010   6813+         stg 15,16(0,13)         save return code                       01-DCCEP
00004510 E300 D018 0024          00000018   6814+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004516 E3F0 D090 0004          00000090   6815+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000451C E3F0 F018 0004          00000018   6816+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004522 47F0 F040               00000040   6817+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6818+* End of Epilog
                                            6819 * * **** End of Epilogue
                                            6820          DROP  12
                                            6821 *
                                            6822 *   DSECT for automatic variables in "rd_kafka_consumer_err"
                                            6823 *      (FUNCTION #1411)
                                            6824 *
00000000                00000000 000008A8   6825 @AUTO#rd_kafka_consumer_err DSECT
00000000                                    6826          DS    XL168
000000A8                                    6827 rd_kafka_consumer_err#buf#0 DS 2048XL1 ; buf
                                                                                                                           Page  139 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6828 *
00004526                00000000 00005F80   6829 @CODE    CSECT
                                            6830 *
                                            6831 *
                                            6832 *
                                            6833 * ....... start of rd_kafka_op_new_reply
                                            6834 rd_kafka_op_new_reply ALIAS X'99846D92818692816D96976D9585A66D99859793A*
                                                                8'
00004526                                    6835 @LNAME1406 DS  0H
00004526 00000015                           6836          DC    X'00000015'
0000452A 99846D9281869281                   6837          DC    C'rd_kafka_op_new_reply'
0000453F 00                                 6838          DC    X'00'
                                            6839 rd_kafka_op_new_reply DCCPRLG CINDEX=1406,BASER=12,FRAME=200,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1406
                                            6840          macro
                                            6841          dccextrn &m
                                            6842          gblc    &$dccext(1000)
                                            6843          gbla    &$dccexti
                                            6844          lcla    &i
                                            6845 &$dccext(&$dccexti+1) setc    '&m'
                                            6846 &i       seta    1
                                            6847 .loop    aif    (&i gt &$dccexti).around
                                            6848          aif    ('&$dccext(&i)' eq '&m').getout
                                            6849 &i       seta    &i+1
                                            6850          ago     .loop
                                            6851 .around  anop
                                            6852 &$dccexti seta &$dccexti+1
                                            6853          extrn  &m
                                            6854 .getout  anop
                                            6855          mend
00004540                                    6856+$eye0117    ds    0d                                                    02-DCCCA
00004540 C4C3C3                             6857+         dc cl3'DCC'                                                    02-DCCCA
00004543 01                                 6858+         dc xl1'01' format one                                          02-DCCCA
00004544 00000000                           6859+         dc a(0)                                                        02-DCCCA
00004548 00000000000045B2                   6860+         dc ad(@PER_1406)                                               02-DCCCA
00004550 00000000000000C8                   6861+         dc ad(200)                                                     02-DCCCA
00004558 0000000000000000                   6862+         dc ad(0)                                                       02-DCCCA
00004560 0000000000001000                   6863+         dc ad(4096)                                                    02-DCCCA
00004568 20                                 6864+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004569 03                                 6865+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000456A 03                                 6866+         dc al1(3)                                                      02-DCCCA
0000456B 08                                 6867+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000456C 00                                 6868+         dc bl.8'00000000'                                              02-DCCCA
0000456D 000000                             6869+         dc al3(0)                                                      02-DCCCA
00004570 0000000000004526                   6870+         dc ad(@LNAME1406)                                              02-DCCCA
00004578                                    6871+         ds 0d                                                          02-DCCCA
00004578 0000000000004540                   6872+         dc ad($eye0117)                                                02-DCCCA
00004580 0000000000000000                   6873+         dc ad(0)                                                       02-DCCCA
00004588                                    6874+         ds    0d                                                       01-DCCPR
                                            6875+         entry rd_kafka_op_new_reply                                    01-DCCPR
00004588                                    6876+rd_kafka_op_new_reply ds 0d                                             01-DCCPR
00004588                                    6877+@REGION_1406_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page  140 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004588 EBEC D008 0024          00000008   6878+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000458E E3E0 D088 0004          00000088   6879+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004594 E3C0 D090 0004          00000090   6880+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000459A B904 002E                          6881+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000459E E3B0 C018 0004          00000018   6882+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000045A4 A7EB 00C8               000000C8   6883+         aghi  14,200              increase by frame size               01-DCCPR
000045A8 E3E0 C020 0021          00000020   6884+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000045AE 4720 B020               00000020   6885+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000045B2                                    6886+@PER_1406 ds   0h                                                       01-DCCPR
000045B2 EBDE 2080 0024          00000080   6887+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000045B8 E3C0 2090 0024          00000090   6888+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000045BE B904 00D2                          6889+         lgr   13,2                set real frame pointer               01-DCCPR
000045C2 B904 00CF                          6890+         lgr   12,15               set base reg                         01-DCCPR
                        00004588            6891+         using @REGION_1406_1,12                                        01-DCCPR
000045C6 B904 0041                          6892          LGR   4,1         ; ptr to parm area
                                            6893 * ******* End of Prologue
                                            6894 * *
000045CA E320 4000 0004          00000000   6895          LG    2,0(0,4)    ; rko_orig
                                            6896 * ***           rd_kafka_op_t *rko;
                                            6897 * ***
                                            6898 * ***           rko = rd_kafka_op_new0(((void *)0), rko_orig->rko_type\
                                            6899 *  | (int)(1 << 30));
000045D0 D707 D0B0 D0B0 000000B0 000000B0   6900          XC    176(8,13),176(13)
000045D6 58F0 2010               00000010   6901          L     15,16(0,2)  ; offset of rko_type in rd_kafka_op_s
000045DA A5FA 4000               00004000   6902          OILH  15,16384
000045DE B914 00FF                          6903          LGFR  15,15
000045E2 E3F0 D0B8 0024          000000B8   6904          STG   15,184(0,13)
000045E8 4110 D0B0               000000B0   6905          LA    1,176(0,13)
000045EC E3F0 C118 0004          000046A0   6906          LG    15,@lit_1406_277 ; rd_kafka_op_new0
000045F2                                    6907 @@gen_label401 DS    0H
000045F2 05EF                               6908          BALR  14,15
000045F4                                    6909 @@gen_label402 DS    0H
000045F4 B904 003F                          6910          LGR   3,15
                                            6911 * ***      do { (rko)->rko_version = (rko_orig)->rko_replyq.version; }\
                                            6912 *  while (0);
000045F8                                    6913 @L825    DS    0H
000045F8 58F0 2048               00000048   6914          L     15,72(0,2)  ; offset of version in rd_kafka_replyq_s
000045FC 50F0 301C               0000001C   6915          ST    15,28(0,3)  ; offset of rko_version in rd_kafka_op_s
                                            6916 * ***      rko->rko_err     = err;
00004600 58F0 400C               0000000C   6917          L     15,12(0,4)  ; err
00004604 50F0 3020               00000020   6918          ST    15,32(0,3)  ; offset of rko_err in rd_kafka_op_s
                                            6919 * ***      if (rko_orig->rko_rktp)
00004608 E3F0 2038 0002          00000038   6920          LTG   15,56(0,2)  ; offset of rko_rktp in rd_kafka_op_s
0000460E 4780 C0BE               00004646   6921          BZ    @L828
                                            6922 * ***         rko->rko_rktp = rd_kafka_toppar_keep0(__FUNCTION__,524,r\
                                            6923 * ko_orig->rko_rktp);
00004612 E3F0 C128 0004          000046B0   6924          LG    15,@lit_1406_278
00004618 41F0 F38C               0000038C   6925          LA    15,908(0,15)
0000461C E3F0 D0B0 0024          000000B0   6926          STG   15,176(0,13)
00004622 E548 D0B8 020C          000000B8   6927          MVGHI 184(13),524
00004628 E3F0 2038 0004          00000038   6928          LG    15,56(0,2)
0000462E E3F0 D0C0 0024          000000C0   6929          STG   15,192(0,13)
                                                                                                                           Page  141 
  Active Usings: @REGION_1406_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004634 4110 D0B0               000000B0   6930          LA    1,176(0,13)
00004638 E3F0 C120 0004          000046A8   6931          LG    15,@lit_1406_279 ; rd_kafka_toppar_keep0
0000463E                                    6932 @@gen_label404 DS    0H
0000463E 05EF                               6933          BALR  14,15
00004640                                    6934 @@gen_label405 DS    0H
00004640 E3F0 3038 0024          00000038   6935          STG   15,56(0,3)
00004646                                    6936 @L828    DS    0H
                                            6937 * ***
                                            6938 * ***           return rko;
00004646 B904 00F3                          6939          LGR   15,3
                                            6940 * ***   }
                                            6941 * * **** Start of Epilogue
                                            6942          DCCEPIL
0000464A                                    6943+         ds 0h                                                          01-DCCEP
                                            6944+* Epilog
0000464A D707 D088 D088 00000088 00000088   6945+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004650 E3D0 D080 0004          00000080   6946+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004656 E3C0 D090 0004          00000090   6947+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000465C E3B0 C018 0004          00000018   6948+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004662 E3C0 B010 0021          00000010   6949+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004668 E3E0 D008 0004          00000008   6950+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000466E EB1C D020 0004          00000020   6951+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004674 078E                               6952+         bcr 8,14                if same dsab, just return              01-DCCEP
00004676 E3F0 D010 0024          00000010   6953+         stg 15,16(0,13)         save return code                       01-DCCEP
0000467C E300 D018 0024          00000018   6954+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004682 E3F0 D090 0004          00000090   6955+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004688 E3F0 F018 0004          00000018   6956+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000468E 47F0 F040               00000040   6957+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6958+* End of Epilog
                                            6959 * * **** End of Epilogue
00004698                                    6960          DS    0D
00004698 000000C8                           6961 @FRAMESIZE_1406 DC F'200'
0000469C 00000000
000046A0 0000000000003180                   6962 @lit_1406_277 DC AD(rd_kafka_op_new0)
000046A8 0000000000002858                   6963 @lit_1406_279 DC AD(rd_kafka_toppar_keep0)
000046B0 0000000000005F80                   6964 @lit_1406_278 DC AD(@DATA)
                                            6965          DROP  12
                                            6966 *
                                            6967 *   DSECT for automatic variables in "rd_kafka_op_new_reply"
                                            6968 *      (FUNCTION #1406)
                                            6969 *
00000000                00000000 000000A8   6970 @AUTO#rd_kafka_op_new_reply DSECT
00000000                                    6971          DS    XL168
                                            6972 *
000046B8                00000000 00005F80   6973 @CODE    CSECT
                                            6974 *
                                            6975 *
                                            6976 *
                                            6977 * ....... start of rd_kafka_op_new_cb
                                            6978 rd_kafka_op_new_cb ALIAS X'99846D92818692816D96976D9585A66D8382'
000046B8                                    6979 @LNAME1407 DS  0H
000046B8 00000012                           6980          DC    X'00000012'
                                                                                                                           Page  142 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000046BC 99846D9281869281                   6981          DC    C'rd_kafka_op_new_cb'
000046CE 00                                 6982          DC    X'00'
                                            6983 rd_kafka_op_new_cb DCCPRLG CINDEX=1407,BASER=12,FRAME=192,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1407
                                            6984          macro
                                            6985          dccextrn &m
                                            6986          gblc    &$dccext(1000)
                                            6987          gbla    &$dccexti
                                            6988          lcla    &i
                                            6989 &$dccext(&$dccexti+1) setc    '&m'
                                            6990 &i       seta    1
                                            6991 .loop    aif    (&i gt &$dccexti).around
                                            6992          aif    ('&$dccext(&i)' eq '&m').getout
                                            6993 &i       seta    &i+1
                                            6994          ago     .loop
                                            6995 .around  anop
                                            6996 &$dccexti seta &$dccexti+1
                                            6997          extrn  &m
                                            6998 .getout  anop
                                            6999          mend
000046D0                                    7000+$eye0120    ds    0d                                                    02-DCCCA
000046D0 C4C3C3                             7001+         dc cl3'DCC'                                                    02-DCCCA
000046D3 01                                 7002+         dc xl1'01' format one                                          02-DCCCA
000046D4 00000000                           7003+         dc a(0)                                                        02-DCCCA
000046D8 0000000000004742                   7004+         dc ad(@PER_1407)                                               02-DCCCA
000046E0 00000000000000C0                   7005+         dc ad(192)                                                     02-DCCCA
000046E8 0000000000000000                   7006+         dc ad(0)                                                       02-DCCCA
000046F0 0000000000001000                   7007+         dc ad(4096)                                                    02-DCCCA
000046F8 20                                 7008+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000046F9 03                                 7009+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000046FA 03                                 7010+         dc al1(3)                                                      02-DCCCA
000046FB 08                                 7011+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000046FC 00                                 7012+         dc bl.8'00000000'                                              02-DCCCA
000046FD 000000                             7013+         dc al3(0)                                                      02-DCCCA
00004700 00000000000046B8                   7014+         dc ad(@LNAME1407)                                              02-DCCCA
00004708                                    7015+         ds 0d                                                          02-DCCCA
00004708 00000000000046D0                   7016+         dc ad($eye0120)                                                02-DCCCA
00004710 0000000000000000                   7017+         dc ad(0)                                                       02-DCCCA
00004718                                    7018+         ds    0d                                                       01-DCCPR
                                            7019+         entry rd_kafka_op_new_cb                                       01-DCCPR
00004718                                    7020+rd_kafka_op_new_cb ds 0d                                                01-DCCPR
00004718                                    7021+@REGION_1407_1 ds 0h                                                    01-DCCPR
00004718 EBEC D008 0024          00000008   7022+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000471E E3E0 D088 0004          00000088   7023+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004724 E3C0 D090 0004          00000090   7024+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000472A B904 002E                          7025+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000472E E3B0 C018 0004          00000018   7026+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004734 A7EB 00C0               000000C0   7027+         aghi  14,192              increase by frame size               01-DCCPR
00004738 E3E0 C020 0021          00000020   7028+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000473E 4720 B020               00000020   7029+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004742                                    7030+@PER_1407 ds   0h                                                       01-DCCPR
00004742 EBDE 2080 0024          00000080   7031+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  143 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004748 E3C0 2090 0024          00000090   7032+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000474E B904 00D2                          7033+         lgr   13,2                set real frame pointer               01-DCCPR
00004752 B904 00CF                          7034+         lgr   12,15               set base reg                         01-DCCPR
                        00004718            7035+         using @REGION_1407_1,12                                        01-DCCPR
00004756 B904 0021                          7036          LGR   2,1         ; ptr to parm area
                                            7037 * ******* End of Prologue
                                            7038 * *
                                            7039 * ***           rd_kafka_op_t *rko;
                                            7040 * ***           rko = rd_kafka_op_new0(((void *)0), type | (int)(1 << \
                                            7041 * 29));
0000475A D707 D0B0 D0B0 000000B0 000000B0   7042          XC    176(8,13),176(13)
00004760 58F0 200C               0000000C   7043          L     15,12(0,2)  ; type
00004764 A5FA 2000               00002000   7044          OILH  15,8192
00004768 B914 00FF                          7045          LGFR  15,15
0000476C E3F0 D0B8 0024          000000B8   7046          STG   15,184(0,13)
00004772 4110 D0B0               000000B0   7047          LA    1,176(0,13)
00004776 E3F0 C0D0 0004          000047E8   7048          LG    15,@lit_1407_281 ; rd_kafka_op_new0
0000477C                                    7049 @@gen_label406 DS    0H
0000477C 05EF                               7050          BALR  14,15
0000477E                                    7051 @@gen_label407 DS    0H
                                            7052 * ***           rko->rko_op_cb = cb;
0000477E E310 2010 0004          00000010   7053          LG    1,16(0,2)   ; cb
00004784 E310 F068 0024          00000068   7054          STG   1,104(0,15) ; offset of rko_op_cb in rd_kafka_op_s
                                            7055 * ***           rko->rko_rk = rk;
0000478A E310 2000 0004          00000000   7056          LG    1,0(0,2)    ; rk
00004790 E310 F060 0024          00000060   7057          STG   1,96(0,15)  ; offset of rko_rk in rd_kafka_op_s
                                            7058 * ***           return rko;
                                            7059 * ***   }
                                            7060 * * **** Start of Epilogue
                                            7061          DCCEPIL
00004796                                    7062+         ds 0h                                                          01-DCCEP
                                            7063+* Epilog
00004796 D707 D088 D088 00000088 00000088   7064+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000479C E3D0 D080 0004          00000080   7065+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000047A2 E3C0 D090 0004          00000090   7066+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000047A8 E3B0 C018 0004          00000018   7067+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000047AE E3C0 B010 0021          00000010   7068+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000047B4 E3E0 D008 0004          00000008   7069+         lg  14,8(0,13)          load up return address                 01-DCCEP
000047BA EB1C D020 0004          00000020   7070+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000047C0 078E                               7071+         bcr 8,14                if same dsab, just return              01-DCCEP
000047C2 E3F0 D010 0024          00000010   7072+         stg 15,16(0,13)         save return code                       01-DCCEP
000047C8 E300 D018 0024          00000018   7073+         stg 0,24(0,13)          save more return code                  01-DCCEP
000047CE E3F0 D090 0004          00000090   7074+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000047D4 E3F0 F018 0004          00000018   7075+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000047DA 47F0 F040               00000040   7076+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7077+* End of Epilog
                                            7078 * * **** End of Epilogue
000047E0                                    7079          DS    0D
000047E0 000000C0                           7080 @FRAMESIZE_1407 DC F'192'
000047E4 00000000
000047E8 0000000000003180                   7081 @lit_1407_281 DC AD(rd_kafka_op_new0)
                                            7082          DROP  12
                                                                                                                           Page  144 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7083 *
                                            7084 *   DSECT for automatic variables in "rd_kafka_op_new_cb"
                                            7085 *      (FUNCTION #1407)
                                            7086 *
00000000                00000000 000000A8   7087 @AUTO#rd_kafka_op_new_cb DSECT
00000000                                    7088          DS    XL168
                                            7089 *
000047F0                00000000 00005F80   7090 @CODE    CSECT
                                            7091 *
                                            7092 *
                                            7093 *
                                            7094 * ....... start of rd_kafka_op_reply
                                            7095 rd_kafka_op_reply ALIAS X'99846D92818692816D96976D99859793A8'
000047F0                                    7096 @LNAME1408 DS  0H
000047F0 00000011                           7097          DC    X'00000011'
000047F4 99846D9281869281                   7098          DC    C'rd_kafka_op_reply'
00004805 00                                 7099          DC    X'00'
                                            7100 rd_kafka_op_reply DCCPRLG CINDEX=1408,BASER=12,FRAME=192,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1408
                                            7101          macro
                                            7102          dccextrn &m
                                            7103          gblc    &$dccext(1000)
                                            7104          gbla    &$dccexti
                                            7105          lcla    &i
                                            7106 &$dccext(&$dccexti+1) setc    '&m'
                                            7107 &i       seta    1
                                            7108 .loop    aif    (&i gt &$dccexti).around
                                            7109          aif    ('&$dccext(&i)' eq '&m').getout
                                            7110 &i       seta    &i+1
                                            7111          ago     .loop
                                            7112 .around  anop
                                            7113 &$dccexti seta &$dccexti+1
                                            7114          extrn  &m
                                            7115 .getout  anop
                                            7116          mend
00004808                                    7117+$eye0123    ds    0d                                                    02-DCCCA
00004808 C4C3C3                             7118+         dc cl3'DCC'                                                    02-DCCCA
0000480B 01                                 7119+         dc xl1'01' format one                                          02-DCCCA
0000480C 00000000                           7120+         dc a(0)                                                        02-DCCCA
00004810 000000000000487A                   7121+         dc ad(@PER_1408)                                               02-DCCCA
00004818 00000000000000C0                   7122+         dc ad(192)                                                     02-DCCCA
00004820 0000000000000000                   7123+         dc ad(0)                                                       02-DCCCA
00004828 0000000000001000                   7124+         dc ad(4096)                                                    02-DCCCA
00004830 20                                 7125+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004831 03                                 7126+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004832 03                                 7127+         dc al1(3)                                                      02-DCCCA
00004833 08                                 7128+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004834 00                                 7129+         dc bl.8'00000000'                                              02-DCCCA
00004835 000000                             7130+         dc al3(0)                                                      02-DCCCA
00004838 00000000000047F0                   7131+         dc ad(@LNAME1408)                                              02-DCCCA
00004840                                    7132+         ds 0d                                                          02-DCCCA
00004840 0000000000004808                   7133+         dc ad($eye0123)                                                02-DCCCA
                                                                                                                           Page  145 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004848 0000000000000000                   7134+         dc ad(0)                                                       02-DCCCA
00004850                                    7135+         ds    0d                                                       01-DCCPR
                                            7136+         entry rd_kafka_op_reply                                        01-DCCPR
00004850                                    7137+rd_kafka_op_reply ds 0d                                                 01-DCCPR
00004850                                    7138+@REGION_1408_1 ds 0h                                                    01-DCCPR
00004850 EBEC D008 0024          00000008   7139+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004856 E3E0 D088 0004          00000088   7140+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000485C E3C0 D090 0004          00000090   7141+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004862 B904 002E                          7142+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004866 E3B0 C018 0004          00000018   7143+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000486C A7EB 00C0               000000C0   7144+         aghi  14,192              increase by frame size               01-DCCPR
00004870 E3E0 C020 0021          00000020   7145+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004876 4720 B020               00000020   7146+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000487A                                    7147+@PER_1408 ds   0h                                                       01-DCCPR
0000487A EBDE 2080 0024          00000080   7148+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004880 E3C0 2090 0024          00000090   7149+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004886 B904 00D2                          7150+         lgr   13,2                set real frame pointer               01-DCCPR
0000488A B904 00CF                          7151+         lgr   12,15               set base reg                         01-DCCPR
                        00004850            7152+         using @REGION_1408_1,12                                        01-DCCPR
                                            7153 * ******* End of Prologue
                                            7154 * *
0000488E E3F0 1000 0004          00000000   7155          LG    15,0(0,1)   ; rko
                                            7156 * ***
                                            7157 * ***           if (!rko->rko_replyq.q) {
00004894 E320 F040 0002          00000040   7158          LTG   2,64(0,15)  ; offset of rko_replyq in rd_kafka_op_s
0000489A 4770 C080               000048D0   7159          BNZ   @L829
                                            7160 * ***                   rd_kafka_op_destroy(rko);
0000489E E3F0 D0A8 0024          000000A8   7161          STG   15,168(0,13)
000048A4 4110 D0A8               000000A8   7162          LA    1,168(0,13)
000048A8 E3F0 C070 0004          000048C0   7163          LG    15,@lit_1408_283 ; rd_kafka_op_destroy
000048AE                                    7164 @@gen_label409 DS    0H
000048AE 05EF                               7165          BALR  14,15
000048B0                                    7166 @@gen_label410 DS    0H
                                            7167 * ***                   return 0;
000048B0 A7F9 0000               00000000   7168          LGHI  15,0        ; 0
000048B4 47F0 C0DC               0000492C   7169          B     @ret_lab_1408
000048B8                                    7170          DS    0D
000048B8 000000C0                           7171 @FRAMESIZE_1408 DC F'192'
000048BC 00000000
000048C0 0000000000003330                   7172 @lit_1408_283 DC AD(rd_kafka_op_destroy)
000048C8 0000000000002378                   7173 @lit_1408_288 DC AD(rd_kafka_replyq_enq)
                                            7174 * ***           }
000048D0                                    7175 @L829    DS    0H
                                            7176 * ***
                                            7177 * ***           rko->rko_type |= (rko->rko_op_cb ? (int)(1 << 29) : (i\
                                            7178 * nt)(1 << 30));
000048D0 5820 F010               00000010   7179          L     2,16(0,15)
000048D4 E330 F068 0002          00000068   7180          LTG   3,104(0,15) ; offset of rko_op_cb in rd_kafka_op_s
000048DA 4780 C098               000048E8   7181          BZ    @L830
000048DE C039 2000 0000                     7182          IILF  3,X'20000000' ; 536870912
000048E4 47F0 C09E               000048EE   7183          B     @L831
000048E8                                    7184 @L830    DS    0H
                                                                                                                           Page  146 
  Active Usings: @REGION_1408_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000048E8 C039 4000 0000                     7185          IILF  3,X'40000000' ; 1073741824
000048EE                                    7186 @L831    DS    0H
000048EE 1623                               7187          OR    2,3
000048F0 5020 F010               00000010   7188          ST    2,16(0,15)
                                            7189 * ***           rko->rko_err   = err;
000048F4 5810 100C               0000000C   7190          L     1,12(0,1)   ; err
000048F8 5010 F020               00000020   7191          ST    1,32(0,15)  ; offset of rko_err in rd_kafka_op_s
                                            7192 * ***           rko->rko_error = ((void *)0);
000048FC A719 0000               00000000   7193          LGHI  1,0         ; 0
00004900 E310 F028 0024          00000028   7194          STG   1,40(0,15)  ; offset of rko_error in rd_kafka_op_s
                                            7195 * ***
                                            7196 * ***      return rd_kafka_replyq_enq(&rko->rko_replyq, rko, 0);
00004906 4110 F040               00000040   7197          LA    1,64(0,15)
0000490A E310 D0A8 0024          000000A8   7198          STG   1,168(0,13)
00004910 E3F0 D0B0 0024          000000B0   7199          STG   15,176(0,13)
00004916 D707 D0B8 D0B8 000000B8 000000B8   7200          XC    184(8,13),184(13)
0000491C 4110 D0A8               000000A8   7201          LA    1,168(0,13)
00004920 E3F0 C078 0004          000048C8   7202          LG    15,@lit_1408_288 ; rd_kafka_replyq_enq
00004926                                    7203 @@gen_label412 DS    0H
00004926 05EF                               7204          BALR  14,15
00004928                                    7205 @@gen_label413 DS    0H
00004928 B914 00FF                          7206          LGFR  15,15
                                            7207 * ***   }
0000492C                                    7208 @ret_lab_1408 DS 0H
                                            7209 * * **** Start of Epilogue
                                            7210          DCCEPIL
0000492C                                    7211+         ds 0h                                                          01-DCCEP
                                            7212+* Epilog
0000492C D707 D088 D088 00000088 00000088   7213+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004932 E3D0 D080 0004          00000080   7214+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004938 E3C0 D090 0004          00000090   7215+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000493E E3B0 C018 0004          00000018   7216+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004944 E3C0 B010 0021          00000010   7217+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000494A E3E0 D008 0004          00000008   7218+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004950 EB1C D020 0004          00000020   7219+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004956 078E                               7220+         bcr 8,14                if same dsab, just return              01-DCCEP
00004958 E3F0 D010 0024          00000010   7221+         stg 15,16(0,13)         save return code                       01-DCCEP
0000495E E300 D018 0024          00000018   7222+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004964 E3F0 D090 0004          00000090   7223+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000496A E3F0 F018 0004          00000018   7224+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004970 47F0 F040               00000040   7225+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7226+* End of Epilog
                                            7227 * * **** End of Epilogue
                                            7228          DROP  12
                                            7229 *
                                            7230 *   DSECT for automatic variables in "rd_kafka_op_reply"
                                            7231 *      (FUNCTION #1408)
                                            7232 *
00000000                00000000 000000A8   7233 @AUTO#rd_kafka_op_reply DSECT
00000000                                    7234          DS    XL168
                                            7235 *
00004974                00000000 00005F80   7236 @CODE    CSECT
                                                                                                                           Page  147 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7237 *
                                            7238 *
                                            7239 *
                                            7240 * ....... start of rd_kafka_op_error_reply
                                            7241 rd_kafka_op_error_reply ALIAS X'99846D92818692816D96976D85999996996D998*
                                                                59793A8'
00004974                                    7242 @LNAME1409 DS  0H
00004974 00000017                           7243          DC    X'00000017'
00004978 99846D9281869281                   7244          DC    C'rd_kafka_op_error_reply'
0000498F 00                                 7245          DC    X'00'
                                            7246 rd_kafka_op_error_reply DCCPRLG CINDEX=1409,BASER=12,FRAME=192,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME1409
                                            7247          macro
                                            7248          dccextrn &m
                                            7249          gblc    &$dccext(1000)
                                            7250          gbla    &$dccexti
                                            7251          lcla    &i
                                            7252 &$dccext(&$dccexti+1) setc    '&m'
                                            7253 &i       seta    1
                                            7254 .loop    aif    (&i gt &$dccexti).around
                                            7255          aif    ('&$dccext(&i)' eq '&m').getout
                                            7256 &i       seta    &i+1
                                            7257          ago     .loop
                                            7258 .around  anop
                                            7259 &$dccexti seta &$dccexti+1
                                            7260          extrn  &m
                                            7261 .getout  anop
                                            7262          mend
00004990                                    7263+$eye0126    ds    0d                                                    02-DCCCA
00004990 C4C3C3                             7264+         dc cl3'DCC'                                                    02-DCCCA
00004993 01                                 7265+         dc xl1'01' format one                                          02-DCCCA
00004994 00000000                           7266+         dc a(0)                                                        02-DCCCA
00004998 0000000000004A02                   7267+         dc ad(@PER_1409)                                               02-DCCCA
000049A0 00000000000000C0                   7268+         dc ad(192)                                                     02-DCCCA
000049A8 0000000000000000                   7269+         dc ad(0)                                                       02-DCCCA
000049B0 0000000000001000                   7270+         dc ad(4096)                                                    02-DCCCA
000049B8 20                                 7271+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000049B9 03                                 7272+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000049BA 03                                 7273+         dc al1(3)                                                      02-DCCCA
000049BB 08                                 7274+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000049BC 00                                 7275+         dc bl.8'00000000'                                              02-DCCCA
000049BD 000000                             7276+         dc al3(0)                                                      02-DCCCA
000049C0 0000000000004974                   7277+         dc ad(@LNAME1409)                                              02-DCCCA
000049C8                                    7278+         ds 0d                                                          02-DCCCA
000049C8 0000000000004990                   7279+         dc ad($eye0126)                                                02-DCCCA
000049D0 0000000000000000                   7280+         dc ad(0)                                                       02-DCCCA
000049D8                                    7281+         ds    0d                                                       01-DCCPR
                                            7282+         entry rd_kafka_op_error_reply                                  01-DCCPR
000049D8                                    7283+rd_kafka_op_error_reply ds 0d                                           01-DCCPR
000049D8                                    7284+@REGION_1409_1 ds 0h                                                    01-DCCPR
000049D8 EBEC D008 0024          00000008   7285+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000049DE E3E0 D088 0004          00000088   7286+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page  148 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000049E4 E3C0 D090 0004          00000090   7287+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000049EA B904 002E                          7288+         lgr   2,14                copy addr of our savearea            01-DCCPR
000049EE E3B0 C018 0004          00000018   7289+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000049F4 A7EB 00C0               000000C0   7290+         aghi  14,192              increase by frame size               01-DCCPR
000049F8 E3E0 C020 0021          00000020   7291+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000049FE 4720 B020               00000020   7292+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004A02                                    7293+@PER_1409 ds   0h                                                       01-DCCPR
00004A02 EBDE 2080 0024          00000080   7294+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004A08 E3C0 2090 0024          00000090   7295+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004A0E B904 00D2                          7296+         lgr   13,2                set real frame pointer               01-DCCPR
00004A12 B904 00CF                          7297+         lgr   12,15               set base reg                         01-DCCPR
                        000049D8            7298+         using @REGION_1409_1,12                                        01-DCCPR
                                            7299 * ******* End of Prologue
                                            7300 * *
00004A16 EB23 1000 0004          00000000   7301          LMG   2,3,0(1)    ; rko
                                            7302 * ***
                                            7303 * ***           if (!rko->rko_replyq.q) {
00004A1C E3F0 2040 0002          00000040   7304          LTG   15,64(0,2)  ; offset of rko_replyq in rd_kafka_op_s
00004A22 4770 C0B0               00004A88   7305          BNZ   @L832
                                            7306 * ***                   do { if ((error)) rd_kafka_error_destroy(error\
                                            7307 * ); } while (0);
00004A26                                    7308 @L833    DS    0H
00004A26 B902 00F3                          7309          LTGR  15,3
00004A2A 4780 C068               00004A40   7310          BZ    @L836
00004A2E E330 D0A8 0024          000000A8   7311          STG   3,168(0,13)
00004A34 4110 D0A8               000000A8   7312          LA    1,168(0,13)
00004A38 E3F0 C090 0004          00004A68   7313          LG    15,@lit_1409_290 ; rd_kafka_error_destroy
00004A3E                                    7314 @@gen_label416 DS    0H
00004A3E 05EF                               7315          BALR  14,15
00004A40                                    7316 @@gen_label417 DS    0H
00004A40                                    7317 @L836    DS    0H
                                            7318 * ***                   rd_kafka_op_destroy(rko);
00004A40 E320 D0A8 0024          000000A8   7319          STG   2,168(0,13)
00004A46 4110 D0A8               000000A8   7320          LA    1,168(0,13)
00004A4A E3F0 C098 0004          00004A70   7321          LG    15,@lit_1409_291 ; rd_kafka_op_destroy
00004A50                                    7322 @@gen_label418 DS    0H
00004A50 05EF                               7323          BALR  14,15
00004A52                                    7324 @@gen_label419 DS    0H
                                            7325 * ***                   return 0;
00004A52 A7F9 0000               00000000   7326          LGHI  15,0        ; 0
00004A56 47F0 C126               00004AFE   7327          B     @ret_lab_1409
00004A60                                    7328          DS    0D
00004A60 000000C0                           7329 @FRAMESIZE_1409 DC F'192'
00004A64 00000000
00004A68 0000000000000000                   7330 @lit_1409_290 DC AD(rd_kafka_error_destroy)
00004A70 0000000000003330                   7331 @lit_1409_291 DC AD(rd_kafka_op_destroy)
00004A78 0000000000000000                   7332 @lit_1409_295 DC AD(rd_kafka_error_code)
00004A80 0000000000002378                   7333 @lit_1409_297 DC AD(rd_kafka_replyq_enq)
                                            7334 * ***           }
00004A88                                    7335 @L832    DS    0H
                                            7336 * ***
                                            7337 * ***           rko->rko_type |= (rko->rko_op_cb ? (int)(1 << 29) : (i\
                                                                                                                           Page  149 
  Active Usings: @REGION_1409_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7338 * nt)(1 << 30));
00004A88 58F0 2010               00000010   7339          L     15,16(0,2)
00004A8C E310 2068 0002          00000068   7340          LTG   1,104(0,2)  ; offset of rko_op_cb in rd_kafka_op_s
00004A92 4780 C0C8               00004AA0   7341          BZ    @L837
00004A96 C019 2000 0000                     7342          IILF  1,X'20000000' ; 536870912
00004A9C 47F0 C0CE               00004AA6   7343          B     @L838
00004AA0                                    7344 @L837    DS    0H
00004AA0 C019 4000 0000                     7345          IILF  1,X'40000000' ; 1073741824
00004AA6                                    7346 @L838    DS    0H
00004AA6 16F1                               7347          OR    15,1
00004AA8 50F0 2010               00000010   7348          ST    15,16(0,2)
                                            7349 * ***           rko->rko_err   = error ? rd_kafka_error_code(error)
00004AAC B902 00F3                          7350          LTGR  15,3
00004AB0 4780 C0F2               00004ACA   7351          BZ    @L839
                                            7352 * ***                                  : RD_KAFKA_RESP_ERR_NO_ERROR;
00004AB4 E330 D0A8 0024          000000A8   7353          STG   3,168(0,13)
00004ABA 4110 D0A8               000000A8   7354          LA    1,168(0,13)
00004ABE E3F0 C0A0 0004          00004A78   7355          LG    15,@lit_1409_295 ; rd_kafka_error_code
00004AC4                                    7356 @@gen_label422 DS    0H
00004AC4 05EF                               7357          BALR  14,15
00004AC6                                    7358 @@gen_label423 DS    0H
00004AC6 47F0 C0F6               00004ACE   7359          B     @L840
00004ACA                                    7360 @L839    DS    0H
00004ACA A7F8 0000               00000000   7361          LHI   15,0        ; 0
00004ACE                                    7362 @L840    DS    0H
00004ACE 50F0 2020               00000020   7363          ST    15,32(0,2)
                                            7364 * ***           rko->rko_error = error;
00004AD2 E330 2028 0024          00000028   7365          STG   3,40(0,2)   ; offset of rko_error in rd_kafka_op_s
                                            7366 * ***
                                            7367 * ***           return rd_kafka_replyq_enq(&rko->rko_replyq, rko, 0);
00004AD8 41F0 2040               00000040   7368          LA    15,64(0,2)
00004ADC E3F0 D0A8 0024          000000A8   7369          STG   15,168(0,13)
00004AE2 E320 D0B0 0024          000000B0   7370          STG   2,176(0,13)
00004AE8 D707 D0B8 D0B8 000000B8 000000B8   7371          XC    184(8,13),184(13)
00004AEE 4110 D0A8               000000A8   7372          LA    1,168(0,13)
00004AF2 E3F0 C0A8 0004          00004A80   7373          LG    15,@lit_1409_297 ; rd_kafka_replyq_enq
00004AF8                                    7374 @@gen_label424 DS    0H
00004AF8 05EF                               7375          BALR  14,15
00004AFA                                    7376 @@gen_label425 DS    0H
00004AFA B914 00FF                          7377          LGFR  15,15
                                            7378 * ***   }
00004AFE                                    7379 @ret_lab_1409 DS 0H
                                            7380 * * **** Start of Epilogue
                                            7381          DCCEPIL
00004AFE                                    7382+         ds 0h                                                          01-DCCEP
                                            7383+* Epilog
00004AFE D707 D088 D088 00000088 00000088   7384+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004B04 E3D0 D080 0004          00000080   7385+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004B0A E3C0 D090 0004          00000090   7386+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004B10 E3B0 C018 0004          00000018   7387+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004B16 E3C0 B010 0021          00000010   7388+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004B1C E3E0 D008 0004          00000008   7389+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page  150 
  Active Usings: @REGION_1409_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004B22 EB1C D020 0004          00000020   7390+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004B28 078E                               7391+         bcr 8,14                if same dsab, just return              01-DCCEP
00004B2A E3F0 D010 0024          00000010   7392+         stg 15,16(0,13)         save return code                       01-DCCEP
00004B30 E300 D018 0024          00000018   7393+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004B36 E3F0 D090 0004          00000090   7394+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004B3C E3F0 F018 0004          00000018   7395+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004B42 47F0 F040               00000040   7396+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7397+* End of Epilog
                                            7398 * * **** End of Epilogue
                                            7399          DROP  12
                                            7400 *
                                            7401 *   DSECT for automatic variables in "rd_kafka_op_error_reply"
                                            7402 *      (FUNCTION #1409)
                                            7403 *
00000000                00000000 000000A8   7404 @AUTO#rd_kafka_op_error_reply DSECT
00000000                                    7405          DS    XL168
                                            7406 *
00004B46                00000000 00005F80   7407 @CODE    CSECT
                                            7408 *
                                            7409 *
                                            7410 *
                                            7411 * ....... start of rd_kafka_op_req0
                                            7412 rd_kafka_op_req0 ALIAS X'99846D92818692816D96976D998598F0'
00004B46                                    7413 @LNAME1412 DS  0H
00004B46 00000010                           7414          DC    X'00000010'
00004B4A 99846D9281869281                   7415          DC    C'rd_kafka_op_req0'
00004B5A 00                                 7416          DC    X'00'
                                            7417 rd_kafka_op_req0 DCCPRLG CINDEX=1412,BASER=12,FRAME=200,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1412
                                            7418          macro
                                            7419          dccextrn &m
                                            7420          gblc    &$dccext(1000)
                                            7421          gbla    &$dccexti
                                            7422          lcla    &i
                                            7423 &$dccext(&$dccexti+1) setc    '&m'
                                            7424 &i       seta    1
                                            7425 .loop    aif    (&i gt &$dccexti).around
                                            7426          aif    ('&$dccext(&i)' eq '&m').getout
                                            7427 &i       seta    &i+1
                                            7428          ago     .loop
                                            7429 .around  anop
                                            7430 &$dccexti seta &$dccexti+1
                                            7431          extrn  &m
                                            7432 .getout  anop
                                            7433          mend
00004B60                                    7434+$eye0129    ds    0d                                                    02-DCCCA
00004B60 C4C3C3                             7435+         dc cl3'DCC'                                                    02-DCCCA
00004B63 01                                 7436+         dc xl1'01' format one                                          02-DCCCA
00004B64 00000000                           7437+         dc a(0)                                                        02-DCCCA
00004B68 0000000000004BD2                   7438+         dc ad(@PER_1412)                                               02-DCCCA
00004B70 00000000000000C8                   7439+         dc ad(200)                                                     02-DCCCA
00004B78 0000000000000000                   7440+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  151 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004B80 0000000000001000                   7441+         dc ad(4096)                                                    02-DCCCA
00004B88 20                                 7442+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004B89 03                                 7443+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004B8A 03                                 7444+         dc al1(3)                                                      02-DCCCA
00004B8B 08                                 7445+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004B8C 00                                 7446+         dc bl.8'00000000'                                              02-DCCCA
00004B8D 000000                             7447+         dc al3(0)                                                      02-DCCCA
00004B90 0000000000004B46                   7448+         dc ad(@LNAME1412)                                              02-DCCCA
00004B98                                    7449+         ds 0d                                                          02-DCCCA
00004B98 0000000000004B60                   7450+         dc ad($eye0129)                                                02-DCCCA
00004BA0 0000000000000000                   7451+         dc ad(0)                                                       02-DCCCA
00004BA8                                    7452+         ds    0d                                                       01-DCCPR
                                            7453+         entry rd_kafka_op_req0                                         01-DCCPR
00004BA8                                    7454+rd_kafka_op_req0 ds 0d                                                  01-DCCPR
00004BA8                                    7455+@REGION_1412_1 ds 0h                                                    01-DCCPR
00004BA8 EBEC D008 0024          00000008   7456+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004BAE E3E0 D088 0004          00000088   7457+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004BB4 E3C0 D090 0004          00000090   7458+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004BBA B904 002E                          7459+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004BBE E3B0 C018 0004          00000018   7460+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004BC4 A7EB 00C8               000000C8   7461+         aghi  14,200              increase by frame size               01-DCCPR
00004BC8 E3E0 C020 0021          00000020   7462+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004BCE 4720 B020               00000020   7463+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004BD2                                    7464+@PER_1412 ds   0h                                                       01-DCCPR
00004BD2 EBDE 2080 0024          00000080   7465+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004BD8 E3C0 2090 0024          00000090   7466+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004BDE B904 00D2                          7467+         lgr   13,2                set real frame pointer               01-DCCPR
00004BE2 B904 00CF                          7468+         lgr   12,15               set base reg                         01-DCCPR
                        00004BA8            7469+         using @REGION_1412_1,12                                        01-DCCPR
00004BE6 B904 0021                          7470          LGR   2,1         ; ptr to parm area
                                            7471 * ******* End of Prologue
                                            7472 * *
                                            7473 * ***           rd_kafka_op_t *reply;
                                            7474 * ***
                                            7475 * ***
                                            7476 * ***           rd_kafka_op_set_replyq(rko, recvq, ((void *)0));
00004BEA E3F0 2010 0004          00000010   7477          LG    15,16(0,2)  ; rko
00004BF0 E3F0 D0B0 0024          000000B0   7478          STG   15,176(0,13)
00004BF6 E3F0 2008 0004          00000008   7479          LG    15,8(0,2)   ; recvq
00004BFC E3F0 D0B8 0024          000000B8   7480          STG   15,184(0,13)
00004C02 D707 D0C0 D0C0 000000C0 000000C0   7481          XC    192(8,13),192(13)
00004C08 4110 D0B0               000000B0   7482          LA    1,176(0,13)
00004C0C E3F0 C0A8 0004          00004C50   7483          LG    15,@lit_1412_299 ; rd_kafka_op_set_replyq
00004C12                                    7484 @@gen_label426 DS    0H
00004C12 05EF                               7485          BALR  14,15
00004C14                                    7486 @@gen_label427 DS    0H
                                            7487 * ***
                                            7488 * ***
                                            7489 * ***           if (!rd_kafka_q_enq(destq, rko))
00004C14 E3F0 2000 0004          00000000   7490          LG    15,0(0,2)   ; destq
00004C1A E3F0 D0B0 0024          000000B0   7491          STG   15,176(0,13)
00004C20 E3F0 2010 0004          00000010   7492          LG    15,16(0,2)  ; rko
                                                                                                                           Page  152 
  Active Usings: @REGION_1412_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004C26 E3F0 D0B8 0024          000000B8   7493          STG   15,184(0,13)
00004C2C 4110 D0B0               000000B0   7494          LA    1,176(0,13)
00004C30 E3F0 C0B0 0004          00004C58   7495          LG    15,@lit_1412_300 ; rd_kafka_q_enq
00004C36                                    7496 @@gen_label428 DS    0H
00004C36 05EF                               7497          BALR  14,15
00004C38                                    7498 @@gen_label429 DS    0H
00004C38 12FF                               7499          LTR   15,15
00004C3A 4770 C0C8               00004C70   7500          BNZ   @L841
                                            7501 * ***                   return ((void *)0);
00004C3E A7F9 0000               00000000   7502          LGHI  15,0        ; 0
00004C42 47F0 C104               00004CAC   7503          B     @ret_lab_1412
00004C48                                    7504          DS    0D
00004C48 000000C8                           7505 @FRAMESIZE_1412 DC F'200'
00004C4C 00000000
00004C50 0000000000002050                   7506 @lit_1412_299 DC AD(rd_kafka_op_set_replyq)
00004C58 0000000000001DD8                   7507 @lit_1412_300 DC AD(rd_kafka_q_enq)
00004C60 0000000000000AC8                   7508 @lit_1412_302 DC AD(rd_timeout_us)
00004C68 0000000000000000                   7509 @lit_1412_303 DC AD(rd_kafka_q_pop)
00004C70                                    7510 @L841    DS    0H
                                            7511 * ***
                                            7512 * ***
                                            7513 * ***           reply = rd_kafka_q_pop(recvq, rd_timeout_us(timeout_ms\
                                            7514 * ), 0);
00004C70 E3F0 201C 0014          0000001C   7515          LGF   15,28(0,2)  ; timeout_ms
00004C76 E3F0 D0B0 0024          000000B0   7516          STG   15,176(0,13)
00004C7C 4110 D0B0               000000B0   7517          LA    1,176(0,13)
00004C80 E3F0 C0B8 0004          00004C60   7518          LG    15,@lit_1412_302 ; rd_timeout_us
00004C86                                    7519 @@gen_label431 DS    0H
00004C86 05EF                               7520          BALR  14,15
00004C88                                    7521 @@gen_label432 DS    0H
00004C88 E310 2008 0004          00000008   7522          LG    1,8(0,2)    ; recvq
00004C8E E310 D0B0 0024          000000B0   7523          STG   1,176(0,13)
00004C94 E3F0 D0B8 0024          000000B8   7524          STG   15,184(0,13)
00004C9A D707 D0C0 D0C0 000000C0 000000C0   7525          XC    192(8,13),192(13)
00004CA0 4110 D0B0               000000B0   7526          LA    1,176(0,13)
00004CA4 E3F0 C0C0 0004          00004C68   7527          LG    15,@lit_1412_303 ; rd_kafka_q_pop
00004CAA                                    7528 @@gen_label433 DS    0H
00004CAA 05EF                               7529          BALR  14,15
00004CAC                                    7530 @@gen_label434 DS    0H
                                            7531 * ***
                                            7532 * ***
                                            7533 * ***           return reply;
                                            7534 * ***   }
00004CAC                                    7535 @ret_lab_1412 DS 0H
                                            7536 * * **** Start of Epilogue
                                            7537          DCCEPIL
00004CAC                                    7538+         ds 0h                                                          01-DCCEP
                                            7539+* Epilog
00004CAC D707 D088 D088 00000088 00000088   7540+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004CB2 E3D0 D080 0004          00000080   7541+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004CB8 E3C0 D090 0004          00000090   7542+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004CBE E3B0 C018 0004          00000018   7543+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  153 
  Active Usings: @REGION_1412_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004CC4 E3C0 B010 0021          00000010   7544+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004CCA E3E0 D008 0004          00000008   7545+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004CD0 EB1C D020 0004          00000020   7546+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004CD6 078E                               7547+         bcr 8,14                if same dsab, just return              01-DCCEP
00004CD8 E3F0 D010 0024          00000010   7548+         stg 15,16(0,13)         save return code                       01-DCCEP
00004CDE E300 D018 0024          00000018   7549+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004CE4 E3F0 D090 0004          00000090   7550+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004CEA E3F0 F018 0004          00000018   7551+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004CF0 47F0 F040               00000040   7552+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7553+* End of Epilog
                                            7554 * * **** End of Epilogue
                                            7555          DROP  12
                                            7556 *
                                            7557 *   DSECT for automatic variables in "rd_kafka_op_req0"
                                            7558 *      (FUNCTION #1412)
                                            7559 *
00000000                00000000 000000A8   7560 @AUTO#rd_kafka_op_req0 DSECT
00000000                                    7561          DS    XL168
                                            7562 *
00004CF4                00000000 00005F80   7563 @CODE    CSECT
                                            7564 *
                                            7565 *
                                            7566 *
                                            7567 * ....... start of rd_kafka_op_req
                                            7568 rd_kafka_op_req ALIAS X'99846D92818692816D96976D998598'
00004CF4                                    7569 @LNAME1413 DS  0H
00004CF4 0000000F                           7570          DC    X'0000000F'
00004CF8 99846D9281869281                   7571          DC    C'rd_kafka_op_req'
00004D07 00                                 7572          DC    X'00'
                                            7573 rd_kafka_op_req DCCPRLG CINDEX=1413,BASER=12,FRAME=208,ENTRY=YES,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1413
                                            7574          macro
                                            7575          dccextrn &m
                                            7576          gblc    &$dccext(1000)
                                            7577          gbla    &$dccexti
                                            7578          lcla    &i
                                            7579 &$dccext(&$dccexti+1) setc    '&m'
                                            7580 &i       seta    1
                                            7581 .loop    aif    (&i gt &$dccexti).around
                                            7582          aif    ('&$dccext(&i)' eq '&m').getout
                                            7583 &i       seta    &i+1
                                            7584          ago     .loop
                                            7585 .around  anop
                                            7586 &$dccexti seta &$dccexti+1
                                            7587          extrn  &m
                                            7588 .getout  anop
                                            7589          mend
00004D08                                    7590+$eye0132    ds    0d                                                    02-DCCCA
00004D08 C4C3C3                             7591+         dc cl3'DCC'                                                    02-DCCCA
00004D0B 01                                 7592+         dc xl1'01' format one                                          02-DCCCA
00004D0C 00000000                           7593+         dc a(0)                                                        02-DCCCA
00004D10 0000000000004D7A                   7594+         dc ad(@PER_1413)                                               02-DCCCA
                                                                                                                           Page  154 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004D18 00000000000000D0                   7595+         dc ad(208)                                                     02-DCCCA
00004D20 0000000000000000                   7596+         dc ad(0)                                                       02-DCCCA
00004D28 0000000000001000                   7597+         dc ad(4096)                                                    02-DCCCA
00004D30 20                                 7598+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004D31 03                                 7599+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004D32 03                                 7600+         dc al1(3)                                                      02-DCCCA
00004D33 08                                 7601+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004D34 00                                 7602+         dc bl.8'00000000'                                              02-DCCCA
00004D35 000000                             7603+         dc al3(0)                                                      02-DCCCA
00004D38 0000000000004CF4                   7604+         dc ad(@LNAME1413)                                              02-DCCCA
00004D40                                    7605+         ds 0d                                                          02-DCCCA
00004D40 0000000000004D08                   7606+         dc ad($eye0132)                                                02-DCCCA
00004D48 0000000000000000                   7607+         dc ad(0)                                                       02-DCCCA
00004D50                                    7608+         ds    0d                                                       01-DCCPR
                                            7609+         entry rd_kafka_op_req                                          01-DCCPR
00004D50                                    7610+rd_kafka_op_req ds 0d                                                   01-DCCPR
00004D50                                    7611+@REGION_1413_1 ds 0h                                                    01-DCCPR
00004D50 EBEC D008 0024          00000008   7612+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004D56 E3E0 D088 0004          00000088   7613+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004D5C E3C0 D090 0004          00000090   7614+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004D62 B904 002E                          7615+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004D66 E3B0 C018 0004          00000018   7616+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004D6C A7EB 00D0               000000D0   7617+         aghi  14,208              increase by frame size               01-DCCPR
00004D70 E3E0 C020 0021          00000020   7618+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004D76 4720 B020               00000020   7619+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004D7A                                    7620+@PER_1413 ds   0h                                                       01-DCCPR
00004D7A EBDE 2080 0024          00000080   7621+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004D80 E3C0 2090 0024          00000090   7622+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004D86 B904 00D2                          7623+         lgr   13,2                set real frame pointer               01-DCCPR
00004D8A B904 00CF                          7624+         lgr   12,15               set base reg                         01-DCCPR
                        00004D50            7625+         using @REGION_1413_1,12                                        01-DCCPR
00004D8E B904 0031                          7626          LGR   3,1         ; ptr to parm area
                                            7627 * ******* End of Prologue
                                            7628 * *
                                            7629 * ***           rd_kafka_q_t *recvq;
                                            7630 * ***           rd_kafka_op_t *reply;
                                            7631 * ***
                                            7632 * ***           recvq = rd_kafka_q_new0(destq->rkq_rk,__FUNCTION__,630\
                                            7633 * );
00004D92 E340 3000 0004          00000000   7634          LG    4,0(0,3)    ; destq
00004D98 E3F0 4088 0004          00000088   7635          LG    15,136(0,4)
00004D9E E3F0 D0B0 0024          000000B0   7636          STG   15,176(0,13)
00004DA4 E3F0 C120 0004          00004E70   7637          LG    15,@lit_1413_305
00004DAA 41F0 F3A2               000003A2   7638          LA    15,930(0,15)
00004DAE E3F0 D0B8 0024          000000B8   7639          STG   15,184(0,13)
00004DB4 E548 D0C0 0276          000000C0   7640          MVGHI 192(13),630
00004DBA 4110 D0B0               000000B0   7641          LA    1,176(0,13)
00004DBE E3F0 C118 0004          00004E68   7642          LG    15,@lit_1413_306 ; rd_kafka_q_new0
00004DC4                                    7643 @@gen_label435 DS    0H
00004DC4 05EF                               7644          BALR  14,15
00004DC6                                    7645 @@gen_label436 DS    0H
00004DC6 B904 002F                          7646          LGR   2,15
                                                                                                                           Page  155 
  Active Usings: @REGION_1413_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7647 * ***
                                            7648 * ***           reply = rd_kafka_op_req0(destq, recvq, rko, timeout_ms\
                                            7649 * );
00004DCA E340 D0B0 0024          000000B0   7650          STG   4,176(0,13)
00004DD0 E320 D0B8 0024          000000B8   7651          STG   2,184(0,13)
00004DD6 E3F0 3008 0004          00000008   7652          LG    15,8(0,3)   ; rko
00004DDC E3F0 D0C0 0024          000000C0   7653          STG   15,192(0,13)
00004DE2 E3F0 3014 0014          00000014   7654          LGF   15,20(0,3)  ; timeout_ms
00004DE8 E3F0 D0C8 0024          000000C8   7655          STG   15,200(0,13)
00004DEE 4110 D0B0               000000B0   7656          LA    1,176(0,13)
00004DF2 E3F0 C128 0004          00004E78   7657          LG    15,@lit_1413_307 ; rd_kafka_op_req0
00004DF8                                    7658 @@gen_label437 DS    0H
00004DF8 05EF                               7659          BALR  14,15
00004DFA                                    7660 @@gen_label438 DS    0H
00004DFA B904 003F                          7661          LGR   3,15
                                            7662 * ***
                                            7663 * ***           rd_kafka_q_destroy_owner(recvq);
00004DFE E320 D0B0 0024          000000B0   7664          STG   2,176(0,13)
00004E04 4110 D0B0               000000B0   7665          LA    1,176(0,13)
00004E08 E3F0 C130 0004          00004E80   7666          LG    15,@lit_1413_308 ; rd_kafka_q_destroy_owner
00004E0E                                    7667 @@gen_label439 DS    0H
00004E0E 05EF                               7668          BALR  14,15
00004E10                                    7669 @@gen_label440 DS    0H
                                            7670 * ***
                                            7671 * ***           return reply;
00004E10 B904 00F3                          7672          LGR   15,3
                                            7673 * ***   }
                                            7674 * * **** Start of Epilogue
                                            7675          DCCEPIL
00004E14                                    7676+         ds 0h                                                          01-DCCEP
                                            7677+* Epilog
00004E14 D707 D088 D088 00000088 00000088   7678+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004E1A E3D0 D080 0004          00000080   7679+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004E20 E3C0 D090 0004          00000090   7680+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004E26 E3B0 C018 0004          00000018   7681+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004E2C E3C0 B010 0021          00000010   7682+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004E32 E3E0 D008 0004          00000008   7683+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004E38 EB1C D020 0004          00000020   7684+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004E3E 078E                               7685+         bcr 8,14                if same dsab, just return              01-DCCEP
00004E40 E3F0 D010 0024          00000010   7686+         stg 15,16(0,13)         save return code                       01-DCCEP
00004E46 E300 D018 0024          00000018   7687+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004E4C E3F0 D090 0004          00000090   7688+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004E52 E3F0 F018 0004          00000018   7689+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004E58 47F0 F040               00000040   7690+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7691+* End of Epilog
                                            7692 * * **** End of Epilogue
00004E60                                    7693          DS    0D
00004E60 000000D0                           7694 @FRAMESIZE_1413 DC F'208'
00004E64 00000000
00004E68 0000000000000000                   7695 @lit_1413_306 DC AD(rd_kafka_q_new0)
00004E70 0000000000005F80                   7696 @lit_1413_305 DC AD(@DATA)
00004E78 0000000000004BA8                   7697 @lit_1413_307 DC AD(rd_kafka_op_req0)
                                                                                                                           Page  156 
  Active Usings: @REGION_1413_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004E80 00000000000013B8                   7698 @lit_1413_308 DC AD(rd_kafka_q_destroy_owner)
                                            7699          DROP  12
                                            7700 *
                                            7701 *   DSECT for automatic variables in "rd_kafka_op_req"
                                            7702 *      (FUNCTION #1413)
                                            7703 *
00000000                00000000 000000A8   7704 @AUTO#rd_kafka_op_req DSECT
00000000                                    7705          DS    XL168
                                            7706 *
00004E88                00000000 00005F80   7707 @CODE    CSECT
                                            7708 *
                                            7709 *
                                            7710 *
                                            7711 * ....... start of rd_kafka_op_req2
                                            7712 rd_kafka_op_req2 ALIAS X'99846D92818692816D96976D998598F2'
00004E88                                    7713 @LNAME1414 DS  0H
00004E88 00000010                           7714          DC    X'00000010'
00004E8C 99846D9281869281                   7715          DC    C'rd_kafka_op_req2'
00004E9C 00                                 7716          DC    X'00'
                                            7717 rd_kafka_op_req2 DCCPRLG CINDEX=1414,BASER=12,FRAME=200,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1414
                                            7718          macro
                                            7719          dccextrn &m
                                            7720          gblc    &$dccext(1000)
                                            7721          gbla    &$dccexti
                                            7722          lcla    &i
                                            7723 &$dccext(&$dccexti+1) setc    '&m'
                                            7724 &i       seta    1
                                            7725 .loop    aif    (&i gt &$dccexti).around
                                            7726          aif    ('&$dccext(&i)' eq '&m').getout
                                            7727 &i       seta    &i+1
                                            7728          ago     .loop
                                            7729 .around  anop
                                            7730 &$dccexti seta &$dccexti+1
                                            7731          extrn  &m
                                            7732 .getout  anop
                                            7733          mend
00004EA0                                    7734+$eye0135    ds    0d                                                    02-DCCCA
00004EA0 C4C3C3                             7735+         dc cl3'DCC'                                                    02-DCCCA
00004EA3 01                                 7736+         dc xl1'01' format one                                          02-DCCCA
00004EA4 00000000                           7737+         dc a(0)                                                        02-DCCCA
00004EA8 0000000000004F12                   7738+         dc ad(@PER_1414)                                               02-DCCCA
00004EB0 00000000000000C8                   7739+         dc ad(200)                                                     02-DCCCA
00004EB8 0000000000000000                   7740+         dc ad(0)                                                       02-DCCCA
00004EC0 0000000000001000                   7741+         dc ad(4096)                                                    02-DCCCA
00004EC8 20                                 7742+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004EC9 03                                 7743+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004ECA 03                                 7744+         dc al1(3)                                                      02-DCCCA
00004ECB 08                                 7745+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004ECC 00                                 7746+         dc bl.8'00000000'                                              02-DCCCA
00004ECD 000000                             7747+         dc al3(0)                                                      02-DCCCA
00004ED0 0000000000004E88                   7748+         dc ad(@LNAME1414)                                              02-DCCCA
                                                                                                                           Page  157 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004ED8                                    7749+         ds 0d                                                          02-DCCCA
00004ED8 0000000000004EA0                   7750+         dc ad($eye0135)                                                02-DCCCA
00004EE0 0000000000000000                   7751+         dc ad(0)                                                       02-DCCCA
00004EE8                                    7752+         ds    0d                                                       01-DCCPR
                                            7753+         entry rd_kafka_op_req2                                         01-DCCPR
00004EE8                                    7754+rd_kafka_op_req2 ds 0d                                                  01-DCCPR
00004EE8                                    7755+@REGION_1414_1 ds 0h                                                    01-DCCPR
00004EE8 EBEC D008 0024          00000008   7756+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004EEE E3E0 D088 0004          00000088   7757+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004EF4 E3C0 D090 0004          00000090   7758+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004EFA B904 002E                          7759+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004EFE E3B0 C018 0004          00000018   7760+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004F04 A7EB 00C8               000000C8   7761+         aghi  14,200              increase by frame size               01-DCCPR
00004F08 E3E0 C020 0021          00000020   7762+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004F0E 4720 B020               00000020   7763+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004F12                                    7764+@PER_1414 ds   0h                                                       01-DCCPR
00004F12 EBDE 2080 0024          00000080   7765+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004F18 E3C0 2090 0024          00000090   7766+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004F1E B904 00D2                          7767+         lgr   13,2                set real frame pointer               01-DCCPR
00004F22 B904 00CF                          7768+         lgr   12,15               set base reg                         01-DCCPR
                        00004EE8            7769+         using @REGION_1414_1,12                                        01-DCCPR
00004F26 B904 0021                          7770          LGR   2,1         ; ptr to parm area
                                            7771 * ******* End of Prologue
                                            7772 * *
                                            7773 * ***           rd_kafka_op_t *rko;
                                            7774 * ***
                                            7775 * ***           rko = rd_kafka_op_new0(((void *)0), type);
00004F2A D707 D0B0 D0B0 000000B0 000000B0   7776          XC    176(8,13),176(13)
00004F30 E3F0 200C 0014          0000000C   7777          LGF   15,12(0,2)  ; type
00004F36 E3F0 D0B8 0024          000000B8   7778          STG   15,184(0,13)
00004F3C 4110 D0B0               000000B0   7779          LA    1,176(0,13)
00004F40 E3F0 C0D8 0004          00004FC0   7780          LG    15,@lit_1414_310 ; rd_kafka_op_new0
00004F46                                    7781 @@gen_label441 DS    0H
00004F46 05EF                               7782          BALR  14,15
00004F48                                    7783 @@gen_label442 DS    0H
                                            7784 * ***           return rd_kafka_op_req(destq, rko, -1);
00004F48 E310 2000 0004          00000000   7785          LG    1,0(0,2)    ; destq
00004F4E E310 D0B0 0024          000000B0   7786          STG   1,176(0,13)
00004F54 E3F0 D0B8 0024          000000B8   7787          STG   15,184(0,13)
00004F5A E548 D0C0 FFFF          000000C0   7788          MVGHI 192(13),-1
00004F60 4110 D0B0               000000B0   7789          LA    1,176(0,13)
00004F64 E3F0 C0E0 0004          00004FC8   7790          LG    15,@lit_1414_311 ; rd_kafka_op_req
00004F6A                                    7791 @@gen_label443 DS    0H
00004F6A 05EF                               7792          BALR  14,15
00004F6C                                    7793 @@gen_label444 DS    0H
                                            7794 * ***   }
                                            7795 * * **** Start of Epilogue
                                            7796          DCCEPIL
00004F6C                                    7797+         ds 0h                                                          01-DCCEP
                                            7798+* Epilog
00004F6C D707 D088 D088 00000088 00000088   7799+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004F72 E3D0 D080 0004          00000080   7800+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page  158 
  Active Usings: @REGION_1414_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004F78 E3C0 D090 0004          00000090   7801+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004F7E E3B0 C018 0004          00000018   7802+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004F84 E3C0 B010 0021          00000010   7803+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004F8A E3E0 D008 0004          00000008   7804+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004F90 EB1C D020 0004          00000020   7805+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004F96 078E                               7806+         bcr 8,14                if same dsab, just return              01-DCCEP
00004F98 E3F0 D010 0024          00000010   7807+         stg 15,16(0,13)         save return code                       01-DCCEP
00004F9E E300 D018 0024          00000018   7808+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004FA4 E3F0 D090 0004          00000090   7809+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004FAA E3F0 F018 0004          00000018   7810+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004FB0 47F0 F040               00000040   7811+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7812+* End of Epilog
                                            7813 * * **** End of Epilogue
00004FB8                                    7814          DS    0D
00004FB8 000000C8                           7815 @FRAMESIZE_1414 DC F'200'
00004FBC 00000000
00004FC0 0000000000003180                   7816 @lit_1414_310 DC AD(rd_kafka_op_new0)
00004FC8 0000000000004D50                   7817 @lit_1414_311 DC AD(rd_kafka_op_req)
                                            7818          DROP  12
                                            7819 *
                                            7820 *   DSECT for automatic variables in "rd_kafka_op_req2"
                                            7821 *      (FUNCTION #1414)
                                            7822 *
00000000                00000000 000000A8   7823 @AUTO#rd_kafka_op_req2 DSECT
00000000                                    7824          DS    XL168
                                            7825 *
00004FD0                00000000 00005F80   7826 @CODE    CSECT
                                            7827 *
                                            7828 *
                                            7829 *
                                            7830 * ....... start of rd_kafka_op_err_destroy
                                            7831 rd_kafka_op_err_destroy ALIAS X'99846D92818692816D96976D8599996D8485A2A*
                                                                39996A8'
00004FD0                                    7832 @LNAME1415 DS  0H
00004FD0 00000017                           7833          DC    X'00000017'
00004FD4 99846D9281869281                   7834          DC    C'rd_kafka_op_err_destroy'
00004FEB 00                                 7835          DC    X'00'
                                            7836 rd_kafka_op_err_destroy DCCPRLG CINDEX=1415,BASER=12,FRAME=184,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME1415
                                            7837          macro
                                            7838          dccextrn &m
                                            7839          gblc    &$dccext(1000)
                                            7840          gbla    &$dccexti
                                            7841          lcla    &i
                                            7842 &$dccext(&$dccexti+1) setc    '&m'
                                            7843 &i       seta    1
                                            7844 .loop    aif    (&i gt &$dccexti).around
                                            7845          aif    ('&$dccext(&i)' eq '&m').getout
                                            7846 &i       seta    &i+1
                                            7847          ago     .loop
                                            7848 .around  anop
                                            7849 &$dccexti seta &$dccexti+1
                                                                                                                           Page  159 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7850          extrn  &m
                                            7851 .getout  anop
                                            7852          mend
00004FF0                                    7853+$eye0138    ds    0d                                                    02-DCCCA
00004FF0 C4C3C3                             7854+         dc cl3'DCC'                                                    02-DCCCA
00004FF3 01                                 7855+         dc xl1'01' format one                                          02-DCCCA
00004FF4 00000000                           7856+         dc a(0)                                                        02-DCCCA
00004FF8 0000000000005062                   7857+         dc ad(@PER_1415)                                               02-DCCCA
00005000 00000000000000B8                   7858+         dc ad(184)                                                     02-DCCCA
00005008 0000000000000000                   7859+         dc ad(0)                                                       02-DCCCA
00005010 0000000000001000                   7860+         dc ad(4096)                                                    02-DCCCA
00005018 20                                 7861+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005019 03                                 7862+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000501A 03                                 7863+         dc al1(3)                                                      02-DCCCA
0000501B 08                                 7864+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000501C 00                                 7865+         dc bl.8'00000000'                                              02-DCCCA
0000501D 000000                             7866+         dc al3(0)                                                      02-DCCCA
00005020 0000000000004FD0                   7867+         dc ad(@LNAME1415)                                              02-DCCCA
00005028                                    7868+         ds 0d                                                          02-DCCCA
00005028 0000000000004FF0                   7869+         dc ad($eye0138)                                                02-DCCCA
00005030 0000000000000000                   7870+         dc ad(0)                                                       02-DCCCA
00005038                                    7871+         ds    0d                                                       01-DCCPR
                                            7872+         entry rd_kafka_op_err_destroy                                  01-DCCPR
00005038                                    7873+rd_kafka_op_err_destroy ds 0d                                           01-DCCPR
00005038                                    7874+@REGION_1415_1 ds 0h                                                    01-DCCPR
00005038 EBEC D008 0024          00000008   7875+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000503E E3E0 D088 0004          00000088   7876+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005044 E3C0 D090 0004          00000090   7877+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000504A B904 002E                          7878+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000504E E3B0 C018 0004          00000018   7879+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005054 A7EB 00B8               000000B8   7880+         aghi  14,184              increase by frame size               01-DCCPR
00005058 E3E0 C020 0021          00000020   7881+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000505E 4720 B020               00000020   7882+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005062                                    7883+@PER_1415 ds   0h                                                       01-DCCPR
00005062 EBDE 2080 0024          00000080   7884+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005068 E3C0 2090 0024          00000090   7885+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000506E B904 00D2                          7886+         lgr   13,2                set real frame pointer               01-DCCPR
00005072 B904 00CF                          7887+         lgr   12,15               set base reg                         01-DCCPR
                        00005038            7888+         using @REGION_1415_1,12                                        01-DCCPR
                                            7889 * ******* End of Prologue
                                            7890 * *
                                            7891 * ***           rd_kafka_resp_err_t err = RD_KAFKA_RESP_ERR__TIMED_OUT\
                                            7892 * ;
00005076 E3F0 1000 0004          00000000   7893          LG    15,0(0,1)   ; rko
0000507C A728 FF47               0000FF47   7894          LHI   2,-185      ; -185
                                            7895 * ***
                                            7896 * ***      if (rko) {
00005080 B902 001F                          7897          LTGR  1,15
00005084 4780 C066               0000509E   7898          BZ    @L842
                                            7899 * ***         err = rko->rko_err;
00005088 5820 F020               00000020   7900          L     2,32(0,15)  ; offset of rko_err in rd_kafka_op_s
                                            7901 * ***         rd_kafka_op_destroy(rko);
                                                                                                                           Page  160 
  Active Usings: @REGION_1415_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000508C E3F0 D0B0 0024          000000B0   7902          STG   15,176(0,13)
00005092 4110 D0B0               000000B0   7903          LA    1,176(0,13)
00005096 E3F0 C0C0 0004          000050F8   7904          LG    15,@lit_1415_314 ; rd_kafka_op_destroy
0000509C                                    7905 @@gen_label446 DS    0H
0000509C 05EF                               7906          BALR  14,15
0000509E                                    7907 @@gen_label447 DS    0H
                                            7908 * ***      }
0000509E                                    7909 @L842    DS    0H
                                            7910 * ***           return err;
0000509E B914 00F2                          7911          LGFR  15,2
                                            7912 * ***   }
                                            7913 * * **** Start of Epilogue
                                            7914          DCCEPIL
000050A2                                    7915+         ds 0h                                                          01-DCCEP
                                            7916+* Epilog
000050A2 D707 D088 D088 00000088 00000088   7917+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000050A8 E3D0 D080 0004          00000080   7918+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000050AE E3C0 D090 0004          00000090   7919+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000050B4 E3B0 C018 0004          00000018   7920+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000050BA E3C0 B010 0021          00000010   7921+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000050C0 E3E0 D008 0004          00000008   7922+         lg  14,8(0,13)          load up return address                 01-DCCEP
000050C6 EB1C D020 0004          00000020   7923+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000050CC 078E                               7924+         bcr 8,14                if same dsab, just return              01-DCCEP
000050CE E3F0 D010 0024          00000010   7925+         stg 15,16(0,13)         save return code                       01-DCCEP
000050D4 E300 D018 0024          00000018   7926+         stg 0,24(0,13)          save more return code                  01-DCCEP
000050DA E3F0 D090 0004          00000090   7927+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000050E0 E3F0 F018 0004          00000018   7928+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000050E6 47F0 F040               00000040   7929+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7930+* End of Epilog
                                            7931 * * **** End of Epilogue
000050F0                                    7932          DS    0D
000050F0 000000B8                           7933 @FRAMESIZE_1415 DC F'184'
000050F4 00000000
000050F8 0000000000003330                   7934 @lit_1415_314 DC AD(rd_kafka_op_destroy)
                                            7935          DROP  12
                                            7936 *
                                            7937 *   DSECT for automatic variables in "rd_kafka_op_err_destroy"
                                            7938 *      (FUNCTION #1415)
                                            7939 *
00000000                00000000 000000AC   7940 @AUTO#rd_kafka_op_err_destroy DSECT
00000000                                    7941          DS    XL168
000000A8                                    7942 rd_kafka_op_err_destroy#err#0 DS 1F ; err
                                            7943 *
00005100                00000000 00005F80   7944 @CODE    CSECT
                                            7945 *
                                            7946 *
                                            7947 *
                                            7948 * ....... start of rd_kafka_op_error_destroy
                                            7949 rd_kafka_op_error_destroy ALIAS X'99846D92818692816D96976D85999996996D8*
                                                                485A2A39996A8'
00005100                                    7950 @LNAME1416 DS  0H
00005100 00000019                           7951          DC    X'00000019'
                                                                                                                           Page  161 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005104 99846D9281869281                   7952          DC    C'rd_kafka_op_error_destroy'
0000511D 00                                 7953          DC    X'00'
                                            7954 rd_kafka_op_error_destroy DCCPRLG CINDEX=1416,BASER=12,FRAME=192,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1416
                                            7955          macro
                                            7956          dccextrn &m
                                            7957          gblc    &$dccext(1000)
                                            7958          gbla    &$dccexti
                                            7959          lcla    &i
                                            7960 &$dccext(&$dccexti+1) setc    '&m'
                                            7961 &i       seta    1
                                            7962 .loop    aif    (&i gt &$dccexti).around
                                            7963          aif    ('&$dccext(&i)' eq '&m').getout
                                            7964 &i       seta    &i+1
                                            7965          ago     .loop
                                            7966 .around  anop
                                            7967 &$dccexti seta &$dccexti+1
                                            7968          extrn  &m
                                            7969 .getout  anop
                                            7970          mend
00005120                                    7971+$eye0141    ds    0d                                                    02-DCCCA
00005120 C4C3C3                             7972+         dc cl3'DCC'                                                    02-DCCCA
00005123 01                                 7973+         dc xl1'01' format one                                          02-DCCCA
00005124 00000000                           7974+         dc a(0)                                                        02-DCCCA
00005128 0000000000005192                   7975+         dc ad(@PER_1416)                                               02-DCCCA
00005130 00000000000000C0                   7976+         dc ad(192)                                                     02-DCCCA
00005138 0000000000000000                   7977+         dc ad(0)                                                       02-DCCCA
00005140 0000000000001000                   7978+         dc ad(4096)                                                    02-DCCCA
00005148 20                                 7979+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005149 03                                 7980+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000514A 03                                 7981+         dc al1(3)                                                      02-DCCCA
0000514B 08                                 7982+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000514C 00                                 7983+         dc bl.8'00000000'                                              02-DCCCA
0000514D 000000                             7984+         dc al3(0)                                                      02-DCCCA
00005150 0000000000005100                   7985+         dc ad(@LNAME1416)                                              02-DCCCA
00005158                                    7986+         ds 0d                                                          02-DCCCA
00005158 0000000000005120                   7987+         dc ad($eye0141)                                                02-DCCCA
00005160 0000000000000000                   7988+         dc ad(0)                                                       02-DCCCA
00005168                                    7989+         ds    0d                                                       01-DCCPR
                                            7990+         entry rd_kafka_op_error_destroy                                01-DCCPR
00005168                                    7991+rd_kafka_op_error_destroy ds 0d                                         01-DCCPR
00005168                                    7992+@REGION_1416_1 ds 0h                                                    01-DCCPR
00005168 EBEC D008 0024          00000008   7993+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000516E E3E0 D088 0004          00000088   7994+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005174 E3C0 D090 0004          00000090   7995+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000517A B904 002E                          7996+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000517E E3B0 C018 0004          00000018   7997+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005184 A7EB 00C0               000000C0   7998+         aghi  14,192              increase by frame size               01-DCCPR
00005188 E3E0 C020 0021          00000020   7999+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000518E 4720 B020               00000020   8000+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005192                                    8001+@PER_1416 ds   0h                                                       01-DCCPR
00005192 EBDE 2080 0024          00000080   8002+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  162 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005198 E3C0 2090 0024          00000090   8003+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000519E B904 00D2                          8004+         lgr   13,2                set real frame pointer               01-DCCPR
000051A2 B904 00CF                          8005+         lgr   12,15               set base reg                         01-DCCPR
                        00005168            8006+         using @REGION_1416_1,12                                        01-DCCPR
                                            8007 * ******* End of Prologue
                                            8008 * *
                                            8009 * ***           if (rko) {
000051A6 E3F0 1000 0004          00000000   8010          LG    15,0(0,1)   ; rko
000051AC B902 001F                          8011          LTGR  1,15
000051B0 4780 C098               00005200   8012          BZ    @L843
                                            8013 * ***                   rd_kafka_error_t *error = rko->rko_error;
000051B4 E320 F028 0004          00000028   8014          LG    2,40(0,15)  ; offset of rko_error in rd_kafka_op_s
                                            8015 * ***                   rko->rko_error = ((void *)0);
000051BA A719 0000               00000000   8016          LGHI  1,0         ; 0
000051BE E310 F028 0024          00000028   8017          STG   1,40(0,15)  ; offset of rko_error in rd_kafka_op_s
                                            8018 * ***                   rd_kafka_op_destroy(rko);
000051C4 E3F0 D0B0 0024          000000B0   8019          STG   15,176(0,13)
000051CA 4110 D0B0               000000B0   8020          LA    1,176(0,13)
000051CE E3F0 C080 0004          000051E8   8021          LG    15,@lit_1416_317 ; rd_kafka_op_destroy
000051D4                                    8022 @@gen_label449 DS    0H
000051D4 05EF                               8023          BALR  14,15
000051D6                                    8024 @@gen_label450 DS    0H
                                            8025 * ***                   return error;
000051D6 B904 00F2                          8026          LGR   15,2
000051DA 47F0 C0BA               00005222   8027          B     @ret_lab_1416
000051E0                                    8028          DS    0D
000051E0 000000C0                           8029 @FRAMESIZE_1416 DC F'192'
000051E4 00000000
000051E8 0000000000003330                   8030 @lit_1416_317 DC AD(rd_kafka_op_destroy)
000051F0 0000000000000000                   8031 @lit_1416_319 DC AD(rd_kafka_error_new)
000051F8 000000000000635E                   8032 @lit_1416_318 DC AD(@strings@)
                                            8033 * ***           }
00005200                                    8034 @L843    DS    0H
                                            8035 * ***
                                            8036 * ***           return rd_kafka_error_new(
                                            8037 * ***                   RD_KAFKA_RESP_ERR__TIMED_OUT,
                                            8038 * ***                   "Operation timed out");
00005200 E548 D0B0 FF47          000000B0   8039          MVGHI 176(13),-185
00005206 E3F0 C090 0004          000051F8   8040          LG    15,@lit_1416_318
0000520C 41F0 F3A2               000003A2   8041          LA    15,930(0,15)
00005210 E3F0 D0B8 0024          000000B8   8042          STG   15,184(0,13)
00005216 4110 D0B0               000000B0   8043          LA    1,176(0,13)
0000521A E3F0 C088 0004          000051F0   8044          LG    15,@lit_1416_319 ; rd_kafka_error_new
00005220                                    8045 @@gen_label451 DS    0H
00005220 05EF                               8046          BALR  14,15
00005222                                    8047 @@gen_label452 DS    0H
                                            8048 * ***   }
00005222                                    8049 @ret_lab_1416 DS 0H
                                            8050 * * **** Start of Epilogue
                                            8051          DCCEPIL
00005222                                    8052+         ds 0h                                                          01-DCCEP
                                            8053+* Epilog
                                                                                                                           Page  163 
  Active Usings: @REGION_1416_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005222 D707 D088 D088 00000088 00000088   8054+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005228 E3D0 D080 0004          00000080   8055+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000522E E3C0 D090 0004          00000090   8056+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005234 E3B0 C018 0004          00000018   8057+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000523A E3C0 B010 0021          00000010   8058+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005240 E3E0 D008 0004          00000008   8059+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005246 EB1C D020 0004          00000020   8060+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000524C 078E                               8061+         bcr 8,14                if same dsab, just return              01-DCCEP
0000524E E3F0 D010 0024          00000010   8062+         stg 15,16(0,13)         save return code                       01-DCCEP
00005254 E300 D018 0024          00000018   8063+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000525A E3F0 D090 0004          00000090   8064+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005260 E3F0 F018 0004          00000018   8065+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005266 47F0 F040               00000040   8066+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8067+* End of Epilog
                                            8068 * * **** End of Epilogue
                                            8069          DROP  12
                                            8070 *
                                            8071 *   DSECT for automatic variables in "rd_kafka_op_error_destroy"
                                            8072 *      (FUNCTION #1416)
                                            8073 *
00000000                00000000 000000A8   8074 @AUTO#rd_kafka_op_error_destroy DSECT
00000000                                    8075          DS    XL168
                                            8076 *
0000526A                00000000 00005F80   8077 @CODE    CSECT
                                            8078 *
                                            8079 *
                                            8080 *
                                            8081 * ....... start of rd_kafka_op_call
                                            8082 rd_kafka_op_call ALIAS X'99846D92818692816D96976D83819393'
0000526A                                    8083 @LNAME1417 DS  0H
0000526A 00000010                           8084          DC    X'00000010'
0000526E 99846D9281869281                   8085          DC    C'rd_kafka_op_call'
0000527E 00                                 8086          DC    X'00'
                                            8087 rd_kafka_op_call DCCPRLG CINDEX=1417,BASER=12,FRAME=208,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1417
                                            8088          macro
                                            8089          dccextrn &m
                                            8090          gblc    &$dccext(1000)
                                            8091          gbla    &$dccexti
                                            8092          lcla    &i
                                            8093 &$dccext(&$dccexti+1) setc    '&m'
                                            8094 &i       seta    1
                                            8095 .loop    aif    (&i gt &$dccexti).around
                                            8096          aif    ('&$dccext(&i)' eq '&m').getout
                                            8097 &i       seta    &i+1
                                            8098          ago     .loop
                                            8099 .around  anop
                                            8100 &$dccexti seta &$dccexti+1
                                            8101          extrn  &m
                                            8102 .getout  anop
                                            8103          mend
00005280                                    8104+$eye0144    ds    0d                                                    02-DCCCA
                                                                                                                           Page  164 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005280 C4C3C3                             8105+         dc cl3'DCC'                                                    02-DCCCA
00005283 01                                 8106+         dc xl1'01' format one                                          02-DCCCA
00005284 00000000                           8107+         dc a(0)                                                        02-DCCCA
00005288 00000000000052F2                   8108+         dc ad(@PER_1417)                                               02-DCCCA
00005290 00000000000000D0                   8109+         dc ad(208)                                                     02-DCCCA
00005298 0000000000000000                   8110+         dc ad(0)                                                       02-DCCCA
000052A0 0000000000001000                   8111+         dc ad(4096)                                                    02-DCCCA
000052A8 20                                 8112+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000052A9 03                                 8113+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000052AA 03                                 8114+         dc al1(3)                                                      02-DCCCA
000052AB 08                                 8115+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000052AC 00                                 8116+         dc bl.8'00000000'                                              02-DCCCA
000052AD 000000                             8117+         dc al3(0)                                                      02-DCCCA
000052B0 000000000000526A                   8118+         dc ad(@LNAME1417)                                              02-DCCCA
000052B8                                    8119+         ds 0d                                                          02-DCCCA
000052B8 0000000000005280                   8120+         dc ad($eye0144)                                                02-DCCCA
000052C0 0000000000000000                   8121+         dc ad(0)                                                       02-DCCCA
000052C8                                    8122+         ds    0d                                                       01-DCCPR
                                            8123+         entry rd_kafka_op_call                                         01-DCCPR
000052C8                                    8124+rd_kafka_op_call ds 0d                                                  01-DCCPR
000052C8                                    8125+@REGION_1417_1 ds 0h                                                    01-DCCPR
000052C8 EBEC D008 0024          00000008   8126+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000052CE E3E0 D088 0004          00000088   8127+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000052D4 E3C0 D090 0004          00000090   8128+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000052DA B904 002E                          8129+         lgr   2,14                copy addr of our savearea            01-DCCPR
000052DE E3B0 C018 0004          00000018   8130+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000052E4 A7EB 00D0               000000D0   8131+         aghi  14,208              increase by frame size               01-DCCPR
000052E8 E3E0 C020 0021          00000020   8132+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000052EE 4720 B020               00000020   8133+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000052F2                                    8134+@PER_1417 ds   0h                                                       01-DCCPR
000052F2 EBDE 2080 0024          00000080   8135+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000052F8 E3C0 2090 0024          00000090   8136+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000052FE B904 00D2                          8137+         lgr   13,2                set real frame pointer               01-DCCPR
00005302 B904 00CF                          8138+         lgr   12,15               set base reg                         01-DCCPR
                        000052C8            8139+         using @REGION_1417_1,12                                        01-DCCPR
                                            8140          DCCPRV REG=3      ; Get PRV from DVT
00005306 E330 B008 0004          00000008   8141+         LG 3,8(0,11)                                                   01-DCCPR
0000530C B904 0041                          8142          LGR   4,1         ; ptr to parm area
                                            8143 * ******* End of Prologue
                                            8144 * *
00005310 E320 4010 0004          00000010   8145          LG    2,16(0,4)   ; rko
                                            8146 * ***           rd_kafka_op_res_t res;
                                            8147 * ***           ((rko->rko_op_cb) ? (void)0 : __assert(__func__, "C:\\\
                                            8148 * asgkafka\\librdkafka\\src\\rdkafka_op.c", 688, "rko->rko_op_cb"));
00005316 E3F0 2068 0002          00000068   8149          LTG   15,104(0,2) ; offset of rko_op_cb in rd_kafka_op_s
0000531C 4770 C094               0000535C   8150          BNZ   @L845
00005320                                    8151 @L844    DS    0H
00005320 E3F0 C0F8 0004          000053C0   8152          LG    15,@lit_1417_321
00005326 41F0 F3B2               000003B2   8153          LA    15,946(0,15)
0000532A E3F0 D0B0 0024          000000B0   8154          STG   15,176(0,13)
00005330 E3F0 C0F0 0004          000053B8   8155          LG    15,@lit_1417_322
00005336 4110 F0B8               000000B8   8156          LA    1,184(0,15)
                                                                                                                           Page  165 
  Active Usings: @REGION_1417_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000533A E310 D0B8 0024          000000B8   8157          STG   1,184(0,13)
00005340 E548 D0C0 02B0          000000C0   8158          MVGHI 192(13),688
00005346 41F0 F3B6               000003B6   8159          LA    15,950(0,15)
0000534A E3F0 D0C8 0024          000000C8   8160          STG   15,200(0,13)
00005350 4110 D0B0               000000B0   8161          LA    1,176(0,13)
00005354 E3F0 C0E8 0004          000053B0   8162          LG    15,@lit_1417_323 ; __assert
0000535A                                    8163 @@gen_label454 DS    0H
0000535A 05EF                               8164          BALR  14,15
0000535C                                    8165 @@gen_label455 DS    0H
0000535C                                    8166 @L845    DS    0H
                                            8167 * ***           res = rko->rko_op_cb(rk, rkq, rko);
0000535C E3F0 4000 0004          00000000   8168          LG    15,0(0,4)   ; rk
00005362 E3F0 D0B0 0024          000000B0   8169          STG   15,176(0,13)
00005368 E3F0 4008 0004          00000008   8170          LG    15,8(0,4)   ; rkq
0000536E E3F0 D0B8 0024          000000B8   8171          STG   15,184(0,13)
00005374 E320 D0C0 0024          000000C0   8172          STG   2,192(0,13)
0000537A E3F0 2068 0004          00000068   8173          LG    15,104(0,2) ; offset of rko_op_cb in rd_kafka_op_s
00005380 4110 D0B0               000000B0   8174          LA    1,176(0,13)
00005384                                    8175 @@gen_label456 DS    0H
00005384 05EF                               8176          BALR  14,15
00005386                                    8177 @@gen_label457 DS    0H
                                            8178 * ***           if (((res == RD_KAFKA_OP_RES_YIELD || rd_kafka_yield_t\
                                            8179 * hread)))
00005386 A7FE 0003               00000003   8180          CHI   15,3
0000538A 4780 C0D6               0000539E   8181          BE    @L847
0000538E E310 C100 0016          000053C8   8182          LLGF  1,@lit_1417_324 ; rd_kafka_yield_thread
00005394 E311 3000 0012          00000000   8183          LT    1,0(1,3)    ; rd_kafka_yield_thread
0000539A 4780 C104               000053CC   8184          BZ    @L846
0000539E                                    8185 @L847    DS    0H
                                            8186 * ***                   return RD_KAFKA_OP_RES_YIELD;
0000539E A7F9 0003               00000003   8187          LGHI  15,3        ; 3
000053A2 47F0 C11A               000053E2   8188          B     @ret_lab_1417
000053A8                                    8189          DS    0D
000053A8 000000D0                           8190 @FRAMESIZE_1417 DC F'208'
000053AC 00000000
000053B0 0000000000000000                   8191 @lit_1417_323 DC AD(__assert)
000053B8 000000000000635E                   8192 @lit_1417_322 DC AD(@strings@)
000053C0 0000000000005F80                   8193 @lit_1417_321 DC AD(@DATA)
000053C8 00000000                           8194 @lit_1417_324 DC Q(rd_kafka_yield_thread)
000053CC                                    8195 @L846    DS    0H
                                            8196 * ***           if (res != RD_KAFKA_OP_RES_KEEP)
000053CC A7FE 0002               00000002   8197          CHI   15,2
000053D0 4780 C116               000053DE   8198          BE    @L848
                                            8199 * ***                   rko->rko_op_cb = ((void *)0);
000053D4 A719 0000               00000000   8200          LGHI  1,0         ; 0
000053D8 E310 2068 0024          00000068   8201          STG   1,104(0,2)  ; offset of rko_op_cb in rd_kafka_op_s
000053DE                                    8202 @L848    DS    0H
                                            8203 * ***           return res;
000053DE B914 00FF                          8204          LGFR  15,15
                                            8205 * ***   }
000053E2                                    8206 @ret_lab_1417 DS 0H
                                            8207 * * **** Start of Epilogue
                                                                                                                           Page  166 
  Active Usings: @REGION_1417_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8208          DCCEPIL
000053E2                                    8209+         ds 0h                                                          01-DCCEP
                                            8210+* Epilog
000053E2 D707 D088 D088 00000088 00000088   8211+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000053E8 E3D0 D080 0004          00000080   8212+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000053EE E3C0 D090 0004          00000090   8213+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000053F4 E3B0 C018 0004          00000018   8214+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000053FA E3C0 B010 0021          00000010   8215+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005400 E3E0 D008 0004          00000008   8216+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005406 EB1C D020 0004          00000020   8217+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000540C 078E                               8218+         bcr 8,14                if same dsab, just return              01-DCCEP
0000540E E3F0 D010 0024          00000010   8219+         stg 15,16(0,13)         save return code                       01-DCCEP
00005414 E300 D018 0024          00000018   8220+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000541A E3F0 D090 0004          00000090   8221+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005420 E3F0 F018 0004          00000018   8222+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005426 47F0 F040               00000040   8223+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8224+* End of Epilog
                                            8225 * * **** End of Epilogue
                                            8226          DROP  12
                                            8227 *
                                            8228 *   DSECT for automatic variables in "rd_kafka_op_call"
                                            8229 *      (FUNCTION #1417)
                                            8230 *
00000000                00000000 000000AC   8231 @AUTO#rd_kafka_op_call DSECT
00000000                                    8232          DS    XL168
000000A8                                    8233 rd_kafka_op_call#res#0 DS 1F ; res
                                            8234 *
0000542A                00000000 00005F80   8235 @CODE    CSECT
                                            8236 *
                                            8237 *
                                            8238 *
                                            8239 * ....... start of rd_kafka_op_new_ctrl_msg
                                            8240 rd_kafka_op_new_ctrl_msg ALIAS X'99846D92818692816D96976D9585A66D83A399*
                                                                936D94A287'
0000542A                                    8241 @LNAME1419 DS  0H
0000542A 00000018                           8242          DC    X'00000018'
0000542E 99846D9281869281                   8243          DC    C'rd_kafka_op_new_ctrl_msg'
00005446 00                                 8244          DC    X'00'
                                            8245 rd_kafka_op_new_ctrl_msg DCCPRLG CINDEX=1419,BASER=12,FRAME=248,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1419
                                            8246          macro
                                            8247          dccextrn &m
                                            8248          gblc    &$dccext(1000)
                                            8249          gbla    &$dccexti
                                            8250          lcla    &i
                                            8251 &$dccext(&$dccexti+1) setc    '&m'
                                            8252 &i       seta    1
                                            8253 .loop    aif    (&i gt &$dccexti).around
                                            8254          aif    ('&$dccext(&i)' eq '&m').getout
                                            8255 &i       seta    &i+1
                                            8256          ago     .loop
                                            8257 .around  anop
                                                                                                                           Page  167 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8258 &$dccexti seta &$dccexti+1
                                            8259          extrn  &m
                                            8260 .getout  anop
                                            8261          mend
00005448                                    8262+$eye0148    ds    0d                                                    02-DCCCA
00005448 C4C3C3                             8263+         dc cl3'DCC'                                                    02-DCCCA
0000544B 01                                 8264+         dc xl1'01' format one                                          02-DCCCA
0000544C 00000000                           8265+         dc a(0)                                                        02-DCCCA
00005450 00000000000054BA                   8266+         dc ad(@PER_1419)                                               02-DCCCA
00005458 00000000000000F8                   8267+         dc ad(248)                                                     02-DCCCA
00005460 0000000000000000                   8268+         dc ad(0)                                                       02-DCCCA
00005468 0000000000001000                   8269+         dc ad(4096)                                                    02-DCCCA
00005470 20                                 8270+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005471 03                                 8271+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005472 03                                 8272+         dc al1(3)                                                      02-DCCCA
00005473 08                                 8273+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005474 00                                 8274+         dc bl.8'00000000'                                              02-DCCCA
00005475 000000                             8275+         dc al3(0)                                                      02-DCCCA
00005478 000000000000542A                   8276+         dc ad(@LNAME1419)                                              02-DCCCA
00005480                                    8277+         ds 0d                                                          02-DCCCA
00005480 0000000000005448                   8278+         dc ad($eye0148)                                                02-DCCCA
00005488 0000000000000000                   8279+         dc ad(0)                                                       02-DCCCA
00005490                                    8280+         ds    0d                                                       01-DCCPR
                                            8281+         entry rd_kafka_op_new_ctrl_msg                                 01-DCCPR
00005490                                    8282+rd_kafka_op_new_ctrl_msg ds 0d                                          01-DCCPR
00005490                                    8283+@REGION_1419_1 ds 0h                                                    01-DCCPR
00005490 EBEC D008 0024          00000008   8284+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005496 E3E0 D088 0004          00000088   8285+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000549C E3C0 D090 0004          00000090   8286+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000054A2 B904 002E                          8287+         lgr   2,14                copy addr of our savearea            01-DCCPR
000054A6 E3B0 C018 0004          00000018   8288+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000054AC A7EB 00F8               000000F8   8289+         aghi  14,248              increase by frame size               01-DCCPR
000054B0 E3E0 C020 0021          00000020   8290+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000054B6 4720 B020               00000020   8291+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000054BA                                    8292+@PER_1419 ds   0h                                                       01-DCCPR
000054BA EBDE 2080 0024          00000080   8293+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000054C0 E3C0 2090 0024          00000090   8294+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000054C6 B904 00D2                          8295+         lgr   13,2                set real frame pointer               01-DCCPR
000054CA B904 00CF                          8296+         lgr   12,15               set base reg                         01-DCCPR
                        00005490            8297+         using @REGION_1419_1,12                                        01-DCCPR
                                            8298 * ******* End of Prologue
                                            8299 * *
                                            8300 * ***           rd_kafka_msg_t *rkm;
                                            8301 * ***           rd_kafka_op_t *rko;
                                            8302 * ***
                                            8303 * ***           rko = rd_kafka_op_new_fetch_msg(
                                            8304 * ***                   &rkm,
                                            8305 * ***                   rktp, version, rkbuf,
                                            8306 * ***                   offset,
                                            8307 * ***                   0, ((void *)0),
                                            8308 * ***                   0, ((void *)0));
000054CE 41F0 D0A8               000000A8   8309          LA    15,168(0,13)
                                                                                                                           Page  168 
  Active Usings: @REGION_1419_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000054D2 E3F0 D0B0 0024          000000B0   8310          STG   15,176(0,13)
000054D8 E3F0 1000 0004          00000000   8311          LG    15,0(0,1)   ; rktp
000054DE E3F0 D0B8 0024          000000B8   8312          STG   15,184(0,13)
000054E4 E3F0 100C 0014          0000000C   8313          LGF   15,12(0,1)  ; version
000054EA E3F0 D0C0 0024          000000C0   8314          STG   15,192(0,13)
000054F0 E3F0 1010 0004          00000010   8315          LG    15,16(0,1)  ; rkbuf
000054F6 E3F0 D0C8 0024          000000C8   8316          STG   15,200(0,13)
000054FC E3F0 1018 0004          00000018   8317          LG    15,24(0,1)  ; offset
00005502 E3F0 D0D0 0024          000000D0   8318          STG   15,208(0,13)
00005508 D71F D0D8 D0D8 000000D8 000000D8   8319          XC    216(32,13),216(13)
0000550E 4110 D0B0               000000B0   8320          LA    1,176(0,13)
00005512 E3F0 C0F0 0004          00005580   8321          LG    15,@lit_1419_328 ; rd_kafka_op_new_fetch_msg
00005518                                    8322 @@gen_label461 DS    0H
00005518 05EF                               8323          BALR  14,15
0000551A                                    8324 @@gen_label462 DS    0H
                                            8325 * ***
                                            8326 * ***           rkm->rkm_flags |= 0x80000;
0000551A E310 D0A8 0004          000000A8   8327          LG    1,168(0,13) ; rkm
00005520 5820 1058               00000058   8328          L     2,88(0,1)
00005524 A52A 0008               00000008   8329          OILH  2,8
00005528 5020 1058               00000058   8330          ST    2,88(0,1)
                                            8331 * ***
                                            8332 * ***           return rko;
                                            8333 * ***   }
                                            8334 * * **** Start of Epilogue
                                            8335          DCCEPIL
0000552C                                    8336+         ds 0h                                                          01-DCCEP
                                            8337+* Epilog
0000552C D707 D088 D088 00000088 00000088   8338+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005532 E3D0 D080 0004          00000080   8339+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005538 E3C0 D090 0004          00000090   8340+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000553E E3B0 C018 0004          00000018   8341+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005544 E3C0 B010 0021          00000010   8342+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000554A E3E0 D008 0004          00000008   8343+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005550 EB1C D020 0004          00000020   8344+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005556 078E                               8345+         bcr 8,14                if same dsab, just return              01-DCCEP
00005558 E3F0 D010 0024          00000010   8346+         stg 15,16(0,13)         save return code                       01-DCCEP
0000555E E300 D018 0024          00000018   8347+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005564 E3F0 D090 0004          00000090   8348+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000556A E3F0 F018 0004          00000018   8349+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005570 47F0 F040               00000040   8350+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8351+* End of Epilog
                                            8352 * * **** End of Epilogue
00005578                                    8353          DS    0D
00005578 000000F8                           8354 @FRAMESIZE_1419 DC F'248'
0000557C 00000000
00005580 00000000000055F0                   8355 @lit_1419_328 DC AD(rd_kafka_op_new_fetch_msg)
                                            8356          DROP  12
                                            8357 *
                                            8358 *   DSECT for automatic variables in "rd_kafka_op_new_ctrl_msg"
                                            8359 *      (FUNCTION #1419)
                                            8360 *
                                                                                                                           Page  169 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                00000000 000000A8   8361 @AUTO#rd_kafka_op_new_ctrl_msg DSECT
00000000                                    8362          DS    XL168
                                            8363 *
00005588                00000000 00005F80   8364 @CODE    CSECT
                                            8365 *
                                            8366 *
                                            8367 *
                                            8368 * ....... start of rd_kafka_op_new_fetch_msg
                                            8369 rd_kafka_op_new_fetch_msg ALIAS X'99846D92818692816D96976D9585A66D8685A*
                                                                383886D94A287'
00005588                                    8370 @LNAME1418 DS  0H
00005588 00000019                           8371          DC    X'00000019'
0000558C 99846D9281869281                   8372          DC    C'rd_kafka_op_new_fetch_msg'
000055A5 00                                 8373          DC    X'00'
                                            8374 rd_kafka_op_new_fetch_msg DCCPRLG CINDEX=1418,BASER=12,FRAME=200,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1418
                                            8375          macro
                                            8376          dccextrn &m
                                            8377          gblc    &$dccext(1000)
                                            8378          gbla    &$dccexti
                                            8379          lcla    &i
                                            8380 &$dccext(&$dccexti+1) setc    '&m'
                                            8381 &i       seta    1
                                            8382 .loop    aif    (&i gt &$dccexti).around
                                            8383          aif    ('&$dccext(&i)' eq '&m').getout
                                            8384 &i       seta    &i+1
                                            8385          ago     .loop
                                            8386 .around  anop
                                            8387 &$dccexti seta &$dccexti+1
                                            8388          extrn  &m
                                            8389 .getout  anop
                                            8390          mend
000055A8                                    8391+$eye0151    ds    0d                                                    02-DCCCA
000055A8 C4C3C3                             8392+         dc cl3'DCC'                                                    02-DCCCA
000055AB 01                                 8393+         dc xl1'01' format one                                          02-DCCCA
000055AC 00000000                           8394+         dc a(0)                                                        02-DCCCA
000055B0 000000000000561A                   8395+         dc ad(@PER_1418)                                               02-DCCCA
000055B8 00000000000000C8                   8396+         dc ad(200)                                                     02-DCCCA
000055C0 0000000000000000                   8397+         dc ad(0)                                                       02-DCCCA
000055C8 0000000000001000                   8398+         dc ad(4096)                                                    02-DCCCA
000055D0 20                                 8399+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000055D1 03                                 8400+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000055D2 03                                 8401+         dc al1(3)                                                      02-DCCCA
000055D3 08                                 8402+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000055D4 00                                 8403+         dc bl.8'00000000'                                              02-DCCCA
000055D5 000000                             8404+         dc al3(0)                                                      02-DCCCA
000055D8 0000000000005588                   8405+         dc ad(@LNAME1418)                                              02-DCCCA
000055E0                                    8406+         ds 0d                                                          02-DCCCA
000055E0 00000000000055A8                   8407+         dc ad($eye0151)                                                02-DCCCA
000055E8 0000000000000000                   8408+         dc ad(0)                                                       02-DCCCA
000055F0                                    8409+         ds    0d                                                       01-DCCPR
                                            8410+         entry rd_kafka_op_new_fetch_msg                                01-DCCPR
                                                                                                                           Page  170 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000055F0                                    8411+rd_kafka_op_new_fetch_msg ds 0d                                         01-DCCPR
000055F0                                    8412+@REGION_1418_1 ds 0h                                                    01-DCCPR
000055F0 EBEC D008 0024          00000008   8413+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000055F6 E3E0 D088 0004          00000088   8414+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000055FC E3C0 D090 0004          00000090   8415+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005602 B904 002E                          8416+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005606 E3B0 C018 0004          00000018   8417+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000560C A7EB 00C8               000000C8   8418+         aghi  14,200              increase by frame size               01-DCCPR
00005610 E3E0 C020 0021          00000020   8419+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005616 4720 B020               00000020   8420+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000561A                                    8421+@PER_1418 ds   0h                                                       01-DCCPR
0000561A EBDE 2080 0024          00000080   8422+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005620 E3C0 2090 0024          00000090   8423+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005626 B904 00D2                          8424+         lgr   13,2                set real frame pointer               01-DCCPR
0000562A B904 00CF                          8425+         lgr   12,15               set base reg                         01-DCCPR
                        000055F0            8426+         using @REGION_1418_1,12                                        01-DCCPR
0000562E B904 0041                          8427          LGR   4,1         ; ptr to parm area
                                            8428 * ******* End of Prologue
                                            8429 * *
                                            8430 * ***           rd_kafka_msg_t *rkm;
                                            8431 * ***           rd_kafka_op_t *rko;
                                            8432 * ***
                                            8433 * ***           rko = rd_kafka_op_new0(((void *)0), RD_KAFKA_OP_FETCH)\
                                            8434 * ;
00005632 D707 D0B0 D0B0 000000B0 000000B0   8435          XC    176(8,13),176(13)
00005638 E548 D0B8 0001          000000B8   8436          MVGHI 184(13),1
0000563E 4110 D0B0               000000B0   8437          LA    1,176(0,13)
00005642 E3F0 C180 0004          00005770   8438          LG    15,@lit_1418_330 ; rd_kafka_op_new0
00005648                                    8439 @@gen_label463 DS    0H
00005648 05EF                               8440          BALR  14,15
0000564A                                    8441 @@gen_label464 DS    0H
0000564A B904 003F                          8442          LGR   3,15
                                            8443 * ***           rko->rko_rktp    = rd_kafka_toppar_keep0(__FUNCTION__,\
                                            8444 * 742,rktp);
0000564E E3F0 C190 0004          00005780   8445          LG    15,@lit_1418_331
00005654 41F0 F3C4               000003C4   8446          LA    15,964(0,15)
00005658 E3F0 D0B0 0024          000000B0   8447          STG   15,176(0,13)
0000565E E548 D0B8 02E6          000000B8   8448          MVGHI 184(13),742
00005664 E3F0 4008 0004          00000008   8449          LG    15,8(0,4)   ; rktp
0000566A E3F0 D0C0 0024          000000C0   8450          STG   15,192(0,13)
00005670 4110 D0B0               000000B0   8451          LA    1,176(0,13)
00005674 E3F0 C188 0004          00005778   8452          LG    15,@lit_1418_332 ; rd_kafka_toppar_keep0
0000567A                                    8453 @@gen_label465 DS    0H
0000567A 05EF                               8454          BALR  14,15
0000567C                                    8455 @@gen_label466 DS    0H
0000567C E3F0 3038 0024          00000038   8456          STG   15,56(0,3)
                                            8457 * ***           rko->rko_version = version;
00005682 58F0 4014               00000014   8458          L     15,20(0,4)  ; version
00005686 50F0 301C               0000001C   8459          ST    15,28(0,3)  ; offset of rko_version in rd_kafka_op_s
                                            8460 * ***           rkm   = &rko->rko_u.fetch.rkm;
0000568A 4120 3078               00000078   8461          LA    2,120(0,3)
                                            8462 * ***           *rkmp = rkm;
                                                                                                                           Page  171 
  Active Usings: @REGION_1418_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000568E E3F0 4000 0004          00000000   8463          LG    15,0(0,4)   ; rkmp
00005694 E320 F000 0024          00000000   8464          STG   2,0(0,15)   ; rkmp
                                            8465 * ***
                                            8466 * ***
                                            8467 * ***
                                            8468 * ***
                                            8469 * ***
                                            8470 * ***
                                            8471 * ***           rko->rko_u.fetch.rkbuf = rkbuf;
0000569A E3F0 4018 0004          00000018   8472          LG    15,24(0,4)  ; rkbuf
000056A0 E3F0 3070 0024          00000070   8473          STG   15,112(0,3) ; offset of rko_u in rd_kafka_op_s
                                            8474 * ***           rd_atomic32_add(&(rkbuf)->rkbuf_refcnt, 1);
000056A6 41F0 F108               00000108   8475          LA    15,264(0,15)
000056AA E3F0 D0B0 0024          000000B0   8476          STG   15,176(0,13)
000056B0 E548 D0B8 0001          000000B8   8477          MVGHI 184(13),1
000056B6 4110 D0B0               000000B0   8478          LA    1,176(0,13)
000056BA E3F0 C198 0004          00005788   8479          LG    15,@lit_1418_333 ; rd_atomic32_add
000056C0                                    8480 @@gen_label467 DS    0H
000056C0 05EF                               8481          BALR  14,15
000056C2                                    8482 @@gen_label468 DS    0H
                                            8483 * ***
                                            8484 * ***           rkm->rkm_rkmessage.offset    = offset;
000056C2 E3F0 4020 0004          00000020   8485          LG    15,32(0,4)  ; offset
000056C8 E3F0 2038 0024          00000038   8486          STG   15,56(0,2)  ; offset of offset in rd_kafka_message_s
                                            8487 * ***
                                            8488 * ***           rkm->rkm_rkmessage.key       = (void *)key;
000056CE E3F0 4030 0004          00000030   8489          LG    15,48(0,4)  ; key
000056D4 E3F0 2028 0024          00000028   8490          STG   15,40(0,2)  ; offset of key in rd_kafka_message_s
                                            8491 * ***           rkm->rkm_rkmessage.key_len   = key_len;
000056DA E3F0 4028 0004          00000028   8492          LG    15,40(0,4)  ; key_len
000056E0 E3F0 2030 0024          00000030   8493          STG   15,48(0,2)  ; offset of key_len in rd_kafka_message_s
                                            8494 * ***
                                            8495 * ***           rkm->rkm_rkmessage.payload   = (void *)val;
000056E6 E3F0 4040 0004          00000040   8496          LG    15,64(0,4)  ; val
000056EC E3F0 2018 0024          00000018   8497          STG   15,24(0,2)  ; offset of payload in rd_kafka_message_s
                                            8498 * ***           rkm->rkm_rkmessage.len       = val_len;
000056F2 E3F0 4038 0004          00000038   8499          LG    15,56(0,4)  ; val_len
000056F8 E3F0 2020 0024          00000020   8500          STG   15,32(0,2)  ; offset of len in rd_kafka_message_s
                                            8501 * ***           rko->rko_len       = (int32_t)rkm->rkm_rkmessage.len;
000056FE 50F0 3030               00000030   8502          ST    15,48(0,3)  ; offset of rko_len in rd_kafka_op_s
                                            8503 * ***
                                            8504 * ***           rkm->rkm_rkmessage.partition = rktp->rktp_partition;
00005702 E3F0 4008 0004          00000008   8505          LG    15,8(0,4)   ; rktp
00005708 58F0 F068               00000068   8506          L     15,104(0,15) ; offset of rktp_partition in rd_kafka_topp*
                                                                ar_s
0000570C 50F0 2010               00000010   8507          ST    15,16(0,2)  ; offset of partition in rd_kafka_message_s
                                            8508 * ***
                                            8509 * ***
                                            8510 * ***
                                            8511 * ***           rkm->rkm_status = RD_KAFKA_MSG_STATUS_PERSISTED;
00005710 E54C 2070 0002          00000070   8512          MVHI  112(2),2    ; offset of rkm_status in rd_kafka_msg_s
                                            8513 * ***
                                                                                                                           Page  172 
  Active Usings: @REGION_1418_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8514 * ***           return rko;
00005716 B904 00F3                          8515          LGR   15,3
                                            8516 * ***   }
                                            8517 * * **** Start of Epilogue
                                            8518          DCCEPIL
0000571A                                    8519+         ds 0h                                                          01-DCCEP
                                            8520+* Epilog
0000571A D707 D088 D088 00000088 00000088   8521+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005720 E3D0 D080 0004          00000080   8522+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005726 E3C0 D090 0004          00000090   8523+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000572C E3B0 C018 0004          00000018   8524+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005732 E3C0 B010 0021          00000010   8525+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005738 E3E0 D008 0004          00000008   8526+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000573E EB1C D020 0004          00000020   8527+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005744 078E                               8528+         bcr 8,14                if same dsab, just return              01-DCCEP
00005746 E3F0 D010 0024          00000010   8529+         stg 15,16(0,13)         save return code                       01-DCCEP
0000574C E300 D018 0024          00000018   8530+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005752 E3F0 D090 0004          00000090   8531+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005758 E3F0 F018 0004          00000018   8532+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000575E 47F0 F040               00000040   8533+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8534+* End of Epilog
                                            8535 * * **** End of Epilogue
00005768                                    8536          DS    0D
00005768 000000C8                           8537 @FRAMESIZE_1418 DC F'200'
0000576C 00000000
00005770 0000000000003180                   8538 @lit_1418_330 DC AD(rd_kafka_op_new0)
00005778 0000000000002858                   8539 @lit_1418_332 DC AD(rd_kafka_toppar_keep0)
00005780 0000000000005F80                   8540 @lit_1418_331 DC AD(@DATA)
00005788 0000000000000060                   8541 @lit_1418_333 DC AD(rd_atomic32_add)
                                            8542          DROP  12
                                            8543 *
                                            8544 *   DSECT for automatic variables in "rd_kafka_op_new_fetch_msg"
                                            8545 *      (FUNCTION #1418)
                                            8546 *
00000000                00000000 000000A8   8547 @AUTO#rd_kafka_op_new_fetch_msg DSECT
00000000                                    8548          DS    XL168
                                            8549 *
00005790                00000000 00005F80   8550 @CODE    CSECT
                                            8551 *
                                            8552 *
                                            8553 *
                                            8554 * ....... start of rd_kafka_op_throttle_time
                                            8555 rd_kafka_op_throttle_time ALIAS X'99846D92818692816D96976DA3889996A3A39*
                                                                3856DA3899485'
00005790                                    8556 @LNAME1420 DS  0H
00005790 00000019                           8557          DC    X'00000019'
00005794 99846D9281869281                   8558          DC    C'rd_kafka_op_throttle_time'
000057AD 00                                 8559          DC    X'00'
                                            8560 rd_kafka_op_throttle_time DCCPRLG CINDEX=1420,BASER=12,FRAME=192,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1420
                                            8561          macro
                                            8562          dccextrn &m
                                                                                                                           Page  173 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8563          gblc    &$dccext(1000)
                                            8564          gbla    &$dccexti
                                            8565          lcla    &i
                                            8566 &$dccext(&$dccexti+1) setc    '&m'
                                            8567 &i       seta    1
                                            8568 .loop    aif    (&i gt &$dccexti).around
                                            8569          aif    ('&$dccext(&i)' eq '&m').getout
                                            8570 &i       seta    &i+1
                                            8571          ago     .loop
                                            8572 .around  anop
                                            8573 &$dccexti seta &$dccexti+1
                                            8574          extrn  &m
                                            8575 .getout  anop
                                            8576          mend
000057B0                                    8577+$eye0154    ds    0d                                                    02-DCCCA
000057B0 C4C3C3                             8578+         dc cl3'DCC'                                                    02-DCCCA
000057B3 01                                 8579+         dc xl1'01' format one                                          02-DCCCA
000057B4 00000000                           8580+         dc a(0)                                                        02-DCCCA
000057B8 0000000000005822                   8581+         dc ad(@PER_1420)                                               02-DCCCA
000057C0 00000000000000C0                   8582+         dc ad(192)                                                     02-DCCCA
000057C8 0000000000000000                   8583+         dc ad(0)                                                       02-DCCCA
000057D0 0000000000001000                   8584+         dc ad(4096)                                                    02-DCCCA
000057D8 20                                 8585+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000057D9 03                                 8586+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000057DA 03                                 8587+         dc al1(3)                                                      02-DCCCA
000057DB 08                                 8588+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000057DC 00                                 8589+         dc bl.8'00000000'                                              02-DCCCA
000057DD 000000                             8590+         dc al3(0)                                                      02-DCCCA
000057E0 0000000000005790                   8591+         dc ad(@LNAME1420)                                              02-DCCCA
000057E8                                    8592+         ds 0d                                                          02-DCCCA
000057E8 00000000000057B0                   8593+         dc ad($eye0154)                                                02-DCCCA
000057F0 0000000000000000                   8594+         dc ad(0)                                                       02-DCCCA
000057F8                                    8595+         ds    0d                                                       01-DCCPR
                                            8596+         entry rd_kafka_op_throttle_time                                01-DCCPR
000057F8                                    8597+rd_kafka_op_throttle_time ds 0d                                         01-DCCPR
000057F8                                    8598+@REGION_1420_1 ds 0h                                                    01-DCCPR
000057F8 EBEC D008 0024          00000008   8599+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000057FE E3E0 D088 0004          00000088   8600+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005804 E3C0 D090 0004          00000090   8601+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000580A B904 002E                          8602+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000580E E3B0 C018 0004          00000018   8603+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005814 A7EB 00C0               000000C0   8604+         aghi  14,192              increase by frame size               01-DCCPR
00005818 E3E0 C020 0021          00000020   8605+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000581E 4720 B020               00000020   8606+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005822                                    8607+@PER_1420 ds   0h                                                       01-DCCPR
00005822 EBDE 2080 0024          00000080   8608+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005828 E3C0 2090 0024          00000090   8609+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000582E B904 00D2                          8610+         lgr   13,2                set real frame pointer               01-DCCPR
00005832 B904 00CF                          8611+         lgr   12,15               set base reg                         01-DCCPR
                        000057F8            8612+         using @REGION_1420_1,12                                        01-DCCPR
00005836 B904 0051                          8613          LGR   5,1         ; ptr to parm area
                                            8614 * ******* End of Prologue
                                                                                                                           Page  174 
  Active Usings: @REGION_1420_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8615 * *
0000583A 5820 5014               00000014   8616          L     2,20(0,5)   ; throttle_time
0000583E E340 5000 0004          00000000   8617          LG    4,0(0,5)    ; rkb
                                            8618 * ***      rd_kafka_op_t *rko;
                                            8619 * ***
                                            8620 * ***      rd_avg_add(&rkb->rkb_avg_throttle, throttle_time);
00005844 A7F9 1360               00001360   8621          LGHI  15,4960     ; 4960
00005848 41FF 4000               00000000   8622          LA    15,0(15,4)
0000584C E3F0 D0B0 0024          000000B0   8623          STG   15,176(0,13)
00005852 B914 00F2                          8624          LGFR  15,2
00005856 E3F0 D0B8 0024          000000B8   8625          STG   15,184(0,13)
0000585C 4110 D0B0               000000B0   8626          LA    1,176(0,13)
00005860 E3F0 C0B8 0004          000058B0   8627          LG    15,@lit_1420_336 ; rd_avg_add
00005866                                    8628 @@gen_label469 DS    0H
00005866 05EF                               8629          BALR  14,15
00005868                                    8630 @@gen_label470 DS    0H
                                            8631 * ***
                                            8632 * ***
                                            8633 * ***
                                            8634 * ***
                                            8635 * ***
                                            8636 * ***      if (!rkb->rkb_rk->rk_conf.throttle_cb ||
00005868 E3F0 4FD0 0004          00000FD0   8637          LG    15,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
0000586E E3F0 F870 0002          00000870   8638          LTG   15,2160(0,15) ; offset of throttle_cb in rd_kafka_conf_s
00005874 4780 C17A               00005972   8639          BZ    @ret_lab_1420
                                            8640 * ***          (!throttle_time && !rd_atomic32_get(&rkb->rkb_rk->rk_la\
                                            8641 * st_throttle)))
00005878 1222                               8642          LTR   2,2
0000587A 4770 C0E8               000058E0   8643          BNZ   @L849
0000587E E3F0 4FD0 0004          00000FD0   8644          LG    15,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
00005884 41F0 FA60               00000A60   8645          LA    15,2656(0,15)
00005888 E3F0 D0B0 0024          000000B0   8646          STG   15,176(0,13)
0000588E 4110 D0B0               000000B0   8647          LA    1,176(0,13)
00005892 E3F0 C0C0 0004          000058B8   8648          LG    15,@lit_1420_337 ; rd_atomic32_get
00005898                                    8649 @@gen_label473 DS    0H
00005898 05EF                               8650          BALR  14,15
0000589A                                    8651 @@gen_label474 DS    0H
0000589A 12FF                               8652          LTR   15,15
0000589C 4770 C0E8               000058E0   8653          BNZ   @L849
000058A0                                    8654 @L850    DS    0H
                                            8655 * ***         return;
000058A0 47F0 C17A               00005972   8656          B     @ret_lab_1420
000058A8                                    8657          DS    0D
000058A8 000000C0                           8658 @FRAMESIZE_1420 DC F'192'
000058AC 00000000
000058B0 0000000000000B58                   8659 @lit_1420_336 DC AD(rd_avg_add)
000058B8 00000000000002F0                   8660 @lit_1420_337 DC AD(rd_atomic32_get)
000058C0 0000000000000428                   8661 @lit_1420_338 DC AD(rd_atomic32_set)
000058C8 0000000000003180                   8662 @lit_1420_339 DC AD(rd_kafka_op_new0)
000058D0 00000000000007D8                   8663 @lit_1420_341 DC AD(rd_strdup)
000058D8 0000000000001DD8                   8664 @lit_1420_342 DC AD(rd_kafka_q_enq)
000058E0                                    8665 @L849    DS    0H
                                                                                                                           Page  175 
  Active Usings: @REGION_1420_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8666 * ***
                                            8667 * ***      rd_atomic32_set(&rkb->rkb_rk->rk_last_throttle, throttle_ti\
                                            8668 * me);
000058E0 E3F0 4FD0 0004          00000FD0   8669          LG    15,4048(0,4) ; offset of rkb_rk in rd_kafka_broker_s
000058E6 41F0 FA60               00000A60   8670          LA    15,2656(0,15)
000058EA E3F0 D0B0 0024          000000B0   8671          STG   15,176(0,13)
000058F0 B914 00F2                          8672          LGFR  15,2
000058F4 E3F0 D0B8 0024          000000B8   8673          STG   15,184(0,13)
000058FA 4110 D0B0               000000B0   8674          LA    1,176(0,13)
000058FE E3F0 C0C8 0004          000058C0   8675          LG    15,@lit_1420_338 ; rd_atomic32_set
00005904                                    8676 @@gen_label476 DS    0H
00005904 05EF                               8677          BALR  14,15
00005906                                    8678 @@gen_label477 DS    0H
                                            8679 * ***
                                            8680 * ***      rko = rd_kafka_op_new0(((void *)0), RD_KAFKA_OP_THROTTLE);
00005906 D707 D0B0 D0B0 000000B0 000000B0   8681          XC    176(8,13),176(13)
0000590C E548 D0B8 0019          000000B8   8682          MVGHI 184(13),25
00005912 4110 D0B0               000000B0   8683          LA    1,176(0,13)
00005916 E3F0 C0D0 0004          000058C8   8684          LG    15,@lit_1420_339 ; rd_kafka_op_new0
0000591C                                    8685 @@gen_label478 DS    0H
0000591C 05EF                               8686          BALR  14,15
0000591E                                    8687 @@gen_label479 DS    0H
0000591E B904 003F                          8688          LGR   3,15
                                            8689 * ***           ((rko)->rko_prio = RD_KAFKA_PRIO_HIGH);
00005922 E54C 3034 0002          00000034   8690          MVHI  52(3),2     ; offset of rko_prio in rd_kafka_op_s
                                            8691 * ***      rko->rko_u.throttle.nodename = rd_strdup(rkb->rkb_nodename)\
                                            8692 * ;
00005928 A7F9 1518               00001518   8693          LGHI  15,5400     ; 5400
0000592C 41FF 4000               00000000   8694          LA    15,0(15,4)
00005930 E3F0 D0B0 0024          000000B0   8695          STG   15,176(0,13)
00005936 4110 D0B0               000000B0   8696          LA    1,176(0,13)
0000593A E3F0 C0D8 0004          000058D0   8697          LG    15,@lit_1420_341 ; rd_strdup
00005940                                    8698 @@gen_label480 DS    0H
00005940 05EF                               8699          BALR  14,15
00005942                                    8700 @@gen_label481 DS    0H
00005942 E3F0 3078 0024          00000078   8701          STG   15,120(0,3)
                                            8702 * ***      rko->rko_u.throttle.nodeid   = rkb->rkb_nodeid;
00005948 58F0 4010               00000010   8703          L     15,16(0,4)  ; offset of rkb_nodeid in rd_kafka_broker_s
0000594C 50F0 3074               00000074   8704          ST    15,116(0,3) ; offset of nodeid in 0000066
                                            8705 * ***      rko->rko_u.throttle.throttle_time = throttle_time;
00005950 5020 3070               00000070   8706          ST    2,112(0,3)  ; offset of rko_u in rd_kafka_op_s
                                            8707 * ***      rd_kafka_q_enq(rkq, rko);
00005954 E3F0 5008 0004          00000008   8708          LG    15,8(0,5)   ; rkq
0000595A E3F0 D0B0 0024          000000B0   8709          STG   15,176(0,13)
00005960 E330 D0B8 0024          000000B8   8710          STG   3,184(0,13)
00005966 4110 D0B0               000000B0   8711          LA    1,176(0,13)
0000596A E3F0 C0E0 0004          000058D8   8712          LG    15,@lit_1420_342 ; rd_kafka_q_enq
00005970                                    8713 @@gen_label482 DS    0H
00005970 05EF                               8714          BALR  14,15
00005972                                    8715 @@gen_label483 DS    0H
                                            8716 * ***   }
00005972                                    8717 @ret_lab_1420 DS 0H
                                                                                                                           Page  176 
  Active Usings: @REGION_1420_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8718 * * **** Start of Epilogue
                                            8719          DCCEPIL
00005972                                    8720+         ds 0h                                                          01-DCCEP
                                            8721+* Epilog
00005972 D707 D088 D088 00000088 00000088   8722+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005978 E3D0 D080 0004          00000080   8723+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000597E E3C0 D090 0004          00000090   8724+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005984 E3B0 C018 0004          00000018   8725+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000598A E3C0 B010 0021          00000010   8726+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005990 E3E0 D008 0004          00000008   8727+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005996 EB1C D020 0004          00000020   8728+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000599C 078E                               8729+         bcr 8,14                if same dsab, just return              01-DCCEP
0000599E E3F0 D010 0024          00000010   8730+         stg 15,16(0,13)         save return code                       01-DCCEP
000059A4 E300 D018 0024          00000018   8731+         stg 0,24(0,13)          save more return code                  01-DCCEP
000059AA E3F0 D090 0004          00000090   8732+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000059B0 E3F0 F018 0004          00000018   8733+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000059B6 47F0 F040               00000040   8734+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8735+* End of Epilog
                                            8736 * * **** End of Epilogue
                                            8737          DROP  12
                                            8738 *
                                            8739 *   DSECT for automatic variables in "rd_kafka_op_throttle_time"
                                            8740 *      (FUNCTION #1420)
                                            8741 *
00000000                00000000 000000A8   8742 @AUTO#rd_kafka_op_throttle_time DSECT
00000000                                    8743          DS    XL168
                                            8744 *
000059BA                00000000 00005F80   8745 @CODE    CSECT
                                            8746 *
                                            8747 *
                                            8748 *
                                            8749 * ....... start of rd_kafka_op_handle_std
                                            8750 rd_kafka_op_handle_std ALIAS X'99846D92818692816D96976D8881958493856DA2*
                                                                A384'
000059BA                                    8751 @LNAME1934 DS  0H
000059BA 00000016                           8752          DC    X'00000016'
000059BE 99846D9281869281                   8753          DC    C'rd_kafka_op_handle_std'
000059D4 00                                 8754          DC    X'00'
                                            8755 rd_kafka_op_handle_std DCCPRLG CINDEX=1934,BASER=12,FRAME=192,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1934
                                            8756          macro
                                            8757          dccextrn &m
                                            8758          gblc    &$dccext(1000)
                                            8759          gbla    &$dccexti
                                            8760          lcla    &i
                                            8761 &$dccext(&$dccexti+1) setc    '&m'
                                            8762 &i       seta    1
                                            8763 .loop    aif    (&i gt &$dccexti).around
                                            8764          aif    ('&$dccext(&i)' eq '&m').getout
                                            8765 &i       seta    &i+1
                                            8766          ago     .loop
                                            8767 .around  anop
                                                                                                                           Page  177 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8768 &$dccexti seta &$dccexti+1
                                            8769          extrn  &m
                                            8770 .getout  anop
                                            8771          mend
000059D8                                    8772+$eye0157    ds    0d                                                    02-DCCCA
000059D8 C4C3C3                             8773+         dc cl3'DCC'                                                    02-DCCCA
000059DB 01                                 8774+         dc xl1'01' format one                                          02-DCCCA
000059DC 00000000                           8775+         dc a(0)                                                        02-DCCCA
000059E0 0000000000005A4A                   8776+         dc ad(@PER_1934)                                               02-DCCCA
000059E8 00000000000000C0                   8777+         dc ad(192)                                                     02-DCCCA
000059F0 0000000000000000                   8778+         dc ad(0)                                                       02-DCCCA
000059F8 0000000000001000                   8779+         dc ad(4096)                                                    02-DCCCA
00005A00 20                                 8780+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005A01 03                                 8781+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005A02 03                                 8782+         dc al1(3)                                                      02-DCCCA
00005A03 08                                 8783+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005A04 00                                 8784+         dc bl.8'00000000'                                              02-DCCCA
00005A05 000000                             8785+         dc al3(0)                                                      02-DCCCA
00005A08 00000000000059BA                   8786+         dc ad(@LNAME1934)                                              02-DCCCA
00005A10                                    8787+         ds 0d                                                          02-DCCCA
00005A10 00000000000059D8                   8788+         dc ad($eye0157)                                                02-DCCCA
00005A18 0000000000000000                   8789+         dc ad(0)                                                       02-DCCCA
00005A20                                    8790+         ds    0d                                                       01-DCCPR
                                            8791+         entry rd_kafka_op_handle_std                                   01-DCCPR
00005A20                                    8792+rd_kafka_op_handle_std ds 0d                                            01-DCCPR
00005A20                                    8793+@REGION_1934_1 ds 0h                                                    01-DCCPR
00005A20 EBEC D008 0024          00000008   8794+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005A26 E3E0 D088 0004          00000088   8795+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005A2C E3C0 D090 0004          00000090   8796+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005A32 B904 002E                          8797+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005A36 E3B0 C018 0004          00000018   8798+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005A3C A7EB 00C0               000000C0   8799+         aghi  14,192              increase by frame size               01-DCCPR
00005A40 E3E0 C020 0021          00000020   8800+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005A46 4720 B020               00000020   8801+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005A4A                                    8802+@PER_1934 ds   0h                                                       01-DCCPR
00005A4A EBDE 2080 0024          00000080   8803+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005A50 E3C0 2090 0024          00000090   8804+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005A56 B904 00D2                          8805+         lgr   13,2                set real frame pointer               01-DCCPR
00005A5A B904 00CF                          8806+         lgr   12,15               set base reg                         01-DCCPR
                        00005A20            8807+         using @REGION_1934_1,12                                        01-DCCPR
00005A5E B904 0021                          8808          LGR   2,1         ; ptr to parm area
                                            8809 * ******* End of Prologue
                                            8810 * *
                                            8811 * ***           if (cb_type == RD_KAFKA_Q_CB_FORCE_RETURN)
00005A62 E3F0 2010 0004          00000010   8812          LG    15,16(0,2)  ; rko
00005A68 5810 201C               0000001C   8813          L     1,28(0,2)   ; cb_type
00005A6C A71E 0003               00000003   8814          CHI   1,3
00005A70 4770 C080               00005AA0   8815          BNE   @L851
                                            8816 * ***                   return RD_KAFKA_OP_RES_PASS;
00005A74 A7F9 0000               00000000   8817          LGHI  15,0        ; 0
00005A78 47F0 C15E               00005B7E   8818          B     @ret_lab_1934
00005A80                                    8819          DS    0D
                                                                                                                           Page  178 
  Active Usings: @REGION_1934_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005A80 000000C0                           8820 @FRAMESIZE_1934 DC F'192'
00005A84 00000000
00005A88 0000000000005E38                   8821 @lit_1934_345 DC AD(rd_kafka_op_offset_store)
00005A90 00000000000052C8                   8822 @lit_1934_347 DC AD(rd_kafka_op_call)
00005A98 0000000000000000                   8823 @lit_1934_348 DC AD(rd_kafka_buf_handle_op)
                                            8824 * ***           else if (((((rko)->rko_type == RD_KAFKA_OP_FETCH && !(\
                                            8825 * rko)->rko_err && ((rko)->rko_u.fetch.rkm.rkm_flags & 0x80000))))) {
00005AA0                                    8826 @L851    DS    0H
00005AA0 E55C F010 0001          00000010   8827          CHSI  16(15),1
00005AA6 4770 C0C2               00005AE2   8828          BNE   @L853
00005AAA E330 F020 0012          00000020   8829          LT    3,32(0,15)  ; offset of rko_err in rd_kafka_op_s
00005AB0 4770 C0C2               00005AE2   8830          BNZ   @L853
00005AB4 9108 F0D1      000000D1 00000008   8831          TM    209(15),8
00005AB8 4780 C0C2               00005AE2   8832          BZ    @L853
                                            8833 * ***
                                            8834 * ***
                                            8835 * ***                   rd_kafka_op_offset_store(rk, rko);
00005ABC E310 2000 0004          00000000   8836          LG    1,0(0,2)    ; rk
00005AC2 E310 D0A8 0024          000000A8   8837          STG   1,168(0,13)
00005AC8 E3F0 D0B0 0024          000000B0   8838          STG   15,176(0,13)
00005ACE 4110 D0A8               000000A8   8839          LA    1,168(0,13)
00005AD2 E3F0 C068 0004          00005A88   8840          LG    15,@lit_1934_345 ; rd_kafka_op_offset_store
00005AD8                                    8841 @@gen_label488 DS    0H
00005AD8 05EF                               8842          BALR  14,15
00005ADA                                    8843 @@gen_label489 DS    0H
                                            8844 * ***                   return RD_KAFKA_OP_RES_HANDLED;
00005ADA A7F9 0001               00000001   8845          LGHI  15,1        ; 1
00005ADE 47F0 C15E               00005B7E   8846          B     @ret_lab_1934
                                            8847 * ***           } else if (cb_type != RD_KAFKA_Q_CB_EVENT &&
00005AE2                                    8848 @L853    DS    0H
00005AE2 A71E 0004               00000004   8849          CHI   1,4
00005AE6 4780 C104               00005B24   8850          BE    @L855
                                            8851 * ***                    rko->rko_type & (int)(1 << 29))
00005AEA 9120 F010      00000010 00000020   8852          TM    16(15),32
00005AEE 4780 C104               00005B24   8853          BZ    @L855
                                            8854 * ***                   return rd_kafka_op_call(rk, rkq, rko);
00005AF2 E310 2000 0004          00000000   8855          LG    1,0(0,2)    ; rk
00005AF8 E310 D0A8 0024          000000A8   8856          STG   1,168(0,13)
00005AFE E310 2008 0004          00000008   8857          LG    1,8(0,2)    ; rkq
00005B04 E310 D0B0 0024          000000B0   8858          STG   1,176(0,13)
00005B0A E3F0 D0B8 0024          000000B8   8859          STG   15,184(0,13)
00005B10 4110 D0A8               000000A8   8860          LA    1,168(0,13)
00005B14 E3F0 C070 0004          00005A90   8861          LG    15,@lit_1934_347 ; rd_kafka_op_call
00005B1A                                    8862 @@gen_label492 DS    0H
00005B1A 05EF                               8863          BALR  14,15
00005B1C                                    8864 @@gen_label493 DS    0H
00005B1C B914 00FF                          8865          LGFR  15,15
00005B20 47F0 C15E               00005B7E   8866          B     @ret_lab_1934
                                            8867 * ***           else if (rko->rko_type == RD_KAFKA_OP_RECV_BUF)
00005B24                                    8868 @L855    DS    0H
00005B24 E55C F010 0009          00000010   8869          CHSI  16(15),9
00005B2A 4770 C130               00005B50   8870          BNE   @L857
                                                                                                                           Page  179 
  Active Usings: @REGION_1934_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8871 * ***                   rd_kafka_buf_handle_op(rko, rko->rko_err);
00005B2E E3F0 D0A8 0024          000000A8   8872          STG   15,168(0,13)
00005B34 E3F0 F020 0014          00000020   8873          LGF   15,32(0,15)
00005B3A E3F0 D0B0 0024          000000B0   8874          STG   15,176(0,13)
00005B40 4110 D0A8               000000A8   8875          LA    1,168(0,13)
00005B44 E3F0 C078 0004          00005A98   8876          LG    15,@lit_1934_348 ; rd_kafka_buf_handle_op
00005B4A                                    8877 @@gen_label495 DS    0H
00005B4A 05EF                               8878          BALR  14,15
00005B4C                                    8879 @@gen_label496 DS    0H
00005B4C 47F0 C15A               00005B7A   8880          B     @L852
                                            8881 * ***           else if (cb_type != RD_KAFKA_Q_CB_RETURN &&
00005B50                                    8882 @L857    DS    0H
00005B50 A71E 0002               00000002   8883          CHI   1,2
00005B54 4780 C152               00005B72   8884          BE    @L859
                                            8885 * ***                    rko->rko_type & (int)(1 << 30) &&
00005B58 9140 F010      00000010 00000040   8886          TM    16(15),64
00005B5C 4780 C152               00005B72   8887          BZ    @L859
                                            8888 * ***                    rko->rko_err == RD_KAFKA_RESP_ERR__DESTROY)
00005B60 E55C F020 FF3B          00000020   8889          CHSI  32(15),-197
00005B66 4770 C152               00005B72   8890          BNE   @L859
                                            8891 * ***                   return RD_KAFKA_OP_RES_HANDLED;
00005B6A A7F9 0001               00000001   8892          LGHI  15,1        ; 1
00005B6E 47F0 C15E               00005B7E   8893          B     @ret_lab_1934
                                            8894 * ***
                                            8895 * ***           else
00005B72                                    8896 @L859    DS    0H
                                            8897 * ***                   return RD_KAFKA_OP_RES_PASS;
00005B72 A7F9 0000               00000000   8898          LGHI  15,0        ; 0
00005B76 47F0 C15E               00005B7E   8899          B     @ret_lab_1934
                                            8900 * ***
                                            8901 * ***           return RD_KAFKA_OP_RES_HANDLED;
00005B7A                                    8902 @L852    DS    0H
00005B7A A7F9 0001               00000001   8903          LGHI  15,1        ; 1
                                            8904 * ***   }
00005B7E                                    8905 @ret_lab_1934 DS 0H
                                            8906 * * **** Start of Epilogue
                                            8907          DCCEPIL
00005B7E                                    8908+         ds 0h                                                          01-DCCEP
                                            8909+* Epilog
00005B7E D707 D088 D088 00000088 00000088   8910+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005B84 E3D0 D080 0004          00000080   8911+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005B8A E3C0 D090 0004          00000090   8912+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005B90 E3B0 C018 0004          00000018   8913+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005B96 E3C0 B010 0021          00000010   8914+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005B9C E3E0 D008 0004          00000008   8915+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005BA2 EB1C D020 0004          00000020   8916+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005BA8 078E                               8917+         bcr 8,14                if same dsab, just return              01-DCCEP
00005BAA E3F0 D010 0024          00000010   8918+         stg 15,16(0,13)         save return code                       01-DCCEP
00005BB0 E300 D018 0024          00000018   8919+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005BB6 E3F0 D090 0004          00000090   8920+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005BBC E3F0 F018 0004          00000018   8921+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005BC2 47F0 F040               00000040   8922+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page  180 
  Active Usings: @REGION_1934_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8923+* End of Epilog
                                            8924 * * **** End of Epilogue
                                            8925          DROP  12
                                            8926 *
                                            8927 *   DSECT for automatic variables in "rd_kafka_op_handle_std"
                                            8928 *      (FUNCTION #1934)
                                            8929 *
00000000                00000000 000000A8   8930 @AUTO#rd_kafka_op_handle_std DSECT
00000000                                    8931          DS    XL168
                                            8932 *
00005BC6                00000000 00005F80   8933 @CODE    CSECT
                                            8934 *
                                            8935 *
                                            8936 *
                                            8937 * ....... start of rd_kafka_op_handle
                                            8938 rd_kafka_op_handle ALIAS X'99846D92818692816D96976D888195849385'
00005BC6                                    8939 @LNAME1421 DS  0H
00005BC6 00000012                           8940          DC    X'00000012'
00005BCA 99846D9281869281                   8941          DC    C'rd_kafka_op_handle'
00005BDC 00                                 8942          DC    X'00'
                                            8943 rd_kafka_op_handle DCCPRLG CINDEX=1421,BASER=12,FRAME=216,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1421
                                            8944          macro
                                            8945          dccextrn &m
                                            8946          gblc    &$dccext(1000)
                                            8947          gbla    &$dccexti
                                            8948          lcla    &i
                                            8949 &$dccext(&$dccexti+1) setc    '&m'
                                            8950 &i       seta    1
                                            8951 .loop    aif    (&i gt &$dccexti).around
                                            8952          aif    ('&$dccext(&i)' eq '&m').getout
                                            8953 &i       seta    &i+1
                                            8954          ago     .loop
                                            8955 .around  anop
                                            8956 &$dccexti seta &$dccexti+1
                                            8957          extrn  &m
                                            8958 .getout  anop
                                            8959          mend
00005BE0                                    8960+$eye0160    ds    0d                                                    02-DCCCA
00005BE0 C4C3C3                             8961+         dc cl3'DCC'                                                    02-DCCCA
00005BE3 01                                 8962+         dc xl1'01' format one                                          02-DCCCA
00005BE4 00000000                           8963+         dc a(0)                                                        02-DCCCA
00005BE8 0000000000005C52                   8964+         dc ad(@PER_1421)                                               02-DCCCA
00005BF0 00000000000000D8                   8965+         dc ad(216)                                                     02-DCCCA
00005BF8 0000000000000000                   8966+         dc ad(0)                                                       02-DCCCA
00005C00 0000000000001000                   8967+         dc ad(4096)                                                    02-DCCCA
00005C08 20                                 8968+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005C09 03                                 8969+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005C0A 03                                 8970+         dc al1(3)                                                      02-DCCCA
00005C0B 08                                 8971+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005C0C 00                                 8972+         dc bl.8'00000000'                                              02-DCCCA
00005C0D 000000                             8973+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page  181 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005C10 0000000000005BC6                   8974+         dc ad(@LNAME1421)                                              02-DCCCA
00005C18                                    8975+         ds 0d                                                          02-DCCCA
00005C18 0000000000005BE0                   8976+         dc ad($eye0160)                                                02-DCCCA
00005C20 0000000000000000                   8977+         dc ad(0)                                                       02-DCCCA
00005C28                                    8978+         ds    0d                                                       01-DCCPR
                                            8979+         entry rd_kafka_op_handle                                       01-DCCPR
00005C28                                    8980+rd_kafka_op_handle ds 0d                                                01-DCCPR
00005C28                                    8981+@REGION_1421_1 ds 0h                                                    01-DCCPR
00005C28 EBEC D008 0024          00000008   8982+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005C2E E3E0 D088 0004          00000088   8983+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005C34 E3C0 D090 0004          00000090   8984+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005C3A B904 002E                          8985+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005C3E E3B0 C018 0004          00000018   8986+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005C44 A7EB 00D8               000000D8   8987+         aghi  14,216              increase by frame size               01-DCCPR
00005C48 E3E0 C020 0021          00000020   8988+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005C4E 4720 B020               00000020   8989+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005C52                                    8990+@PER_1421 ds   0h                                                       01-DCCPR
00005C52 EBDE 2080 0024          00000080   8991+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005C58 E3C0 2090 0024          00000090   8992+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005C5E B904 00D2                          8993+         lgr   13,2                set real frame pointer               01-DCCPR
00005C62 B904 00CF                          8994+         lgr   12,15               set base reg                         01-DCCPR
                        00005C28            8995+         using @REGION_1421_1,12                                        01-DCCPR
00005C66 B904 0051                          8996          LGR   5,1         ; ptr to parm area
                                            8997 * ******* End of Prologue
                                            8998 * *
00005C6A E340 5010 0004          00000010   8999          LG    4,16(0,5)   ; rko
00005C70 E330 5028 0004          00000028   9000          LG    3,40(0,5)   ; callback
                                            9001 * ***           rd_kafka_op_res_t res;
                                            9002 * ***
                                            9003 * ***           if (rko->rko_serve) {
00005C76 E3F0 4050 0002          00000050   9004          LTG   15,80(0,4)  ; offset of rko_serve in rd_kafka_op_s
00005C7C 4780 C07A               00005CA2   9005          BZ    @L861
                                            9006 * ***                   callback = rko->rko_serve;
00005C80 E330 4050 0004          00000050   9007          LG    3,80(0,4)   ; offset of rko_serve in rd_kafka_op_s
                                            9008 * ***                   opaque   = rko->rko_serve_opaque;
00005C86 E3F0 4058 0004          00000058   9009          LG    15,88(0,4)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                s
00005C8C E3F0 5020 0024          00000020   9010          STG   15,32(0,5)  ; opaque
                                            9011 * ***                   rko->rko_serve        = ((void *)0);
00005C92 A7F9 0000               00000000   9012          LGHI  15,0        ; 0
00005C96 E3F0 4050 0024          00000050   9013          STG   15,80(0,4)  ; offset of rko_serve in rd_kafka_op_s
                                            9014 * ***                   rko->rko_serve_opaque = ((void *)0);
00005C9C E3F0 4058 0024          00000058   9015          STG   15,88(0,4)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                s
                                            9016 * ***           }
00005CA2                                    9017 @L861    DS    0H
                                            9018 * ***
                                            9019 * ***           res = rd_kafka_op_handle_std(rk, rkq, rko, cb_type);
00005CA2 E3F0 5000 0004          00000000   9020          LG    15,0(0,5)   ; rk
00005CA8 E3F0 D0B0 0024          000000B0   9021          STG   15,176(0,13)
00005CAE E3F0 5008 0004          00000008   9022          LG    15,8(0,5)   ; rkq
00005CB4 E3F0 D0B8 0024          000000B8   9023          STG   15,184(0,13)
                                                                                                                           Page  182 
  Active Usings: @REGION_1421_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005CBA E340 D0C0 0024          000000C0   9024          STG   4,192(0,13)
00005CC0 E3F0 501C 0014          0000001C   9025          LGF   15,28(0,5)  ; cb_type
00005CC6 E3F0 D0C8 0024          000000C8   9026          STG   15,200(0,13)
00005CCC 4110 D0B0               000000B0   9027          LA    1,176(0,13)
00005CD0 E3F0 C0D0 0004          00005CF8   9028          LG    15,@lit_1421_355 ; rd_kafka_op_handle_std
00005CD6                                    9029 @@gen_label501 DS    0H
00005CD6 05EF                               9030          BALR  14,15
00005CD8                                    9031 @@gen_label502 DS    0H
00005CD8 182F                               9032          LR    2,15        ; res
                                            9033 * ***           if (res == RD_KAFKA_OP_RES_KEEP) {
00005CDA A7FE 0002               00000002   9034          CHI   15,2
00005CDE 4770 C0E0               00005D08   9035          BNE   @L862
                                            9036 * ***
                                            9037 * ***                   return res;
00005CE2 B914 00F2                          9038          LGFR  15,2
00005CE6 47F0 C160               00005D88   9039          B     @ret_lab_1421
00005CF0                                    9040          DS    0D
00005CF0 000000D8                           9041 @FRAMESIZE_1421 DC F'216'
00005CF4 00000000
00005CF8 0000000000005A20                   9042 @lit_1421_355 DC AD(rd_kafka_op_handle_std)
00005D00 0000000000003330                   9043 @lit_1421_356 DC AD(rd_kafka_op_destroy)
                                            9044 * ***           } if (res == RD_KAFKA_OP_RES_HANDLED) {
00005D08                                    9045 @L862    DS    0H
00005D08 A72E 0001               00000001   9046          CHI   2,1
00005D0C 4770 C102               00005D2A   9047          BNE   @L863
                                            9048 * ***                   rd_kafka_op_destroy(rko);
00005D10 E340 D0B0 0024          000000B0   9049          STG   4,176(0,13)
00005D16 4110 D0B0               000000B0   9050          LA    1,176(0,13)
00005D1A E3F0 C0D8 0004          00005D00   9051          LG    15,@lit_1421_356 ; rd_kafka_op_destroy
00005D20                                    9052 @@gen_label505 DS    0H
00005D20 05EF                               9053          BALR  14,15
00005D22                                    9054 @@gen_label506 DS    0H
                                            9055 * ***                   return res;
00005D22 B914 00F2                          9056          LGFR  15,2
00005D26 47F0 C160               00005D88   9057          B     @ret_lab_1421
                                            9058 * ***           } else if (((res == RD_KAFKA_OP_RES_YIELD)))
00005D2A                                    9059 @L863    DS    0H
00005D2A A72E 0003               00000003   9060          CHI   2,3
00005D2E 4770 C112               00005D3A   9061          BNE   @L864
                                            9062 * ***                   return res;
00005D32 B914 00F2                          9063          LGFR  15,2
00005D36 47F0 C160               00005D88   9064          B     @ret_lab_1421
                                            9065 * ***
                                            9066 * ***           if (callback)
00005D3A                                    9067 @L864    DS    0H
00005D3A B902 00F3                          9068          LTGR  15,3
00005D3E 4780 C15C               00005D84   9069          BZ    @L866
                                            9070 * ***                   res = callback(rk, rkq, rko, cb_type, opaque);
00005D42 E3F0 5000 0004          00000000   9071          LG    15,0(0,5)   ; rk
00005D48 E3F0 D0B0 0024          000000B0   9072          STG   15,176(0,13)
00005D4E E3F0 5008 0004          00000008   9073          LG    15,8(0,5)   ; rkq
00005D54 E3F0 D0B8 0024          000000B8   9074          STG   15,184(0,13)
                                                                                                                           Page  183 
  Active Usings: @REGION_1421_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005D5A E340 D0C0 0024          000000C0   9075          STG   4,192(0,13)
00005D60 E3F0 501C 0014          0000001C   9076          LGF   15,28(0,5)  ; cb_type
00005D66 E3F0 D0C8 0024          000000C8   9077          STG   15,200(0,13)
00005D6C E3F0 5020 0004          00000020   9078          LG    15,32(0,5)  ; opaque
00005D72 E3F0 D0D0 0024          000000D0   9079          STG   15,208(0,13)
00005D78 4110 D0B0               000000B0   9080          LA    1,176(0,13)
00005D7C B904 00F3                          9081          LGR   15,3
00005D80                                    9082 @@gen_label509 DS    0H
00005D80 05EF                               9083          BALR  14,15
00005D82                                    9084 @@gen_label510 DS    0H
00005D82 182F                               9085          LR    2,15        ; res
00005D84                                    9086 @L866    DS    0H
                                            9087 * ***
                                            9088 * ***           return res;
00005D84 B914 00F2                          9089          LGFR  15,2
                                            9090 * ***   }
00005D88                                    9091 @ret_lab_1421 DS 0H
                                            9092 * * **** Start of Epilogue
                                            9093          DCCEPIL
00005D88                                    9094+         ds 0h                                                          01-DCCEP
                                            9095+* Epilog
00005D88 D707 D088 D088 00000088 00000088   9096+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005D8E E3D0 D080 0004          00000080   9097+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005D94 E3C0 D090 0004          00000090   9098+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005D9A E3B0 C018 0004          00000018   9099+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005DA0 E3C0 B010 0021          00000010   9100+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005DA6 E3E0 D008 0004          00000008   9101+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005DAC EB1C D020 0004          00000020   9102+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005DB2 078E                               9103+         bcr 8,14                if same dsab, just return              01-DCCEP
00005DB4 E3F0 D010 0024          00000010   9104+         stg 15,16(0,13)         save return code                       01-DCCEP
00005DBA E300 D018 0024          00000018   9105+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005DC0 E3F0 D090 0004          00000090   9106+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005DC6 E3F0 F018 0004          00000018   9107+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005DCC 47F0 F040               00000040   9108+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9109+* End of Epilog
                                            9110 * * **** End of Epilogue
                                            9111          DROP  12
                                            9112 *
                                            9113 *   DSECT for automatic variables in "rd_kafka_op_handle"
                                            9114 *      (FUNCTION #1421)
                                            9115 *
00000000                00000000 000000AC   9116 @AUTO#rd_kafka_op_handle DSECT
00000000                                    9117          DS    XL168
000000A8                                    9118 rd_kafka_op_handle#res#0 DS 1F ; res
                                            9119 *
00005DD0                00000000 00005F80   9120 @CODE    CSECT
                                            9121 *
                                            9122 *
                                            9123 *
                                            9124 * ....... start of rd_kafka_op_offset_store
                                            9125 rd_kafka_op_offset_store ALIAS X'99846D92818692816D96976D968686A285A36D*
                                                                A2A3969985'
                                                                                                                           Page  184 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005DD0                                    9126 @LNAME1423 DS  0H
00005DD0 00000018                           9127          DC    X'00000018'
00005DD4 99846D9281869281                   9128          DC    C'rd_kafka_op_offset_store'
00005DEC 00                                 9129          DC    X'00'
                                            9130 rd_kafka_op_offset_store DCCPRLG CINDEX=1423,BASER=12,FRAME=200,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1423
                                            9131          macro
                                            9132          dccextrn &m
                                            9133          gblc    &$dccext(1000)
                                            9134          gbla    &$dccexti
                                            9135          lcla    &i
                                            9136 &$dccext(&$dccexti+1) setc    '&m'
                                            9137 &i       seta    1
                                            9138 .loop    aif    (&i gt &$dccexti).around
                                            9139          aif    ('&$dccext(&i)' eq '&m').getout
                                            9140 &i       seta    &i+1
                                            9141          ago     .loop
                                            9142 .around  anop
                                            9143 &$dccexti seta &$dccexti+1
                                            9144          extrn  &m
                                            9145 .getout  anop
                                            9146          mend
00005DF0                                    9147+$eye0163    ds    0d                                                    02-DCCCA
00005DF0 C4C3C3                             9148+         dc cl3'DCC'                                                    02-DCCCA
00005DF3 01                                 9149+         dc xl1'01' format one                                          02-DCCCA
00005DF4 00000000                           9150+         dc a(0)                                                        02-DCCCA
00005DF8 0000000000005E62                   9151+         dc ad(@PER_1423)                                               02-DCCCA
00005E00 00000000000000C8                   9152+         dc ad(200)                                                     02-DCCCA
00005E08 0000000000000000                   9153+         dc ad(0)                                                       02-DCCCA
00005E10 0000000000001000                   9154+         dc ad(4096)                                                    02-DCCCA
00005E18 20                                 9155+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005E19 03                                 9156+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005E1A 03                                 9157+         dc al1(3)                                                      02-DCCCA
00005E1B 08                                 9158+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005E1C 00                                 9159+         dc bl.8'00000000'                                              02-DCCCA
00005E1D 000000                             9160+         dc al3(0)                                                      02-DCCCA
00005E20 0000000000005DD0                   9161+         dc ad(@LNAME1423)                                              02-DCCCA
00005E28                                    9162+         ds 0d                                                          02-DCCCA
00005E28 0000000000005DF0                   9163+         dc ad($eye0163)                                                02-DCCCA
00005E30 0000000000000000                   9164+         dc ad(0)                                                       02-DCCCA
00005E38                                    9165+         ds    0d                                                       01-DCCPR
                                            9166+         entry rd_kafka_op_offset_store                                 01-DCCPR
00005E38                                    9167+rd_kafka_op_offset_store ds 0d                                          01-DCCPR
00005E38                                    9168+@REGION_1423_1 ds 0h                                                    01-DCCPR
00005E38 EBEC D008 0024          00000008   9169+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005E3E E3E0 D088 0004          00000088   9170+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005E44 E3C0 D090 0004          00000090   9171+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005E4A B904 002E                          9172+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005E4E E3B0 C018 0004          00000018   9173+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005E54 A7EB 00C8               000000C8   9174+         aghi  14,200              increase by frame size               01-DCCPR
00005E58 E3E0 C020 0021          00000020   9175+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005E5E 4720 B020               00000020   9176+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page  185 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005E62                                    9177+@PER_1423 ds   0h                                                       01-DCCPR
00005E62 EBDE 2080 0024          00000080   9178+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005E68 E3C0 2090 0024          00000090   9179+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005E6E B904 00D2                          9180+         lgr   13,2                set real frame pointer               01-DCCPR
00005E72 B904 00CF                          9181+         lgr   12,15               set base reg                         01-DCCPR
                        00005E38            9182+         using @REGION_1423_1,12                                        01-DCCPR
                                            9183 * ******* End of Prologue
                                            9184 * *
00005E76 E320 1000 0004          00000000   9185          LG    2,0(0,1)    ; rk
00005E7C E3F0 1008 0004          00000008   9186          LG    15,8(0,1)   ; rko
                                            9187 * ***      rd_kafka_toppar_t *rktp;
                                            9188 * ***           int64_t offset;
                                            9189 * ***
                                            9190 * ***      if (((rko->rko_type != RD_KAFKA_OP_FETCH || rko->rko_err)))
00005E82 E55C F010 0001          00000010   9191          CHSI  16(15),1
00005E88 4770 C100               00005F38   9192          BNE   @ret_lab_1423
00005E8C E310 F020 0012          00000020   9193          LT    1,32(0,15)  ; offset of rko_err in rd_kafka_op_s
00005E92 4780 C088               00005EC0   9194          BZ    @L867
00005E96                                    9195 @L868    DS    0H
                                            9196 * ***         return;
00005E96 47F0 C100               00005F38   9197          B     @ret_lab_1423
00005EA0                                    9198          DS    0D
00005EA0 000000C8                           9199 @FRAMESIZE_1423 DC F'200'
00005EA4 00000000
00005EA8 0000000000000000                   9200 @lit_1423_359 DC AD(mtx_lock)
00005EB0 0000000000002980                   9201 @lit_1423_360 DC AD(rd_kafka_offset_store0)
00005EB8 0000000000000000                   9202 @lit_1423_361 DC AD(mtx_unlock)
00005EC0                                    9203 @L867    DS    0H
                                            9204 * ***
                                            9205 * ***      rktp = rko->rko_rktp;
00005EC0 E330 F038 0004          00000038   9206          LG    3,56(0,15)  ; offset of rko_rktp in rd_kafka_op_s
                                            9207 * ***
                                            9208 * ***      if (((!rk)))
00005EC6 B902 0012                          9209          LTGR  1,2
00005ECA 4770 C0A2               00005EDA   9210          BNZ   @L869
                                            9211 * ***         rk = rktp->rktp_rkt->rkt_rk;
00005ECE E310 3060 0004          00000060   9212          LG    1,96(0,3)   ; offset of rktp_rkt in rd_kafka_toppar_s
00005ED4 E320 1148 0004          00000148   9213          LG    2,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
00005EDA                                    9214 @L869    DS    0H
                                            9215 * ***
                                            9216 * ***           offset = rko->rko_u.fetch.rkm.rkm_rkmessage.offset + 1\
                                            9217 * ;
00005EDA A749 0001               00000001   9218          LGHI  4,1         ; 1
00005EDE E340 F0B0 0008          000000B0   9219          AG    4,176(0,15)
                                            9220 * ***
                                            9221 * ***      mtx_lock(&(rktp)->rktp_lock);
00005EE4 41F0 30C0               000000C0   9222          LA    15,192(0,3)
00005EE8 E3F0 D0B0 0024          000000B0   9223          STG   15,176(0,13)
00005EEE 4110 D0B0               000000B0   9224          LA    1,176(0,13)
00005EF2 E3F0 C070 0004          00005EA8   9225          LG    15,@lit_1423_359 ; mtx_lock
00005EF8                                    9226 @@gen_label514 DS    0H
00005EF8 05EF                               9227          BALR  14,15
                                                                                                                           Page  186 
  Active Usings: @REGION_1423_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005EFA                                    9228 @@gen_label515 DS    0H
                                            9229 * ***      rktp->rktp_app_offset = offset;
00005EFA E340 3210 0024          00000210   9230          STG   4,528(0,3)  ; offset of rktp_app_offset in rd_kafka_topp*
                                                                ar_s
                                            9231 * ***      if (rk->rk_conf.enable_auto_offset_store)
00005F00 E3F0 2764 0012          00000764   9232          LT    15,1892(0,2) ; offset of enable_auto_offset_store in rd_*
                                                                kafka_conf_s
00005F06 4780 C0EA               00005F22   9233          BZ    @L870
                                            9234 * ***         rd_kafka_offset_store0(rktp, offset, 0);
00005F0A EB34 D0B0 0024          000000B0   9235          STMG  3,4,176(13)
00005F10 D707 D0C0 D0C0 000000C0 000000C0   9236          XC    192(8,13),192(13)
00005F16 4110 D0B0               000000B0   9237          LA    1,176(0,13)
00005F1A E3F0 C078 0004          00005EB0   9238          LG    15,@lit_1423_360 ; rd_kafka_offset_store0
00005F20                                    9239 @@gen_label517 DS    0H
00005F20 05EF                               9240          BALR  14,15
00005F22                                    9241 @@gen_label518 DS    0H
00005F22                                    9242 @L870    DS    0H
                                            9243 * ***      mtx_unlock(&(rktp)->rktp_lock);
00005F22 41F0 30C0               000000C0   9244          LA    15,192(0,3)
00005F26 E3F0 D0B0 0024          000000B0   9245          STG   15,176(0,13)
00005F2C 4110 D0B0               000000B0   9246          LA    1,176(0,13)
00005F30 E3F0 C080 0004          00005EB8   9247          LG    15,@lit_1423_361 ; mtx_unlock
00005F36                                    9248 @@gen_label519 DS    0H
00005F36 05EF                               9249          BALR  14,15
00005F38                                    9250 @@gen_label520 DS    0H
                                            9251 * ***   }
00005F38                                    9252 @ret_lab_1423 DS 0H
                                            9253 * * **** Start of Epilogue
                                            9254          DCCEPIL
00005F38                                    9255+         ds 0h                                                          01-DCCEP
                                            9256+* Epilog
00005F38 D707 D088 D088 00000088 00000088   9257+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005F3E E3D0 D080 0004          00000080   9258+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005F44 E3C0 D090 0004          00000090   9259+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005F4A E3B0 C018 0004          00000018   9260+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005F50 E3C0 B010 0021          00000010   9261+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005F56 E3E0 D008 0004          00000008   9262+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005F5C EB1C D020 0004          00000020   9263+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005F62 078E                               9264+         bcr 8,14                if same dsab, just return              01-DCCEP
00005F64 E3F0 D010 0024          00000010   9265+         stg 15,16(0,13)         save return code                       01-DCCEP
00005F6A E300 D018 0024          00000018   9266+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005F70 E3F0 D090 0004          00000090   9267+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005F76 E3F0 F018 0004          00000018   9268+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005F7C 47F0 F040               00000040   9269+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9270+* End of Epilog
                                            9271 * * **** End of Epilogue
                                            9272          DROP  12
                                            9273 *
                                            9274 *   DSECT for automatic variables in "rd_kafka_op_offset_store"
                                            9275 *      (FUNCTION #1423)
                                            9276 *
00000000                00000000 000000B0   9277 @AUTO#rd_kafka_op_offset_store DSECT
                                                                                                                           Page  187 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                                    9278          DS    XL168
000000A8                                    9279 rd_kafka_op_offset_store#offset#0 DS 8XL1 ; offset
                                            9280 *
00005F80                00000000 00005F80   9281 @CODE    CSECT
                                            9282 rd_kafka_op_cnt ALIAS X'99846D92818692816D96976D8395A3'
                                            9283 rd_kafka_op_cnt DXD 6D
                                            9284 @@STATIC ALIAS X'7C998492818692816D969750'
                                            9285 @@STATIC DXD   270D
                                            9286 *
                                            9287 *  Non-Re-Entrant Data Section
                                            9288 *
00005F80                00005F80 0000105C   9289 @DATA    CSECT
                                            9290 @DATA    RMODE ANY
                                            9291 @DATA    AMODE ANY
00005F80 99846D8381939396                   9292 @@T48F   DC    X'99846D838193939683'               rd.calloc
00005F89 00                                 9293          DC    1X'00'
00005F8A 99846D9481939396                   9294 @@T493   DC    X'99846D948193939683'               rd.malloc
00005F93 00                                 9295          DC    1X'00'
00005F94 99846D9985819393                   9296 @@T498   DC    X'99846D99858193939683'             rd.realloc
00005F9E 0000                               9297          DC    2X'00'
00005FA0 99846DA2A39984A4                   9298 @@T49E   DC    X'99846DA2A39984A497'               rd.strdup
00005FA9 00                                 9299          DC    1X'00'
00005FAA 99846DA2A3999584                   9300 @@T4A3   DC    X'99846DA2A3999584A497'             rd.strndup
00005FB4 0000                               9301          DC    2X'00'
00005FB6 99846D9985868395                   9302 @@T4AB   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00005FC4 00000000                           9303          DC    4X'00'
00005FC8 00000000                           9304 @@T65A   DC    4X'00'
00005FCC 0000001A00000000                   9305          DC    X'0000001A000000000000002200000000' ................
00005FDC 00000024                           9306          DC    X'00000024'                         ....
00005FE0 99846D9281869281                   9307 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00005FF0 98                                 9308          DC    X'98'                               q
00005FF1 00                                 9309          DC    1X'00'
00005FF2 99846D9281869281                   9310 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
00006002 96A8F0                             9311          DC    X'96A8F0'                           oy0
00006005 00                                 9312          DC    1X'00'
00006006 99846D9281869281                   9313 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006016 856D8485A2A39996                   9314          DC    X'856D8485A2A39996A8F0'             e.destroy0
00006020 0000                               9315          DC    2X'00'
00006022 99846D9281869281                   9316 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006032 856D8485936DA296                   9317          DC    X'856D8485936DA296A4998385'         e.del.source
0000603E 0000                               9318          DC    2X'00'
00006040 99846D9281869281                   9319 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006050 856D8485936DA296                   9320          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00006060 A49995                             9321          DC    X'A49995'                           urn
00006063 00                                 9322          DC    1X'00'
00006064 99846D9281869281                   9323 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006074 856DA39989878785                   9324          DC    X'856DA3998987878599'               e.trigger
0000607D 00                                 9325          DC    1X'00'
0000607E 99846D9281869281                   9326 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000608E 856D8485A2A39996                   9327          DC    X'856D8485A2A39996A8'               e.destroy
00006097 00                                 9328          DC    1X'00'
00006098 99846D9281869281                   9329 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
                                                                                                                           Page  188 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000060A8 856D8489A2818293                   9330          DC    X'856D8489A281829385'               e.disable
000060B1 00                                 9331          DC    1X'00'
000060B2 99846DA394978182                   9332 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
000060C2 F0                                 9333          DC    X'F0'                               0
000060C3 00                                 9334          DC    1X'00'
000060C4 99846D9281869281                   9335 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
000060D4 81A385                             9336          DC    X'81A385'                           ate
000060D7 00                                 9337          DC    1X'00'
000060D8 99846D9281869281                   9338 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
000060E8 819389A9856D8199                   9339          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
000060F6 0000                               9340          DC    2X'00'
000060F8 99846D9281869281                   9341 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
00006108 6D899589A3                         9342          DC    X'6D899589A3'                       .init
0000610D 00                                 9343          DC    1X'00'
0000610E 99846D9281869281                   9344 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
0000611E 87A26DA2A482                       9345          DC    X'87A26DA2A482'                     gs.sub
00006124 0000                               9346          DC    2X'00'
00006126 99846D9281869281                   9347 @@TA69   DC    X'99846D92818692816D9697F2A2A399'   rd.kafka.op2str
00006135 000000                             9348          DC    3X'00'
00006138 0000000000000000                   9349 @@TA72   DC    12X'00'
00006144 000000B800000000                   9350          DC    X'000000B800000000000000C800000000' ...........H....
00006154 000000C800000000                   9351          DC    X'000000C8000000000000005000000000' ...H............
00006164 0000001000000000                   9352          DC    X'00000010000000000000003000000000' ................
00006174 0000010400000000                   9353          DC    X'00000104000000000000000800000000' ................
00006184 0000000800000000                   9354          DC    X'00000008000000000000000800000000' ................
00006194 0000001000000000                   9355          DC    X'00000010000000000012D68700000000' ..........Og....
000061A4 0000001000000000                   9356          DC    X'00000010000000000000000800000000' ................
000061B4 0000001000000000                   9357          DC    X'00000010000000000012D68700000000' ..........Og....
000061C4 0012D68700000000                   9358          DC    X'0012D687000000000000000800000000' ..Og............
000061D4 0012D68700000000                   9359          DC    X'0012D687000000000012D68700000000' ..Og......Og....
000061E4 0000000800000000                   9360          DC    X'00000008000000000000001000000000' ................
000061F4 0000000800000000                   9361          DC    X'00000008000000000000001000000000' ................
00006204 0000001000000000                   9362          DC    X'00000010000000000000000800000000' ................
00006214 0000000800000000                   9363          DC    X'00000008000000000000001000000000' ................
00006224 0000001000000000                   9364          DC    X'00000010000000000000005800000000' ................
00006234 0012D68700000000                   9365          DC    X'0012D687000000000000029000000000' ..Og............
00006244 0000029000000000                   9366          DC    X'00000290000000000000029000000000' ................
00006254 0000029000000000                   9367          DC    X'00000290000000000000029000000000' ................
00006264 0000029000000000                   9368          DC    X'00000290000000000000029000000000' ................
00006274 0000029000000000                   9369          DC    X'00000290000000000000029000000000' ................
00006284 0000004800000000                   9370          DC    X'00000048000000000000000400000000' ................
00006294 0012D68700000000                   9371          DC    X'0012D687000000000012D68700000000' ..Og......Og....
000062A4 0000003000000000                   9372          DC    X'00000030000000000000001000000000' ................
000062B4 0000002800000000                   9373          DC    X'00000028000000000000000800000000' ................
000062C4 000000B800000000                   9374          DC    X'000000B8000000000012D687'         ..........Og
000062D0 99846D9281869281                   9375 @@TA74   DC    X'99846D92818692816D96976D9585A6F0' rd.kafka.op.new0
000062E0 0000                               9376          DC    2X'00'
000062E2 99846D9281869281                   9377 @@TA77   DC    X'99846D92818692816D96976D8485A2A3' rd.kafka.op.dest
000062F2 9996A8                             9378          DC    X'9996A8'                           roy
000062F5 00                                 9379          DC    1X'00'
000062F6 99846D9281869281                   9380 @@TA8A   DC    X'99846D92818692816D839695A2A49485' rd.kafka.consume
00006306 996D859999                         9381          DC    X'996D859999'                       r.err
                                                                                                                           Page  189 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000630B 00                                 9382          DC    1X'00'
0000630C 99846D9281869281                   9383 @@TA8E   DC    X'99846D92818692816D96976D9585A66D' rd.kafka.op.new.
0000631C 99859793A8                         9384          DC    X'99859793A8'                       reply
00006321 00                                 9385          DC    1X'00'
00006322 99846D9281869281                   9386 @@TAA4   DC    X'99846D92818692816D96976D998598'   rd.kafka.op.req
00006331 00                                 9387          DC    1X'00'
00006332 99846D9281869281                   9388 @@TAB0   DC    X'99846D92818692816D96976D83819393' rd.kafka.op.call
00006342 0000                               9389          DC    2X'00'
00006344 99846D9281869281                   9390 @@TAC2   DC    X'99846D92818692816D96976D9585A66D' rd.kafka.op.new.
00006354 8685A383886D94A2                   9391          DC    X'8685A383886D94A287'               fetch.msg
0000635D 00                                 9392          DC    1X'00'
0000635E                                    9393 @strings@ DS   0H
0000635E C37AE081A2879281                   9394          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
0000636E 849281869281E0A2                   9395          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
0000637E 9700950099858683                   9396          DC    X'970095009985868395A340A2A48260A9' p.n.refcnt.sub.z
0000638E 859996005A5C7F99                   9397          DC    X'859996005A5C7F9985868395A340A2A4' ero....refcnt.su
0000639E 8260A98599967F00                   9398          DC    X'8260A98599967F00C37AE081A2879281' b.zero..C..asgka
000063AE 869281E093898299                   9399          DC    X'869281E093898299849281869281E0A2' fka.librdkafka.s
000063BE 9983E09984928186                   9400          DC    X'9983E0998492818692816D98A485A485' rc.rdkafka.queue
000063CE 4B88000081A2A285                   9401          DC    X'4B88000081A2A28599A37A4099929860' .h..assert..rkq.
000063DE 6E9992986D998586                   9402          DC    X'6E9992986D9985868395A3406E40F000' .rkq.refcnt...0.
000063EE D3D9D2E300008184                   9403          DC    X'D3D9D2E3000081848440D6D740A3A897' LRKT..add.OP.typ
000063FE 8540A3964099846D                   9404          DC    X'8540A3964099846D92818692816D9697' e.to.rd.kafka.op
0000640E F2A2A3994D5D0000                   9405          DC    X'F2A2A3994D5D0000C37AE081A2879281' 2str....C..asgka
0000641E 869281E093898299                   9406          DC    X'869281E093898299849281869281E0A2' fka.librdkafka.s
0000642E 9983E09984928186                   9407          DC    X'9983E0998492818692816D96974B8300' rc.rdkafka.op.c.
0000643E 4D95819485A2ADA3                   9408          DC    X'4D95819485A2ADA3A89785405040A14D' .names.type.....
0000644E 4D8995A35D4DF140                   9409          DC    X'4D8995A35D4DF1404C4C40F2F95D404F' .int..1....29...
0000645E 404D8995A35D4DF1                   9410          DC    X'404D8995A35D4DF1404C4C40F3F05D5D' ..int..1....30..
0000646E BD405A7E404D4DA5                   9411          DC    X'BD405A7E404D4DA5968984405C5DF05D' .......void...0.
0000647E 5D404F4F405A5C7F                   9412          DC    X'5D404F4F405A5C7F81848440D6D740A3' ........add.OP.t
0000648E A8978540A3964099                   9413          DC    X'A8978540A3964099846D92818692816D' ype.to.rd.kafka.
0000649E 9697F2A2A3994D5D                   9414          DC    X'9697F2A2A3994D5D7F006CA24D4D9984' op2str.....s..rd
000064AE 6D92818692816D96                   9415          DC    X'6D92818692816D96976DA35C5D6C975D' .kafka.op.t...p.
000064BE 156CA240E3A89785                   9416          DC    X'156CA240E3A897857A406CA2404DF0A7' ..s.Type...s..0x
000064CE 6CA75D6B40E58599                   9417          DC    X'6CA75D6B40E58599A28996957A406C84' .x...Version...d
000064DE 15006CA240C59999                   9418          DC    X'15006CA240C5999996997A406CA21500' ...s.Error...s..
000064EE 6CA240D9859793A8                   9419          DC    X'6CA240D9859793A898406C9740A56C84' .s.Replyq..p.v.d
000064FE 404D6CA25D150000                   9420          DC    X'404D6CA25D15000000006CA2404D4D99' ...s.......s...r
0000650E 846D92818692816D                   9421          DC    X'846D92818692816DA396979781996DA3' d.kafka.toppar.t
0000651E 5C5D6C975D406CA2                   9422          DC    X'5C5D6C975D406CA240AD6C84BD40A56C' ...p...s...d..v.
0000652E 841500006CA240D6                   9423          DC    X'841500006CA240D68686A285A37A406C' d....s.Offset...
0000653E 9393841500006CA2                   9424          DC    X'9393841500006CA240D98581A296957A' lld....s.Reason.
0000654E 406CA21500004D95                   9425          DC    X'406CA21500004D9561815D006CA2406C' ..s....n.a...s..
0000655E 84409485A2A28187                   9426          DC    X'84409485A2A2818785A2409695406CA2' d.messages.on..s
0000656E 15006CA240C38193                   9427          DC    X'15006CA240C3819393828183927A406C' ...s.Callback...
0000657E 97404D96978198A4                   9428          DC    X'97404D96978198A485406C975D150000' p..opaque..p....
0000658E 6CA2406C84409781                   9429          DC    X'6CA2406C8440978199A389A3899695A2' .s..d.partitions
0000659E 15006CA240D39687                   9430          DC    X'15006CA240D396877A406C6C6C84406C' ...s.Log.....d..
000065AE A27A406CA2150000                   9431          DC    X'A27A406CA215000081848440D6D740A3' s...s...add.OP.t
000065BE A8978540A3964099                   9432          DC    X'A8978540A3964099846D92818692816D' ype.to.rd.kafka.
000065CE 96976D9585A6F04D                   9433          DC    X'96976D9585A6F04D5D00A3A289A98540' op.new0...tsize.
                                                                                                                           Page  190 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000065DE 6E40F0404F4F405A                   9434          DC    X'6E40F0404F4F405A5C7F81848440D6D7' ..0.......add.OP
000065EE 40A3A8978540A396                   9435          DC    X'40A3A8978540A3964099846D92818692' .type.to.rd.kafk
000065FE 816D96976D9585A6                   9436          DC    X'816D96976D9585A6F04D5D7F00009985' a.op.new0.....re
0000660E A2405A7E40D9C46D                   9437          DC    X'A2405A7E40D9C46DD2C1C6D2C16DD6D7' s....RD.KAFKA.OP
0000661E 6DD9C5E26DE8C9C5                   9438          DC    X'6DD9C5E26DE8C9C5D3C400009985A240' .RES.YIELD..res.
0000662E 5A7E40D9C46DD2C1                   9439          DC    X'5A7E40D9C46DD2C1C6D2C16DD6D76DD9' ...RD.KAFKA.OP.R
0000663E C5E26DD2C5C5D700                   9440          DC    X'C5E26DD2C5C5D700999296606E999296' ES.KEEP.rko..rko
0000664E 6DA44B8184948995                   9441          DC    X'6DA44B81849489956D998598A485A2A3' .u.admin.request
0000665E 4B86819596A4A34B                   9442          DC    X'4B86819596A4A34B96A4A3A2A3819584' .fanout.outstand
0000666E 899587407E7E40F0                   9443          DC    X'899587407E7E40F000005A999296606E' ing....0...rko..
0000667E 9992966DA44B8184                   9444          DC    X'9992966DA44B81849489956D998598A4' rko.u.admin.requ
0000668E 85A2A34B86819596                   9445          DC    X'85A2A34B86819596A4A36D9781998595' est.fanout.paren
0000669E A3005A999296606E                   9446          DC    X'A3005A999296606E9992966DA44B8184' t..rko..rko.u.ad
000066AE 9489956D9985A2A4                   9447          DC    X'9489956D9985A2A493A34B86819596A4' min.result.fanou
000066BE A36D9781998595A3                   9448          DC    X'A36D9781998595A300005A999296606E' t.parent...rko..
000066CE 9992966DA44B9385                   9449          DC    X'9992966DA44B938581848599A24B8596' rko.u.leaders.eo
000066DE 958385005A999296                   9450          DC    X'958385005A999296606E9992966DA44B' nce..rko..rko.u.
000066EE 938581848599A24B                   9451          DC    X'938581848599A24B99859793A8984B98' leaders.replyq.q
000066FE 0000D697859981A3                   9452          DC    X'0000D697859981A389969540A3899485' ..Operation.time
0000670E 844096A4A3009992                   9453          DC    X'844096A4A300999296606E9992966D96' d.out.rko..rko.o
0000671E 976D83820000D799                   9454          DC    X'976D83820000D7999684A4838500C685' p.cb..Produce.Fe
0000672E A3838800D68686A2                   9455          DC    X'A3838800D68686A285A30000D485A381' tch.Offset..Meta
0000673E 8481A3810000D385                   9456          DC    X'8481A3810000D38581848599C19584C9' data..LeaderAndI
0000674E A2990000E2A39697                   9457          DC    X'A2990000E2A39697D985979389838100' sr..StopReplica.
0000675E E4978481A385D485                   9458          DC    X'E4978481A385D485A3818481A3810000' UpdateMetadata..
0000676E C39695A399969393                   9459          DC    X'C39695A3999693938584E288A4A38496' ControlledShutdo
0000677E A6950000D68686A2                   9460          DC    X'A6950000D68686A285A3C396949489A3' wn..OffsetCommit
0000678E 0000D68686A285A3                   9461          DC    X'0000D68686A285A3C685A3838800C689' ..OffsetFetch.Fi
0000679E 9584C39696998489                   9462          DC    X'9584C396969984899581A3969900D196' ndCoordinator.Jo
000067AE 8995C79996A49700                   9463          DC    X'8995C79996A49700C8858199A3828581' inGroup.Heartbea
000067BE A300D38581A585C7                   9464          DC    X'A300D38581A585C79996A4970000E2A8' t.LeaveGroup..Sy
000067CE 9583C79996A49700                   9465          DC    X'9583C79996A49700C485A28399898285' ncGroup.Describe
000067DE C79996A497A20000                   9466          DC    X'C79996A497A20000D389A2A3C79996A4' Groups..ListGrou
000067EE 97A20000E281A293                   9467          DC    X'97A20000E281A293C8819584A2888192' ps..SaslHandshak
000067FE 8500C19789E58599                   9468          DC    X'8500C19789E58599A28996950000C399' e.ApiVersion..Cr
0000680E 8581A385E3969789                   9469          DC    X'8581A385E396978983A20000C4859385' eateTopics..Dele
0000681E A385E396978983A2                   9470          DC    X'A385E396978983A20000C4859385A385' teTopics..Delete
0000682E D98583969984A200                   9471          DC    X'D98583969984A200C99589A3D7999684' Records.InitProd
0000683E A4838599C9840000                   9472          DC    X'A4838599C9840000D68686A285A3C696' ucerId..OffsetFo
0000684E 99D38581848599C5                   9473          DC    X'99D38581848599C5979683880000C184' rLeaderEpoch..Ad
0000685E 84D78199A389A389                   9474          DC    X'84D78199A389A3899695A2E396E3A795' dPartitionsToTxn
0000686E 0000C18484D68686                   9475          DC    X'0000C18484D68686A285A3A2E396E3A7' ..AddOffsetsToTx
0000687E 9500C59584E3A795                   9476          DC    X'9500C59584E3A7950000E69989A385E3' n.EndTxn..WriteT
0000688E A795D48199928599                   9477          DC    X'A795D48199928599A200E3A795D68686' xnMarkers.TxnOff
0000689E A285A3C396949489                   9478          DC    X'A285A3C396949489A300C485A2839989' setCommit.Descri
000068AE 8285C18393A20000                   9479          DC    X'8285C18393A20000C3998581A385C183' beAcls..CreateAc
000068BE 93A20000C4859385                   9480          DC    X'93A20000C4859385A385C18393A20000' ls..DeleteAcls..
000068CE C485A28399898285                   9481          DC    X'C485A28399898285C39695868987A200' DescribeConfigs.
000068DE C193A38599C39695                   9482          DC    X'C193A38599C39695868987A20000C193' AlterConfigs..Al
000068EE A38599D985979389                   9483          DC    X'A38599D9859793898381D39687C48999' terReplicaLogDir
000068FE A200C485A2839989                   9484          DC    X'A200C485A28399898285D39687C48999' s.DescribeLogDir
0000690E A200E281A293C1A4                   9485          DC    X'A200E281A293C1A4A3888595A3898381' s.SaslAuthentica
                                                                                                                           Page  191 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000691E A3850000C3998581                   9486          DC    X'A3850000C3998581A385D78199A389A3' te..CreatePartit
0000692E 899695A20000C399                   9487          DC    X'899695A20000C3998581A385C4859385' ions..CreateDele
0000693E 8781A3899695E396                   9488          DC    X'8781A3899695E39692859500D9859585' gationToken.Rene
0000694E A6C48593858781A3                   9489          DC    X'A6C48593858781A3899695E396928595' wDelegationToken
0000695E 0000C5A797899985                   9490          DC    X'0000C5A797899985C48593858781A389' ..ExpireDelegati
0000696E 9695E39692859500                   9491          DC    X'9695E39692859500C485A28399898285' onToken.Describe
0000697E C48593858781A389                   9492          DC    X'C48593858781A3899695E39692859500' DelegationToken.
0000698E C4859385A385C799                   9493          DC    X'C4859385A385C79996A497A20000C593' DeleteGroups..El
0000699E 8583A3D385818485                   9494          DC    X'8583A3D38581848599A2D98598A485A2' ectLeadersReques
000069AE A300C99583998594                   9495          DC    X'A300C995839985948595A38193C193A3' t.IncrementalAlt
000069BE 8599C39695868987                   9496          DC    X'8599C39695868987A2D98598A485A2A3' erConfigsRequest
000069CE 0000C193A38599D7                   9497          DC    X'0000C193A38599D78199A389A3899695' ..AlterPartition
000069DE D98581A2A2898795                   9498          DC    X'D98581A2A2898795948595A3A2D98598' ReassignmentsReq
000069EE A485A2A30000D389                   9499          DC    X'A485A2A30000D389A2A3D78199A389A3' uest..ListPartit
000069FE 899695D98581A2A2                   9500          DC    X'899695D98581A2A2898795948595A3A2' ionReassignments
00006A0E D98598A485A2A300                   9501          DC    X'D98598A485A2A300D68686A285A3C485' Request.OffsetDe
00006A1E 9385A385D98598A4                   9502          DC    X'9385A385D98598A485A2A300C485A283' leteRequest.Desc
00006A2E 99898285C3938985                   9503          DC    X'99898285C393898595A3D8A496A381A2' ribeClientQuotas
00006A3E D98598A485A2A300                   9504          DC    X'D98598A485A2A300C193A38599C39389' Request.AlterCli
00006A4E 8595A3D8A496A381                   9505          DC    X'8595A3D8A496A381A2D98598A485A2A3' entQuotasRequest
00006A5E 0000C485A2839989                   9506          DC    X'0000C485A28399898285E4A28599E283' ..DescribeUserSc
00006A6E 998194C399858485                   9507          DC    X'998194C39985848595A3898193A2D985' ramCredentialsRe
00006A7E 98A485A2A300C193                   9508          DC    X'98A485A2A300C193A38599E4A28599E2' quest.AlterUserS
00006A8E 83998194C3998584                   9509          DC    X'83998194C39985848595A3898193A2D9' cramCredentialsR
00006A9E 8598A485A2A30000                   9510          DC    X'8598A485A2A30000E596A385D98598A4' equest..VoteRequ
00006AAE 85A2A300C2858789                   9511          DC    X'85A2A300C285878995D8A49699A494C5' est.BeginQuorumE
00006ABE 97968388D98598A4                   9512          DC    X'97968388D98598A485A2A300C59584D8' pochRequest.EndQ
00006ACE A49699A494C59796                   9513          DC    X'A49699A494C597968388D98598A485A2' uorumEpochReques
00006ADE A300C485A2839989                   9514          DC    X'A300C485A28399898285D8A49699A494' t.DescribeQuorum
00006AEE D98598A485A2A300                   9515          DC    X'D98598A485A2A300C193A38599C9A299' Request.AlterIsr
00006AFE D98598A485A2A300                   9516          DC    X'D98598A485A2A300E4978481A385C685' Request.UpdateFe
00006B0E 81A3A49985A2D985                   9517          DC    X'81A3A49985A2D98598A485A2A300C595' aturesRequest.En
00006B1E A58593969785D985                   9518          DC    X'A58593969785D98598A485A2A3009596' velopeRequest.no
00006B2E 9585000087A98997                   9519          DC    X'9585000087A989970000A295819797A8' ne..gzip..snappy
00006B3E 000093A9F400A9A2                   9520          DC    X'000093A9F400A9A2A384000089958885' ..lz4.zstd..inhe
00006B4E 9989A30083969586                   9521          DC    X'9989A300839695868987A49985840000' rit.configured..
00006B5E 9385819995858400                   9522          DC    X'93858199958584008995A38599958193' learned.internal
00006B6E 0000939687898381                   9523          DC    X'00009396878983819300C99589A30000' ..logical.Init..
00006B7E E3859994899581A3                   9524          DC    X'E3859994899581A38500C681A38193C5' Terminate.FatalE
00006B8E 999996990000D985                   9525          DC    X'999996990000D98598A485A2A3D7C9C4' rror..RequestPID
00006B9E 0000E68189A3E399                   9526          DC    X'0000E68189A3E3998195A2979699A300' ..WaitTransport.
00006BAE E68189A3D7C9C400                   9527          DC    X'E68189A3D7C9C400C1A2A28987958584' WaitPID.Assigned
00006BBE 0000C499818995D9                   9528          DC    X'0000C499818995D985A285A30000C499' ..DrainReset..Dr
00006BCE 818995C2A4949700                   9529          DC    X'818995C2A4949700D9858184A8D596A3' ainBump.ReadyNot
00006BDE C18392858400D985                   9530          DC    X'C18392858400D9858184A800C995E399' Acked.Ready.InTr
00006BEE 8195A28183A38996                   9531          DC    X'8195A28183A389969500C285878995C3' ansaction.BeginC
00006BFE 96949489A300C396                   9532          DC    X'96949489A300C396949489A3A3899587' ommit.Committing
00006C0E E3998195A28183A3                   9533          DC    X'E3998195A28183A389969500C3969494' Transaction.Comm
00006C1E 89A3D596A3C18392                   9534          DC    X'89A3D596A3C1839285840000C1829699' itNotAcked..Abor
00006C2E A3899587E3998195                   9535          DC    X'A3899587E3998195A28183A389969500' tingTransaction.
00006C3E C1829699A38584D5                   9536          DC    X'C1829699A38584D596A3C18392858400' AbortedNotAcked.
00006C4E C1829699A3818293                   9537          DC    X'C1829699A381829385C5999996990000' AbortableError..
                                                                                                                           Page  192 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006C5E D9C5D7D3E87AD5D6                   9538          DC    X'D9C5D7D3E87AD5D6D5C50000D9C5D7D3' REPLY.NONE..REPL
00006C6E E87AC6C5E3C3C800                   9539          DC    X'E87AC6C5E3C3C800D9C5D7D3E87AC5D9' Y.FETCH.REPLY.ER
00006C7E D900D9C5D7D3E87A                   9540          DC    X'D900D9C5D7D3E87AC3D6D5E2E4D4C5D9' R.REPLY.CONSUMER
00006C8E 6DC5D9D90000D9C5                   9541          DC    X'6DC5D9D90000D9C5D7D3E87AC4D90000' .ERR..REPLY.DR..
00006C9E D9C5D7D3E87AE2E3                   9542          DC    X'D9C5D7D3E87AE2E3C1E3E200D9C5D7D3' REPLY.STATS.REPL
00006CAE E87AD6C6C6E2C5E3                   9543          DC    X'E87AD6C6C6E2C5E36DC3D6D4D4C9E300' Y.OFFSET.COMMIT.
00006CBE D9C5D7D3E87AD5D6                   9544          DC    X'D9C5D7D3E87AD5D6C4C56DE4D7C4C1E3' REPLY.NODE.UPDAT
00006CCE C500D9C5D7D3E87A                   9545          DC    X'C500D9C5D7D3E87AE7D4C9E36DC2E4C6' E.REPLY.XMIT.BUF
00006CDE 0000D9C5D7D3E87A                   9546          DC    X'0000D9C5D7D3E87AD9C5C3E56DC2E4C6' ..REPLY.RECV.BUF
00006CEE 0000D9C5D7D3E87A                   9547          DC    X'0000D9C5D7D3E87AE7D4C9E36DD9C5E3' ..REPLY.XMIT.RET
00006CFE D9E80000D9C5D7D3                   9548          DC    X'D9E80000D9C5D7D3E87AC6C5E3C3C86D' RY..REPLY.FETCH.
00006D0E E2E3C1D9E300D9C5                   9549          DC    X'E2E3C1D9E300D9C5D7D3E87AC6C5E3C3' START.REPLY.FETC
00006D1E C86DE2E3D6D70000                   9550          DC    X'C86DE2E3D6D70000D9C5D7D3E87AE2C5' H.STOP..REPLY.SE
00006D2E C5D20000D9C5D7D3                   9551          DC    X'C5D20000D9C5D7D3E87AD7C1E4E2C500' EK..REPLY.PAUSE.
00006D3E D9C5D7D3E87AD6C6                   9552          DC    X'D9C5D7D3E87AD6C6C6E2C5E36DC6C5E3' REPLY.OFFSET.FET
00006D4E C3C80000D9C5D7D3                   9553          DC    X'C3C80000D9C5D7D3E87AD7C1D9E3C9E3' CH..REPLY.PARTIT
00006D5E C9D6D56DD1D6C9D5                   9554          DC    X'C9D6D56DD1D6C9D50000D9C5D7D3E87A' ION.JOIN..REPLY.
00006D6E D7C1D9E3C9E3C9D6                   9555          DC    X'D7C1D9E3C9E3C9D6D56DD3C5C1E5C500' PARTITION.LEAVE.
00006D7E D9C5D7D3E87AD9C5                   9556          DC    X'D9C5D7D3E87AD9C5C2C1D3C1D5C3C500' REPLY.REBALANCE.
00006D8E D9C5D7D3E87AE3C5                   9557          DC    X'D9C5D7D3E87AE3C5D9D4C9D5C1E3C500' REPLY.TERMINATE.
00006D9E D9C5D7D3E87AC3D6                   9558          DC    X'D9C5D7D3E87AC3D6D6D9C46DD8E4C5D9' REPLY.COORD.QUER
00006DAE E800D9C5D7D3E87A                   9559          DC    X'E800D9C5D7D3E87AE2E4C2E2C3D9C9C2' Y.REPLY.SUBSCRIB
00006DBE C500D9C5D7D3E87A                   9560          DC    X'C500D9C5D7D3E87AC1E2E2C9C7D50000' E.REPLY.ASSIGN..
00006DCE D9C5D7D3E87AC7C5                   9561          DC    X'D9C5D7D3E87AC7C5E36DE2E4C2E2C3D9' REPLY.GET.SUBSCR
00006DDE C9D7E3C9D6D50000                   9562          DC    X'C9D7E3C9D6D50000D9C5D7D3E87AC7C5' IPTION..REPLY.GE
00006DEE E36DC1E2E2C9C7D5                   9563          DC    X'E36DC1E2E2C9C7D5D4C5D5E30000D9C5' T.ASSIGNMENT..RE
00006DFE D7D3E87AE3C8D9D6                   9564          DC    X'D7D3E87AE3C8D9D6E3E3D3C50000D9C5' PLY.THROTTLE..RE
00006E0E D7D3E87AD5C1D4C5                   9565          DC    X'D7D3E87AD5C1D4C50000D9C5D7D3E87A' PLY.NAME..REPLY.
00006E1E C3C76DD4C5E3C1C4                   9566          DC    X'C3C76DD4C5E3C1C4C1E3C100D9C5D7D3' CG.METADATA.REPL
00006E2E E87AD6C6C6E2C5E3                   9567          DC    X'E87AD6C6C6E2C5E36DD9C5E2C5E30000' Y.OFFSET.RESET..
00006E3E D9C5D7D3E87AD4C5                   9568          DC    X'D9C5D7D3E87AD4C5E3C1C4C1E3C10000' REPLY.METADATA..
00006E4E D9C5D7D3E87AD3D6                   9569          DC    X'D9C5D7D3E87AD3D6C700D9C5D7D3E87A' REPLY.LOG.REPLY.
00006E5E E6C1D2C5E4D70000                   9570          DC    X'E6C1D2C5E4D70000D9C5D7D3E87AC3D9' WAKEUP..REPLY.CR
00006E6E C5C1E3C5E3D6D7C9                   9571          DC    X'C5C1E3C5E3D6D7C9C3E20000D9C5D7D3' EATETOPICS..REPL
00006E7E E87AC4C5D3C5E3C5                   9572          DC    X'E87AC4C5D3C5E3C5E3D6D7C9C3E20000' Y.DELETETOPICS..
00006E8E D9C5D7D3E87AC3D9                   9573          DC    X'D9C5D7D3E87AC3D9C5C1E3C5D7C1D9E3' REPLY.CREATEPART
00006E9E C9E3C9D6D5E20000                   9574          DC    X'C9E3C9D6D5E20000D9C5D7D3E87AC1D3' ITIONS..REPLY.AL
00006EAE E3C5D9C3D6D5C6C9                   9575          DC    X'E3C5D9C3D6D5C6C9C7E20000D9C5D7D3' TERCONFIGS..REPL
00006EBE E87AC4C5E2C3D9C9                   9576          DC    X'E87AC4C5E2C3D9C9C2C5C3D6D5C6C9C7' Y.DESCRIBECONFIG
00006ECE E200D9C5D7D3E87A                   9577          DC    X'E200D9C5D7D3E87AC4C5D3C5E3C5D9C5' S.REPLY.DELETERE
00006EDE C3D6D9C4E200D9C5                   9578          DC    X'C3D6D9C4E200D9C5D7D3E87AC4C5D3C5' CORDS.REPLY.DELE
00006EEE E3C5C7D9D6E4D7E2                   9579          DC    X'E3C5C7D9D6E4D7E20000D9C5D7D3E87A' TEGROUPS..REPLY.
00006EFE C4C5D3C5E3C5C3D6                   9580          DC    X'C4C5D3C5E3C5C3D6D5E2E4D4C5D9C7D9' DELETECONSUMERGR
00006F0E D6E4D7D6C6C6E2C5                   9581          DC    X'D6E4D7D6C6C6E2C5E3E20000D9C5D7D3' OUPOFFSETS..REPL
00006F1E E87AC1C4D4C9D56D                   9582          DC    X'E87AC1C4D4C9D56DC6C1D5D6E4E30000' Y.ADMIN.FANOUT..
00006F2E D9C5D7D3E87AC1C4                   9583          DC    X'D9C5D7D3E87AC1C4D4C9D56DD9C5E2E4' REPLY.ADMIN.RESU
00006F3E D3E30000D9C5D7D3                   9584          DC    X'D3E30000D9C5D7D3E87AD7E4D9C7C500' LT..REPLY.PURGE.
00006F4E D9C5D7D3E87AC3D6                   9585          DC    X'D9C5D7D3E87AC3D6D5D5C5C3E300D9C5' REPLY.CONNECT.RE
00006F5E D7D3E87AD6C1E4E3                   9586          DC    X'D7D3E87AD6C1E4E3C8C2C5C1D9C5D96D' PLY.OAUTHBEARER.
00006F6E D9C5C6D9C5E2C800                   9587          DC    X'D9C5C6D9C5E2C800D9C5D7D3E87AD4D6' REFRESH.REPLY.MO
00006F7E C3D20000D9C5D7D3                   9588          DC    X'C3D20000D9C5D7D3E87AC2D9D6D2C5D9' CK..REPLY.BROKER
00006F8E 6DD4D6D5C9E3D6D9                   9589          DC    X'6DD4D6D5C9E3D6D90000D9C5D7D3E87A' .MONITOR..REPLY.
                                                                                                                           Page  193 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006F9E E3E7D500D9C5D7D3                   9590          DC    X'E3E7D500D9C5D7D3E87AC7C5E36DD9C5' TXN.REPLY.GET.RE
00006FAE C2C1D3C1D5C3C56D                   9591          DC    X'C2C1D3C1D5C3C56DD7D9D6E3D6C3D6D3' BALANCE.PROTOCOL
00006FBE 0000D9C5D7D3E87A                   9592          DC    X'0000D9C5D7D3E87AD3C5C1C4C5D9E200' ..REPLY.LEADERS.
00006FCE D9C5D7D3E87AC2C1                   9593          DC    X'D9C5D7D3E87AC2C1D9D9C9C5D900'     REPLY.BARRIER.
                                            9594 *
                                            9595 *   Rent ref/def section
                                            9596 *
                                            9597 @Drd_kafka_op_cnt ALIAS X'99846D92818692816D96976D8395A3'
                                            9598          ENTRY @Drd_kafka_op_cnt
00006FDC                                    9599 @Drd_kafka_op_cnt DS 0H
                                            9600 @Erd_kafka_yield_thread ALIAS X'99846D92818692816DA8898593846DA38899858*
                                                                184'
                                            9601          EXTRN @Erd_kafka_yield_thread
                                            9602 *
                                            9603 *
                                            9604 *   Re-entrant Data Initialization Section
                                            9605 *
                                            9606 @@INIT@  ALIAS C'rdkafka_op:'
00006FE0                00006FE0 00001838   9607 @@INIT@  CSECT
                                            9608 @@INIT@  AMODE ANY
                                            9609 @@INIT@  RMODE ANY
00006FE0 05                                 9610          DC    XL1'5'
00006FE1 000000                             9611          DC    AL3(0)
00006FE4 00000120                           9612          DC    AL4(288)
00006FE8 00000000                           9613          DC    4X'00'
00006FEC 00000000                           9614          DC    Q(@@STATIC)
00006FF0 00000000                           9615          DC    X'00000000'
00006FF4 00000001                           9616          DC    X'00000001'
00006FF8 00000000                           9617          DC    X'00000000'
00006FFC 000000FF                           9618          DC    X'000000FF'
00007000 0102039C09867F97                   9619          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00007010 1112139D85088718                   9620          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00007020 818283840A171B88                   9621          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00007030 9116939495960498                   9622          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00007040 A0E2E4E0E1E3E5E7                   9623          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00007050 E9EAEBE8EDEEEFEC                   9624          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00007060 2FC2C4C0C1C3C5C7                   9625          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00007070 C9CACBC8CDCECFCC                   9626          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00007080 6162636465666768                   9627          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00007090 6A6B6C6D6E6F7071                   9628          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
000070A0 7E73747576777879                   9629          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
000070B0 A3A5B7A9A7B6BCBD                   9630          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
000070C0 4142434445464748                   9631          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
000070D0 4A4B4C4D4E4F5051                   9632          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
000070E0 F753545556575859                   9633          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
000070F0 3132333435363738                   9634          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            9635 *
00007100 05                                 9636          DC    XL1'5'
00007101 000000                             9637          DC    AL3(0)
00007104 000001E0                           9638          DC    AL4(480)
00007108 00000000                           9639          DC    4X'00'
0000710C 00000000                           9640          DC    Q(@@STATIC)
                                                                                                                           Page  194 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007110 00000000                           9641          DC    X'00000000'
00007114 00000101                           9642          DC    X'00000101'
00007118 00000000                           9643          DC    X'00000000'
0000711C 000000A0                           9644          DC    X'000000A0'
00007120 010203372D2E2F16                   9645          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00007130 1112133C3D322618                   9646          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00007140 5A7F7B5B6C507D4D                   9647          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00007150 F1F2F3F4F5F6F7F8                   9648          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00007160 C1C2C3C4C5C6C7C8                   9649          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00007170 D8D9E2E3E4E5E6E7                   9650          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00007180 8182838485868788                   9651          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00007190 9899A2A3A4A5A6A7                   9652          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
000071A0 2122232425061728                   9653          DC    X'2122232425061728292A2B2C090A1B30' ................
000071B0 311A333435360838                   9654          DC    X'311A333435360838393A3B04143EFF80' ................
                                            9655 *
000071C0 05                                 9656          DC    XL1'5'
000071C1 000000                             9657          DC    AL3(0)
000071C4 00000208                           9658          DC    AL4(520)
000071C8 00000000                           9659          DC    4X'00'
000071CC 00000000                           9660          DC    Q(@@STATIC)
000071D0 00000000                           9661          DC    X'00000000'
000071D4 000001C0                           9662          DC    X'000001C0'
000071D8 00000000                           9663          DC    X'00000000'
000071DC 00000001                           9664          DC    X'00000001'
000071E0 8A40404040404040                   9665          DC    X'8A40404040404040'                 ........
                                            9666 *
000071E8 05                                 9667          DC    XL1'5'
000071E9 000000                             9668          DC    AL3(0)
000071EC 00000230                           9669          DC    AL4(560)
000071F0 00000000                           9670          DC    4X'00'
000071F4 00000000                           9671          DC    Q(@@STATIC)
000071F8 00000000                           9672          DC    X'00000000'
000071FC 000001E0                           9673          DC    X'000001E0'
00007200 00000000                           9674          DC    X'00000000'
00007204 00000001                           9675          DC    X'00000001'
00007208 8B40404040404040                   9676          DC    X'8B40404040404040'                 ........
                                            9677 *
00007210 0D                                 9678          DC    XL1'D'
00007211 000000                             9679          DC    AL3(0)
00007214 00000258                           9680          DC    AL4(600)
00007218 00000000                           9681          DC    4X'00'
0000721C 00000000                           9682          DC    Q(@@STATIC)
00007220 00000000                           9683          DC    X'00000000'
00007224 00000220                           9684          DC    X'00000220'
00007228 0000000000005F80                   9685          DC    ADL8(@DATA)
00007230 00000000                           9686          DC    X'00000000'
00007234 000007A4                           9687          DC    X'000007A4'
                                            9688 *
00007238 0D                                 9689          DC    XL1'D'
00007239 000000                             9690          DC    AL3(0)
0000723C 00000280                           9691          DC    AL4(640)
00007240 00000000                           9692          DC    4X'00'
                                                                                                                           Page  195 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007244 00000000                           9693          DC    Q(@@STATIC)
00007248 00000000                           9694          DC    X'00000000'
0000724C 00000228                           9695          DC    X'00000228'
00007250 0000000000005F80                   9696          DC    ADL8(@DATA)
00007258 00000000                           9697          DC    X'00000000'
0000725C 000007AC                           9698          DC    X'000007AC'
                                            9699 *
00007260 0D                                 9700          DC    XL1'D'
00007261 000000                             9701          DC    AL3(0)
00007264 000002A8                           9702          DC    AL4(680)
00007268 00000000                           9703          DC    4X'00'
0000726C 00000000                           9704          DC    Q(@@STATIC)
00007270 00000000                           9705          DC    X'00000000'
00007274 00000230                           9706          DC    X'00000230'
00007278 0000000000005F80                   9707          DC    ADL8(@DATA)
00007280 00000000                           9708          DC    X'00000000'
00007284 000007B2                           9709          DC    X'000007B2'
                                            9710 *
00007288 0D                                 9711          DC    XL1'D'
00007289 000000                             9712          DC    AL3(0)
0000728C 000002D0                           9713          DC    AL4(720)
00007290 00000000                           9714          DC    4X'00'
00007294 00000000                           9715          DC    Q(@@STATIC)
00007298 00000000                           9716          DC    X'00000000'
0000729C 00000238                           9717          DC    X'00000238'
000072A0 0000000000005F80                   9718          DC    ADL8(@DATA)
000072A8 00000000                           9719          DC    X'00000000'
000072AC 000007BA                           9720          DC    X'000007BA'
                                            9721 *
000072B0 0D                                 9722          DC    XL1'D'
000072B1 000000                             9723          DC    AL3(0)
000072B4 000002F8                           9724          DC    AL4(760)
000072B8 00000000                           9725          DC    4X'00'
000072BC 00000000                           9726          DC    Q(@@STATIC)
000072C0 00000000                           9727          DC    X'00000000'
000072C4 00000240                           9728          DC    X'00000240'
000072C8 0000000000005F80                   9729          DC    ADL8(@DATA)
000072D0 00000000                           9730          DC    X'00000000'
000072D4 000007C4                           9731          DC    X'000007C4'
                                            9732 *
000072D8 0D                                 9733          DC    XL1'D'
000072D9 000000                             9734          DC    AL3(0)
000072DC 00000320                           9735          DC    AL4(800)
000072E0 00000000                           9736          DC    4X'00'
000072E4 00000000                           9737          DC    Q(@@STATIC)
000072E8 00000000                           9738          DC    X'00000000'
000072EC 00000248                           9739          DC    X'00000248'
000072F0 0000000000005F80                   9740          DC    ADL8(@DATA)
000072F8 00000000                           9741          DC    X'00000000'
000072FC 000007D2                           9742          DC    X'000007D2'
                                            9743 *
00007300 0D                                 9744          DC    XL1'D'
                                                                                                                           Page  196 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007301 000000                             9745          DC    AL3(0)
00007304 00000348                           9746          DC    AL4(840)
00007308 00000000                           9747          DC    4X'00'
0000730C 00000000                           9748          DC    Q(@@STATIC)
00007310 00000000                           9749          DC    X'00000000'
00007314 00000250                           9750          DC    X'00000250'
00007318 0000000000005F80                   9751          DC    ADL8(@DATA)
00007320 00000000                           9752          DC    X'00000000'
00007324 000007DE                           9753          DC    X'000007DE'
                                            9754 *
00007328 0D                                 9755          DC    XL1'D'
00007329 000000                             9756          DC    AL3(0)
0000732C 00000370                           9757          DC    AL4(880)
00007330 00000000                           9758          DC    4X'00'
00007334 00000000                           9759          DC    Q(@@STATIC)
00007338 00000000                           9760          DC    X'00000000'
0000733C 00000258                           9761          DC    X'00000258'
00007340 0000000000005F80                   9762          DC    ADL8(@DATA)
00007348 00000000                           9763          DC    X'00000000'
0000734C 000007EE                           9764          DC    X'000007EE'
                                            9765 *
00007350 0D                                 9766          DC    XL1'D'
00007351 000000                             9767          DC    AL3(0)
00007354 00000398                           9768          DC    AL4(920)
00007358 00000000                           9769          DC    4X'00'
0000735C 00000000                           9770          DC    Q(@@STATIC)
00007360 00000000                           9771          DC    X'00000000'
00007364 00000260                           9772          DC    X'00000260'
00007368 0000000000005F80                   9773          DC    ADL8(@DATA)
00007370 00000000                           9774          DC    X'00000000'
00007374 00000802                           9775          DC    X'00000802'
                                            9776 *
00007378 0D                                 9777          DC    XL1'D'
00007379 000000                             9778          DC    AL3(0)
0000737C 000003C0                           9779          DC    AL4(960)
00007380 00000000                           9780          DC    4X'00'
00007384 00000000                           9781          DC    Q(@@STATIC)
00007388 00000000                           9782          DC    X'00000000'
0000738C 00000268                           9783          DC    X'00000268'
00007390 0000000000005F80                   9784          DC    ADL8(@DATA)
00007398 00000000                           9785          DC    X'00000000'
0000739C 00000810                           9786          DC    X'00000810'
                                            9787 *
000073A0 0D                                 9788          DC    XL1'D'
000073A1 000000                             9789          DC    AL3(0)
000073A4 000003E8                           9790          DC    AL4(1000)
000073A8 00000000                           9791          DC    4X'00'
000073AC 00000000                           9792          DC    Q(@@STATIC)
000073B0 00000000                           9793          DC    X'00000000'
000073B4 00000270                           9794          DC    X'00000270'
000073B8 0000000000005F80                   9795          DC    ADL8(@DATA)
000073C0 00000000                           9796          DC    X'00000000'
                                                                                                                           Page  197 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000073C4 0000081C                           9797          DC    X'0000081C'
                                            9798 *
000073C8 0D                                 9799          DC    XL1'D'
000073C9 000000                             9800          DC    AL3(0)
000073CC 00000410                           9801          DC    AL4(1040)
000073D0 00000000                           9802          DC    4X'00'
000073D4 00000000                           9803          DC    Q(@@STATIC)
000073D8 00000000                           9804          DC    X'00000000'
000073DC 00000278                           9805          DC    X'00000278'
000073E0 0000000000005F80                   9806          DC    ADL8(@DATA)
000073E8 00000000                           9807          DC    X'00000000'
000073EC 0000082C                           9808          DC    X'0000082C'
                                            9809 *
000073F0 0D                                 9810          DC    XL1'D'
000073F1 000000                             9811          DC    AL3(0)
000073F4 00000438                           9812          DC    AL4(1080)
000073F8 00000000                           9813          DC    4X'00'
000073FC 00000000                           9814          DC    Q(@@STATIC)
00007400 00000000                           9815          DC    X'00000000'
00007404 00000280                           9816          DC    X'00000280'
00007408 0000000000005F80                   9817          DC    ADL8(@DATA)
00007410 00000000                           9818          DC    X'00000000'
00007414 00000836                           9819          DC    X'00000836'
                                            9820 *
00007418 0D                                 9821          DC    XL1'D'
00007419 000000                             9822          DC    AL3(0)
0000741C 00000460                           9823          DC    AL4(1120)
00007420 00000000                           9824          DC    4X'00'
00007424 00000000                           9825          DC    Q(@@STATIC)
00007428 00000000                           9826          DC    X'00000000'
0000742C 00000288                           9827          DC    X'00000288'
00007430 0000000000005F80                   9828          DC    ADL8(@DATA)
00007438 00000000                           9829          DC    X'00000000'
0000743C 00000840                           9830          DC    X'00000840'
                                            9831 *
00007440 0D                                 9832          DC    XL1'D'
00007441 000000                             9833          DC    AL3(0)
00007444 00000488                           9834          DC    AL4(1160)
00007448 00000000                           9835          DC    4X'00'
0000744C 00000000                           9836          DC    Q(@@STATIC)
00007450 00000000                           9837          DC    X'00000000'
00007454 00000290                           9838          DC    X'00000290'
00007458 0000000000005F80                   9839          DC    ADL8(@DATA)
00007460 00000000                           9840          DC    X'00000000'
00007464 0000084C                           9841          DC    X'0000084C'
                                            9842 *
00007468 0D                                 9843          DC    XL1'D'
00007469 000000                             9844          DC    AL3(0)
0000746C 000004B0                           9845          DC    AL4(1200)
00007470 00000000                           9846          DC    4X'00'
00007474 00000000                           9847          DC    Q(@@STATIC)
00007478 00000000                           9848          DC    X'00000000'
                                                                                                                           Page  198 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000747C 00000298                           9849          DC    X'00000298'
00007480 0000000000005F80                   9850          DC    ADL8(@DATA)
00007488 00000000                           9851          DC    X'00000000'
0000748C 00000856                           9852          DC    X'00000856'
                                            9853 *
00007490 0D                                 9854          DC    XL1'D'
00007491 000000                             9855          DC    AL3(0)
00007494 000004D8                           9856          DC    AL4(1240)
00007498 00000000                           9857          DC    4X'00'
0000749C 00000000                           9858          DC    Q(@@STATIC)
000074A0 00000000                           9859          DC    X'00000000'
000074A4 000002A0                           9860          DC    X'000002A0'
000074A8 0000000000005F80                   9861          DC    ADL8(@DATA)
000074B0 00000000                           9862          DC    X'00000000'
000074B4 00000866                           9863          DC    X'00000866'
                                            9864 *
000074B8 0D                                 9865          DC    XL1'D'
000074B9 000000                             9866          DC    AL3(0)
000074BC 00000500                           9867          DC    AL4(1280)
000074C0 00000000                           9868          DC    4X'00'
000074C4 00000000                           9869          DC    Q(@@STATIC)
000074C8 00000000                           9870          DC    X'00000000'
000074CC 000002A8                           9871          DC    X'000002A8'
000074D0 0000000000005F80                   9872          DC    ADL8(@DATA)
000074D8 00000000                           9873          DC    X'00000000'
000074DC 00000872                           9874          DC    X'00000872'
                                            9875 *
000074E0 0D                                 9876          DC    XL1'D'
000074E1 000000                             9877          DC    AL3(0)
000074E4 00000528                           9878          DC    AL4(1320)
000074E8 00000000                           9879          DC    4X'00'
000074EC 00000000                           9880          DC    Q(@@STATIC)
000074F0 00000000                           9881          DC    X'00000000'
000074F4 000002B0                           9882          DC    X'000002B0'
000074F8 0000000000005F80                   9883          DC    ADL8(@DATA)
00007500 00000000                           9884          DC    X'00000000'
00007504 00000880                           9885          DC    X'00000880'
                                            9886 *
00007508 0D                                 9887          DC    XL1'D'
00007509 000000                             9888          DC    AL3(0)
0000750C 00000550                           9889          DC    AL4(1360)
00007510 00000000                           9890          DC    4X'00'
00007514 00000000                           9891          DC    Q(@@STATIC)
00007518 00000000                           9892          DC    X'00000000'
0000751C 000002B8                           9893          DC    X'000002B8'
00007520 0000000000005F80                   9894          DC    ADL8(@DATA)
00007528 00000000                           9895          DC    X'00000000'
0000752C 0000088C                           9896          DC    X'0000088C'
                                            9897 *
00007530 0D                                 9898          DC    XL1'D'
00007531 000000                             9899          DC    AL3(0)
00007534 00000578                           9900          DC    AL4(1400)
                                                                                                                           Page  199 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007538 00000000                           9901          DC    4X'00'
0000753C 00000000                           9902          DC    Q(@@STATIC)
00007540 00000000                           9903          DC    X'00000000'
00007544 000002C0                           9904          DC    X'000002C0'
00007548 0000000000005F80                   9905          DC    ADL8(@DATA)
00007550 00000000                           9906          DC    X'00000000'
00007554 0000089A                           9907          DC    X'0000089A'
                                            9908 *
00007558 0D                                 9909          DC    XL1'D'
00007559 000000                             9910          DC    AL3(0)
0000755C 000005A0                           9911          DC    AL4(1440)
00007560 00000000                           9912          DC    4X'00'
00007564 00000000                           9913          DC    Q(@@STATIC)
00007568 00000000                           9914          DC    X'00000000'
0000756C 000002C8                           9915          DC    X'000002C8'
00007570 0000000000005F80                   9916          DC    ADL8(@DATA)
00007578 00000000                           9917          DC    X'00000000'
0000757C 000008A8                           9918          DC    X'000008A8'
                                            9919 *
00007580 0D                                 9920          DC    XL1'D'
00007581 000000                             9921          DC    AL3(0)
00007584 000005C8                           9922          DC    AL4(1480)
00007588 00000000                           9923          DC    4X'00'
0000758C 00000000                           9924          DC    Q(@@STATIC)
00007590 00000000                           9925          DC    X'00000000'
00007594 000002D0                           9926          DC    X'000002D0'
00007598 0000000000005F80                   9927          DC    ADL8(@DATA)
000075A0 00000000                           9928          DC    X'00000000'
000075A4 000008B6                           9929          DC    X'000008B6'
                                            9930 *
000075A8 0D                                 9931          DC    XL1'D'
000075A9 000000                             9932          DC    AL3(0)
000075AC 000005F0                           9933          DC    AL4(1520)
000075B0 00000000                           9934          DC    4X'00'
000075B4 00000000                           9935          DC    Q(@@STATIC)
000075B8 00000000                           9936          DC    X'00000000'
000075BC 000002D8                           9937          DC    X'000002D8'
000075C0 0000000000005F80                   9938          DC    ADL8(@DATA)
000075C8 00000000                           9939          DC    X'00000000'
000075CC 000008C6                           9940          DC    X'000008C6'
                                            9941 *
000075D0 0D                                 9942          DC    XL1'D'
000075D1 000000                             9943          DC    AL3(0)
000075D4 00000618                           9944          DC    AL4(1560)
000075D8 00000000                           9945          DC    4X'00'
000075DC 00000000                           9946          DC    Q(@@STATIC)
000075E0 00000000                           9947          DC    X'00000000'
000075E4 000002E0                           9948          DC    X'000002E0'
000075E8 0000000000005F80                   9949          DC    ADL8(@DATA)
000075F0 00000000                           9950          DC    X'00000000'
000075F4 000008DC                           9951          DC    X'000008DC'
                                            9952 *
                                                                                                                           Page  200 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000075F8 0D                                 9953          DC    XL1'D'
000075F9 000000                             9954          DC    AL3(0)
000075FC 00000640                           9955          DC    AL4(1600)
00007600 00000000                           9956          DC    4X'00'
00007604 00000000                           9957          DC    Q(@@STATIC)
00007608 00000000                           9958          DC    X'00000000'
0000760C 000002E8                           9959          DC    X'000002E8'
00007610 0000000000005F80                   9960          DC    ADL8(@DATA)
00007618 00000000                           9961          DC    X'00000000'
0000761C 000008F0                           9962          DC    X'000008F0'
                                            9963 *
00007620 0D                                 9964          DC    XL1'D'
00007621 000000                             9965          DC    AL3(0)
00007624 00000668                           9966          DC    AL4(1640)
00007628 00000000                           9967          DC    4X'00'
0000762C 00000000                           9968          DC    Q(@@STATIC)
00007630 00000000                           9969          DC    X'00000000'
00007634 000002F0                           9970          DC    X'000002F0'
00007638 0000000000005F80                   9971          DC    ADL8(@DATA)
00007640 00000000                           9972          DC    X'00000000'
00007644 00000900                           9973          DC    X'00000900'
                                            9974 *
00007648 0D                                 9975          DC    XL1'D'
00007649 000000                             9976          DC    AL3(0)
0000764C 00000690                           9977          DC    AL4(1680)
00007650 00000000                           9978          DC    4X'00'
00007654 00000000                           9979          DC    Q(@@STATIC)
00007658 00000000                           9980          DC    X'00000000'
0000765C 000002F8                           9981          DC    X'000002F8'
00007660 0000000000005F80                   9982          DC    ADL8(@DATA)
00007668 00000000                           9983          DC    X'00000000'
0000766C 00000908                           9984          DC    X'00000908'
                                            9985 *
00007670 0D                                 9986          DC    XL1'D'
00007671 000000                             9987          DC    AL3(0)
00007674 000006B8                           9988          DC    AL4(1720)
00007678 00000000                           9989          DC    4X'00'
0000767C 00000000                           9990          DC    Q(@@STATIC)
00007680 00000000                           9991          DC    X'00000000'
00007684 00000300                           9992          DC    X'00000300'
00007688 0000000000005F80                   9993          DC    ADL8(@DATA)
00007690 00000000                           9994          DC    X'00000000'
00007694 00000918                           9995          DC    X'00000918'
                                            9996 *
00007698 0D                                 9997          DC    XL1'D'
00007699 000000                             9998          DC    AL3(0)
0000769C 000006E0                           9999          DC    AL4(1760)
000076A0 00000000                          10000          DC    4X'00'
000076A4 00000000                          10001          DC    Q(@@STATIC)
000076A8 00000000                          10002          DC    X'00000000'
000076AC 00000308                          10003          DC    X'00000308'
000076B0 0000000000005F80                  10004          DC    ADL8(@DATA)
                                                                                                                           Page  201 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000076B8 00000000                          10005          DC    X'00000000'
000076BC 00000928                          10006          DC    X'00000928'
                                           10007 *
000076C0 0D                                10008          DC    XL1'D'
000076C1 000000                            10009          DC    AL3(0)
000076C4 00000708                          10010          DC    AL4(1800)
000076C8 00000000                          10011          DC    4X'00'
000076CC 00000000                          10012          DC    Q(@@STATIC)
000076D0 00000000                          10013          DC    X'00000000'
000076D4 00000310                          10014          DC    X'00000310'
000076D8 0000000000005F80                  10015          DC    ADL8(@DATA)
000076E0 00000000                          10016          DC    X'00000000'
000076E4 00000936                          10017          DC    X'00000936'
                                           10018 *
000076E8 0D                                10019          DC    XL1'D'
000076E9 000000                            10020          DC    AL3(0)
000076EC 00000730                          10021          DC    AL4(1840)
000076F0 00000000                          10022          DC    4X'00'
000076F4 00000000                          10023          DC    Q(@@STATIC)
000076F8 00000000                          10024          DC    X'00000000'
000076FC 00000318                          10025          DC    X'00000318'
00007700 0000000000005F80                  10026          DC    ADL8(@DATA)
00007708 00000000                          10027          DC    X'00000000'
0000770C 00000942                          10028          DC    X'00000942'
                                           10029 *
00007710 0D                                10030          DC    XL1'D'
00007711 000000                            10031          DC    AL3(0)
00007714 00000758                          10032          DC    AL4(1880)
00007718 00000000                          10033          DC    4X'00'
0000771C 00000000                          10034          DC    Q(@@STATIC)
00007720 00000000                          10035          DC    X'00000000'
00007724 00000320                          10036          DC    X'00000320'
00007728 0000000000005F80                  10037          DC    ADL8(@DATA)
00007730 00000000                          10038          DC    X'00000000'
00007734 0000094E                          10039          DC    X'0000094E'
                                           10040 *
00007738 0D                                10041          DC    XL1'D'
00007739 000000                            10042          DC    AL3(0)
0000773C 00000780                          10043          DC    AL4(1920)
00007740 00000000                          10044          DC    4X'00'
00007744 00000000                          10045          DC    Q(@@STATIC)
00007748 00000000                          10046          DC    X'00000000'
0000774C 00000328                          10047          DC    X'00000328'
00007750 0000000000005F80                  10048          DC    ADL8(@DATA)
00007758 00000000                          10049          DC    X'00000000'
0000775C 0000095E                          10050          DC    X'0000095E'
                                           10051 *
00007760 0D                                10052          DC    XL1'D'
00007761 000000                            10053          DC    AL3(0)
00007764 000007A8                          10054          DC    AL4(1960)
00007768 00000000                          10055          DC    4X'00'
0000776C 00000000                          10056          DC    Q(@@STATIC)
                                                                                                                           Page  202 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007770 00000000                          10057          DC    X'00000000'
00007774 00000330                          10058          DC    X'00000330'
00007778 0000000000005F80                  10059          DC    ADL8(@DATA)
00007780 00000000                          10060          DC    X'00000000'
00007784 0000096C                          10061          DC    X'0000096C'
                                           10062 *
00007788 0D                                10063          DC    XL1'D'
00007789 000000                            10064          DC    AL3(0)
0000778C 000007D0                          10065          DC    AL4(2000)
00007790 00000000                          10066          DC    4X'00'
00007794 00000000                          10067          DC    Q(@@STATIC)
00007798 00000000                          10068          DC    X'00000000'
0000779C 00000338                          10069          DC    X'00000338'
000077A0 0000000000005F80                  10070          DC    ADL8(@DATA)
000077A8 00000000                          10071          DC    X'00000000'
000077AC 00000980                          10072          DC    X'00000980'
                                           10073 *
000077B0 0D                                10074          DC    XL1'D'
000077B1 000000                            10075          DC    AL3(0)
000077B4 000007F8                          10076          DC    AL4(2040)
000077B8 00000000                          10077          DC    4X'00'
000077BC 00000000                          10078          DC    Q(@@STATIC)
000077C0 00000000                          10079          DC    X'00000000'
000077C4 00000340                          10080          DC    X'00000340'
000077C8 0000000000005F80                  10081          DC    ADL8(@DATA)
000077D0 00000000                          10082          DC    X'00000000'
000077D4 00000990                          10083          DC    X'00000990'
                                           10084 *
000077D8 0D                                10085          DC    XL1'D'
000077D9 000000                            10086          DC    AL3(0)
000077DC 00000820                          10087          DC    AL4(2080)
000077E0 00000000                          10088          DC    4X'00'
000077E4 00000000                          10089          DC    Q(@@STATIC)
000077E8 00000000                          10090          DC    X'00000000'
000077EC 00000348                          10091          DC    X'00000348'
000077F0 0000000000005F80                  10092          DC    ADL8(@DATA)
000077F8 00000000                          10093          DC    X'00000000'
000077FC 000009A2                          10094          DC    X'000009A2'
                                           10095 *
00007800 0D                                10096          DC    XL1'D'
00007801 000000                            10097          DC    AL3(0)
00007804 00000848                          10098          DC    AL4(2120)
00007808 00000000                          10099          DC    4X'00'
0000780C 00000000                          10100          DC    Q(@@STATIC)
00007810 00000000                          10101          DC    X'00000000'
00007814 00000350                          10102          DC    X'00000350'
00007818 0000000000005F80                  10103          DC    ADL8(@DATA)
00007820 00000000                          10104          DC    X'00000000'
00007824 000009B4                          10105          DC    X'000009B4'
                                           10106 *
00007828 0D                                10107          DC    XL1'D'
00007829 000000                            10108          DC    AL3(0)
                                                                                                                           Page  203 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000782C 00000870                          10109          DC    AL4(2160)
00007830 00000000                          10110          DC    4X'00'
00007834 00000000                          10111          DC    Q(@@STATIC)
00007838 00000000                          10112          DC    X'00000000'
0000783C 00000358                          10113          DC    X'00000358'
00007840 0000000000005F80                  10114          DC    ADL8(@DATA)
00007848 00000000                          10115          DC    X'00000000'
0000784C 000009CA                          10116          DC    X'000009CA'
                                           10117 *
00007850 0D                                10118          DC    XL1'D'
00007851 000000                            10119          DC    AL3(0)
00007854 00000898                          10120          DC    AL4(2200)
00007858 00000000                          10121          DC    4X'00'
0000785C 00000000                          10122          DC    Q(@@STATIC)
00007860 00000000                          10123          DC    X'00000000'
00007864 00000360                          10124          DC    X'00000360'
00007868 0000000000005F80                  10125          DC    ADL8(@DATA)
00007870 00000000                          10126          DC    X'00000000'
00007874 000009E0                          10127          DC    X'000009E0'
                                           10128 *
00007878 0D                                10129          DC    XL1'D'
00007879 000000                            10130          DC    AL3(0)
0000787C 000008C0                          10131          DC    AL4(2240)
00007880 00000000                          10132          DC    4X'00'
00007884 00000000                          10133          DC    Q(@@STATIC)
00007888 00000000                          10134          DC    X'00000000'
0000788C 00000368                          10135          DC    X'00000368'
00007890 0000000000005F80                  10136          DC    ADL8(@DATA)
00007898 00000000                          10137          DC    X'00000000'
0000789C 000009F6                          10138          DC    X'000009F6'
                                           10139 *
000078A0 0D                                10140          DC    XL1'D'
000078A1 000000                            10141          DC    AL3(0)
000078A4 000008E8                          10142          DC    AL4(2280)
000078A8 00000000                          10143          DC    4X'00'
000078AC 00000000                          10144          DC    Q(@@STATIC)
000078B0 00000000                          10145          DC    X'00000000'
000078B4 00000370                          10146          DC    X'00000370'
000078B8 0000000000005F80                  10147          DC    ADL8(@DATA)
000078C0 00000000                          10148          DC    X'00000000'
000078C4 00000A0E                          10149          DC    X'00000A0E'
                                           10150 *
000078C8 0D                                10151          DC    XL1'D'
000078C9 000000                            10152          DC    AL3(0)
000078CC 00000910                          10153          DC    AL4(2320)
000078D0 00000000                          10154          DC    4X'00'
000078D4 00000000                          10155          DC    Q(@@STATIC)
000078D8 00000000                          10156          DC    X'00000000'
000078DC 00000378                          10157          DC    X'00000378'
000078E0 0000000000005F80                  10158          DC    ADL8(@DATA)
000078E8 00000000                          10159          DC    X'00000000'
000078EC 00000A1C                          10160          DC    X'00000A1C'
                                                                                                                           Page  204 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           10161 *
000078F0 0D                                10162          DC    XL1'D'
000078F1 000000                            10163          DC    AL3(0)
000078F4 00000938                          10164          DC    AL4(2360)
000078F8 00000000                          10165          DC    4X'00'
000078FC 00000000                          10166          DC    Q(@@STATIC)
00007900 00000000                          10167          DC    X'00000000'
00007904 00000380                          10168          DC    X'00000380'
00007908 0000000000005F80                  10169          DC    ADL8(@DATA)
00007910 00000000                          10170          DC    X'00000000'
00007914 00000A30                          10171          DC    X'00000A30'
                                           10172 *
00007918 0D                                10173          DC    XL1'D'
00007919 000000                            10174          DC    AL3(0)
0000791C 00000960                          10175          DC    AL4(2400)
00007920 00000000                          10176          DC    4X'00'
00007924 00000000                          10177          DC    Q(@@STATIC)
00007928 00000000                          10178          DC    X'00000000'
0000792C 00000388                          10179          DC    X'00000388'
00007930 0000000000005F80                  10180          DC    ADL8(@DATA)
00007938 00000000                          10181          DC    X'00000000'
0000793C 00000A50                          10182          DC    X'00000A50'
                                           10183 *
00007940 0D                                10184          DC    XL1'D'
00007941 000000                            10185          DC    AL3(0)
00007944 00000988                          10186          DC    AL4(2440)
00007948 00000000                          10187          DC    4X'00'
0000794C 00000000                          10188          DC    Q(@@STATIC)
00007950 00000000                          10189          DC    X'00000000'
00007954 00000390                          10190          DC    X'00000390'
00007958 0000000000005F80                  10191          DC    ADL8(@DATA)
00007960 00000000                          10192          DC    X'00000000'
00007964 00000A74                          10193          DC    X'00000A74'
                                           10194 *
00007968 0D                                10195          DC    XL1'D'
00007969 000000                            10196          DC    AL3(0)
0000796C 000009B0                          10197          DC    AL4(2480)
00007970 00000000                          10198          DC    4X'00'
00007974 00000000                          10199          DC    Q(@@STATIC)
00007978 00000000                          10200          DC    X'00000000'
0000797C 00000398                          10201          DC    X'00000398'
00007980 0000000000005F80                  10202          DC    ADL8(@DATA)
00007988 00000000                          10203          DC    X'00000000'
0000798C 00000A96                          10204          DC    X'00000A96'
                                           10205 *
00007990 0D                                10206          DC    XL1'D'
00007991 000000                            10207          DC    AL3(0)
00007994 000009D8                          10208          DC    AL4(2520)
00007998 00000000                          10209          DC    4X'00'
0000799C 00000000                          10210          DC    Q(@@STATIC)
000079A0 00000000                          10211          DC    X'00000000'
000079A4 000003A0                          10212          DC    X'000003A0'
                                                                                                                           Page  205 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000079A8 0000000000005F80                  10213          DC    ADL8(@DATA)
000079B0 00000000                          10214          DC    X'00000000'
000079B4 00000AAA                          10215          DC    X'00000AAA'
                                           10216 *
000079B8 0D                                10217          DC    XL1'D'
000079B9 000000                            10218          DC    AL3(0)
000079BC 00000A00                          10219          DC    AL4(2560)
000079C0 00000000                          10220          DC    4X'00'
000079C4 00000000                          10221          DC    Q(@@STATIC)
000079C8 00000000                          10222          DC    X'00000000'
000079CC 000003A8                          10223          DC    X'000003A8'
000079D0 0000000000005F80                  10224          DC    ADL8(@DATA)
000079D8 00000000                          10225          DC    X'00000000'
000079DC 00000AC6                          10226          DC    X'00000AC6'
                                           10227 *
000079E0 0D                                10228          DC    XL1'D'
000079E1 000000                            10229          DC    AL3(0)
000079E4 00000A28                          10230          DC    AL4(2600)
000079E8 00000000                          10231          DC    4X'00'
000079EC 00000000                          10232          DC    Q(@@STATIC)
000079F0 00000000                          10233          DC    X'00000000'
000079F4 000003B0                          10234          DC    X'000003B0'
000079F8 0000000000005F80                  10235          DC    ADL8(@DATA)
00007A00 00000000                          10236          DC    X'00000000'
00007A04 00000AE0                          10237          DC    X'00000AE0'
                                           10238 *
00007A08 0D                                10239          DC    XL1'D'
00007A09 000000                            10240          DC    AL3(0)
00007A0C 00000A50                          10241          DC    AL4(2640)
00007A10 00000000                          10242          DC    4X'00'
00007A14 00000000                          10243          DC    Q(@@STATIC)
00007A18 00000000                          10244          DC    X'00000000'
00007A1C 000003B8                          10245          DC    X'000003B8'
00007A20 0000000000005F80                  10246          DC    ADL8(@DATA)
00007A28 00000000                          10247          DC    X'00000000'
00007A2C 00000B04                          10248          DC    X'00000B04'
                                           10249 *
00007A30 0D                                10250          DC    XL1'D'
00007A31 000000                            10251          DC    AL3(0)
00007A34 00000A78                          10252          DC    AL4(2680)
00007A38 00000000                          10253          DC    4X'00'
00007A3C 00000000                          10254          DC    Q(@@STATIC)
00007A40 00000000                          10255          DC    X'00000000'
00007A44 000003C0                          10256          DC    X'000003C0'
00007A48 0000000000005F80                  10257          DC    ADL8(@DATA)
00007A50 00000000                          10258          DC    X'00000000'
00007A54 00000B26                          10259          DC    X'00000B26'
                                           10260 *
00007A58 0D                                10261          DC    XL1'D'
00007A59 000000                            10262          DC    AL3(0)
00007A5C 00000AA0                          10263          DC    AL4(2720)
00007A60 00000000                          10264          DC    4X'00'
                                                                                                                           Page  206 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007A64 00000000                          10265          DC    Q(@@STATIC)
00007A68 00000000                          10266          DC    X'00000000'
00007A6C 000003C8                          10267          DC    X'000003C8'
00007A70 0000000000005F80                  10268          DC    ADL8(@DATA)
00007A78 00000000                          10269          DC    X'00000000'
00007A7C 00000B32                          10270          DC    X'00000B32'
                                           10271 *
00007A80 0D                                10272          DC    XL1'D'
00007A81 000000                            10273          DC    AL3(0)
00007A84 00000AC8                          10274          DC    AL4(2760)
00007A88 00000000                          10275          DC    4X'00'
00007A8C 00000000                          10276          DC    Q(@@STATIC)
00007A90 00000000                          10277          DC    X'00000000'
00007A94 000003D0                          10278          DC    X'000003D0'
00007A98 0000000000005F80                  10279          DC    ADL8(@DATA)
00007AA0 00000000                          10280          DC    X'00000000'
00007AA4 00000B4A                          10281          DC    X'00000B4A'
                                           10282 *
00007AA8 0D                                10283          DC    XL1'D'
00007AA9 000000                            10284          DC    AL3(0)
00007AAC 00000AF0                          10285          DC    AL4(2800)
00007AB0 00000000                          10286          DC    4X'00'
00007AB4 00000000                          10287          DC    Q(@@STATIC)
00007AB8 00000000                          10288          DC    X'00000000'
00007ABC 000003D8                          10289          DC    X'000003D8'
00007AC0 0000000000005F80                  10290          DC    ADL8(@DATA)
00007AC8 00000000                          10291          DC    X'00000000'
00007ACC 00000B60                          10292          DC    X'00000B60'
                                           10293 *
00007AD0 0D                                10294          DC    XL1'D'
00007AD1 000000                            10295          DC    AL3(0)
00007AD4 00000B18                          10296          DC    AL4(2840)
00007AD8 00000000                          10297          DC    4X'00'
00007ADC 00000000                          10298          DC    Q(@@STATIC)
00007AE0 00000000                          10299          DC    X'00000000'
00007AE4 000003E0                          10300          DC    X'000003E0'
00007AE8 0000000000005F80                  10301          DC    ADL8(@DATA)
00007AF0 00000000                          10302          DC    X'00000000'
00007AF4 00000B76                          10303          DC    X'00000B76'
                                           10304 *
00007AF8 0D                                10305          DC    XL1'D'
00007AF9 000000                            10306          DC    AL3(0)
00007AFC 00000B40                          10307          DC    AL4(2880)
00007B00 00000000                          10308          DC    4X'00'
00007B04 00000000                          10309          DC    Q(@@STATIC)
00007B08 00000000                          10310          DC    X'00000000'
00007B0C 000003E8                          10311          DC    X'000003E8'
00007B10 0000000000005F80                  10312          DC    ADL8(@DATA)
00007B18 00000000                          10313          DC    X'00000000'
00007B1C 00000B86                          10314          DC    X'00000B86'
                                           10315 *
00007B20 0D                                10316          DC    XL1'D'
                                                                                                                           Page  207 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007B21 000000                            10317          DC    AL3(0)
00007B24 00000B68                          10318          DC    AL4(2920)
00007B28 00000000                          10319          DC    4X'00'
00007B2C 00000000                          10320          DC    Q(@@STATIC)
00007B30 00000000                          10321          DC    X'00000000'
00007B34 000003F0                          10322          DC    X'000003F0'
00007B38 0000000000005F80                  10323          DC    ADL8(@DATA)
00007B40 00000000                          10324          DC    X'00000000'
00007B44 00000B9C                          10325          DC    X'00000B9C'
                                           10326 *
00007B48 0D                                10327          DC    XL1'D'
00007B49 000000                            10328          DC    AL3(0)
00007B4C 00000B90                          10329          DC    AL4(2960)
00007B50 00000000                          10330          DC    4X'00'
00007B54 00000000                          10331          DC    Q(@@STATIC)
00007B58 00000000                          10332          DC    X'00000000'
00007B5C 000004C0                          10333          DC    X'000004C0'
00007B60 0000000000005F80                  10334          DC    ADL8(@DATA)
00007B68 00000000                          10335          DC    X'00000000'
00007B6C 00000BAC                          10336          DC    X'00000BAC'
                                           10337 *
00007B70 0D                                10338          DC    XL1'D'
00007B71 000000                            10339          DC    AL3(0)
00007B74 00000BB8                          10340          DC    AL4(3000)
00007B78 00000000                          10341          DC    4X'00'
00007B7C 00000000                          10342          DC    Q(@@STATIC)
00007B80 00000000                          10343          DC    X'00000000'
00007B84 000004C8                          10344          DC    X'000004C8'
00007B88 0000000000005F80                  10345          DC    ADL8(@DATA)
00007B90 00000000                          10346          DC    X'00000000'
00007B94 00000BB2                          10347          DC    X'00000BB2'
                                           10348 *
00007B98 0D                                10349          DC    XL1'D'
00007B99 000000                            10350          DC    AL3(0)
00007B9C 00000BE0                          10351          DC    AL4(3040)
00007BA0 00000000                          10352          DC    4X'00'
00007BA4 00000000                          10353          DC    Q(@@STATIC)
00007BA8 00000000                          10354          DC    X'00000000'
00007BAC 000004D0                          10355          DC    X'000004D0'
00007BB0 0000000000005F80                  10356          DC    ADL8(@DATA)
00007BB8 00000000                          10357          DC    X'00000000'
00007BBC 00000BB8                          10358          DC    X'00000BB8'
                                           10359 *
00007BC0 0D                                10360          DC    XL1'D'
00007BC1 000000                            10361          DC    AL3(0)
00007BC4 00000C08                          10362          DC    AL4(3080)
00007BC8 00000000                          10363          DC    4X'00'
00007BCC 00000000                          10364          DC    Q(@@STATIC)
00007BD0 00000000                          10365          DC    X'00000000'
00007BD4 000004D8                          10366          DC    X'000004D8'
00007BD8 0000000000005F80                  10367          DC    ADL8(@DATA)
00007BE0 00000000                          10368          DC    X'00000000'
                                                                                                                           Page  208 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007BE4 00000BC0                          10369          DC    X'00000BC0'
                                           10370 *
00007BE8 0D                                10371          DC    XL1'D'
00007BE9 000000                            10372          DC    AL3(0)
00007BEC 00000C30                          10373          DC    AL4(3120)
00007BF0 00000000                          10374          DC    4X'00'
00007BF4 00000000                          10375          DC    Q(@@STATIC)
00007BF8 00000000                          10376          DC    X'00000000'
00007BFC 000004E0                          10377          DC    X'000004E0'
00007C00 0000000000005F80                  10378          DC    ADL8(@DATA)
00007C08 00000000                          10379          DC    X'00000000'
00007C0C 00000BC4                          10380          DC    X'00000BC4'
                                           10381 *
00007C10 0D                                10382          DC    XL1'D'
00007C11 000000                            10383          DC    AL3(0)
00007C14 00000C58                          10384          DC    AL4(3160)
00007C18 00000000                          10385          DC    4X'00'
00007C1C 00000000                          10386          DC    Q(@@STATIC)
00007C20 00000000                          10387          DC    X'00000000'
00007C24 000004E8                          10388          DC    X'000004E8'
00007C28 0000000000005F80                  10389          DC    ADL8(@DATA)
00007C30 00000000                          10390          DC    X'00000000'
00007C34 00000BCA                          10391          DC    X'00000BCA'
                                           10392 *
00007C38 0D                                10393          DC    XL1'D'
00007C39 000000                            10394          DC    AL3(0)
00007C3C 00000C80                          10395          DC    AL4(3200)
00007C40 00000000                          10396          DC    4X'00'
00007C44 00000000                          10397          DC    Q(@@STATIC)
00007C48 00000000                          10398          DC    X'00000000'
00007C4C 00000510                          10399          DC    X'00000510'
00007C50 0000000000005F80                  10400          DC    ADL8(@DATA)
00007C58 00000000                          10401          DC    X'00000000'
00007C5C 00000BD2                          10402          DC    X'00000BD2'
                                           10403 *
00007C60 0D                                10404          DC    XL1'D'
00007C61 000000                            10405          DC    AL3(0)
00007C64 00000CA8                          10406          DC    AL4(3240)
00007C68 00000000                          10407          DC    4X'00'
00007C6C 00000000                          10408          DC    Q(@@STATIC)
00007C70 00000000                          10409          DC    X'00000000'
00007C74 00000518                          10410          DC    X'00000518'
00007C78 0000000000005F80                  10411          DC    ADL8(@DATA)
00007C80 00000000                          10412          DC    X'00000000'
00007C84 00000BDE                          10413          DC    X'00000BDE'
                                           10414 *
00007C88 0D                                10415          DC    XL1'D'
00007C89 000000                            10416          DC    AL3(0)
00007C8C 00000CD0                          10417          DC    AL4(3280)
00007C90 00000000                          10418          DC    4X'00'
00007C94 00000000                          10419          DC    Q(@@STATIC)
00007C98 00000000                          10420          DC    X'00000000'
                                                                                                                           Page  209 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007C9C 00000520                          10421          DC    X'00000520'
00007CA0 0000000000005F80                  10422          DC    ADL8(@DATA)
00007CA8 00000000                          10423          DC    X'00000000'
00007CAC 00000BE6                          10424          DC    X'00000BE6'
                                           10425 *
00007CB0 0D                                10426          DC    XL1'D'
00007CB1 000000                            10427          DC    AL3(0)
00007CB4 00000CF8                          10428          DC    AL4(3320)
00007CB8 00000000                          10429          DC    4X'00'
00007CBC 00000000                          10430          DC    Q(@@STATIC)
00007CC0 00000000                          10431          DC    X'00000000'
00007CC4 00000528                          10432          DC    X'00000528'
00007CC8 0000000000005F80                  10433          DC    ADL8(@DATA)
00007CD0 00000000                          10434          DC    X'00000000'
00007CD4 00000BF0                          10435          DC    X'00000BF0'
                                           10436 *
00007CD8 0D                                10437          DC    XL1'D'
00007CD9 000000                            10438          DC    AL3(0)
00007CDC 00000D20                          10439          DC    AL4(3360)
00007CE0 00000000                          10440          DC    4X'00'
00007CE4 00000000                          10441          DC    Q(@@STATIC)
00007CE8 00000000                          10442          DC    X'00000000'
00007CEC 00000630                          10443          DC    X'00000630'
00007CF0 0000000000005F80                  10444          DC    ADL8(@DATA)
00007CF8 00000000                          10445          DC    X'00000000'
00007CFC 00000BF8                          10446          DC    X'00000BF8'
                                           10447 *
00007D00 0D                                10448          DC    XL1'D'
00007D01 000000                            10449          DC    AL3(0)
00007D04 00000D48                          10450          DC    AL4(3400)
00007D08 00000000                          10451          DC    4X'00'
00007D0C 00000000                          10452          DC    Q(@@STATIC)
00007D10 00000000                          10453          DC    X'00000000'
00007D14 00000638                          10454          DC    X'00000638'
00007D18 0000000000005F80                  10455          DC    ADL8(@DATA)
00007D20 00000000                          10456          DC    X'00000000'
00007D24 00000BFE                          10457          DC    X'00000BFE'
                                           10458 *
00007D28 0D                                10459          DC    XL1'D'
00007D29 000000                            10460          DC    AL3(0)
00007D2C 00000D70                          10461          DC    AL4(3440)
00007D30 00000000                          10462          DC    4X'00'
00007D34 00000000                          10463          DC    Q(@@STATIC)
00007D38 00000000                          10464          DC    X'00000000'
00007D3C 00000640                          10465          DC    X'00000640'
00007D40 0000000000005F80                  10466          DC    ADL8(@DATA)
00007D48 00000000                          10467          DC    X'00000000'
00007D4C 00000C08                          10468          DC    X'00000C08'
                                           10469 *
00007D50 0D                                10470          DC    XL1'D'
00007D51 000000                            10471          DC    AL3(0)
00007D54 00000D98                          10472          DC    AL4(3480)
                                                                                                                           Page  210 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007D58 00000000                          10473          DC    4X'00'
00007D5C 00000000                          10474          DC    Q(@@STATIC)
00007D60 00000000                          10475          DC    X'00000000'
00007D64 00000648                          10476          DC    X'00000648'
00007D68 0000000000005F80                  10477          DC    ADL8(@DATA)
00007D70 00000000                          10478          DC    X'00000000'
00007D74 00000C14                          10479          DC    X'00000C14'
                                           10480 *
00007D78 0D                                10481          DC    XL1'D'
00007D79 000000                            10482          DC    AL3(0)
00007D7C 00000DC0                          10483          DC    AL4(3520)
00007D80 00000000                          10484          DC    4X'00'
00007D84 00000000                          10485          DC    Q(@@STATIC)
00007D88 00000000                          10486          DC    X'00000000'
00007D8C 00000650                          10487          DC    X'00000650'
00007D90 0000000000005F80                  10488          DC    ADL8(@DATA)
00007D98 00000000                          10489          DC    X'00000000'
00007D9C 00000C20                          10490          DC    X'00000C20'
                                           10491 *
00007DA0 0D                                10492          DC    XL1'D'
00007DA1 000000                            10493          DC    AL3(0)
00007DA4 00000DE8                          10494          DC    AL4(3560)
00007DA8 00000000                          10495          DC    4X'00'
00007DAC 00000000                          10496          DC    Q(@@STATIC)
00007DB0 00000000                          10497          DC    X'00000000'
00007DB4 00000658                          10498          DC    X'00000658'
00007DB8 0000000000005F80                  10499          DC    ADL8(@DATA)
00007DC0 00000000                          10500          DC    X'00000000'
00007DC4 00000C2E                          10501          DC    X'00000C2E'
                                           10502 *
00007DC8 0D                                10503          DC    XL1'D'
00007DC9 000000                            10504          DC    AL3(0)
00007DCC 00000E10                          10505          DC    AL4(3600)
00007DD0 00000000                          10506          DC    4X'00'
00007DD4 00000000                          10507          DC    Q(@@STATIC)
00007DD8 00000000                          10508          DC    X'00000000'
00007DDC 00000660                          10509          DC    X'00000660'
00007DE0 0000000000005F80                  10510          DC    ADL8(@DATA)
00007DE8 00000000                          10511          DC    X'00000000'
00007DEC 00000C36                          10512          DC    X'00000C36'
                                           10513 *
00007DF0 0D                                10514          DC    XL1'D'
00007DF1 000000                            10515          DC    AL3(0)
00007DF4 00000E38                          10516          DC    AL4(3640)
00007DF8 00000000                          10517          DC    4X'00'
00007DFC 00000000                          10518          DC    Q(@@STATIC)
00007E00 00000000                          10519          DC    X'00000000'
00007E04 00000668                          10520          DC    X'00000668'
00007E08 0000000000005F80                  10521          DC    ADL8(@DATA)
00007E10 00000000                          10522          DC    X'00000000'
00007E14 00000C40                          10523          DC    X'00000C40'
                                           10524 *
                                                                                                                           Page  211 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007E18 0D                                10525          DC    XL1'D'
00007E19 000000                            10526          DC    AL3(0)
00007E1C 00000E60                          10527          DC    AL4(3680)
00007E20 00000000                          10528          DC    4X'00'
00007E24 00000000                          10529          DC    Q(@@STATIC)
00007E28 00000000                          10530          DC    X'00000000'
00007E2C 00000670                          10531          DC    X'00000670'
00007E30 0000000000005F80                  10532          DC    ADL8(@DATA)
00007E38 00000000                          10533          DC    X'00000000'
00007E3C 00000C4C                          10534          DC    X'00000C4C'
                                           10535 *
00007E40 0D                                10536          DC    XL1'D'
00007E41 000000                            10537          DC    AL3(0)
00007E44 00000E88                          10538          DC    AL4(3720)
00007E48 00000000                          10539          DC    4X'00'
00007E4C 00000000                          10540          DC    Q(@@STATIC)
00007E50 00000000                          10541          DC    X'00000000'
00007E54 00000678                          10542          DC    X'00000678'
00007E58 0000000000005F80                  10543          DC    ADL8(@DATA)
00007E60 00000000                          10544          DC    X'00000000'
00007E64 00000BF8                          10545          DC    X'00000BF8'
                                           10546 *
00007E68 0D                                10547          DC    XL1'D'
00007E69 000000                            10548          DC    AL3(0)
00007E6C 00000EB0                          10549          DC    AL4(3760)
00007E70 00000000                          10550          DC    4X'00'
00007E74 00000000                          10551          DC    Q(@@STATIC)
00007E78 00000000                          10552          DC    X'00000000'
00007E7C 00000680                          10553          DC    X'00000680'
00007E80 0000000000005F80                  10554          DC    ADL8(@DATA)
00007E88 00000000                          10555          DC    X'00000000'
00007E8C 00000C2E                          10556          DC    X'00000C2E'
                                           10557 *
00007E90 0D                                10558          DC    XL1'D'
00007E91 000000                            10559          DC    AL3(0)
00007E94 00000ED8                          10560          DC    AL4(3800)
00007E98 00000000                          10561          DC    4X'00'
00007E9C 00000000                          10562          DC    Q(@@STATIC)
00007EA0 00000000                          10563          DC    X'00000000'
00007EA4 00000688                          10564          DC    X'00000688'
00007EA8 0000000000005F80                  10565          DC    ADL8(@DATA)
00007EB0 00000000                          10566          DC    X'00000000'
00007EB4 00000C56                          10567          DC    X'00000C56'
                                           10568 *
00007EB8 0D                                10569          DC    XL1'D'
00007EB9 000000                            10570          DC    AL3(0)
00007EBC 00000F00                          10571          DC    AL4(3840)
00007EC0 00000000                          10572          DC    4X'00'
00007EC4 00000000                          10573          DC    Q(@@STATIC)
00007EC8 00000000                          10574          DC    X'00000000'
00007ECC 00000690                          10575          DC    X'00000690'
00007ED0 0000000000005F80                  10576          DC    ADL8(@DATA)
                                                                                                                           Page  212 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007ED8 00000000                          10577          DC    X'00000000'
00007EDC 00000C64                          10578          DC    X'00000C64'
                                           10579 *
00007EE0 0D                                10580          DC    XL1'D'
00007EE1 000000                            10581          DC    AL3(0)
00007EE4 00000F28                          10582          DC    AL4(3880)
00007EE8 00000000                          10583          DC    4X'00'
00007EEC 00000000                          10584          DC    Q(@@STATIC)
00007EF0 00000000                          10585          DC    X'00000000'
00007EF4 00000698                          10586          DC    X'00000698'
00007EF8 0000000000005F80                  10587          DC    ADL8(@DATA)
00007F00 00000000                          10588          DC    X'00000000'
00007F04 00000C6A                          10589          DC    X'00000C6A'
                                           10590 *
00007F08 0D                                10591          DC    XL1'D'
00007F09 000000                            10592          DC    AL3(0)
00007F0C 00000F50                          10593          DC    AL4(3920)
00007F10 00000000                          10594          DC    4X'00'
00007F14 00000000                          10595          DC    Q(@@STATIC)
00007F18 00000000                          10596          DC    X'00000000'
00007F1C 000006A0                          10597          DC    X'000006A0'
00007F20 0000000000005F80                  10598          DC    ADL8(@DATA)
00007F28 00000000                          10599          DC    X'00000000'
00007F2C 00000C78                          10600          DC    X'00000C78'
                                           10601 *
00007F30 0D                                10602          DC    XL1'D'
00007F31 000000                            10603          DC    AL3(0)
00007F34 00000F78                          10604          DC    AL4(3960)
00007F38 00000000                          10605          DC    4X'00'
00007F3C 00000000                          10606          DC    Q(@@STATIC)
00007F40 00000000                          10607          DC    X'00000000'
00007F44 000006A8                          10608          DC    X'000006A8'
00007F48 0000000000005F80                  10609          DC    ADL8(@DATA)
00007F50 00000000                          10610          DC    X'00000000'
00007F54 00000C84                          10611          DC    X'00000C84'
                                           10612 *
00007F58 0D                                10613          DC    XL1'D'
00007F59 000000                            10614          DC    AL3(0)
00007F5C 00000FA0                          10615          DC    AL4(4000)
00007F60 00000000                          10616          DC    4X'00'
00007F64 00000000                          10617          DC    Q(@@STATIC)
00007F68 00000000                          10618          DC    X'00000000'
00007F6C 000006B0                          10619          DC    X'000006B0'
00007F70 0000000000005F80                  10620          DC    ADL8(@DATA)
00007F78 00000000                          10621          DC    X'00000000'
00007F7C 00000C9A                          10622          DC    X'00000C9A'
                                           10623 *
00007F80 0D                                10624          DC    XL1'D'
00007F81 000000                            10625          DC    AL3(0)
00007F84 00000FC8                          10626          DC    AL4(4040)
00007F88 00000000                          10627          DC    4X'00'
00007F8C 00000000                          10628          DC    Q(@@STATIC)
                                                                                                                           Page  213 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007F90 00000000                          10629          DC    X'00000000'
00007F94 000006B8                          10630          DC    X'000006B8'
00007F98 0000000000005F80                  10631          DC    ADL8(@DATA)
00007FA0 00000000                          10632          DC    X'00000000'
00007FA4 00000CAA                          10633          DC    X'00000CAA'
                                           10634 *
00007FA8 0D                                10635          DC    XL1'D'
00007FA9 000000                            10636          DC    AL3(0)
00007FAC 00000FF0                          10637          DC    AL4(4080)
00007FB0 00000000                          10638          DC    4X'00'
00007FB4 00000000                          10639          DC    Q(@@STATIC)
00007FB8 00000000                          10640          DC    X'00000000'
00007FBC 000006C0                          10641          DC    X'000006C0'
00007FC0 0000000000005F80                  10642          DC    ADL8(@DATA)
00007FC8 00000000                          10643          DC    X'00000000'
00007FCC 00000CBE                          10644          DC    X'00000CBE'
                                           10645 *
00007FD0 0D                                10646          DC    XL1'D'
00007FD1 000000                            10647          DC    AL3(0)
00007FD4 00001018                          10648          DC    AL4(4120)
00007FD8 00000000                          10649          DC    4X'00'
00007FDC 00000000                          10650          DC    Q(@@STATIC)
00007FE0 00000000                          10651          DC    X'00000000'
00007FE4 000006C8                          10652          DC    X'000006C8'
00007FE8 0000000000005F80                  10653          DC    ADL8(@DATA)
00007FF0 00000000                          10654          DC    X'00000000'
00007FF4 00000CCE                          10655          DC    X'00000CCE'
                                           10656 *
00007FF8 0D                                10657          DC    XL1'D'
00007FF9 000000                            10658          DC    AL3(0)
00007FFC 00001040                          10659          DC    AL4(4160)
00008000 00000000                          10660          DC    4X'00'
00008004 00000000                          10661          DC    Q(@@STATIC)
00008008 00000000                          10662          DC    X'00000000'
0000800C 000006D0                          10663          DC    X'000006D0'
00008010 0000000000005F80                  10664          DC    ADL8(@DATA)
00008018 00000000                          10665          DC    X'00000000'
0000801C 00000C08                          10666          DC    X'00000C08'
                                           10667 *
00008020 0D                                10668          DC    XL1'D'
00008021 000000                            10669          DC    AL3(0)
00008024 00001068                          10670          DC    AL4(4200)
00008028 00000000                          10671          DC    4X'00'
0000802C 00000000                          10672          DC    Q(@@STATIC)
00008030 00000000                          10673          DC    X'00000000'
00008034 000006D8                          10674          DC    X'000006D8'
00008038 0000000000005F80                  10675          DC    ADL8(@DATA)
00008040 00000000                          10676          DC    X'00000000'
00008044 00000CDE                          10677          DC    X'00000CDE'
                                           10678 *
00008048 0D                                10679          DC    XL1'D'
00008049 000000                            10680          DC    AL3(0)
                                                                                                                           Page  214 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000804C 00001090                          10681          DC    AL4(4240)
00008050 00000000                          10682          DC    4X'00'
00008054 00000000                          10683          DC    Q(@@STATIC)
00008058 00000000                          10684          DC    X'00000000'
0000805C 000006E0                          10685          DC    X'000006E0'
00008060 0000000000005F80                  10686          DC    ADL8(@DATA)
00008068 00000000                          10687          DC    X'00000000'
0000806C 00000CEA                          10688          DC    X'00000CEA'
                                           10689 *
00008070 0D                                10690          DC    XL1'D'
00008071 000000                            10691          DC    AL3(0)
00008074 000010B8                          10692          DC    AL4(4280)
00008078 00000000                          10693          DC    4X'00'
0000807C 00000000                          10694          DC    Q(@@STATIC)
00008080 00000000                          10695          DC    X'00000000'
00008084 000006E8                          10696          DC    X'000006E8'
00008088 0000000000005F80                  10697          DC    ADL8(@DATA)
00008090 00000000                          10698          DC    X'00000000'
00008094 00000CF6                          10699          DC    X'00000CF6'
                                           10700 *
00008098 0D                                10701          DC    XL1'D'
00008099 000000                            10702          DC    AL3(0)
0000809C 000010E0                          10703          DC    AL4(4320)
000080A0 00000000                          10704          DC    4X'00'
000080A4 00000000                          10705          DC    Q(@@STATIC)
000080A8 00000000                          10706          DC    X'00000000'
000080AC 000006F0                          10707          DC    X'000006F0'
000080B0 0000000000005F80                  10708          DC    ADL8(@DATA)
000080B8 00000000                          10709          DC    X'00000000'
000080BC 00000D00                          10710          DC    X'00000D00'
                                           10711 *
000080C0 0D                                10712          DC    XL1'D'
000080C1 000000                            10713          DC    AL3(0)
000080C4 00001108                          10714          DC    AL4(4360)
000080C8 00000000                          10715          DC    4X'00'
000080CC 00000000                          10716          DC    Q(@@STATIC)
000080D0 00000000                          10717          DC    X'00000000'
000080D4 000006F8                          10718          DC    X'000006F8'
000080D8 0000000000005F80                  10719          DC    ADL8(@DATA)
000080E0 00000000                          10720          DC    X'00000000'
000080E4 00000D14                          10721          DC    X'00000D14'
                                           10722 *
000080E8 0D                                10723          DC    XL1'D'
000080E9 000000                            10724          DC    AL3(0)
000080EC 00001130                          10725          DC    AL4(4400)
000080F0 00000000                          10726          DC    4X'00'
000080F4 00000000                          10727          DC    Q(@@STATIC)
000080F8 00000000                          10728          DC    X'00000000'
000080FC 00000700                          10729          DC    X'00000700'
00008100 0000000000005F80                  10730          DC    ADL8(@DATA)
00008108 00000000                          10731          DC    X'00000000'
0000810C 00000D1E                          10732          DC    X'00000D1E'
                                                                                                                           Page  215 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                           10733 *
00008110 0D                                10734          DC    XL1'D'
00008111 000000                            10735          DC    AL3(0)
00008114 00001158                          10736          DC    AL4(4440)
00008118 00000000                          10737          DC    4X'00'
0000811C 00000000                          10738          DC    Q(@@STATIC)
00008120 00000000                          10739          DC    X'00000000'
00008124 00000708                          10740          DC    X'00000708'
00008128 0000000000005F80                  10741          DC    ADL8(@DATA)
00008130 00000000                          10742          DC    X'00000000'
00008134 00000D2A                          10743          DC    X'00000D2A'
                                           10744 *
00008138 0D                                10745          DC    XL1'D'
00008139 000000                            10746          DC    AL3(0)
0000813C 00001180                          10747          DC    AL4(4480)
00008140 00000000                          10748          DC    4X'00'
00008144 00000000                          10749          DC    Q(@@STATIC)
00008148 00000000                          10750          DC    X'00000000'
0000814C 00000710                          10751          DC    X'00000710'
00008150 0000000000005F80                  10752          DC    ADL8(@DATA)
00008158 00000000                          10753          DC    X'00000000'
0000815C 00000D3E                          10754          DC    X'00000D3E'
                                           10755 *
00008160 0D                                10756          DC    XL1'D'
00008161 000000                            10757          DC    AL3(0)
00008164 000011A8                          10758          DC    AL4(4520)
00008168 00000000                          10759          DC    4X'00'
0000816C 00000000                          10760          DC    Q(@@STATIC)
00008170 00000000                          10761          DC    X'00000000'
00008174 00000718                          10762          DC    X'00000718'
00008178 0000000000005F80                  10763          DC    ADL8(@DATA)
00008180 00000000                          10764          DC    X'00000000'
00008184 00000D50                          10765          DC    X'00000D50'
                                           10766 *
00008188 0D                                10767          DC    XL1'D'
00008189 000000                            10768          DC    AL3(0)
0000818C 000011D0                          10769          DC    AL4(4560)
00008190 00000000                          10770          DC    4X'00'
00008194 00000000                          10771          DC    Q(@@STATIC)
00008198 00000000                          10772          DC    X'00000000'
0000819C 00000720                          10773          DC    X'00000720'
000081A0 0000000000005F80                  10774          DC    ADL8(@DATA)
000081A8 00000000                          10775          DC    X'00000000'
000081AC 00000D60                          10776          DC    X'00000D60'
                                           10777 *
000081B0 0D                                10778          DC    XL1'D'
000081B1 000000                            10779          DC    AL3(0)
000081B4 000011F8                          10780          DC    AL4(4600)
000081B8 00000000                          10781          DC    4X'00'
000081BC 00000000                          10782          DC    Q(@@STATIC)
000081C0 00000000                          10783          DC    X'00000000'
000081C4 00000728                          10784          DC    X'00000728'
                                                                                                                           Page  216 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000081C8 0000000000005F80                  10785          DC    ADL8(@DATA)
000081D0 00000000                          10786          DC    X'00000000'
000081D4 00000D70                          10787          DC    X'00000D70'
                                           10788 *
000081D8 0D                                10789          DC    XL1'D'
000081D9 000000                            10790          DC    AL3(0)
000081DC 00001220                          10791          DC    AL4(4640)
000081E0 00000000                          10792          DC    4X'00'
000081E4 00000000                          10793          DC    Q(@@STATIC)
000081E8 00000000                          10794          DC    X'00000000'
000081EC 00000730                          10795          DC    X'00000730'
000081F0 0000000000005F80                  10796          DC    ADL8(@DATA)
000081F8 00000000                          10797          DC    X'00000000'
000081FC 00000D82                          10798          DC    X'00000D82'
                                           10799 *
00008200 0D                                10800          DC    XL1'D'
00008201 000000                            10801          DC    AL3(0)
00008204 00001248                          10802          DC    AL4(4680)
00008208 00000000                          10803          DC    4X'00'
0000820C 00000000                          10804          DC    Q(@@STATIC)
00008210 00000000                          10805          DC    X'00000000'
00008214 00000738                          10806          DC    X'00000738'
00008218 0000000000005F80                  10807          DC    ADL8(@DATA)
00008220 00000000                          10808          DC    X'00000000'
00008224 00000D94                          10809          DC    X'00000D94'
                                           10810 *
00008228 0D                                10811          DC    XL1'D'
00008229 000000                            10812          DC    AL3(0)
0000822C 00001270                          10813          DC    AL4(4720)
00008230 00000000                          10814          DC    4X'00'
00008234 00000000                          10815          DC    Q(@@STATIC)
00008238 00000000                          10816          DC    X'00000000'
0000823C 00000740                          10817          DC    X'00000740'
00008240 0000000000005F80                  10818          DC    ADL8(@DATA)
00008248 00000000                          10819          DC    X'00000000'
0000824C 00000DA6                          10820          DC    X'00000DA6'
                                           10821 *
00008250 0D                                10822          DC    XL1'D'
00008251 000000                            10823          DC    AL3(0)
00008254 00001298                          10824          DC    AL4(4760)
00008258 00000000                          10825          DC    4X'00'
0000825C 00000000                          10826          DC    Q(@@STATIC)
00008260 00000000                          10827          DC    X'00000000'
00008264 00000748                          10828          DC    X'00000748'
00008268 0000000000005F80                  10829          DC    ADL8(@DATA)
00008270 00000000                          10830          DC    X'00000000'
00008274 00000DB2                          10831          DC    X'00000DB2'
                                           10832 *
00008278 0D                                10833          DC    XL1'D'
00008279 000000                            10834          DC    AL3(0)
0000827C 000012C0                          10835          DC    AL4(4800)
00008280 00000000                          10836          DC    4X'00'
                                                                                                                           Page  217 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008284 00000000                          10837          DC    Q(@@STATIC)
00008288 00000000                          10838          DC    X'00000000'
0000828C 00000750                          10839          DC    X'00000750'
00008290 0000000000005F80                  10840          DC    ADL8(@DATA)
00008298 00000000                          10841          DC    X'00000000'
0000829C 00000DBE                          10842          DC    X'00000DBE'
                                           10843 *
000082A0 0D                                10844          DC    XL1'D'
000082A1 000000                            10845          DC    AL3(0)
000082A4 000012E8                          10846          DC    AL4(4840)
000082A8 00000000                          10847          DC    4X'00'
000082AC 00000000                          10848          DC    Q(@@STATIC)
000082B0 00000000                          10849          DC    X'00000000'
000082B4 00000758                          10850          DC    X'00000758'
000082B8 0000000000005F80                  10851          DC    ADL8(@DATA)
000082C0 00000000                          10852          DC    X'00000000'
000082C4 00000DD2                          10853          DC    X'00000DD2'
                                           10854 *
000082C8 0D                                10855          DC    XL1'D'
000082C9 000000                            10856          DC    AL3(0)
000082CC 00001310                          10857          DC    AL4(4880)
000082D0 00000000                          10858          DC    4X'00'
000082D4 00000000                          10859          DC    Q(@@STATIC)
000082D8 00000000                          10860          DC    X'00000000'
000082DC 00000760                          10861          DC    X'00000760'
000082E0 0000000000005F80                  10862          DC    ADL8(@DATA)
000082E8 00000000                          10863          DC    X'00000000'
000082EC 00000DE8                          10864          DC    X'00000DE8'
                                           10865 *
000082F0 0D                                10866          DC    XL1'D'
000082F1 000000                            10867          DC    AL3(0)
000082F4 00001338                          10868          DC    AL4(4920)
000082F8 00000000                          10869          DC    4X'00'
000082FC 00000000                          10870          DC    Q(@@STATIC)
00008300 00000000                          10871          DC    X'00000000'
00008304 00000768                          10872          DC    X'00000768'
00008308 0000000000005F80                  10873          DC    ADL8(@DATA)
00008310 00000000                          10874          DC    X'00000000'
00008314 00000DFE                          10875          DC    X'00000DFE'
                                           10876 *
00008318 0D                                10877          DC    XL1'D'
00008319 000000                            10878          DC    AL3(0)
0000831C 00001360                          10879          DC    AL4(4960)
00008320 00000000                          10880          DC    4X'00'
00008324 00000000                          10881          DC    Q(@@STATIC)
00008328 00000000                          10882          DC    X'00000000'
0000832C 00000770                          10883          DC    X'00000770'
00008330 0000000000005F80                  10884          DC    ADL8(@DATA)
00008338 00000000                          10885          DC    X'00000000'
0000833C 00000E0E                          10886          DC    X'00000E0E'
                                           10887 *
00008340 0D                                10888          DC    XL1'D'
                                                                                                                           Page  218 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008341 000000                            10889          DC    AL3(0)
00008344 00001388                          10890          DC    AL4(5000)
00008348 00000000                          10891          DC    4X'00'
0000834C 00000000                          10892          DC    Q(@@STATIC)
00008350 00000000                          10893          DC    X'00000000'
00008354 00000778                          10894          DC    X'00000778'
00008358 0000000000005F80                  10895          DC    ADL8(@DATA)
00008360 00000000                          10896          DC    X'00000000'
00008364 00000E1E                          10897          DC    X'00000E1E'
                                           10898 *
00008368 0D                                10899          DC    XL1'D'
00008369 000000                            10900          DC    AL3(0)
0000836C 000013B0                          10901          DC    AL4(5040)
00008370 00000000                          10902          DC    4X'00'
00008374 00000000                          10903          DC    Q(@@STATIC)
00008378 00000000                          10904          DC    X'00000000'
0000837C 00000780                          10905          DC    X'00000780'
00008380 0000000000005F80                  10906          DC    ADL8(@DATA)
00008388 00000000                          10907          DC    X'00000000'
0000838C 00000E30                          10908          DC    X'00000E30'
                                           10909 *
00008390 0D                                10910          DC    XL1'D'
00008391 000000                            10911          DC    AL3(0)
00008394 000013D8                          10912          DC    AL4(5080)
00008398 00000000                          10913          DC    4X'00'
0000839C 00000000                          10914          DC    Q(@@STATIC)
000083A0 00000000                          10915          DC    X'00000000'
000083A4 00000788                          10916          DC    X'00000788'
000083A8 0000000000005F80                  10917          DC    ADL8(@DATA)
000083B0 00000000                          10918          DC    X'00000000'
000083B4 00000E40                          10919          DC    X'00000E40'
                                           10920 *
000083B8 0D                                10921          DC    XL1'D'
000083B9 000000                            10922          DC    AL3(0)
000083BC 00001400                          10923          DC    AL4(5120)
000083C0 00000000                          10924          DC    4X'00'
000083C4 00000000                          10925          DC    Q(@@STATIC)
000083C8 00000000                          10926          DC    X'00000000'
000083CC 00000790                          10927          DC    X'00000790'
000083D0 0000000000005F80                  10928          DC    ADL8(@DATA)
000083D8 00000000                          10929          DC    X'00000000'
000083DC 00000E4E                          10930          DC    X'00000E4E'
                                           10931 *
000083E0 0D                                10932          DC    XL1'D'
000083E1 000000                            10933          DC    AL3(0)
000083E4 00001428                          10934          DC    AL4(5160)
000083E8 00000000                          10935          DC    4X'00'
000083EC 00000000                          10936          DC    Q(@@STATIC)
000083F0 00000000                          10937          DC    X'00000000'
000083F4 00000798                          10938          DC    X'00000798'
000083F8 0000000000005F80                  10939          DC    ADL8(@DATA)
00008400 00000000                          10940          DC    X'00000000'
                                                                                                                           Page  219 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008404 00000E66                          10941          DC    X'00000E66'
                                           10942 *
00008408 0D                                10943          DC    XL1'D'
00008409 000000                            10944          DC    AL3(0)
0000840C 00001450                          10945          DC    AL4(5200)
00008410 00000000                          10946          DC    4X'00'
00008414 00000000                          10947          DC    Q(@@STATIC)
00008418 00000000                          10948          DC    X'00000000'
0000841C 000007A0                          10949          DC    X'000007A0'
00008420 0000000000005F80                  10950          DC    ADL8(@DATA)
00008428 00000000                          10951          DC    X'00000000'
0000842C 00000E7C                          10952          DC    X'00000E7C'
                                           10953 *
00008430 0D                                10954          DC    XL1'D'
00008431 000000                            10955          DC    AL3(0)
00008434 00001478                          10956          DC    AL4(5240)
00008438 00000000                          10957          DC    4X'00'
0000843C 00000000                          10958          DC    Q(@@STATIC)
00008440 00000000                          10959          DC    X'00000000'
00008444 000007A8                          10960          DC    X'000007A8'
00008448 0000000000005F80                  10961          DC    ADL8(@DATA)
00008450 00000000                          10962          DC    X'00000000'
00008454 00000E8C                          10963          DC    X'00000E8C'
                                           10964 *
00008458 0D                                10965          DC    XL1'D'
00008459 000000                            10966          DC    AL3(0)
0000845C 000014A0                          10967          DC    AL4(5280)
00008460 00000000                          10968          DC    4X'00'
00008464 00000000                          10969          DC    Q(@@STATIC)
00008468 00000000                          10970          DC    X'00000000'
0000846C 000007B0                          10971          DC    X'000007B0'
00008470 0000000000005F80                  10972          DC    ADL8(@DATA)
00008478 00000000                          10973          DC    X'00000000'
0000847C 00000E98                          10974          DC    X'00000E98'
                                           10975 *
00008480 0D                                10976          DC    XL1'D'
00008481 000000                            10977          DC    AL3(0)
00008484 000014C8                          10978          DC    AL4(5320)
00008488 00000000                          10979          DC    4X'00'
0000848C 00000000                          10980          DC    Q(@@STATIC)
00008490 00000000                          10981          DC    X'00000000'
00008494 000007B8                          10982          DC    X'000007B8'
00008498 0000000000005F80                  10983          DC    ADL8(@DATA)
000084A0 00000000                          10984          DC    X'00000000'
000084A4 00000EAA                          10985          DC    X'00000EAA'
                                           10986 *
000084A8 0D                                10987          DC    XL1'D'
000084A9 000000                            10988          DC    AL3(0)
000084AC 000014F0                          10989          DC    AL4(5360)
000084B0 00000000                          10990          DC    4X'00'
000084B4 00000000                          10991          DC    Q(@@STATIC)
000084B8 00000000                          10992          DC    X'00000000'
                                                                                                                           Page  220 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000084BC 000007C0                          10993          DC    X'000007C0'
000084C0 0000000000005F80                  10994          DC    ADL8(@DATA)
000084C8 00000000                          10995          DC    X'00000000'
000084CC 00000EBE                          10996          DC    X'00000EBE'
                                           10997 *
000084D0 0D                                10998          DC    XL1'D'
000084D1 000000                            10999          DC    AL3(0)
000084D4 00001518                          11000          DC    AL4(5400)
000084D8 00000000                          11001          DC    4X'00'
000084DC 00000000                          11002          DC    Q(@@STATIC)
000084E0 00000000                          11003          DC    X'00000000'
000084E4 000007C8                          11004          DC    X'000007C8'
000084E8 0000000000005F80                  11005          DC    ADL8(@DATA)
000084F0 00000000                          11006          DC    X'00000000'
000084F4 00000ECE                          11007          DC    X'00000ECE'
                                           11008 *
000084F8 0D                                11009          DC    XL1'D'
000084F9 000000                            11010          DC    AL3(0)
000084FC 00001540                          11011          DC    AL4(5440)
00008500 00000000                          11012          DC    4X'00'
00008504 00000000                          11013          DC    Q(@@STATIC)
00008508 00000000                          11014          DC    X'00000000'
0000850C 000007D0                          11015          DC    X'000007D0'
00008510 0000000000005F80                  11016          DC    ADL8(@DATA)
00008518 00000000                          11017          DC    X'00000000'
0000851C 00000ED8                          11018          DC    X'00000ED8'
                                           11019 *
00008520 0D                                11020          DC    XL1'D'
00008521 000000                            11021          DC    AL3(0)
00008524 00001568                          11022          DC    AL4(5480)
00008528 00000000                          11023          DC    4X'00'
0000852C 00000000                          11024          DC    Q(@@STATIC)
00008530 00000000                          11025          DC    X'00000000'
00008534 000007D8                          11026          DC    X'000007D8'
00008538 0000000000005F80                  11027          DC    ADL8(@DATA)
00008540 00000000                          11028          DC    X'00000000'
00008544 00000EE6                          11029          DC    X'00000EE6'
                                           11030 *
00008548 0D                                11031          DC    XL1'D'
00008549 000000                            11032          DC    AL3(0)
0000854C 00001590                          11033          DC    AL4(5520)
00008550 00000000                          11034          DC    4X'00'
00008554 00000000                          11035          DC    Q(@@STATIC)
00008558 00000000                          11036          DC    X'00000000'
0000855C 000007E0                          11037          DC    X'000007E0'
00008560 0000000000005F80                  11038          DC    ADL8(@DATA)
00008568 00000000                          11039          DC    X'00000000'
0000856C 00000EFA                          11040          DC    X'00000EFA'
                                           11041 *
00008570 0D                                11042          DC    XL1'D'
00008571 000000                            11043          DC    AL3(0)
00008574 000015B8                          11044          DC    AL4(5560)
                                                                                                                           Page  221 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008578 00000000                          11045          DC    4X'00'
0000857C 00000000                          11046          DC    Q(@@STATIC)
00008580 00000000                          11047          DC    X'00000000'
00008584 000007E8                          11048          DC    X'000007E8'
00008588 0000000000005F80                  11049          DC    ADL8(@DATA)
00008590 00000000                          11050          DC    X'00000000'
00008594 00000F0E                          11051          DC    X'00000F0E'
                                           11052 *
00008598 0D                                11053          DC    XL1'D'
00008599 000000                            11054          DC    AL3(0)
0000859C 000015E0                          11055          DC    AL4(5600)
000085A0 00000000                          11056          DC    4X'00'
000085A4 00000000                          11057          DC    Q(@@STATIC)
000085A8 00000000                          11058          DC    X'00000000'
000085AC 000007F0                          11059          DC    X'000007F0'
000085B0 0000000000005F80                  11060          DC    ADL8(@DATA)
000085B8 00000000                          11061          DC    X'00000000'
000085BC 00000F26                          11062          DC    X'00000F26'
                                           11063 *
000085C0 0D                                11064          DC    XL1'D'
000085C1 000000                            11065          DC    AL3(0)
000085C4 00001608                          11066          DC    AL4(5640)
000085C8 00000000                          11067          DC    4X'00'
000085CC 00000000                          11068          DC    Q(@@STATIC)
000085D0 00000000                          11069          DC    X'00000000'
000085D4 000007F8                          11070          DC    X'000007F8'
000085D8 0000000000005F80                  11071          DC    ADL8(@DATA)
000085E0 00000000                          11072          DC    X'00000000'
000085E4 00000F3A                          11073          DC    X'00000F3A'
                                           11074 *
000085E8 0D                                11075          DC    XL1'D'
000085E9 000000                            11076          DC    AL3(0)
000085EC 00001630                          11077          DC    AL4(5680)
000085F0 00000000                          11078          DC    4X'00'
000085F4 00000000                          11079          DC    Q(@@STATIC)
000085F8 00000000                          11080          DC    X'00000000'
000085FC 00000800                          11081          DC    X'00000800'
00008600 0000000000005F80                  11082          DC    ADL8(@DATA)
00008608 00000000                          11083          DC    X'00000000'
0000860C 00000F50                          11084          DC    X'00000F50'
                                           11085 *
00008610 0D                                11086          DC    XL1'D'
00008611 000000                            11087          DC    AL3(0)
00008614 00001658                          11088          DC    AL4(5720)
00008618 00000000                          11089          DC    4X'00'
0000861C 00000000                          11090          DC    Q(@@STATIC)
00008620 00000000                          11091          DC    X'00000000'
00008624 00000808                          11092          DC    X'00000808'
00008628 0000000000005F80                  11093          DC    ADL8(@DATA)
00008630 00000000                          11094          DC    X'00000000'
00008634 00000F64                          11095          DC    X'00000F64'
                                           11096 *
                                                                                                                           Page  222 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00008638 0D                                11097          DC    XL1'D'
00008639 000000                            11098          DC    AL3(0)
0000863C 00001680                          11099          DC    AL4(5760)
00008640 00000000                          11100          DC    4X'00'
00008644 00000000                          11101          DC    Q(@@STATIC)
00008648 00000000                          11102          DC    X'00000000'
0000864C 00000810                          11103          DC    X'00000810'
00008650 0000000000005F80                  11104          DC    ADL8(@DATA)
00008658 00000000                          11105          DC    X'00000000'
0000865C 00000F78                          11106          DC    X'00000F78'
                                           11107 *
00008660 0D                                11108          DC    XL1'D'
00008661 000000                            11109          DC    AL3(0)
00008664 000016A8                          11110          DC    AL4(5800)
00008668 00000000                          11111          DC    4X'00'
0000866C 00000000                          11112          DC    Q(@@STATIC)
00008670 00000000                          11113          DC    X'00000000'
00008674 00000818                          11114          DC    X'00000818'
00008678 0000000000005F80                  11115          DC    ADL8(@DATA)
00008680 00000000                          11116          DC    X'00000000'
00008684 00000F9A                          11117          DC    X'00000F9A'
                                           11118 *
00008688 0D                                11119          DC    XL1'D'
00008689 000000                            11120          DC    AL3(0)
0000868C 000016D0                          11121          DC    AL4(5840)
00008690 00000000                          11122          DC    4X'00'
00008694 00000000                          11123          DC    Q(@@STATIC)
00008698 00000000                          11124          DC    X'00000000'
0000869C 00000820                          11125          DC    X'00000820'
000086A0 0000000000005F80                  11126          DC    ADL8(@DATA)
000086A8 00000000                          11127          DC    X'00000000'
000086AC 00000FAE                          11128          DC    X'00000FAE'
                                           11129 *
000086B0 0D                                11130          DC    XL1'D'
000086B1 000000                            11131          DC    AL3(0)
000086B4 000016F8                          11132          DC    AL4(5880)
000086B8 00000000                          11133          DC    4X'00'
000086BC 00000000                          11134          DC    Q(@@STATIC)
000086C0 00000000                          11135          DC    X'00000000'
000086C4 00000828                          11136          DC    X'00000828'
000086C8 0000000000005F80                  11137          DC    ADL8(@DATA)
000086D0 00000000                          11138          DC    X'00000000'
000086D4 00000FC2                          11139          DC    X'00000FC2'
                                           11140 *
000086D8 0D                                11141          DC    XL1'D'
000086D9 000000                            11142          DC    AL3(0)
000086DC 00001720                          11143          DC    AL4(5920)
000086E0 00000000                          11144          DC    4X'00'
000086E4 00000000                          11145          DC    Q(@@STATIC)
000086E8 00000000                          11146          DC    X'00000000'
000086EC 00000830                          11147          DC    X'00000830'
000086F0 0000000000005F80                  11148          DC    ADL8(@DATA)
                                                                                                                           Page  223 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000086F8 00000000                          11149          DC    X'00000000'
000086FC 00000FCE                          11150          DC    X'00000FCE'
                                           11151 *
00008700 0D                                11152          DC    XL1'D'
00008701 000000                            11153          DC    AL3(0)
00008704 00001748                          11154          DC    AL4(5960)
00008708 00000000                          11155          DC    4X'00'
0000870C 00000000                          11156          DC    Q(@@STATIC)
00008710 00000000                          11157          DC    X'00000000'
00008714 00000838                          11158          DC    X'00000838'
00008718 0000000000005F80                  11159          DC    ADL8(@DATA)
00008720 00000000                          11160          DC    X'00000000'
00008724 00000FDC                          11161          DC    X'00000FDC'
                                           11162 *
00008728 0D                                11163          DC    XL1'D'
00008729 000000                            11164          DC    AL3(0)
0000872C 00001770                          11165          DC    AL4(6000)
00008730 00000000                          11166          DC    4X'00'
00008734 00000000                          11167          DC    Q(@@STATIC)
00008738 00000000                          11168          DC    X'00000000'
0000873C 00000840                          11169          DC    X'00000840'
00008740 0000000000005F80                  11170          DC    ADL8(@DATA)
00008748 00000000                          11171          DC    X'00000000'
0000874C 00000FF6                          11172          DC    X'00000FF6'
                                           11173 *
00008750 0D                                11174          DC    XL1'D'
00008751 000000                            11175          DC    AL3(0)
00008754 00001798                          11176          DC    AL4(6040)
00008758 00000000                          11177          DC    4X'00'
0000875C 00000000                          11178          DC    Q(@@STATIC)
00008760 00000000                          11179          DC    X'00000000'
00008764 00000848                          11180          DC    X'00000848'
00008768 0000000000005F80                  11181          DC    ADL8(@DATA)
00008770 00000000                          11182          DC    X'00000000'
00008774 00001002                          11183          DC    X'00001002'
                                           11184 *
00008778 0D                                11185          DC    XL1'D'
00008779 000000                            11186          DC    AL3(0)
0000877C 000017C0                          11187          DC    AL4(6080)
00008780 00000000                          11188          DC    4X'00'
00008784 00000000                          11189          DC    Q(@@STATIC)
00008788 00000000                          11190          DC    X'00000000'
0000878C 00000850                          11191          DC    X'00000850'
00008790 0000000000005F80                  11192          DC    ADL8(@DATA)
00008798 00000000                          11193          DC    X'00000000'
0000879C 00001018                          11194          DC    X'00001018'
                                           11195 *
000087A0 0D                                11196          DC    XL1'D'
000087A1 000000                            11197          DC    AL3(0)
000087A4 000017E8                          11198          DC    AL4(6120)
000087A8 00000000                          11199          DC    4X'00'
000087AC 00000000                          11200          DC    Q(@@STATIC)
                                                                                                                           Page  224 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000087B0 00000000                          11201          DC    X'00000000'
000087B4 00000858                          11202          DC    X'00000858'
000087B8 0000000000005F80                  11203          DC    ADL8(@DATA)
000087C0 00000000                          11204          DC    X'00000000'
000087C4 00001022                          11205          DC    X'00001022'
                                           11206 *
000087C8 0D                                11207          DC    XL1'D'
000087C9 000000                            11208          DC    AL3(0)
000087CC 00001810                          11209          DC    AL4(6160)
000087D0 00000000                          11210          DC    4X'00'
000087D4 00000000                          11211          DC    Q(@@STATIC)
000087D8 00000000                          11212          DC    X'00000000'
000087DC 00000860                          11213          DC    X'00000860'
000087E0 0000000000005F80                  11214          DC    ADL8(@DATA)
000087E8 00000000                          11215          DC    X'00000000'
000087EC 00001040                          11216          DC    X'00001040'
                                           11217 *
000087F0 0D                                11218          DC    XL1'D'
000087F1 000000                            11219          DC    AL3(0)
000087F4 00000000                          11220          DC    AL4(0)
000087F8 00000000                          11221          DC    4X'00'
000087FC 00000000                          11222          DC    Q(@@STATIC)
00008800 00000000                          11223          DC    X'00000000'
00008804 00000868                          11224          DC    X'00000868'
00008808 0000000000005F80                  11225          DC    ADL8(@DATA)
00008810 00000000                          11226          DC    X'00000000'
00008814 0000104E                          11227          DC    X'0000104E'
                                           11228 *
                                           11229          END
                                                 Relocation Dictionary                                                     Page  225 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000018 00000138   A 4      +
 00000002 0000001A 00000140   A 4      +
 00000002 00000002 00000168   A 4      +
 00000002 00000002 00000190   A 4      +
 00000002 00000002 00000198   A 4      +
 00000002 00000018 00000280   A 4      +
 00000002 0000001A 00000288   A 4      +
 00000002 00000002 000002B0   A 4      +
 00000002 00000002 000002D8   A 4      +
 00000002 00000002 000002E0   A 4      +
 00000002 00000018 000003B8   A 4      +
 00000002 0000001A 000003C0   A 4      +
 00000002 00000002 000003E8   A 4      +
 00000002 00000002 00000410   A 4      +
 00000002 00000002 00000418   A 4      +
 00000002 00000018 000004F8   A 4      +
 00000002 0000001A 00000500   A 4      +
 00000002 00000002 00000520   A 4      +
 00000002 00000002 00000548   A 4      +
 00000002 00000002 00000550   A 4      +
 00000002 00000013 00000658   A 4      +
 00000002 00000005 00000660   A 4      +
 00000002 00000028 00000668   A 4      +
 00000002 00000028 00000670   A 4      +
 00000002 00000002 00000690   A 4      +
 00000002 00000002 000006B8   A 4      +
 00000002 00000002 000006C0   A 4      +
 00000002 00000016 00000778   A 4      +
 00000002 00000002 00000798   A 4      +
 00000002 00000002 000007C0   A 4      +
 00000002 00000002 000007C8   A 4      +
 00000002 00000022 000008C8   A 4      +
 00000002 00000005 000008D0   A 4      +
 00000002 00000028 000008D8   A 4      +
 00000002 00000028 000008E0   A 4      +
 00000002 00000002 00000908   A 4      +
 00000002 00000002 00000930   A 4      +
 00000002 00000002 00000938   A 4      +
 00000002 00000002 00000A48   A 4      +
 00000002 00000028 00000A50   A 4      +
 00000002 00000005 00000A58   A 4      +
 00000002 00000028 00000A60   A 4      +
 00000002 00000002 00000AB0   A 4      +
 00000002 00000002 00000AB8   A 4      +
 00000002 00000002 00000B18   A 4      +
 00000002 00000002 00000B40   A 4      +
 00000002 00000002 00000B48   A 4      +
 00000002 00000006 00000BE8   A 4      +
 00000002 00000009 00000BF0   A 4      +
 00000002 00000008 00000BF8   A 4      +
                                                 Relocation Dictionary                                                     Page  226 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000D10   A 4      +
 00000002 00000002 00000D18   A 4      +
 00000002 00000002 00000D80   A 4      +
 00000002 00000002 00000DA8   A 4      +
 00000002 00000002 00000DB0   A 4      +
 00000002 00000024 00000E20   A 4      +
 00000002 00000002 00000E28   A 4      +
 00000002 00000002 00000EE0   A 4      +
 00000002 00000002 00000F08   A 4      +
 00000002 00000002 00000F10   A 4      +
 00000002 00000006 00000FE8   A 4      +
 00000002 00000009 00000FF0   A 4      +
 00000002 00000002 00001018   A 4      +
 00000002 00000002 00001040   A 4      +
 00000002 00000002 00001048   A 4      +
 00000002 00000006 00001130   A 4      +
 00000002 00000009 00001138   A 4      +
 00000002 00000002 00001160   A 4      +
 00000002 00000002 00001188   A 4      +
 00000002 00000002 00001190   A 4      +
 00000002 00000002 00001310   A 4      +
 00000002 00000014 00001318   A 4      +
 00000002 00000006 00001320   A 4      +
 00000002 00000023 00001328   A 4      +
 00000002 00000028 00001330   A 4      +
 00000002 00000028 00001338   A 4      +
 00000002 00000009 00001340   A 4      +
 00000002 0000000E 00001348   A 4      +
 00000002 00000002 00001378   A 4      +
 00000002 00000002 000013A0   A 4      +
 00000002 00000002 000013A8   A 4      +
 00000002 00000002 00001468   A 4      +
 00000002 00000002 00001490   A 4      +
 00000002 00000002 000014B8   A 4      +
 00000002 00000002 000014C0   A 4      +
 00000002 00000006 000015C0   A 4      +
 00000002 00000002 000015C8   A 4      +
 00000002 00000009 000015D0   A 4      +
 00000002 00000002 000015F8   A 4      +
 00000002 00000002 00001620   A 4      +
 00000002 00000002 00001628   A 4      +
 00000002 00000004 000016D8   A 4      +
 00000002 00000002 000017D0   A 4      +
 00000002 00000002 000017D8   A 4      +
 00000002 00000002 00001858   A 4      +
 00000002 00000002 00001880   A 4      +
 00000002 00000002 00001888   A 4      +
 00000002 00000002 00001920   A 4      +
 00000002 00000002 00001AE0   A 4      +
 00000002 00000002 00001B08   A 4      +
 00000002 00000002 00001B10   A 4      +
 00000002 00000006 00001BD0   A 4      +
 00000002 00000009 00001BD8   A 4      +
                                                 Relocation Dictionary                                                     Page  227 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00001BE0   A 4      +
 00000002 00000002 00001BE8   A 4      +
 00000002 00000002 00001BF0   A 4      +
 00000002 0000000A 00001BF8   A 4      +
 00000002 00000002 00001C00   A 4      +
 00000002 00000002 00001C08   A 4      +
 00000002 00000002 00001C10   A 4      +
 00000002 00000002 00001D98   A 4      +
 00000002 00000002 00001DC0   A 4      +
 00000002 00000002 00001DC8   A 4      +
 00000002 00000002 00001EA8   A 4      +
 00000002 00000002 00001ED0   A 4      +
 00000002 00000002 00001EF8   A 4      +
 00000002 00000002 00001F00   A 4      +
 00000002 00000002 00001F88   A 4      +
 00000002 00000002 00002010   A 4      +
 00000002 00000002 00002038   A 4      +
 00000002 00000002 00002040   A 4      +
 00000002 00000002 000020C0   A 4      +
 00000002 00000002 000020C8   A 4      +
 00000002 00000002 00002198   A 4      +
 00000002 00000002 000021A0   A 4      +
 00000002 00000002 000021F8   A 4      +
 00000002 00000002 00002220   A 4      +
 00000002 00000002 00002228   A 4      +
 00000002 00000002 00002308   A 4      +
 00000002 00000002 00002310   A 4      +
 00000002 00000002 00002338   A 4      +
 00000002 00000002 00002360   A 4      +
 00000002 00000002 00002368   A 4      +
 00000002 00000002 000023E8   A 4      +
 00000002 00000002 000023F0   A 4      +
 00000002 00000002 000024D0   A 4      +
 00000002 00000002 000024D8   A 4      +
 00000002 00000028 00002540   A 4      +
 00000002 00000002 00002570   A 4      +
 00000002 00000002 00002598   A 4      +
 00000002 00000002 000025A0   A 4      +
 00000002 00000002 00002628   A 4      +
 00000002 00000002 000026A0   A 4      +
 00000002 00000002 000026C8   A 4      +
 00000002 00000002 000026D0   A 4      +
 00000002 00000002 00002760   A 4      +
 00000002 0000001B 00002768   A 4      +
 00000002 00000002 00002770   A 4      +
 00000002 00000020 00002778   A 4      +
 00000002 00000002 00002818   A 4      +
 00000002 00000002 00002840   A 4      +
 00000002 00000002 00002848   A 4      +
 00000002 00000002 00002910   A 4      +
 00000002 00000002 00002940   A 4      +
 00000002 00000002 00002968   A 4      +
 00000002 00000002 00002970   A 4      +
                                                 Relocation Dictionary                                                     Page  228 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000006 00002A60   A 4      +
 00000002 00000009 00002A68   A 4      +
 00000002 00000002 00002A90   A 4      +
 00000002 00000002 00002AB8   A 4      +
 00000002 00000002 00002AC0   A 4      +
 00000002 00000027 00002B6C   Q 4      +
 00000002 00000028 00002B70   A 4      +
 00000002 00000005 00002B78   A 4      +
 00000002 00000028 00002B80   A 4      +
 00000002 00000002 00002C40   A 4      +
 00000002 00000002 00002C68   A 4      +
 00000002 00000002 00002C70   A 4      +
 00000002 00000002 00002E58   A 4      +
 00000002 00000007 00002E60   A 4      +
 00000002 00000028 00002E68   A 4      +
 00000002 0000000C 00002E70   A 4      +
 00000002 00000002 00002E78   A 4      +
 00000002 00000002 00003140   A 4      +
 00000002 00000002 00003168   A 4      +
 00000002 00000002 00003170   A 4      +
 00000002 00000028 00003208   A 4      +
 00000002 00000028 00003210   A 4      +
 00000002 00000005 00003218   A 4      +
 00000002 00000002 00003220   A 4      +
 00000002 00000002 000032F0   A 4      +
 00000002 00000002 00003318   A 4      +
 00000002 00000002 00003320   A 4      +
 00000002 00000005 00003460   A 4      +
 00000002 00000028 00003468   A 4      +
 00000002 00000028 00003470   A 4      +
 00000002 00000024 00003478   A 4      +
 00000002 00000021 00003480   A 4      +
 00000002 00000012 00003488   A 4      +
 00000002 00000002 00003490   A 4      +
 00000002 00000025 00003498   A 4      +
 00000002 00000002 000034A0   A 4      +
 00000002 0000001F 000034A8   A 4      +
 00000002 00000002 000034B0   A 4      +
 00000002 00000002 000034B8   A 4      +
 00000002 00000003 000034C0   A 4      +
 00000002 00000019 000034C8   A 4      +
 00000002 00000002 000034D0   A 4      +
 00000002 0000001D 000034D8   A 4      +
 00000002 00000025 00003BE8   A 4      +
 00000002 00000005 00003BF0   A 4      +
 00000002 00000028 00003BF8   A 4      +
 00000002 00000028 00003C00   A 4      +
 00000002 00000019 00003C08   A 4      +
 00000002 00000012 00003C10   A 4      +
 00000002 00000002 00003C18   A 4      +
 00000002 0000000B 00003C20   A 4      +
 00000002 00000010 00003C28   A 4      +
 00000002 00000002 00003C30   A 4      +
                                                 Relocation Dictionary                                                     Page  229 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00003C38   A 4      +
 00000002 00000002 00004148   A 4      +
 00000002 00000002 00004170   A 4      +
 00000002 00000002 00004178   A 4      +
 00000002 00000015 000042B0   A 4      +
 00000002 00000002 000042B8   A 4      +
 00000002 00000002 000042C0   A 4      +
 00000002 00000002 000042C8   A 4      +
 00000002 00000002 000042F8   A 4      +
 00000002 00000002 00004320   A 4      +
 00000002 00000002 00004328   A 4      +
 00000002 00000015 00004450   A 4      +
 00000002 00000002 00004458   A 4      +
 00000002 00000002 00004460   A 4      +
 00000002 00000002 00004468   A 4      +
 00000002 00000028 00004470   A 4      +
 00000002 0000001C 00004478   A 4      +
 00000002 00000002 00004480   A 4      +
 00000002 00000002 00004548   A 4      +
 00000002 00000002 00004570   A 4      +
 00000002 00000002 00004578   A 4      +
 00000002 00000002 000046A0   A 4      +
 00000002 00000002 000046A8   A 4      +
 00000002 00000028 000046B0   A 4      +
 00000002 00000002 000046D8   A 4      +
 00000002 00000002 00004700   A 4      +
 00000002 00000002 00004708   A 4      +
 00000002 00000002 000047E8   A 4      +
 00000002 00000002 00004810   A 4      +
 00000002 00000002 00004838   A 4      +
 00000002 00000002 00004840   A 4      +
 00000002 00000002 000048C0   A 4      +
 00000002 00000002 000048C8   A 4      +
 00000002 00000002 00004998   A 4      +
 00000002 00000002 000049C0   A 4      +
 00000002 00000002 000049C8   A 4      +
 00000002 00000010 00004A68   A 4      +
 00000002 00000002 00004A70   A 4      +
 00000002 0000000F 00004A78   A 4      +
 00000002 00000002 00004A80   A 4      +
 00000002 00000002 00004B68   A 4      +
 00000002 00000002 00004B90   A 4      +
 00000002 00000002 00004B98   A 4      +
 00000002 00000002 00004C50   A 4      +
 00000002 00000002 00004C58   A 4      +
 00000002 00000002 00004C60   A 4      +
 00000002 00000017 00004C68   A 4      +
 00000002 00000002 00004D10   A 4      +
 00000002 00000002 00004D38   A 4      +
 00000002 00000002 00004D40   A 4      +
 00000002 0000000D 00004E68   A 4      +
 00000002 00000028 00004E70   A 4      +
 00000002 00000002 00004E78   A 4      +
                                                 Relocation Dictionary                                                     Page  230 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00004E80   A 4      +
 00000002 00000002 00004EA8   A 4      +
 00000002 00000002 00004ED0   A 4      +
 00000002 00000002 00004ED8   A 4      +
 00000002 00000002 00004FC0   A 4      +
 00000002 00000002 00004FC8   A 4      +
 00000002 00000002 00004FF8   A 4      +
 00000002 00000002 00005020   A 4      +
 00000002 00000002 00005028   A 4      +
 00000002 00000002 000050F8   A 4      +
 00000002 00000002 00005128   A 4      +
 00000002 00000002 00005150   A 4      +
 00000002 00000002 00005158   A 4      +
 00000002 00000002 000051E8   A 4      +
 00000002 00000011 000051F0   A 4      +
 00000002 00000028 000051F8   A 4      +
 00000002 00000002 00005288   A 4      +
 00000002 00000002 000052B0   A 4      +
 00000002 00000002 000052B8   A 4      +
 00000002 00000005 000053B0   A 4      +
 00000002 00000028 000053B8   A 4      +
 00000002 00000028 000053C0   A 4      +
 00000002 0000001E 000053C8   Q 4      +
 00000002 00000002 00005450   A 4      +
 00000002 00000002 00005478   A 4      +
 00000002 00000002 00005480   A 4      +
 00000002 00000002 00005580   A 4      +
 00000002 00000002 000055B0   A 4      +
 00000002 00000002 000055D8   A 4      +
 00000002 00000002 000055E0   A 4      +
 00000002 00000002 00005770   A 4      +
 00000002 00000002 00005778   A 4      +
 00000002 00000028 00005780   A 4      +
 00000002 00000002 00005788   A 4      +
 00000002 00000002 000057B8   A 4      +
 00000002 00000002 000057E0   A 4      +
 00000002 00000002 000057E8   A 4      +
 00000002 00000002 000058B0   A 4      +
 00000002 00000002 000058B8   A 4      +
 00000002 00000002 000058C0   A 4      +
 00000002 00000002 000058C8   A 4      +
 00000002 00000002 000058D0   A 4      +
 00000002 00000002 000058D8   A 4      +
 00000002 00000002 000059E0   A 4      +
 00000002 00000002 00005A08   A 4      +
 00000002 00000002 00005A10   A 4      +
 00000002 00000002 00005A88   A 4      +
 00000002 00000002 00005A90   A 4      +
 00000002 00000021 00005A98   A 4      +
 00000002 00000002 00005BE8   A 4      +
 00000002 00000002 00005C10   A 4      +
 00000002 00000002 00005C18   A 4      +
 00000002 00000002 00005CF8   A 4      +
                                                 Relocation Dictionary                                                     Page  231 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00005D00   A 4      +
 00000002 00000002 00005DF8   A 4      +
 00000002 00000002 00005E20   A 4      +
 00000002 00000002 00005E28   A 4      +
 00000002 00000006 00005EA8   A 4      +
 00000002 00000002 00005EB0   A 4      +
 00000002 00000009 00005EB8   A 4      +
 0000002A 00000027 00006FEC   Q 4      +
 0000002A 00000027 0000710C   Q 4      +
 0000002A 00000027 000071CC   Q 4      +
 0000002A 00000027 000071F4   Q 4      +
 0000002A 00000027 0000721C   Q 4      +
 0000002A 00000028 00007228   A 4      +
 0000002A 00000027 00007244   Q 4      +
 0000002A 00000028 00007250   A 4      +
 0000002A 00000027 0000726C   Q 4      +
 0000002A 00000028 00007278   A 4      +
 0000002A 00000027 00007294   Q 4      +
 0000002A 00000028 000072A0   A 4      +
 0000002A 00000027 000072BC   Q 4      +
 0000002A 00000028 000072C8   A 4      +
 0000002A 00000027 000072E4   Q 4      +
 0000002A 00000028 000072F0   A 4      +
 0000002A 00000027 0000730C   Q 4      +
 0000002A 00000028 00007318   A 4      +
 0000002A 00000027 00007334   Q 4      +
 0000002A 00000028 00007340   A 4      +
 0000002A 00000027 0000735C   Q 4      +
 0000002A 00000028 00007368   A 4      +
 0000002A 00000027 00007384   Q 4      +
 0000002A 00000028 00007390   A 4      +
 0000002A 00000027 000073AC   Q 4      +
 0000002A 00000028 000073B8   A 4      +
 0000002A 00000027 000073D4   Q 4      +
 0000002A 00000028 000073E0   A 4      +
 0000002A 00000027 000073FC   Q 4      +
 0000002A 00000028 00007408   A 4      +
 0000002A 00000027 00007424   Q 4      +
 0000002A 00000028 00007430   A 4      +
 0000002A 00000027 0000744C   Q 4      +
 0000002A 00000028 00007458   A 4      +
 0000002A 00000027 00007474   Q 4      +
 0000002A 00000028 00007480   A 4      +
 0000002A 00000027 0000749C   Q 4      +
 0000002A 00000028 000074A8   A 4      +
 0000002A 00000027 000074C4   Q 4      +
 0000002A 00000028 000074D0   A 4      +
 0000002A 00000027 000074EC   Q 4      +
 0000002A 00000028 000074F8   A 4      +
 0000002A 00000027 00007514   Q 4      +
 0000002A 00000028 00007520   A 4      +
 0000002A 00000027 0000753C   Q 4      +
 0000002A 00000028 00007548   A 4      +
                                                 Relocation Dictionary                                                     Page  232 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000002A 00000027 00007564   Q 4      +
 0000002A 00000028 00007570   A 4      +
 0000002A 00000027 0000758C   Q 4      +
 0000002A 00000028 00007598   A 4      +
 0000002A 00000027 000075B4   Q 4      +
 0000002A 00000028 000075C0   A 4      +
 0000002A 00000027 000075DC   Q 4      +
 0000002A 00000028 000075E8   A 4      +
 0000002A 00000027 00007604   Q 4      +
 0000002A 00000028 00007610   A 4      +
 0000002A 00000027 0000762C   Q 4      +
 0000002A 00000028 00007638   A 4      +
 0000002A 00000027 00007654   Q 4      +
 0000002A 00000028 00007660   A 4      +
 0000002A 00000027 0000767C   Q 4      +
 0000002A 00000028 00007688   A 4      +
 0000002A 00000027 000076A4   Q 4      +
 0000002A 00000028 000076B0   A 4      +
 0000002A 00000027 000076CC   Q 4      +
 0000002A 00000028 000076D8   A 4      +
 0000002A 00000027 000076F4   Q 4      +
 0000002A 00000028 00007700   A 4      +
 0000002A 00000027 0000771C   Q 4      +
 0000002A 00000028 00007728   A 4      +
 0000002A 00000027 00007744   Q 4      +
 0000002A 00000028 00007750   A 4      +
 0000002A 00000027 0000776C   Q 4      +
 0000002A 00000028 00007778   A 4      +
 0000002A 00000027 00007794   Q 4      +
 0000002A 00000028 000077A0   A 4      +
 0000002A 00000027 000077BC   Q 4      +
 0000002A 00000028 000077C8   A 4      +
 0000002A 00000027 000077E4   Q 4      +
 0000002A 00000028 000077F0   A 4      +
 0000002A 00000027 0000780C   Q 4      +
 0000002A 00000028 00007818   A 4      +
 0000002A 00000027 00007834   Q 4      +
 0000002A 00000028 00007840   A 4      +
 0000002A 00000027 0000785C   Q 4      +
 0000002A 00000028 00007868   A 4      +
 0000002A 00000027 00007884   Q 4      +
 0000002A 00000028 00007890   A 4      +
 0000002A 00000027 000078AC   Q 4      +
 0000002A 00000028 000078B8   A 4      +
 0000002A 00000027 000078D4   Q 4      +
 0000002A 00000028 000078E0   A 4      +
 0000002A 00000027 000078FC   Q 4      +
 0000002A 00000028 00007908   A 4      +
 0000002A 00000027 00007924   Q 4      +
 0000002A 00000028 00007930   A 4      +
 0000002A 00000027 0000794C   Q 4      +
 0000002A 00000028 00007958   A 4      +
 0000002A 00000027 00007974   Q 4      +
                                                 Relocation Dictionary                                                     Page  233 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000002A 00000028 00007980   A 4      +
 0000002A 00000027 0000799C   Q 4      +
 0000002A 00000028 000079A8   A 4      +
 0000002A 00000027 000079C4   Q 4      +
 0000002A 00000028 000079D0   A 4      +
 0000002A 00000027 000079EC   Q 4      +
 0000002A 00000028 000079F8   A 4      +
 0000002A 00000027 00007A14   Q 4      +
 0000002A 00000028 00007A20   A 4      +
 0000002A 00000027 00007A3C   Q 4      +
 0000002A 00000028 00007A48   A 4      +
 0000002A 00000027 00007A64   Q 4      +
 0000002A 00000028 00007A70   A 4      +
 0000002A 00000027 00007A8C   Q 4      +
 0000002A 00000028 00007A98   A 4      +
 0000002A 00000027 00007AB4   Q 4      +
 0000002A 00000028 00007AC0   A 4      +
 0000002A 00000027 00007ADC   Q 4      +
 0000002A 00000028 00007AE8   A 4      +
 0000002A 00000027 00007B04   Q 4      +
 0000002A 00000028 00007B10   A 4      +
 0000002A 00000027 00007B2C   Q 4      +
 0000002A 00000028 00007B38   A 4      +
 0000002A 00000027 00007B54   Q 4      +
 0000002A 00000028 00007B60   A 4      +
 0000002A 00000027 00007B7C   Q 4      +
 0000002A 00000028 00007B88   A 4      +
 0000002A 00000027 00007BA4   Q 4      +
 0000002A 00000028 00007BB0   A 4      +
 0000002A 00000027 00007BCC   Q 4      +
 0000002A 00000028 00007BD8   A 4      +
 0000002A 00000027 00007BF4   Q 4      +
 0000002A 00000028 00007C00   A 4      +
 0000002A 00000027 00007C1C   Q 4      +
 0000002A 00000028 00007C28   A 4      +
 0000002A 00000027 00007C44   Q 4      +
 0000002A 00000028 00007C50   A 4      +
 0000002A 00000027 00007C6C   Q 4      +
 0000002A 00000028 00007C78   A 4      +
 0000002A 00000027 00007C94   Q 4      +
 0000002A 00000028 00007CA0   A 4      +
 0000002A 00000027 00007CBC   Q 4      +
 0000002A 00000028 00007CC8   A 4      +
 0000002A 00000027 00007CE4   Q 4      +
 0000002A 00000028 00007CF0   A 4      +
 0000002A 00000027 00007D0C   Q 4      +
 0000002A 00000028 00007D18   A 4      +
 0000002A 00000027 00007D34   Q 4      +
 0000002A 00000028 00007D40   A 4      +
 0000002A 00000027 00007D5C   Q 4      +
 0000002A 00000028 00007D68   A 4      +
 0000002A 00000027 00007D84   Q 4      +
 0000002A 00000028 00007D90   A 4      +
                                                 Relocation Dictionary                                                     Page  234 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000002A 00000027 00007DAC   Q 4      +
 0000002A 00000028 00007DB8   A 4      +
 0000002A 00000027 00007DD4   Q 4      +
 0000002A 00000028 00007DE0   A 4      +
 0000002A 00000027 00007DFC   Q 4      +
 0000002A 00000028 00007E08   A 4      +
 0000002A 00000027 00007E24   Q 4      +
 0000002A 00000028 00007E30   A 4      +
 0000002A 00000027 00007E4C   Q 4      +
 0000002A 00000028 00007E58   A 4      +
 0000002A 00000027 00007E74   Q 4      +
 0000002A 00000028 00007E80   A 4      +
 0000002A 00000027 00007E9C   Q 4      +
 0000002A 00000028 00007EA8   A 4      +
 0000002A 00000027 00007EC4   Q 4      +
 0000002A 00000028 00007ED0   A 4      +
 0000002A 00000027 00007EEC   Q 4      +
 0000002A 00000028 00007EF8   A 4      +
 0000002A 00000027 00007F14   Q 4      +
 0000002A 00000028 00007F20   A 4      +
 0000002A 00000027 00007F3C   Q 4      +
 0000002A 00000028 00007F48   A 4      +
 0000002A 00000027 00007F64   Q 4      +
 0000002A 00000028 00007F70   A 4      +
 0000002A 00000027 00007F8C   Q 4      +
 0000002A 00000028 00007F98   A 4      +
 0000002A 00000027 00007FB4   Q 4      +
 0000002A 00000028 00007FC0   A 4      +
 0000002A 00000027 00007FDC   Q 4      +
 0000002A 00000028 00007FE8   A 4      +
 0000002A 00000027 00008004   Q 4      +
 0000002A 00000028 00008010   A 4      +
 0000002A 00000027 0000802C   Q 4      +
 0000002A 00000028 00008038   A 4      +
 0000002A 00000027 00008054   Q 4      +
 0000002A 00000028 00008060   A 4      +
 0000002A 00000027 0000807C   Q 4      +
 0000002A 00000028 00008088   A 4      +
 0000002A 00000027 000080A4   Q 4      +
 0000002A 00000028 000080B0   A 4      +
 0000002A 00000027 000080CC   Q 4      +
 0000002A 00000028 000080D8   A 4      +
 0000002A 00000027 000080F4   Q 4      +
 0000002A 00000028 00008100   A 4      +
 0000002A 00000027 0000811C   Q 4      +
 0000002A 00000028 00008128   A 4      +
 0000002A 00000027 00008144   Q 4      +
 0000002A 00000028 00008150   A 4      +
 0000002A 00000027 0000816C   Q 4      +
 0000002A 00000028 00008178   A 4      +
 0000002A 00000027 00008194   Q 4      +
 0000002A 00000028 000081A0   A 4      +
 0000002A 00000027 000081BC   Q 4      +
                                                 Relocation Dictionary                                                     Page  235 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000002A 00000028 000081C8   A 4      +
 0000002A 00000027 000081E4   Q 4      +
 0000002A 00000028 000081F0   A 4      +
 0000002A 00000027 0000820C   Q 4      +
 0000002A 00000028 00008218   A 4      +
 0000002A 00000027 00008234   Q 4      +
 0000002A 00000028 00008240   A 4      +
 0000002A 00000027 0000825C   Q 4      +
 0000002A 00000028 00008268   A 4      +
 0000002A 00000027 00008284   Q 4      +
 0000002A 00000028 00008290   A 4      +
 0000002A 00000027 000082AC   Q 4      +
 0000002A 00000028 000082B8   A 4      +
 0000002A 00000027 000082D4   Q 4      +
 0000002A 00000028 000082E0   A 4      +
 0000002A 00000027 000082FC   Q 4      +
 0000002A 00000028 00008308   A 4      +
 0000002A 00000027 00008324   Q 4      +
 0000002A 00000028 00008330   A 4      +
 0000002A 00000027 0000834C   Q 4      +
 0000002A 00000028 00008358   A 4      +
 0000002A 00000027 00008374   Q 4      +
 0000002A 00000028 00008380   A 4      +
 0000002A 00000027 0000839C   Q 4      +
 0000002A 00000028 000083A8   A 4      +
 0000002A 00000027 000083C4   Q 4      +
 0000002A 00000028 000083D0   A 4      +
 0000002A 00000027 000083EC   Q 4      +
 0000002A 00000028 000083F8   A 4      +
 0000002A 00000027 00008414   Q 4      +
 0000002A 00000028 00008420   A 4      +
 0000002A 00000027 0000843C   Q 4      +
 0000002A 00000028 00008448   A 4      +
 0000002A 00000027 00008464   Q 4      +
 0000002A 00000028 00008470   A 4      +
 0000002A 00000027 0000848C   Q 4      +
 0000002A 00000028 00008498   A 4      +
 0000002A 00000027 000084B4   Q 4      +
 0000002A 00000028 000084C0   A 4      +
 0000002A 00000027 000084DC   Q 4      +
 0000002A 00000028 000084E8   A 4      +
 0000002A 00000027 00008504   Q 4      +
 0000002A 00000028 00008510   A 4      +
 0000002A 00000027 0000852C   Q 4      +
 0000002A 00000028 00008538   A 4      +
 0000002A 00000027 00008554   Q 4      +
 0000002A 00000028 00008560   A 4      +
 0000002A 00000027 0000857C   Q 4      +
 0000002A 00000028 00008588   A 4      +
 0000002A 00000027 000085A4   Q 4      +
 0000002A 00000028 000085B0   A 4      +
 0000002A 00000027 000085CC   Q 4      +
 0000002A 00000028 000085D8   A 4      +
                                                 Relocation Dictionary                                                     Page  236 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 0000002A 00000027 000085F4   Q 4      +
 0000002A 00000028 00008600   A 4      +
 0000002A 00000027 0000861C   Q 4      +
 0000002A 00000028 00008628   A 4      +
 0000002A 00000027 00008644   Q 4      +
 0000002A 00000028 00008650   A 4      +
 0000002A 00000027 0000866C   Q 4      +
 0000002A 00000028 00008678   A 4      +
 0000002A 00000027 00008694   Q 4      +
 0000002A 00000028 000086A0   A 4      +
 0000002A 00000027 000086BC   Q 4      +
 0000002A 00000028 000086C8   A 4      +
 0000002A 00000027 000086E4   Q 4      +
 0000002A 00000028 000086F0   A 4      +
 0000002A 00000027 0000870C   Q 4      +
 0000002A 00000028 00008718   A 4      +
 0000002A 00000027 00008734   Q 4      +
 0000002A 00000028 00008740   A 4      +
 0000002A 00000027 0000875C   Q 4      +
 0000002A 00000028 00008768   A 4      +
 0000002A 00000027 00008784   Q 4      +
 0000002A 00000028 00008790   A 4      +
 0000002A 00000027 000087AC   Q 4      +
 0000002A 00000028 000087B8   A 4      +
 0000002A 00000027 000087D4   Q 4      +
 0000002A 00000028 000087E0   A 4      +
 0000002A 00000027 000087FC   Q 4      +
 0000002A 00000028 00008808   A 4      +
                                                 DSECT Cross Reference                                                     Page  237 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#rd_atomic32_add
         000000AC  FFFFFFFF  00210
@AUTO#rd_atomic32_get
         000000AC  FFFFFFFD  00459
@AUTO#rd_atomic32_set
         000000AC  FFFFFFFC  00584
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFE  00337
@AUTO#rd_avg_add
         000000A8  FFFFFFF6  01331
@AUTO#rd_calloc
         000000A8  FFFFFFFB  00713
@AUTO#rd_free
         000000A8  FFFFFFFA  00816
@AUTO#rd_kafka_consumer_err
         000008A8  FFFFFFDA  06825
@AUTO#rd_kafka_msgq_init
         000000A8  FFFFFFF5  01412
@AUTO#rd_kafka_msgq_purge
         000000A8  FFFFFFF4  01544
@AUTO#rd_kafka_offset_store0
         000000A8  FFFFFFE0  04221
@AUTO#rd_kafka_op_call
         000000AC  FFFFFFD0  08231
@AUTO#rd_kafka_op_cmp_prio
         000000A8  FFFFFFED  02467
@AUTO#rd_kafka_op_destroy
         000000AC  FFFFFFDC  06458
@AUTO#rd_kafka_op_err_destroy
         000000AC  FFFFFFD2  07940
@AUTO#rd_kafka_op_error_destroy
         000000A8  FFFFFFD1  08074
@AUTO#rd_kafka_op_error_reply
         000000A8  FFFFFFD6  07404
@AUTO#rd_kafka_op_handle
         000000AC  FFFFFFCB  09116
@AUTO#rd_kafka_op_handle_std
         000000A8  FFFFFFCC  08930
@AUTO#rd_kafka_op_new_cb
         000000A8  FFFFFFD8  07087
@AUTO#rd_kafka_op_new_ctrl_msg
         000000A8  FFFFFFCF  08361
@AUTO#rd_kafka_op_new_fetch_msg
         000000A8  FFFFFFCE  08547
@AUTO#rd_kafka_op_new_reply
         000000A8  FFFFFFD9  06970
@AUTO#rd_kafka_op_new0
         000000B0  FFFFFFDD  05116
@AUTO#rd_kafka_op_offset_store
         000000B0  FFFFFFCA  09277
@AUTO#rd_kafka_op_print
         000000A8  FFFFFFDE  04865
@AUTO#rd_kafka_op_reply
                                                 DSECT Cross Reference                                                     Page  238 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
         000000A8  FFFFFFD7  07233
@AUTO#rd_kafka_op_req
         000000A8  FFFFFFD4  07704
@AUTO#rd_kafka_op_req0
         000000A8  FFFFFFD5  07560
@AUTO#rd_kafka_op_req2
         000000A8  FFFFFFD3  07823
@AUTO#rd_kafka_op_set_replyq
         000000A8  FFFFFFE8  03308
@AUTO#rd_kafka_op_throttle_time
         000000A8  FFFFFFCD  08742
@AUTO#rd_kafka_op2str
         000000AC  FFFFFFDF  04456
@AUTO#rd_kafka_q_destroy_owner
         000000A8  FFFFFFF0  02074
@AUTO#rd_kafka_q_destroy0
         000000AC  FFFFFFF1  01969
@AUTO#rd_kafka_q_disable0
         000000A8  FFFFFFF2  01783
@AUTO#rd_kafka_q_enq
         000000A8  FFFFFFEA  03066
@AUTO#rd_kafka_q_enq0
         000000A8  FFFFFFEC  02696
@AUTO#rd_kafka_q_enq1
         000000A8  FFFFFFEB  02957
@AUTO#rd_kafka_q_fwd_get
         000000A8  FFFFFFEF  02211
@AUTO#rd_kafka_q_io_event
         000000A8  FFFFFFEE  02374
@AUTO#rd_kafka_q_keep
         000000A8  FFFFFFF3  01660
@AUTO#rd_kafka_q_op_err
         000008A8  FFFFFFDB  06614
@AUTO#rd_kafka_replyq_clear
         000000A8  FFFFFFE7  03381
@AUTO#rd_kafka_replyq_destroy
         000000A8  FFFFFFE6  03499
@AUTO#rd_kafka_replyq_enq
         000000AC  FFFFFFE5  03646
@AUTO#rd_kafka_rkt_get_lw
         000000A8  FFFFFFE3  03852
@AUTO#rd_kafka_rkt_is_lw
         000000A8  FFFFFFE4  03739
@AUTO#rd_kafka_set_replyq
         000000A8  FFFFFFE9  03184
@AUTO#rd_kafka_topic_destroy0
         000000A8  FFFFFFE2  03990
@AUTO#rd_kafka_toppar_keep0
         000000A8  FFFFFFE1  04096
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFF8  01083
@AUTO#rd_strdup
         000000A8  FFFFFFF9  00947
                                                 DSECT Cross Reference                                                     Page  239 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#rd_timeout_us
         000000A8  FFFFFFF7  01167
                                          Macro and Copy Code Source Summary                                               Page  240 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:43 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  241 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   147  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 000E0    172 @REGION_1059_1,12
   205  00000148  00000002 DROP                                           12              12
   274  000001E6  00000002 USING  ORDINARY    000001A8 00001000 00000002  12 000E0    299 @REGION_1060_1,12
   332  00000290  00000002 DROP                                           12              12
   401  0000032E  00000002 USING  ORDINARY    000002F0 00001000 00000002  12 000D0    421 @REGION_1061_1,12
   454  000003C8  00000002 DROP                                           12              12
   523  00000466  00000002 USING  ORDINARY    00000428 00001000 00000002  12 000D8    545 @REGION_1062_1,12
   579  00000508  00000002 DROP                                           12              12
   648  0000059E  00000002 USING  ORDINARY    00000560 00001000 00000002  12 00110    675 @REGION_1077_1,12
   708  00000678  00000002 DROP                                           12              12
   776  0000070E  00000002 USING  ORDINARY    000006D0 00001000 00000002  12 000A8    783 @REGION_1080_1,12
   811  00000780  00000002 DROP                                           12              12
   879  00000816  00000002 USING  ORDINARY    000007D8 00001000 00000002  12 00108    909 @REGION_1081_1,12
   942  000008E8  00000002 DROP                                           12              12
  1010  00000986  00000002 USING  ORDINARY    00000948 00001000 00000002  12 00118   1044 @REGION_1084_1,12
  1078  00000A68  00000002 DROP                                           12              12
  1136  00000AD2  00000002 USING  ORDINARY    00000AC8 00001000 00000002  12 00024   1144 @REGION_1091_1,12
  1162  00000AFA  00000002 DROP                                           12              12
  1230  00000B96  00000002 USING  ORDINARY    00000B58 00001000 00000002  12 00122   1301 @REGION_1222_1,12
  1326  00000CC2  00000002 DROP                                           12              12
  1475  00000DFE  00000002 USING  ORDINARY    00000DC0 00001000 00000002  12 00098   1514 @REGION_1346_1,12
  1539  00000EC0  00000002 DROP                                           12              12
  1607  00000F5E  00000002 USING  ORDINARY    00000F20 00001000 00000002  12 000D0   1625 @REGION_1428_1,12
  1655  00000FF8  00000002 DROP                                           12              12
  1723  00001096  00000002 USING  ORDINARY    00001058 00001000 00000002  12 000E0   1748 @REGION_1432_1,12
  1778  00001140  00000002 DROP                                           12              12
  1846  000011DE  00000002 USING  ORDINARY    000011A0 00001000 00000002  12 001A8   1928 @REGION_1435_1,12
  1964  00001350  00000002 DROP                                           12              12
  2033  000013F6  00000002 USING  ORDINARY    000013B8 00001000 00000002  12 000B0   2041 @REGION_1436_1,12
  2069  00001470  00000002 DROP                                           12              12
  2137  0000150E  00000002 USING  ORDINARY    000014D0 00001000 00000002  12 00100   2173 @REGION_1439_1,12
  2206  000015D8  00000002 DROP                                           12              12
  2274  00001676  00000002 USING  ORDINARY    00001638 00001000 00000002  12 00102   2341 @REGION_1441_1,12
  2369  00001782  00000002 DROP                                           12              12
  2426  000017F2  00000002 USING  ORDINARY    000017E8 00001000 00000002  12 00042   2445 @REGION_1442_1,12
  2462  0000183C  00000002 DROP                                           12              12
  2530  000018D6  00000002 USING  ORDINARY    00001898 00001000 00000002  12 001C2   2656 @REGION_1444_1,12
  2691  00001AC0  00000002 DROP                                           12              12
  2759  00001B5E  00000002 USING  ORDINARY    00001B20 00001000 00000002  12 00212   2922 @REGION_1445_1,12
  2952  00001D7A  00000002 DROP                                           12              12
  3020  00001E16  00000002 USING  ORDINARY    00001DD8 00001000 00000002  12 000D0   3033 @REGION_1446_1,12
  3061  00001EB0  00000002 DROP                                           12              12
  3129  00001F4E  00000002 USING  ORDINARY    00001F10 00001000 00000002  12 00084   3144 @REGION_1456_1,12
  3179  00001FEA  00000002 DROP                                           12              12
  3247  0000208E  00000002 USING  ORDINARY    00002050 00001000 00000002  12 00084   3278 @REGION_1457_1,12
  3303  0000214E  00000002 DROP                                           12              12
  3444  00002276  00000002 USING  ORDINARY    00002238 00001000 00000002  12 000D8   3465 @REGION_1460_1,12
  3494  00002318  00000002 DROP                                           12              12
  3562  000023B6  00000002 USING  ORDINARY    00002378 00001000 00000002  12 00088   3614 @REGION_1461_1,12
  3641  00002488  00000002 DROP                                           12              12
  3699  000024F2  00000002 USING  ORDINARY    000024E8 00001000 00000002  12 00060   3719 @REGION_1670_1,12
                                                      Using Map                                                            Page  242 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  3734  00002550  00000002 DROP                                           12              12
  3802  000025EE  00000002 USING  ORDINARY    000025B0 00001000 00000002  12 00084   3819 @REGION_1671_1,12
  3847  0000267C  00000002 DROP                                           12              12
  3915  0000271E  00000002 USING  ORDINARY    000026E0 00001000 00000002  12 000CE   3958 @REGION_1678_1,12
  3985  000027F6  00000002 DROP                                           12              12
  4053  00002896  00000002 USING  ORDINARY    00002858 00001000 00000002  12 000B8   4062 @REGION_1780_1,12
  4091  00002918  00000002 DROP                                           12              12
  4159  000029BE  00000002 USING  ORDINARY    00002980 00001000 00000002  12 000E8   4186 @REGION_1918_1,12
  4216  00002A70  00000002 DROP                                           12              12
  4286  00002B0E  00000002 USING  ORDINARY    00002AD0 00001000 00000002  12 000EE   4417 @REGION_1403_1,12
  4451  00002C22  00000002 DROP                                           12              12
  4522  00002CBE  00000002 USING  ORDINARY    00002C80 00001000 00000002  12 00458   4838 @REGION_1422_1,12
  4860  00003120  00000002 DROP                                           12              12
  4930  000031BE  00000002 USING  ORDINARY    00003180 00001000 00000002  12 000E6   5079 @REGION_1405_1,12
  5111  000032CE  00000002 DROP                                           12              12
  5182  0000336E  00000002 USING  ORDINARY    00003330 00001000 00000002  12 0012C   5193 @REGION_1404_1,12
  5194  00003382  00000002 DROP                                           12              12
  5195  00003382  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 0014C   5196 @REGION_1404_2,12
  5197  00003386  00000002 DROP                                           12              12
  5198  00003386  00000002 USING  ORDINARY    00003330 00001000 00000002  12 0012C   5201 @REGION_1404_1,12
  5202  00003396  00000002 DROP                                           12              12
  5203  00003396  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 0014C   5204 @REGION_1404_2,12
  5205  0000339A  00000002 DROP                                           12              12
  5206  0000339A  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00140   5269 @REGION_1404_1,12
  5270  00003454  00000002 DROP                                           12              12
  5271  00003454  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 0014C   5272 @REGION_1404_2,12
  5273  00003458  00000002 DROP                                           12              12
  5274  00003458  00000002 USING  ORDINARY    00003330 00001000 00000002  12 001E0   5311 @REGION_1404_1,12
  5312  0000350C  00000002 DROP                                           12              12
  5313  0000350C  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5314 @REGION_1404_2,12
  5315  00003510  00000002 DROP                                           12              12
  5316  00003510  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00150   5329 @REGION_1404_1,12
  5330  0000352E  00000002 DROP                                           12              12
  5331  0000352E  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5332 @REGION_1404_2,12
  5333  00003532  00000002 DROP                                           12              12
  5334  00003532  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00216   5341 @REGION_1404_1,12
  5342  00003542  00000002 DROP                                           12              12
  5343  00003542  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5344 @REGION_1404_2,12
  5345  00003546  00000002 DROP                                           12              12
  5346  00003546  00000002 USING  ORDINARY    00003330 00001000 00000002  12 0022A   5350 @REGION_1404_1,12
  5351  00003556  00000002 DROP                                           12              12
  5352  00003556  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5353 @REGION_1404_2,12
  5354  0000355A  00000002 DROP                                           12              12
  5355  0000355A  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00158   5367 @REGION_1404_1,12
  5368  00003578  00000002 DROP                                           12              12
  5369  00003578  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5370 @REGION_1404_2,12
  5371  0000357C  00000002 DROP                                           12              12
  5372  0000357C  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00282   5395 @REGION_1404_1,12
  5396  000035AE  00000002 DROP                                           12              12
  5397  000035AE  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5398 @REGION_1404_2,12
  5399  000035B2  00000002 DROP                                           12              12
  5400  000035B2  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00160   5410 @REGION_1404_1,12
  5411  000035D0  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  243 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  5412  000035D0  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5413 @REGION_1404_2,12
  5414  000035D4  00000002 DROP                                           12              12
  5415  000035D4  00000002 USING  ORDINARY    00003330 00001000 00000002  12 002B8   5424 @REGION_1404_1,12
  5425  000035E4  00000002 DROP                                           12              12
  5426  000035E4  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5427 @REGION_1404_2,12
  5428  000035E8  00000002 DROP                                           12              12
  5429  000035E8  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00158   5440 @REGION_1404_1,12
  5441  00003606  00000002 DROP                                           12              12
  5442  00003606  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5443 @REGION_1404_2,12
  5444  0000360A  00000002 DROP                                           12              12
  5445  0000360A  00000002 USING  ORDINARY    00003330 00001000 00000002  12 002EE   5454 @REGION_1404_1,12
  5455  0000361A  00000002 DROP                                           12              12
  5456  0000361A  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5457 @REGION_1404_2,12
  5458  0000361E  00000002 DROP                                           12              12
  5459  0000361E  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00158   5470 @REGION_1404_1,12
  5471  0000363C  00000002 DROP                                           12              12
  5472  0000363C  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5473 @REGION_1404_2,12
  5474  00003640  00000002 DROP                                           12              12
  5475  00003640  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00324   5484 @REGION_1404_1,12
  5485  00003650  00000002 DROP                                           12              12
  5486  00003650  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5487 @REGION_1404_2,12
  5488  00003654  00000002 DROP                                           12              12
  5489  00003654  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00158   5500 @REGION_1404_1,12
  5501  00003672  00000002 DROP                                           12              12
  5502  00003672  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5503 @REGION_1404_2,12
  5504  00003676  00000002 DROP                                           12              12
  5505  00003676  00000002 USING  ORDINARY    00003330 00001000 00000002  12 0035A   5513 @REGION_1404_1,12
  5514  00003686  00000002 DROP                                           12              12
  5515  00003686  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5516 @REGION_1404_2,12
  5517  0000368A  00000002 DROP                                           12              12
  5518  0000368A  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00160   5528 @REGION_1404_1,12
  5529  000036A8  00000002 DROP                                           12              12
  5530  000036A8  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5531 @REGION_1404_2,12
  5532  000036AC  00000002 DROP                                           12              12
  5533  000036AC  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00390   5541 @REGION_1404_1,12
  5542  000036BC  00000002 DROP                                           12              12
  5543  000036BC  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5544 @REGION_1404_2,12
  5545  000036C0  00000002 DROP                                           12              12
  5546  000036C0  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00168   5557 @REGION_1404_1,12
  5558  000036DE  00000002 DROP                                           12              12
  5559  000036DE  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5560 @REGION_1404_2,12
  5561  000036E2  00000002 DROP                                           12              12
  5562  000036E2  00000002 USING  ORDINARY    00003330 00001000 00000002  12 003D4   5589 @REGION_1404_1,12
  5590  00003726  00000002 DROP                                           12              12
  5591  00003726  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5592 @REGION_1404_2,12
  5593  0000372A  00000002 DROP                                           12              12
  5594  0000372A  00000002 USING  ORDINARY    00003330 00001000 00000002  12 0040E   5604 @REGION_1404_1,12
  5605  0000373A  00000002 DROP                                           12              12
  5606  0000373A  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5607 @REGION_1404_2,12
  5608  0000373E  00000002 DROP                                           12              12
  5609  0000373E  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00160   5619 @REGION_1404_1,12
  5620  0000375C  00000002 DROP                                           12              12
  5621  0000375C  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5622 @REGION_1404_2,12
                                                      Using Map                                                            Page  244 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  5623  00003760  00000002 DROP                                           12              12
  5624  00003760  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00444   5632 @REGION_1404_1,12
  5633  00003770  00000002 DROP                                           12              12
  5634  00003770  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5635 @REGION_1404_2,12
  5636  00003774  00000002 DROP                                           12              12
  5637  00003774  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00160   5647 @REGION_1404_1,12
  5648  00003792  00000002 DROP                                           12              12
  5649  00003792  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5650 @REGION_1404_2,12
  5651  00003796  00000002 DROP                                           12              12
  5652  00003796  00000002 USING  ORDINARY    00003330 00001000 00000002  12 0049C   5678 @REGION_1404_1,12
  5679  000037C8  00000002 DROP                                           12              12
  5680  000037C8  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5681 @REGION_1404_2,12
  5682  000037CC  00000002 DROP                                           12              12
  5683  000037CC  00000002 USING  ORDINARY    00003330 00001000 00000002  12 004C8   5695 @REGION_1404_1,12
  5696  000037F4  00000002 DROP                                           12              12
  5697  000037F4  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5698 @REGION_1404_2,12
  5699  000037F8  00000002 DROP                                           12              12
  5700  000037F8  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00178   5712 @REGION_1404_1,12
  5713  00003816  00000002 DROP                                           12              12
  5714  00003816  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5715 @REGION_1404_2,12
  5716  0000381A  00000002 DROP                                           12              12
  5717  0000381A  00000002 USING  ORDINARY    00003330 00001000 00000002  12 0054E   5751 @REGION_1404_1,12
  5752  0000387A  00000002 DROP                                           12              12
  5753  0000387A  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5754 @REGION_1404_2,12
  5755  0000387E  00000002 DROP                                           12              12
  5756  0000387E  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00188   5767 @REGION_1404_1,12
  5768  0000389C  00000002 DROP                                           12              12
  5769  0000389C  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5770 @REGION_1404_2,12
  5771  000038A0  00000002 DROP                                           12              12
  5772  000038A0  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00584   5780 @REGION_1404_1,12
  5781  000038B0  00000002 DROP                                           12              12
  5782  000038B0  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5783 @REGION_1404_2,12
  5784  000038B4  00000002 DROP                                           12              12
  5785  000038B4  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00160   5795 @REGION_1404_1,12
  5796  000038D2  00000002 DROP                                           12              12
  5797  000038D2  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5798 @REGION_1404_2,12
  5799  000038D6  00000002 DROP                                           12              12
  5800  000038D6  00000002 USING  ORDINARY    00003330 00001000 00000002  12 005BA   5808 @REGION_1404_1,12
  5809  000038E6  00000002 DROP                                           12              12
  5810  000038E6  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5811 @REGION_1404_2,12
  5812  000038EA  00000002 DROP                                           12              12
  5813  000038EA  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00190   5823 @REGION_1404_1,12
  5824  00003908  00000002 DROP                                           12              12
  5825  00003908  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5826 @REGION_1404_2,12
  5827  0000390C  00000002 DROP                                           12              12
  5828  0000390C  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00160   5841 @REGION_1404_1,12
  5842  0000392A  00000002 DROP                                           12              12
  5843  0000392A  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5844 @REGION_1404_2,12
  5845  0000392E  00000002 DROP                                           12              12
  5846  0000392E  00000002 USING  ORDINARY    00003330 00001000 00000002  12 006E0   5941 @REGION_1404_1,12
  5942  00003A0C  00000002 DROP                                           12              12
  5943  00003A0C  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5944 @REGION_1404_2,12
  5945  00003A10  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  245 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  5946  00003A10  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00160   5956 @REGION_1404_1,12
  5957  00003A2E  00000002 DROP                                           12              12
  5958  00003A2E  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5959 @REGION_1404_2,12
  5960  00003A32  00000002 DROP                                           12              12
  5961  00003A32  00000002 USING  ORDINARY    00003330 00001000 00000002  12 0074E   5992 @REGION_1404_1,12
  5993  00003A7A  00000002 DROP                                           12              12
  5994  00003A7A  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   5995 @REGION_1404_2,12
  5996  00003A7E  00000002 DROP                                           12              12
  5997  00003A7E  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00140   6015 @REGION_1404_1,12
  6016  00003AC0  00000002 DROP                                           12              12
  6017  00003AC0  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   6018 @REGION_1404_2,12
  6019  00003AC4  00000002 DROP                                           12              12
  6020  00003AC4  00000002 USING  ORDINARY    00003330 00001000 00000002  12 007CA   6041 @REGION_1404_1,12
  6042  00003AF6  00000002 DROP                                           12              12
  6043  00003AF6  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   6044 @REGION_1404_2,12
  6045  00003AFA  00000002 DROP                                           12              12
  6046  00003AFA  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00160   6056 @REGION_1404_1,12
  6057  00003B18  00000002 DROP                                           12              12
  6058  00003B18  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   6059 @REGION_1404_2,12
  6060  00003B1C  00000002 DROP                                           12              12
  6061  00003B1C  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00818   6078 @REGION_1404_1,12
  6079  00003B44  00000002 DROP                                           12              12
  6080  00003B44  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   6081 @REGION_1404_2,12
  6082  00003B48  00000002 DROP                                           12              12
  6083  00003B48  00000002 USING  ORDINARY    00003330 00001000 00000002  12 001A8   6094 @REGION_1404_1,12
  6095  00003B66  00000002 DROP                                           12              12
  6096  00003B66  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   6097 @REGION_1404_2,12
  6098  00003B6A  00000002 DROP                                           12              12
  6099  00003B6A  00000002 USING  ORDINARY    00003330 00001000 00000002  12 00892   6135 @REGION_1404_1,12
  6136  00003BBE  00000002 DROP                                           12              12
  6137  00003BBE  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 00490   6138 @REGION_1404_2,12
  6139  00003BC2  00000002 DROP                                           12              12
  6140  00003BC2  00000002 USING  ORDINARY    00003330 00001000 00000002  12 0012C   6141 @REGION_1404_1,12
  6143  00003BC8  00000002 DROP                                           12              12
  6144  00003BC8  00000002 USING  ORDINARY    00003BC8 00001000 00000002  12 004F0   6428 @REGION_1404_2,12
  6453  00004128  00000002 DROP                                           12              12
  6524  000041C6  00000002 USING  ORDINARY    00004188 00001000 00000002  12 00140   6578 @REGION_1410_1,12
  6609  000042D0  00000002 DROP                                           12              12
  6680  00004376  00000002 USING  ORDINARY    00004338 00001000 00000002  12 00188   6795 @REGION_1411_1,12
  6820  00004526  00000002 DROP                                           12              12
  6891  000045C6  00000002 USING  ORDINARY    00004588 00001000 00000002  12 00128   6931 @REGION_1406_1,12
  6965  000046B8  00000002 DROP                                           12              12
  7035  00004756  00000002 USING  ORDINARY    00004718 00001000 00000002  12 000D0   7048 @REGION_1407_1,12
  7082  000047F0  00000002 DROP                                           12              12
  7152  0000488E  00000002 USING  ORDINARY    00004850 00001000 00000002  12 000DC   7202 @REGION_1408_1,12
  7228  00004974  00000002 DROP                                           12              12
  7298  00004A16  00000002 USING  ORDINARY    000049D8 00001000 00000002  12 00126   7373 @REGION_1409_1,12
  7399  00004B46  00000002 DROP                                           12              12
  7469  00004BE6  00000002 USING  ORDINARY    00004BA8 00001000 00000002  12 00104   7527 @REGION_1412_1,12
  7555  00004CF4  00000002 DROP                                           12              12
  7625  00004D8E  00000002 USING  ORDINARY    00004D50 00001000 00000002  12 00130   7666 @REGION_1413_1,12
  7699  00004E88  00000002 DROP                                           12              12
  7769  00004F26  00000002 USING  ORDINARY    00004EE8 00001000 00000002  12 000E0   7790 @REGION_1414_1,12
                                                      Using Map                                                            Page  246 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  7818  00004FD0  00000002 DROP                                           12              12
  7888  00005076  00000002 USING  ORDINARY    00005038 00001000 00000002  12 000C0   7904 @REGION_1415_1,12
  7935  00005100  00000002 DROP                                           12              12
  8006  000051A6  00000002 USING  ORDINARY    00005168 00001000 00000002  12 000BA   8044 @REGION_1416_1,12
  8069  0000526A  00000002 DROP                                           12              12
  8139  00005306  00000002 USING  ORDINARY    000052C8 00001000 00000002  12 0011A   8198 @REGION_1417_1,12
  8226  0000542A  00000002 DROP                                           12              12
  8297  000054CE  00000002 USING  ORDINARY    00005490 00001000 00000002  12 000F0   8321 @REGION_1419_1,12
  8356  00005588  00000002 DROP                                           12              12
  8426  0000562E  00000002 USING  ORDINARY    000055F0 00001000 00000002  12 00198   8479 @REGION_1418_1,12
  8542  00005790  00000002 DROP                                           12              12
  8612  00005836  00000002 USING  ORDINARY    000057F8 00001000 00000002  12 0017A   8712 @REGION_1420_1,12
  8737  000059BA  00000002 DROP                                           12              12
  8807  00005A5E  00000002 USING  ORDINARY    00005A20 00001000 00000002  12 0015E   8899 @REGION_1934_1,12
  8925  00005BC6  00000002 DROP                                           12              12
  8995  00005C66  00000002 USING  ORDINARY    00005C28 00001000 00000002  12 00160   9069 @REGION_1421_1,12
  9111  00005DD0  00000002 DROP                                           12              12
  9182  00005E76  00000002 USING  ORDINARY    00005E38 00001000 00000002  12 00100   9247 @REGION_1423_1,12
  9272  00005F80  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  247 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_OP ..\asg\asm\rdkafka_op.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 12.43.16 Stop Time: 12.43.16 Processor Time: 00.00.00.0740
Return Code 000
