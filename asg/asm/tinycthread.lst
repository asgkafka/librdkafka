                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/tinycthread.obj ../asg/asm/tinycthread.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\tinycthread.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
@@ZARCH#  WX 00000001                              00
@TINYCTHREAD
          SD 00000002 00000000 00002208            07  @CODE
@@PT3J    ER 00000003                                  PTHREAD_JOIN
@@PT3KC   ER 00000004                                  PTHREAD_KEY_CREATE
@@PT@KD   ER 00000005                                  PTHREAD_KEY_DELETE
malloc    ER 00000006                                  MALLOC
@@PT3XI   ER 00000007                                  PTHREAD_MUTEXATTR_INIT
@@PT3XS   ER 00000008                                  PTHREAD_MUTEXATTR_DESTROY
@@PT3TS   ER 00000009                                  PTHREAD_MUTEXATTR_SETTYPE
@@PT3MD   ER 0000000A                                  PTHREAD_MUTEX_DESTROY
@@PT3MI   ER 0000000B                                  PTHREAD_MUTEX_INIT
@@PT3ML   ER 0000000C                                  PTHREAD_MUTEX_LOCK
@@PT3MT   ER 0000000D                                  PTHREAD_MUTEX_TRYLOCK
@@PT3MU   ER 0000000E                                  PTHREAD_MUTEX_UNLOCK
@@CLKGET  ER 0000000F                                  CLOCK_GETTIME
@@NNOSLP  ER 00000010                                  NANOSLEEP
@@PT@S    ER 00000011                                  PTHREAD_SELF
@@PT3SS   ER 00000012                                  PTHREAD_SETSPECIFIC
##ERROR   ER 00000013                                  __ERROR
@@ASSERT  ER 00000014                                  __ASSERT
@@SCHD@Y  ER 00000015                                  SCHED_YIELD
@@PT3CB   ER 00000016                                  PTHREAD_COND_BROADCAST
@@PT3CD   ER 00000017                                  PTHREAD_COND_DESTROY
@@PT3CI   ER 00000018                                  PTHREAD_COND_INIT
@@PT3CS   ER 00000019                                  PTHREAD_COND_SIGNAL
@@PT3CT   ER 0000001A                                  PTHREAD_COND_TIMEDWAIT
@@PT3CW   ER 0000001B                                  PTHREAD_COND_WAIT
@@PT3C    ER 0000001C                                  PTHREAD_CREATE
@@PT3D    ER 0000001D                                  PTHREAD_DETACH
@@PT@EQ   ER 0000001E                                  PTHREAD_EQUAL
free      ER 0000001F                                  FREE
@@PT@EXI  ER 00000020                                  PTHREAD_EXIT
@@PT8GS   ER 00000021                                  PTHREAD_GETSPECIFIC
@tinycthread&
          XD 00000022 00000007 00000208                @@STATIC
@tinycthread
          SD 00000023 00002208 00000068            07  @DATA
tinycthread:
          SD 00000024 00002270 00000230            07  @@INIT@
mtx_init  LD          000002C8          00000002   00  MTX_INIT
mtx_destroy
          LD          00000460          00000002   00  MTX_DESTROY
mtx_lock  LD          00000568          00000002   00  MTX_LOCK
mtx_timedlock
          LD          00000690          00000002   00  MTX_TIMEDLOCK
mtx_trylock
          LD          000008E8          00000002   00  MTX_TRYLOCK
mtx_unlock
          LD          00000A08          00000002   00  MTX_UNLOCK
cnd_init  LD          00000B28          00000002   00  CND_INIT
cnd_destroy
          LD          00000C50          00000002   00  CND_DESTROY
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
cnd_signal
          LD          00000D58          00000002   00  CND_SIGNAL
cnd_broadcast
          LD          00000E80          00000002   00  CND_BROADCAST
cnd_wait  LD          00000FA0          00000002   00  CND_WAIT
cnd_timedwait
          LD          000010D0          00000002   00  CND_TIMEDWAIT
thrd_create
          LD          00001348          00000002   00  THRD_CREATE
thrd_current
          LD          00001510          00000002   00  THRD_CURRENT
thrd_detach
          LD          00001608          00000002   00  THRD_DETACH
thrd_equal
          LD          00001748          00000002   00  THRD_EQUAL
thrd_exit LD          00001860          00000002   00  THRD_EXIT
thrd_join LD          00001968          00000002   00  THRD_JOIN
thrd_sleep
          LD          00001AB0          00000002   00  THRD_SLEEP
thrd_yield
          LD          00001BC8          00000002   00  THRD_YIELD
tss_create
          LD          00001CC0          00000002   00  TSS_CREATE
tss_delete
          LD          00001DE8          00000002   00  TSS_DELETE
tss_get   LD          00001EF0          00000002   00  TSS_GET
tss_set   LD          00001FF8          00000002   00  TSS_SET
_tthread_timespec_get
          LD          00002128          00000002   00  _TTHREAD_TIMESPEC_GET
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:43:50 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@TINYCTHREAD'
00000000                00000000 00002208     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@tinycthread'
                                              18 pthread_join ALIAS C'@@PT3J'
                                              19          EXTRN pthread_join
                                              20 pthread_key_create ALIAS C'@@PT3KC'
                                              21          EXTRN pthread_key_create
                                              22 pthread_key_delete ALIAS C'@@PT@KD'
                                              23          EXTRN pthread_key_delete
                                              24 malloc   ALIAS C'malloc'
                                              25          EXTRN malloc
                                              26 pthread_mutexattr_init ALIAS C'@@PT3XI'
                                              27          EXTRN pthread_mutexattr_init
                                              28 pthread_mutexattr_destroy ALIAS C'@@PT3XS'
                                              29          EXTRN pthread_mutexattr_destroy
                                              30 pthread_mutexattr_settype ALIAS C'@@PT3TS'
                                              31          EXTRN pthread_mutexattr_settype
                                              32 pthread_mutex_destroy ALIAS C'@@PT3MD'
                                              33          EXTRN pthread_mutex_destroy
                                              34 pthread_mutex_init ALIAS C'@@PT3MI'
                                              35          EXTRN pthread_mutex_init
                                              36 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              37          EXTRN pthread_mutex_lock
                                              38 pthread_mutex_trylock ALIAS C'@@PT3MT'
                                              39          EXTRN pthread_mutex_trylock
                                              40 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              41          EXTRN pthread_mutex_unlock
                                              42 clock_gettime ALIAS C'@@CLKGET'
                                              43          EXTRN clock_gettime
                                              44 nanosleep ALIAS C'@@NNOSLP'
                                              45          EXTRN nanosleep
                                              46 pthread_self ALIAS C'@@PT@S'
                                              47          EXTRN pthread_self
                                              48 pthread_setspecific ALIAS C'@@PT3SS'
                                              49          EXTRN pthread_setspecific
                                              50 __error  ALIAS C'##ERROR'
                                              51          EXTRN __error
                                              52 __assert ALIAS C'@@ASSERT'
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                              53          EXTRN __assert
                                              54 sched_yield ALIAS C'@@SCHD@Y'
                                              55          EXTRN sched_yield
                                              56 pthread_cond_broadcast ALIAS C'@@PT3CB'
                                              57          EXTRN pthread_cond_broadcast
                                              58 pthread_cond_destroy ALIAS C'@@PT3CD'
                                              59          EXTRN pthread_cond_destroy
                                              60 pthread_cond_init ALIAS C'@@PT3CI'
                                              61          EXTRN pthread_cond_init
                                              62 pthread_cond_signal ALIAS C'@@PT3CS'
                                              63          EXTRN pthread_cond_signal
                                              64 pthread_cond_timedwait ALIAS C'@@PT3CT'
                                              65          EXTRN pthread_cond_timedwait
                                              66 pthread_cond_wait ALIAS C'@@PT3CW'
                                              67          EXTRN pthread_cond_wait
                                              68 pthread_create ALIAS C'@@PT3C'
                                              69          EXTRN pthread_create
                                              70 pthread_detach ALIAS C'@@PT3D'
                                              71          EXTRN pthread_detach
                                              72 pthread_equal ALIAS C'@@PT@EQ'
                                              73          EXTRN pthread_equal
                                              74 free     ALIAS C'free'
                                              75          EXTRN free
                                              76 pthread_exit ALIAS C'@@PT@EXI'
                                              77          EXTRN pthread_exit
                                              78 pthread_getspecific ALIAS C'@@PT8GS'
                                              79          EXTRN pthread_getspecific
                                              80 *
                                              81 *
                                              82 *
                                              83 * ....... start of rd_malloc
00000000                                      84 @LNAME752 DS   0H
00000000 00000009                             85          DC    X'00000009'
00000004 99846D9481939396                     86          DC    C'rd_malloc'
0000000D 00                                   87          DC    X'00'
                                              88 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                              89          macro
                                              90          dccextrn &m
                                              91          gblc    &$dccext(1000)
                                              92          gbla    &$dccexti
                                              93          lcla    &i
                                              94 &$dccext(&$dccexti+1) setc    '&m'
                                              95 &i       seta    1
                                              96 .loop    aif    (&i gt &$dccexti).around
                                              97          aif    ('&$dccext(&i)' eq '&m').getout
                                              98 &i       seta    &i+1
                                              99          ago     .loop
                                             100 .around  anop
                                             101 &$dccexti seta &$dccexti+1
                                             102          extrn  &m
                                             103 .getout  anop
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             104          mend
00000010                                     105+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                              106+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                  107+         dc xl1'01' format one                                          02-DCCCA
00000014 00000000                            108+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                    109+         dc ad(@PER_752)                                                02-DCCCA
00000020 00000000000000D0                    110+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                    111+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                    112+         dc ad(4096)                                                    02-DCCCA
00000038 20                                  113+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                  114+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                  115+         dc al1(3)                                                      02-DCCCA
0000003B 08                                  116+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                  117+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                              118+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                    119+         dc ad(@LNAME752)                                               02-DCCCA
00000048                                     120+         ds 0d                                                          02-DCCCA
00000048 0000000000000010                    121+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                    122+         dc ad(0)                                                       02-DCCCA
00000058                                     123+         ds    0d                                                       01-DCCPR
00000058                                     124+rd_malloc ds   0d                                                       01-DCCPR
00000058                                     125+@REGION_752_1 ds 0h                                                     01-DCCPR
00000058 EBEC D008 0024          00000008    126+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088    127+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090    128+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                           129+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018    130+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0    131+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020    132+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020    133+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                     134+@PER_752 ds    0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080    135+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090    136+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                           137+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                           138+         lgr   12,15               set base reg                         01-DCCPR
                        00000058             139+         using @REGION_752_1,12                                         01-DCCPR
                                             140 * ******* End of Prologue
                                             141 * *
                                             142 * ***      void *p = malloc(sz);
00000096 E3F0 1000 0004          00000000    143          LG    15,0(0,1)   ; sz
0000009C E3F0 D0B0 0024          000000B0    144          STG   15,176(0,13)
000000A2 4110 D0B0               000000B0    145          LA    1,176(0,13)
000000A6 E3F0 C0F0 0004          00000148    146          LG    15,@lit_752_0 ; malloc
000000AC                                     147 @@gen_label0 DS    0H
000000AC 05EF                                148          BALR  14,15
000000AE                                     149 @@gen_label1 DS    0H
000000AE B904 002F                           150          LGR   2,15
                                             151 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             152 * ka\\src\\rd.h", 128, "p"));
000000B2 B902 00F2                           153          LTGR  15,2
000000B6 4770 C09A               000000F2    154          BNZ   @L34
000000BA                                     155 @L33     DS    0H
                                                                                                                           Page    8 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000BA E3F0 C108 0004          00000160    156          LG    15,@lit_752_1
000000C0 41F0 F00A               0000000A    157          LA    15,10(0,15)
000000C4 E3F0 D0B0 0024          000000B0    158          STG   15,176(0,13)
000000CA E3F0 C100 0004          00000158    159          LG    15,@lit_752_2
000000D0 E3F0 D0B8 0024          000000B8    160          STG   15,184(0,13)
000000D6 E548 D0C0 0080          000000C0    161          MVGHI 192(13),128
000000DC 41F0 F020               00000020    162          LA    15,32(0,15)
000000E0 E3F0 D0C8 0024          000000C8    163          STG   15,200(0,13)
000000E6 4110 D0B0               000000B0    164          LA    1,176(0,13)
000000EA E3F0 C0F8 0004          00000150    165          LG    15,@lit_752_3 ; __assert
000000F0                                     166 @@gen_label3 DS    0H
000000F0 05EF                                167          BALR  14,15
000000F2                                     168 @@gen_label4 DS    0H
000000F2                                     169 @L34     DS    0H
                                             170 * ***      return p;
000000F2 B904 00F2                           171          LGR   15,2
                                             172 * ***   }
                                             173 * * **** Start of Epilogue
                                             174          DCCEPIL
000000F6                                     175+         ds 0h                                                          01-DCCEP
                                             176+* Epilog
000000F6 D707 D088 D088 00000088 00000088    177+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000FC E3D0 D080 0004          00000080    178+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000102 E3C0 D090 0004          00000090    179+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000108 E3B0 C018 0004          00000018    180+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000010E E3C0 B010 0021          00000010    181+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000114 E3E0 D008 0004          00000008    182+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000011A EB1C D020 0004          00000020    183+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000120 078E                                184+         bcr 8,14                if same dsab, just return              01-DCCEP
00000122 E3F0 D010 0024          00000010    185+         stg 15,16(0,13)         save return code                       01-DCCEP
00000128 E300 D018 0024          00000018    186+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000012E E3F0 D090 0004          00000090    187+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000134 E3F0 F018 0004          00000018    188+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000013A 47F0 F040               00000040    189+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             190+* End of Epilog
                                             191 * * **** End of Epilogue
00000140                                     192          DS    0D
00000140 000000D0                            193 @FRAMESIZE_752 DC F'208'
00000144 00000000
00000148 0000000000000000                    194 @lit_752_0 DC  AD(malloc)
00000150 0000000000000000                    195 @lit_752_3 DC  AD(__assert)
00000158 000000000000224E                    196 @lit_752_2 DC  AD(@strings@)
00000160 0000000000002208                    197 @lit_752_1 DC  AD(@DATA)
                                             198          DROP  12
                                             199 *
                                             200 *   DSECT for automatic variables in "rd_malloc"
                                             201 *      (FUNCTION #752)
                                             202 *
00000000                00000000 000000A8    203 @AUTO#rd_malloc DSECT
00000000                                     204          DS    XL168
                                             205 *
00000168                00000000 00002208    206 @CODE    CSECT
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             207 *
                                             208 *
                                             209 *
                                             210 * ....... start of rd_free
00000168                                     211 @LNAME754 DS   0H
00000168 00000007                            212          DC    X'00000007'
0000016C 99846D86998585                      213          DC    C'rd_free'
00000173 00                                  214          DC    X'00'
                                             215 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             216          macro
                                             217          dccextrn &m
                                             218          gblc    &$dccext(1000)
                                             219          gbla    &$dccexti
                                             220          lcla    &i
                                             221 &$dccext(&$dccexti+1) setc    '&m'
                                             222 &i       seta    1
                                             223 .loop    aif    (&i gt &$dccexti).around
                                             224          aif    ('&$dccext(&i)' eq '&m').getout
                                             225 &i       seta    &i+1
                                             226          ago     .loop
                                             227 .around  anop
                                             228 &$dccexti seta &$dccexti+1
                                             229          extrn  &m
                                             230 .getout  anop
                                             231          mend
00000178                                     232+$eye0005    ds    0d                                                    02-DCCCA
00000178 C4C3C3                              233+         dc cl3'DCC'                                                    02-DCCCA
0000017B 01                                  234+         dc xl1'01' format one                                          02-DCCCA
0000017C 00000000                            235+         dc a(0)                                                        02-DCCCA
00000180 00000000000001EA                    236+         dc ad(@PER_754)                                                02-DCCCA
00000188 00000000000000B0                    237+         dc ad(176)                                                     02-DCCCA
00000190 0000000000000000                    238+         dc ad(0)                                                       02-DCCCA
00000198 0000000000001000                    239+         dc ad(4096)                                                    02-DCCCA
000001A0 20                                  240+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A1 03                                  241+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001A2 03                                  242+         dc al1(3)                                                      02-DCCCA
000001A3 08                                  243+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000001A4 00                                  244+         dc bl.8'00000000'                                              02-DCCCA
000001A5 000000                              245+         dc al3(0)                                                      02-DCCCA
000001A8 0000000000000168                    246+         dc ad(@LNAME754)                                               02-DCCCA
000001B0                                     247+         ds 0d                                                          02-DCCCA
000001B0 0000000000000178                    248+         dc ad($eye0005)                                                02-DCCCA
000001B8 0000000000000000                    249+         dc ad(0)                                                       02-DCCCA
000001C0                                     250+         ds    0d                                                       01-DCCPR
000001C0                                     251+rd_free  ds    0d                                                       01-DCCPR
000001C0                                     252+@REGION_754_1 ds 0h                                                     01-DCCPR
000001C0 EBEC D008 0024          00000008    253+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001C6 E3E0 D088 0004          00000088    254+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001CC E3C0 D090 0004          00000090    255+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001D2 B904 002E                           256+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001D6 E3B0 C018 0004          00000018    257+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000001DC A7EB 00B0               000000B0    258+         aghi  14,176              increase by frame size               01-DCCPR
000001E0 E3E0 C020 0021          00000020    259+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001E6 4720 B020               00000020    260+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001EA                                     261+@PER_754 ds    0h                                                       01-DCCPR
000001EA EBDE 2080 0024          00000080    262+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F0 E3C0 2090 0024          00000090    263+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001F6 B904 00D2                           264+         lgr   13,2                set real frame pointer               01-DCCPR
000001FA B904 00CF                           265+         lgr   12,15               set base reg                         01-DCCPR
                        000001C0             266+         using @REGION_754_1,12                                         01-DCCPR
                                             267 * ******* End of Prologue
                                             268 * *
                                             269 * ***      free(ptr);
000001FE E3F0 1000 0004          00000000    270          LG    15,0(0,1)   ; ptr
00000204 E3F0 D0A8 0024          000000A8    271          STG   15,168(0,13)
0000020A 4110 D0A8               000000A8    272          LA    1,168(0,13)
0000020E E3F0 C0A8 0004          00000268    273          LG    15,@lit_754_5 ; free
00000214                                     274 @@gen_label5 DS    0H
00000214 05EF                                275          BALR  14,15
00000216                                     276 @@gen_label6 DS    0H
                                             277 * ***   }
00000216                                     278 @ret_lab_754 DS 0H
                                             279 * * **** Start of Epilogue
                                             280          DCCEPIL
00000216                                     281+         ds 0h                                                          01-DCCEP
                                             282+* Epilog
00000216 D707 D088 D088 00000088 00000088    283+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000021C E3D0 D080 0004          00000080    284+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000222 E3C0 D090 0004          00000090    285+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000228 E3B0 C018 0004          00000018    286+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000022E E3C0 B010 0021          00000010    287+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000234 E3E0 D008 0004          00000008    288+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000023A EB1C D020 0004          00000020    289+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000240 078E                                290+         bcr 8,14                if same dsab, just return              01-DCCEP
00000242 E3F0 D010 0024          00000010    291+         stg 15,16(0,13)         save return code                       01-DCCEP
00000248 E300 D018 0024          00000018    292+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000024E E3F0 D090 0004          00000090    293+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000254 E3F0 F018 0004          00000018    294+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000025A 47F0 F040               00000040    295+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             296+* End of Epilog
                                             297 * * **** End of Epilogue
00000260                                     298          DS    0D
00000260 000000B0                            299 @FRAMESIZE_754 DC F'176'
00000264 00000000
00000268 0000000000000000                    300 @lit_754_5 DC  AD(free)
                                             301          DROP  12
                                             302 *
                                             303 *   DSECT for automatic variables in "rd_free"
                                             304 *      (FUNCTION #754)
                                             305 *
00000000                00000000 000000A8    306 @AUTO#rd_free DSECT
00000000                                     307          DS    XL168
                                             308 *
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000270                00000000 00002208    309 @CODE    CSECT
                                             310 *
                                             311 *
                                             312 *
                                             313 * ....... start of mtx_init
                                             314 mtx_init ALIAS X'94A3A76D899589A3'
00000270                                     315 @LNAME685 DS   0H
00000270 00000008                            316          DC    X'00000008'
00000274 94A3A76D899589A3                    317          DC    C'mtx_init'
0000027C 00                                  318          DC    X'00'
                                             319 mtx_init DCCPRLG CINDEX=685,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME685
                                             320          macro
                                             321          dccextrn &m
                                             322          gblc    &$dccext(1000)
                                             323          gbla    &$dccexti
                                             324          lcla    &i
                                             325 &$dccext(&$dccexti+1) setc    '&m'
                                             326 &i       seta    1
                                             327 .loop    aif    (&i gt &$dccexti).around
                                             328          aif    ('&$dccext(&i)' eq '&m').getout
                                             329 &i       seta    &i+1
                                             330          ago     .loop
                                             331 .around  anop
                                             332 &$dccexti seta &$dccexti+1
                                             333          extrn  &m
                                             334 .getout  anop
                                             335          mend
00000280                                     336+$eye0008    ds    0d                                                    02-DCCCA
00000280 C4C3C3                              337+         dc cl3'DCC'                                                    02-DCCCA
00000283 01                                  338+         dc xl1'01' format one                                          02-DCCCA
00000284 00000000                            339+         dc a(0)                                                        02-DCCCA
00000288 00000000000002F2                    340+         dc ad(@PER_685)                                                02-DCCCA
00000290 00000000000000C0                    341+         dc ad(192)                                                     02-DCCCA
00000298 0000000000000000                    342+         dc ad(0)                                                       02-DCCCA
000002A0 0000000000001000                    343+         dc ad(4096)                                                    02-DCCCA
000002A8 20                                  344+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002A9 03                                  345+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002AA 03                                  346+         dc al1(3)                                                      02-DCCCA
000002AB 08                                  347+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002AC 00                                  348+         dc bl.8'00000000'                                              02-DCCCA
000002AD 000000                              349+         dc al3(0)                                                      02-DCCCA
000002B0 0000000000000270                    350+         dc ad(@LNAME685)                                               02-DCCCA
000002B8                                     351+         ds 0d                                                          02-DCCCA
000002B8 0000000000000280                    352+         dc ad($eye0008)                                                02-DCCCA
000002C0 0000000000000000                    353+         dc ad(0)                                                       02-DCCCA
000002C8                                     354+         ds    0d                                                       01-DCCPR
                                             355+         entry mtx_init                                                 01-DCCPR
000002C8                                     356+mtx_init ds    0d                                                       01-DCCPR
000002C8                                     357+@REGION_685_1 ds 0h                                                     01-DCCPR
000002C8 EBEC D008 0024          00000008    358+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002CE E3E0 D088 0004          00000088    359+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000002D4 E3C0 D090 0004          00000090    360+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000002DA B904 002E                           361+         lgr   2,14                copy addr of our savearea            01-DCCPR
000002DE E3B0 C018 0004          00000018    362+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000002E4 A7EB 00C0               000000C0    363+         aghi  14,192              increase by frame size               01-DCCPR
000002E8 E3E0 C020 0021          00000020    364+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000002EE 4720 B020               00000020    365+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000002F2                                     366+@PER_685 ds    0h                                                       01-DCCPR
000002F2 EBDE 2080 0024          00000080    367+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000002F8 E3C0 2090 0024          00000090    368+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000002FE B904 00D2                           369+         lgr   13,2                set real frame pointer               01-DCCPR
00000302 B904 00CF                           370+         lgr   12,15               set base reg                         01-DCCPR
                        000002C8             371+         using @REGION_685_1,12                                         01-DCCPR
00000306 B904 0021                           372          LGR   2,1         ; ptr to parm area
                                             373 * ******* End of Prologue
                                             374 * *
                                             375 * ***   # 81 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                             376 * ***     int ret;
                                             377 * ***     pthread_mutexattr_t attr;
                                             378 * ***     pthread_mutexattr_init(&attr);
0000030A 41F0 D0A8               000000A8    379          LA    15,168(0,13)
0000030E E3F0 D0B0 0024          000000B0    380          STG   15,176(0,13)
00000314 4110 D0B0               000000B0    381          LA    1,176(0,13)
00000318 E3F0 C0D0 0004          00000398    382          LG    15,@lit_685_7 ; pthread_mutexattr_init
0000031E                                     383 @@gen_label7 DS    0H
0000031E 05EF                                384          BALR  14,15
00000320                                     385 @@gen_label8 DS    0H
                                             386 * ***     if (type & 1)
00000320 9101 200F      0000000F 00000001    387          TM    15(2),1
00000324 4780 C07C               00000344    388          BZ    @L44
                                             389 * ***     {
                                             390 * ***       pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE);
00000328 41F0 D0A8               000000A8    391          LA    15,168(0,13)
0000032C E3F0 D0B0 0024          000000B0    392          STG   15,176(0,13)
00000332 E548 D0B8 0001          000000B8    393          MVGHI 184(13),1
00000338 4110 D0B0               000000B0    394          LA    1,176(0,13)
0000033C E3F0 C0D8 0004          000003A0    395          LG    15,@lit_685_8 ; pthread_mutexattr_settype
00000342                                     396 @@gen_label10 DS    0H
00000342 05EF                                397          BALR  14,15
00000344                                     398 @@gen_label11 DS    0H
                                             399 * ***     }
00000344                                     400 @L44     DS    0H
                                             401 * ***     ret = pthread_mutex_init(mtx, &attr);
00000344 E3F0 2000 0004          00000000    402          LG    15,0(0,2)   ; mtx
0000034A E3F0 D0B0 0024          000000B0    403          STG   15,176(0,13)
00000350 41F0 D0A8               000000A8    404          LA    15,168(0,13)
00000354 E3F0 D0B8 0024          000000B8    405          STG   15,184(0,13)
0000035A 4110 D0B0               000000B0    406          LA    1,176(0,13)
0000035E E3F0 C0E0 0004          000003A8    407          LG    15,@lit_685_9 ; pthread_mutex_init
00000364                                     408 @@gen_label12 DS    0H
00000364 05EF                                409          BALR  14,15
00000366                                     410 @@gen_label13 DS    0H
00000366 182F                                411          LR    2,15
                                                                                                                           Page   13 
  Active Usings: @REGION_685_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             412 * ***     pthread_mutexattr_destroy(&attr);
00000368 41F0 D0A8               000000A8    413          LA    15,168(0,13)
0000036C E3F0 D0B0 0024          000000B0    414          STG   15,176(0,13)
00000372 4110 D0B0               000000B0    415          LA    1,176(0,13)
00000376 E3F0 C0E8 0004          000003B0    416          LG    15,@lit_685_10 ; pthread_mutexattr_destroy
0000037C                                     417 @@gen_label14 DS    0H
0000037C 05EF                                418          BALR  14,15
0000037E                                     419 @@gen_label15 DS    0H
                                             420 * ***     return ret == 0 ? 0 : 2;
0000037E 1222                                421          LTR   2,2
00000380 4770 C0F0               000003B8    422          BNE   @L45
00000384 A7F8 0000               00000000    423          LHI   15,0        ; 0
00000388 47F0 C0F4               000003BC    424          B     @L46
00000390                                     425          DS    0D
00000390 000000C0                            426 @FRAMESIZE_685 DC F'192'
00000394 00000000
00000398 0000000000000000                    427 @lit_685_7 DC  AD(pthread_mutexattr_init)
000003A0 0000000000000000                    428 @lit_685_8 DC  AD(pthread_mutexattr_settype)
000003A8 0000000000000000                    429 @lit_685_9 DC  AD(pthread_mutex_init)
000003B0 0000000000000000                    430 @lit_685_10 DC AD(pthread_mutexattr_destroy)
000003B8                                     431 @L45     DS    0H
000003B8 A7F8 0002               00000002    432          LHI   15,2        ; 2
000003BC                                     433 @L46     DS    0H
000003BC B914 00FF                           434          LGFR  15,15
                                             435 * ***
                                             436 * ***   }
                                             437 * * **** Start of Epilogue
                                             438          DCCEPIL
000003C0                                     439+         ds 0h                                                          01-DCCEP
                                             440+* Epilog
000003C0 D707 D088 D088 00000088 00000088    441+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000003C6 E3D0 D080 0004          00000080    442+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000003CC E3C0 D090 0004          00000090    443+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000003D2 E3B0 C018 0004          00000018    444+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000003D8 E3C0 B010 0021          00000010    445+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000003DE E3E0 D008 0004          00000008    446+         lg  14,8(0,13)          load up return address                 01-DCCEP
000003E4 EB1C D020 0004          00000020    447+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000003EA 078E                                448+         bcr 8,14                if same dsab, just return              01-DCCEP
000003EC E3F0 D010 0024          00000010    449+         stg 15,16(0,13)         save return code                       01-DCCEP
000003F2 E300 D018 0024          00000018    450+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003F8 E3F0 D090 0004          00000090    451+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003FE E3F0 F018 0004          00000018    452+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000404 47F0 F040               00000040    453+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             454+* End of Epilog
                                             455 * * **** End of Epilogue
                                             456          DROP  12
                                             457 *
                                             458 *   DSECT for automatic variables in "mtx_init"
                                             459 *      (FUNCTION #685)
                                             460 *
00000000                00000000 000000AC    461 @AUTO#mtx_init DSECT
00000000                                     462          DS    XL168
                                                                                                                           Page   14 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                     463 mtx_init#attr#0 DS 4XL1    ; attr
000000AC                000000AC 000000A8    464          ORG   @AUTO#mtx_init+168
000000A8                                     465 mtx_init#ret#0 DS 1F       ; ret
                                             466 *
00000408                00000000 00002208    467 @CODE    CSECT
                                             468 *
                                             469 *
                                             470 *
                                             471 * ....... start of mtx_destroy
                                             472 mtx_destroy ALIAS X'94A3A76D8485A2A39996A8'
00000408                                     473 @LNAME686 DS   0H
00000408 0000000B                            474          DC    X'0000000B'
0000040C 94A3A76D8485A2A3                    475          DC    C'mtx_destroy'
00000417 00                                  476          DC    X'00'
                                             477 mtx_destroy DCCPRLG CINDEX=686,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME686
                                             478          macro
                                             479          dccextrn &m
                                             480          gblc    &$dccext(1000)
                                             481          gbla    &$dccexti
                                             482          lcla    &i
                                             483 &$dccext(&$dccexti+1) setc    '&m'
                                             484 &i       seta    1
                                             485 .loop    aif    (&i gt &$dccexti).around
                                             486          aif    ('&$dccext(&i)' eq '&m').getout
                                             487 &i       seta    &i+1
                                             488          ago     .loop
                                             489 .around  anop
                                             490 &$dccexti seta &$dccexti+1
                                             491          extrn  &m
                                             492 .getout  anop
                                             493          mend
00000418                                     494+$eye0011    ds    0d                                                    02-DCCCA
00000418 C4C3C3                              495+         dc cl3'DCC'                                                    02-DCCCA
0000041B 01                                  496+         dc xl1'01' format one                                          02-DCCCA
0000041C 00000000                            497+         dc a(0)                                                        02-DCCCA
00000420 000000000000048A                    498+         dc ad(@PER_686)                                                02-DCCCA
00000428 00000000000000B0                    499+         dc ad(176)                                                     02-DCCCA
00000430 0000000000000000                    500+         dc ad(0)                                                       02-DCCCA
00000438 0000000000001000                    501+         dc ad(4096)                                                    02-DCCCA
00000440 20                                  502+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000441 03                                  503+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000442 03                                  504+         dc al1(3)                                                      02-DCCCA
00000443 08                                  505+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000444 00                                  506+         dc bl.8'00000000'                                              02-DCCCA
00000445 000000                              507+         dc al3(0)                                                      02-DCCCA
00000448 0000000000000408                    508+         dc ad(@LNAME686)                                               02-DCCCA
00000450                                     509+         ds 0d                                                          02-DCCCA
00000450 0000000000000418                    510+         dc ad($eye0011)                                                02-DCCCA
00000458 0000000000000000                    511+         dc ad(0)                                                       02-DCCCA
00000460                                     512+         ds    0d                                                       01-DCCPR
                                             513+         entry mtx_destroy                                              01-DCCPR
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000460                                     514+mtx_destroy ds 0d                                                       01-DCCPR
00000460                                     515+@REGION_686_1 ds 0h                                                     01-DCCPR
00000460 EBEC D008 0024          00000008    516+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000466 E3E0 D088 0004          00000088    517+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000046C E3C0 D090 0004          00000090    518+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000472 B904 002E                           519+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000476 E3B0 C018 0004          00000018    520+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000047C A7EB 00B0               000000B0    521+         aghi  14,176              increase by frame size               01-DCCPR
00000480 E3E0 C020 0021          00000020    522+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000486 4720 B020               00000020    523+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000048A                                     524+@PER_686 ds    0h                                                       01-DCCPR
0000048A EBDE 2080 0024          00000080    525+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000490 E3C0 2090 0024          00000090    526+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000496 B904 00D2                           527+         lgr   13,2                set real frame pointer               01-DCCPR
0000049A B904 00CF                           528+         lgr   12,15               set base reg                         01-DCCPR
                        00000460             529+         using @REGION_686_1,12                                         01-DCCPR
                                             530 * ******* End of Prologue
                                             531 * *
                                             532 * ***   # 106 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                             533 * ***     pthread_mutex_destroy(mtx);
0000049E E3F0 1000 0004          00000000    534          LG    15,0(0,1)   ; mtx
000004A4 E3F0 D0A8 0024          000000A8    535          STG   15,168(0,13)
000004AA 4110 D0A8               000000A8    536          LA    1,168(0,13)
000004AE E3F0 C0A8 0004          00000508    537          LG    15,@lit_686_14 ; pthread_mutex_destroy
000004B4                                     538 @@gen_label17 DS    0H
000004B4 05EF                                539          BALR  14,15
000004B6                                     540 @@gen_label18 DS    0H
                                             541 * ***
                                             542 * ***   }
000004B6                                     543 @ret_lab_686 DS 0H
                                             544 * * **** Start of Epilogue
                                             545          DCCEPIL
000004B6                                     546+         ds 0h                                                          01-DCCEP
                                             547+* Epilog
000004B6 D707 D088 D088 00000088 00000088    548+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000004BC E3D0 D080 0004          00000080    549+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000004C2 E3C0 D090 0004          00000090    550+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000004C8 E3B0 C018 0004          00000018    551+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000004CE E3C0 B010 0021          00000010    552+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000004D4 E3E0 D008 0004          00000008    553+         lg  14,8(0,13)          load up return address                 01-DCCEP
000004DA EB1C D020 0004          00000020    554+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000004E0 078E                                555+         bcr 8,14                if same dsab, just return              01-DCCEP
000004E2 E3F0 D010 0024          00000010    556+         stg 15,16(0,13)         save return code                       01-DCCEP
000004E8 E300 D018 0024          00000018    557+         stg 0,24(0,13)          save more return code                  01-DCCEP
000004EE E3F0 D090 0004          00000090    558+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000004F4 E3F0 F018 0004          00000018    559+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000004FA 47F0 F040               00000040    560+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             561+* End of Epilog
                                             562 * * **** End of Epilogue
00000500                                     563          DS    0D
00000500 000000B0                            564 @FRAMESIZE_686 DC F'176'
00000504 00000000
                                                                                                                           Page   16 
  Active Usings: @REGION_686_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000508 0000000000000000                    565 @lit_686_14 DC AD(pthread_mutex_destroy)
                                             566          DROP  12
                                             567 *
                                             568 *   DSECT for automatic variables in "mtx_destroy"
                                             569 *      (FUNCTION #686)
                                             570 *
00000000                00000000 000000A8    571 @AUTO#mtx_destroy DSECT
00000000                                     572          DS    XL168
                                             573 *
00000510                00000000 00002208    574 @CODE    CSECT
                                             575 *
                                             576 *
                                             577 *
                                             578 * ....... start of mtx_lock
                                             579 mtx_lock ALIAS X'94A3A76D93968392'
00000510                                     580 @LNAME687 DS   0H
00000510 00000008                            581          DC    X'00000008'
00000514 94A3A76D93968392                    582          DC    C'mtx_lock'
0000051C 00                                  583          DC    X'00'
                                             584 mtx_lock DCCPRLG CINDEX=687,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME687
                                             585          macro
                                             586          dccextrn &m
                                             587          gblc    &$dccext(1000)
                                             588          gbla    &$dccexti
                                             589          lcla    &i
                                             590 &$dccext(&$dccexti+1) setc    '&m'
                                             591 &i       seta    1
                                             592 .loop    aif    (&i gt &$dccexti).around
                                             593          aif    ('&$dccext(&i)' eq '&m').getout
                                             594 &i       seta    &i+1
                                             595          ago     .loop
                                             596 .around  anop
                                             597 &$dccexti seta &$dccexti+1
                                             598          extrn  &m
                                             599 .getout  anop
                                             600          mend
00000520                                     601+$eye0014    ds    0d                                                    02-DCCCA
00000520 C4C3C3                              602+         dc cl3'DCC'                                                    02-DCCCA
00000523 01                                  603+         dc xl1'01' format one                                          02-DCCCA
00000524 00000000                            604+         dc a(0)                                                        02-DCCCA
00000528 0000000000000592                    605+         dc ad(@PER_687)                                                02-DCCCA
00000530 00000000000000B0                    606+         dc ad(176)                                                     02-DCCCA
00000538 0000000000000000                    607+         dc ad(0)                                                       02-DCCCA
00000540 0000000000001000                    608+         dc ad(4096)                                                    02-DCCCA
00000548 20                                  609+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000549 03                                  610+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000054A 03                                  611+         dc al1(3)                                                      02-DCCCA
0000054B 08                                  612+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000054C 00                                  613+         dc bl.8'00000000'                                              02-DCCCA
0000054D 000000                              614+         dc al3(0)                                                      02-DCCCA
00000550 0000000000000510                    615+         dc ad(@LNAME687)                                               02-DCCCA
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000558                                     616+         ds 0d                                                          02-DCCCA
00000558 0000000000000520                    617+         dc ad($eye0014)                                                02-DCCCA
00000560 0000000000000000                    618+         dc ad(0)                                                       02-DCCCA
00000568                                     619+         ds    0d                                                       01-DCCPR
                                             620+         entry mtx_lock                                                 01-DCCPR
00000568                                     621+mtx_lock ds    0d                                                       01-DCCPR
00000568                                     622+@REGION_687_1 ds 0h                                                     01-DCCPR
00000568 EBEC D008 0024          00000008    623+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000056E E3E0 D088 0004          00000088    624+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000574 E3C0 D090 0004          00000090    625+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000057A B904 002E                           626+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000057E E3B0 C018 0004          00000018    627+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000584 A7EB 00B0               000000B0    628+         aghi  14,176              increase by frame size               01-DCCPR
00000588 E3E0 C020 0021          00000020    629+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000058E 4720 B020               00000020    630+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000592                                     631+@PER_687 ds    0h                                                       01-DCCPR
00000592 EBDE 2080 0024          00000080    632+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000598 E3C0 2090 0024          00000090    633+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000059E B904 00D2                           634+         lgr   13,2                set real frame pointer               01-DCCPR
000005A2 B904 00CF                           635+         lgr   12,15               set base reg                         01-DCCPR
                        00000568             636+         using @REGION_687_1,12                                         01-DCCPR
                                             637 * ******* End of Prologue
                                             638 * *
                                             639 * ***   # 136 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                             640 * ***     return pthread_mutex_lock(mtx) == 0 ? 0 : 2;
000005A6 E3F0 1000 0004          00000000    641          LG    15,0(0,1)   ; mtx
000005AC E3F0 D0A8 0024          000000A8    642          STG   15,168(0,13)
000005B2 4110 D0A8               000000A8    643          LA    1,168(0,13)
000005B6 E3F0 C070 0004          000005D8    644          LG    15,@lit_687_16 ; pthread_mutex_lock
000005BC                                     645 @@gen_label19 DS    0H
000005BC 05EF                                646          BALR  14,15
000005BE                                     647 @@gen_label20 DS    0H
000005BE 12FF                                648          LTR   15,15
000005C0 4770 C078               000005E0    649          BNE   @L47
000005C4 A7F8 0000               00000000    650          LHI   15,0        ; 0
000005C8 47F0 C07C               000005E4    651          B     @L48
000005D0                                     652          DS    0D
000005D0 000000B0                            653 @FRAMESIZE_687 DC F'176'
000005D4 00000000
000005D8 0000000000000000                    654 @lit_687_16 DC AD(pthread_mutex_lock)
000005E0                                     655 @L47     DS    0H
000005E0 A7F8 0002               00000002    656          LHI   15,2        ; 2
000005E4                                     657 @L48     DS    0H
000005E4 B914 00FF                           658          LGFR  15,15
                                             659 * ***
                                             660 * ***   }
                                             661 * * **** Start of Epilogue
                                             662          DCCEPIL
000005E8                                     663+         ds 0h                                                          01-DCCEP
                                             664+* Epilog
000005E8 D707 D088 D088 00000088 00000088    665+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000005EE E3D0 D080 0004          00000080    666+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page   18 
  Active Usings: @REGION_687_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000005F4 E3C0 D090 0004          00000090    667+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000005FA E3B0 C018 0004          00000018    668+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000600 E3C0 B010 0021          00000010    669+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000606 E3E0 D008 0004          00000008    670+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000060C EB1C D020 0004          00000020    671+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000612 078E                                672+         bcr 8,14                if same dsab, just return              01-DCCEP
00000614 E3F0 D010 0024          00000010    673+         stg 15,16(0,13)         save return code                       01-DCCEP
0000061A E300 D018 0024          00000018    674+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000620 E3F0 D090 0004          00000090    675+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000626 E3F0 F018 0004          00000018    676+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000062C 47F0 F040               00000040    677+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             678+* End of Epilog
                                             679 * * **** End of Epilogue
                                             680          DROP  12
                                             681 *
                                             682 *   DSECT for automatic variables in "mtx_lock"
                                             683 *      (FUNCTION #687)
                                             684 *
00000000                00000000 000000A8    685 @AUTO#mtx_lock DSECT
00000000                                     686          DS    XL168
                                             687 *
00000630                00000000 00002208    688 @CODE    CSECT
                                             689 *
                                             690 *
                                             691 *
                                             692 * ....... start of mtx_timedlock
                                             693 mtx_timedlock ALIAS X'94A3A76DA38994858493968392'
00000630                                     694 @LNAME688 DS   0H
00000630 0000000D                            695          DC    X'0000000D'
00000634 94A3A76DA3899485                    696          DC    C'mtx_timedlock'
00000641 00                                  697          DC    X'00'
                                             698 mtx_timedlock DCCPRLG CINDEX=688,BASER=12,FRAME=216,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME688
                                             699          macro
                                             700          dccextrn &m
                                             701          gblc    &$dccext(1000)
                                             702          gbla    &$dccexti
                                             703          lcla    &i
                                             704 &$dccext(&$dccexti+1) setc    '&m'
                                             705 &i       seta    1
                                             706 .loop    aif    (&i gt &$dccexti).around
                                             707          aif    ('&$dccext(&i)' eq '&m').getout
                                             708 &i       seta    &i+1
                                             709          ago     .loop
                                             710 .around  anop
                                             711 &$dccexti seta &$dccexti+1
                                             712          extrn  &m
                                             713 .getout  anop
                                             714          mend
00000648                                     715+$eye0017    ds    0d                                                    02-DCCCA
00000648 C4C3C3                              716+         dc cl3'DCC'                                                    02-DCCCA
0000064B 01                                  717+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000064C 00000000                            718+         dc a(0)                                                        02-DCCCA
00000650 00000000000006BA                    719+         dc ad(@PER_688)                                                02-DCCCA
00000658 00000000000000D8                    720+         dc ad(216)                                                     02-DCCCA
00000660 0000000000000000                    721+         dc ad(0)                                                       02-DCCCA
00000668 0000000000001000                    722+         dc ad(4096)                                                    02-DCCCA
00000670 20                                  723+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000671 03                                  724+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000672 03                                  725+         dc al1(3)                                                      02-DCCCA
00000673 08                                  726+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000674 00                                  727+         dc bl.8'00000000'                                              02-DCCCA
00000675 000000                              728+         dc al3(0)                                                      02-DCCCA
00000678 0000000000000630                    729+         dc ad(@LNAME688)                                               02-DCCCA
00000680                                     730+         ds 0d                                                          02-DCCCA
00000680 0000000000000648                    731+         dc ad($eye0017)                                                02-DCCCA
00000688 0000000000000000                    732+         dc ad(0)                                                       02-DCCCA
00000690                                     733+         ds    0d                                                       01-DCCPR
                                             734+         entry mtx_timedlock                                            01-DCCPR
00000690                                     735+mtx_timedlock ds 0d                                                     01-DCCPR
00000690                                     736+@REGION_688_1 ds 0h                                                     01-DCCPR
00000690 EBEC D008 0024          00000008    737+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000696 E3E0 D088 0004          00000088    738+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000069C E3C0 D090 0004          00000090    739+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000006A2 B904 002E                           740+         lgr   2,14                copy addr of our savearea            01-DCCPR
000006A6 E3B0 C018 0004          00000018    741+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000006AC A7EB 00D8               000000D8    742+         aghi  14,216              increase by frame size               01-DCCPR
000006B0 E3E0 C020 0021          00000020    743+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000006B6 4720 B020               00000020    744+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000006BA                                     745+@PER_688 ds    0h                                                       01-DCCPR
000006BA EBDE 2080 0024          00000080    746+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000006C0 E3C0 2090 0024          00000090    747+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000006C6 B904 00D2                           748+         lgr   13,2                set real frame pointer               01-DCCPR
000006CA B904 00CF                           749+         lgr   12,15               set base reg                         01-DCCPR
                        00000690             750+         using @REGION_688_1,12                                         01-DCCPR
000006CE B904 0041                           751          LGR   4,1         ; ptr to parm area
                                             752 * ******* End of Prologue
                                             753 * *
000006D2 E320 4008 0004          00000008    754          LG    2,8(0,4)    ; ts
                                             755 * ***   # 194 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                             756 * ***     int rc;
                                             757 * ***     struct timespec cur, dur;
                                             758 * ***
                                             759 * ***
                                             760 * ***     while ((rc = pthread_mutex_trylock (mtx)) == 16) {
000006D8 47F0 C158               000007E8    761          B     @L52
000006E0                                     762          DS    0D
000006E0 000000D8                            763 @FRAMESIZE_688 DC F'216'
000006E4 00000000
000006E8 0000000000002128                    764 @lit_688_20 DC AD(_tthread_timespec_get)
000006F0 0000000000000000                    765 @lit_688_23 DC AD(nanosleep)
000006F8 0000000000000000                    766 @lit_688_24 DC AD(pthread_mutex_trylock)
00000700                                     767 @L51     DS    0H
                                             768 * ***       _tthread_timespec_get(&cur, 1);
                                                                                                                           Page   20 
  Active Usings: @REGION_688_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000700 41F0 D0B8               000000B8    769          LA    15,184(0,13)
00000704 E3F0 D0C8 0024          000000C8    770          STG   15,200(0,13)
0000070A E548 D0D0 0001          000000D0    771          MVGHI 208(13),1
00000710 4110 D0C8               000000C8    772          LA    1,200(0,13)
00000714 E3F0 C058 0004          000006E8    773          LG    15,@lit_688_20 ; _tthread_timespec_get
0000071A                                     774 @@gen_label22 DS    0H
0000071A 05EF                                775          BALR  14,15
0000071C                                     776 @@gen_label23 DS    0H
                                             777 * ***
                                             778 * ***       if ((cur.tv_sec > ts->tv_sec) || ((cur.tv_sec == ts->tv_se\
                                             779 * c) && (cur.tv_nsec >= ts->tv_nsec)))
0000071C E3F0 D0B8 0004          000000B8    780          LG    15,184(0,13)
00000722 E3F0 2000 0020          00000000    781          CG    15,0(0,2)
00000728 4720 C196               00000826    782          BH    @L58
0000072C E3F0 D0B8 0004          000000B8    783          LG    15,184(0,13)
00000732 E3F0 2000 0020          00000000    784          CG    15,0(0,2)
00000738 4770 C0C0               00000750    785          BNE   @L53
0000073C E3F0 D0C0 0004          000000C0    786          LG    15,192(0,13) ; offset of tv_nsec in timespec
00000742 E3F0 2008 0020          00000008    787          CG    15,8(0,2)
00000748 4740 C0C0               00000750    788          BL    @L53
0000074C                                     789 @L54     DS    0H
                                             790 * ***       {
                                             791 * ***         break;
0000074C 47F0 C196               00000826    792          B     @L58
                                             793 * ***       }
00000750                                     794 @L53     DS    0H
                                             795 * ***
                                             796 * ***       dur.tv_sec = ts->tv_sec - cur.tv_sec;
00000750 E3F0 2000 0004          00000000    797          LG    15,0(0,2)   ; ts
00000756 E3F0 D0B8 0009          000000B8    798          SG    15,184(0,13)
0000075C E3F0 D0A8 0024          000000A8    799          STG   15,168(0,13)
                                             800 * ***       dur.tv_nsec = ts->tv_nsec - cur.tv_nsec;
00000762 E3F0 2008 0004          00000008    801          LG    15,8(0,2)   ; offset of tv_nsec in timespec
00000768 E3F0 D0C0 0009          000000C0    802          SG    15,192(0,13)
0000076E E3F0 D0B0 0024          000000B0    803          STG   15,176(0,13) ; offset of tv_nsec in timespec
                                             804 * ***       if (dur.tv_nsec < 0)
00000774 E558 D0B0 0000          000000B0    805          CGHSI 176(13),0
0000077A 47B0 C110               000007A0    806          BNL   @L55
                                             807 * ***       {
                                             808 * ***         dur.tv_sec--;
0000077E E3F0 D0A8 0004          000000A8    809          LG    15,168(0,13)
00000784 A7FB FFFF               0000FFFF    810          AGHI  15,-1
00000788 E3F0 D0A8 0024          000000A8    811          STG   15,168(0,13)
                                             812 * ***         dur.tv_nsec += 1000000000;
0000078E C0FF 3B9A CA00                      813          LLILF 15,X'3B9ACA00' ; 1000000000
00000794 E3F0 D0B0 0008          000000B0    814          AG    15,176(0,13)
0000079A E3F0 D0B0 0024          000000B0    815          STG   15,176(0,13)
                                             816 * ***       }
000007A0                                     817 @L55     DS    0H
                                             818 * ***
                                             819 * ***       if ((dur.tv_sec != 0) || (dur.tv_nsec > 5000000))
000007A0 E558 D0A8 0000          000000A8    820          CGHSI 168(13),0
                                                                                                                           Page   21 
  Active Usings: @REGION_688_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000007A6 4770 C12A               000007BA    821          BNE   @L57
000007AA E3F0 D0B0 0004          000000B0    822          LG    15,176(0,13)
000007B0 C2FC 004C 4B40                      823          CGFI  15,X'004C4B40'
000007B6 47D0 C13C               000007CC    824          BNH   @L56
000007BA                                     825 @L57     DS    0H
                                             826 * ***       {
                                             827 * ***         dur.tv_sec = 0;
000007BA E548 D0A8 0000          000000A8    828          MVGHI 168(13),0
                                             829 * ***         dur.tv_nsec = 5000000;
000007C0 C0FF 004C 4B40                      830          LLILF 15,X'004C4B40' ; 5000000
000007C6 E3F0 D0B0 0024          000000B0    831          STG   15,176(0,13) ; offset of tv_nsec in timespec
                                             832 * ***       }
000007CC                                     833 @L56     DS    0H
                                             834 * ***
                                             835 * ***       nanosleep(&dur, ((void *)0));
000007CC 41F0 D0A8               000000A8    836          LA    15,168(0,13)
000007D0 E3F0 D0C8 0024          000000C8    837          STG   15,200(0,13)
000007D6 D707 D0D0 D0D0 000000D0 000000D0    838          XC    208(8,13),208(13)
000007DC 4110 D0C8               000000C8    839          LA    1,200(0,13)
000007E0 E3F0 C060 0004          000006F0    840          LG    15,@lit_688_23 ; nanosleep
000007E6                                     841 @@gen_label30 DS    0H
000007E6 05EF                                842          BALR  14,15
000007E8                                     843 @@gen_label31 DS    0H
                                             844 * ***     }
000007E8                                     845 @L52     DS    0H
000007E8 E3F0 4000 0004          00000000    846          LG    15,0(0,4)   ; mtx
000007EE E3F0 D0C8 0024          000000C8    847          STG   15,200(0,13)
000007F4 4110 D0C8               000000C8    848          LA    1,200(0,13)
000007F8 E3F0 C068 0004          000006F8    849          LG    15,@lit_688_24 ; pthread_mutex_trylock
000007FE                                     850 @@gen_label32 DS    0H
000007FE 05EF                                851          BALR  14,15
00000800                                     852 @@gen_label33 DS    0H
00000800 183F                                853          LR    3,15
00000802 A73E 0010               00000010    854          CHI   3,16
00000806 4780 C070               00000700    855          BE    @L51
0000080A                                     856 @L49     DS    0H
                                             857 * ***
                                             858 * ***     switch (rc) {
0000080A 47F0 C196               00000826    859          B     @L58
                                             860 * ***       case 0:
0000080E                                     861 @L60     DS    0H
                                             862 * ***         return 0;
0000080E A7F9 0000               00000000    863          LGHI  15,0        ; 0
00000812 47F0 C1B6               00000846    864          B     @ret_lab_688
                                             865 * ***       case 60:
                                             866 * ***       case 16:
00000816                                     867 @L62     DS    0H
                                             868 * ***         return 4;
00000816 A7F9 0004               00000004    869          LGHI  15,4        ; 4
0000081A 47F0 C1B6               00000846    870          B     @ret_lab_688
                                             871 * ***       default:
                                             872 * ***         return 2;
                                                                                                                           Page   22 
  Active Usings: @REGION_688_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000081E                                     873 @L63     DS    0H
0000081E A7F9 0002               00000002    874          LGHI  15,2        ; 2
00000822 47F0 C1B6               00000846    875          B     @ret_lab_688
                                             876 * ***     }
00000826                                     877 @L58     DS    0H
00000826 1233                                878          LTR   3,3
00000828 4740 C18E               0000081E    879          BL    @L63
0000082C 1233                                880          LTR   3,3
0000082E 4780 C17E               0000080E    881          BE    @L60
00000832 A73E 0010               00000010    882          CHI   3,16
00000836 4780 C186               00000816    883          BE    @L62
0000083A A73E 003C               0000003C    884          CHI   3,60
0000083E 4780 C186               00000816    885          BE    @L62
00000842 47F0 C18E               0000081E    886          B     @L63
                                             887 * ***
                                             888 * ***   }
00000846                                     889 @ret_lab_688 DS 0H
                                             890 * * **** Start of Epilogue
                                             891          DCCEPIL
00000846                                     892+         ds 0h                                                          01-DCCEP
                                             893+* Epilog
00000846 D707 D088 D088 00000088 00000088    894+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000084C E3D0 D080 0004          00000080    895+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000852 E3C0 D090 0004          00000090    896+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000858 E3B0 C018 0004          00000018    897+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000085E E3C0 B010 0021          00000010    898+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000864 E3E0 D008 0004          00000008    899+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000086A EB1C D020 0004          00000020    900+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000870 078E                                901+         bcr 8,14                if same dsab, just return              01-DCCEP
00000872 E3F0 D010 0024          00000010    902+         stg 15,16(0,13)         save return code                       01-DCCEP
00000878 E300 D018 0024          00000018    903+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000087E E3F0 D090 0004          00000090    904+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000884 E3F0 F018 0004          00000018    905+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000088A 47F0 F040               00000040    906+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             907+* End of Epilog
                                             908 * * **** End of Epilogue
                                             909          DROP  12
                                             910 *
                                             911 *   DSECT for automatic variables in "mtx_timedlock"
                                             912 *      (FUNCTION #688)
                                             913 *
00000000                00000000 000000C8    914 @AUTO#mtx_timedlock DSECT
00000000                                     915          DS    XL168
000000A8                                     916 mtx_timedlock#dur#0 DS 16XL1 ; dur
000000B8                000000B8 000000A8    917          ORG   @AUTO#mtx_timedlock+168
000000A8                                     918 mtx_timedlock#rc#0 DS 1F   ; rc
000000AC                000000AC 000000B8    919          ORG   @AUTO#mtx_timedlock+184
000000B8                                     920 mtx_timedlock#cur#0 DS 16XL1 ; cur
                                             921 *
0000088E                00000000 00002208    922 @CODE    CSECT
                                             923 *
                                             924 *
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             925 *
                                             926 * ....... start of mtx_trylock
                                             927 mtx_trylock ALIAS X'94A3A76DA399A893968392'
0000088E                                     928 @LNAME689 DS   0H
0000088E 0000000B                            929          DC    X'0000000B'
00000892 94A3A76DA399A893                    930          DC    C'mtx_trylock'
0000089D 00                                  931          DC    X'00'
                                             932 mtx_trylock DCCPRLG CINDEX=689,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME689
                                             933          macro
                                             934          dccextrn &m
                                             935          gblc    &$dccext(1000)
                                             936          gbla    &$dccexti
                                             937          lcla    &i
                                             938 &$dccext(&$dccexti+1) setc    '&m'
                                             939 &i       seta    1
                                             940 .loop    aif    (&i gt &$dccexti).around
                                             941          aif    ('&$dccext(&i)' eq '&m').getout
                                             942 &i       seta    &i+1
                                             943          ago     .loop
                                             944 .around  anop
                                             945 &$dccexti seta &$dccexti+1
                                             946          extrn  &m
                                             947 .getout  anop
                                             948          mend
000008A0                                     949+$eye0020    ds    0d                                                    02-DCCCA
000008A0 C4C3C3                              950+         dc cl3'DCC'                                                    02-DCCCA
000008A3 01                                  951+         dc xl1'01' format one                                          02-DCCCA
000008A4 00000000                            952+         dc a(0)                                                        02-DCCCA
000008A8 0000000000000912                    953+         dc ad(@PER_689)                                                02-DCCCA
000008B0 00000000000000B0                    954+         dc ad(176)                                                     02-DCCCA
000008B8 0000000000000000                    955+         dc ad(0)                                                       02-DCCCA
000008C0 0000000000001000                    956+         dc ad(4096)                                                    02-DCCCA
000008C8 20                                  957+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000008C9 03                                  958+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000008CA 03                                  959+         dc al1(3)                                                      02-DCCCA
000008CB 08                                  960+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000008CC 00                                  961+         dc bl.8'00000000'                                              02-DCCCA
000008CD 000000                              962+         dc al3(0)                                                      02-DCCCA
000008D0 000000000000088E                    963+         dc ad(@LNAME689)                                               02-DCCCA
000008D8                                     964+         ds 0d                                                          02-DCCCA
000008D8 00000000000008A0                    965+         dc ad($eye0020)                                                02-DCCCA
000008E0 0000000000000000                    966+         dc ad(0)                                                       02-DCCCA
000008E8                                     967+         ds    0d                                                       01-DCCPR
                                             968+         entry mtx_trylock                                              01-DCCPR
000008E8                                     969+mtx_trylock ds 0d                                                       01-DCCPR
000008E8                                     970+@REGION_689_1 ds 0h                                                     01-DCCPR
000008E8 EBEC D008 0024          00000008    971+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000008EE E3E0 D088 0004          00000088    972+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000008F4 E3C0 D090 0004          00000090    973+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000008FA B904 002E                           974+         lgr   2,14                copy addr of our savearea            01-DCCPR
000008FE E3B0 C018 0004          00000018    975+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000904 A7EB 00B0               000000B0    976+         aghi  14,176              increase by frame size               01-DCCPR
00000908 E3E0 C020 0021          00000020    977+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000090E 4720 B020               00000020    978+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000912                                     979+@PER_689 ds    0h                                                       01-DCCPR
00000912 EBDE 2080 0024          00000080    980+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000918 E3C0 2090 0024          00000090    981+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000091E B904 00D2                           982+         lgr   13,2                set real frame pointer               01-DCCPR
00000922 B904 00CF                           983+         lgr   12,15               set base reg                         01-DCCPR
                        000008E8             984+         using @REGION_689_1,12                                         01-DCCPR
                                             985 * ******* End of Prologue
                                             986 * *
                                             987 * ***   # 263 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                             988 * ***     return (pthread_mutex_trylock(mtx) == 0) ? 0 : 1;
00000926 E3F0 1000 0004          00000000    989          LG    15,0(0,1)   ; mtx
0000092C E3F0 D0A8 0024          000000A8    990          STG   15,168(0,13)
00000932 4110 D0A8               000000A8    991          LA    1,168(0,13)
00000936 E3F0 C070 0004          00000958    992          LG    15,@lit_689_29 ; pthread_mutex_trylock
0000093C                                     993 @@gen_label35 DS    0H
0000093C 05EF                                994          BALR  14,15
0000093E                                     995 @@gen_label36 DS    0H
0000093E 12FF                                996          LTR   15,15
00000940 4770 C078               00000960    997          BNE   @L64
00000944 A7F8 0000               00000000    998          LHI   15,0        ; 0
00000948 47F0 C07C               00000964    999          B     @L65
00000950                                    1000          DS    0D
00000950 000000B0                           1001 @FRAMESIZE_689 DC F'176'
00000954 00000000
00000958 0000000000000000                   1002 @lit_689_29 DC AD(pthread_mutex_trylock)
00000960                                    1003 @L64     DS    0H
00000960 A7F8 0001               00000001   1004          LHI   15,1        ; 1
00000964                                    1005 @L65     DS    0H
00000964 B914 00FF                          1006          LGFR  15,15
                                            1007 * ***
                                            1008 * ***   }
                                            1009 * * **** Start of Epilogue
                                            1010          DCCEPIL
00000968                                    1011+         ds 0h                                                          01-DCCEP
                                            1012+* Epilog
00000968 D707 D088 D088 00000088 00000088   1013+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000096E E3D0 D080 0004          00000080   1014+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000974 E3C0 D090 0004          00000090   1015+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000097A E3B0 C018 0004          00000018   1016+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000980 E3C0 B010 0021          00000010   1017+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000986 E3E0 D008 0004          00000008   1018+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000098C EB1C D020 0004          00000020   1019+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000992 078E                               1020+         bcr 8,14                if same dsab, just return              01-DCCEP
00000994 E3F0 D010 0024          00000010   1021+         stg 15,16(0,13)         save return code                       01-DCCEP
0000099A E300 D018 0024          00000018   1022+         stg 0,24(0,13)          save more return code                  01-DCCEP
000009A0 E3F0 D090 0004          00000090   1023+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000009A6 E3F0 F018 0004          00000018   1024+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000009AC 47F0 F040               00000040   1025+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1026+* End of Epilog
                                                                                                                           Page   25 
  Active Usings: @REGION_689_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1027 * * **** End of Epilogue
                                            1028          DROP  12
                                            1029 *
                                            1030 *   DSECT for automatic variables in "mtx_trylock"
                                            1031 *      (FUNCTION #689)
                                            1032 *
00000000                00000000 000000A8   1033 @AUTO#mtx_trylock DSECT
00000000                                    1034          DS    XL168
                                            1035 *
000009B0                00000000 00002208   1036 @CODE    CSECT
                                            1037 *
                                            1038 *
                                            1039 *
                                            1040 * ....... start of mtx_unlock
                                            1041 mtx_unlock ALIAS X'94A3A76DA49593968392'
000009B0                                    1042 @LNAME690 DS   0H
000009B0 0000000A                           1043          DC    X'0000000A'
000009B4 94A3A76DA4959396                   1044          DC    C'mtx_unlock'
000009BE 00                                 1045          DC    X'00'
                                            1046 mtx_unlock DCCPRLG CINDEX=690,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME690
                                            1047          macro
                                            1048          dccextrn &m
                                            1049          gblc    &$dccext(1000)
                                            1050          gbla    &$dccexti
                                            1051          lcla    &i
                                            1052 &$dccext(&$dccexti+1) setc    '&m'
                                            1053 &i       seta    1
                                            1054 .loop    aif    (&i gt &$dccexti).around
                                            1055          aif    ('&$dccext(&i)' eq '&m').getout
                                            1056 &i       seta    &i+1
                                            1057          ago     .loop
                                            1058 .around  anop
                                            1059 &$dccexti seta &$dccexti+1
                                            1060          extrn  &m
                                            1061 .getout  anop
                                            1062          mend
000009C0                                    1063+$eye0023    ds    0d                                                    02-DCCCA
000009C0 C4C3C3                             1064+         dc cl3'DCC'                                                    02-DCCCA
000009C3 01                                 1065+         dc xl1'01' format one                                          02-DCCCA
000009C4 00000000                           1066+         dc a(0)                                                        02-DCCCA
000009C8 0000000000000A32                   1067+         dc ad(@PER_690)                                                02-DCCCA
000009D0 00000000000000B0                   1068+         dc ad(176)                                                     02-DCCCA
000009D8 0000000000000000                   1069+         dc ad(0)                                                       02-DCCCA
000009E0 0000000000001000                   1070+         dc ad(4096)                                                    02-DCCCA
000009E8 20                                 1071+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000009E9 03                                 1072+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000009EA 03                                 1073+         dc al1(3)                                                      02-DCCCA
000009EB 08                                 1074+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000009EC 00                                 1075+         dc bl.8'00000000'                                              02-DCCCA
000009ED 000000                             1076+         dc al3(0)                                                      02-DCCCA
000009F0 00000000000009B0                   1077+         dc ad(@LNAME690)                                               02-DCCCA
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000009F8                                    1078+         ds 0d                                                          02-DCCCA
000009F8 00000000000009C0                   1079+         dc ad($eye0023)                                                02-DCCCA
00000A00 0000000000000000                   1080+         dc ad(0)                                                       02-DCCCA
00000A08                                    1081+         ds    0d                                                       01-DCCPR
                                            1082+         entry mtx_unlock                                               01-DCCPR
00000A08                                    1083+mtx_unlock ds  0d                                                       01-DCCPR
00000A08                                    1084+@REGION_690_1 ds 0h                                                     01-DCCPR
00000A08 EBEC D008 0024          00000008   1085+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A0E E3E0 D088 0004          00000088   1086+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000A14 E3C0 D090 0004          00000090   1087+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000A1A B904 002E                          1088+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000A1E E3B0 C018 0004          00000018   1089+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000A24 A7EB 00B0               000000B0   1090+         aghi  14,176              increase by frame size               01-DCCPR
00000A28 E3E0 C020 0021          00000020   1091+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000A2E 4720 B020               00000020   1092+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000A32                                    1093+@PER_690 ds    0h                                                       01-DCCPR
00000A32 EBDE 2080 0024          00000080   1094+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000A38 E3C0 2090 0024          00000090   1095+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000A3E B904 00D2                          1096+         lgr   13,2                set real frame pointer               01-DCCPR
00000A42 B904 00CF                          1097+         lgr   12,15               set base reg                         01-DCCPR
                        00000A08            1098+         using @REGION_690_1,12                                         01-DCCPR
                                            1099 * ******* End of Prologue
                                            1100 * *
                                            1101 * ***   # 284 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            1102 * ***     return pthread_mutex_unlock(mtx) == 0 ? 0 : 2;;
00000A46 E3F0 1000 0004          00000000   1103          LG    15,0(0,1)   ; mtx
00000A4C E3F0 D0A8 0024          000000A8   1104          STG   15,168(0,13)
00000A52 4110 D0A8               000000A8   1105          LA    1,168(0,13)
00000A56 E3F0 C070 0004          00000A78   1106          LG    15,@lit_690_33 ; pthread_mutex_unlock
00000A5C                                    1107 @@gen_label38 DS    0H
00000A5C 05EF                               1108          BALR  14,15
00000A5E                                    1109 @@gen_label39 DS    0H
00000A5E 12FF                               1110          LTR   15,15
00000A60 4770 C078               00000A80   1111          BNE   @L66
00000A64 A7F8 0000               00000000   1112          LHI   15,0        ; 0
00000A68 47F0 C07C               00000A84   1113          B     @L67
00000A70                                    1114          DS    0D
00000A70 000000B0                           1115 @FRAMESIZE_690 DC F'176'
00000A74 00000000
00000A78 0000000000000000                   1116 @lit_690_33 DC AD(pthread_mutex_unlock)
00000A80                                    1117 @L66     DS    0H
00000A80 A7F8 0002               00000002   1118          LHI   15,2        ; 2
00000A84                                    1119 @L67     DS    0H
00000A84 B914 00FF                          1120          LGFR  15,15
                                            1121 * ***
                                            1122 * ***   }
                                            1123 * * **** Start of Epilogue
                                            1124          DCCEPIL
00000A88                                    1125+         ds 0h                                                          01-DCCEP
                                            1126+* Epilog
00000A88 D707 D088 D088 00000088 00000088   1127+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000A8E E3D0 D080 0004          00000080   1128+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page   27 
  Active Usings: @REGION_690_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000A94 E3C0 D090 0004          00000090   1129+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000A9A E3B0 C018 0004          00000018   1130+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000AA0 E3C0 B010 0021          00000010   1131+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000AA6 E3E0 D008 0004          00000008   1132+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000AAC EB1C D020 0004          00000020   1133+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000AB2 078E                               1134+         bcr 8,14                if same dsab, just return              01-DCCEP
00000AB4 E3F0 D010 0024          00000010   1135+         stg 15,16(0,13)         save return code                       01-DCCEP
00000ABA E300 D018 0024          00000018   1136+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000AC0 E3F0 D090 0004          00000090   1137+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000AC6 E3F0 F018 0004          00000018   1138+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000ACC 47F0 F040               00000040   1139+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1140+* End of Epilog
                                            1141 * * **** End of Epilogue
                                            1142          DROP  12
                                            1143 *
                                            1144 *   DSECT for automatic variables in "mtx_unlock"
                                            1145 *      (FUNCTION #690)
                                            1146 *
00000000                00000000 000000A8   1147 @AUTO#mtx_unlock DSECT
00000000                                    1148          DS    XL168
                                            1149 *
00000AD0                00000000 00002208   1150 @CODE    CSECT
                                            1151 *
                                            1152 *
                                            1153 *
                                            1154 * ....... start of cnd_init
                                            1155 cnd_init ALIAS X'8395846D899589A3'
00000AD0                                    1156 @LNAME691 DS   0H
00000AD0 00000008                           1157          DC    X'00000008'
00000AD4 8395846D899589A3                   1158          DC    C'cnd_init'
00000ADC 00                                 1159          DC    X'00'
                                            1160 cnd_init DCCPRLG CINDEX=691,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME691
                                            1161          macro
                                            1162          dccextrn &m
                                            1163          gblc    &$dccext(1000)
                                            1164          gbla    &$dccexti
                                            1165          lcla    &i
                                            1166 &$dccext(&$dccexti+1) setc    '&m'
                                            1167 &i       seta    1
                                            1168 .loop    aif    (&i gt &$dccexti).around
                                            1169          aif    ('&$dccext(&i)' eq '&m').getout
                                            1170 &i       seta    &i+1
                                            1171          ago     .loop
                                            1172 .around  anop
                                            1173 &$dccexti seta &$dccexti+1
                                            1174          extrn  &m
                                            1175 .getout  anop
                                            1176          mend
00000AE0                                    1177+$eye0026    ds    0d                                                    02-DCCCA
00000AE0 C4C3C3                             1178+         dc cl3'DCC'                                                    02-DCCCA
00000AE3 01                                 1179+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000AE4 00000000                           1180+         dc a(0)                                                        02-DCCCA
00000AE8 0000000000000B52                   1181+         dc ad(@PER_691)                                                02-DCCCA
00000AF0 00000000000000B8                   1182+         dc ad(184)                                                     02-DCCCA
00000AF8 0000000000000000                   1183+         dc ad(0)                                                       02-DCCCA
00000B00 0000000000001000                   1184+         dc ad(4096)                                                    02-DCCCA
00000B08 20                                 1185+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B09 03                                 1186+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B0A 03                                 1187+         dc al1(3)                                                      02-DCCCA
00000B0B 08                                 1188+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B0C 00                                 1189+         dc bl.8'00000000'                                              02-DCCCA
00000B0D 000000                             1190+         dc al3(0)                                                      02-DCCCA
00000B10 0000000000000AD0                   1191+         dc ad(@LNAME691)                                               02-DCCCA
00000B18                                    1192+         ds 0d                                                          02-DCCCA
00000B18 0000000000000AE0                   1193+         dc ad($eye0026)                                                02-DCCCA
00000B20 0000000000000000                   1194+         dc ad(0)                                                       02-DCCCA
00000B28                                    1195+         ds    0d                                                       01-DCCPR
                                            1196+         entry cnd_init                                                 01-DCCPR
00000B28                                    1197+cnd_init ds    0d                                                       01-DCCPR
00000B28                                    1198+@REGION_691_1 ds 0h                                                     01-DCCPR
00000B28 EBEC D008 0024          00000008   1199+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B2E E3E0 D088 0004          00000088   1200+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B34 E3C0 D090 0004          00000090   1201+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B3A B904 002E                          1202+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B3E E3B0 C018 0004          00000018   1203+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B44 A7EB 00B8               000000B8   1204+         aghi  14,184              increase by frame size               01-DCCPR
00000B48 E3E0 C020 0021          00000020   1205+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B4E 4720 B020               00000020   1206+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B52                                    1207+@PER_691 ds    0h                                                       01-DCCPR
00000B52 EBDE 2080 0024          00000080   1208+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B58 E3C0 2090 0024          00000090   1209+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000B5E B904 00D2                          1210+         lgr   13,2                set real frame pointer               01-DCCPR
00000B62 B904 00CF                          1211+         lgr   12,15               set base reg                         01-DCCPR
                        00000B28            1212+         using @REGION_691_1,12                                         01-DCCPR
                                            1213 * ******* End of Prologue
                                            1214 * *
                                            1215 * ***   # 318 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            1216 * ***     return pthread_cond_init(cond, ((void *)0)) == 0 ? 0 : 2;
00000B66 E3F0 1000 0004          00000000   1217          LG    15,0(0,1)   ; cond
00000B6C E3F0 D0A8 0024          000000A8   1218          STG   15,168(0,13)
00000B72 D707 D0B0 D0B0 000000B0 000000B0   1219          XC    176(8,13),176(13)
00000B78 4110 D0A8               000000A8   1220          LA    1,168(0,13)
00000B7C E3F0 C078 0004          00000BA0   1221          LG    15,@lit_691_37 ; pthread_cond_init
00000B82                                    1222 @@gen_label41 DS    0H
00000B82 05EF                               1223          BALR  14,15
00000B84                                    1224 @@gen_label42 DS    0H
00000B84 12FF                               1225          LTR   15,15
00000B86 4770 C080               00000BA8   1226          BNE   @L68
00000B8A A7F8 0000               00000000   1227          LHI   15,0        ; 0
00000B8E 47F0 C084               00000BAC   1228          B     @L69
00000B98                                    1229          DS    0D
00000B98 000000B8                           1230 @FRAMESIZE_691 DC F'184'
00000B9C 00000000
                                                                                                                           Page   29 
  Active Usings: @REGION_691_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000BA0 0000000000000000                   1231 @lit_691_37 DC AD(pthread_cond_init)
00000BA8                                    1232 @L68     DS    0H
00000BA8 A7F8 0002               00000002   1233          LHI   15,2        ; 2
00000BAC                                    1234 @L69     DS    0H
00000BAC B914 00FF                          1235          LGFR  15,15
                                            1236 * ***
                                            1237 * ***   }
                                            1238 * * **** Start of Epilogue
                                            1239          DCCEPIL
00000BB0                                    1240+         ds 0h                                                          01-DCCEP
                                            1241+* Epilog
00000BB0 D707 D088 D088 00000088 00000088   1242+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000BB6 E3D0 D080 0004          00000080   1243+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000BBC E3C0 D090 0004          00000090   1244+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000BC2 E3B0 C018 0004          00000018   1245+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000BC8 E3C0 B010 0021          00000010   1246+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000BCE E3E0 D008 0004          00000008   1247+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000BD4 EB1C D020 0004          00000020   1248+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000BDA 078E                               1249+         bcr 8,14                if same dsab, just return              01-DCCEP
00000BDC E3F0 D010 0024          00000010   1250+         stg 15,16(0,13)         save return code                       01-DCCEP
00000BE2 E300 D018 0024          00000018   1251+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000BE8 E3F0 D090 0004          00000090   1252+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000BEE E3F0 F018 0004          00000018   1253+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000BF4 47F0 F040               00000040   1254+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1255+* End of Epilog
                                            1256 * * **** End of Epilogue
                                            1257          DROP  12
                                            1258 *
                                            1259 *   DSECT for automatic variables in "cnd_init"
                                            1260 *      (FUNCTION #691)
                                            1261 *
00000000                00000000 000000A8   1262 @AUTO#cnd_init DSECT
00000000                                    1263          DS    XL168
                                            1264 *
00000BF8                00000000 00002208   1265 @CODE    CSECT
                                            1266 *
                                            1267 *
                                            1268 *
                                            1269 * ....... start of cnd_destroy
                                            1270 cnd_destroy ALIAS X'8395846D8485A2A39996A8'
00000BF8                                    1271 @LNAME692 DS   0H
00000BF8 0000000B                           1272          DC    X'0000000B'
00000BFC 8395846D8485A2A3                   1273          DC    C'cnd_destroy'
00000C07 00                                 1274          DC    X'00'
                                            1275 cnd_destroy DCCPRLG CINDEX=692,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME692
                                            1276          macro
                                            1277          dccextrn &m
                                            1278          gblc    &$dccext(1000)
                                            1279          gbla    &$dccexti
                                            1280          lcla    &i
                                            1281 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1282 &i       seta    1
                                            1283 .loop    aif    (&i gt &$dccexti).around
                                            1284          aif    ('&$dccext(&i)' eq '&m').getout
                                            1285 &i       seta    &i+1
                                            1286          ago     .loop
                                            1287 .around  anop
                                            1288 &$dccexti seta &$dccexti+1
                                            1289          extrn  &m
                                            1290 .getout  anop
                                            1291          mend
00000C08                                    1292+$eye0029    ds    0d                                                    02-DCCCA
00000C08 C4C3C3                             1293+         dc cl3'DCC'                                                    02-DCCCA
00000C0B 01                                 1294+         dc xl1'01' format one                                          02-DCCCA
00000C0C 00000000                           1295+         dc a(0)                                                        02-DCCCA
00000C10 0000000000000C7A                   1296+         dc ad(@PER_692)                                                02-DCCCA
00000C18 00000000000000B0                   1297+         dc ad(176)                                                     02-DCCCA
00000C20 0000000000000000                   1298+         dc ad(0)                                                       02-DCCCA
00000C28 0000000000001000                   1299+         dc ad(4096)                                                    02-DCCCA
00000C30 20                                 1300+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C31 03                                 1301+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C32 03                                 1302+         dc al1(3)                                                      02-DCCCA
00000C33 08                                 1303+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C34 00                                 1304+         dc bl.8'00000000'                                              02-DCCCA
00000C35 000000                             1305+         dc al3(0)                                                      02-DCCCA
00000C38 0000000000000BF8                   1306+         dc ad(@LNAME692)                                               02-DCCCA
00000C40                                    1307+         ds 0d                                                          02-DCCCA
00000C40 0000000000000C08                   1308+         dc ad($eye0029)                                                02-DCCCA
00000C48 0000000000000000                   1309+         dc ad(0)                                                       02-DCCCA
00000C50                                    1310+         ds    0d                                                       01-DCCPR
                                            1311+         entry cnd_destroy                                              01-DCCPR
00000C50                                    1312+cnd_destroy ds 0d                                                       01-DCCPR
00000C50                                    1313+@REGION_692_1 ds 0h                                                     01-DCCPR
00000C50 EBEC D008 0024          00000008   1314+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000C56 E3E0 D088 0004          00000088   1315+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000C5C E3C0 D090 0004          00000090   1316+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000C62 B904 002E                          1317+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000C66 E3B0 C018 0004          00000018   1318+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000C6C A7EB 00B0               000000B0   1319+         aghi  14,176              increase by frame size               01-DCCPR
00000C70 E3E0 C020 0021          00000020   1320+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000C76 4720 B020               00000020   1321+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000C7A                                    1322+@PER_692 ds    0h                                                       01-DCCPR
00000C7A EBDE 2080 0024          00000080   1323+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000C80 E3C0 2090 0024          00000090   1324+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000C86 B904 00D2                          1325+         lgr   13,2                set real frame pointer               01-DCCPR
00000C8A B904 00CF                          1326+         lgr   12,15               set base reg                         01-DCCPR
                        00000C50            1327+         using @REGION_692_1,12                                         01-DCCPR
                                            1328 * ******* End of Prologue
                                            1329 * *
                                            1330 * ***   # 335 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            1331 * ***     pthread_cond_destroy(cond);
00000C8E E3F0 1000 0004          00000000   1332          LG    15,0(0,1)   ; cond
00000C94 E3F0 D0A8 0024          000000A8   1333          STG   15,168(0,13)
                                                                                                                           Page   31 
  Active Usings: @REGION_692_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000C9A 4110 D0A8               000000A8   1334          LA    1,168(0,13)
00000C9E E3F0 C0A8 0004          00000CF8   1335          LG    15,@lit_692_41 ; pthread_cond_destroy
00000CA4                                    1336 @@gen_label44 DS    0H
00000CA4 05EF                               1337          BALR  14,15
00000CA6                                    1338 @@gen_label45 DS    0H
                                            1339 * ***
                                            1340 * ***   }
00000CA6                                    1341 @ret_lab_692 DS 0H
                                            1342 * * **** Start of Epilogue
                                            1343          DCCEPIL
00000CA6                                    1344+         ds 0h                                                          01-DCCEP
                                            1345+* Epilog
00000CA6 D707 D088 D088 00000088 00000088   1346+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000CAC E3D0 D080 0004          00000080   1347+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000CB2 E3C0 D090 0004          00000090   1348+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000CB8 E3B0 C018 0004          00000018   1349+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000CBE E3C0 B010 0021          00000010   1350+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000CC4 E3E0 D008 0004          00000008   1351+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000CCA EB1C D020 0004          00000020   1352+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000CD0 078E                               1353+         bcr 8,14                if same dsab, just return              01-DCCEP
00000CD2 E3F0 D010 0024          00000010   1354+         stg 15,16(0,13)         save return code                       01-DCCEP
00000CD8 E300 D018 0024          00000018   1355+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000CDE E3F0 D090 0004          00000090   1356+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000CE4 E3F0 F018 0004          00000018   1357+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000CEA 47F0 F040               00000040   1358+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1359+* End of Epilog
                                            1360 * * **** End of Epilogue
00000CF0                                    1361          DS    0D
00000CF0 000000B0                           1362 @FRAMESIZE_692 DC F'176'
00000CF4 00000000
00000CF8 0000000000000000                   1363 @lit_692_41 DC AD(pthread_cond_destroy)
                                            1364          DROP  12
                                            1365 *
                                            1366 *   DSECT for automatic variables in "cnd_destroy"
                                            1367 *      (FUNCTION #692)
                                            1368 *
00000000                00000000 000000A8   1369 @AUTO#cnd_destroy DSECT
00000000                                    1370          DS    XL168
                                            1371 *
00000D00                00000000 00002208   1372 @CODE    CSECT
                                            1373 *
                                            1374 *
                                            1375 *
                                            1376 * ....... start of cnd_signal
                                            1377 cnd_signal ALIAS X'8395846DA28987958193'
00000D00                                    1378 @LNAME693 DS   0H
00000D00 0000000A                           1379          DC    X'0000000A'
00000D04 8395846DA2898795                   1380          DC    C'cnd_signal'
00000D0E 00                                 1381          DC    X'00'
                                            1382 cnd_signal DCCPRLG CINDEX=693,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME693
                                            1383          macro
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1384          dccextrn &m
                                            1385          gblc    &$dccext(1000)
                                            1386          gbla    &$dccexti
                                            1387          lcla    &i
                                            1388 &$dccext(&$dccexti+1) setc    '&m'
                                            1389 &i       seta    1
                                            1390 .loop    aif    (&i gt &$dccexti).around
                                            1391          aif    ('&$dccext(&i)' eq '&m').getout
                                            1392 &i       seta    &i+1
                                            1393          ago     .loop
                                            1394 .around  anop
                                            1395 &$dccexti seta &$dccexti+1
                                            1396          extrn  &m
                                            1397 .getout  anop
                                            1398          mend
00000D10                                    1399+$eye0032    ds    0d                                                    02-DCCCA
00000D10 C4C3C3                             1400+         dc cl3'DCC'                                                    02-DCCCA
00000D13 01                                 1401+         dc xl1'01' format one                                          02-DCCCA
00000D14 00000000                           1402+         dc a(0)                                                        02-DCCCA
00000D18 0000000000000D82                   1403+         dc ad(@PER_693)                                                02-DCCCA
00000D20 00000000000000B0                   1404+         dc ad(176)                                                     02-DCCCA
00000D28 0000000000000000                   1405+         dc ad(0)                                                       02-DCCCA
00000D30 0000000000001000                   1406+         dc ad(4096)                                                    02-DCCCA
00000D38 20                                 1407+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D39 03                                 1408+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D3A 03                                 1409+         dc al1(3)                                                      02-DCCCA
00000D3B 08                                 1410+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D3C 00                                 1411+         dc bl.8'00000000'                                              02-DCCCA
00000D3D 000000                             1412+         dc al3(0)                                                      02-DCCCA
00000D40 0000000000000D00                   1413+         dc ad(@LNAME693)                                               02-DCCCA
00000D48                                    1414+         ds 0d                                                          02-DCCCA
00000D48 0000000000000D10                   1415+         dc ad($eye0032)                                                02-DCCCA
00000D50 0000000000000000                   1416+         dc ad(0)                                                       02-DCCCA
00000D58                                    1417+         ds    0d                                                       01-DCCPR
                                            1418+         entry cnd_signal                                               01-DCCPR
00000D58                                    1419+cnd_signal ds  0d                                                       01-DCCPR
00000D58                                    1420+@REGION_693_1 ds 0h                                                     01-DCCPR
00000D58 EBEC D008 0024          00000008   1421+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D5E E3E0 D088 0004          00000088   1422+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000D64 E3C0 D090 0004          00000090   1423+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000D6A B904 002E                          1424+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000D6E E3B0 C018 0004          00000018   1425+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000D74 A7EB 00B0               000000B0   1426+         aghi  14,176              increase by frame size               01-DCCPR
00000D78 E3E0 C020 0021          00000020   1427+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000D7E 4720 B020               00000020   1428+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000D82                                    1429+@PER_693 ds    0h                                                       01-DCCPR
00000D82 EBDE 2080 0024          00000080   1430+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000D88 E3C0 2090 0024          00000090   1431+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000D8E B904 00D2                          1432+         lgr   13,2                set real frame pointer               01-DCCPR
00000D92 B904 00CF                          1433+         lgr   12,15               set base reg                         01-DCCPR
                        00000D58            1434+         using @REGION_693_1,12                                         01-DCCPR
                                            1435 * ******* End of Prologue
                                                                                                                           Page   33 
  Active Usings: @REGION_693_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1436 * *
                                            1437 * ***   # 360 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            1438 * ***     return pthread_cond_signal(cond) == 0 ? 0 : 2;
00000D96 E3F0 1000 0004          00000000   1439          LG    15,0(0,1)   ; cond
00000D9C E3F0 D0A8 0024          000000A8   1440          STG   15,168(0,13)
00000DA2 4110 D0A8               000000A8   1441          LA    1,168(0,13)
00000DA6 E3F0 C070 0004          00000DC8   1442          LG    15,@lit_693_43 ; pthread_cond_signal
00000DAC                                    1443 @@gen_label46 DS    0H
00000DAC 05EF                               1444          BALR  14,15
00000DAE                                    1445 @@gen_label47 DS    0H
00000DAE 12FF                               1446          LTR   15,15
00000DB0 4770 C078               00000DD0   1447          BNE   @L70
00000DB4 A7F8 0000               00000000   1448          LHI   15,0        ; 0
00000DB8 47F0 C07C               00000DD4   1449          B     @L71
00000DC0                                    1450          DS    0D
00000DC0 000000B0                           1451 @FRAMESIZE_693 DC F'176'
00000DC4 00000000
00000DC8 0000000000000000                   1452 @lit_693_43 DC AD(pthread_cond_signal)
00000DD0                                    1453 @L70     DS    0H
00000DD0 A7F8 0002               00000002   1454          LHI   15,2        ; 2
00000DD4                                    1455 @L71     DS    0H
00000DD4 B914 00FF                          1456          LGFR  15,15
                                            1457 * ***
                                            1458 * ***   }
                                            1459 * * **** Start of Epilogue
                                            1460          DCCEPIL
00000DD8                                    1461+         ds 0h                                                          01-DCCEP
                                            1462+* Epilog
00000DD8 D707 D088 D088 00000088 00000088   1463+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000DDE E3D0 D080 0004          00000080   1464+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000DE4 E3C0 D090 0004          00000090   1465+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000DEA E3B0 C018 0004          00000018   1466+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000DF0 E3C0 B010 0021          00000010   1467+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000DF6 E3E0 D008 0004          00000008   1468+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000DFC EB1C D020 0004          00000020   1469+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000E02 078E                               1470+         bcr 8,14                if same dsab, just return              01-DCCEP
00000E04 E3F0 D010 0024          00000010   1471+         stg 15,16(0,13)         save return code                       01-DCCEP
00000E0A E300 D018 0024          00000018   1472+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000E10 E3F0 D090 0004          00000090   1473+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000E16 E3F0 F018 0004          00000018   1474+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000E1C 47F0 F040               00000040   1475+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1476+* End of Epilog
                                            1477 * * **** End of Epilogue
                                            1478          DROP  12
                                            1479 *
                                            1480 *   DSECT for automatic variables in "cnd_signal"
                                            1481 *      (FUNCTION #693)
                                            1482 *
00000000                00000000 000000A8   1483 @AUTO#cnd_signal DSECT
00000000                                    1484          DS    XL168
                                            1485 *
00000E20                00000000 00002208   1486 @CODE    CSECT
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1487 *
                                            1488 *
                                            1489 *
                                            1490 * ....... start of cnd_broadcast
                                            1491 cnd_broadcast ALIAS X'8395846D82999681848381A2A3'
00000E20                                    1492 @LNAME694 DS   0H
00000E20 0000000D                           1493          DC    X'0000000D'
00000E24 8395846D82999681                   1494          DC    C'cnd_broadcast'
00000E31 00                                 1495          DC    X'00'
                                            1496 cnd_broadcast DCCPRLG CINDEX=694,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME694
                                            1497          macro
                                            1498          dccextrn &m
                                            1499          gblc    &$dccext(1000)
                                            1500          gbla    &$dccexti
                                            1501          lcla    &i
                                            1502 &$dccext(&$dccexti+1) setc    '&m'
                                            1503 &i       seta    1
                                            1504 .loop    aif    (&i gt &$dccexti).around
                                            1505          aif    ('&$dccext(&i)' eq '&m').getout
                                            1506 &i       seta    &i+1
                                            1507          ago     .loop
                                            1508 .around  anop
                                            1509 &$dccexti seta &$dccexti+1
                                            1510          extrn  &m
                                            1511 .getout  anop
                                            1512          mend
00000E38                                    1513+$eye0035    ds    0d                                                    02-DCCCA
00000E38 C4C3C3                             1514+         dc cl3'DCC'                                                    02-DCCCA
00000E3B 01                                 1515+         dc xl1'01' format one                                          02-DCCCA
00000E3C 00000000                           1516+         dc a(0)                                                        02-DCCCA
00000E40 0000000000000EAA                   1517+         dc ad(@PER_694)                                                02-DCCCA
00000E48 00000000000000B0                   1518+         dc ad(176)                                                     02-DCCCA
00000E50 0000000000000000                   1519+         dc ad(0)                                                       02-DCCCA
00000E58 0000000000001000                   1520+         dc ad(4096)                                                    02-DCCCA
00000E60 20                                 1521+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E61 03                                 1522+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E62 03                                 1523+         dc al1(3)                                                      02-DCCCA
00000E63 08                                 1524+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E64 00                                 1525+         dc bl.8'00000000'                                              02-DCCCA
00000E65 000000                             1526+         dc al3(0)                                                      02-DCCCA
00000E68 0000000000000E20                   1527+         dc ad(@LNAME694)                                               02-DCCCA
00000E70                                    1528+         ds 0d                                                          02-DCCCA
00000E70 0000000000000E38                   1529+         dc ad($eye0035)                                                02-DCCCA
00000E78 0000000000000000                   1530+         dc ad(0)                                                       02-DCCCA
00000E80                                    1531+         ds    0d                                                       01-DCCPR
                                            1532+         entry cnd_broadcast                                            01-DCCPR
00000E80                                    1533+cnd_broadcast ds 0d                                                     01-DCCPR
00000E80                                    1534+@REGION_694_1 ds 0h                                                     01-DCCPR
00000E80 EBEC D008 0024          00000008   1535+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000E86 E3E0 D088 0004          00000088   1536+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000E8C E3C0 D090 0004          00000090   1537+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000E92 B904 002E                          1538+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000E96 E3B0 C018 0004          00000018   1539+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000E9C A7EB 00B0               000000B0   1540+         aghi  14,176              increase by frame size               01-DCCPR
00000EA0 E3E0 C020 0021          00000020   1541+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000EA6 4720 B020               00000020   1542+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000EAA                                    1543+@PER_694 ds    0h                                                       01-DCCPR
00000EAA EBDE 2080 0024          00000080   1544+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000EB0 E3C0 2090 0024          00000090   1545+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000EB6 B904 00D2                          1546+         lgr   13,2                set real frame pointer               01-DCCPR
00000EBA B904 00CF                          1547+         lgr   12,15               set base reg                         01-DCCPR
                        00000E80            1548+         using @REGION_694_1,12                                         01-DCCPR
                                            1549 * ******* End of Prologue
                                            1550 * *
                                            1551 * ***   # 385 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            1552 * ***     return pthread_cond_broadcast(cond) == 0 ? 0 : 2;
00000EBE E3F0 1000 0004          00000000   1553          LG    15,0(0,1)   ; cond
00000EC4 E3F0 D0A8 0024          000000A8   1554          STG   15,168(0,13)
00000ECA 4110 D0A8               000000A8   1555          LA    1,168(0,13)
00000ECE E3F0 C070 0004          00000EF0   1556          LG    15,@lit_694_47 ; pthread_cond_broadcast
00000ED4                                    1557 @@gen_label49 DS    0H
00000ED4 05EF                               1558          BALR  14,15
00000ED6                                    1559 @@gen_label50 DS    0H
00000ED6 12FF                               1560          LTR   15,15
00000ED8 4770 C078               00000EF8   1561          BNE   @L72
00000EDC A7F8 0000               00000000   1562          LHI   15,0        ; 0
00000EE0 47F0 C07C               00000EFC   1563          B     @L73
00000EE8                                    1564          DS    0D
00000EE8 000000B0                           1565 @FRAMESIZE_694 DC F'176'
00000EEC 00000000
00000EF0 0000000000000000                   1566 @lit_694_47 DC AD(pthread_cond_broadcast)
00000EF8                                    1567 @L72     DS    0H
00000EF8 A7F8 0002               00000002   1568          LHI   15,2        ; 2
00000EFC                                    1569 @L73     DS    0H
00000EFC B914 00FF                          1570          LGFR  15,15
                                            1571 * ***
                                            1572 * ***   }
                                            1573 * * **** Start of Epilogue
                                            1574          DCCEPIL
00000F00                                    1575+         ds 0h                                                          01-DCCEP
                                            1576+* Epilog
00000F00 D707 D088 D088 00000088 00000088   1577+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000F06 E3D0 D080 0004          00000080   1578+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000F0C E3C0 D090 0004          00000090   1579+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000F12 E3B0 C018 0004          00000018   1580+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000F18 E3C0 B010 0021          00000010   1581+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000F1E E3E0 D008 0004          00000008   1582+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000F24 EB1C D020 0004          00000020   1583+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000F2A 078E                               1584+         bcr 8,14                if same dsab, just return              01-DCCEP
00000F2C E3F0 D010 0024          00000010   1585+         stg 15,16(0,13)         save return code                       01-DCCEP
00000F32 E300 D018 0024          00000018   1586+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000F38 E3F0 D090 0004          00000090   1587+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000F3E E3F0 F018 0004          00000018   1588+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   36 
  Active Usings: @REGION_694_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000F44 47F0 F040               00000040   1589+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1590+* End of Epilog
                                            1591 * * **** End of Epilogue
                                            1592          DROP  12
                                            1593 *
                                            1594 *   DSECT for automatic variables in "cnd_broadcast"
                                            1595 *      (FUNCTION #694)
                                            1596 *
00000000                00000000 000000A8   1597 @AUTO#cnd_broadcast DSECT
00000000                                    1598          DS    XL168
                                            1599 *
00000F48                00000000 00002208   1600 @CODE    CSECT
                                            1601 *
                                            1602 *
                                            1603 *
                                            1604 * ....... start of cnd_wait
                                            1605 cnd_wait ALIAS X'8395846DA68189A3'
00000F48                                    1606 @LNAME695 DS   0H
00000F48 00000008                           1607          DC    X'00000008'
00000F4C 8395846DA68189A3                   1608          DC    C'cnd_wait'
00000F54 00                                 1609          DC    X'00'
                                            1610 cnd_wait DCCPRLG CINDEX=695,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME695
                                            1611          macro
                                            1612          dccextrn &m
                                            1613          gblc    &$dccext(1000)
                                            1614          gbla    &$dccexti
                                            1615          lcla    &i
                                            1616 &$dccext(&$dccexti+1) setc    '&m'
                                            1617 &i       seta    1
                                            1618 .loop    aif    (&i gt &$dccexti).around
                                            1619          aif    ('&$dccext(&i)' eq '&m').getout
                                            1620 &i       seta    &i+1
                                            1621          ago     .loop
                                            1622 .around  anop
                                            1623 &$dccexti seta &$dccexti+1
                                            1624          extrn  &m
                                            1625 .getout  anop
                                            1626          mend
00000F58                                    1627+$eye0038    ds    0d                                                    02-DCCCA
00000F58 C4C3C3                             1628+         dc cl3'DCC'                                                    02-DCCCA
00000F5B 01                                 1629+         dc xl1'01' format one                                          02-DCCCA
00000F5C 00000000                           1630+         dc a(0)                                                        02-DCCCA
00000F60 0000000000000FCA                   1631+         dc ad(@PER_695)                                                02-DCCCA
00000F68 00000000000000B8                   1632+         dc ad(184)                                                     02-DCCCA
00000F70 0000000000000000                   1633+         dc ad(0)                                                       02-DCCCA
00000F78 0000000000001000                   1634+         dc ad(4096)                                                    02-DCCCA
00000F80 20                                 1635+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F81 03                                 1636+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F82 03                                 1637+         dc al1(3)                                                      02-DCCCA
00000F83 08                                 1638+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F84 00                                 1639+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000F85 000000                             1640+         dc al3(0)                                                      02-DCCCA
00000F88 0000000000000F48                   1641+         dc ad(@LNAME695)                                               02-DCCCA
00000F90                                    1642+         ds 0d                                                          02-DCCCA
00000F90 0000000000000F58                   1643+         dc ad($eye0038)                                                02-DCCCA
00000F98 0000000000000000                   1644+         dc ad(0)                                                       02-DCCCA
00000FA0                                    1645+         ds    0d                                                       01-DCCPR
                                            1646+         entry cnd_wait                                                 01-DCCPR
00000FA0                                    1647+cnd_wait ds    0d                                                       01-DCCPR
00000FA0                                    1648+@REGION_695_1 ds 0h                                                     01-DCCPR
00000FA0 EBEC D008 0024          00000008   1649+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000FA6 E3E0 D088 0004          00000088   1650+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000FAC E3C0 D090 0004          00000090   1651+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000FB2 B904 002E                          1652+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000FB6 E3B0 C018 0004          00000018   1653+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000FBC A7EB 00B8               000000B8   1654+         aghi  14,184              increase by frame size               01-DCCPR
00000FC0 E3E0 C020 0021          00000020   1655+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000FC6 4720 B020               00000020   1656+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000FCA                                    1657+@PER_695 ds    0h                                                       01-DCCPR
00000FCA EBDE 2080 0024          00000080   1658+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000FD0 E3C0 2090 0024          00000090   1659+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000FD6 B904 00D2                          1660+         lgr   13,2                set real frame pointer               01-DCCPR
00000FDA B904 00CF                          1661+         lgr   12,15               set base reg                         01-DCCPR
                        00000FA0            1662+         using @REGION_695_1,12                                         01-DCCPR
                                            1663 * ******* End of Prologue
                                            1664 * *
                                            1665 * ***
                                            1666 * ***
                                            1667 * ***
                                            1668 * ***     return pthread_cond_wait(cond, mtx) == 0 ? 0 : 2;
00000FDE E3F0 1000 0004          00000000   1669          LG    15,0(0,1)   ; cond
00000FE4 E3F0 D0A8 0024          000000A8   1670          STG   15,168(0,13)
00000FEA E3F0 1008 0004          00000008   1671          LG    15,8(0,1)   ; mtx
00000FF0 E3F0 D0B0 0024          000000B0   1672          STG   15,176(0,13)
00000FF6 4110 D0A8               000000A8   1673          LA    1,168(0,13)
00000FFA E3F0 C078 0004          00001018   1674          LG    15,@lit_695_51 ; pthread_cond_wait
00001000                                    1675 @@gen_label52 DS    0H
00001000 05EF                               1676          BALR  14,15
00001002                                    1677 @@gen_label53 DS    0H
00001002 12FF                               1678          LTR   15,15
00001004 4770 C080               00001020   1679          BNE   @L74
00001008 A7F8 0000               00000000   1680          LHI   15,0        ; 0
0000100C 47F0 C084               00001024   1681          B     @L75
00001010                                    1682          DS    0D
00001010 000000B8                           1683 @FRAMESIZE_695 DC F'184'
00001014 00000000
00001018 0000000000000000                   1684 @lit_695_51 DC AD(pthread_cond_wait)
00001020                                    1685 @L74     DS    0H
00001020 A7F8 0002               00000002   1686          LHI   15,2        ; 2
00001024                                    1687 @L75     DS    0H
00001024 B914 00FF                          1688          LGFR  15,15
                                            1689 * ***
                                            1690 * ***   }
                                                                                                                           Page   38 
  Active Usings: @REGION_695_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1691 * * **** Start of Epilogue
                                            1692          DCCEPIL
00001028                                    1693+         ds 0h                                                          01-DCCEP
                                            1694+* Epilog
00001028 D707 D088 D088 00000088 00000088   1695+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000102E E3D0 D080 0004          00000080   1696+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001034 E3C0 D090 0004          00000090   1697+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000103A E3B0 C018 0004          00000018   1698+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001040 E3C0 B010 0021          00000010   1699+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001046 E3E0 D008 0004          00000008   1700+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000104C EB1C D020 0004          00000020   1701+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001052 078E                               1702+         bcr 8,14                if same dsab, just return              01-DCCEP
00001054 E3F0 D010 0024          00000010   1703+         stg 15,16(0,13)         save return code                       01-DCCEP
0000105A E300 D018 0024          00000018   1704+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001060 E3F0 D090 0004          00000090   1705+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001066 E3F0 F018 0004          00000018   1706+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000106C 47F0 F040               00000040   1707+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1708+* End of Epilog
                                            1709 * * **** End of Epilogue
                                            1710          DROP  12
                                            1711 *
                                            1712 *   DSECT for automatic variables in "cnd_wait"
                                            1713 *      (FUNCTION #695)
                                            1714 *
00000000                00000000 000000A8   1715 @AUTO#cnd_wait DSECT
00000000                                    1716          DS    XL168
                                            1717 *
00001070                00000000 00002208   1718 @CODE    CSECT
                                            1719 *
                                            1720 *
                                            1721 *
                                            1722 * ....... start of cnd_timedwait
                                            1723 cnd_timedwait ALIAS X'8395846DA389948584A68189A3'
00001070                                    1724 @LNAME696 DS   0H
00001070 0000000D                           1725          DC    X'0000000D'
00001074 8395846DA3899485                   1726          DC    C'cnd_timedwait'
00001081 00                                 1727          DC    X'00'
                                            1728 cnd_timedwait DCCPRLG CINDEX=696,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME696
                                            1729          macro
                                            1730          dccextrn &m
                                            1731          gblc    &$dccext(1000)
                                            1732          gbla    &$dccexti
                                            1733          lcla    &i
                                            1734 &$dccext(&$dccexti+1) setc    '&m'
                                            1735 &i       seta    1
                                            1736 .loop    aif    (&i gt &$dccexti).around
                                            1737          aif    ('&$dccext(&i)' eq '&m').getout
                                            1738 &i       seta    &i+1
                                            1739          ago     .loop
                                            1740 .around  anop
                                            1741 &$dccexti seta &$dccexti+1
                                                                                                                           Page   39 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1742          extrn  &m
                                            1743 .getout  anop
                                            1744          mend
00001088                                    1745+$eye0041    ds    0d                                                    02-DCCCA
00001088 C4C3C3                             1746+         dc cl3'DCC'                                                    02-DCCCA
0000108B 01                                 1747+         dc xl1'01' format one                                          02-DCCCA
0000108C 00000000                           1748+         dc a(0)                                                        02-DCCCA
00001090 00000000000010FA                   1749+         dc ad(@PER_696)                                                02-DCCCA
00001098 00000000000000C8                   1750+         dc ad(200)                                                     02-DCCCA
000010A0 0000000000000000                   1751+         dc ad(0)                                                       02-DCCCA
000010A8 0000000000001000                   1752+         dc ad(4096)                                                    02-DCCCA
000010B0 20                                 1753+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000010B1 03                                 1754+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000010B2 03                                 1755+         dc al1(3)                                                      02-DCCCA
000010B3 08                                 1756+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000010B4 00                                 1757+         dc bl.8'00000000'                                              02-DCCCA
000010B5 000000                             1758+         dc al3(0)                                                      02-DCCCA
000010B8 0000000000001070                   1759+         dc ad(@LNAME696)                                               02-DCCCA
000010C0                                    1760+         ds 0d                                                          02-DCCCA
000010C0 0000000000001088                   1761+         dc ad($eye0041)                                                02-DCCCA
000010C8 0000000000000000                   1762+         dc ad(0)                                                       02-DCCCA
000010D0                                    1763+         ds    0d                                                       01-DCCPR
                                            1764+         entry cnd_timedwait                                            01-DCCPR
000010D0                                    1765+cnd_timedwait ds 0d                                                     01-DCCPR
000010D0                                    1766+@REGION_696_1 ds 0h                                                     01-DCCPR
000010D0 EBEC D008 0024          00000008   1767+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000010D6 E3E0 D088 0004          00000088   1768+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000010DC E3C0 D090 0004          00000090   1769+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000010E2 B904 002E                          1770+         lgr   2,14                copy addr of our savearea            01-DCCPR
000010E6 E3B0 C018 0004          00000018   1771+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000010EC A7EB 00C8               000000C8   1772+         aghi  14,200              increase by frame size               01-DCCPR
000010F0 E3E0 C020 0021          00000020   1773+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000010F6 4720 B020               00000020   1774+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000010FA                                    1775+@PER_696 ds    0h                                                       01-DCCPR
000010FA EBDE 2080 0024          00000080   1776+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001100 E3C0 2090 0024          00000090   1777+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001106 B904 00D2                          1778+         lgr   13,2                set real frame pointer               01-DCCPR
0000110A B904 00CF                          1779+         lgr   12,15               set base reg                         01-DCCPR
                        000010D0            1780+         using @REGION_696_1,12                                         01-DCCPR
                                            1781 * ******* End of Prologue
                                            1782 * *
                                            1783 * ***   # 461 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            1784 * ***     int ret;
                                            1785 * ***     ret = pthread_cond_timedwait(cond, mtx, ts);
0000110E E3F0 1000 0004          00000000   1786          LG    15,0(0,1)   ; cond
00001114 E3F0 D0B0 0024          000000B0   1787          STG   15,176(0,13)
0000111A E3F0 1008 0004          00000008   1788          LG    15,8(0,1)   ; mtx
00001120 E3F0 D0B8 0024          000000B8   1789          STG   15,184(0,13)
00001126 E3F0 1010 0004          00000010   1790          LG    15,16(0,1)  ; ts
0000112C E3F0 D0C0 0024          000000C0   1791          STG   15,192(0,13)
00001132 4110 D0B0               000000B0   1792          LA    1,176(0,13)
00001136 E3F0 C088 0004          00001158   1793          LG    15,@lit_696_55 ; pthread_cond_timedwait
                                                                                                                           Page   40 
  Active Usings: @REGION_696_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000113C                                    1794 @@gen_label55 DS    0H
0000113C 05EF                               1795          BALR  14,15
0000113E                                    1796 @@gen_label56 DS    0H
                                            1797 * ***     if (ret == 60)
0000113E A7FE 003C               0000003C   1798          CHI   15,60
00001142 4770 C090               00001160   1799          BNE   @L76
                                            1800 * ***     {
                                            1801 * ***       return 4;
00001146 A7F9 0004               00000004   1802          LGHI  15,4        ; 4
0000114A 47F0 C0A6               00001176   1803          B     @ret_lab_696
00001150                                    1804          DS    0D
00001150 000000C8                           1805 @FRAMESIZE_696 DC F'200'
00001154 00000000
00001158 0000000000000000                   1806 @lit_696_55 DC AD(pthread_cond_timedwait)
                                            1807 * ***     }
00001160                                    1808 @L76     DS    0H
                                            1809 * ***     return ret == 0 ? 0 : 2;
00001160 12FF                               1810          LTR   15,15
00001162 4770 C09E               0000116E   1811          BNE   @L77
00001166 A7F8 0000               00000000   1812          LHI   15,0        ; 0
0000116A 47F0 C0A2               00001172   1813          B     @L78
0000116E                                    1814 @L77     DS    0H
0000116E A7F8 0002               00000002   1815          LHI   15,2        ; 2
00001172                                    1816 @L78     DS    0H
00001172 B914 00FF                          1817          LGFR  15,15
                                            1818 * ***
                                            1819 * ***   }
00001176                                    1820 @ret_lab_696 DS 0H
                                            1821 * * **** Start of Epilogue
                                            1822          DCCEPIL
00001176                                    1823+         ds 0h                                                          01-DCCEP
                                            1824+* Epilog
00001176 D707 D088 D088 00000088 00000088   1825+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000117C E3D0 D080 0004          00000080   1826+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001182 E3C0 D090 0004          00000090   1827+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001188 E3B0 C018 0004          00000018   1828+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000118E E3C0 B010 0021          00000010   1829+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001194 E3E0 D008 0004          00000008   1830+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000119A EB1C D020 0004          00000020   1831+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000011A0 078E                               1832+         bcr 8,14                if same dsab, just return              01-DCCEP
000011A2 E3F0 D010 0024          00000010   1833+         stg 15,16(0,13)         save return code                       01-DCCEP
000011A8 E300 D018 0024          00000018   1834+         stg 0,24(0,13)          save more return code                  01-DCCEP
000011AE E3F0 D090 0004          00000090   1835+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000011B4 E3F0 F018 0004          00000018   1836+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000011BA 47F0 F040               00000040   1837+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1838+* End of Epilog
                                            1839 * * **** End of Epilogue
                                            1840          DROP  12
                                            1841 *
                                            1842 *   DSECT for automatic variables in "cnd_timedwait"
                                            1843 *      (FUNCTION #696)
                                            1844 *
                                                                                                                           Page   41 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                00000000 000000AC   1845 @AUTO#cnd_timedwait DSECT
00000000                                    1846          DS    XL168
000000A8                                    1847 cnd_timedwait#ret#0 DS 1F  ; ret
                                            1848 *
000011BE                00000000 00002208   1849 @CODE    CSECT
                                            1850 *
                                            1851 *
                                            1852 *
                                            1853 * ....... start of _thrd_wrapper_function
000011BE                                    1854 @LNAME785 DS   0H
000011BE 00000016                           1855          DC    X'00000016'
000011C2 6DA38899846DA699                   1856          DC    C'_thrd_wrapper_function'
000011D8 00                                 1857          DC    X'00'
                                            1858 _thrd_wrapper_function DCCPRLG CINDEX=785,BASER=12,FRAME=184,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME785
                                            1859          macro
                                            1860          dccextrn &m
                                            1861          gblc    &$dccext(1000)
                                            1862          gbla    &$dccexti
                                            1863          lcla    &i
                                            1864 &$dccext(&$dccexti+1) setc    '&m'
                                            1865 &i       seta    1
                                            1866 .loop    aif    (&i gt &$dccexti).around
                                            1867          aif    ('&$dccext(&i)' eq '&m').getout
                                            1868 &i       seta    &i+1
                                            1869          ago     .loop
                                            1870 .around  anop
                                            1871 &$dccexti seta &$dccexti+1
                                            1872          extrn  &m
                                            1873 .getout  anop
                                            1874          mend
000011E0                                    1875+$eye0044    ds    0d                                                    02-DCCCA
000011E0 C4C3C3                             1876+         dc cl3'DCC'                                                    02-DCCCA
000011E3 01                                 1877+         dc xl1'01' format one                                          02-DCCCA
000011E4 00000000                           1878+         dc a(0)                                                        02-DCCCA
000011E8 0000000000001252                   1879+         dc ad(@PER_785)                                                02-DCCCA
000011F0 00000000000000B8                   1880+         dc ad(184)                                                     02-DCCCA
000011F8 0000000000000000                   1881+         dc ad(0)                                                       02-DCCCA
00001200 0000000000001000                   1882+         dc ad(4096)                                                    02-DCCCA
00001208 20                                 1883+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001209 03                                 1884+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000120A 03                                 1885+         dc al1(3)                                                      02-DCCCA
0000120B 08                                 1886+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000120C 00                                 1887+         dc bl.8'00000000'                                              02-DCCCA
0000120D 000000                             1888+         dc al3(0)                                                      02-DCCCA
00001210 00000000000011BE                   1889+         dc ad(@LNAME785)                                               02-DCCCA
00001218                                    1890+         ds 0d                                                          02-DCCCA
00001218 00000000000011E0                   1891+         dc ad($eye0044)                                                02-DCCCA
00001220 0000000000000000                   1892+         dc ad(0)                                                       02-DCCCA
00001228                                    1893+         ds    0d                                                       01-DCCPR
00001228                                    1894+_thrd_wrapper_function ds 0d                                            01-DCCPR
00001228                                    1895+@REGION_785_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001228 EBEC D008 0024          00000008   1896+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000122E E3E0 D088 0004          00000088   1897+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001234 E3C0 D090 0004          00000090   1898+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000123A B904 002E                          1899+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000123E E3B0 C018 0004          00000018   1900+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001244 A7EB 00B8               000000B8   1901+         aghi  14,184              increase by frame size               01-DCCPR
00001248 E3E0 C020 0021          00000020   1902+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000124E 4720 B020               00000020   1903+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001252                                    1904+@PER_785 ds    0h                                                       01-DCCPR
00001252 EBDE 2080 0024          00000080   1905+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001258 E3C0 2090 0024          00000090   1906+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000125E B904 00D2                          1907+         lgr   13,2                set real frame pointer               01-DCCPR
00001262 B904 00CF                          1908+         lgr   12,15               set base reg                         01-DCCPR
                        00001228            1909+         using @REGION_785_1,12                                         01-DCCPR
                                            1910 * ******* End of Prologue
                                            1911 * *
                                            1912 * ***     thrd_start_t fun;
                                            1913 * ***     void *arg;
                                            1914 * ***     int  res;
                                            1915 * ***
                                            1916 * ***
                                            1917 * ***     _thread_start_info *ti = (_thread_start_info *) aArg;
00001266 E3F0 1000 0004          00000000   1918          LG    15,0(0,1)   ; aArg
                                            1919 * ***     fun = ti->mFunction;
0000126C EB23 F000 0004          00000000   1920          LMG   2,3,0(15)   ; ti
                                            1921 * ***     arg = ti->mArg;
                                            1922 * ***
                                            1923 * ***
                                            1924 * ***     rd_free((void *)ti);
00001272 E3F0 D0B0 0024          000000B0   1925          STG   15,176(0,13)
00001278 4110 D0B0               000000B0   1926          LA    1,176(0,13)
0000127C E3F0 C0C0 0004          000012E8   1927          LG    15,@lit_785_60 ; rd_free
00001282                                    1928 @@gen_label59 DS    0H
00001282 05EF                               1929          BALR  14,15
00001284                                    1930 @@gen_label60 DS    0H
                                            1931 * ***
                                            1932 * ***
                                            1933 * ***     res = fun(arg);
00001284 E330 D0B0 0024          000000B0   1934          STG   3,176(0,13)
0000128A 4110 D0B0               000000B0   1935          LA    1,176(0,13)
0000128E B904 00F2                          1936          LGR   15,2
00001292                                    1937 @@gen_label61 DS    0H
00001292 05EF                               1938          BALR  14,15
00001294                                    1939 @@gen_label62 DS    0H
                                            1940 * ***
                                            1941 * ***   # 586 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            1942 * ***     return (void*)(intptr_t)res;
00001294 B914 00FF                          1943          LGFR  15,15
                                            1944 * ***
                                            1945 * ***   }
                                            1946 * * **** Start of Epilogue
                                            1947          DCCEPIL
                                                                                                                           Page   43 
  Active Usings: @REGION_785_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001298                                    1948+         ds 0h                                                          01-DCCEP
                                            1949+* Epilog
00001298 D707 D088 D088 00000088 00000088   1950+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000129E E3D0 D080 0004          00000080   1951+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000012A4 E3C0 D090 0004          00000090   1952+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000012AA E3B0 C018 0004          00000018   1953+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000012B0 E3C0 B010 0021          00000010   1954+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000012B6 E3E0 D008 0004          00000008   1955+         lg  14,8(0,13)          load up return address                 01-DCCEP
000012BC EB1C D020 0004          00000020   1956+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000012C2 078E                               1957+         bcr 8,14                if same dsab, just return              01-DCCEP
000012C4 E3F0 D010 0024          00000010   1958+         stg 15,16(0,13)         save return code                       01-DCCEP
000012CA E300 D018 0024          00000018   1959+         stg 0,24(0,13)          save more return code                  01-DCCEP
000012D0 E3F0 D090 0004          00000090   1960+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000012D6 E3F0 F018 0004          00000018   1961+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000012DC 47F0 F040               00000040   1962+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1963+* End of Epilog
                                            1964 * * **** End of Epilogue
000012E0                                    1965          DS    0D
000012E0 000000B8                           1966 @FRAMESIZE_785 DC F'184'
000012E4 00000000
000012E8 00000000000001C0                   1967 @lit_785_60 DC AD(rd_free)
                                            1968          DROP  12
                                            1969 *
                                            1970 *   DSECT for automatic variables in "_thrd_wrapper_function"
                                            1971 *      (FUNCTION #785)
                                            1972 *
00000000                00000000 000000AC   1973 @AUTO#_thrd_wrapper_function DSECT
00000000                                    1974          DS    XL168
000000A8                                    1975 _thrd_wrapper_function#res#0 DS 1F ; res
                                            1976 *
000012F0                00000000 00002208   1977 @CODE    CSECT
                                            1978 *
                                            1979 *
                                            1980 *
                                            1981 * ....... start of thrd_create
                                            1982 thrd_create ALIAS X'A38899846D83998581A385'
000012F0                                    1983 @LNAME697 DS   0H
000012F0 0000000B                           1984          DC    X'0000000B'
000012F4 A38899846D839985                   1985          DC    C'thrd_create'
000012FF 00                                 1986          DC    X'00'
                                            1987 thrd_create DCCPRLG CINDEX=697,BASER=12,FRAME=208,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME697
                                            1988          macro
                                            1989          dccextrn &m
                                            1990          gblc    &$dccext(1000)
                                            1991          gbla    &$dccexti
                                            1992          lcla    &i
                                            1993 &$dccext(&$dccexti+1) setc    '&m'
                                            1994 &i       seta    1
                                            1995 .loop    aif    (&i gt &$dccexti).around
                                            1996          aif    ('&$dccext(&i)' eq '&m').getout
                                            1997 &i       seta    &i+1
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1998          ago     .loop
                                            1999 .around  anop
                                            2000 &$dccexti seta &$dccexti+1
                                            2001          extrn  &m
                                            2002 .getout  anop
                                            2003          mend
00001300                                    2004+$eye0047    ds    0d                                                    02-DCCCA
00001300 C4C3C3                             2005+         dc cl3'DCC'                                                    02-DCCCA
00001303 01                                 2006+         dc xl1'01' format one                                          02-DCCCA
00001304 00000000                           2007+         dc a(0)                                                        02-DCCCA
00001308 0000000000001372                   2008+         dc ad(@PER_697)                                                02-DCCCA
00001310 00000000000000D0                   2009+         dc ad(208)                                                     02-DCCCA
00001318 0000000000000000                   2010+         dc ad(0)                                                       02-DCCCA
00001320 0000000000001000                   2011+         dc ad(4096)                                                    02-DCCCA
00001328 20                                 2012+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001329 03                                 2013+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000132A 03                                 2014+         dc al1(3)                                                      02-DCCCA
0000132B 08                                 2015+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000132C 00                                 2016+         dc bl.8'00000000'                                              02-DCCCA
0000132D 000000                             2017+         dc al3(0)                                                      02-DCCCA
00001330 00000000000012F0                   2018+         dc ad(@LNAME697)                                               02-DCCCA
00001338                                    2019+         ds 0d                                                          02-DCCCA
00001338 0000000000001300                   2020+         dc ad($eye0047)                                                02-DCCCA
00001340 0000000000000000                   2021+         dc ad(0)                                                       02-DCCCA
00001348                                    2022+         ds    0d                                                       01-DCCPR
                                            2023+         entry thrd_create                                              01-DCCPR
00001348                                    2024+thrd_create ds 0d                                                       01-DCCPR
00001348                                    2025+@REGION_697_1 ds 0h                                                     01-DCCPR
00001348 EBEC D008 0024          00000008   2026+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000134E E3E0 D088 0004          00000088   2027+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001354 E3C0 D090 0004          00000090   2028+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000135A B904 002E                          2029+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000135E E3B0 C018 0004          00000018   2030+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001364 A7EB 00D0               000000D0   2031+         aghi  14,208              increase by frame size               01-DCCPR
00001368 E3E0 C020 0021          00000020   2032+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000136E 4720 B020               00000020   2033+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001372                                    2034+@PER_697 ds    0h                                                       01-DCCPR
00001372 EBDE 2080 0024          00000080   2035+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001378 E3C0 2090 0024          00000090   2036+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000137E B904 00D2                          2037+         lgr   13,2                set real frame pointer               01-DCCPR
00001382 B904 00CF                          2038+         lgr   12,15               set base reg                         01-DCCPR
                        00001348            2039+         using @REGION_697_1,12                                         01-DCCPR
00001386 B904 0041                          2040          LGR   4,1         ; ptr to parm area
                                            2041 * ******* End of Prologue
                                            2042 * *
0000138A E320 4000 0004          00000000   2043          LG    2,0(0,4)    ; thr
                                            2044 * ***
                                            2045 * ***
                                            2046 * ***     _thread_start_info* ti = (_thread_start_info*)rd_malloc(size\
                                            2047 * of(_thread_start_info));
00001390 E548 D0B0 0010          000000B0   2048          MVGHI 176(13),16
00001396 4110 D0B0               000000B0   2049          LA    1,176(0,13)
                                                                                                                           Page   45 
  Active Usings: @REGION_697_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000139A E3F0 C078 0004          000013C0   2050          LG    15,@lit_697_62 ; rd_malloc
000013A0                                    2051 @@gen_label63 DS    0H
000013A0 05EF                               2052          BALR  14,15
000013A2                                    2053 @@gen_label64 DS    0H
000013A2 B904 003F                          2054          LGR   3,15
                                            2055 * ***     if (ti == ((void *)0))
000013A6 B902 00F3                          2056          LTGR  15,3
000013AA 4770 C0A0               000013E8   2057          BNE   @L79
                                            2058 * ***     {
                                            2059 * ***       return 3;
000013AE A7F9 0003               00000003   2060          LGHI  15,3        ; 3
000013B2 47F0 C126               0000146E   2061          B     @ret_lab_697
000013B8                                    2062          DS    0D
000013B8 000000D0                           2063 @FRAMESIZE_697 DC F'208'
000013BC 00000000
000013C0 0000000000000058                   2064 @lit_697_62 DC AD(rd_malloc)
000013C8 0000000000000000                   2065 @lit_697_65 DC AD(pthread_create)
000013D0 0000000000001228                   2066 @lit_697_64 DC AD(_thrd_wrapper_function)
000013D8 0000000000000000                   2067 @lit_697_66 DC AD(__error)
000013E0 00000000000001C0                   2068 @lit_697_68 DC AD(rd_free)
                                            2069 * ***     }
000013E8                                    2070 @L79     DS    0H
                                            2071 * ***     ti->mFunction = func;
000013E8 E3F0 4008 0004          00000008   2072          LG    15,8(0,4)   ; func
000013EE E3F0 3000 0024          00000000   2073          STG   15,0(0,3)   ; ti
                                            2074 * ***     ti->mArg = arg;
000013F4 E3F0 4010 0004          00000010   2075          LG    15,16(0,4)  ; arg
000013FA E3F0 3008 0024          00000008   2076          STG   15,8(0,3)   ; offset of mArg in 0000022
                                            2077 * ***
                                            2078 * ***
                                            2079 * ***
                                            2080 * ***
                                            2081 * ***
                                            2082 * ***     {
                                            2083 * ***             int err;
                                            2084 * ***             if((err = pthread_create(thr, ((void *)0), _thrd_wra\
                                            2085 * pper_function,
                                            2086 * ***                                      (void *)ti)) != 0) {
00001400 E320 D0B0 0024          000000B0   2087          STG   2,176(0,13)
00001406 D707 D0B8 D0B8 000000B8 000000B8   2088          XC    184(8,13),184(13)
0000140C E3F0 C088 0004          000013D0   2089          LG    15,@lit_697_64 ; _thrd_wrapper_function
00001412 E3F0 D0C0 0024          000000C0   2090          STG   15,192(0,13)
00001418 E330 D0C8 0024          000000C8   2091          STG   3,200(0,13)
0000141E 4110 D0B0               000000B0   2092          LA    1,176(0,13)
00001422 E3F0 C080 0004          000013C8   2093          LG    15,@lit_697_65 ; pthread_create
00001428                                    2094 @@gen_label66 DS    0H
00001428 05EF                               2095          BALR  14,15
0000142A                                    2096 @@gen_label67 DS    0H
0000142A 124F                               2097          LTR   4,15
0000142C 4780 C0FE               00001446   2098          BE    @L80
                                            2099 * ***                     (* __error()) = err;
00001430 E3F0 C090 0004          000013D8   2100          LG    15,@lit_697_66 ; __error
                                                                                                                           Page   46 
  Active Usings: @REGION_697_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001436                                    2101 @@gen_label69 DS    0H
00001436 05EF                               2102          BALR  14,15
00001438                                    2103 @@gen_label70 DS    0H
00001438 5040 F000               00000000   2104          ST    4,0(0,15)
                                            2105 * ***                     *thr = 0;
0000143C A7F9 0000               00000000   2106          LGHI  15,0        ; 0
00001440 E3F0 2000 0024          00000000   2107          STG   15,0(0,2)   ; thr
                                            2108 * ***             }
00001446                                    2109 @L80     DS    0H
                                            2110 * ***     }
                                            2111 * ***
                                            2112 * ***
                                            2113 * ***
                                            2114 * ***     if(!*thr)
00001446 E3F0 2000 0002          00000000   2115          LTG   15,0(0,2)   ; thr
0000144C 4770 C122               0000146A   2116          BNZ   @L81
                                            2117 * ***     {
                                            2118 * ***       rd_free(ti);
00001450 E330 D0B0 0024          000000B0   2119          STG   3,176(0,13)
00001456 4110 D0B0               000000B0   2120          LA    1,176(0,13)
0000145A E3F0 C098 0004          000013E0   2121          LG    15,@lit_697_68 ; rd_free
00001460                                    2122 @@gen_label72 DS    0H
00001460 05EF                               2123          BALR  14,15
00001462                                    2124 @@gen_label73 DS    0H
                                            2125 * ***       return 2;
00001462 A7F9 0002               00000002   2126          LGHI  15,2        ; 2
00001466 47F0 C126               0000146E   2127          B     @ret_lab_697
                                            2128 * ***     }
0000146A                                    2129 @L81     DS    0H
                                            2130 * ***
                                            2131 * ***     return 0;
0000146A A7F9 0000               00000000   2132          LGHI  15,0        ; 0
                                            2133 * ***   }
0000146E                                    2134 @ret_lab_697 DS 0H
                                            2135 * * **** Start of Epilogue
                                            2136          DCCEPIL
0000146E                                    2137+         ds 0h                                                          01-DCCEP
                                            2138+* Epilog
0000146E D707 D088 D088 00000088 00000088   2139+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001474 E3D0 D080 0004          00000080   2140+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000147A E3C0 D090 0004          00000090   2141+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001480 E3B0 C018 0004          00000018   2142+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001486 E3C0 B010 0021          00000010   2143+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000148C E3E0 D008 0004          00000008   2144+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001492 EB1C D020 0004          00000020   2145+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001498 078E                               2146+         bcr 8,14                if same dsab, just return              01-DCCEP
0000149A E3F0 D010 0024          00000010   2147+         stg 15,16(0,13)         save return code                       01-DCCEP
000014A0 E300 D018 0024          00000018   2148+         stg 0,24(0,13)          save more return code                  01-DCCEP
000014A6 E3F0 D090 0004          00000090   2149+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000014AC E3F0 F018 0004          00000018   2150+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000014B2 47F0 F040               00000040   2151+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2152+* End of Epilog
                                                                                                                           Page   47 
  Active Usings: @REGION_697_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2153 * * **** End of Epilogue
                                            2154          DROP  12
                                            2155 *
                                            2156 *   DSECT for automatic variables in "thrd_create"
                                            2157 *      (FUNCTION #697)
                                            2158 *
00000000                00000000 000000AC   2159 @AUTO#thrd_create DSECT
00000000                                    2160          DS    XL168
000000A8                                    2161 thrd_create#err#2 DS 1F    ; err
                                            2162 *
000014B6                00000000 00002208   2163 @CODE    CSECT
                                            2164 *
                                            2165 *
                                            2166 *
                                            2167 * ....... start of thrd_current
                                            2168 thrd_current ALIAS X'A38899846D83A499998595A3'
000014B6                                    2169 @LNAME698 DS   0H
000014B6 0000000C                           2170          DC    X'0000000C'
000014BA A38899846D83A499                   2171          DC    C'thrd_current'
000014C6 00                                 2172          DC    X'00'
                                            2173 thrd_current DCCPRLG CINDEX=698,BASER=12,FRAME=168,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME698
                                            2174          macro
                                            2175          dccextrn &m
                                            2176          gblc    &$dccext(1000)
                                            2177          gbla    &$dccexti
                                            2178          lcla    &i
                                            2179 &$dccext(&$dccexti+1) setc    '&m'
                                            2180 &i       seta    1
                                            2181 .loop    aif    (&i gt &$dccexti).around
                                            2182          aif    ('&$dccext(&i)' eq '&m').getout
                                            2183 &i       seta    &i+1
                                            2184          ago     .loop
                                            2185 .around  anop
                                            2186 &$dccexti seta &$dccexti+1
                                            2187          extrn  &m
                                            2188 .getout  anop
                                            2189          mend
000014C8                                    2190+$eye0050    ds    0d                                                    02-DCCCA
000014C8 C4C3C3                             2191+         dc cl3'DCC'                                                    02-DCCCA
000014CB 01                                 2192+         dc xl1'01' format one                                          02-DCCCA
000014CC 00000000                           2193+         dc a(0)                                                        02-DCCCA
000014D0 000000000000153A                   2194+         dc ad(@PER_698)                                                02-DCCCA
000014D8 00000000000000A8                   2195+         dc ad(168)                                                     02-DCCCA
000014E0 0000000000000000                   2196+         dc ad(0)                                                       02-DCCCA
000014E8 0000000000001000                   2197+         dc ad(4096)                                                    02-DCCCA
000014F0 20                                 2198+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000014F1 03                                 2199+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000014F2 03                                 2200+         dc al1(3)                                                      02-DCCCA
000014F3 08                                 2201+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000014F4 00                                 2202+         dc bl.8'00000000'                                              02-DCCCA
000014F5 000000                             2203+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000014F8 00000000000014B6                   2204+         dc ad(@LNAME698)                                               02-DCCCA
00001500                                    2205+         ds 0d                                                          02-DCCCA
00001500 00000000000014C8                   2206+         dc ad($eye0050)                                                02-DCCCA
00001508 0000000000000000                   2207+         dc ad(0)                                                       02-DCCCA
00001510                                    2208+         ds    0d                                                       01-DCCPR
                                            2209+         entry thrd_current                                             01-DCCPR
00001510                                    2210+thrd_current ds 0d                                                      01-DCCPR
00001510                                    2211+@REGION_698_1 ds 0h                                                     01-DCCPR
00001510 EBEC D008 0024          00000008   2212+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001516 E3E0 D088 0004          00000088   2213+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000151C E3C0 D090 0004          00000090   2214+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001522 B904 002E                          2215+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001526 E3B0 C018 0004          00000018   2216+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000152C A7EB 00A8               000000A8   2217+         aghi  14,168              increase by frame size               01-DCCPR
00001530 E3E0 C020 0021          00000020   2218+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001536 4720 B020               00000020   2219+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000153A                                    2220+@PER_698 ds    0h                                                       01-DCCPR
0000153A EBDE 2080 0024          00000080   2221+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001540 E3C0 2090 0024          00000090   2222+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001546 B904 00D2                          2223+         lgr   13,2                set real frame pointer               01-DCCPR
0000154A B904 00CF                          2224+         lgr   12,15               set base reg                         01-DCCPR
                        00001510            2225+         using @REGION_698_1,12                                         01-DCCPR
                                            2226 * ******* End of Prologue
                                            2227 * *
                                            2228 * ***
                                            2229 * ***
                                            2230 * ***
                                            2231 * ***     return pthread_self();
0000154E E3F0 C098 0004          000015A8   2232          LG    15,@lit_698_72 ; pthread_self
00001554                                    2233 @@gen_label74 DS    0H
00001554 05EF                               2234          BALR  14,15
00001556                                    2235 @@gen_label75 DS    0H
                                            2236 * ***
                                            2237 * ***   }
                                            2238 * * **** Start of Epilogue
                                            2239          DCCEPIL
00001556                                    2240+         ds 0h                                                          01-DCCEP
                                            2241+* Epilog
00001556 D707 D088 D088 00000088 00000088   2242+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000155C E3D0 D080 0004          00000080   2243+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001562 E3C0 D090 0004          00000090   2244+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001568 E3B0 C018 0004          00000018   2245+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000156E E3C0 B010 0021          00000010   2246+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001574 E3E0 D008 0004          00000008   2247+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000157A EB1C D020 0004          00000020   2248+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001580 078E                               2249+         bcr 8,14                if same dsab, just return              01-DCCEP
00001582 E3F0 D010 0024          00000010   2250+         stg 15,16(0,13)         save return code                       01-DCCEP
00001588 E300 D018 0024          00000018   2251+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000158E E3F0 D090 0004          00000090   2252+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001594 E3F0 F018 0004          00000018   2253+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000159A 47F0 F040               00000040   2254+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2255+* End of Epilog
                                                                                                                           Page   49 
  Active Usings: @REGION_698_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2256 * * **** End of Epilogue
000015A0                                    2257          DS    0D
000015A0 000000A8                           2258 @FRAMESIZE_698 DC F'168'
000015A4 00000000
000015A8 0000000000000000                   2259 @lit_698_72 DC AD(pthread_self)
                                            2260          DROP  12
                                            2261 *
                                            2262 *   DSECT for automatic variables in "thrd_current"
                                            2263 *      (FUNCTION #698)
                                            2264 *
00000000                00000000 000000A8   2265 @AUTO#thrd_current DSECT
00000000                                    2266          DS    XL168
                                            2267 *
000015B0                00000000 00002208   2268 @CODE    CSECT
                                            2269 *
                                            2270 *
                                            2271 *
                                            2272 * ....... start of thrd_detach
                                            2273 thrd_detach ALIAS X'A38899846D8485A3818388'
000015B0                                    2274 @LNAME699 DS   0H
000015B0 0000000B                           2275          DC    X'0000000B'
000015B4 A38899846D8485A3                   2276          DC    C'thrd_detach'
000015BF 00                                 2277          DC    X'00'
                                            2278 thrd_detach DCCPRLG CINDEX=699,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME699
                                            2279          macro
                                            2280          dccextrn &m
                                            2281          gblc    &$dccext(1000)
                                            2282          gbla    &$dccexti
                                            2283          lcla    &i
                                            2284 &$dccext(&$dccexti+1) setc    '&m'
                                            2285 &i       seta    1
                                            2286 .loop    aif    (&i gt &$dccexti).around
                                            2287          aif    ('&$dccext(&i)' eq '&m').getout
                                            2288 &i       seta    &i+1
                                            2289          ago     .loop
                                            2290 .around  anop
                                            2291 &$dccexti seta &$dccexti+1
                                            2292          extrn  &m
                                            2293 .getout  anop
                                            2294          mend
000015C0                                    2295+$eye0053    ds    0d                                                    02-DCCCA
000015C0 C4C3C3                             2296+         dc cl3'DCC'                                                    02-DCCCA
000015C3 01                                 2297+         dc xl1'01' format one                                          02-DCCCA
000015C4 00000000                           2298+         dc a(0)                                                        02-DCCCA
000015C8 0000000000001632                   2299+         dc ad(@PER_699)                                                02-DCCCA
000015D0 00000000000000B0                   2300+         dc ad(176)                                                     02-DCCCA
000015D8 0000000000000000                   2301+         dc ad(0)                                                       02-DCCCA
000015E0 0000000000001000                   2302+         dc ad(4096)                                                    02-DCCCA
000015E8 20                                 2303+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000015E9 03                                 2304+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000015EA 03                                 2305+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000015EB 08                                 2306+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000015EC 00                                 2307+         dc bl.8'00000000'                                              02-DCCCA
000015ED 000000                             2308+         dc al3(0)                                                      02-DCCCA
000015F0 00000000000015B0                   2309+         dc ad(@LNAME699)                                               02-DCCCA
000015F8                                    2310+         ds 0d                                                          02-DCCCA
000015F8 00000000000015C0                   2311+         dc ad($eye0053)                                                02-DCCCA
00001600 0000000000000000                   2312+         dc ad(0)                                                       02-DCCCA
00001608                                    2313+         ds    0d                                                       01-DCCPR
                                            2314+         entry thrd_detach                                              01-DCCPR
00001608                                    2315+thrd_detach ds 0d                                                       01-DCCPR
00001608                                    2316+@REGION_699_1 ds 0h                                                     01-DCCPR
00001608 EBEC D008 0024          00000008   2317+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000160E E3E0 D088 0004          00000088   2318+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001614 E3C0 D090 0004          00000090   2319+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000161A B904 002E                          2320+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000161E E3B0 C018 0004          00000018   2321+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001624 A7EB 00B0               000000B0   2322+         aghi  14,176              increase by frame size               01-DCCPR
00001628 E3E0 C020 0021          00000020   2323+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000162E 4720 B020               00000020   2324+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001632                                    2325+@PER_699 ds    0h                                                       01-DCCPR
00001632 EBDE 2080 0024          00000080   2326+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001638 E3C0 2090 0024          00000090   2327+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000163E B904 00D2                          2328+         lgr   13,2                set real frame pointer               01-DCCPR
00001642 B904 00CF                          2329+         lgr   12,15               set base reg                         01-DCCPR
                        00001608            2330+         using @REGION_699_1,12                                         01-DCCPR
                                            2331          DCCPRV REG=15     ; Get PRV from DVT
00001646 E3F0 B008 0004          00000008   2332+         LG 15,8(0,11)                                                  01-DCCPR
                                            2333 * ******* End of Prologue
                                            2334 * *
                                            2335 * ***     thrd_is_detached = 1;
0000164C E320 C090 0014          00001698   2336          LGF   2,@lit_699_74
00001652 41F2 F000               00000000   2337          LA    15,0(2,15)
00001656 E54C F200 0001          00000200   2338          MVHI  512(15),1   ; thrd_is_detached
                                            2339 * ***
                                            2340 * ***
                                            2341 * ***
                                            2342 * ***
                                            2343 * ***     return pthread_detach(thr) == 0 ? 0 : 2;
0000165C E3F0 1000 0004          00000000   2344          LG    15,0(0,1)   ; thr
00001662 E3F0 D0A8 0024          000000A8   2345          STG   15,168(0,13)
00001668 4110 D0A8               000000A8   2346          LA    1,168(0,13)
0000166C E3F0 C088 0004          00001690   2347          LG    15,@lit_699_75 ; pthread_detach
00001672                                    2348 @@gen_label76 DS    0H
00001672 05EF                               2349          BALR  14,15
00001674                                    2350 @@gen_label77 DS    0H
00001674 12FF                               2351          LTR   15,15
00001676 4770 C094               0000169C   2352          BNE   @L82
0000167A A7F8 0000               00000000   2353          LHI   15,0        ; 0
0000167E 47F0 C098               000016A0   2354          B     @L83
00001688                                    2355          DS    0D
00001688 000000B0                           2356 @FRAMESIZE_699 DC F'176'
0000168C 00000000
                                                                                                                           Page   51 
  Active Usings: @REGION_699_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001690 0000000000000000                   2357 @lit_699_75 DC AD(pthread_detach)
00001698 00000000                           2358 @lit_699_74 DC Q(@@STATIC)
0000169C                                    2359 @L82     DS    0H
0000169C A7F8 0002               00000002   2360          LHI   15,2        ; 2
000016A0                                    2361 @L83     DS    0H
000016A0 B914 00FF                          2362          LGFR  15,15
                                            2363 * ***
                                            2364 * ***   }
                                            2365 * * **** Start of Epilogue
                                            2366          DCCEPIL
000016A4                                    2367+         ds 0h                                                          01-DCCEP
                                            2368+* Epilog
000016A4 D707 D088 D088 00000088 00000088   2369+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000016AA E3D0 D080 0004          00000080   2370+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000016B0 E3C0 D090 0004          00000090   2371+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000016B6 E3B0 C018 0004          00000018   2372+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000016BC E3C0 B010 0021          00000010   2373+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000016C2 E3E0 D008 0004          00000008   2374+         lg  14,8(0,13)          load up return address                 01-DCCEP
000016C8 EB1C D020 0004          00000020   2375+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000016CE 078E                               2376+         bcr 8,14                if same dsab, just return              01-DCCEP
000016D0 E3F0 D010 0024          00000010   2377+         stg 15,16(0,13)         save return code                       01-DCCEP
000016D6 E300 D018 0024          00000018   2378+         stg 0,24(0,13)          save more return code                  01-DCCEP
000016DC E3F0 D090 0004          00000090   2379+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000016E2 E3F0 F018 0004          00000018   2380+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000016E8 47F0 F040               00000040   2381+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2382+* End of Epilog
                                            2383 * * **** End of Epilogue
                                            2384          DROP  12
                                            2385 *
                                            2386 *   DSECT for automatic variables in "thrd_detach"
                                            2387 *      (FUNCTION #699)
                                            2388 *
00000000                00000000 000000A8   2389 @AUTO#thrd_detach DSECT
00000000                                    2390          DS    XL168
                                            2391 *
000016EC                00000000 00002208   2392 @CODE    CSECT
                                            2393 *
                                            2394 *
                                            2395 *
                                            2396 * ....... start of thrd_equal
                                            2397 thrd_equal ALIAS X'A38899846D8598A48193'
000016EC                                    2398 @LNAME700 DS   0H
000016EC 0000000A                           2399          DC    X'0000000A'
000016F0 A38899846D8598A4                   2400          DC    C'thrd_equal'
000016FA 00                                 2401          DC    X'00'
                                            2402 thrd_equal DCCPRLG CINDEX=700,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME700
                                            2403          macro
                                            2404          dccextrn &m
                                            2405          gblc    &$dccext(1000)
                                            2406          gbla    &$dccexti
                                            2407          lcla    &i
                                                                                                                           Page   52 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2408 &$dccext(&$dccexti+1) setc    '&m'
                                            2409 &i       seta    1
                                            2410 .loop    aif    (&i gt &$dccexti).around
                                            2411          aif    ('&$dccext(&i)' eq '&m').getout
                                            2412 &i       seta    &i+1
                                            2413          ago     .loop
                                            2414 .around  anop
                                            2415 &$dccexti seta &$dccexti+1
                                            2416          extrn  &m
                                            2417 .getout  anop
                                            2418          mend
00001700                                    2419+$eye0057    ds    0d                                                    02-DCCCA
00001700 C4C3C3                             2420+         dc cl3'DCC'                                                    02-DCCCA
00001703 01                                 2421+         dc xl1'01' format one                                          02-DCCCA
00001704 00000000                           2422+         dc a(0)                                                        02-DCCCA
00001708 0000000000001772                   2423+         dc ad(@PER_700)                                                02-DCCCA
00001710 00000000000000B8                   2424+         dc ad(184)                                                     02-DCCCA
00001718 0000000000000000                   2425+         dc ad(0)                                                       02-DCCCA
00001720 0000000000001000                   2426+         dc ad(4096)                                                    02-DCCCA
00001728 20                                 2427+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001729 03                                 2428+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000172A 03                                 2429+         dc al1(3)                                                      02-DCCCA
0000172B 08                                 2430+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000172C 00                                 2431+         dc bl.8'00000000'                                              02-DCCCA
0000172D 000000                             2432+         dc al3(0)                                                      02-DCCCA
00001730 00000000000016EC                   2433+         dc ad(@LNAME700)                                               02-DCCCA
00001738                                    2434+         ds 0d                                                          02-DCCCA
00001738 0000000000001700                   2435+         dc ad($eye0057)                                                02-DCCCA
00001740 0000000000000000                   2436+         dc ad(0)                                                       02-DCCCA
00001748                                    2437+         ds    0d                                                       01-DCCPR
                                            2438+         entry thrd_equal                                               01-DCCPR
00001748                                    2439+thrd_equal ds  0d                                                       01-DCCPR
00001748                                    2440+@REGION_700_1 ds 0h                                                     01-DCCPR
00001748 EBEC D008 0024          00000008   2441+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000174E E3E0 D088 0004          00000088   2442+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001754 E3C0 D090 0004          00000090   2443+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000175A B904 002E                          2444+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000175E E3B0 C018 0004          00000018   2445+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001764 A7EB 00B8               000000B8   2446+         aghi  14,184              increase by frame size               01-DCCPR
00001768 E3E0 C020 0021          00000020   2447+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000176E 4720 B020               00000020   2448+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001772                                    2449+@PER_700 ds    0h                                                       01-DCCPR
00001772 EBDE 2080 0024          00000080   2450+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001778 E3C0 2090 0024          00000090   2451+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000177E B904 00D2                          2452+         lgr   13,2                set real frame pointer               01-DCCPR
00001782 B904 00CF                          2453+         lgr   12,15               set base reg                         01-DCCPR
                        00001748            2454+         using @REGION_700_1,12                                         01-DCCPR
                                            2455 * ******* End of Prologue
                                            2456 * *
                                            2457 * ***
                                            2458 * ***
                                            2459 * ***
                                                                                                                           Page   53 
  Active Usings: @REGION_700_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2460 * ***     return pthread_equal(thr0, thr1);
00001786 E3F0 1000 0004          00000000   2461          LG    15,0(0,1)   ; thr0
0000178C E3F0 D0A8 0024          000000A8   2462          STG   15,168(0,13)
00001792 E3F0 1008 0004          00000008   2463          LG    15,8(0,1)   ; thr1
00001798 E3F0 D0B0 0024          000000B0   2464          STG   15,176(0,13)
0000179E 4110 D0A8               000000A8   2465          LA    1,168(0,13)
000017A2 E3F0 C0B8 0004          00001800   2466          LG    15,@lit_700_79 ; pthread_equal
000017A8                                    2467 @@gen_label79 DS    0H
000017A8 05EF                               2468          BALR  14,15
000017AA                                    2469 @@gen_label80 DS    0H
000017AA B914 00FF                          2470          LGFR  15,15
                                            2471 * ***
                                            2472 * ***   }
                                            2473 * * **** Start of Epilogue
                                            2474          DCCEPIL
000017AE                                    2475+         ds 0h                                                          01-DCCEP
                                            2476+* Epilog
000017AE D707 D088 D088 00000088 00000088   2477+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000017B4 E3D0 D080 0004          00000080   2478+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000017BA E3C0 D090 0004          00000090   2479+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000017C0 E3B0 C018 0004          00000018   2480+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000017C6 E3C0 B010 0021          00000010   2481+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000017CC E3E0 D008 0004          00000008   2482+         lg  14,8(0,13)          load up return address                 01-DCCEP
000017D2 EB1C D020 0004          00000020   2483+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000017D8 078E                               2484+         bcr 8,14                if same dsab, just return              01-DCCEP
000017DA E3F0 D010 0024          00000010   2485+         stg 15,16(0,13)         save return code                       01-DCCEP
000017E0 E300 D018 0024          00000018   2486+         stg 0,24(0,13)          save more return code                  01-DCCEP
000017E6 E3F0 D090 0004          00000090   2487+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000017EC E3F0 F018 0004          00000018   2488+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000017F2 47F0 F040               00000040   2489+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2490+* End of Epilog
                                            2491 * * **** End of Epilogue
000017F8                                    2492          DS    0D
000017F8 000000B8                           2493 @FRAMESIZE_700 DC F'184'
000017FC 00000000
00001800 0000000000000000                   2494 @lit_700_79 DC AD(pthread_equal)
                                            2495          DROP  12
                                            2496 *
                                            2497 *   DSECT for automatic variables in "thrd_equal"
                                            2498 *      (FUNCTION #700)
                                            2499 *
00000000                00000000 000000A8   2500 @AUTO#thrd_equal DSECT
00000000                                    2501          DS    XL168
                                            2502 *
00001808                00000000 00002208   2503 @CODE    CSECT
                                            2504 *
                                            2505 *
                                            2506 *
                                            2507 * ....... start of thrd_exit
                                            2508 thrd_exit ALIAS X'A38899846D85A789A3'
00001808                                    2509 @LNAME701 DS   0H
00001808 00000009                           2510          DC    X'00000009'
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000180C A38899846D85A789                   2511          DC    C'thrd_exit'
00001815 00                                 2512          DC    X'00'
                                            2513 thrd_exit DCCPRLG CINDEX=701,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME701
                                            2514          macro
                                            2515          dccextrn &m
                                            2516          gblc    &$dccext(1000)
                                            2517          gbla    &$dccexti
                                            2518          lcla    &i
                                            2519 &$dccext(&$dccexti+1) setc    '&m'
                                            2520 &i       seta    1
                                            2521 .loop    aif    (&i gt &$dccexti).around
                                            2522          aif    ('&$dccext(&i)' eq '&m').getout
                                            2523 &i       seta    &i+1
                                            2524          ago     .loop
                                            2525 .around  anop
                                            2526 &$dccexti seta &$dccexti+1
                                            2527          extrn  &m
                                            2528 .getout  anop
                                            2529          mend
00001818                                    2530+$eye0060    ds    0d                                                    02-DCCCA
00001818 C4C3C3                             2531+         dc cl3'DCC'                                                    02-DCCCA
0000181B 01                                 2532+         dc xl1'01' format one                                          02-DCCCA
0000181C 00000000                           2533+         dc a(0)                                                        02-DCCCA
00001820 000000000000188A                   2534+         dc ad(@PER_701)                                                02-DCCCA
00001828 00000000000000B0                   2535+         dc ad(176)                                                     02-DCCCA
00001830 0000000000000000                   2536+         dc ad(0)                                                       02-DCCCA
00001838 0000000000001000                   2537+         dc ad(4096)                                                    02-DCCCA
00001840 20                                 2538+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001841 03                                 2539+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001842 03                                 2540+         dc al1(3)                                                      02-DCCCA
00001843 08                                 2541+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001844 00                                 2542+         dc bl.8'00000000'                                              02-DCCCA
00001845 000000                             2543+         dc al3(0)                                                      02-DCCCA
00001848 0000000000001808                   2544+         dc ad(@LNAME701)                                               02-DCCCA
00001850                                    2545+         ds 0d                                                          02-DCCCA
00001850 0000000000001818                   2546+         dc ad($eye0060)                                                02-DCCCA
00001858 0000000000000000                   2547+         dc ad(0)                                                       02-DCCCA
00001860                                    2548+         ds    0d                                                       01-DCCPR
                                            2549+         entry thrd_exit                                                01-DCCPR
00001860                                    2550+thrd_exit ds   0d                                                       01-DCCPR
00001860                                    2551+@REGION_701_1 ds 0h                                                     01-DCCPR
00001860 EBEC D008 0024          00000008   2552+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001866 E3E0 D088 0004          00000088   2553+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000186C E3C0 D090 0004          00000090   2554+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001872 B904 002E                          2555+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001876 E3B0 C018 0004          00000018   2556+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000187C A7EB 00B0               000000B0   2557+         aghi  14,176              increase by frame size               01-DCCPR
00001880 E3E0 C020 0021          00000020   2558+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001886 4720 B020               00000020   2559+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000188A                                    2560+@PER_701 ds    0h                                                       01-DCCPR
0000188A EBDE 2080 0024          00000080   2561+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page   55 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001890 E3C0 2090 0024          00000090   2562+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001896 B904 00D2                          2563+         lgr   13,2                set real frame pointer               01-DCCPR
0000189A B904 00CF                          2564+         lgr   12,15               set base reg                         01-DCCPR
                        00001860            2565+         using @REGION_701_1,12                                         01-DCCPR
                                            2566 * ******* End of Prologue
                                            2567 * *
                                            2568 * ***   # 665 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            2569 * ***     pthread_exit((void*)(intptr_t)res);
0000189E E3F0 1004 0014          00000004   2570          LGF   15,4(0,1)   ; res
000018A4 E3F0 D0A8 0024          000000A8   2571          STG   15,168(0,13)
000018AA 4110 D0A8               000000A8   2572          LA    1,168(0,13)
000018AE E3F0 C0A8 0004          00001908   2573          LG    15,@lit_701_81 ; pthread_exit
000018B4                                    2574 @@gen_label81 DS    0H
000018B4 05EF                               2575          BALR  14,15
000018B6                                    2576 @@gen_label82 DS    0H
                                            2577 * ***
                                            2578 * ***   }
000018B6                                    2579 @ret_lab_701 DS 0H
                                            2580 * * **** Start of Epilogue
                                            2581          DCCEPIL
000018B6                                    2582+         ds 0h                                                          01-DCCEP
                                            2583+* Epilog
000018B6 D707 D088 D088 00000088 00000088   2584+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000018BC E3D0 D080 0004          00000080   2585+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000018C2 E3C0 D090 0004          00000090   2586+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000018C8 E3B0 C018 0004          00000018   2587+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000018CE E3C0 B010 0021          00000010   2588+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000018D4 E3E0 D008 0004          00000008   2589+         lg  14,8(0,13)          load up return address                 01-DCCEP
000018DA EB1C D020 0004          00000020   2590+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000018E0 078E                               2591+         bcr 8,14                if same dsab, just return              01-DCCEP
000018E2 E3F0 D010 0024          00000010   2592+         stg 15,16(0,13)         save return code                       01-DCCEP
000018E8 E300 D018 0024          00000018   2593+         stg 0,24(0,13)          save more return code                  01-DCCEP
000018EE E3F0 D090 0004          00000090   2594+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000018F4 E3F0 F018 0004          00000018   2595+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000018FA 47F0 F040               00000040   2596+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2597+* End of Epilog
                                            2598 * * **** End of Epilogue
00001900                                    2599          DS    0D
00001900 000000B0                           2600 @FRAMESIZE_701 DC F'176'
00001904 00000000
00001908 0000000000000000                   2601 @lit_701_81 DC AD(pthread_exit)
                                            2602          DROP  12
                                            2603 *
                                            2604 *   DSECT for automatic variables in "thrd_exit"
                                            2605 *      (FUNCTION #701)
                                            2606 *
00000000                00000000 000000A8   2607 @AUTO#thrd_exit DSECT
00000000                                    2608          DS    XL168
                                            2609 *
00001910                00000000 00002208   2610 @CODE    CSECT
                                            2611 *
                                            2612 *
                                                                                                                           Page   56 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2613 *
                                            2614 * ....... start of thrd_join
                                            2615 thrd_join ALIAS X'A38899846D91968995'
00001910                                    2616 @LNAME702 DS   0H
00001910 00000009                           2617          DC    X'00000009'
00001914 A38899846D919689                   2618          DC    C'thrd_join'
0000191D 00                                 2619          DC    X'00'
                                            2620 thrd_join DCCPRLG CINDEX=702,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME702
                                            2621          macro
                                            2622          dccextrn &m
                                            2623          gblc    &$dccext(1000)
                                            2624          gbla    &$dccexti
                                            2625          lcla    &i
                                            2626 &$dccext(&$dccexti+1) setc    '&m'
                                            2627 &i       seta    1
                                            2628 .loop    aif    (&i gt &$dccexti).around
                                            2629          aif    ('&$dccext(&i)' eq '&m').getout
                                            2630 &i       seta    &i+1
                                            2631          ago     .loop
                                            2632 .around  anop
                                            2633 &$dccexti seta &$dccexti+1
                                            2634          extrn  &m
                                            2635 .getout  anop
                                            2636          mend
00001920                                    2637+$eye0063    ds    0d                                                    02-DCCCA
00001920 C4C3C3                             2638+         dc cl3'DCC'                                                    02-DCCCA
00001923 01                                 2639+         dc xl1'01' format one                                          02-DCCCA
00001924 00000000                           2640+         dc a(0)                                                        02-DCCCA
00001928 0000000000001992                   2641+         dc ad(@PER_702)                                                02-DCCCA
00001930 00000000000000C0                   2642+         dc ad(192)                                                     02-DCCCA
00001938 0000000000000000                   2643+         dc ad(0)                                                       02-DCCCA
00001940 0000000000001000                   2644+         dc ad(4096)                                                    02-DCCCA
00001948 20                                 2645+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001949 03                                 2646+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000194A 03                                 2647+         dc al1(3)                                                      02-DCCCA
0000194B 08                                 2648+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000194C 00                                 2649+         dc bl.8'00000000'                                              02-DCCCA
0000194D 000000                             2650+         dc al3(0)                                                      02-DCCCA
00001950 0000000000001910                   2651+         dc ad(@LNAME702)                                               02-DCCCA
00001958                                    2652+         ds 0d                                                          02-DCCCA
00001958 0000000000001920                   2653+         dc ad($eye0063)                                                02-DCCCA
00001960 0000000000000000                   2654+         dc ad(0)                                                       02-DCCCA
00001968                                    2655+         ds    0d                                                       01-DCCPR
                                            2656+         entry thrd_join                                                01-DCCPR
00001968                                    2657+thrd_join ds   0d                                                       01-DCCPR
00001968                                    2658+@REGION_702_1 ds 0h                                                     01-DCCPR
00001968 EBEC D008 0024          00000008   2659+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000196E E3E0 D088 0004          00000088   2660+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001974 E3C0 D090 0004          00000090   2661+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000197A B904 002E                          2662+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000197E E3B0 C018 0004          00000018   2663+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   57 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001984 A7EB 00C0               000000C0   2664+         aghi  14,192              increase by frame size               01-DCCPR
00001988 E3E0 C020 0021          00000020   2665+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000198E 4720 B020               00000020   2666+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001992                                    2667+@PER_702 ds    0h                                                       01-DCCPR
00001992 EBDE 2080 0024          00000080   2668+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001998 E3C0 2090 0024          00000090   2669+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000199E B904 00D2                          2670+         lgr   13,2                set real frame pointer               01-DCCPR
000019A2 B904 00CF                          2671+         lgr   12,15               set base reg                         01-DCCPR
                        00001968            2672+         using @REGION_702_1,12                                         01-DCCPR
000019A6 B904 0021                          2673          LGR   2,1         ; ptr to parm area
                                            2674 * ******* End of Prologue
                                            2675 * *
                                            2676 * ***   # 691 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            2677 * ***     void *pres;
                                            2678 * ***     if (pthread_join(thr, &pres) != 0)
000019AA E3F0 2000 0004          00000000   2679          LG    15,0(0,2)   ; thr
000019B0 E3F0 D0B0 0024          000000B0   2680          STG   15,176(0,13)
000019B6 41F0 D0A8               000000A8   2681          LA    15,168(0,13)
000019BA E3F0 D0B8 0024          000000B8   2682          STG   15,184(0,13)
000019C0 4110 D0B0               000000B0   2683          LA    1,176(0,13)
000019C4 E3F0 C080 0004          000019E8   2684          LG    15,@lit_702_83 ; pthread_join
000019CA                                    2685 @@gen_label83 DS    0H
000019CA 05EF                               2686          BALR  14,15
000019CC                                    2687 @@gen_label84 DS    0H
000019CC 12FF                               2688          LTR   15,15
000019CE 4780 C088               000019F0   2689          BE    @L84
                                            2690 * ***     {
                                            2691 * ***       return 2;
000019D2 A7F9 0002               00000002   2692          LGHI  15,2        ; 2
000019D6 47F0 C0A4               00001A0C   2693          B     @ret_lab_702
000019E0                                    2694          DS    0D
000019E0 000000C0                           2695 @FRAMESIZE_702 DC F'192'
000019E4 00000000
000019E8 0000000000000000                   2696 @lit_702_83 DC AD(pthread_join)
                                            2697 * ***     }
000019F0                                    2698 @L84     DS    0H
                                            2699 * ***     if (res != ((void *)0))
000019F0 E3F0 2008 0004          00000008   2700          LG    15,8(0,2)   ; res
000019F6 B902 001F                          2701          LTGR  1,15
000019FA 4780 C0A0               00001A08   2702          BE    @L85
                                            2703 * ***     {
                                            2704 * ***       *res = (int)(intptr_t)pres;
000019FE E310 D0A8 0004          000000A8   2705          LG    1,168(0,13) ; pres
00001A04 5010 F000               00000000   2706          ST    1,0(0,15)   ; res
                                            2707 * ***     }
00001A08                                    2708 @L85     DS    0H
                                            2709 * ***
                                            2710 * ***     return 0;
00001A08 A7F9 0000               00000000   2711          LGHI  15,0        ; 0
                                            2712 * ***   }
00001A0C                                    2713 @ret_lab_702 DS 0H
                                            2714 * * **** Start of Epilogue
                                                                                                                           Page   58 
  Active Usings: @REGION_702_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2715          DCCEPIL
00001A0C                                    2716+         ds 0h                                                          01-DCCEP
                                            2717+* Epilog
00001A0C D707 D088 D088 00000088 00000088   2718+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001A12 E3D0 D080 0004          00000080   2719+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001A18 E3C0 D090 0004          00000090   2720+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001A1E E3B0 C018 0004          00000018   2721+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001A24 E3C0 B010 0021          00000010   2722+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001A2A E3E0 D008 0004          00000008   2723+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001A30 EB1C D020 0004          00000020   2724+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001A36 078E                               2725+         bcr 8,14                if same dsab, just return              01-DCCEP
00001A38 E3F0 D010 0024          00000010   2726+         stg 15,16(0,13)         save return code                       01-DCCEP
00001A3E E300 D018 0024          00000018   2727+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001A44 E3F0 D090 0004          00000090   2728+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001A4A E3F0 F018 0004          00000018   2729+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001A50 47F0 F040               00000040   2730+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2731+* End of Epilog
                                            2732 * * **** End of Epilogue
                                            2733          DROP  12
                                            2734 *
                                            2735 *   DSECT for automatic variables in "thrd_join"
                                            2736 *      (FUNCTION #702)
                                            2737 *
00000000                00000000 000000A8   2738 @AUTO#thrd_join DSECT
00000000                                    2739          DS    XL168
                                            2740 *
00001A54                00000000 00002208   2741 @CODE    CSECT
                                            2742 *
                                            2743 *
                                            2744 *
                                            2745 * ....... start of thrd_sleep
                                            2746 thrd_sleep ALIAS X'A38899846DA293858597'
00001A54                                    2747 @LNAME703 DS   0H
00001A54 0000000A                           2748          DC    X'0000000A'
00001A58 A38899846DA29385                   2749          DC    C'thrd_sleep'
00001A62 00                                 2750          DC    X'00'
                                            2751 thrd_sleep DCCPRLG CINDEX=703,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME703
                                            2752          macro
                                            2753          dccextrn &m
                                            2754          gblc    &$dccext(1000)
                                            2755          gbla    &$dccexti
                                            2756          lcla    &i
                                            2757 &$dccext(&$dccexti+1) setc    '&m'
                                            2758 &i       seta    1
                                            2759 .loop    aif    (&i gt &$dccexti).around
                                            2760          aif    ('&$dccext(&i)' eq '&m').getout
                                            2761 &i       seta    &i+1
                                            2762          ago     .loop
                                            2763 .around  anop
                                            2764 &$dccexti seta &$dccexti+1
                                            2765          extrn  &m
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2766 .getout  anop
                                            2767          mend
00001A68                                    2768+$eye0066    ds    0d                                                    02-DCCCA
00001A68 C4C3C3                             2769+         dc cl3'DCC'                                                    02-DCCCA
00001A6B 01                                 2770+         dc xl1'01' format one                                          02-DCCCA
00001A6C 00000000                           2771+         dc a(0)                                                        02-DCCCA
00001A70 0000000000001ADA                   2772+         dc ad(@PER_703)                                                02-DCCCA
00001A78 00000000000000B8                   2773+         dc ad(184)                                                     02-DCCCA
00001A80 0000000000000000                   2774+         dc ad(0)                                                       02-DCCCA
00001A88 0000000000001000                   2775+         dc ad(4096)                                                    02-DCCCA
00001A90 20                                 2776+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001A91 03                                 2777+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001A92 03                                 2778+         dc al1(3)                                                      02-DCCCA
00001A93 08                                 2779+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001A94 00                                 2780+         dc bl.8'00000000'                                              02-DCCCA
00001A95 000000                             2781+         dc al3(0)                                                      02-DCCCA
00001A98 0000000000001A54                   2782+         dc ad(@LNAME703)                                               02-DCCCA
00001AA0                                    2783+         ds 0d                                                          02-DCCCA
00001AA0 0000000000001A68                   2784+         dc ad($eye0066)                                                02-DCCCA
00001AA8 0000000000000000                   2785+         dc ad(0)                                                       02-DCCCA
00001AB0                                    2786+         ds    0d                                                       01-DCCPR
                                            2787+         entry thrd_sleep                                               01-DCCPR
00001AB0                                    2788+thrd_sleep ds  0d                                                       01-DCCPR
00001AB0                                    2789+@REGION_703_1 ds 0h                                                     01-DCCPR
00001AB0 EBEC D008 0024          00000008   2790+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001AB6 E3E0 D088 0004          00000088   2791+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001ABC E3C0 D090 0004          00000090   2792+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001AC2 B904 002E                          2793+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001AC6 E3B0 C018 0004          00000018   2794+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001ACC A7EB 00B8               000000B8   2795+         aghi  14,184              increase by frame size               01-DCCPR
00001AD0 E3E0 C020 0021          00000020   2796+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001AD6 4720 B020               00000020   2797+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001ADA                                    2798+@PER_703 ds    0h                                                       01-DCCPR
00001ADA EBDE 2080 0024          00000080   2799+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001AE0 E3C0 2090 0024          00000090   2800+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001AE6 B904 00D2                          2801+         lgr   13,2                set real frame pointer               01-DCCPR
00001AEA B904 00CF                          2802+         lgr   12,15               set base reg                         01-DCCPR
                        00001AB0            2803+         using @REGION_703_1,12                                         01-DCCPR
                                            2804 * ******* End of Prologue
                                            2805 * *
                                            2806 * ***
                                            2807 * ***     return nanosleep(duration, remaining);
00001AEE E3F0 1000 0004          00000000   2808          LG    15,0(0,1)   ; duration
00001AF4 E3F0 D0A8 0024          000000A8   2809          STG   15,168(0,13)
00001AFA E3F0 1008 0004          00000008   2810          LG    15,8(0,1)   ; remaining
00001B00 E3F0 D0B0 0024          000000B0   2811          STG   15,176(0,13)
00001B06 4110 D0A8               000000A8   2812          LA    1,168(0,13)
00001B0A E3F0 C0B8 0004          00001B68   2813          LG    15,@lit_703_87 ; nanosleep
00001B10                                    2814 @@gen_label87 DS    0H
00001B10 05EF                               2815          BALR  14,15
00001B12                                    2816 @@gen_label88 DS    0H
00001B12 B914 00FF                          2817          LGFR  15,15
                                                                                                                           Page   60 
  Active Usings: @REGION_703_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2818 * ***   # 736 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            2819 * ***   }
                                            2820 * * **** Start of Epilogue
                                            2821          DCCEPIL
00001B16                                    2822+         ds 0h                                                          01-DCCEP
                                            2823+* Epilog
00001B16 D707 D088 D088 00000088 00000088   2824+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001B1C E3D0 D080 0004          00000080   2825+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001B22 E3C0 D090 0004          00000090   2826+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001B28 E3B0 C018 0004          00000018   2827+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B2E E3C0 B010 0021          00000010   2828+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B34 E3E0 D008 0004          00000008   2829+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B3A EB1C D020 0004          00000020   2830+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B40 078E                               2831+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B42 E3F0 D010 0024          00000010   2832+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B48 E300 D018 0024          00000018   2833+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B4E E3F0 D090 0004          00000090   2834+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001B54 E3F0 F018 0004          00000018   2835+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001B5A 47F0 F040               00000040   2836+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2837+* End of Epilog
                                            2838 * * **** End of Epilogue
00001B60                                    2839          DS    0D
00001B60 000000B8                           2840 @FRAMESIZE_703 DC F'184'
00001B64 00000000
00001B68 0000000000000000                   2841 @lit_703_87 DC AD(nanosleep)
                                            2842          DROP  12
                                            2843 *
                                            2844 *   DSECT for automatic variables in "thrd_sleep"
                                            2845 *      (FUNCTION #703)
                                            2846 *
00000000                00000000 000000A8   2847 @AUTO#thrd_sleep DSECT
00000000                                    2848          DS    XL168
                                            2849 *
00001B70                00000000 00002208   2850 @CODE    CSECT
                                            2851 *
                                            2852 *
                                            2853 *
                                            2854 * ....... start of thrd_yield
                                            2855 thrd_yield ALIAS X'A38899846DA889859384'
00001B70                                    2856 @LNAME704 DS   0H
00001B70 0000000A                           2857          DC    X'0000000A'
00001B74 A38899846DA88985                   2858          DC    C'thrd_yield'
00001B7E 00                                 2859          DC    X'00'
                                            2860 thrd_yield DCCPRLG CINDEX=704,BASER=12,FRAME=168,ENTRY=YES,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME704
                                            2861          macro
                                            2862          dccextrn &m
                                            2863          gblc    &$dccext(1000)
                                            2864          gbla    &$dccexti
                                            2865          lcla    &i
                                            2866 &$dccext(&$dccexti+1) setc    '&m'
                                            2867 &i       seta    1
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2868 .loop    aif    (&i gt &$dccexti).around
                                            2869          aif    ('&$dccext(&i)' eq '&m').getout
                                            2870 &i       seta    &i+1
                                            2871          ago     .loop
                                            2872 .around  anop
                                            2873 &$dccexti seta &$dccexti+1
                                            2874          extrn  &m
                                            2875 .getout  anop
                                            2876          mend
00001B80                                    2877+$eye0069    ds    0d                                                    02-DCCCA
00001B80 C4C3C3                             2878+         dc cl3'DCC'                                                    02-DCCCA
00001B83 01                                 2879+         dc xl1'01' format one                                          02-DCCCA
00001B84 00000000                           2880+         dc a(0)                                                        02-DCCCA
00001B88 0000000000001BF2                   2881+         dc ad(@PER_704)                                                02-DCCCA
00001B90 00000000000000A8                   2882+         dc ad(168)                                                     02-DCCCA
00001B98 0000000000000000                   2883+         dc ad(0)                                                       02-DCCCA
00001BA0 0000000000001000                   2884+         dc ad(4096)                                                    02-DCCCA
00001BA8 20                                 2885+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001BA9 03                                 2886+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001BAA 03                                 2887+         dc al1(3)                                                      02-DCCCA
00001BAB 08                                 2888+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001BAC 00                                 2889+         dc bl.8'00000000'                                              02-DCCCA
00001BAD 000000                             2890+         dc al3(0)                                                      02-DCCCA
00001BB0 0000000000001B70                   2891+         dc ad(@LNAME704)                                               02-DCCCA
00001BB8                                    2892+         ds 0d                                                          02-DCCCA
00001BB8 0000000000001B80                   2893+         dc ad($eye0069)                                                02-DCCCA
00001BC0 0000000000000000                   2894+         dc ad(0)                                                       02-DCCCA
00001BC8                                    2895+         ds    0d                                                       01-DCCPR
                                            2896+         entry thrd_yield                                               01-DCCPR
00001BC8                                    2897+thrd_yield ds  0d                                                       01-DCCPR
00001BC8                                    2898+@REGION_704_1 ds 0h                                                     01-DCCPR
00001BC8 EBEC D008 0024          00000008   2899+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001BCE E3E0 D088 0004          00000088   2900+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001BD4 E3C0 D090 0004          00000090   2901+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001BDA B904 002E                          2902+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001BDE E3B0 C018 0004          00000018   2903+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001BE4 A7EB 00A8               000000A8   2904+         aghi  14,168              increase by frame size               01-DCCPR
00001BE8 E3E0 C020 0021          00000020   2905+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001BEE 4720 B020               00000020   2906+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001BF2                                    2907+@PER_704 ds    0h                                                       01-DCCPR
00001BF2 EBDE 2080 0024          00000080   2908+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001BF8 E3C0 2090 0024          00000090   2909+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001BFE B904 00D2                          2910+         lgr   13,2                set real frame pointer               01-DCCPR
00001C02 B904 00CF                          2911+         lgr   12,15               set base reg                         01-DCCPR
                        00001BC8            2912+         using @REGION_704_1,12                                         01-DCCPR
                                            2913 * ******* End of Prologue
                                            2914 * *
                                            2915 * ***
                                            2916 * ***
                                            2917 * ***
                                            2918 * ***     sched_yield();
00001C06 E3F0 C098 0004          00001C60   2919          LG    15,@lit_704_89 ; sched_yield
                                                                                                                           Page   62 
  Active Usings: @REGION_704_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001C0C                                    2920 @@gen_label89 DS    0H
00001C0C 05EF                               2921          BALR  14,15
00001C0E                                    2922 @@gen_label90 DS    0H
                                            2923 * ***
                                            2924 * ***   }
00001C0E                                    2925 @ret_lab_704 DS 0H
                                            2926 * * **** Start of Epilogue
                                            2927          DCCEPIL
00001C0E                                    2928+         ds 0h                                                          01-DCCEP
                                            2929+* Epilog
00001C0E D707 D088 D088 00000088 00000088   2930+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001C14 E3D0 D080 0004          00000080   2931+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001C1A E3C0 D090 0004          00000090   2932+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001C20 E3B0 C018 0004          00000018   2933+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C26 E3C0 B010 0021          00000010   2934+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C2C E3E0 D008 0004          00000008   2935+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C32 EB1C D020 0004          00000020   2936+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001C38 078E                               2937+         bcr 8,14                if same dsab, just return              01-DCCEP
00001C3A E3F0 D010 0024          00000010   2938+         stg 15,16(0,13)         save return code                       01-DCCEP
00001C40 E300 D018 0024          00000018   2939+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001C46 E3F0 D090 0004          00000090   2940+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001C4C E3F0 F018 0004          00000018   2941+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001C52 47F0 F040               00000040   2942+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2943+* End of Epilog
                                            2944 * * **** End of Epilogue
00001C58                                    2945          DS    0D
00001C58 000000A8                           2946 @FRAMESIZE_704 DC F'168'
00001C5C 00000000
00001C60 0000000000000000                   2947 @lit_704_89 DC AD(sched_yield)
                                            2948          DROP  12
                                            2949 *
                                            2950 *   DSECT for automatic variables in "thrd_yield"
                                            2951 *      (FUNCTION #704)
                                            2952 *
00000000                00000000 000000A8   2953 @AUTO#thrd_yield DSECT
00000000                                    2954          DS    XL168
                                            2955 *
00001C68                00000000 00002208   2956 @CODE    CSECT
                                            2957 *
                                            2958 *
                                            2959 *
                                            2960 * ....... start of tss_create
                                            2961 tss_create ALIAS X'A3A2A26D83998581A385'
00001C68                                    2962 @LNAME705 DS   0H
00001C68 0000000A                           2963          DC    X'0000000A'
00001C6C A3A2A26D83998581                   2964          DC    C'tss_create'
00001C76 00                                 2965          DC    X'00'
                                            2966 tss_create DCCPRLG CINDEX=705,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME705
                                            2967          macro
                                            2968          dccextrn &m
                                            2969          gblc    &$dccext(1000)
                                                                                                                           Page   63 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2970          gbla    &$dccexti
                                            2971          lcla    &i
                                            2972 &$dccext(&$dccexti+1) setc    '&m'
                                            2973 &i       seta    1
                                            2974 .loop    aif    (&i gt &$dccexti).around
                                            2975          aif    ('&$dccext(&i)' eq '&m').getout
                                            2976 &i       seta    &i+1
                                            2977          ago     .loop
                                            2978 .around  anop
                                            2979 &$dccexti seta &$dccexti+1
                                            2980          extrn  &m
                                            2981 .getout  anop
                                            2982          mend
00001C78                                    2983+$eye0072    ds    0d                                                    02-DCCCA
00001C78 C4C3C3                             2984+         dc cl3'DCC'                                                    02-DCCCA
00001C7B 01                                 2985+         dc xl1'01' format one                                          02-DCCCA
00001C7C 00000000                           2986+         dc a(0)                                                        02-DCCCA
00001C80 0000000000001CEA                   2987+         dc ad(@PER_705)                                                02-DCCCA
00001C88 00000000000000B8                   2988+         dc ad(184)                                                     02-DCCCA
00001C90 0000000000000000                   2989+         dc ad(0)                                                       02-DCCCA
00001C98 0000000000001000                   2990+         dc ad(4096)                                                    02-DCCCA
00001CA0 20                                 2991+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001CA1 03                                 2992+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001CA2 03                                 2993+         dc al1(3)                                                      02-DCCCA
00001CA3 08                                 2994+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001CA4 00                                 2995+         dc bl.8'00000000'                                              02-DCCCA
00001CA5 000000                             2996+         dc al3(0)                                                      02-DCCCA
00001CA8 0000000000001C68                   2997+         dc ad(@LNAME705)                                               02-DCCCA
00001CB0                                    2998+         ds 0d                                                          02-DCCCA
00001CB0 0000000000001C78                   2999+         dc ad($eye0072)                                                02-DCCCA
00001CB8 0000000000000000                   3000+         dc ad(0)                                                       02-DCCCA
00001CC0                                    3001+         ds    0d                                                       01-DCCPR
                                            3002+         entry tss_create                                               01-DCCPR
00001CC0                                    3003+tss_create ds  0d                                                       01-DCCPR
00001CC0                                    3004+@REGION_705_1 ds 0h                                                     01-DCCPR
00001CC0 EBEC D008 0024          00000008   3005+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001CC6 E3E0 D088 0004          00000088   3006+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001CCC E3C0 D090 0004          00000090   3007+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001CD2 B904 002E                          3008+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001CD6 E3B0 C018 0004          00000018   3009+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001CDC A7EB 00B8               000000B8   3010+         aghi  14,184              increase by frame size               01-DCCPR
00001CE0 E3E0 C020 0021          00000020   3011+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001CE6 4720 B020               00000020   3012+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001CEA                                    3013+@PER_705 ds    0h                                                       01-DCCPR
00001CEA EBDE 2080 0024          00000080   3014+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001CF0 E3C0 2090 0024          00000090   3015+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001CF6 B904 00D2                          3016+         lgr   13,2                set real frame pointer               01-DCCPR
00001CFA B904 00CF                          3017+         lgr   12,15               set base reg                         01-DCCPR
                        00001CC0            3018+         using @REGION_705_1,12                                         01-DCCPR
                                            3019 * ******* End of Prologue
                                            3020 * *
                                            3021 * ***   # 757 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                                                                                                           Page   64 
  Active Usings: @REGION_705_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3022 * ***     if (pthread_key_create(key, dtor) != 0)
00001CFE E3F0 1000 0004          00000000   3023          LG    15,0(0,1)   ; key
00001D04 E3F0 D0A8 0024          000000A8   3024          STG   15,168(0,13)
00001D0A E3F0 1008 0004          00000008   3025          LG    15,8(0,1)   ; dtor
00001D10 E3F0 D0B0 0024          000000B0   3026          STG   15,176(0,13)
00001D16 4110 D0A8               000000A8   3027          LA    1,168(0,13)
00001D1A E3F0 C078 0004          00001D38   3028          LG    15,@lit_705_91 ; pthread_key_create
00001D20                                    3029 @@gen_label91 DS    0H
00001D20 05EF                               3030          BALR  14,15
00001D22                                    3031 @@gen_label92 DS    0H
00001D22 12FF                               3032          LTR   15,15
00001D24 4780 C080               00001D40   3033          BE    @L86
                                            3034 * ***     {
                                            3035 * ***       return 2;
00001D28 A7F9 0002               00000002   3036          LGHI  15,2        ; 2
00001D2C 47F0 C084               00001D44   3037          B     @ret_lab_705
00001D30                                    3038          DS    0D
00001D30 000000B8                           3039 @FRAMESIZE_705 DC F'184'
00001D34 00000000
00001D38 0000000000000000                   3040 @lit_705_91 DC AD(pthread_key_create)
                                            3041 * ***     }
00001D40                                    3042 @L86     DS    0H
                                            3043 * ***
                                            3044 * ***     return 0;
00001D40 A7F9 0000               00000000   3045          LGHI  15,0        ; 0
                                            3046 * ***   }
00001D44                                    3047 @ret_lab_705 DS 0H
                                            3048 * * **** Start of Epilogue
                                            3049          DCCEPIL
00001D44                                    3050+         ds 0h                                                          01-DCCEP
                                            3051+* Epilog
00001D44 D707 D088 D088 00000088 00000088   3052+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001D4A E3D0 D080 0004          00000080   3053+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001D50 E3C0 D090 0004          00000090   3054+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001D56 E3B0 C018 0004          00000018   3055+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001D5C E3C0 B010 0021          00000010   3056+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001D62 E3E0 D008 0004          00000008   3057+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001D68 EB1C D020 0004          00000020   3058+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001D6E 078E                               3059+         bcr 8,14                if same dsab, just return              01-DCCEP
00001D70 E3F0 D010 0024          00000010   3060+         stg 15,16(0,13)         save return code                       01-DCCEP
00001D76 E300 D018 0024          00000018   3061+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001D7C E3F0 D090 0004          00000090   3062+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001D82 E3F0 F018 0004          00000018   3063+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001D88 47F0 F040               00000040   3064+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3065+* End of Epilog
                                            3066 * * **** End of Epilogue
                                            3067          DROP  12
                                            3068 *
                                            3069 *   DSECT for automatic variables in "tss_create"
                                            3070 *      (FUNCTION #705)
                                            3071 *
00000000                00000000 000000A8   3072 @AUTO#tss_create DSECT
                                                                                                                           Page   65 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                                    3073          DS    XL168
                                            3074 *
00001D8C                00000000 00002208   3075 @CODE    CSECT
                                            3076 *
                                            3077 *
                                            3078 *
                                            3079 * ....... start of tss_delete
                                            3080 tss_delete ALIAS X'A3A2A26D84859385A385'
00001D8C                                    3081 @LNAME706 DS   0H
00001D8C 0000000A                           3082          DC    X'0000000A'
00001D90 A3A2A26D84859385                   3083          DC    C'tss_delete'
00001D9A 00                                 3084          DC    X'00'
                                            3085 tss_delete DCCPRLG CINDEX=706,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME706
                                            3086          macro
                                            3087          dccextrn &m
                                            3088          gblc    &$dccext(1000)
                                            3089          gbla    &$dccexti
                                            3090          lcla    &i
                                            3091 &$dccext(&$dccexti+1) setc    '&m'
                                            3092 &i       seta    1
                                            3093 .loop    aif    (&i gt &$dccexti).around
                                            3094          aif    ('&$dccext(&i)' eq '&m').getout
                                            3095 &i       seta    &i+1
                                            3096          ago     .loop
                                            3097 .around  anop
                                            3098 &$dccexti seta &$dccexti+1
                                            3099          extrn  &m
                                            3100 .getout  anop
                                            3101          mend
00001DA0                                    3102+$eye0075    ds    0d                                                    02-DCCCA
00001DA0 C4C3C3                             3103+         dc cl3'DCC'                                                    02-DCCCA
00001DA3 01                                 3104+         dc xl1'01' format one                                          02-DCCCA
00001DA4 00000000                           3105+         dc a(0)                                                        02-DCCCA
00001DA8 0000000000001E12                   3106+         dc ad(@PER_706)                                                02-DCCCA
00001DB0 00000000000000B0                   3107+         dc ad(176)                                                     02-DCCCA
00001DB8 0000000000000000                   3108+         dc ad(0)                                                       02-DCCCA
00001DC0 0000000000001000                   3109+         dc ad(4096)                                                    02-DCCCA
00001DC8 20                                 3110+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001DC9 03                                 3111+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001DCA 03                                 3112+         dc al1(3)                                                      02-DCCCA
00001DCB 08                                 3113+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001DCC 00                                 3114+         dc bl.8'00000000'                                              02-DCCCA
00001DCD 000000                             3115+         dc al3(0)                                                      02-DCCCA
00001DD0 0000000000001D8C                   3116+         dc ad(@LNAME706)                                               02-DCCCA
00001DD8                                    3117+         ds 0d                                                          02-DCCCA
00001DD8 0000000000001DA0                   3118+         dc ad($eye0075)                                                02-DCCCA
00001DE0 0000000000000000                   3119+         dc ad(0)                                                       02-DCCCA
00001DE8                                    3120+         ds    0d                                                       01-DCCPR
                                            3121+         entry tss_delete                                               01-DCCPR
00001DE8                                    3122+tss_delete ds  0d                                                       01-DCCPR
00001DE8                                    3123+@REGION_706_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001DE8 EBEC D008 0024          00000008   3124+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001DEE E3E0 D088 0004          00000088   3125+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001DF4 E3C0 D090 0004          00000090   3126+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001DFA B904 002E                          3127+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001DFE E3B0 C018 0004          00000018   3128+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001E04 A7EB 00B0               000000B0   3129+         aghi  14,176              increase by frame size               01-DCCPR
00001E08 E3E0 C020 0021          00000020   3130+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001E0E 4720 B020               00000020   3131+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001E12                                    3132+@PER_706 ds    0h                                                       01-DCCPR
00001E12 EBDE 2080 0024          00000080   3133+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001E18 E3C0 2090 0024          00000090   3134+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001E1E B904 00D2                          3135+         lgr   13,2                set real frame pointer               01-DCCPR
00001E22 B904 00CF                          3136+         lgr   12,15               set base reg                         01-DCCPR
                        00001DE8            3137+         using @REGION_706_1,12                                         01-DCCPR
                                            3138 * ******* End of Prologue
                                            3139 * *
                                            3140 * ***   # 798 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            3141 * ***     pthread_key_delete(key);
00001E26 E3F0 1004 0016          00000004   3142          LLGF  15,4(0,1)   ; key
00001E2C E3F0 D0A8 0024          000000A8   3143          STG   15,168(0,13)
00001E32 4110 D0A8               000000A8   3144          LA    1,168(0,13)
00001E36 E3F0 C0A8 0004          00001E90   3145          LG    15,@lit_706_95 ; pthread_key_delete
00001E3C                                    3146 @@gen_label94 DS    0H
00001E3C 05EF                               3147          BALR  14,15
00001E3E                                    3148 @@gen_label95 DS    0H
                                            3149 * ***
                                            3150 * ***   }
00001E3E                                    3151 @ret_lab_706 DS 0H
                                            3152 * * **** Start of Epilogue
                                            3153          DCCEPIL
00001E3E                                    3154+         ds 0h                                                          01-DCCEP
                                            3155+* Epilog
00001E3E D707 D088 D088 00000088 00000088   3156+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001E44 E3D0 D080 0004          00000080   3157+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001E4A E3C0 D090 0004          00000090   3158+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001E50 E3B0 C018 0004          00000018   3159+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001E56 E3C0 B010 0021          00000010   3160+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001E5C E3E0 D008 0004          00000008   3161+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001E62 EB1C D020 0004          00000020   3162+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001E68 078E                               3163+         bcr 8,14                if same dsab, just return              01-DCCEP
00001E6A E3F0 D010 0024          00000010   3164+         stg 15,16(0,13)         save return code                       01-DCCEP
00001E70 E300 D018 0024          00000018   3165+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001E76 E3F0 D090 0004          00000090   3166+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001E7C E3F0 F018 0004          00000018   3167+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E82 47F0 F040               00000040   3168+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3169+* End of Epilog
                                            3170 * * **** End of Epilogue
00001E88                                    3171          DS    0D
00001E88 000000B0                           3172 @FRAMESIZE_706 DC F'176'
00001E8C 00000000
00001E90 0000000000000000                   3173 @lit_706_95 DC AD(pthread_key_delete)
                                            3174          DROP  12
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3175 *
                                            3176 *   DSECT for automatic variables in "tss_delete"
                                            3177 *      (FUNCTION #706)
                                            3178 *
00000000                00000000 000000A8   3179 @AUTO#tss_delete DSECT
00000000                                    3180          DS    XL168
                                            3181 *
00001E98                00000000 00002208   3182 @CODE    CSECT
                                            3183 *
                                            3184 *
                                            3185 *
                                            3186 * ....... start of tss_get
                                            3187 tss_get  ALIAS X'A3A2A26D8785A3'
00001E98                                    3188 @LNAME707 DS   0H
00001E98 00000007                           3189          DC    X'00000007'
00001E9C A3A2A26D8785A3                     3190          DC    C'tss_get'
00001EA3 00                                 3191          DC    X'00'
                                            3192 tss_get  DCCPRLG CINDEX=707,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME707
                                            3193          macro
                                            3194          dccextrn &m
                                            3195          gblc    &$dccext(1000)
                                            3196          gbla    &$dccexti
                                            3197          lcla    &i
                                            3198 &$dccext(&$dccexti+1) setc    '&m'
                                            3199 &i       seta    1
                                            3200 .loop    aif    (&i gt &$dccexti).around
                                            3201          aif    ('&$dccext(&i)' eq '&m').getout
                                            3202 &i       seta    &i+1
                                            3203          ago     .loop
                                            3204 .around  anop
                                            3205 &$dccexti seta &$dccexti+1
                                            3206          extrn  &m
                                            3207 .getout  anop
                                            3208          mend
00001EA8                                    3209+$eye0078    ds    0d                                                    02-DCCCA
00001EA8 C4C3C3                             3210+         dc cl3'DCC'                                                    02-DCCCA
00001EAB 01                                 3211+         dc xl1'01' format one                                          02-DCCCA
00001EAC 00000000                           3212+         dc a(0)                                                        02-DCCCA
00001EB0 0000000000001F1A                   3213+         dc ad(@PER_707)                                                02-DCCCA
00001EB8 00000000000000B0                   3214+         dc ad(176)                                                     02-DCCCA
00001EC0 0000000000000000                   3215+         dc ad(0)                                                       02-DCCCA
00001EC8 0000000000001000                   3216+         dc ad(4096)                                                    02-DCCCA
00001ED0 20                                 3217+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001ED1 03                                 3218+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001ED2 03                                 3219+         dc al1(3)                                                      02-DCCCA
00001ED3 08                                 3220+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001ED4 00                                 3221+         dc bl.8'00000000'                                              02-DCCCA
00001ED5 000000                             3222+         dc al3(0)                                                      02-DCCCA
00001ED8 0000000000001E98                   3223+         dc ad(@LNAME707)                                               02-DCCCA
00001EE0                                    3224+         ds 0d                                                          02-DCCCA
00001EE0 0000000000001EA8                   3225+         dc ad($eye0078)                                                02-DCCCA
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001EE8 0000000000000000                   3226+         dc ad(0)                                                       02-DCCCA
00001EF0                                    3227+         ds    0d                                                       01-DCCPR
                                            3228+         entry tss_get                                                  01-DCCPR
00001EF0                                    3229+tss_get  ds    0d                                                       01-DCCPR
00001EF0                                    3230+@REGION_707_1 ds 0h                                                     01-DCCPR
00001EF0 EBEC D008 0024          00000008   3231+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001EF6 E3E0 D088 0004          00000088   3232+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001EFC E3C0 D090 0004          00000090   3233+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001F02 B904 002E                          3234+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001F06 E3B0 C018 0004          00000018   3235+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001F0C A7EB 00B0               000000B0   3236+         aghi  14,176              increase by frame size               01-DCCPR
00001F10 E3E0 C020 0021          00000020   3237+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001F16 4720 B020               00000020   3238+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001F1A                                    3239+@PER_707 ds    0h                                                       01-DCCPR
00001F1A EBDE 2080 0024          00000080   3240+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001F20 E3C0 2090 0024          00000090   3241+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001F26 B904 00D2                          3242+         lgr   13,2                set real frame pointer               01-DCCPR
00001F2A B904 00CF                          3243+         lgr   12,15               set base reg                         01-DCCPR
                        00001EF0            3244+         using @REGION_707_1,12                                         01-DCCPR
                                            3245 * ******* End of Prologue
                                            3246 * *
                                            3247 * ***   # 812 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            3248 * ***     return pthread_getspecific(key);
00001F2E E3F0 1004 0016          00000004   3249          LLGF  15,4(0,1)   ; key
00001F34 E3F0 D0A8 0024          000000A8   3250          STG   15,168(0,13)
00001F3A 4110 D0A8               000000A8   3251          LA    1,168(0,13)
00001F3E E3F0 C0A8 0004          00001F98   3252          LG    15,@lit_707_97 ; pthread_getspecific
00001F44                                    3253 @@gen_label96 DS    0H
00001F44 05EF                               3254          BALR  14,15
00001F46                                    3255 @@gen_label97 DS    0H
                                            3256 * ***
                                            3257 * ***   }
                                            3258 * * **** Start of Epilogue
                                            3259          DCCEPIL
00001F46                                    3260+         ds 0h                                                          01-DCCEP
                                            3261+* Epilog
00001F46 D707 D088 D088 00000088 00000088   3262+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001F4C E3D0 D080 0004          00000080   3263+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001F52 E3C0 D090 0004          00000090   3264+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001F58 E3B0 C018 0004          00000018   3265+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001F5E E3C0 B010 0021          00000010   3266+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001F64 E3E0 D008 0004          00000008   3267+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001F6A EB1C D020 0004          00000020   3268+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001F70 078E                               3269+         bcr 8,14                if same dsab, just return              01-DCCEP
00001F72 E3F0 D010 0024          00000010   3270+         stg 15,16(0,13)         save return code                       01-DCCEP
00001F78 E300 D018 0024          00000018   3271+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001F7E E3F0 D090 0004          00000090   3272+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001F84 E3F0 F018 0004          00000018   3273+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001F8A 47F0 F040               00000040   3274+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3275+* End of Epilog
                                            3276 * * **** End of Epilogue
00001F90                                    3277          DS    0D
                                                                                                                           Page   69 
  Active Usings: @REGION_707_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001F90 000000B0                           3278 @FRAMESIZE_707 DC F'176'
00001F94 00000000
00001F98 0000000000000000                   3279 @lit_707_97 DC AD(pthread_getspecific)
                                            3280          DROP  12
                                            3281 *
                                            3282 *   DSECT for automatic variables in "tss_get"
                                            3283 *      (FUNCTION #707)
                                            3284 *
00000000                00000000 000000A8   3285 @AUTO#tss_get DSECT
00000000                                    3286          DS    XL168
                                            3287 *
00001FA0                00000000 00002208   3288 @CODE    CSECT
                                            3289 *
                                            3290 *
                                            3291 *
                                            3292 * ....... start of tss_set
                                            3293 tss_set  ALIAS X'A3A2A26DA285A3'
00001FA0                                    3294 @LNAME708 DS   0H
00001FA0 00000007                           3295          DC    X'00000007'
00001FA4 A3A2A26DA285A3                     3296          DC    C'tss_set'
00001FAB 00                                 3297          DC    X'00'
                                            3298 tss_set  DCCPRLG CINDEX=708,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME708
                                            3299          macro
                                            3300          dccextrn &m
                                            3301          gblc    &$dccext(1000)
                                            3302          gbla    &$dccexti
                                            3303          lcla    &i
                                            3304 &$dccext(&$dccexti+1) setc    '&m'
                                            3305 &i       seta    1
                                            3306 .loop    aif    (&i gt &$dccexti).around
                                            3307          aif    ('&$dccext(&i)' eq '&m').getout
                                            3308 &i       seta    &i+1
                                            3309          ago     .loop
                                            3310 .around  anop
                                            3311 &$dccexti seta &$dccexti+1
                                            3312          extrn  &m
                                            3313 .getout  anop
                                            3314          mend
00001FB0                                    3315+$eye0081    ds    0d                                                    02-DCCCA
00001FB0 C4C3C3                             3316+         dc cl3'DCC'                                                    02-DCCCA
00001FB3 01                                 3317+         dc xl1'01' format one                                          02-DCCCA
00001FB4 00000000                           3318+         dc a(0)                                                        02-DCCCA
00001FB8 0000000000002022                   3319+         dc ad(@PER_708)                                                02-DCCCA
00001FC0 00000000000000B8                   3320+         dc ad(184)                                                     02-DCCCA
00001FC8 0000000000000000                   3321+         dc ad(0)                                                       02-DCCCA
00001FD0 0000000000001000                   3322+         dc ad(4096)                                                    02-DCCCA
00001FD8 20                                 3323+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001FD9 03                                 3324+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001FDA 03                                 3325+         dc al1(3)                                                      02-DCCCA
00001FDB 08                                 3326+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001FDC 00                                 3327+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001FDD 000000                             3328+         dc al3(0)                                                      02-DCCCA
00001FE0 0000000000001FA0                   3329+         dc ad(@LNAME708)                                               02-DCCCA
00001FE8                                    3330+         ds 0d                                                          02-DCCCA
00001FE8 0000000000001FB0                   3331+         dc ad($eye0081)                                                02-DCCCA
00001FF0 0000000000000000                   3332+         dc ad(0)                                                       02-DCCCA
00001FF8                                    3333+         ds    0d                                                       01-DCCPR
                                            3334+         entry tss_set                                                  01-DCCPR
00001FF8                                    3335+tss_set  ds    0d                                                       01-DCCPR
00001FF8                                    3336+@REGION_708_1 ds 0h                                                     01-DCCPR
00001FF8 EBEC D008 0024          00000008   3337+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001FFE E3E0 D088 0004          00000088   3338+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002004 E3C0 D090 0004          00000090   3339+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000200A B904 002E                          3340+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000200E E3B0 C018 0004          00000018   3341+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002014 A7EB 00B8               000000B8   3342+         aghi  14,184              increase by frame size               01-DCCPR
00002018 E3E0 C020 0021          00000020   3343+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000201E 4720 B020               00000020   3344+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002022                                    3345+@PER_708 ds    0h                                                       01-DCCPR
00002022 EBDE 2080 0024          00000080   3346+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002028 E3C0 2090 0024          00000090   3347+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000202E B904 00D2                          3348+         lgr   13,2                set real frame pointer               01-DCCPR
00002032 B904 00CF                          3349+         lgr   12,15               set base reg                         01-DCCPR
                        00001FF8            3350+         using @REGION_708_1,12                                         01-DCCPR
                                            3351 * ******* End of Prologue
                                            3352 * *
                                            3353 * ***   # 854 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            3354 * ***     if (pthread_setspecific(key, val) != 0)
00002036 E3F0 1004 0016          00000004   3355          LLGF  15,4(0,1)   ; key
0000203C E3F0 D0A8 0024          000000A8   3356          STG   15,168(0,13)
00002042 E3F0 1008 0004          00000008   3357          LG    15,8(0,1)   ; val
00002048 E3F0 D0B0 0024          000000B0   3358          STG   15,176(0,13)
0000204E 4110 D0A8               000000A8   3359          LA    1,168(0,13)
00002052 E3F0 C078 0004          00002070   3360          LG    15,@lit_708_99 ; pthread_setspecific
00002058                                    3361 @@gen_label98 DS    0H
00002058 05EF                               3362          BALR  14,15
0000205A                                    3363 @@gen_label99 DS    0H
0000205A 12FF                               3364          LTR   15,15
0000205C 4780 C080               00002078   3365          BE    @L87
                                            3366 * ***     {
                                            3367 * ***       return 2;
00002060 A7F9 0002               00000002   3368          LGHI  15,2        ; 2
00002064 47F0 C084               0000207C   3369          B     @ret_lab_708
00002068                                    3370          DS    0D
00002068 000000B8                           3371 @FRAMESIZE_708 DC F'184'
0000206C 00000000
00002070 0000000000000000                   3372 @lit_708_99 DC AD(pthread_setspecific)
                                            3373 * ***     }
00002078                                    3374 @L87     DS    0H
                                            3375 * ***
                                            3376 * ***     return 0;
00002078 A7F9 0000               00000000   3377          LGHI  15,0        ; 0
                                            3378 * ***   }
                                                                                                                           Page   71 
  Active Usings: @REGION_708_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000207C                                    3379 @ret_lab_708 DS 0H
                                            3380 * * **** Start of Epilogue
                                            3381          DCCEPIL
0000207C                                    3382+         ds 0h                                                          01-DCCEP
                                            3383+* Epilog
0000207C D707 D088 D088 00000088 00000088   3384+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002082 E3D0 D080 0004          00000080   3385+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002088 E3C0 D090 0004          00000090   3386+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000208E E3B0 C018 0004          00000018   3387+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002094 E3C0 B010 0021          00000010   3388+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000209A E3E0 D008 0004          00000008   3389+         lg  14,8(0,13)          load up return address                 01-DCCEP
000020A0 EB1C D020 0004          00000020   3390+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000020A6 078E                               3391+         bcr 8,14                if same dsab, just return              01-DCCEP
000020A8 E3F0 D010 0024          00000010   3392+         stg 15,16(0,13)         save return code                       01-DCCEP
000020AE E300 D018 0024          00000018   3393+         stg 0,24(0,13)          save more return code                  01-DCCEP
000020B4 E3F0 D090 0004          00000090   3394+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000020BA E3F0 F018 0004          00000018   3395+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000020C0 47F0 F040               00000040   3396+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3397+* End of Epilog
                                            3398 * * **** End of Epilogue
                                            3399          DROP  12
                                            3400 *
                                            3401 *   DSECT for automatic variables in "tss_set"
                                            3402 *      (FUNCTION #708)
                                            3403 *
00000000                00000000 000000A8   3404 @AUTO#tss_set DSECT
00000000                                    3405          DS    XL168
                                            3406 *
000020C4                00000000 00002208   3407 @CODE    CSECT
                                            3408 *
                                            3409 *
                                            3410 *
                                            3411 * ....... start of _tthread_timespec_get
                                            3412 _tthread_timespec_get ALIAS X'6DA3A388998581846DA3899485A29785836D8785A*
                                                                3'
000020C4                                    3413 @LNAME684 DS   0H
000020C4 00000015                           3414          DC    X'00000015'
000020C8 6DA3A38899858184                   3415          DC    C'_tthread_timespec_get'
000020DD 00                                 3416          DC    X'00'
                                            3417 _tthread_timespec_get DCCPRLG CINDEX=684,BASER=12,FRAME=184,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME684
                                            3418          macro
                                            3419          dccextrn &m
                                            3420          gblc    &$dccext(1000)
                                            3421          gbla    &$dccexti
                                            3422          lcla    &i
                                            3423 &$dccext(&$dccexti+1) setc    '&m'
                                            3424 &i       seta    1
                                            3425 .loop    aif    (&i gt &$dccexti).around
                                            3426          aif    ('&$dccext(&i)' eq '&m').getout
                                            3427 &i       seta    &i+1
                                            3428          ago     .loop
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3429 .around  anop
                                            3430 &$dccexti seta &$dccexti+1
                                            3431          extrn  &m
                                            3432 .getout  anop
                                            3433          mend
000020E0                                    3434+$eye0084    ds    0d                                                    02-DCCCA
000020E0 C4C3C3                             3435+         dc cl3'DCC'                                                    02-DCCCA
000020E3 01                                 3436+         dc xl1'01' format one                                          02-DCCCA
000020E4 00000000                           3437+         dc a(0)                                                        02-DCCCA
000020E8 0000000000002152                   3438+         dc ad(@PER_684)                                                02-DCCCA
000020F0 00000000000000B8                   3439+         dc ad(184)                                                     02-DCCCA
000020F8 0000000000000000                   3440+         dc ad(0)                                                       02-DCCCA
00002100 0000000000001000                   3441+         dc ad(4096)                                                    02-DCCCA
00002108 20                                 3442+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002109 03                                 3443+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000210A 03                                 3444+         dc al1(3)                                                      02-DCCCA
0000210B 08                                 3445+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000210C 00                                 3446+         dc bl.8'00000000'                                              02-DCCCA
0000210D 000000                             3447+         dc al3(0)                                                      02-DCCCA
00002110 00000000000020C4                   3448+         dc ad(@LNAME684)                                               02-DCCCA
00002118                                    3449+         ds 0d                                                          02-DCCCA
00002118 00000000000020E0                   3450+         dc ad($eye0084)                                                02-DCCCA
00002120 0000000000000000                   3451+         dc ad(0)                                                       02-DCCCA
00002128                                    3452+         ds    0d                                                       01-DCCPR
                                            3453+         entry _tthread_timespec_get                                    01-DCCPR
00002128                                    3454+_tthread_timespec_get ds 0d                                             01-DCCPR
00002128                                    3455+@REGION_684_1 ds 0h                                                     01-DCCPR
00002128 EBEC D008 0024          00000008   3456+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000212E E3E0 D088 0004          00000088   3457+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002134 E3C0 D090 0004          00000090   3458+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000213A B904 002E                          3459+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000213E E3B0 C018 0004          00000018   3460+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002144 A7EB 00B8               000000B8   3461+         aghi  14,184              increase by frame size               01-DCCPR
00002148 E3E0 C020 0021          00000020   3462+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000214E 4720 B020               00000020   3463+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002152                                    3464+@PER_684 ds    0h                                                       01-DCCPR
00002152 EBDE 2080 0024          00000080   3465+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002158 E3C0 2090 0024          00000090   3466+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000215E B904 00D2                          3467+         lgr   13,2                set real frame pointer               01-DCCPR
00002162 B904 00CF                          3468+         lgr   12,15               set base reg                         01-DCCPR
                        00002128            3469+         using @REGION_684_1,12                                         01-DCCPR
                                            3470 * ******* End of Prologue
                                            3471 * *
00002166 5820 100C               0000000C   3472          L     2,12(0,1)   ; base
                                            3473 * ***
                                            3474 * ***   # 871 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            3475 * ***     if (base != 1)
0000216A A72E 0001               00000001   3476          CHI   2,1
0000216E 4780 C068               00002190   3477          BE    @L88
                                            3478 * ***     {
                                            3479 * ***       return 0;
00002172 A7F9 0000               00000000   3480          LGHI  15,0        ; 0
                                                                                                                           Page   73 
  Active Usings: @REGION_684_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002176 47F0 C098               000021C0   3481          B     @ret_lab_684
00002180                                    3482          DS    0D
00002180 000000B8                           3483 @FRAMESIZE_684 DC F'184'
00002184 00000000
00002188 0000000000000000                   3484 @lit_684_104 DC AD(clock_gettime)
                                            3485 * ***     }
00002190                                    3486 @L88     DS    0H
                                            3487 * ***
                                            3488 * ***   # 881 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            3489 * ***     base = (clock_gettime(0, ts) == 0) ? base : 0;
00002190 D707 D0A8 D0A8 000000A8 000000A8   3490          XC    168(8,13),168(13)
00002196 E3F0 1000 0004          00000000   3491          LG    15,0(0,1)   ; ts
0000219C E3F0 D0B0 0024          000000B0   3492          STG   15,176(0,13)
000021A2 4110 D0A8               000000A8   3493          LA    1,168(0,13)
000021A6 E3F0 C060 0004          00002188   3494          LG    15,@lit_684_104 ; clock_gettime
000021AC                                    3495 @@gen_label102 DS    0H
000021AC 05EF                               3496          BALR  14,15
000021AE                                    3497 @@gen_label103 DS    0H
000021AE 12FF                               3498          LTR   15,15
000021B0 4770 C090               000021B8   3499          BNE   @L89
000021B4 47F0 C094               000021BC   3500          B     @L90
000021B8                                    3501 @L89     DS    0H
000021B8 A728 0000               00000000   3502          LHI   2,0         ; 0
000021BC                                    3503 @L90     DS    0H
                                            3504 * ***
                                            3505 * ***   # 888 "C:\asgkafka\librdkafka\src\tinycthread.c"
                                            3506 * ***     return base;
000021BC B914 00F2                          3507          LGFR  15,2
                                            3508 * ***   }
000021C0                                    3509 @ret_lab_684 DS 0H
                                            3510 * * **** Start of Epilogue
                                            3511          DCCEPIL
000021C0                                    3512+         ds 0h                                                          01-DCCEP
                                            3513+* Epilog
000021C0 D707 D088 D088 00000088 00000088   3514+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000021C6 E3D0 D080 0004          00000080   3515+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000021CC E3C0 D090 0004          00000090   3516+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000021D2 E3B0 C018 0004          00000018   3517+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000021D8 E3C0 B010 0021          00000010   3518+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000021DE E3E0 D008 0004          00000008   3519+         lg  14,8(0,13)          load up return address                 01-DCCEP
000021E4 EB1C D020 0004          00000020   3520+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000021EA 078E                               3521+         bcr 8,14                if same dsab, just return              01-DCCEP
000021EC E3F0 D010 0024          00000010   3522+         stg 15,16(0,13)         save return code                       01-DCCEP
000021F2 E300 D018 0024          00000018   3523+         stg 0,24(0,13)          save more return code                  01-DCCEP
000021F8 E3F0 D090 0004          00000090   3524+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000021FE E3F0 F018 0004          00000018   3525+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002204 47F0 F040               00000040   3526+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3527+* End of Epilog
                                            3528 * * **** End of Epilogue
                                            3529          DROP  12
                                            3530 *
                                            3531 *   DSECT for automatic variables in "_tthread_timespec_get"
                                                                                                                           Page   74 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3532 *      (FUNCTION #684)
                                            3533 *
00000000                00000000 000000A8   3534 @AUTO#_tthread_timespec_get DSECT
00000000                                    3535          DS    XL168
                                            3536 *
00002208                00000000 00002208   3537 @CODE    CSECT
                                            3538 @@STATIC ALIAS X'7CA38995A883A3889985818450'
                                            3539 @@STATIC DXD   65D
                                            3540 *
                                            3541 *  Non-Re-Entrant Data Section
                                            3542 *
00002208                00002208 00000068   3543 @DATA    CSECT
                                            3544 @DATA    RMODE ANY
                                            3545 @DATA    AMODE ANY
00002208 99846D8381939396                   3546 @@T349   DC    X'99846D838193939683'               rd.calloc
00002211 00                                 3547          DC    1X'00'
00002212 99846D9481939396                   3548 @@T34D   DC    X'99846D948193939683'               rd.malloc
0000221B 00                                 3549          DC    1X'00'
0000221C 99846D9985819393                   3550 @@T352   DC    X'99846D99858193939683'             rd.realloc
00002226 0000                               3551          DC    2X'00'
00002228 99846DA2A39984A4                   3552 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00002231 00                                 3553          DC    1X'00'
00002232 99846DA2A3999584                   3554 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
0000223C 0000                               3555          DC    2X'00'
0000223E 99846D9985868395                   3556 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
0000224C 00                                 3557          DC    1X'00'
0000224E                                    3558 @strings@ DS   0H
0000224E C37AE081A2879281                   3559          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
0000225E 849281869281E0A2                   3560          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
0000226E 9700                               3561          DC    X'9700'                             p.
                                            3562 *
                                            3563 *
                                            3564 *   Re-entrant Data Initialization Section
                                            3565 *
                                            3566 @@INIT@  ALIAS C'tinycthread:'
00002270                00002270 00000230   3567 @@INIT@  CSECT
                                            3568 @@INIT@  AMODE ANY
                                            3569 @@INIT@  RMODE ANY
00002270 05                                 3570          DC    XL1'5'
00002271 000000                             3571          DC    AL3(0)
00002274 00000120                           3572          DC    AL4(288)
00002278 00000000                           3573          DC    4X'00'
0000227C 00000000                           3574          DC    Q(@@STATIC)
00002280 00000000                           3575          DC    X'00000000'
00002284 00000001                           3576          DC    X'00000001'
00002288 00000000                           3577          DC    X'00000000'
0000228C 000000FF                           3578          DC    X'000000FF'
00002290 0102039C09867F97                   3579          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
000022A0 1112139D85088718                   3580          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
000022B0 818283840A171B88                   3581          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
000022C0 9116939495960498                   3582          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
000022D0 A0E2E4E0E1E3E5E7                   3583          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000022E0 E9EAEBE8EDEEEFEC                   3584          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
000022F0 2FC2C4C0C1C3C5C7                   3585          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00002300 C9CACBC8CDCECFCC                   3586          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00002310 6162636465666768                   3587          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00002320 6A6B6C6D6E6F7071                   3588          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00002330 7E73747576777879                   3589          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00002340 A3A5B7A9A7B6BCBD                   3590          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00002350 4142434445464748                   3591          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00002360 4A4B4C4D4E4F5051                   3592          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00002370 F753545556575859                   3593          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00002380 3132333435363738                   3594          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            3595 *
00002390 05                                 3596          DC    XL1'5'
00002391 000000                             3597          DC    AL3(0)
00002394 000001E0                           3598          DC    AL4(480)
00002398 00000000                           3599          DC    4X'00'
0000239C 00000000                           3600          DC    Q(@@STATIC)
000023A0 00000000                           3601          DC    X'00000000'
000023A4 00000101                           3602          DC    X'00000101'
000023A8 00000000                           3603          DC    X'00000000'
000023AC 000000A0                           3604          DC    X'000000A0'
000023B0 010203372D2E2F16                   3605          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
000023C0 1112133C3D322618                   3606          DC    X'1112133C3D322618193F271C1D1E1F40' ................
000023D0 5A7F7B5B6C507D4D                   3607          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
000023E0 F1F2F3F4F5F6F7F8                   3608          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
000023F0 C1C2C3C4C5C6C7C8                   3609          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00002400 D8D9E2E3E4E5E6E7                   3610          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00002410 8182838485868788                   3611          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00002420 9899A2A3A4A5A6A7                   3612          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00002430 2122232425061728                   3613          DC    X'2122232425061728292A2B2C090A1B30' ................
00002440 311A333435360838                   3614          DC    X'311A333435360838393A3B04143EFF80' ................
                                            3615 *
00002450 05                                 3616          DC    XL1'5'
00002451 000000                             3617          DC    AL3(0)
00002454 00000208                           3618          DC    AL4(520)
00002458 00000000                           3619          DC    4X'00'
0000245C 00000000                           3620          DC    Q(@@STATIC)
00002460 00000000                           3621          DC    X'00000000'
00002464 000001C0                           3622          DC    X'000001C0'
00002468 00000000                           3623          DC    X'00000000'
0000246C 00000001                           3624          DC    X'00000001'
00002470 8A40404040404040                   3625          DC    X'8A40404040404040'                 ........
                                            3626 *
00002478 05                                 3627          DC    XL1'5'
00002479 000000                             3628          DC    AL3(0)
0000247C 00000000                           3629          DC    AL4(0)
00002480 00000000                           3630          DC    4X'00'
00002484 00000000                           3631          DC    Q(@@STATIC)
00002488 00000000                           3632          DC    X'00000000'
0000248C 000001E0                           3633          DC    X'000001E0'
00002490 00000000                           3634          DC    X'00000000'
00002494 00000001                           3635          DC    X'00000001'
                                                                                                                           Page   76 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002498 8B40404040404040                   3636          DC    X'8B40404040404040'                 ........
                                            3637 *
                                            3638          END
                                                 Relocation Dictionary                                                     Page   77 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000006 00000148   A 4      +
 00000002 00000014 00000150   A 4      +
 00000002 00000023 00000158   A 4      +
 00000002 00000023 00000160   A 4      +
 00000002 00000002 00000180   A 4      +
 00000002 00000002 000001A8   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 0000001F 00000268   A 4      +
 00000002 00000002 00000288   A 4      +
 00000002 00000002 000002B0   A 4      +
 00000002 00000002 000002B8   A 4      +
 00000002 00000007 00000398   A 4      +
 00000002 00000009 000003A0   A 4      +
 00000002 0000000B 000003A8   A 4      +
 00000002 00000008 000003B0   A 4      +
 00000002 00000002 00000420   A 4      +
 00000002 00000002 00000448   A 4      +
 00000002 00000002 00000450   A 4      +
 00000002 0000000A 00000508   A 4      +
 00000002 00000002 00000528   A 4      +
 00000002 00000002 00000550   A 4      +
 00000002 00000002 00000558   A 4      +
 00000002 0000000C 000005D8   A 4      +
 00000002 00000002 00000650   A 4      +
 00000002 00000002 00000678   A 4      +
 00000002 00000002 00000680   A 4      +
 00000002 00000002 000006E8   A 4      +
 00000002 00000010 000006F0   A 4      +
 00000002 0000000D 000006F8   A 4      +
 00000002 00000002 000008A8   A 4      +
 00000002 00000002 000008D0   A 4      +
 00000002 00000002 000008D8   A 4      +
 00000002 0000000D 00000958   A 4      +
 00000002 00000002 000009C8   A 4      +
 00000002 00000002 000009F0   A 4      +
 00000002 00000002 000009F8   A 4      +
 00000002 0000000E 00000A78   A 4      +
 00000002 00000002 00000AE8   A 4      +
 00000002 00000002 00000B10   A 4      +
 00000002 00000002 00000B18   A 4      +
 00000002 00000018 00000BA0   A 4      +
 00000002 00000002 00000C10   A 4      +
 00000002 00000002 00000C38   A 4      +
 00000002 00000002 00000C40   A 4      +
 00000002 00000017 00000CF8   A 4      +
 00000002 00000002 00000D18   A 4      +
 00000002 00000002 00000D40   A 4      +
 00000002 00000002 00000D48   A 4      +
 00000002 00000019 00000DC8   A 4      +
 00000002 00000002 00000E40   A 4      +
                                                 Relocation Dictionary                                                     Page   78 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000E68   A 4      +
 00000002 00000002 00000E70   A 4      +
 00000002 00000016 00000EF0   A 4      +
 00000002 00000002 00000F60   A 4      +
 00000002 00000002 00000F88   A 4      +
 00000002 00000002 00000F90   A 4      +
 00000002 0000001B 00001018   A 4      +
 00000002 00000002 00001090   A 4      +
 00000002 00000002 000010B8   A 4      +
 00000002 00000002 000010C0   A 4      +
 00000002 0000001A 00001158   A 4      +
 00000002 00000002 000011E8   A 4      +
 00000002 00000002 00001210   A 4      +
 00000002 00000002 00001218   A 4      +
 00000002 00000002 000012E8   A 4      +
 00000002 00000002 00001308   A 4      +
 00000002 00000002 00001330   A 4      +
 00000002 00000002 00001338   A 4      +
 00000002 00000002 000013C0   A 4      +
 00000002 0000001C 000013C8   A 4      +
 00000002 00000002 000013D0   A 4      +
 00000002 00000013 000013D8   A 4      +
 00000002 00000002 000013E0   A 4      +
 00000002 00000002 000014D0   A 4      +
 00000002 00000002 000014F8   A 4      +
 00000002 00000002 00001500   A 4      +
 00000002 00000011 000015A8   A 4      +
 00000002 00000002 000015C8   A 4      +
 00000002 00000002 000015F0   A 4      +
 00000002 00000002 000015F8   A 4      +
 00000002 0000001D 00001690   A 4      +
 00000002 00000022 00001698   Q 4      +
 00000002 00000002 00001708   A 4      +
 00000002 00000002 00001730   A 4      +
 00000002 00000002 00001738   A 4      +
 00000002 0000001E 00001800   A 4      +
 00000002 00000002 00001820   A 4      +
 00000002 00000002 00001848   A 4      +
 00000002 00000002 00001850   A 4      +
 00000002 00000020 00001908   A 4      +
 00000002 00000002 00001928   A 4      +
 00000002 00000002 00001950   A 4      +
 00000002 00000002 00001958   A 4      +
 00000002 00000003 000019E8   A 4      +
 00000002 00000002 00001A70   A 4      +
 00000002 00000002 00001A98   A 4      +
 00000002 00000002 00001AA0   A 4      +
 00000002 00000010 00001B68   A 4      +
 00000002 00000002 00001B88   A 4      +
 00000002 00000002 00001BB0   A 4      +
 00000002 00000002 00001BB8   A 4      +
 00000002 00000015 00001C60   A 4      +
 00000002 00000002 00001C80   A 4      +
                                                 Relocation Dictionary                                                     Page   79 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00001CA8   A 4      +
 00000002 00000002 00001CB0   A 4      +
 00000002 00000004 00001D38   A 4      +
 00000002 00000002 00001DA8   A 4      +
 00000002 00000002 00001DD0   A 4      +
 00000002 00000002 00001DD8   A 4      +
 00000002 00000005 00001E90   A 4      +
 00000002 00000002 00001EB0   A 4      +
 00000002 00000002 00001ED8   A 4      +
 00000002 00000002 00001EE0   A 4      +
 00000002 00000021 00001F98   A 4      +
 00000002 00000002 00001FB8   A 4      +
 00000002 00000002 00001FE0   A 4      +
 00000002 00000002 00001FE8   A 4      +
 00000002 00000012 00002070   A 4      +
 00000002 00000002 000020E8   A 4      +
 00000002 00000002 00002110   A 4      +
 00000002 00000002 00002118   A 4      +
 00000002 0000000F 00002188   A 4      +
 00000024 00000022 0000227C   Q 4      +
 00000024 00000022 0000239C   Q 4      +
 00000024 00000022 0000245C   Q 4      +
 00000024 00000022 00002484   Q 4      +
                                                 DSECT Cross Reference                                                     Page   80 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#_thrd_wrapper_function
         000000AC  FFFFFFF1  01973
@AUTO#_tthread_timespec_get
         000000A8  FFFFFFE4  03534
@AUTO#cnd_broadcast
         000000A8  FFFFFFF4  01597
@AUTO#cnd_destroy
         000000A8  FFFFFFF6  01369
@AUTO#cnd_init
         000000A8  FFFFFFF7  01262
@AUTO#cnd_signal
         000000A8  FFFFFFF5  01483
@AUTO#cnd_timedwait
         000000AC  FFFFFFF2  01845
@AUTO#cnd_wait
         000000A8  FFFFFFF3  01715
@AUTO#mtx_destroy
         000000A8  FFFFFFFC  00571
@AUTO#mtx_init
         000000AC  FFFFFFFD  00461
@AUTO#mtx_lock
         000000A8  FFFFFFFB  00685
@AUTO#mtx_timedlock
         000000C8  FFFFFFFA  00914
@AUTO#mtx_trylock
         000000A8  FFFFFFF9  01033
@AUTO#mtx_unlock
         000000A8  FFFFFFF8  01147
@AUTO#rd_free
         000000A8  FFFFFFFE  00306
@AUTO#rd_malloc
         000000A8  FFFFFFFF  00203
@AUTO#thrd_create
         000000AC  FFFFFFF0  02159
@AUTO#thrd_current
         000000A8  FFFFFFEF  02265
@AUTO#thrd_detach
         000000A8  FFFFFFEE  02389
@AUTO#thrd_equal
         000000A8  FFFFFFED  02500
@AUTO#thrd_exit
         000000A8  FFFFFFEC  02607
@AUTO#thrd_join
         000000A8  FFFFFFEB  02738
@AUTO#thrd_sleep
         000000A8  FFFFFFEA  02847
@AUTO#thrd_yield
         000000A8  FFFFFFE9  02953
@AUTO#tss_create
         000000A8  FFFFFFE8  03072
@AUTO#tss_delete
         000000A8  FFFFFFE7  03179
@AUTO#tss_get
                                                 DSECT Cross Reference                                                     Page   81 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
         000000A8  FFFFFFE6  03285
@AUTO#tss_set
         000000A8  FFFFFFE5  03404
                                          Macro and Copy Code Source Summary                                               Page   82 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:43 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page   83 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   139  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00108    165 @REGION_752_1,12
   198  00000168  00000002 DROP                                           12              12
   266  000001FE  00000002 USING  ORDINARY    000001C0 00001000 00000002  12 000A8    273 @REGION_754_1,12
   301  00000270  00000002 DROP                                           12              12
   371  00000306  00000002 USING  ORDINARY    000002C8 00001000 00000002  12 000F4    424 @REGION_685_1,12
   456  00000408  00000002 DROP                                           12              12
   529  0000049E  00000002 USING  ORDINARY    00000460 00001000 00000002  12 000A8    537 @REGION_686_1,12
   566  00000510  00000002 DROP                                           12              12
   636  000005A6  00000002 USING  ORDINARY    00000568 00001000 00000002  12 0007C    651 @REGION_687_1,12
   680  00000630  00000002 DROP                                           12              12
   750  000006CE  00000002 USING  ORDINARY    00000690 00001000 00000002  12 001B6    886 @REGION_688_1,12
   909  0000088E  00000002 DROP                                           12              12
   984  00000926  00000002 USING  ORDINARY    000008E8 00001000 00000002  12 0007C    999 @REGION_689_1,12
  1028  000009B0  00000002 DROP                                           12              12
  1098  00000A46  00000002 USING  ORDINARY    00000A08 00001000 00000002  12 0007C   1113 @REGION_690_1,12
  1142  00000AD0  00000002 DROP                                           12              12
  1212  00000B66  00000002 USING  ORDINARY    00000B28 00001000 00000002  12 00084   1228 @REGION_691_1,12
  1257  00000BF8  00000002 DROP                                           12              12
  1327  00000C8E  00000002 USING  ORDINARY    00000C50 00001000 00000002  12 000A8   1335 @REGION_692_1,12
  1364  00000D00  00000002 DROP                                           12              12
  1434  00000D96  00000002 USING  ORDINARY    00000D58 00001000 00000002  12 0007C   1449 @REGION_693_1,12
  1478  00000E20  00000002 DROP                                           12              12
  1548  00000EBE  00000002 USING  ORDINARY    00000E80 00001000 00000002  12 0007C   1563 @REGION_694_1,12
  1592  00000F48  00000002 DROP                                           12              12
  1662  00000FDE  00000002 USING  ORDINARY    00000FA0 00001000 00000002  12 00084   1681 @REGION_695_1,12
  1710  00001070  00000002 DROP                                           12              12
  1780  0000110E  00000002 USING  ORDINARY    000010D0 00001000 00000002  12 000A6   1813 @REGION_696_1,12
  1840  000011BE  00000002 DROP                                           12              12
  1909  00001266  00000002 USING  ORDINARY    00001228 00001000 00000002  12 000C0   1927 @REGION_785_1,12
  1968  000012F0  00000002 DROP                                           12              12
  2039  00001386  00000002 USING  ORDINARY    00001348 00001000 00000002  12 00126   2127 @REGION_697_1,12
  2154  000014B6  00000002 DROP                                           12              12
  2225  0000154E  00000002 USING  ORDINARY    00001510 00001000 00000002  12 00098   2232 @REGION_698_1,12
  2260  000015B0  00000002 DROP                                           12              12
  2330  00001646  00000002 USING  ORDINARY    00001608 00001000 00000002  12 00098   2354 @REGION_699_1,12
  2384  000016EC  00000002 DROP                                           12              12
  2454  00001786  00000002 USING  ORDINARY    00001748 00001000 00000002  12 000B8   2466 @REGION_700_1,12
  2495  00001808  00000002 DROP                                           12              12
  2565  0000189E  00000002 USING  ORDINARY    00001860 00001000 00000002  12 000A8   2573 @REGION_701_1,12
  2602  00001910  00000002 DROP                                           12              12
  2672  000019A6  00000002 USING  ORDINARY    00001968 00001000 00000002  12 000A4   2702 @REGION_702_1,12
  2733  00001A54  00000002 DROP                                           12              12
  2803  00001AEE  00000002 USING  ORDINARY    00001AB0 00001000 00000002  12 000B8   2813 @REGION_703_1,12
  2842  00001B70  00000002 DROP                                           12              12
  2912  00001C06  00000002 USING  ORDINARY    00001BC8 00001000 00000002  12 00098   2919 @REGION_704_1,12
  2948  00001C68  00000002 DROP                                           12              12
  3018  00001CFE  00000002 USING  ORDINARY    00001CC0 00001000 00000002  12 00084   3037 @REGION_705_1,12
  3067  00001D8C  00000002 DROP                                           12              12
  3137  00001E26  00000002 USING  ORDINARY    00001DE8 00001000 00000002  12 000A8   3145 @REGION_706_1,12
  3174  00001E98  00000002 DROP                                           12              12
  3244  00001F2E  00000002 USING  ORDINARY    00001EF0 00001000 00000002  12 000A8   3252 @REGION_707_1,12
                                                      Using Map                                                            Page   84 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  3280  00001FA0  00000002 DROP                                           12              12
  3350  00002036  00000002 USING  ORDINARY    00001FF8 00001000 00000002  12 00084   3369 @REGION_708_1,12
  3399  000020C4  00000002 DROP                                           12              12
  3469  00002166  00000002 USING  ORDINARY    00002128 00001000 00000002  12 00098   3500 @REGION_684_1,12
  3529  00002208  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page   85 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  TINYCTHREAD ..\asg\asm\tinycthread.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 12.43.51 Stop Time: 12.43.51 Processor Time: 00.00.00.0350
Return Code 000
