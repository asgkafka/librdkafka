                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdxxhash.obj ../asg/asm/rdxxhash.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdxxhash.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
@@ZARCH#  WX 00000001                              00
@RDXXHASH SD 00000002 00000000 000059C8            07  @CODE
malloc    ER 00000003                                  MALLOC
@@ASSERT  ER 00000004                                  __ASSERT
free      ER 00000005                                  FREE
@rdxxhash&
          XD 00000006 00000007 00000200                @@STATIC
@rdxxhash SD 00000007 000059C8 000000F2            07  @DATA
rdxxhash: SD 00000008 00005AC0 00000230            07  @@INIT@
XXH_versionNumber
          LD          00000C68          00000002   00  $X$X$H_VERSION$NUMBER
XXH32     LD          00001810          00000002   00  $X$X$H32
XXH32_createState
          LD          00001A08          00000002   00  $X$X$H32_CREATE$STATE
XXH32_freeState
          LD          00001B10          00000002   00  $X$X$H32_FREE$STATE
XXH32_copyState
          LD          00001C28          00000002   00  $X$X$H32_COPY$STATE
XXH32_reset
          LD          00001CA8          00000002   00  $X$X$H32_RESET
XXH32_update
          LD          00002270          00000002   00  $X$X$H32_UPDATE
XXH32_digest
          LD          000025B8          00000002   00  $X$X$H32_DIGEST
XXH32_canonicalFromHash
          LD          00002718          00000002   00  $X$X$H32_CANONICAL$FROM$HASH
XXH32_hashFromCanonical
          LD          00002860          00000002   00  $X$X$H32_HASH$FROM$CANONICAL
XXH64     LD          000048D8          00000002   00  $X$X$H64
XXH64_createState
          LD          00004A90          00000002   00  $X$X$H64_CREATE$STATE
XXH64_freeState
          LD          00004B98          00000002   00  $X$X$H64_FREE$STATE
XXH64_copyState
          LD          00004CB0          00000002   00  $X$X$H64_COPY$STATE
XXH64_reset
          LD          00004D30          00000002   00  $X$X$H64_RESET
XXH64_update
          LD          000052B8          00000002   00  $X$X$H64_UPDATE
XXH64_digest
          LD          00005670          00000002   00  $X$X$H64_DIGEST
XXH64_canonicalFromHash
          LD          000057D0          00000002   00  $X$X$H64_CANONICAL$FROM$HASH
XXH64_hashFromCanonical
          LD          00005918          00000002   00  $X$X$H64_HASH$FROM$CANONICAL
                                                                                                                           Page    4 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:43:48 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@RDXXHASH'
00000000                00000000 000059C8     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@rdxxhash'
                                              18 malloc   ALIAS C'malloc'
                                              19          EXTRN malloc
                                              20 __assert ALIAS C'@@ASSERT'
                                              21          EXTRN __assert
                                              22 free     ALIAS C'free'
                                              23          EXTRN free
                                              24 *
                                              25 *
                                              26 *
                                              27 * ....... start of rd_malloc
00000000                                      28 @LNAME752 DS   0H
00000000 00000009                             29          DC    X'00000009'
00000004 99846D9481939396                     30          DC    C'rd_malloc'
0000000D 00                                   31          DC    X'00'
                                              32 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                              33          macro
                                              34          dccextrn &m
                                              35          gblc    &$dccext(1000)
                                              36          gbla    &$dccexti
                                              37          lcla    &i
                                              38 &$dccext(&$dccexti+1) setc    '&m'
                                              39 &i       seta    1
                                              40 .loop    aif    (&i gt &$dccexti).around
                                              41          aif    ('&$dccext(&i)' eq '&m').getout
                                              42 &i       seta    &i+1
                                              43          ago     .loop
                                              44 .around  anop
                                              45 &$dccexti seta &$dccexti+1
                                              46          extrn  &m
                                              47 .getout  anop
                                              48          mend
00000010                                      49+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                               50+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                   51+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000014 00000000                             52+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                     53+         dc ad(@PER_752)                                                02-DCCCA
00000020 00000000000000D0                     54+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                     55+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                     56+         dc ad(4096)                                                    02-DCCCA
00000038 20                                   57+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                   58+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                   59+         dc al1(3)                                                      02-DCCCA
0000003B 08                                   60+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                   61+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                               62+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                     63+         dc ad(@LNAME752)                                               02-DCCCA
00000048                                      64+         ds 0d                                                          02-DCCCA
00000048 0000000000000010                     65+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                     66+         dc ad(0)                                                       02-DCCCA
00000058                                      67+         ds    0d                                                       01-DCCPR
00000058                                      68+rd_malloc ds   0d                                                       01-DCCPR
00000058                                      69+@REGION_752_1 ds 0h                                                     01-DCCPR
00000058 EBEC D008 0024          00000008     70+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088     71+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090     72+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                            73+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018     74+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0     75+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020     76+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020     77+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                      78+@PER_752 ds    0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080     79+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090     80+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                            81+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                            82+         lgr   12,15               set base reg                         01-DCCPR
                        00000058              83+         using @REGION_752_1,12                                         01-DCCPR
                                              84 * ******* End of Prologue
                                              85 * *
                                              86 * ***      void *p = malloc(sz);
00000096 E3F0 1000 0004          00000000     87          LG    15,0(0,1)   ; sz
0000009C E3F0 D0B0 0024          000000B0     88          STG   15,176(0,13)
000000A2 4110 D0B0               000000B0     89          LA    1,176(0,13)
000000A6 E3F0 C0F0 0004          00000148     90          LG    15,@lit_752_0 ; malloc
000000AC                                      91 @@gen_label0 DS    0H
000000AC 05EF                                 92          BALR  14,15
000000AE                                      93 @@gen_label1 DS    0H
000000AE B904 002F                            94          LGR   2,15
                                              95 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                              96 * ka\\src\\rd.h", 128, "p"));
000000B2 B902 00F2                            97          LTGR  15,2
000000B6 4770 C09A               000000F2     98          BNZ   @L34
000000BA                                      99 @L33     DS    0H
000000BA E3F0 C108 0004          00000160    100          LG    15,@lit_752_1
000000C0 41F0 F00A               0000000A    101          LA    15,10(0,15)
000000C4 E3F0 D0B0 0024          000000B0    102          STG   15,176(0,13)
000000CA E3F0 C100 0004          00000158    103          LG    15,@lit_752_2
                                                                                                                           Page    6 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000D0 E3F0 D0B8 0024          000000B8    104          STG   15,184(0,13)
000000D6 E548 D0C0 0080          000000C0    105          MVGHI 192(13),128
000000DC 41F0 F020               00000020    106          LA    15,32(0,15)
000000E0 E3F0 D0C8 0024          000000C8    107          STG   15,200(0,13)
000000E6 4110 D0B0               000000B0    108          LA    1,176(0,13)
000000EA E3F0 C0F8 0004          00000150    109          LG    15,@lit_752_3 ; __assert
000000F0                                     110 @@gen_label3 DS    0H
000000F0 05EF                                111          BALR  14,15
000000F2                                     112 @@gen_label4 DS    0H
000000F2                                     113 @L34     DS    0H
                                             114 * ***      return p;
000000F2 B904 00F2                           115          LGR   15,2
                                             116 * ***   }
                                             117 * * **** Start of Epilogue
                                             118          DCCEPIL
000000F6                                     119+         ds 0h                                                          01-DCCEP
                                             120+* Epilog
000000F6 D707 D088 D088 00000088 00000088    121+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000FC E3D0 D080 0004          00000080    122+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000102 E3C0 D090 0004          00000090    123+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000108 E3B0 C018 0004          00000018    124+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000010E E3C0 B010 0021          00000010    125+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000114 E3E0 D008 0004          00000008    126+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000011A EB1C D020 0004          00000020    127+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000120 078E                                128+         bcr 8,14                if same dsab, just return              01-DCCEP
00000122 E3F0 D010 0024          00000010    129+         stg 15,16(0,13)         save return code                       01-DCCEP
00000128 E300 D018 0024          00000018    130+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000012E E3F0 D090 0004          00000090    131+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000134 E3F0 F018 0004          00000018    132+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000013A 47F0 F040               00000040    133+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             134+* End of Epilog
                                             135 * * **** End of Epilogue
00000140                                     136          DS    0D
00000140 000000D0                            137 @FRAMESIZE_752 DC F'208'
00000144 00000000
00000148 0000000000000000                    138 @lit_752_0 DC  AD(malloc)
00000150 0000000000000000                    139 @lit_752_3 DC  AD(__assert)
00000158 0000000000005A70                    140 @lit_752_2 DC  AD(@strings@)
00000160 00000000000059C8                    141 @lit_752_1 DC  AD(@DATA)
                                             142          DROP  12
                                             143 *
                                             144 *   DSECT for automatic variables in "rd_malloc"
                                             145 *      (FUNCTION #752)
                                             146 *
00000000                00000000 000000A8    147 @AUTO#rd_malloc DSECT
00000000                                     148          DS    XL168
                                             149 *
00000168                00000000 000059C8    150 @CODE    CSECT
                                             151 *
                                             152 *
                                             153 *
                                             154 * ....... start of rd_free
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000168                                     155 @LNAME754 DS   0H
00000168 00000007                            156          DC    X'00000007'
0000016C 99846D86998585                      157          DC    C'rd_free'
00000173 00                                  158          DC    X'00'
                                             159 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             160          macro
                                             161          dccextrn &m
                                             162          gblc    &$dccext(1000)
                                             163          gbla    &$dccexti
                                             164          lcla    &i
                                             165 &$dccext(&$dccexti+1) setc    '&m'
                                             166 &i       seta    1
                                             167 .loop    aif    (&i gt &$dccexti).around
                                             168          aif    ('&$dccext(&i)' eq '&m').getout
                                             169 &i       seta    &i+1
                                             170          ago     .loop
                                             171 .around  anop
                                             172 &$dccexti seta &$dccexti+1
                                             173          extrn  &m
                                             174 .getout  anop
                                             175          mend
00000178                                     176+$eye0005    ds    0d                                                    02-DCCCA
00000178 C4C3C3                              177+         dc cl3'DCC'                                                    02-DCCCA
0000017B 01                                  178+         dc xl1'01' format one                                          02-DCCCA
0000017C 00000000                            179+         dc a(0)                                                        02-DCCCA
00000180 00000000000001EA                    180+         dc ad(@PER_754)                                                02-DCCCA
00000188 00000000000000B0                    181+         dc ad(176)                                                     02-DCCCA
00000190 0000000000000000                    182+         dc ad(0)                                                       02-DCCCA
00000198 0000000000001000                    183+         dc ad(4096)                                                    02-DCCCA
000001A0 20                                  184+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A1 03                                  185+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001A2 03                                  186+         dc al1(3)                                                      02-DCCCA
000001A3 08                                  187+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000001A4 00                                  188+         dc bl.8'00000000'                                              02-DCCCA
000001A5 000000                              189+         dc al3(0)                                                      02-DCCCA
000001A8 0000000000000168                    190+         dc ad(@LNAME754)                                               02-DCCCA
000001B0                                     191+         ds 0d                                                          02-DCCCA
000001B0 0000000000000178                    192+         dc ad($eye0005)                                                02-DCCCA
000001B8 0000000000000000                    193+         dc ad(0)                                                       02-DCCCA
000001C0                                     194+         ds    0d                                                       01-DCCPR
000001C0                                     195+rd_free  ds    0d                                                       01-DCCPR
000001C0                                     196+@REGION_754_1 ds 0h                                                     01-DCCPR
000001C0 EBEC D008 0024          00000008    197+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001C6 E3E0 D088 0004          00000088    198+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001CC E3C0 D090 0004          00000090    199+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001D2 B904 002E                           200+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001D6 E3B0 C018 0004          00000018    201+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001DC A7EB 00B0               000000B0    202+         aghi  14,176              increase by frame size               01-DCCPR
000001E0 E3E0 C020 0021          00000020    203+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001E6 4720 B020               00000020    204+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001EA                                     205+@PER_754 ds    0h                                                       01-DCCPR
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000001EA EBDE 2080 0024          00000080    206+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F0 E3C0 2090 0024          00000090    207+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001F6 B904 00D2                           208+         lgr   13,2                set real frame pointer               01-DCCPR
000001FA B904 00CF                           209+         lgr   12,15               set base reg                         01-DCCPR
                        000001C0             210+         using @REGION_754_1,12                                         01-DCCPR
                                             211 * ******* End of Prologue
                                             212 * *
                                             213 * ***      free(ptr);
000001FE E3F0 1000 0004          00000000    214          LG    15,0(0,1)   ; ptr
00000204 E3F0 D0A8 0024          000000A8    215          STG   15,168(0,13)
0000020A 4110 D0A8               000000A8    216          LA    1,168(0,13)
0000020E E3F0 C0A8 0004          00000268    217          LG    15,@lit_754_5 ; free
00000214                                     218 @@gen_label5 DS    0H
00000214 05EF                                219          BALR  14,15
00000216                                     220 @@gen_label6 DS    0H
                                             221 * ***   }
00000216                                     222 @ret_lab_754 DS 0H
                                             223 * * **** Start of Epilogue
                                             224          DCCEPIL
00000216                                     225+         ds 0h                                                          01-DCCEP
                                             226+* Epilog
00000216 D707 D088 D088 00000088 00000088    227+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000021C E3D0 D080 0004          00000080    228+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000222 E3C0 D090 0004          00000090    229+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000228 E3B0 C018 0004          00000018    230+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000022E E3C0 B010 0021          00000010    231+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000234 E3E0 D008 0004          00000008    232+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000023A EB1C D020 0004          00000020    233+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000240 078E                                234+         bcr 8,14                if same dsab, just return              01-DCCEP
00000242 E3F0 D010 0024          00000010    235+         stg 15,16(0,13)         save return code                       01-DCCEP
00000248 E300 D018 0024          00000018    236+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000024E E3F0 D090 0004          00000090    237+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000254 E3F0 F018 0004          00000018    238+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000025A 47F0 F040               00000040    239+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             240+* End of Epilog
                                             241 * * **** End of Epilogue
00000260                                     242          DS    0D
00000260 000000B0                            243 @FRAMESIZE_754 DC F'176'
00000264 00000000
00000268 0000000000000000                    244 @lit_754_5 DC  AD(free)
                                             245          DROP  12
                                             246 *
                                             247 *   DSECT for automatic variables in "rd_free"
                                             248 *      (FUNCTION #754)
                                             249 *
00000000                00000000 000000A8    250 @AUTO#rd_free DSECT
00000000                                     251          DS    XL168
                                             252 *
00000270                00000000 000059C8    253 @CODE    CSECT
                                             254 *
                                             255 *
                                             256 *
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             257 * ....... start of XXH_malloc
00000270                                     258 @LNAME759 DS   0H
00000270 0000000A                            259          DC    X'0000000A'
00000274 E7E7C86D94819393                    260          DC    C'XXH_malloc'
0000027E 00                                  261          DC    X'00'
                                             262 $X$X$H_malloc DCCPRLG CINDEX=759,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME759
                                             263          macro
                                             264          dccextrn &m
                                             265          gblc    &$dccext(1000)
                                             266          gbla    &$dccexti
                                             267          lcla    &i
                                             268 &$dccext(&$dccexti+1) setc    '&m'
                                             269 &i       seta    1
                                             270 .loop    aif    (&i gt &$dccexti).around
                                             271          aif    ('&$dccext(&i)' eq '&m').getout
                                             272 &i       seta    &i+1
                                             273          ago     .loop
                                             274 .around  anop
                                             275 &$dccexti seta &$dccexti+1
                                             276          extrn  &m
                                             277 .getout  anop
                                             278          mend
00000280                                     279+$eye0008    ds    0d                                                    02-DCCCA
00000280 C4C3C3                              280+         dc cl3'DCC'                                                    02-DCCCA
00000283 01                                  281+         dc xl1'01' format one                                          02-DCCCA
00000284 00000000                            282+         dc a(0)                                                        02-DCCCA
00000288 00000000000002F2                    283+         dc ad(@PER_759)                                                02-DCCCA
00000290 00000000000000B0                    284+         dc ad(176)                                                     02-DCCCA
00000298 0000000000000000                    285+         dc ad(0)                                                       02-DCCCA
000002A0 0000000000001000                    286+         dc ad(4096)                                                    02-DCCCA
000002A8 20                                  287+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002A9 03                                  288+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002AA 03                                  289+         dc al1(3)                                                      02-DCCCA
000002AB 08                                  290+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002AC 00                                  291+         dc bl.8'00000000'                                              02-DCCCA
000002AD 000000                              292+         dc al3(0)                                                      02-DCCCA
000002B0 0000000000000270                    293+         dc ad(@LNAME759)                                               02-DCCCA
000002B8                                     294+         ds 0d                                                          02-DCCCA
000002B8 0000000000000280                    295+         dc ad($eye0008)                                                02-DCCCA
000002C0 0000000000000000                    296+         dc ad(0)                                                       02-DCCCA
000002C8                                     297+         ds    0d                                                       01-DCCPR
000002C8                                     298+$X$X$H_malloc ds 0d                                                     01-DCCPR
000002C8                                     299+@REGION_759_1 ds 0h                                                     01-DCCPR
000002C8 EBEC D008 0024          00000008    300+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002CE E3E0 D088 0004          00000088    301+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002D4 E3C0 D090 0004          00000090    302+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000002DA B904 002E                           303+         lgr   2,14                copy addr of our savearea            01-DCCPR
000002DE E3B0 C018 0004          00000018    304+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000002E4 A7EB 00B0               000000B0    305+         aghi  14,176              increase by frame size               01-DCCPR
000002E8 E3E0 C020 0021          00000020    306+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000002EE 4720 B020               00000020    307+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000002F2                                     308+@PER_759 ds    0h                                                       01-DCCPR
000002F2 EBDE 2080 0024          00000080    309+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000002F8 E3C0 2090 0024          00000090    310+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000002FE B904 00D2                           311+         lgr   13,2                set real frame pointer               01-DCCPR
00000302 B904 00CF                           312+         lgr   12,15               set base reg                         01-DCCPR
                        000002C8             313+         using @REGION_759_1,12                                         01-DCCPR
                                             314 * ******* End of Prologue
                                             315 * *
00000306 E3F0 1000 0004          00000000    316          LG    15,0(0,1)   ; s
0000030C E3F0 D0A8 0024          000000A8    317          STG   15,168(0,13)
00000312 4110 D0A8               000000A8    318          LA    1,168(0,13)
00000316 E3F0 C0A8 0004          00000370    319          LG    15,@lit_759_7 ; rd_malloc
0000031C                                     320 @@gen_label7 DS    0H
0000031C 05EF                                321          BALR  14,15
0000031E                                     322 @@gen_label8 DS    0H
                                             323 * * **** Start of Epilogue
                                             324          DCCEPIL
0000031E                                     325+         ds 0h                                                          01-DCCEP
                                             326+* Epilog
0000031E D707 D088 D088 00000088 00000088    327+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000324 E3D0 D080 0004          00000080    328+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000032A E3C0 D090 0004          00000090    329+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000330 E3B0 C018 0004          00000018    330+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000336 E3C0 B010 0021          00000010    331+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000033C E3E0 D008 0004          00000008    332+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000342 EB1C D020 0004          00000020    333+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000348 078E                                334+         bcr 8,14                if same dsab, just return              01-DCCEP
0000034A E3F0 D010 0024          00000010    335+         stg 15,16(0,13)         save return code                       01-DCCEP
00000350 E300 D018 0024          00000018    336+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000356 E3F0 D090 0004          00000090    337+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000035C E3F0 F018 0004          00000018    338+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000362 47F0 F040               00000040    339+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             340+* End of Epilog
                                             341 * * **** End of Epilogue
00000368                                     342          DS    0D
00000368 000000B0                            343 @FRAMESIZE_759 DC F'176'
0000036C 00000000
00000370 0000000000000058                    344 @lit_759_7 DC  AD(rd_malloc)
                                             345          DROP  12
                                             346 *
                                             347 *   DSECT for automatic variables in "XXH_malloc"
                                             348 *      (FUNCTION #759)
                                             349 *
00000000                00000000 000000A8    350 @AUTO#$X$X$H_malloc DSECT
00000000                                     351          DS    XL168
                                             352 *
00000378                00000000 000059C8    353 @CODE    CSECT
                                             354 *
                                             355 *
                                             356 *
                                             357 * ....... start of XXH_free
00000378                                     358 @LNAME760 DS   0H
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000378 00000008                            359          DC    X'00000008'
0000037C E7E7C86D86998585                    360          DC    C'XXH_free'
00000384 00                                  361          DC    X'00'
                                             362 $X$X$H_free DCCPRLG CINDEX=760,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME760
                                             363          macro
                                             364          dccextrn &m
                                             365          gblc    &$dccext(1000)
                                             366          gbla    &$dccexti
                                             367          lcla    &i
                                             368 &$dccext(&$dccexti+1) setc    '&m'
                                             369 &i       seta    1
                                             370 .loop    aif    (&i gt &$dccexti).around
                                             371          aif    ('&$dccext(&i)' eq '&m').getout
                                             372 &i       seta    &i+1
                                             373          ago     .loop
                                             374 .around  anop
                                             375 &$dccexti seta &$dccexti+1
                                             376          extrn  &m
                                             377 .getout  anop
                                             378          mend
00000388                                     379+$eye0011    ds    0d                                                    02-DCCCA
00000388 C4C3C3                              380+         dc cl3'DCC'                                                    02-DCCCA
0000038B 01                                  381+         dc xl1'01' format one                                          02-DCCCA
0000038C 00000000                            382+         dc a(0)                                                        02-DCCCA
00000390 00000000000003FA                    383+         dc ad(@PER_760)                                                02-DCCCA
00000398 00000000000000B0                    384+         dc ad(176)                                                     02-DCCCA
000003A0 0000000000000000                    385+         dc ad(0)                                                       02-DCCCA
000003A8 0000000000001000                    386+         dc ad(4096)                                                    02-DCCCA
000003B0 20                                  387+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000003B1 03                                  388+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000003B2 03                                  389+         dc al1(3)                                                      02-DCCCA
000003B3 08                                  390+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000003B4 00                                  391+         dc bl.8'00000000'                                              02-DCCCA
000003B5 000000                              392+         dc al3(0)                                                      02-DCCCA
000003B8 0000000000000378                    393+         dc ad(@LNAME760)                                               02-DCCCA
000003C0                                     394+         ds 0d                                                          02-DCCCA
000003C0 0000000000000388                    395+         dc ad($eye0011)                                                02-DCCCA
000003C8 0000000000000000                    396+         dc ad(0)                                                       02-DCCCA
000003D0                                     397+         ds    0d                                                       01-DCCPR
000003D0                                     398+$X$X$H_free ds 0d                                                       01-DCCPR
000003D0                                     399+@REGION_760_1 ds 0h                                                     01-DCCPR
000003D0 EBEC D008 0024          00000008    400+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000003D6 E3E0 D088 0004          00000088    401+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000003DC E3C0 D090 0004          00000090    402+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000003E2 B904 002E                           403+         lgr   2,14                copy addr of our savearea            01-DCCPR
000003E6 E3B0 C018 0004          00000018    404+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000003EC A7EB 00B0               000000B0    405+         aghi  14,176              increase by frame size               01-DCCPR
000003F0 E3E0 C020 0021          00000020    406+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000003F6 4720 B020               00000020    407+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000003FA                                     408+@PER_760 ds    0h                                                       01-DCCPR
000003FA EBDE 2080 0024          00000080    409+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000400 E3C0 2090 0024          00000090    410+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000406 B904 00D2                           411+         lgr   13,2                set real frame pointer               01-DCCPR
0000040A B904 00CF                           412+         lgr   12,15               set base reg                         01-DCCPR
                        000003D0             413+         using @REGION_760_1,12                                         01-DCCPR
                                             414 * ******* End of Prologue
                                             415 * *
0000040E E3F0 1000 0004          00000000    416          LG    15,0(0,1)   ; p
00000414 E3F0 D0A8 0024          000000A8    417          STG   15,168(0,13)
0000041A 4110 D0A8               000000A8    418          LA    1,168(0,13)
0000041E E3F0 C0A8 0004          00000478    419          LG    15,@lit_760_9 ; rd_free
00000424                                     420 @@gen_label9 DS    0H
00000424 05EF                                421          BALR  14,15
00000426                                     422 @@gen_label10 DS    0H
00000426                                     423 @ret_lab_760 DS 0H
                                             424 * * **** Start of Epilogue
                                             425          DCCEPIL
00000426                                     426+         ds 0h                                                          01-DCCEP
                                             427+* Epilog
00000426 D707 D088 D088 00000088 00000088    428+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000042C E3D0 D080 0004          00000080    429+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000432 E3C0 D090 0004          00000090    430+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000438 E3B0 C018 0004          00000018    431+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000043E E3C0 B010 0021          00000010    432+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000444 E3E0 D008 0004          00000008    433+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000044A EB1C D020 0004          00000020    434+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000450 078E                                435+         bcr 8,14                if same dsab, just return              01-DCCEP
00000452 E3F0 D010 0024          00000010    436+         stg 15,16(0,13)         save return code                       01-DCCEP
00000458 E300 D018 0024          00000018    437+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000045E E3F0 D090 0004          00000090    438+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000464 E3F0 F018 0004          00000018    439+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000046A 47F0 F040               00000040    440+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             441+* End of Epilog
                                             442 * * **** End of Epilogue
00000470                                     443          DS    0D
00000470 000000B0                            444 @FRAMESIZE_760 DC F'176'
00000474 00000000
00000478 00000000000001C0                    445 @lit_760_9 DC  AD(rd_free)
                                             446          DROP  12
                                             447 *
                                             448 *   DSECT for automatic variables in "XXH_free"
                                             449 *      (FUNCTION #760)
                                             450 *
00000000                00000000 000000A8    451 @AUTO#$X$X$H_free DSECT
00000000                                     452          DS    XL168
                                             453 *
00000480                00000000 000059C8    454 @CODE    CSECT
                                             455 *
                                             456 *
                                             457 *
                                             458 * ....... start of XXH_memcpy
00000480                                     459 @LNAME761 DS   0H
00000480 0000000A                            460          DC    X'0000000A'
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000484 E7E7C86D94859483                    461          DC    C'XXH_memcpy'
0000048E 00                                  462          DC    X'00'
                                             463 $X$X$H_memcpy DCCPRLG CINDEX=761,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME761
                                             464          macro
                                             465          dccextrn &m
                                             466          gblc    &$dccext(1000)
                                             467          gbla    &$dccexti
                                             468          lcla    &i
                                             469 &$dccext(&$dccexti+1) setc    '&m'
                                             470 &i       seta    1
                                             471 .loop    aif    (&i gt &$dccexti).around
                                             472          aif    ('&$dccext(&i)' eq '&m').getout
                                             473 &i       seta    &i+1
                                             474          ago     .loop
                                             475 .around  anop
                                             476 &$dccexti seta &$dccexti+1
                                             477          extrn  &m
                                             478 .getout  anop
                                             479          mend
00000490                                     480+$eye0014    ds    0d                                                    02-DCCCA
00000490 C4C3C3                              481+         dc cl3'DCC'                                                    02-DCCCA
00000493 01                                  482+         dc xl1'01' format one                                          02-DCCCA
00000494 00000000                            483+         dc a(0)                                                        02-DCCCA
00000498 0000000000000000                    484+         dc ad(0)                                                       02-DCCCA
000004A0 00000000000000A8                    485+         dc ad(168)                                                     02-DCCCA
000004A8 0000000000000000                    486+         dc ad(0)                                                       02-DCCCA
000004B0 0000000000001000                    487+         dc ad(4096)                                                    02-DCCCA
000004B8 20                                  488+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000004B9 03                                  489+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000004BA 03                                  490+         dc al1(3)                                                      02-DCCCA
000004BB 08                                  491+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000004BC 00                                  492+         dc bl.8'00000000'                                              02-DCCCA
000004BD 000000                              493+         dc al3(0)                                                      02-DCCCA
000004C0 0000000000000480                    494+         dc ad(@LNAME761)                                               02-DCCCA
000004C8                                     495+         ds 0d                                                          02-DCCCA
000004C8 0000000000000490                    496+         dc ad($eye0014)                                                02-DCCCA
000004D0 0000000000000000                    497+         dc ad(0)                                                       02-DCCCA
000004D8                                     498+         ds    0d                                                       01-DCCPR
000004D8                                     499+$X$X$H_memcpy ds 0d                                                     01-DCCPR
000004D8                                     500+@REGION_761_1 ds 0h                                                     01-DCCPR
000004D8 EBEC D008 0024          00000008    501+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000004DE B904 00CF                           502+         lgr   12,15               set base reg                         01-DCCPR
                        000004D8             503+         using @REGION_761_1,12                                         01-DCCPR
                                             504 * ******* End of Prologue
                                             505 * *
000004E2 E3F0 1010 0004          00000010    506          LG    15,16(0,1)
000004E8 EB12 1000 0004          00000000    507          LMG   1,2,0(1)
000004EE B904 0031                           508          LGR   3,1
000004F2 B902 00FF                           509          LTGR  15,15
000004F6 4780 C04C               00000524    510          BZ    @@gen_label13
000004FA A7FB FFFF               0000FFFF    511          AGHI  15,-1
                                                                                                                           Page   14 
  Active Usings: @REGION_761_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000004FE EB4F 0008 000A          00000008    512          SRAG  4,15,8(0)
00000504 B902 0044                           513          LTGR  4,4
00000508 4780 C048               00000520    514          BZ    @@gen_label12
0000050C                                     515 @@gen_label11 DS 0H
0000050C D2FF 1000 2000 00000000 00000000    516          MVC   0(256,1),0(2)
00000512 4110 1100               00000100    517          LA    1,256(0,1)
00000516 4120 2100               00000100    518          LA    2,256(0,2)
0000051A E340 C034 0046          0000050C    519          BCTG  4,@@gen_label11
00000520                                     520 @@gen_label12 DS 0H
00000520 44F0 C060               00000538    521          EX    15,@lit_761_11
00000524                                     522 @@gen_label13 DS 0H
00000524 B904 00F3                           523          LGR   15,3
                                             524 * * **** Start of Epilogue
                                             525          DCCEPIL
00000528                                     526+         ds 0h                                                          01-DCCEP
                                             527+* Epilog
                                             528+* Epilog
00000528 E3E0 D008 0004          00000008    529+         lg    14,8(,13) restore the reg                                01-DCCEP
0000052E EB1C D020 0004          00000020    530+         lmg   1,12,32(13)                                              01-DCCEP
00000534 07FE                                531+         br   14                                                        01-DCCEP
                                             532+* End of Epilog
                                             533 * * **** End of Epilogue
00000538                                     534          DS    0D
00000538 D200 1000 2000 00000000 00000000    535 @lit_761_11          MVC 0(1,1),0(2)
                                             536          DROP  12
                                             537 *
                                             538 *   DSECT for automatic variables in "XXH_memcpy"
                                             539 *      (FUNCTION #761)
                                             540 *
00000000                00000000 000000A8    541 @AUTO#$X$X$H_memcpy DSECT
00000000                                     542          DS    XL168
                                             543 *
0000053E                00000000 000059C8    544 @CODE    CSECT
                                             545 *
                                             546 *
                                             547 *
                                             548 * ....... start of XXH_read32
0000053E                                     549 @LNAME781 DS   0H
0000053E 0000000A                            550          DC    X'0000000A'
00000542 E7E7C86D99858184                    551          DC    C'XXH_read32'
0000054C 00                                  552          DC    X'00'
                                             553 $X$X$H_read32 DCCPRLG CINDEX=781,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME781
                                             554          macro
                                             555          dccextrn &m
                                             556          gblc    &$dccext(1000)
                                             557          gbla    &$dccexti
                                             558          lcla    &i
                                             559 &$dccext(&$dccexti+1) setc    '&m'
                                             560 &i       seta    1
                                             561 .loop    aif    (&i gt &$dccexti).around
                                             562          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             563 &i       seta    &i+1
                                             564          ago     .loop
                                             565 .around  anop
                                             566 &$dccexti seta &$dccexti+1
                                             567          extrn  &m
                                             568 .getout  anop
                                             569          mend
00000550                                     570+$eye0017    ds    0d                                                    02-DCCCA
00000550 C4C3C3                              571+         dc cl3'DCC'                                                    02-DCCCA
00000553 01                                  572+         dc xl1'01' format one                                          02-DCCCA
00000554 00000000                            573+         dc a(0)                                                        02-DCCCA
00000558 00000000000005C2                    574+         dc ad(@PER_781)                                                02-DCCCA
00000560 00000000000000B0                    575+         dc ad(176)                                                     02-DCCCA
00000568 0000000000000000                    576+         dc ad(0)                                                       02-DCCCA
00000570 0000000000001000                    577+         dc ad(4096)                                                    02-DCCCA
00000578 20                                  578+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000579 03                                  579+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000057A 03                                  580+         dc al1(3)                                                      02-DCCCA
0000057B 08                                  581+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000057C 00                                  582+         dc bl.8'00000000'                                              02-DCCCA
0000057D 000000                              583+         dc al3(0)                                                      02-DCCCA
00000580 000000000000053E                    584+         dc ad(@LNAME781)                                               02-DCCCA
00000588                                     585+         ds 0d                                                          02-DCCCA
00000588 0000000000000550                    586+         dc ad($eye0017)                                                02-DCCCA
00000590 0000000000000000                    587+         dc ad(0)                                                       02-DCCCA
00000598                                     588+         ds    0d                                                       01-DCCPR
00000598                                     589+$X$X$H_read32 ds 0d                                                     01-DCCPR
00000598                                     590+@REGION_781_1 ds 0h                                                     01-DCCPR
00000598 EBEC D008 0024          00000008    591+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000059E E3E0 D088 0004          00000088    592+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000005A4 E3C0 D090 0004          00000090    593+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000005AA B904 002E                           594+         lgr   2,14                copy addr of our savearea            01-DCCPR
000005AE E3B0 C018 0004          00000018    595+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000005B4 A7EB 00B0               000000B0    596+         aghi  14,176              increase by frame size               01-DCCPR
000005B8 E3E0 C020 0021          00000020    597+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000005BE 4720 B020               00000020    598+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000005C2                                     599+@PER_781 ds    0h                                                       01-DCCPR
000005C2 EBDE 2080 0024          00000080    600+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000005C8 E3C0 2090 0024          00000090    601+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000005CE B904 00D2                           602+         lgr   13,2                set real frame pointer               01-DCCPR
000005D2 B904 00CF                           603+         lgr   12,15               set base reg                         01-DCCPR
                        00000598             604+         using @REGION_781_1,12                                         01-DCCPR
                                             605 * ******* End of Prologue
                                             606 * *
                                             607 * ***       U32 val;
                                             608 * ***       __memcpy(&val,memPtr,sizeof(val));
000005D6 E3F0 1000 0004          00000000    609          LG    15,0(0,1)
000005DC 4110 D0A8               000000A8    610          LA    1,168(0,13)
000005E0 D203 1000 F000 00000000 00000000    611          MVC   0(4,1),0(15)
                                             612 * ***       return val;
000005E6 E3F0 D0A8 0016          000000A8    613          LLGF  15,168(0,13) ; val
                                             614 * ***   }
                                                                                                                           Page   16 
  Active Usings: @REGION_781_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             615 * * **** Start of Epilogue
                                             616          DCCEPIL
000005EC                                     617+         ds 0h                                                          01-DCCEP
                                             618+* Epilog
000005EC D707 D088 D088 00000088 00000088    619+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000005F2 E3D0 D080 0004          00000080    620+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000005F8 E3C0 D090 0004          00000090    621+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000005FE E3B0 C018 0004          00000018    622+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000604 E3C0 B010 0021          00000010    623+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000060A E3E0 D008 0004          00000008    624+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000610 EB1C D020 0004          00000020    625+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000616 078E                                626+         bcr 8,14                if same dsab, just return              01-DCCEP
00000618 E3F0 D010 0024          00000010    627+         stg 15,16(0,13)         save return code                       01-DCCEP
0000061E E300 D018 0024          00000018    628+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000624 E3F0 D090 0004          00000090    629+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000062A E3F0 F018 0004          00000018    630+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000630 47F0 F040               00000040    631+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             632+* End of Epilog
                                             633 * * **** End of Epilogue
00000638                                     634          DS    0D
00000638 000000B0                            635 @FRAMESIZE_781 DC F'176'
                                             636          DROP  12
                                             637 *
                                             638 *   DSECT for automatic variables in "XXH_read32"
                                             639 *      (FUNCTION #781)
                                             640 *
00000000                00000000 000000AC    641 @AUTO#$X$X$H_read32 DSECT
00000000                                     642          DS    XL168
000000A8                                     643 $X$X$H_read32#val#0 DS 1F  ; val
                                             644 *
0000063C                00000000 000059C8    645 @CODE    CSECT
                                             646 *
                                             647 *
                                             648 *
                                             649 * ....... start of XXH_swap32
0000063C                                     650 @LNAME782 DS   0H
0000063C 0000000A                            651          DC    X'0000000A'
00000640 E7E7C86DA2A68197                    652          DC    C'XXH_swap32'
0000064A 00                                  653          DC    X'00'
                                             654 $X$X$H_swap32 DCCPRLG CINDEX=782,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME782
                                             655          macro
                                             656          dccextrn &m
                                             657          gblc    &$dccext(1000)
                                             658          gbla    &$dccexti
                                             659          lcla    &i
                                             660 &$dccext(&$dccexti+1) setc    '&m'
                                             661 &i       seta    1
                                             662 .loop    aif    (&i gt &$dccexti).around
                                             663          aif    ('&$dccext(&i)' eq '&m').getout
                                             664 &i       seta    &i+1
                                             665          ago     .loop
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             666 .around  anop
                                             667 &$dccexti seta &$dccexti+1
                                             668          extrn  &m
                                             669 .getout  anop
                                             670          mend
00000650                                     671+$eye0020    ds    0d                                                    02-DCCCA
00000650 C4C3C3                              672+         dc cl3'DCC'                                                    02-DCCCA
00000653 01                                  673+         dc xl1'01' format one                                          02-DCCCA
00000654 00000000                            674+         dc a(0)                                                        02-DCCCA
00000658 0000000000000000                    675+         dc ad(0)                                                       02-DCCCA
00000660 00000000000000A8                    676+         dc ad(168)                                                     02-DCCCA
00000668 0000000000000000                    677+         dc ad(0)                                                       02-DCCCA
00000670 0000000000001000                    678+         dc ad(4096)                                                    02-DCCCA
00000678 20                                  679+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000679 03                                  680+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000067A 03                                  681+         dc al1(3)                                                      02-DCCCA
0000067B 08                                  682+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000067C 00                                  683+         dc bl.8'00000000'                                              02-DCCCA
0000067D 000000                              684+         dc al3(0)                                                      02-DCCCA
00000680 000000000000063C                    685+         dc ad(@LNAME782)                                               02-DCCCA
00000688                                     686+         ds 0d                                                          02-DCCCA
00000688 0000000000000650                    687+         dc ad($eye0020)                                                02-DCCCA
00000690 0000000000000000                    688+         dc ad(0)                                                       02-DCCCA
00000698                                     689+         ds    0d                                                       01-DCCPR
00000698                                     690+$X$X$H_swap32 ds 0d                                                     01-DCCPR
00000698                                     691+@REGION_782_1 ds 0h                                                     01-DCCPR
00000698 EBEC D008 0024          00000008    692+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             693 * ******* End of Prologue
                                             694 * *
                                             695 * ***       return  ((x << 24) & 0xff000000 ) |
0000069E 58F0 1004               00000004    696          L     15,4(0,1)   ; x
                                             697 * ***               ((x <<  8) & 0x00ff0000 ) |
                                             698 * ***               ((x >>  8) & 0x0000ff00 ) |
                                             699 * ***               ((x >> 24) & 0x000000ff );
000006A2 181F                                700          LR    1,15
000006A4 8910 0018               00000018    701          SLL   1,24(0)
000006A8 C01B FF00 0000                      702          NILF  1,X'FF000000'
000006AE 182F                                703          LR    2,15
000006B0 8920 0008               00000008    704          SLL   2,8(0)
000006B4 C02B 00FF 0000                      705          NILF  2,X'00FF0000'
000006BA 1612                                706          OR    1,2
000006BC 182F                                707          LR    2,15
000006BE 8820 0008               00000008    708          SRL   2,8(0)
000006C2 C02B 0000 FF00                      709          NILF  2,X'0000FF00'
000006C8 1612                                710          OR    1,2
000006CA 88F0 0018               00000018    711          SRL   15,24(0)
000006CE C0FB 0000 00FF                      712          NILF  15,X'000000FF'
000006D4 161F                                713          OR    1,15
000006D6 B916 00F1                           714          LLGFR 15,1
                                             715 * ***   }
                                             716 * * **** Start of Epilogue
                                             717          DCCEPIL
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000006DA                                     718+         ds 0h                                                          01-DCCEP
                                             719+* Epilog
                                             720+* Epilog
000006DA E3E0 D008 0004          00000008    721+         lg    14,8(,13) restore the reg                                01-DCCEP
000006E0 EB1C D020 0004          00000020    722+         lmg   1,12,32(13)                                              01-DCCEP
000006E6 07FE                                723+         br   14                                                        01-DCCEP
                                             724+* End of Epilog
                                             725 * * **** End of Epilogue
                                             726 *
                                             727 *   DSECT for automatic variables in "XXH_swap32"
                                             728 *      (FUNCTION #782)
                                             729 *
00000000                00000000 000000A8    730 @AUTO#$X$X$H_swap32 DSECT
00000000                                     731          DS    XL168
                                             732 *
000006E8                00000000 000059C8    733 @CODE    CSECT
                                             734 *
                                             735 *
                                             736 *
                                             737 * ....... start of XXH_isLittleEndian
000006E8                                     738 @LNAME783 DS   0H
000006E8 00000012                            739          DC    X'00000012'
000006EC E7E7C86D89A2D389                    740          DC    C'XXH_isLittleEndian'
000006FE 00                                  741          DC    X'00'
                                             742 $X$X$H_is$Little$Endian DCCPRLG CINDEX=783,BASER=12,FRAME=176,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME783
                                             743          macro
                                             744          dccextrn &m
                                             745          gblc    &$dccext(1000)
                                             746          gbla    &$dccexti
                                             747          lcla    &i
                                             748 &$dccext(&$dccexti+1) setc    '&m'
                                             749 &i       seta    1
                                             750 .loop    aif    (&i gt &$dccexti).around
                                             751          aif    ('&$dccext(&i)' eq '&m').getout
                                             752 &i       seta    &i+1
                                             753          ago     .loop
                                             754 .around  anop
                                             755 &$dccexti seta &$dccexti+1
                                             756          extrn  &m
                                             757 .getout  anop
                                             758          mend
00000700                                     759+$eye0023    ds    0d                                                    02-DCCCA
00000700 C4C3C3                              760+         dc cl3'DCC'                                                    02-DCCCA
00000703 01                                  761+         dc xl1'01' format one                                          02-DCCCA
00000704 00000000                            762+         dc a(0)                                                        02-DCCCA
00000708 0000000000000772                    763+         dc ad(@PER_783)                                                02-DCCCA
00000710 00000000000000B0                    764+         dc ad(176)                                                     02-DCCCA
00000718 0000000000000000                    765+         dc ad(0)                                                       02-DCCCA
00000720 0000000000001000                    766+         dc ad(4096)                                                    02-DCCCA
00000728 20                                  767+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000729 03                                  768+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000072A 03                                  769+         dc al1(3)                                                      02-DCCCA
0000072B 08                                  770+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000072C 00                                  771+         dc bl.8'00000000'                                              02-DCCCA
0000072D 000000                              772+         dc al3(0)                                                      02-DCCCA
00000730 00000000000006E8                    773+         dc ad(@LNAME783)                                               02-DCCCA
00000738                                     774+         ds 0d                                                          02-DCCCA
00000738 0000000000000700                    775+         dc ad($eye0023)                                                02-DCCCA
00000740 0000000000000000                    776+         dc ad(0)                                                       02-DCCCA
00000748                                     777+         ds    0d                                                       01-DCCPR
00000748                                     778+$X$X$H_is$Little$Endian ds 0d                                           01-DCCPR
00000748                                     779+@REGION_783_1 ds 0h                                                     01-DCCPR
00000748 EBEC D008 0024          00000008    780+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000074E E3E0 D088 0004          00000088    781+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000754 E3C0 D090 0004          00000090    782+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000075A B904 002E                           783+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000075E E3B0 C018 0004          00000018    784+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000764 A7EB 00B0               000000B0    785+         aghi  14,176              increase by frame size               01-DCCPR
00000768 E3E0 C020 0021          00000020    786+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000076E 4720 B020               00000020    787+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000772                                     788+@PER_783 ds    0h                                                       01-DCCPR
00000772 EBDE 2080 0024          00000080    789+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000778 E3C0 2090 0024          00000090    790+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000077E B904 00D2                           791+         lgr   13,2                set real frame pointer               01-DCCPR
00000782 B904 00CF                           792+         lgr   12,15               set base reg                         01-DCCPR
                        00000748             793+         using @REGION_783_1,12                                         01-DCCPR
                                             794 * ******* End of Prologue
                                             795 * *
                                             796 * ***       const union { U32 u; BYTE c[4]; } one = { 1 };
00000786 E54C D0A8 0001          000000A8    797          MVHI  168(13),1
                                             798 * ***       return one.c[0];
0000078C E3F0 D0A8 0094          000000A8    799          LLC   15,168(0,13)
00000792 B914 00FF                           800          LGFR  15,15
                                             801 * ***   }
                                             802 * * **** Start of Epilogue
                                             803          DCCEPIL
00000796                                     804+         ds 0h                                                          01-DCCEP
                                             805+* Epilog
00000796 D707 D088 D088 00000088 00000088    806+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000079C E3D0 D080 0004          00000080    807+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000007A2 E3C0 D090 0004          00000090    808+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000007A8 E3B0 C018 0004          00000018    809+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000007AE E3C0 B010 0021          00000010    810+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000007B4 E3E0 D008 0004          00000008    811+         lg  14,8(0,13)          load up return address                 01-DCCEP
000007BA EB1C D020 0004          00000020    812+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000007C0 078E                                813+         bcr 8,14                if same dsab, just return              01-DCCEP
000007C2 E3F0 D010 0024          00000010    814+         stg 15,16(0,13)         save return code                       01-DCCEP
000007C8 E300 D018 0024          00000018    815+         stg 0,24(0,13)          save more return code                  01-DCCEP
000007CE E3F0 D090 0004          00000090    816+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000007D4 E3F0 F018 0004          00000018    817+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000007DA 47F0 F040               00000040    818+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             819+* End of Epilog
                                             820 * * **** End of Epilogue
                                                                                                                           Page   20 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000007E0                                     821          DS    0D
000007E0 000000B0                            822 @FRAMESIZE_783 DC F'176'
                                             823          DROP  12
                                             824 *
                                             825 *   DSECT for automatic variables in "XXH_isLittleEndian"
                                             826 *      (FUNCTION #783)
                                             827 *
00000000                00000000 000000AC    828 @AUTO#$X$X$H_is$Little$Endian DSECT
00000000                                     829          DS    XL168
000000A8                                     830 $X$X$H_is$Little$Endian#one#0 DS 4XL1 ; one
                                             831 *
000007E4                00000000 000059C8    832 @CODE    CSECT
                                             833 *
                                             834 *
                                             835 *
                                             836 * ....... start of XXH_readLE32_align
000007E4                                     837 @LNAME784 DS   0H
000007E4 00000012                            838          DC    X'00000012'
000007E8 E7E7C86D99858184                    839          DC    C'XXH_readLE32_align'
000007FA 00                                  840          DC    X'00'
                                             841 $X$X$H_read$L$E32_align DCCPRLG CINDEX=784,BASER=12,FRAME=176,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME784
                                             842          macro
                                             843          dccextrn &m
                                             844          gblc    &$dccext(1000)
                                             845          gbla    &$dccexti
                                             846          lcla    &i
                                             847 &$dccext(&$dccexti+1) setc    '&m'
                                             848 &i       seta    1
                                             849 .loop    aif    (&i gt &$dccexti).around
                                             850          aif    ('&$dccext(&i)' eq '&m').getout
                                             851 &i       seta    &i+1
                                             852          ago     .loop
                                             853 .around  anop
                                             854 &$dccexti seta &$dccexti+1
                                             855          extrn  &m
                                             856 .getout  anop
                                             857          mend
00000800                                     858+$eye0026    ds    0d                                                    02-DCCCA
00000800 C4C3C3                              859+         dc cl3'DCC'                                                    02-DCCCA
00000803 01                                  860+         dc xl1'01' format one                                          02-DCCCA
00000804 00000000                            861+         dc a(0)                                                        02-DCCCA
00000808 0000000000000872                    862+         dc ad(@PER_784)                                                02-DCCCA
00000810 00000000000000B0                    863+         dc ad(176)                                                     02-DCCCA
00000818 0000000000000000                    864+         dc ad(0)                                                       02-DCCCA
00000820 0000000000001000                    865+         dc ad(4096)                                                    02-DCCCA
00000828 20                                  866+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000829 03                                  867+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000082A 03                                  868+         dc al1(3)                                                      02-DCCCA
0000082B 08                                  869+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000082C 00                                  870+         dc bl.8'00000000'                                              02-DCCCA
0000082D 000000                              871+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000830 00000000000007E4                    872+         dc ad(@LNAME784)                                               02-DCCCA
00000838                                     873+         ds 0d                                                          02-DCCCA
00000838 0000000000000800                    874+         dc ad($eye0026)                                                02-DCCCA
00000840 0000000000000000                    875+         dc ad(0)                                                       02-DCCCA
00000848                                     876+         ds    0d                                                       01-DCCPR
00000848                                     877+$X$X$H_read$L$E32_align ds 0d                                           01-DCCPR
00000848                                     878+@REGION_784_1 ds 0h                                                     01-DCCPR
00000848 EBEC D008 0024          00000008    879+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000084E E3E0 D088 0004          00000088    880+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000854 E3C0 D090 0004          00000090    881+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000085A B904 002E                           882+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000085E E3B0 C018 0004          00000018    883+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000864 A7EB 00B0               000000B0    884+         aghi  14,176              increase by frame size               01-DCCPR
00000868 E3E0 C020 0021          00000020    885+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000086E 4720 B020               00000020    886+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000872                                     887+@PER_784 ds    0h                                                       01-DCCPR
00000872 EBDE 2080 0024          00000080    888+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000878 E3C0 2090 0024          00000090    889+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000087E B904 00D2                           890+         lgr   13,2                set real frame pointer               01-DCCPR
00000882 B904 00CF                           891+         lgr   12,15               set base reg                         01-DCCPR
                        00000848             892+         using @REGION_784_1,12                                         01-DCCPR
                                             893 * ******* End of Prologue
                                             894 * *
                                             895 * ***       if (align==XXH_unaligned)
00000886 E3F0 1000 0004          00000000    896          LG    15,0(0,1)   ; ptr
0000088C E55C 1014 0001          00000014    897          CHSI  20(1),1
00000892 4770 C0B8               00000900    898          BNE   @L44
                                             899 * ***           return endian==XXH_littleEndian ? XXH_read32(ptr) : XX\
                                             900 * H_swap32(XXH_read32(ptr));
00000896 E55C 100C 0001          0000000C    901          CHSI  12(1),1
0000089C 4770 C088               000008D0    902          BNE   @L45
000008A0 E3F0 D0A8 0024          000000A8    903          STG   15,168(0,13)
000008A6 4110 D0A8               000000A8    904          LA    1,168(0,13)
000008AA E3F0 C078 0004          000008C0    905          LG    15,@lit_784_14 ; XXH_read32
000008B0                                     906 @@gen_label16 DS    0H
000008B0 05EF                                907          BALR  14,15
000008B2                                     908 @@gen_label17 DS    0H
000008B2 47F0 C0B0               000008F8    909          B     @L46
000008B8                                     910          DS    0D
000008B8 000000B0                            911 @FRAMESIZE_784 DC F'176'
000008BC 00000000
000008C0 0000000000000598                    912 @lit_784_14 DC AD($X$X$H_read32)
000008C8 0000000000000698                    913 @lit_784_16 DC AD($X$X$H_swap32)
000008D0                                     914 @L45     DS    0H
000008D0 E3F0 D0A8 0024          000000A8    915          STG   15,168(0,13)
000008D6 4110 D0A8               000000A8    916          LA    1,168(0,13)
000008DA E3F0 C078 0004          000008C0    917          LG    15,@lit_784_14 ; XXH_read32
000008E0                                     918 @@gen_label18 DS    0H
000008E0 05EF                                919          BALR  14,15
000008E2                                     920 @@gen_label19 DS    0H
000008E2 B916 00FF                           921          LLGFR 15,15
000008E6 E3F0 D0A8 0024          000000A8    922          STG   15,168(0,13)
                                                                                                                           Page   22 
  Active Usings: @REGION_784_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000008EC 4110 D0A8               000000A8    923          LA    1,168(0,13)
000008F0 E3F0 C080 0004          000008C8    924          LG    15,@lit_784_16 ; XXH_swap32
000008F6                                     925 @@gen_label20 DS    0H
000008F6 05EF                                926          BALR  14,15
000008F8                                     927 @@gen_label21 DS    0H
000008F8                                     928 @L46     DS    0H
000008F8 B916 00FF                           929          LLGFR 15,15
000008FC 47F0 C0E6               0000092E    930          B     @ret_lab_784
                                             931 * ***       else
00000900                                     932 @L44     DS    0H
                                             933 * ***           return endian==XXH_littleEndian ? *(const U32*)ptr : X\
                                             934 * XH_swap32(*(const U32*)ptr);
00000900 E55C 100C 0001          0000000C    935          CHSI  12(1),1
00000906 4770 C0CA               00000912    936          BNE   @L48
0000090A 58F0 F000               00000000    937          L     15,0(0,15)  ; ptr
0000090E 47F0 C0E2               0000092A    938          B     @L49
00000912                                     939 @L48     DS    0H
00000912 E3F0 F000 0016          00000000    940          LLGF  15,0(0,15)
00000918 E3F0 D0A8 0024          000000A8    941          STG   15,168(0,13)
0000091E 4110 D0A8               000000A8    942          LA    1,168(0,13)
00000922 E3F0 C080 0004          000008C8    943          LG    15,@lit_784_16 ; XXH_swap32
00000928                                     944 @@gen_label23 DS    0H
00000928 05EF                                945          BALR  14,15
0000092A                                     946 @@gen_label24 DS    0H
0000092A                                     947 @L49     DS    0H
0000092A B916 00FF                           948          LLGFR 15,15
                                             949 * ***   }
0000092E                                     950 @ret_lab_784 DS 0H
                                             951 * * **** Start of Epilogue
                                             952          DCCEPIL
0000092E                                     953+         ds 0h                                                          01-DCCEP
                                             954+* Epilog
0000092E D707 D088 D088 00000088 00000088    955+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000934 E3D0 D080 0004          00000080    956+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000093A E3C0 D090 0004          00000090    957+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000940 E3B0 C018 0004          00000018    958+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000946 E3C0 B010 0021          00000010    959+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000094C E3E0 D008 0004          00000008    960+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000952 EB1C D020 0004          00000020    961+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000958 078E                                962+         bcr 8,14                if same dsab, just return              01-DCCEP
0000095A E3F0 D010 0024          00000010    963+         stg 15,16(0,13)         save return code                       01-DCCEP
00000960 E300 D018 0024          00000018    964+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000966 E3F0 D090 0004          00000090    965+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000096C E3F0 F018 0004          00000018    966+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000972 47F0 F040               00000040    967+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             968+* End of Epilog
                                             969 * * **** End of Epilogue
                                             970          DROP  12
                                             971 *
                                             972 *   DSECT for automatic variables in "XXH_readLE32_align"
                                             973 *      (FUNCTION #784)
                                             974 *
                                                                                                                           Page   23 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                00000000 000000A8    975 @AUTO#$X$X$H_read$L$E32_align DSECT
00000000                                     976          DS    XL168
                                             977 *
00000976                00000000 000059C8    978 @CODE    CSECT
                                             979 *
                                             980 *
                                             981 *
                                             982 * ....... start of XXH_readLE32
00000976                                     983 @LNAME785 DS   0H
00000976 0000000C                            984          DC    X'0000000C'
0000097A E7E7C86D99858184                    985          DC    C'XXH_readLE32'
00000986 00                                  986          DC    X'00'
                                             987 $X$X$H_read$L$E32 DCCPRLG CINDEX=785,BASER=12,FRAME=192,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME785
                                             988          macro
                                             989          dccextrn &m
                                             990          gblc    &$dccext(1000)
                                             991          gbla    &$dccexti
                                             992          lcla    &i
                                             993 &$dccext(&$dccexti+1) setc    '&m'
                                             994 &i       seta    1
                                             995 .loop    aif    (&i gt &$dccexti).around
                                             996          aif    ('&$dccext(&i)' eq '&m').getout
                                             997 &i       seta    &i+1
                                             998          ago     .loop
                                             999 .around  anop
                                            1000 &$dccexti seta &$dccexti+1
                                            1001          extrn  &m
                                            1002 .getout  anop
                                            1003          mend
00000988                                    1004+$eye0029    ds    0d                                                    02-DCCCA
00000988 C4C3C3                             1005+         dc cl3'DCC'                                                    02-DCCCA
0000098B 01                                 1006+         dc xl1'01' format one                                          02-DCCCA
0000098C 00000000                           1007+         dc a(0)                                                        02-DCCCA
00000990 00000000000009FA                   1008+         dc ad(@PER_785)                                                02-DCCCA
00000998 00000000000000C0                   1009+         dc ad(192)                                                     02-DCCCA
000009A0 0000000000000000                   1010+         dc ad(0)                                                       02-DCCCA
000009A8 0000000000001000                   1011+         dc ad(4096)                                                    02-DCCCA
000009B0 20                                 1012+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000009B1 03                                 1013+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000009B2 03                                 1014+         dc al1(3)                                                      02-DCCCA
000009B3 08                                 1015+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000009B4 00                                 1016+         dc bl.8'00000000'                                              02-DCCCA
000009B5 000000                             1017+         dc al3(0)                                                      02-DCCCA
000009B8 0000000000000976                   1018+         dc ad(@LNAME785)                                               02-DCCCA
000009C0                                    1019+         ds 0d                                                          02-DCCCA
000009C0 0000000000000988                   1020+         dc ad($eye0029)                                                02-DCCCA
000009C8 0000000000000000                   1021+         dc ad(0)                                                       02-DCCCA
000009D0                                    1022+         ds    0d                                                       01-DCCPR
000009D0                                    1023+$X$X$H_read$L$E32 ds 0d                                                 01-DCCPR
000009D0                                    1024+@REGION_785_1 ds 0h                                                     01-DCCPR
000009D0 EBEC D008 0024          00000008   1025+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000009D6 E3E0 D088 0004          00000088   1026+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000009DC E3C0 D090 0004          00000090   1027+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000009E2 B904 002E                          1028+         lgr   2,14                copy addr of our savearea            01-DCCPR
000009E6 E3B0 C018 0004          00000018   1029+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000009EC A7EB 00C0               000000C0   1030+         aghi  14,192              increase by frame size               01-DCCPR
000009F0 E3E0 C020 0021          00000020   1031+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000009F6 4720 B020               00000020   1032+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000009FA                                    1033+@PER_785 ds    0h                                                       01-DCCPR
000009FA EBDE 2080 0024          00000080   1034+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000A00 E3C0 2090 0024          00000090   1035+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000A06 B904 00D2                          1036+         lgr   13,2                set real frame pointer               01-DCCPR
00000A0A B904 00CF                          1037+         lgr   12,15               set base reg                         01-DCCPR
                        000009D0            1038+         using @REGION_785_1,12                                         01-DCCPR
                                            1039 * ******* End of Prologue
                                            1040 * *
                                            1041 * ***       return XXH_readLE32_align(ptr, endian, XXH_unaligned);
00000A0E E3F0 1000 0004          00000000   1042          LG    15,0(0,1)   ; ptr
00000A14 E3F0 D0A8 0024          000000A8   1043          STG   15,168(0,13)
00000A1A E3F0 100C 0014          0000000C   1044          LGF   15,12(0,1)  ; endian
00000A20 E3F0 D0B0 0024          000000B0   1045          STG   15,176(0,13)
00000A26 E548 D0B8 0001          000000B8   1046          MVGHI 184(13),1
00000A2C 4110 D0A8               000000A8   1047          LA    1,168(0,13)
00000A30 E3F0 C0C0 0004          00000A90   1048          LG    15,@lit_785_19 ; XXH_readLE32_align
00000A36                                    1049 @@gen_label25 DS    0H
00000A36 05EF                               1050          BALR  14,15
00000A38                                    1051 @@gen_label26 DS    0H
00000A38 B916 00FF                          1052          LLGFR 15,15
                                            1053 * ***   }
                                            1054 * * **** Start of Epilogue
                                            1055          DCCEPIL
00000A3C                                    1056+         ds 0h                                                          01-DCCEP
                                            1057+* Epilog
00000A3C D707 D088 D088 00000088 00000088   1058+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000A42 E3D0 D080 0004          00000080   1059+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000A48 E3C0 D090 0004          00000090   1060+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000A4E E3B0 C018 0004          00000018   1061+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000A54 E3C0 B010 0021          00000010   1062+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000A5A E3E0 D008 0004          00000008   1063+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000A60 EB1C D020 0004          00000020   1064+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000A66 078E                               1065+         bcr 8,14                if same dsab, just return              01-DCCEP
00000A68 E3F0 D010 0024          00000010   1066+         stg 15,16(0,13)         save return code                       01-DCCEP
00000A6E E300 D018 0024          00000018   1067+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000A74 E3F0 D090 0004          00000090   1068+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000A7A E3F0 F018 0004          00000018   1069+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000A80 47F0 F040               00000040   1070+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1071+* End of Epilog
                                            1072 * * **** End of Epilogue
00000A88                                    1073          DS    0D
00000A88 000000C0                           1074 @FRAMESIZE_785 DC F'192'
00000A8C 00000000
00000A90 0000000000000848                   1075 @lit_785_19 DC AD($X$X$H_read$L$E32_align)
                                            1076          DROP  12
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1077 *
                                            1078 *   DSECT for automatic variables in "XXH_readLE32"
                                            1079 *      (FUNCTION #785)
                                            1080 *
00000000                00000000 000000A8   1081 @AUTO#$X$X$H_read$L$E32 DSECT
00000000                                    1082          DS    XL168
                                            1083 *
00000A98                00000000 000059C8   1084 @CODE    CSECT
                                            1085 *
                                            1086 *
                                            1087 *
                                            1088 * ....... start of XXH_readBE32
00000A98                                    1089 @LNAME786 DS   0H
00000A98 0000000C                           1090          DC    X'0000000C'
00000A9C E7E7C86D99858184                   1091          DC    C'XXH_readBE32'
00000AA8 00                                 1092          DC    X'00'
                                            1093 $X$X$H_read$B$E32 DCCPRLG CINDEX=786,BASER=12,FRAME=176,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME786
                                            1094          macro
                                            1095          dccextrn &m
                                            1096          gblc    &$dccext(1000)
                                            1097          gbla    &$dccexti
                                            1098          lcla    &i
                                            1099 &$dccext(&$dccexti+1) setc    '&m'
                                            1100 &i       seta    1
                                            1101 .loop    aif    (&i gt &$dccexti).around
                                            1102          aif    ('&$dccext(&i)' eq '&m').getout
                                            1103 &i       seta    &i+1
                                            1104          ago     .loop
                                            1105 .around  anop
                                            1106 &$dccexti seta &$dccexti+1
                                            1107          extrn  &m
                                            1108 .getout  anop
                                            1109          mend
00000AB0                                    1110+$eye0032    ds    0d                                                    02-DCCCA
00000AB0 C4C3C3                             1111+         dc cl3'DCC'                                                    02-DCCCA
00000AB3 01                                 1112+         dc xl1'01' format one                                          02-DCCCA
00000AB4 00000000                           1113+         dc a(0)                                                        02-DCCCA
00000AB8 0000000000000B22                   1114+         dc ad(@PER_786)                                                02-DCCCA
00000AC0 00000000000000B0                   1115+         dc ad(176)                                                     02-DCCCA
00000AC8 0000000000000000                   1116+         dc ad(0)                                                       02-DCCCA
00000AD0 0000000000001000                   1117+         dc ad(4096)                                                    02-DCCCA
00000AD8 20                                 1118+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000AD9 03                                 1119+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000ADA 03                                 1120+         dc al1(3)                                                      02-DCCCA
00000ADB 08                                 1121+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000ADC 00                                 1122+         dc bl.8'00000000'                                              02-DCCCA
00000ADD 000000                             1123+         dc al3(0)                                                      02-DCCCA
00000AE0 0000000000000A98                   1124+         dc ad(@LNAME786)                                               02-DCCCA
00000AE8                                    1125+         ds 0d                                                          02-DCCCA
00000AE8 0000000000000AB0                   1126+         dc ad($eye0032)                                                02-DCCCA
00000AF0 0000000000000000                   1127+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000AF8                                    1128+         ds    0d                                                       01-DCCPR
00000AF8                                    1129+$X$X$H_read$B$E32 ds 0d                                                 01-DCCPR
00000AF8                                    1130+@REGION_786_1 ds 0h                                                     01-DCCPR
00000AF8 EBEC D008 0024          00000008   1131+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000AFE E3E0 D088 0004          00000088   1132+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B04 E3C0 D090 0004          00000090   1133+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B0A B904 002E                          1134+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B0E E3B0 C018 0004          00000018   1135+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B14 A7EB 00B0               000000B0   1136+         aghi  14,176              increase by frame size               01-DCCPR
00000B18 E3E0 C020 0021          00000020   1137+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B1E 4720 B020               00000020   1138+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B22                                    1139+@PER_786 ds    0h                                                       01-DCCPR
00000B22 EBDE 2080 0024          00000080   1140+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B28 E3C0 2090 0024          00000090   1141+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000B2E B904 00D2                          1142+         lgr   13,2                set real frame pointer               01-DCCPR
00000B32 B904 00CF                          1143+         lgr   12,15               set base reg                         01-DCCPR
                        00000AF8            1144+         using @REGION_786_1,12                                         01-DCCPR
00000B36 B904 0021                          1145          LGR   2,1         ; ptr to parm area
                                            1146 * ******* End of Prologue
                                            1147 * *
                                            1148 * ***       return XXH_isLittleEndian() ? XXH_swap32(XXH_read32(ptr)) \
                                            1149 * : XXH_read32(ptr);
00000B3A E3F0 C090 0004          00000B88   1150          LG    15,@lit_786_21 ; XXH_isLittleEndian
00000B40                                    1151 @@gen_label27 DS    0H
00000B40 05EF                               1152          BALR  14,15
00000B42                                    1153 @@gen_label28 DS    0H
00000B42 12FF                               1154          LTR   15,15
00000B44 4780 C0A8               00000BA0   1155          BZ    @L50
00000B48 E3F0 2000 0004          00000000   1156          LG    15,0(0,2)   ; ptr
00000B4E E3F0 D0A8 0024          000000A8   1157          STG   15,168(0,13)
00000B54 4110 D0A8               000000A8   1158          LA    1,168(0,13)
00000B58 E3F0 C098 0004          00000B90   1159          LG    15,@lit_786_22 ; XXH_read32
00000B5E                                    1160 @@gen_label30 DS    0H
00000B5E 05EF                               1161          BALR  14,15
00000B60                                    1162 @@gen_label31 DS    0H
00000B60 B916 00FF                          1163          LLGFR 15,15
00000B64 E3F0 D0A8 0024          000000A8   1164          STG   15,168(0,13)
00000B6A 4110 D0A8               000000A8   1165          LA    1,168(0,13)
00000B6E E3F0 C0A0 0004          00000B98   1166          LG    15,@lit_786_23 ; XXH_swap32
00000B74                                    1167 @@gen_label32 DS    0H
00000B74 05EF                               1168          BALR  14,15
00000B76                                    1169 @@gen_label33 DS    0H
00000B76 47F0 C0C0               00000BB8   1170          B     @L51
00000B80                                    1171          DS    0D
00000B80 000000B0                           1172 @FRAMESIZE_786 DC F'176'
00000B84 00000000
00000B88 0000000000000748                   1173 @lit_786_21 DC AD($X$X$H_is$Little$Endian)
00000B90 0000000000000598                   1174 @lit_786_22 DC AD($X$X$H_read32)
00000B98 0000000000000698                   1175 @lit_786_23 DC AD($X$X$H_swap32)
00000BA0                                    1176 @L50     DS    0H
00000BA0 E3F0 2000 0004          00000000   1177          LG    15,0(0,2)   ; ptr
00000BA6 E3F0 D0A8 0024          000000A8   1178          STG   15,168(0,13)
                                                                                                                           Page   27 
  Active Usings: @REGION_786_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000BAC 4110 D0A8               000000A8   1179          LA    1,168(0,13)
00000BB0 E3F0 C098 0004          00000B90   1180          LG    15,@lit_786_22 ; XXH_read32
00000BB6                                    1181 @@gen_label34 DS    0H
00000BB6 05EF                               1182          BALR  14,15
00000BB8                                    1183 @@gen_label35 DS    0H
00000BB8                                    1184 @L51     DS    0H
00000BB8 B916 00FF                          1185          LLGFR 15,15
                                            1186 * ***   }
                                            1187 * * **** Start of Epilogue
                                            1188          DCCEPIL
00000BBC                                    1189+         ds 0h                                                          01-DCCEP
                                            1190+* Epilog
00000BBC D707 D088 D088 00000088 00000088   1191+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000BC2 E3D0 D080 0004          00000080   1192+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000BC8 E3C0 D090 0004          00000090   1193+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000BCE E3B0 C018 0004          00000018   1194+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000BD4 E3C0 B010 0021          00000010   1195+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000BDA E3E0 D008 0004          00000008   1196+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000BE0 EB1C D020 0004          00000020   1197+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000BE6 078E                               1198+         bcr 8,14                if same dsab, just return              01-DCCEP
00000BE8 E3F0 D010 0024          00000010   1199+         stg 15,16(0,13)         save return code                       01-DCCEP
00000BEE E300 D018 0024          00000018   1200+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000BF4 E3F0 D090 0004          00000090   1201+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000BFA E3F0 F018 0004          00000018   1202+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000C00 47F0 F040               00000040   1203+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1204+* End of Epilog
                                            1205 * * **** End of Epilogue
                                            1206          DROP  12
                                            1207 *
                                            1208 *   DSECT for automatic variables in "XXH_readBE32"
                                            1209 *      (FUNCTION #786)
                                            1210 *
00000000                00000000 000000A8   1211 @AUTO#$X$X$H_read$B$E32 DSECT
00000000                                    1212          DS    XL168
                                            1213 *
00000C04                00000000 000059C8   1214 @CODE    CSECT
                                            1215 *
                                            1216 *
                                            1217 *
                                            1218 * ....... start of XXH_versionNumber
                                            1219 $X$X$H_version$Number ALIAS X'E7E7C86DA58599A2899695D5A494828599'
00000C04                                    1220 @LNAME762 DS   0H
00000C04 00000011                           1221          DC    X'00000011'
00000C08 E7E7C86DA58599A2                   1222          DC    C'XXH_versionNumber'
00000C19 00                                 1223          DC    X'00'
                                            1224 $X$X$H_version$Number DCCPRLG CINDEX=762,BASER=0,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME762
                                            1225          macro
                                            1226          dccextrn &m
                                            1227          gblc    &$dccext(1000)
                                            1228          gbla    &$dccexti
                                            1229          lcla    &i
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1230 &$dccext(&$dccexti+1) setc    '&m'
                                            1231 &i       seta    1
                                            1232 .loop    aif    (&i gt &$dccexti).around
                                            1233          aif    ('&$dccext(&i)' eq '&m').getout
                                            1234 &i       seta    &i+1
                                            1235          ago     .loop
                                            1236 .around  anop
                                            1237 &$dccexti seta &$dccexti+1
                                            1238          extrn  &m
                                            1239 .getout  anop
                                            1240          mend
00000C20                                    1241+$eye0035    ds    0d                                                    02-DCCCA
00000C20 C4C3C3                             1242+         dc cl3'DCC'                                                    02-DCCCA
00000C23 01                                 1243+         dc xl1'01' format one                                          02-DCCCA
00000C24 00000000                           1244+         dc a(0)                                                        02-DCCCA
00000C28 0000000000000000                   1245+         dc ad(0)                                                       02-DCCCA
00000C30 00000000000000A8                   1246+         dc ad(168)                                                     02-DCCCA
00000C38 0000000000000000                   1247+         dc ad(0)                                                       02-DCCCA
00000C40 0000000000001000                   1248+         dc ad(4096)                                                    02-DCCCA
00000C48 20                                 1249+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C49 03                                 1250+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C4A 03                                 1251+         dc al1(3)                                                      02-DCCCA
00000C4B 08                                 1252+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C4C 00                                 1253+         dc bl.8'00000000'                                              02-DCCCA
00000C4D 000000                             1254+         dc al3(0)                                                      02-DCCCA
00000C50 0000000000000C04                   1255+         dc ad(@LNAME762)                                               02-DCCCA
00000C58                                    1256+         ds 0d                                                          02-DCCCA
00000C58 0000000000000C20                   1257+         dc ad($eye0035)                                                02-DCCCA
00000C60 0000000000000000                   1258+         dc ad(0)                                                       02-DCCCA
00000C68                                    1259+         ds    0d                                                       01-DCCPR
                                            1260+         entry $X$X$H_version$Number                                    01-DCCPR
00000C68                                    1261+$X$X$H_version$Number ds 0d                                             01-DCCPR
00000C68                                    1262+@REGION_762_1 ds 0h                                                     01-DCCPR
00000C68 EBEC D008 0024          00000008   1263+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1264 * ******* End of Prologue
                                            1265 * *
00000C6E A7F9 025D               0000025D   1266          LGHI  15,605      ; 605
                                            1267 * * **** Start of Epilogue
                                            1268          DCCEPIL
00000C72                                    1269+         ds 0h                                                          01-DCCEP
                                            1270+* Epilog
                                            1271+* Epilog
00000C72 E3E0 D008 0004          00000008   1272+         lg    14,8(,13) restore the reg                                01-DCCEP
00000C78 EB1C D020 0004          00000020   1273+         lmg   1,12,32(13)                                              01-DCCEP
00000C7E 07FE                               1274+         br   14                                                        01-DCCEP
                                            1275+* End of Epilog
                                            1276 * * **** End of Epilogue
                                            1277 *
                                            1278 *   DSECT for automatic variables in "XXH_versionNumber"
                                            1279 *      (FUNCTION #762)
                                            1280 *
00000000                00000000 000000A8   1281 @AUTO#$X$X$H_version$Number DSECT
                                                                                                                           Page   29 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                                    1282          DS    XL168
                                            1283 *
00000C80                00000000 000059C8   1284 @CODE    CSECT
                                            1285 *
                                            1286 *
                                            1287 *
                                            1288 * ....... start of XXH32_round
00000C80                                    1289 @LNAME787 DS   0H
00000C80 0000000B                           1290          DC    X'0000000B'
00000C84 E7E7C8F3F26D9996                   1291          DC    C'XXH32_round'
00000C8F 00                                 1292          DC    X'00'
                                            1293 $X$X$H32_round DCCPRLG CINDEX=787,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME787
                                            1294          macro
                                            1295          dccextrn &m
                                            1296          gblc    &$dccext(1000)
                                            1297          gbla    &$dccexti
                                            1298          lcla    &i
                                            1299 &$dccext(&$dccexti+1) setc    '&m'
                                            1300 &i       seta    1
                                            1301 .loop    aif    (&i gt &$dccexti).around
                                            1302          aif    ('&$dccext(&i)' eq '&m').getout
                                            1303 &i       seta    &i+1
                                            1304          ago     .loop
                                            1305 .around  anop
                                            1306 &$dccexti seta &$dccexti+1
                                            1307          extrn  &m
                                            1308 .getout  anop
                                            1309          mend
00000C90                                    1310+$eye0038    ds    0d                                                    02-DCCCA
00000C90 C4C3C3                             1311+         dc cl3'DCC'                                                    02-DCCCA
00000C93 01                                 1312+         dc xl1'01' format one                                          02-DCCCA
00000C94 00000000                           1313+         dc a(0)                                                        02-DCCCA
00000C98 0000000000000000                   1314+         dc ad(0)                                                       02-DCCCA
00000CA0 00000000000000A8                   1315+         dc ad(168)                                                     02-DCCCA
00000CA8 0000000000000000                   1316+         dc ad(0)                                                       02-DCCCA
00000CB0 0000000000001000                   1317+         dc ad(4096)                                                    02-DCCCA
00000CB8 20                                 1318+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000CB9 03                                 1319+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000CBA 03                                 1320+         dc al1(3)                                                      02-DCCCA
00000CBB 08                                 1321+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000CBC 00                                 1322+         dc bl.8'00000000'                                              02-DCCCA
00000CBD 000000                             1323+         dc al3(0)                                                      02-DCCCA
00000CC0 0000000000000C80                   1324+         dc ad(@LNAME787)                                               02-DCCCA
00000CC8                                    1325+         ds 0d                                                          02-DCCCA
00000CC8 0000000000000C90                   1326+         dc ad($eye0038)                                                02-DCCCA
00000CD0 0000000000000000                   1327+         dc ad(0)                                                       02-DCCCA
00000CD8                                    1328+         ds    0d                                                       01-DCCPR
00000CD8                                    1329+$X$X$H32_round ds 0d                                                    01-DCCPR
00000CD8                                    1330+@REGION_787_1 ds 0h                                                     01-DCCPR
00000CD8 EBEC D008 0024          00000008   1331+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000CDE B904 00CF                          1332+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   30 
  Active Usings: @REGION_787_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        00000CD8            1333+         using @REGION_787_1,12                                         01-DCCPR
                                            1334 * ******* End of Prologue
                                            1335 * *
                                            1336 * ***       seed += input * PRIME32_2;
00000CE2 58F0 1004               00000004   1337          L     15,4(0,1)   ; seed
00000CE6 5810 100C               0000000C   1338          L     1,12(0,1)   ; input
00000CEA E320 C040 0004          00000D18   1339          LG    2,@lit_787_27
00000CF0 7110 204C               0000004C   1340          MS    1,76(0,2)   ; PRIME32_2
00000CF4 1EF1                               1341          ALR   15,1
                                            1342 * ***       seed  = ((seed << 13) | (seed >> (32 - 13)));
00000CF6 181F                               1343          LR    1,15
00000CF8 8910 000D               0000000D   1344          SLL   1,13(0)
00000CFC 88F0 0013               00000013   1345          SRL   15,19(0)
00000D00 161F                               1346          OR    1,15
                                            1347 * ***       seed *= PRIME32_1;
00000D02 7110 2048               00000048   1348          MS    1,72(0,2)   ; PRIME32_1
                                            1349 * ***       return seed;
00000D06 B916 00F1                          1350          LLGFR 15,1
                                            1351 * ***   }
                                            1352 * * **** Start of Epilogue
                                            1353          DCCEPIL
00000D0A                                    1354+         ds 0h                                                          01-DCCEP
                                            1355+* Epilog
                                            1356+* Epilog
00000D0A E3E0 D008 0004          00000008   1357+         lg    14,8(,13) restore the reg                                01-DCCEP
00000D10 EB1C D020 0004          00000020   1358+         lmg   1,12,32(13)                                              01-DCCEP
00000D16 07FE                               1359+         br   14                                                        01-DCCEP
                                            1360+* End of Epilog
                                            1361 * * **** End of Epilogue
00000D18                                    1362          DS    0D
00000D18 00000000000059C8                   1363 @lit_787_27 DC AD(@DATA)
                                            1364          DROP  12
                                            1365 *
                                            1366 *   DSECT for automatic variables in "XXH32_round"
                                            1367 *      (FUNCTION #787)
                                            1368 *
00000000                00000000 000000A8   1369 @AUTO#$X$X$H32_round DSECT
00000000                                    1370          DS    XL168
                                            1371 *
00000D20                00000000 000059C8   1372 @CODE    CSECT
                                            1373 *
                                            1374 *
                                            1375 *
                                            1376 * ....... start of XXH32_avalanche
00000D20                                    1377 @LNAME788 DS   0H
00000D20 0000000F                           1378          DC    X'0000000F'
00000D24 E7E7C8F3F26D81A5                   1379          DC    C'XXH32_avalanche'
00000D33 00                                 1380          DC    X'00'
                                            1381 $X$X$H32_avalanche DCCPRLG CINDEX=788,BASER=12,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME788
                                            1382          macro
                                            1383          dccextrn &m
                                                                                                                           Page   31 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1384          gblc    &$dccext(1000)
                                            1385          gbla    &$dccexti
                                            1386          lcla    &i
                                            1387 &$dccext(&$dccexti+1) setc    '&m'
                                            1388 &i       seta    1
                                            1389 .loop    aif    (&i gt &$dccexti).around
                                            1390          aif    ('&$dccext(&i)' eq '&m').getout
                                            1391 &i       seta    &i+1
                                            1392          ago     .loop
                                            1393 .around  anop
                                            1394 &$dccexti seta &$dccexti+1
                                            1395          extrn  &m
                                            1396 .getout  anop
                                            1397          mend
00000D38                                    1398+$eye0041    ds    0d                                                    02-DCCCA
00000D38 C4C3C3                             1399+         dc cl3'DCC'                                                    02-DCCCA
00000D3B 01                                 1400+         dc xl1'01' format one                                          02-DCCCA
00000D3C 00000000                           1401+         dc a(0)                                                        02-DCCCA
00000D40 0000000000000000                   1402+         dc ad(0)                                                       02-DCCCA
00000D48 00000000000000A8                   1403+         dc ad(168)                                                     02-DCCCA
00000D50 0000000000000000                   1404+         dc ad(0)                                                       02-DCCCA
00000D58 0000000000001000                   1405+         dc ad(4096)                                                    02-DCCCA
00000D60 20                                 1406+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D61 03                                 1407+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D62 03                                 1408+         dc al1(3)                                                      02-DCCCA
00000D63 08                                 1409+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D64 00                                 1410+         dc bl.8'00000000'                                              02-DCCCA
00000D65 000000                             1411+         dc al3(0)                                                      02-DCCCA
00000D68 0000000000000D20                   1412+         dc ad(@LNAME788)                                               02-DCCCA
00000D70                                    1413+         ds 0d                                                          02-DCCCA
00000D70 0000000000000D38                   1414+         dc ad($eye0041)                                                02-DCCCA
00000D78 0000000000000000                   1415+         dc ad(0)                                                       02-DCCCA
00000D80                                    1416+         ds    0d                                                       01-DCCPR
00000D80                                    1417+$X$X$H32_avalanche ds 0d                                                01-DCCPR
00000D80                                    1418+@REGION_788_1 ds 0h                                                     01-DCCPR
00000D80 EBEC D008 0024          00000008   1419+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D86 B904 00CF                          1420+         lgr   12,15               set base reg                         01-DCCPR
                        00000D80            1421+         using @REGION_788_1,12                                         01-DCCPR
                                            1422 * ******* End of Prologue
                                            1423 * *
                                            1424 * ***       h32 ^= h32 >> 15;
00000D8A 58F0 1004               00000004   1425          L     15,4(0,1)   ; h32
00000D8E 181F                               1426          LR    1,15
00000D90 8810 000F               0000000F   1427          SRL   1,15(0)
00000D94 17F1                               1428          XR    15,1
                                            1429 * ***       h32 *= PRIME32_2;
00000D96 E310 C048 0004          00000DC8   1430          LG    1,@lit_788_28
00000D9C 71F0 104C               0000004C   1431          MS    15,76(0,1)  ; PRIME32_2
                                            1432 * ***       h32 ^= h32 >> 13;
00000DA0 182F                               1433          LR    2,15
00000DA2 8820 000D               0000000D   1434          SRL   2,13(0)
00000DA6 17F2                               1435          XR    15,2
                                                                                                                           Page   32 
  Active Usings: @REGION_788_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1436 * ***       h32 *= PRIME32_3;
00000DA8 71F0 1050               00000050   1437          MS    15,80(0,1)  ; PRIME32_3
                                            1438 * ***       h32 ^= h32 >> 16;
00000DAC 181F                               1439          LR    1,15
00000DAE 8810 0010               00000010   1440          SRL   1,16(0)
00000DB2 17F1                               1441          XR    15,1
                                            1442 * ***       return(h32);
00000DB4 B916 00FF                          1443          LLGFR 15,15
                                            1444 * ***   }
                                            1445 * * **** Start of Epilogue
                                            1446          DCCEPIL
00000DB8                                    1447+         ds 0h                                                          01-DCCEP
                                            1448+* Epilog
                                            1449+* Epilog
00000DB8 E3E0 D008 0004          00000008   1450+         lg    14,8(,13) restore the reg                                01-DCCEP
00000DBE EB1C D020 0004          00000020   1451+         lmg   1,12,32(13)                                              01-DCCEP
00000DC4 07FE                               1452+         br   14                                                        01-DCCEP
                                            1453+* End of Epilog
                                            1454 * * **** End of Epilogue
00000DC8                                    1455          DS    0D
00000DC8 00000000000059C8                   1456 @lit_788_28 DC AD(@DATA)
                                            1457          DROP  12
                                            1458 *
                                            1459 *   DSECT for automatic variables in "XXH32_avalanche"
                                            1460 *      (FUNCTION #788)
                                            1461 *
00000000                00000000 000000A8   1462 @AUTO#$X$X$H32_avalanche DSECT
00000000                                    1463          DS    XL168
                                            1464 *
00000DD0                00000000 000059C8   1465 @CODE    CSECT
                                            1466 *
                                            1467 *
                                            1468 *
                                            1469 * ....... start of XXH32_finalize
00000DD0                                    1470 @LNAME789 DS   0H
00000DD0 0000000E                           1471          DC    X'0000000E'
00000DD4 E7E7C8F3F26D8689                   1472          DC    C'XXH32_finalize'
00000DE2 00                                 1473          DC    X'00'
                                            1474 $X$X$H32_finalize DCCPRLG CINDEX=789,BASER=12,FRAME=208,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME789
                                            1475          macro
                                            1476          dccextrn &m
                                            1477          gblc    &$dccext(1000)
                                            1478          gbla    &$dccexti
                                            1479          lcla    &i
                                            1480 &$dccext(&$dccexti+1) setc    '&m'
                                            1481 &i       seta    1
                                            1482 .loop    aif    (&i gt &$dccexti).around
                                            1483          aif    ('&$dccext(&i)' eq '&m').getout
                                            1484 &i       seta    &i+1
                                            1485          ago     .loop
                                            1486 .around  anop
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1487 &$dccexti seta &$dccexti+1
                                            1488          extrn  &m
                                            1489 .getout  anop
                                            1490          mend
00000DE8                                    1491+$eye0044    ds    0d                                                    02-DCCCA
00000DE8 C4C3C3                             1492+         dc cl3'DCC'                                                    02-DCCCA
00000DEB 01                                 1493+         dc xl1'01' format one                                          02-DCCCA
00000DEC 00000000                           1494+         dc a(0)                                                        02-DCCCA
00000DF0 0000000000000E5A                   1495+         dc ad(@PER_789)                                                02-DCCCA
00000DF8 00000000000000D0                   1496+         dc ad(208)                                                     02-DCCCA
00000E00 0000000000000000                   1497+         dc ad(0)                                                       02-DCCCA
00000E08 0000000000001000                   1498+         dc ad(4096)                                                    02-DCCCA
00000E10 20                                 1499+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E11 03                                 1500+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E12 03                                 1501+         dc al1(3)                                                      02-DCCCA
00000E13 08                                 1502+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E14 00                                 1503+         dc bl.8'00000000'                                              02-DCCCA
00000E15 000000                             1504+         dc al3(0)                                                      02-DCCCA
00000E18 0000000000000DD0                   1505+         dc ad(@LNAME789)                                               02-DCCCA
00000E20                                    1506+         ds 0d                                                          02-DCCCA
00000E20 0000000000000DE8                   1507+         dc ad($eye0044)                                                02-DCCCA
00000E28 0000000000000000                   1508+         dc ad(0)                                                       02-DCCCA
00000E30                                    1509+         ds    0d                                                       01-DCCPR
00000E30                                    1510+$X$X$H32_finalize ds 0d                                                 01-DCCPR
00000E30                                    1511+@REGION_789_1 ds 0h                                                     01-DCCPR
00000E30 EBEC D008 0024          00000008   1512+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000E36 E3E0 D088 0004          00000088   1513+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000E3C E3C0 D090 0004          00000090   1514+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000E42 B904 002E                          1515+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000E46 E3B0 C018 0004          00000018   1516+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000E4C A7EB 00D0               000000D0   1517+         aghi  14,208              increase by frame size               01-DCCPR
00000E50 E3E0 C020 0021          00000020   1518+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000E56 4720 B020               00000020   1519+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000E5A                                    1520+@PER_789 ds    0h                                                       01-DCCPR
00000E5A EBDE 2080 0024          00000080   1521+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000E60 E3C0 2090 0024          00000090   1522+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000E66 B904 00D2                          1523+         lgr   13,2                set real frame pointer               01-DCCPR
00000E6A B904 00CF                          1524+         lgr   12,15               set base reg                         01-DCCPR
                        00000E30            1525+         using @REGION_789_1,12                                         01-DCCPR
                                            1526 * ******* End of Prologue
                                            1527 * *
                                            1528 * ***       const BYTE* p = (const BYTE*)ptr;
00000E6E 5830 1004               00000004   1529          L     3,4(0,1)    ; h32
00000E72 5840 101C               0000001C   1530          L     4,28(0,1)   ; endian
00000E76 5850 1024               00000024   1531          L     5,36(0,1)   ; align
00000E7A E320 1008 0004          00000008   1532          LG    2,8(0,1)    ; ptr
                                            1533 * ***
                                            1534 * ***
                                            1535 * ***
                                            1536 * ***   # 306 "C:\asgkafka\librdkafka\src\rdxxhash.c"
                                            1537 * ***       switch(len&15)
00000E80 47F0 C532               00001362   1538          B     @L52
                                                                                                                           Page   34 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000E88                                    1539          DS    0D
00000E88 000000D0                           1540 @FRAMESIZE_789 DC F'208'
00000E8C 00000000
00000E90 0000000000000848                   1541 @lit_789_29 DC AD($X$X$H_read$L$E32_align)
00000E98 00000000000059C8                   1542 @lit_789_30 DC AD(@DATA)
00000EA0 0000000000000D80                   1543 @lit_789_35 DC AD($X$X$H32_avalanche)
00000EA8 000000000000000F                   1544 @lit_789_60 DC FD'15' 0x000000000000000f
00000EB0 0000000000000000                   1545 @lit_789_64 DC AD(__assert)
00000EB8 0000000000005A70                   1546 @lit_789_63 DC AD(@strings@)
                                            1547 * ***       {
                                            1548 * ***         case 12:      h32 += XXH_readLE32_align(p, endian, align\
                                            1549 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1550 * E32_4 ;;
00000EC0                                    1551 @L54     DS    0H
00000EC0 E320 D0B0 0024          000000B0   1552          STG   2,176(0,13)
00000EC6 B914 00F4                          1553          LGFR  15,4
00000ECA E3F0 D0B8 0024          000000B8   1554          STG   15,184(0,13)
00000ED0 B914 00F5                          1555          LGFR  15,5
00000ED4 E3F0 D0C0 0024          000000C0   1556          STG   15,192(0,13)
00000EDA 4110 D0B0               000000B0   1557          LA    1,176(0,13)
00000EDE E3F0 C060 0004          00000E90   1558          LG    15,@lit_789_29 ; XXH_readLE32_align
00000EE4                                    1559 @@gen_label36 DS    0H
00000EE4 05EF                               1560          BALR  14,15
00000EE6                                    1561 @@gen_label37 DS    0H
00000EE6 E310 C068 0004          00000E98   1562          LG    1,@lit_789_30
00000EEC 71F0 1050               00000050   1563          MS    15,80(0,1)  ; PRIME32_3
00000EF0 1E3F                               1564          ALR   3,15
00000EF2 4120 2004               00000004   1565          LA    2,4(0,2)
00000EF6 18F3                               1566          LR    15,3
00000EF8 89F0 0011               00000011   1567          SLL   15,17(0)
00000EFC 8830 000F               0000000F   1568          SRL   3,15(0)
00000F00 16F3                               1569          OR    15,3
00000F02 71F0 1054               00000054   1570          MS    15,84(0,1)  ; PRIME32_4
00000F06 183F                               1571          LR    3,15        ; h32
                                            1572 * ***
                                            1573 * ***         case 8:       h32 += XXH_readLE32_align(p, endian, align\
                                            1574 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1575 * E32_4 ;;
00000F08                                    1576 @L55     DS    0H
00000F08 E320 D0B0 0024          000000B0   1577          STG   2,176(0,13)
00000F0E B914 00F4                          1578          LGFR  15,4
00000F12 E3F0 D0B8 0024          000000B8   1579          STG   15,184(0,13)
00000F18 B914 00F5                          1580          LGFR  15,5
00000F1C E3F0 D0C0 0024          000000C0   1581          STG   15,192(0,13)
00000F22 4110 D0B0               000000B0   1582          LA    1,176(0,13)
00000F26 E3F0 C060 0004          00000E90   1583          LG    15,@lit_789_29 ; XXH_readLE32_align
00000F2C                                    1584 @@gen_label38 DS    0H
00000F2C 05EF                               1585          BALR  14,15
00000F2E                                    1586 @@gen_label39 DS    0H
00000F2E E310 C068 0004          00000E98   1587          LG    1,@lit_789_30
00000F34 71F0 1050               00000050   1588          MS    15,80(0,1)  ; PRIME32_3
00000F38 1E3F                               1589          ALR   3,15
                                                                                                                           Page   35 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000F3A 4120 2004               00000004   1590          LA    2,4(0,2)
00000F3E 18F3                               1591          LR    15,3
00000F40 89F0 0011               00000011   1592          SLL   15,17(0)
00000F44 8830 000F               0000000F   1593          SRL   3,15(0)
00000F48 16F3                               1594          OR    15,3
00000F4A 71F0 1054               00000054   1595          MS    15,84(0,1)  ; PRIME32_4
00000F4E 183F                               1596          LR    3,15        ; h32
                                            1597 * ***
                                            1598 * ***         case 4:       h32 += XXH_readLE32_align(p, endian, align\
                                            1599 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1600 * E32_4 ;;
00000F50                                    1601 @L56     DS    0H
00000F50 E320 D0B0 0024          000000B0   1602          STG   2,176(0,13)
00000F56 B914 00F4                          1603          LGFR  15,4
00000F5A E3F0 D0B8 0024          000000B8   1604          STG   15,184(0,13)
00000F60 B914 00F5                          1605          LGFR  15,5
00000F64 E3F0 D0C0 0024          000000C0   1606          STG   15,192(0,13)
00000F6A 4110 D0B0               000000B0   1607          LA    1,176(0,13)
00000F6E E3F0 C060 0004          00000E90   1608          LG    15,@lit_789_29 ; XXH_readLE32_align
00000F74                                    1609 @@gen_label40 DS    0H
00000F74 05EF                               1610          BALR  14,15
00000F76                                    1611 @@gen_label41 DS    0H
00000F76 E310 C068 0004          00000E98   1612          LG    1,@lit_789_30
00000F7C 71F0 1050               00000050   1613          MS    15,80(0,1)  ; PRIME32_3
00000F80 1E3F                               1614          ALR   3,15
00000F82 18F3                               1615          LR    15,3
00000F84 89F0 0011               00000011   1616          SLL   15,17(0)
00000F88 8830 000F               0000000F   1617          SRL   3,15(0)
00000F8C 16F3                               1618          OR    15,3
00000F8E 71F0 1054               00000054   1619          MS    15,84(0,1)  ; PRIME32_4
                                            1620 * ***                       return XXH32_avalanche(h32);
00000F92 B916 00FF                          1621          LLGFR 15,15
00000F96 E3F0 D0B0 0024          000000B0   1622          STG   15,176(0,13)
00000F9C 4110 D0B0               000000B0   1623          LA    1,176(0,13)
00000FA0 E3F0 C070 0004          00000EA0   1624          LG    15,@lit_789_35 ; XXH32_avalanche
00000FA6                                    1625 @@gen_label42 DS    0H
00000FA6 05EF                               1626          BALR  14,15
00000FA8                                    1627 @@gen_label43 DS    0H
00000FA8 B916 00FF                          1628          LLGFR 15,15
00000FAC 47F0 C620               00001450   1629          B     @ret_lab_789
                                            1630 * ***
                                            1631 * ***         case 13:      h32 += XXH_readLE32_align(p, endian, align\
                                            1632 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1633 * E32_4 ;;
00000FB0                                    1634 @L57     DS    0H
00000FB0 E320 D0B0 0024          000000B0   1635          STG   2,176(0,13)
00000FB6 B914 00F4                          1636          LGFR  15,4
00000FBA E3F0 D0B8 0024          000000B8   1637          STG   15,184(0,13)
00000FC0 B914 00F5                          1638          LGFR  15,5
00000FC4 E3F0 D0C0 0024          000000C0   1639          STG   15,192(0,13)
00000FCA 4110 D0B0               000000B0   1640          LA    1,176(0,13)
00000FCE E3F0 C060 0004          00000E90   1641          LG    15,@lit_789_29 ; XXH_readLE32_align
                                                                                                                           Page   36 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000FD4                                    1642 @@gen_label44 DS    0H
00000FD4 05EF                               1643          BALR  14,15
00000FD6                                    1644 @@gen_label45 DS    0H
00000FD6 E310 C068 0004          00000E98   1645          LG    1,@lit_789_30
00000FDC 71F0 1050               00000050   1646          MS    15,80(0,1)  ; PRIME32_3
00000FE0 1E3F                               1647          ALR   3,15
00000FE2 4120 2004               00000004   1648          LA    2,4(0,2)
00000FE6 18F3                               1649          LR    15,3
00000FE8 89F0 0011               00000011   1650          SLL   15,17(0)
00000FEC 8830 000F               0000000F   1651          SRL   3,15(0)
00000FF0 16F3                               1652          OR    15,3
00000FF2 71F0 1054               00000054   1653          MS    15,84(0,1)  ; PRIME32_4
00000FF6 183F                               1654          LR    3,15        ; h32
                                            1655 * ***
                                            1656 * ***         case 9:       h32 += XXH_readLE32_align(p, endian, align\
                                            1657 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1658 * E32_4 ;;
00000FF8                                    1659 @L58     DS    0H
00000FF8 E320 D0B0 0024          000000B0   1660          STG   2,176(0,13)
00000FFE B914 00F4                          1661          LGFR  15,4
00001002 E3F0 D0B8 0024          000000B8   1662          STG   15,184(0,13)
00001008 B914 00F5                          1663          LGFR  15,5
0000100C E3F0 D0C0 0024          000000C0   1664          STG   15,192(0,13)
00001012 4110 D0B0               000000B0   1665          LA    1,176(0,13)
00001016 E3F0 C060 0004          00000E90   1666          LG    15,@lit_789_29 ; XXH_readLE32_align
0000101C                                    1667 @@gen_label46 DS    0H
0000101C 05EF                               1668          BALR  14,15
0000101E                                    1669 @@gen_label47 DS    0H
0000101E E310 C068 0004          00000E98   1670          LG    1,@lit_789_30
00001024 71F0 1050               00000050   1671          MS    15,80(0,1)  ; PRIME32_3
00001028 1E3F                               1672          ALR   3,15
0000102A 4120 2004               00000004   1673          LA    2,4(0,2)
0000102E 18F3                               1674          LR    15,3
00001030 89F0 0011               00000011   1675          SLL   15,17(0)
00001034 8830 000F               0000000F   1676          SRL   3,15(0)
00001038 16F3                               1677          OR    15,3
0000103A 71F0 1054               00000054   1678          MS    15,84(0,1)  ; PRIME32_4
0000103E 183F                               1679          LR    3,15        ; h32
                                            1680 * ***
                                            1681 * ***         case 5:       h32 += XXH_readLE32_align(p, endian, align\
                                            1682 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1683 * E32_4 ;;
00001040                                    1684 @L59     DS    0H
00001040 E320 D0B0 0024          000000B0   1685          STG   2,176(0,13)
00001046 B914 00F4                          1686          LGFR  15,4
0000104A E3F0 D0B8 0024          000000B8   1687          STG   15,184(0,13)
00001050 B914 00F5                          1688          LGFR  15,5
00001054 E3F0 D0C0 0024          000000C0   1689          STG   15,192(0,13)
0000105A 4110 D0B0               000000B0   1690          LA    1,176(0,13)
0000105E E3F0 C060 0004          00000E90   1691          LG    15,@lit_789_29 ; XXH_readLE32_align
00001064                                    1692 @@gen_label48 DS    0H
00001064 05EF                               1693          BALR  14,15
                                                                                                                           Page   37 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001066                                    1694 @@gen_label49 DS    0H
00001066 E310 C068 0004          00000E98   1695          LG    1,@lit_789_30
0000106C 71F0 1050               00000050   1696          MS    15,80(0,1)  ; PRIME32_3
00001070 1E3F                               1697          ALR   3,15
00001072 41F0 2004               00000004   1698          LA    15,4(0,2)
00001076 1823                               1699          LR    2,3
00001078 8920 0011               00000011   1700          SLL   2,17(0)
0000107C 8830 000F               0000000F   1701          SRL   3,15(0)
00001080 1623                               1702          OR    2,3
00001082 7120 1054               00000054   1703          MS    2,84(0,1)   ; PRIME32_4
                                            1704 * ***                       h32 += (*p++) * PRIME32_5; h32 = ((h32 << \
                                            1705 * 11) | (h32 >> (32 - 11))) * PRIME32_1 ;;
00001086 E3F0 F000 0094          00000000   1706          LLC   15,0(0,15)
0000108C 71F0 1058               00000058   1707          MS    15,88(0,1)  ; PRIME32_5
00001090 1E2F                               1708          ALR   2,15
00001092 18F2                               1709          LR    15,2
00001094 89F0 000B               0000000B   1710          SLL   15,11(0)
00001098 8820 0015               00000015   1711          SRL   2,21(0)
0000109C 16F2                               1712          OR    15,2
0000109E 71F0 1048               00000048   1713          MS    15,72(0,1)  ; PRIME32_1
                                            1714 * ***                       return XXH32_avalanche(h32);
000010A2 B916 00FF                          1715          LLGFR 15,15
000010A6 E3F0 D0B0 0024          000000B0   1716          STG   15,176(0,13)
000010AC 4110 D0B0               000000B0   1717          LA    1,176(0,13)
000010B0 E3F0 C070 0004          00000EA0   1718          LG    15,@lit_789_35 ; XXH32_avalanche
000010B6                                    1719 @@gen_label50 DS    0H
000010B6 05EF                               1720          BALR  14,15
000010B8                                    1721 @@gen_label51 DS    0H
000010B8 B916 00FF                          1722          LLGFR 15,15
000010BC 47F0 C620               00001450   1723          B     @ret_lab_789
                                            1724 * ***
                                            1725 * ***         case 14:      h32 += XXH_readLE32_align(p, endian, align\
                                            1726 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1727 * E32_4 ;;
000010C0                                    1728 @L60     DS    0H
000010C0 E320 D0B0 0024          000000B0   1729          STG   2,176(0,13)
000010C6 B914 00F4                          1730          LGFR  15,4
000010CA E3F0 D0B8 0024          000000B8   1731          STG   15,184(0,13)
000010D0 B914 00F5                          1732          LGFR  15,5
000010D4 E3F0 D0C0 0024          000000C0   1733          STG   15,192(0,13)
000010DA 4110 D0B0               000000B0   1734          LA    1,176(0,13)
000010DE E3F0 C060 0004          00000E90   1735          LG    15,@lit_789_29 ; XXH_readLE32_align
000010E4                                    1736 @@gen_label52 DS    0H
000010E4 05EF                               1737          BALR  14,15
000010E6                                    1738 @@gen_label53 DS    0H
000010E6 E310 C068 0004          00000E98   1739          LG    1,@lit_789_30
000010EC 71F0 1050               00000050   1740          MS    15,80(0,1)  ; PRIME32_3
000010F0 1E3F                               1741          ALR   3,15
000010F2 4120 2004               00000004   1742          LA    2,4(0,2)
000010F6 18F3                               1743          LR    15,3
000010F8 89F0 0011               00000011   1744          SLL   15,17(0)
000010FC 8830 000F               0000000F   1745          SRL   3,15(0)
                                                                                                                           Page   38 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001100 16F3                               1746          OR    15,3
00001102 71F0 1054               00000054   1747          MS    15,84(0,1)  ; PRIME32_4
00001106 183F                               1748          LR    3,15        ; h32
                                            1749 * ***
                                            1750 * ***         case 10:      h32 += XXH_readLE32_align(p, endian, align\
                                            1751 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1752 * E32_4 ;;
00001108                                    1753 @L61     DS    0H
00001108 E320 D0B0 0024          000000B0   1754          STG   2,176(0,13)
0000110E B914 00F4                          1755          LGFR  15,4
00001112 E3F0 D0B8 0024          000000B8   1756          STG   15,184(0,13)
00001118 B914 00F5                          1757          LGFR  15,5
0000111C E3F0 D0C0 0024          000000C0   1758          STG   15,192(0,13)
00001122 4110 D0B0               000000B0   1759          LA    1,176(0,13)
00001126 E3F0 C060 0004          00000E90   1760          LG    15,@lit_789_29 ; XXH_readLE32_align
0000112C                                    1761 @@gen_label54 DS    0H
0000112C 05EF                               1762          BALR  14,15
0000112E                                    1763 @@gen_label55 DS    0H
0000112E E310 C068 0004          00000E98   1764          LG    1,@lit_789_30
00001134 71F0 1050               00000050   1765          MS    15,80(0,1)  ; PRIME32_3
00001138 1E3F                               1766          ALR   3,15
0000113A 4120 2004               00000004   1767          LA    2,4(0,2)
0000113E 18F3                               1768          LR    15,3
00001140 89F0 0011               00000011   1769          SLL   15,17(0)
00001144 8830 000F               0000000F   1770          SRL   3,15(0)
00001148 16F3                               1771          OR    15,3
0000114A 71F0 1054               00000054   1772          MS    15,84(0,1)  ; PRIME32_4
0000114E 183F                               1773          LR    3,15        ; h32
                                            1774 * ***
                                            1775 * ***         case 6:       h32 += XXH_readLE32_align(p, endian, align\
                                            1776 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1777 * E32_4 ;;
00001150                                    1778 @L62     DS    0H
00001150 E320 D0B0 0024          000000B0   1779          STG   2,176(0,13)
00001156 B914 00F4                          1780          LGFR  15,4
0000115A E3F0 D0B8 0024          000000B8   1781          STG   15,184(0,13)
00001160 B914 00F5                          1782          LGFR  15,5
00001164 E3F0 D0C0 0024          000000C0   1783          STG   15,192(0,13)
0000116A 4110 D0B0               000000B0   1784          LA    1,176(0,13)
0000116E E3F0 C060 0004          00000E90   1785          LG    15,@lit_789_29 ; XXH_readLE32_align
00001174                                    1786 @@gen_label56 DS    0H
00001174 05EF                               1787          BALR  14,15
00001176                                    1788 @@gen_label57 DS    0H
00001176 E310 C068 0004          00000E98   1789          LG    1,@lit_789_30
0000117C 71F0 1050               00000050   1790          MS    15,80(0,1)  ; PRIME32_3
00001180 1E3F                               1791          ALR   3,15
00001182 41F0 2004               00000004   1792          LA    15,4(0,2)
00001186 1823                               1793          LR    2,3
00001188 8920 0011               00000011   1794          SLL   2,17(0)
0000118C 8830 000F               0000000F   1795          SRL   3,15(0)
00001190 1623                               1796          OR    2,3
00001192 7120 1054               00000054   1797          MS    2,84(0,1)   ; PRIME32_4
                                                                                                                           Page   39 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1798 * ***                       h32 += (*p++) * PRIME32_5; h32 = ((h32 << \
                                            1799 * 11) | (h32 >> (32 - 11))) * PRIME32_1 ;;
00001196 4130 F001               00000001   1800          LA    3,1(0,15)
0000119A E3F0 F000 0094          00000000   1801          LLC   15,0(0,15)
000011A0 71F0 1058               00000058   1802          MS    15,88(0,1)  ; PRIME32_5
000011A4 1E2F                               1803          ALR   2,15
000011A6 18F2                               1804          LR    15,2
000011A8 89F0 000B               0000000B   1805          SLL   15,11(0)
000011AC 8820 0015               00000015   1806          SRL   2,21(0)
000011B0 16F2                               1807          OR    15,2
000011B2 71F0 1048               00000048   1808          MS    15,72(0,1)  ; PRIME32_1
                                            1809 * ***                       h32 += (*p++) * PRIME32_5; h32 = ((h32 << \
                                            1810 * 11) | (h32 >> (32 - 11))) * PRIME32_1 ;;
000011B6 E320 3000 0094          00000000   1811          LLC   2,0(0,3)
000011BC 7120 1058               00000058   1812          MS    2,88(0,1)   ; PRIME32_5
000011C0 1EF2                               1813          ALR   15,2
000011C2 182F                               1814          LR    2,15
000011C4 8920 000B               0000000B   1815          SLL   2,11(0)
000011C8 88F0 0015               00000015   1816          SRL   15,21(0)
000011CC 162F                               1817          OR    2,15
000011CE 7120 1048               00000048   1818          MS    2,72(0,1)   ; PRIME32_1
                                            1819 * ***                       return XXH32_avalanche(h32);
000011D2 B916 00F2                          1820          LLGFR 15,2
000011D6 E3F0 D0B0 0024          000000B0   1821          STG   15,176(0,13)
000011DC 4110 D0B0               000000B0   1822          LA    1,176(0,13)
000011E0 E3F0 C070 0004          00000EA0   1823          LG    15,@lit_789_35 ; XXH32_avalanche
000011E6                                    1824 @@gen_label58 DS    0H
000011E6 05EF                               1825          BALR  14,15
000011E8                                    1826 @@gen_label59 DS    0H
000011E8 B916 00FF                          1827          LLGFR 15,15
000011EC 47F0 C620               00001450   1828          B     @ret_lab_789
                                            1829 * ***
                                            1830 * ***         case 15:      h32 += XXH_readLE32_align(p, endian, align\
                                            1831 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1832 * E32_4 ;;
000011F0                                    1833 @L63     DS    0H
000011F0 E320 D0B0 0024          000000B0   1834          STG   2,176(0,13)
000011F6 B914 00F4                          1835          LGFR  15,4
000011FA E3F0 D0B8 0024          000000B8   1836          STG   15,184(0,13)
00001200 B914 00F5                          1837          LGFR  15,5
00001204 E3F0 D0C0 0024          000000C0   1838          STG   15,192(0,13)
0000120A 4110 D0B0               000000B0   1839          LA    1,176(0,13)
0000120E E3F0 C060 0004          00000E90   1840          LG    15,@lit_789_29 ; XXH_readLE32_align
00001214                                    1841 @@gen_label60 DS    0H
00001214 05EF                               1842          BALR  14,15
00001216                                    1843 @@gen_label61 DS    0H
00001216 E310 C068 0004          00000E98   1844          LG    1,@lit_789_30
0000121C 71F0 1050               00000050   1845          MS    15,80(0,1)  ; PRIME32_3
00001220 1E3F                               1846          ALR   3,15
00001222 4120 2004               00000004   1847          LA    2,4(0,2)
00001226 18F3                               1848          LR    15,3
00001228 89F0 0011               00000011   1849          SLL   15,17(0)
                                                                                                                           Page   40 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000122C 8830 000F               0000000F   1850          SRL   3,15(0)
00001230 16F3                               1851          OR    15,3
00001232 71F0 1054               00000054   1852          MS    15,84(0,1)  ; PRIME32_4
00001236 183F                               1853          LR    3,15        ; h32
                                            1854 * ***
                                            1855 * ***         case 11:      h32 += XXH_readLE32_align(p, endian, align\
                                            1856 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1857 * E32_4 ;;
00001238                                    1858 @L64     DS    0H
00001238 E320 D0B0 0024          000000B0   1859          STG   2,176(0,13)
0000123E B914 00F4                          1860          LGFR  15,4
00001242 E3F0 D0B8 0024          000000B8   1861          STG   15,184(0,13)
00001248 B914 00F5                          1862          LGFR  15,5
0000124C E3F0 D0C0 0024          000000C0   1863          STG   15,192(0,13)
00001252 4110 D0B0               000000B0   1864          LA    1,176(0,13)
00001256 E3F0 C060 0004          00000E90   1865          LG    15,@lit_789_29 ; XXH_readLE32_align
0000125C                                    1866 @@gen_label62 DS    0H
0000125C 05EF                               1867          BALR  14,15
0000125E                                    1868 @@gen_label63 DS    0H
0000125E E310 C068 0004          00000E98   1869          LG    1,@lit_789_30
00001264 71F0 1050               00000050   1870          MS    15,80(0,1)  ; PRIME32_3
00001268 1E3F                               1871          ALR   3,15
0000126A 4120 2004               00000004   1872          LA    2,4(0,2)
0000126E 18F3                               1873          LR    15,3
00001270 89F0 0011               00000011   1874          SLL   15,17(0)
00001274 8830 000F               0000000F   1875          SRL   3,15(0)
00001278 16F3                               1876          OR    15,3
0000127A 71F0 1054               00000054   1877          MS    15,84(0,1)  ; PRIME32_4
0000127E 183F                               1878          LR    3,15        ; h32
                                            1879 * ***
                                            1880 * ***         case 7:       h32 += XXH_readLE32_align(p, endian, align\
                                            1881 * ) * PRIME32_3; p+=4; h32 = ((h32 << 17) | (h32 >> (32 - 17))) * PRIM\
                                            1882 * E32_4 ;;
00001280                                    1883 @L65     DS    0H
00001280 E320 D0B0 0024          000000B0   1884          STG   2,176(0,13)
00001286 B914 00F4                          1885          LGFR  15,4
0000128A E3F0 D0B8 0024          000000B8   1886          STG   15,184(0,13)
00001290 B914 00F5                          1887          LGFR  15,5
00001294 E3F0 D0C0 0024          000000C0   1888          STG   15,192(0,13)
0000129A 4110 D0B0               000000B0   1889          LA    1,176(0,13)
0000129E E3F0 C060 0004          00000E90   1890          LG    15,@lit_789_29 ; XXH_readLE32_align
000012A4                                    1891 @@gen_label64 DS    0H
000012A4 05EF                               1892          BALR  14,15
000012A6                                    1893 @@gen_label65 DS    0H
000012A6 E310 C068 0004          00000E98   1894          LG    1,@lit_789_30
000012AC 71F0 1050               00000050   1895          MS    15,80(0,1)  ; PRIME32_3
000012B0 1E3F                               1896          ALR   3,15
000012B2 4120 2004               00000004   1897          LA    2,4(0,2)
000012B6 18F3                               1898          LR    15,3
000012B8 89F0 0011               00000011   1899          SLL   15,17(0)
000012BC 8830 000F               0000000F   1900          SRL   3,15(0)
000012C0 16F3                               1901          OR    15,3
                                                                                                                           Page   41 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000012C2 71F0 1054               00000054   1902          MS    15,84(0,1)  ; PRIME32_4
000012C6 183F                               1903          LR    3,15        ; h32
                                            1904 * ***
                                            1905 * ***         case 3:       h32 += (*p++) * PRIME32_5; h32 = ((h32 << \
                                            1906 * 11) | (h32 >> (32 - 11))) * PRIME32_1 ;;
000012C8                                    1907 @L66     DS    0H
000012C8 B904 00F2                          1908          LGR   15,2
000012CC 4120 2001               00000001   1909          LA    2,1(0,2)
000012D0 E3F0 F000 0094          00000000   1910          LLC   15,0(0,15)
000012D6 E310 C068 0004          00000E98   1911          LG    1,@lit_789_30
000012DC 71F0 1058               00000058   1912          MS    15,88(0,1)  ; PRIME32_5
000012E0 1E3F                               1913          ALR   3,15
000012E2 18F3                               1914          LR    15,3
000012E4 89F0 000B               0000000B   1915          SLL   15,11(0)
000012E8 8830 0015               00000015   1916          SRL   3,21(0)
000012EC 16F3                               1917          OR    15,3
000012EE 71F0 1048               00000048   1918          MS    15,72(0,1)  ; PRIME32_1
000012F2 183F                               1919          LR    3,15        ; h32
                                            1920 * ***
                                            1921 * ***         case 2:       h32 += (*p++) * PRIME32_5; h32 = ((h32 << \
                                            1922 * 11) | (h32 >> (32 - 11))) * PRIME32_1 ;;
000012F4                                    1923 @L67     DS    0H
000012F4 B904 00F2                          1924          LGR   15,2
000012F8 4120 2001               00000001   1925          LA    2,1(0,2)
000012FC E3F0 F000 0094          00000000   1926          LLC   15,0(0,15)
00001302 E310 C068 0004          00000E98   1927          LG    1,@lit_789_30
00001308 71F0 1058               00000058   1928          MS    15,88(0,1)  ; PRIME32_5
0000130C 1E3F                               1929          ALR   3,15
0000130E 18F3                               1930          LR    15,3
00001310 89F0 000B               0000000B   1931          SLL   15,11(0)
00001314 8830 0015               00000015   1932          SRL   3,21(0)
00001318 16F3                               1933          OR    15,3
0000131A 71F0 1048               00000048   1934          MS    15,72(0,1)  ; PRIME32_1
0000131E 183F                               1935          LR    3,15        ; h32
                                            1936 * ***
                                            1937 * ***         case 1:       h32 += (*p++) * PRIME32_5; h32 = ((h32 << \
                                            1938 * 11) | (h32 >> (32 - 11))) * PRIME32_1 ;;
00001320                                    1939 @L68     DS    0H
00001320 E3F0 2000 0094          00000000   1940          LLC   15,0(0,2)
00001326 E310 C068 0004          00000E98   1941          LG    1,@lit_789_30
0000132C 71F0 1058               00000058   1942          MS    15,88(0,1)  ; PRIME32_5
00001330 1E3F                               1943          ALR   3,15
00001332 18F3                               1944          LR    15,3
00001334 89F0 000B               0000000B   1945          SLL   15,11(0)
00001338 8830 0015               00000015   1946          SRL   3,21(0)
0000133C 16F3                               1947          OR    15,3
0000133E 71F0 1048               00000048   1948          MS    15,72(0,1)  ; PRIME32_1
00001342 183F                               1949          LR    3,15        ; h32
                                            1950 * ***
                                            1951 * ***         case 0:       return XXH32_avalanche(h32);
00001344                                    1952 @L69     DS    0H
00001344 B916 00F3                          1953          LLGFR 15,3
                                                                                                                           Page   42 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001348 E3F0 D0B0 0024          000000B0   1954          STG   15,176(0,13)
0000134E 4110 D0B0               000000B0   1955          LA    1,176(0,13)
00001352 E3F0 C070 0004          00000EA0   1956          LG    15,@lit_789_35 ; XXH32_avalanche
00001358                                    1957 @@gen_label66 DS    0H
00001358 05EF                               1958          BALR  14,15
0000135A                                    1959 @@gen_label67 DS    0H
0000135A B916 00FF                          1960          LLGFR 15,15
0000135E 47F0 C620               00001450   1961          B     @ret_lab_789
                                            1962 * ***       }
00001362                                    1963 @L52     DS    0H
00001362 E3F0 1010 0004          00000010   1964          LG    15,16(0,1)  ; len
00001368 E3F0 C078 0080          00000EA8   1965          NG    15,@lit_789_60
0000136E C2FE 0000 000F                     1966          CLGFI 15,X'0000000F'
00001374 4720 C5E0               00001410   1967          BH    @L53
00001378 4110 C560               00001390   1968          LA    1,@@gen_label68
0000137C EBFF 0003 000D          00000003   1969          SLLG  15,15,3(0)
00001382 E3F1 F000 0004          00000000   1970          LG    15,0(1,15)
00001388 47FF C000               00000000   1971          B     0(15,12)
00001390                                    1972 @@gen_label68 DS    0D
00001390 0000000000000514                   1973          DC AD(@L69-@REGION_789_1)
00001398 00000000000004F0                   1974          DC AD(@L68-@REGION_789_1)
000013A0 00000000000004C4                   1975          DC AD(@L67-@REGION_789_1)
000013A8 0000000000000498                   1976          DC AD(@L66-@REGION_789_1)
000013B0 0000000000000120                   1977          DC AD(@L56-@REGION_789_1)
000013B8 0000000000000210                   1978          DC AD(@L59-@REGION_789_1)
000013C0 0000000000000320                   1979          DC AD(@L62-@REGION_789_1)
000013C8 0000000000000450                   1980          DC AD(@L65-@REGION_789_1)
000013D0 00000000000000D8                   1981          DC AD(@L55-@REGION_789_1)
000013D8 00000000000001C8                   1982          DC AD(@L58-@REGION_789_1)
000013E0 00000000000002D8                   1983          DC AD(@L61-@REGION_789_1)
000013E8 0000000000000408                   1984          DC AD(@L64-@REGION_789_1)
000013F0 0000000000000090                   1985          DC AD(@L54-@REGION_789_1)
000013F8 0000000000000180                   1986          DC AD(@L57-@REGION_789_1)
00001400 0000000000000290                   1987          DC AD(@L60-@REGION_789_1)
00001408 00000000000003C0                   1988          DC AD(@L63-@REGION_789_1)
00001410                                    1989 @L53     DS    0H
                                            1990 * ***       ((0) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdka\
                                            1991 * fka\\src\\rdxxhash.c", 346, "0"));
00001410 E3F0 C068 0004          00000E98   1992          LG    15,@lit_789_30
00001416 41F0 F05C               0000005C   1993          LA    15,92(0,15)
0000141A E3F0 D0B0 0024          000000B0   1994          STG   15,176(0,13)
00001420 E3F0 C088 0004          00000EB8   1995          LG    15,@lit_789_63
00001426 4110 F022               00000022   1996          LA    1,34(0,15)
0000142A E310 D0B8 0024          000000B8   1997          STG   1,184(0,13)
00001430 E548 D0C0 015A          000000C0   1998          MVGHI 192(13),346
00001436 41F0 F048               00000048   1999          LA    15,72(0,15)
0000143A E3F0 D0C8 0024          000000C8   2000          STG   15,200(0,13)
00001440 4110 D0B0               000000B0   2001          LA    1,176(0,13)
00001444 E3F0 C080 0004          00000EB0   2002          LG    15,@lit_789_64 ; __assert
0000144A                                    2003 @@gen_label69 DS    0H
0000144A 05EF                               2004          BALR  14,15
0000144C                                    2005 @@gen_label70 DS    0H
                                                                                                                           Page   43 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2006 * ***       return h32;
0000144C B916 00F3                          2007          LLGFR 15,3
                                            2008 * ***   }
00001450                                    2009 @ret_lab_789 DS 0H
                                            2010 * * **** Start of Epilogue
                                            2011          DCCEPIL
00001450                                    2012+         ds 0h                                                          01-DCCEP
                                            2013+* Epilog
00001450 D707 D088 D088 00000088 00000088   2014+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001456 E3D0 D080 0004          00000080   2015+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000145C E3C0 D090 0004          00000090   2016+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001462 E3B0 C018 0004          00000018   2017+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001468 E3C0 B010 0021          00000010   2018+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000146E E3E0 D008 0004          00000008   2019+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001474 EB1C D020 0004          00000020   2020+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000147A 078E                               2021+         bcr 8,14                if same dsab, just return              01-DCCEP
0000147C E3F0 D010 0024          00000010   2022+         stg 15,16(0,13)         save return code                       01-DCCEP
00001482 E300 D018 0024          00000018   2023+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001488 E3F0 D090 0004          00000090   2024+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000148E E3F0 F018 0004          00000018   2025+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001494 47F0 F040               00000040   2026+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2027+* End of Epilog
                                            2028 * * **** End of Epilogue
                                            2029          DROP  12
                                            2030 *
                                            2031 *   DSECT for automatic variables in "XXH32_finalize"
                                            2032 *      (FUNCTION #789)
                                            2033 *
00000000                00000000 000000A8   2034 @AUTO#$X$X$H32_finalize DSECT
00000000                                    2035          DS    XL168
                                            2036 *
00001498                00000000 000059C8   2037 @CODE    CSECT
                                            2038 *
                                            2039 *
                                            2040 *
                                            2041 * ....... start of XXH32_endian_align
00001498                                    2042 @LNAME790 DS   0H
00001498 00000012                           2043          DC    X'00000012'
0000149C E7E7C8F3F26D8595                   2044          DC    C'XXH32_endian_align'
000014AE 00                                 2045          DC    X'00'
                                            2046 $X$X$H32_endian_align DCCPRLG CINDEX=790,BASER=12,FRAME=216,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME790
                                            2047          macro
                                            2048          dccextrn &m
                                            2049          gblc    &$dccext(1000)
                                            2050          gbla    &$dccexti
                                            2051          lcla    &i
                                            2052 &$dccext(&$dccexti+1) setc    '&m'
                                            2053 &i       seta    1
                                            2054 .loop    aif    (&i gt &$dccexti).around
                                            2055          aif    ('&$dccext(&i)' eq '&m').getout
                                            2056 &i       seta    &i+1
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2057          ago     .loop
                                            2058 .around  anop
                                            2059 &$dccexti seta &$dccexti+1
                                            2060          extrn  &m
                                            2061 .getout  anop
                                            2062          mend
000014B0                                    2063+$eye0047    ds    0d                                                    02-DCCCA
000014B0 C4C3C3                             2064+         dc cl3'DCC'                                                    02-DCCCA
000014B3 01                                 2065+         dc xl1'01' format one                                          02-DCCCA
000014B4 00000000                           2066+         dc a(0)                                                        02-DCCCA
000014B8 0000000000001522                   2067+         dc ad(@PER_790)                                                02-DCCCA
000014C0 00000000000000D8                   2068+         dc ad(216)                                                     02-DCCCA
000014C8 0000000000000000                   2069+         dc ad(0)                                                       02-DCCCA
000014D0 0000000000001000                   2070+         dc ad(4096)                                                    02-DCCCA
000014D8 20                                 2071+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000014D9 03                                 2072+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000014DA 03                                 2073+         dc al1(3)                                                      02-DCCCA
000014DB 08                                 2074+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000014DC 00                                 2075+         dc bl.8'00000000'                                              02-DCCCA
000014DD 000000                             2076+         dc al3(0)                                                      02-DCCCA
000014E0 0000000000001498                   2077+         dc ad(@LNAME790)                                               02-DCCCA
000014E8                                    2078+         ds 0d                                                          02-DCCCA
000014E8 00000000000014B0                   2079+         dc ad($eye0047)                                                02-DCCCA
000014F0 0000000000000000                   2080+         dc ad(0)                                                       02-DCCCA
000014F8                                    2081+         ds    0d                                                       01-DCCPR
000014F8                                    2082+$X$X$H32_endian_align ds 0d                                             01-DCCPR
000014F8                                    2083+@REGION_790_1 ds 0h                                                     01-DCCPR
000014F8 EBEC D008 0024          00000008   2084+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000014FE E3E0 D088 0004          00000088   2085+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001504 E3C0 D090 0004          00000090   2086+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000150A B904 002E                          2087+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000150E E3B0 C018 0004          00000018   2088+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001514 A7EB 00D8               000000D8   2089+         aghi  14,216              increase by frame size               01-DCCPR
00001518 E3E0 C020 0021          00000020   2090+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000151E 4720 B020               00000020   2091+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001522                                    2092+@PER_790 ds    0h                                                       01-DCCPR
00001522 EBDE 2080 0024          00000080   2093+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001528 E3C0 2090 0024          00000090   2094+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000152E B904 00D2                          2095+         lgr   13,2                set real frame pointer               01-DCCPR
00001532 B904 00CF                          2096+         lgr   12,15               set base reg                         01-DCCPR
                        000014F8            2097+         using @REGION_790_1,12                                         01-DCCPR
                                            2098 * ******* End of Prologue
                                            2099 * *
                                            2100 * ***       const BYTE* p = (const BYTE*)input;
00001536 E370 1008 0004          00000008   2101          LG    7,8(0,1)    ; len
0000153C 5850 1014               00000014   2102          L     5,20(0,1)   ; seed
00001540 5880 101C               0000001C   2103          L     8,28(0,1)   ; endian
00001544 5890 1024               00000024   2104          L     9,36(0,1)   ; align
00001548 E320 1000 0004          00000000   2105          LG    2,0(0,1)    ; input
                                            2106 * ***       const BYTE* bEnd = p + len;
0000154E 41F7 2000               00000000   2107          LA    15,0(7,2)
                                            2108 * ***       U32 h32;
                                                                                                                           Page   45 
  Active Usings: @REGION_790_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2109 * ***
                                            2110 * ***
                                            2111 * ***   # 366 "C:\asgkafka\librdkafka\src\rdxxhash.c"
                                            2112 * ***       if (len>=16) {
00001552 C27E 0000 0010                     2113          CLGFI 7,X'00000010'
00001558 4740 C230               00001728   2114          BL    @L70
                                            2115 * ***           const BYTE* const limit = bEnd - 15;
0000155C A719 FFF1               0000FFF1   2116          LGHI  1,-15       ; -15
00001560 41A1 F000               00000000   2117          LA    10,0(1,15)
                                            2118 * ***           U32 v1 = seed + PRIME32_1 + PRIME32_2;
00001564 E3F0 C208 0004          00001700   2119          LG    15,@lit_790_67
0000156A 1835                               2120          LR    3,5
0000156C 5E30 F048               00000048   2121          AL    3,72(0,15)
00001570 5E30 F04C               0000004C   2122          AL    3,76(0,15)
                                            2123 * ***           U32 v2 = seed + PRIME32_2;
00001574 1845                               2124          LR    4,5
00001576 5E40 F04C               0000004C   2125          AL    4,76(0,15)
                                            2126 * ***           U32 v3 = seed + 0;
                                            2127 * ***           U32 v4 = seed - PRIME32_1;
0000157A 1865                               2128          LR    6,5
0000157C 5F60 F048               00000048   2129          SL    6,72(0,15)
                                            2130 * ***
                                            2131 * ***           do {
00001580                                    2132 @L71     DS    0H
                                            2133 * ***               v1 = XXH32_round(v1, XXH_readLE32_align(p, endian,\
                                            2134 *  align)); p+=4;
00001580 E320 D0B0 0024          000000B0   2135          STG   2,176(0,13)
00001586 B914 00F8                          2136          LGFR  15,8
0000158A E3F0 D0B8 0024          000000B8   2137          STG   15,184(0,13)
00001590 B914 00F9                          2138          LGFR  15,9
00001594 E3F0 D0C0 0024          000000C0   2139          STG   15,192(0,13)
0000159A 4110 D0B0               000000B0   2140          LA    1,176(0,13)
0000159E E3B0 C210 0004          00001708   2141          LG    11,@lit_790_68 ; XXH_readLE32_align
000015A4 B904 00FB                          2142          LGR   15,11
000015A8                                    2143 @@gen_label72 DS    0H
000015A8 05EF                               2144          BALR  14,15
000015AA                                    2145 @@gen_label73 DS    0H
000015AA B916 0013                          2146          LLGFR 1,3
000015AE E310 D0B0 0024          000000B0   2147          STG   1,176(0,13)
000015B4 B916 00FF                          2148          LLGFR 15,15
000015B8 E3F0 D0B8 0024          000000B8   2149          STG   15,184(0,13)
000015BE 4110 D0B0               000000B0   2150          LA    1,176(0,13)
000015C2 E3F0 C218 0004          00001710   2151          LG    15,@lit_790_79 ; XXH32_round
000015C8                                    2152 @@gen_label74 DS    0H
000015C8 05EF                               2153          BALR  14,15
000015CA                                    2154 @@gen_label75 DS    0H
000015CA 183F                               2155          LR    3,15        ; v1
000015CC 4120 2004               00000004   2156          LA    2,4(0,2)
                                            2157 * ***               v2 = XXH32_round(v2, XXH_readLE32_align(p, endian,\
                                            2158 *  align)); p+=4;
000015D0 E320 D0B0 0024          000000B0   2159          STG   2,176(0,13)
000015D6 B914 00F8                          2160          LGFR  15,8
                                                                                                                           Page   46 
  Active Usings: @REGION_790_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000015DA E3F0 D0B8 0024          000000B8   2161          STG   15,184(0,13)
000015E0 B914 00F9                          2162          LGFR  15,9
000015E4 E3F0 D0C0 0024          000000C0   2163          STG   15,192(0,13)
000015EA 4110 D0B0               000000B0   2164          LA    1,176(0,13)
000015EE B904 00FB                          2165          LGR   15,11
000015F2                                    2166 @@gen_label76 DS    0H
000015F2 05EF                               2167          BALR  14,15
000015F4                                    2168 @@gen_label77 DS    0H
000015F4 B916 0014                          2169          LLGFR 1,4
000015F8 E310 D0B0 0024          000000B0   2170          STG   1,176(0,13)
000015FE B916 00FF                          2171          LLGFR 15,15
00001602 E3F0 D0B8 0024          000000B8   2172          STG   15,184(0,13)
00001608 4110 D0B0               000000B0   2173          LA    1,176(0,13)
0000160C E3F0 C218 0004          00001710   2174          LG    15,@lit_790_79 ; XXH32_round
00001612                                    2175 @@gen_label78 DS    0H
00001612 05EF                               2176          BALR  14,15
00001614                                    2177 @@gen_label79 DS    0H
00001614 184F                               2178          LR    4,15        ; v2
00001616 4120 2004               00000004   2179          LA    2,4(0,2)
                                            2180 * ***               v3 = XXH32_round(v3, XXH_readLE32_align(p, endian,\
                                            2181 *  align)); p+=4;
0000161A E320 D0B0 0024          000000B0   2182          STG   2,176(0,13)
00001620 B914 00F8                          2183          LGFR  15,8
00001624 E3F0 D0B8 0024          000000B8   2184          STG   15,184(0,13)
0000162A B914 00F9                          2185          LGFR  15,9
0000162E E3F0 D0C0 0024          000000C0   2186          STG   15,192(0,13)
00001634 4110 D0B0               000000B0   2187          LA    1,176(0,13)
00001638 B904 00FB                          2188          LGR   15,11
0000163C                                    2189 @@gen_label80 DS    0H
0000163C 05EF                               2190          BALR  14,15
0000163E                                    2191 @@gen_label81 DS    0H
0000163E B916 0015                          2192          LLGFR 1,5
00001642 E310 D0B0 0024          000000B0   2193          STG   1,176(0,13)
00001648 B916 00FF                          2194          LLGFR 15,15
0000164C E3F0 D0B8 0024          000000B8   2195          STG   15,184(0,13)
00001652 4110 D0B0               000000B0   2196          LA    1,176(0,13)
00001656 E3F0 C218 0004          00001710   2197          LG    15,@lit_790_79 ; XXH32_round
0000165C                                    2198 @@gen_label82 DS    0H
0000165C 05EF                               2199          BALR  14,15
0000165E                                    2200 @@gen_label83 DS    0H
0000165E 185F                               2201          LR    5,15        ; v3
00001660 4120 2004               00000004   2202          LA    2,4(0,2)
                                            2203 * ***               v4 = XXH32_round(v4, XXH_readLE32_align(p, endian,\
                                            2204 *  align)); p+=4;
00001664 E320 D0B0 0024          000000B0   2205          STG   2,176(0,13)
0000166A B914 00F8                          2206          LGFR  15,8
0000166E E3F0 D0B8 0024          000000B8   2207          STG   15,184(0,13)
00001674 B914 00F9                          2208          LGFR  15,9
00001678 E3F0 D0C0 0024          000000C0   2209          STG   15,192(0,13)
0000167E 4110 D0B0               000000B0   2210          LA    1,176(0,13)
00001682 B904 00FB                          2211          LGR   15,11
00001686                                    2212 @@gen_label84 DS    0H
                                                                                                                           Page   47 
  Active Usings: @REGION_790_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001686 05EF                               2213          BALR  14,15
00001688                                    2214 @@gen_label85 DS    0H
00001688 B916 0016                          2215          LLGFR 1,6
0000168C E310 D0B0 0024          000000B0   2216          STG   1,176(0,13)
00001692 B916 00FF                          2217          LLGFR 15,15
00001696 E3F0 D0B8 0024          000000B8   2218          STG   15,184(0,13)
0000169C 4110 D0B0               000000B0   2219          LA    1,176(0,13)
000016A0 E3F0 C218 0004          00001710   2220          LG    15,@lit_790_79 ; XXH32_round
000016A6                                    2221 @@gen_label86 DS    0H
000016A6 05EF                               2222          BALR  14,15
000016A8                                    2223 @@gen_label87 DS    0H
000016A8 186F                               2224          LR    6,15        ; v4
000016AA 4120 2004               00000004   2225          LA    2,4(0,2)
                                            2226 * ***           } while (p < limit);
000016AE B920 002A                          2227          CGR   2,10
000016B2 4740 C088               00001580   2228          BL    @L71
                                            2229 * ***
                                            2230 * ***           h32 = ((v1 << 1) | (v1 >> (32 - 1)))  + ((v2 << 7) | (\
                                            2231 * v2 >> (32 - 7)))
                                            2232 * ***               + ((v3 << 12) | (v3 >> (32 - 12))) + ((v4 << 18) |\
                                            2233 *  (v4 >> (32 - 18)));
000016B6 18F3                               2234          LR    15,3
000016B8 89F0 0001               00000001   2235          SLL   15,1(0)
000016BC 8830 001F               0000001F   2236          SRL   3,31(0)
000016C0 16F3                               2237          OR    15,3
000016C2 1814                               2238          LR    1,4
000016C4 8910 0007               00000007   2239          SLL   1,7(0)
000016C8 8840 0019               00000019   2240          SRL   4,25(0)
000016CC 1614                               2241          OR    1,4
000016CE 1EF1                               2242          ALR   15,1
000016D0 1815                               2243          LR    1,5
000016D2 8910 000C               0000000C   2244          SLL   1,12(0)
000016D6 8850 0014               00000014   2245          SRL   5,20(0)
000016DA 1615                               2246          OR    1,5
000016DC 1EF1                               2247          ALR   15,1
000016DE 1816                               2248          LR    1,6
000016E0 8910 0012               00000012   2249          SLL   1,18(0)
000016E4 8860 000E               0000000E   2250          SRL   6,14(0)
000016E8 1616                               2251          OR    1,6
000016EA 1EF1                               2252          ALR   15,1
000016EC 185F                               2253          LR    5,15        ; h32
                                            2254 * ***       } else {
000016EE 47F0 C23A               00001732   2255          B     @L74
000016F8                                    2256          DS    0D
000016F8 000000D8                           2257 @FRAMESIZE_790 DC F'216'
000016FC 00000000
00001700 00000000000059C8                   2258 @lit_790_67 DC AD(@DATA)
00001708 0000000000000848                   2259 @lit_790_68 DC AD($X$X$H_read$L$E32_align)
00001710 0000000000000CD8                   2260 @lit_790_79 DC AD($X$X$H32_round)
00001718 0000000000000E30                   2261 @lit_790_78 DC AD($X$X$H32_finalize)
00001720 000000000000000F                   2262 @lit_790_77 DC FD'15' 0x000000000000000f
00001728                                    2263 @L70     DS    0H
                                                                                                                           Page   48 
  Active Usings: @REGION_790_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2264 * ***           h32  = seed + PRIME32_5;
00001728 E3F0 C208 0004          00001700   2265          LG    15,@lit_790_67
0000172E 5E50 F058               00000058   2266          AL    5,88(0,15)
                                            2267 * ***       }
00001732                                    2268 @L74     DS    0H
                                            2269 * ***
                                            2270 * ***       h32 += (U32)len;
00001732 1E57                               2271          ALR   5,7
                                            2272 * ***
                                            2273 * ***       return XXH32_finalize(h32, p, len&15, endian, align);
00001734 B916 00F5                          2274          LLGFR 15,5
00001738 E3F0 D0B0 0024          000000B0   2275          STG   15,176(0,13)
0000173E E320 D0B8 0024          000000B8   2276          STG   2,184(0,13)
00001744 E370 C228 0080          00001720   2277          NG    7,@lit_790_77
0000174A E370 D0C0 0024          000000C0   2278          STG   7,192(0,13)
00001750 B914 00F8                          2279          LGFR  15,8
00001754 E3F0 D0C8 0024          000000C8   2280          STG   15,200(0,13)
0000175A B914 00F9                          2281          LGFR  15,9
0000175E E3F0 D0D0 0024          000000D0   2282          STG   15,208(0,13)
00001764 4110 D0B0               000000B0   2283          LA    1,176(0,13)
00001768 E3F0 C220 0004          00001718   2284          LG    15,@lit_790_78 ; XXH32_finalize
0000176E                                    2285 @@gen_label89 DS    0H
0000176E 05EF                               2286          BALR  14,15
00001770                                    2287 @@gen_label90 DS    0H
00001770 B916 00FF                          2288          LLGFR 15,15
                                            2289 * ***   }
                                            2290 * * **** Start of Epilogue
                                            2291          DCCEPIL
00001774                                    2292+         ds 0h                                                          01-DCCEP
                                            2293+* Epilog
00001774 D707 D088 D088 00000088 00000088   2294+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000177A E3D0 D080 0004          00000080   2295+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001780 E3C0 D090 0004          00000090   2296+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001786 E3B0 C018 0004          00000018   2297+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000178C E3C0 B010 0021          00000010   2298+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001792 E3E0 D008 0004          00000008   2299+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001798 EB1C D020 0004          00000020   2300+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000179E 078E                               2301+         bcr 8,14                if same dsab, just return              01-DCCEP
000017A0 E3F0 D010 0024          00000010   2302+         stg 15,16(0,13)         save return code                       01-DCCEP
000017A6 E300 D018 0024          00000018   2303+         stg 0,24(0,13)          save more return code                  01-DCCEP
000017AC E3F0 D090 0004          00000090   2304+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000017B2 E3F0 F018 0004          00000018   2305+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000017B8 47F0 F040               00000040   2306+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2307+* End of Epilog
                                            2308 * * **** End of Epilogue
                                            2309          DROP  12
                                            2310 *
                                            2311 *   DSECT for automatic variables in "XXH32_endian_align"
                                            2312 *      (FUNCTION #790)
                                            2313 *
00000000                00000000 000000AC   2314 @AUTO#$X$X$H32_endian_align DSECT
00000000                                    2315          DS    XL168
                                                                                                                           Page   49 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                    2316 $X$X$H32_endian_align#v4#1 DS 1F ; v4
000000AC                000000AC 000000A8   2317          ORG   @AUTO#$X$X$H32_endian_align+168
000000A8                                    2318 $X$X$H32_endian_align#v3#1 DS 1F ; v3
000000AC                000000AC 000000A8   2319          ORG   @AUTO#$X$X$H32_endian_align+168
000000A8                                    2320 $X$X$H32_endian_align#v2#1 DS 1F ; v2
000000AC                000000AC 000000A8   2321          ORG   @AUTO#$X$X$H32_endian_align+168
000000A8                                    2322 $X$X$H32_endian_align#v1#1 DS 1F ; v1
000000AC                000000AC 000000A8   2323          ORG   @AUTO#$X$X$H32_endian_align+168
000000A8                                    2324 $X$X$H32_endian_align#h32#0 DS 1F ; h32
                                            2325 *
000017BC                00000000 000059C8   2326 @CODE    CSECT
                                            2327 *
                                            2328 *
                                            2329 *
                                            2330 * ....... start of XXH32
                                            2331 $X$X$H32 ALIAS C'XXH32'
000017BC                                    2332 @LNAME763 DS   0H
000017BC 00000005                           2333          DC    X'00000005'
000017C0 E7E7C8F3F2                         2334          DC    C'XXH32'
000017C5 00                                 2335          DC    X'00'
                                            2336 $X$X$H32 DCCPRLG CINDEX=763,BASER=12,FRAME=216,ENTRY=YES,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME763
                                            2337          macro
                                            2338          dccextrn &m
                                            2339          gblc    &$dccext(1000)
                                            2340          gbla    &$dccexti
                                            2341          lcla    &i
                                            2342 &$dccext(&$dccexti+1) setc    '&m'
                                            2343 &i       seta    1
                                            2344 .loop    aif    (&i gt &$dccexti).around
                                            2345          aif    ('&$dccext(&i)' eq '&m').getout
                                            2346 &i       seta    &i+1
                                            2347          ago     .loop
                                            2348 .around  anop
                                            2349 &$dccexti seta &$dccexti+1
                                            2350          extrn  &m
                                            2351 .getout  anop
                                            2352          mend
000017C8                                    2353+$eye0050    ds    0d                                                    02-DCCCA
000017C8 C4C3C3                             2354+         dc cl3'DCC'                                                    02-DCCCA
000017CB 01                                 2355+         dc xl1'01' format one                                          02-DCCCA
000017CC 00000000                           2356+         dc a(0)                                                        02-DCCCA
000017D0 000000000000183A                   2357+         dc ad(@PER_763)                                                02-DCCCA
000017D8 00000000000000D8                   2358+         dc ad(216)                                                     02-DCCCA
000017E0 0000000000000000                   2359+         dc ad(0)                                                       02-DCCCA
000017E8 0000000000001000                   2360+         dc ad(4096)                                                    02-DCCCA
000017F0 20                                 2361+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000017F1 03                                 2362+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000017F2 03                                 2363+         dc al1(3)                                                      02-DCCCA
000017F3 08                                 2364+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000017F4 00                                 2365+         dc bl.8'00000000'                                              02-DCCCA
000017F5 000000                             2366+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000017F8 00000000000017BC                   2367+         dc ad(@LNAME763)                                               02-DCCCA
00001800                                    2368+         ds 0d                                                          02-DCCCA
00001800 00000000000017C8                   2369+         dc ad($eye0050)                                                02-DCCCA
00001808 0000000000000000                   2370+         dc ad(0)                                                       02-DCCCA
00001810                                    2371+         ds    0d                                                       01-DCCPR
                                            2372+         entry $X$X$H32                                                 01-DCCPR
00001810                                    2373+$X$X$H32 ds    0d                                                       01-DCCPR
00001810                                    2374+@REGION_763_1 ds 0h                                                     01-DCCPR
00001810 EBEC D008 0024          00000008   2375+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001816 E3E0 D088 0004          00000088   2376+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000181C E3C0 D090 0004          00000090   2377+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001822 B904 002E                          2378+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001826 E3B0 C018 0004          00000018   2379+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000182C A7EB 00D8               000000D8   2380+         aghi  14,216              increase by frame size               01-DCCPR
00001830 E3E0 C020 0021          00000020   2381+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001836 4720 B020               00000020   2382+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000183A                                    2383+@PER_763 ds    0h                                                       01-DCCPR
0000183A EBDE 2080 0024          00000080   2384+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001840 E3C0 2090 0024          00000090   2385+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001846 B904 00D2                          2386+         lgr   13,2                set real frame pointer               01-DCCPR
0000184A B904 00CF                          2387+         lgr   12,15               set base reg                         01-DCCPR
                        00001810            2388+         using @REGION_763_1,12                                         01-DCCPR
                                            2389 * ******* End of Prologue
                                            2390 * *
0000184E EB23 1000 0004          00000000   2391          LMG   2,3,0(1)    ; input
00001854 5840 1014               00000014   2392          L     4,20(0,1)   ; seed
                                            2393 * ***   # 401 "C:\asgkafka\librdkafka\src\rdxxhash.c"
                                            2394 * ***       XXH_endianess endian_detected = (XXH_endianess)XXH_isLittl\
                                            2395 * eEndian();
00001858 E3F0 C0A8 0004          000018B8   2396          LG    15,@lit_763_84 ; XXH_isLittleEndian
0000185E                                    2397 @@gen_label91 DS    0H
0000185E 05EF                               2398          BALR  14,15
00001860                                    2399 @@gen_label92 DS    0H
                                            2400 * ***
                                            2401 * ***       if (1) {
                                            2402 * ***           if ((((size_t)input) & 3) == 0) {
00001860 B904 0012                          2403          LGR   1,2
00001864 E310 C0B0 0080          000018C0   2404          NG    1,@lit_763_85
0000186A B902 0011                          2405          LTGR  1,1
0000186E 4770 C0EA               000018FA   2406          BNE   @L75
                                            2407 * ***               if ((endian_detected==XXH_littleEndian) || 0)
00001872 A7FE 0001               00000001   2408          CHI   15,1
00001876 4770 C0C0               000018D0   2409          BNE   @L77
0000187A                                    2410 @L78     DS    0H
                                            2411 * ***                   return XXH32_endian_align(input, len, seed, XX\
                                            2412 * H_littleEndian, XXH_aligned);
0000187A EB23 D0B0 0024          000000B0   2413          STMG  2,3,176(13)
00001880 B916 00F4                          2414          LLGFR 15,4
00001884 E3F0 D0C0 0024          000000C0   2415          STG   15,192(0,13)
0000188A E548 D0C8 0001          000000C8   2416          MVGHI 200(13),1
00001890 D707 D0D0 D0D0 000000D0 000000D0   2417          XC    208(8,13),208(13)
00001896 4110 D0B0               000000B0   2418          LA    1,176(0,13)
                                                                                                                           Page   51 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000189A E3F0 C0B8 0004          000018C8   2419          LG    15,@lit_763_86 ; XXH32_endian_align
000018A0                                    2420 @@gen_label95 DS    0H
000018A0 05EF                               2421          BALR  14,15
000018A2                                    2422 @@gen_label96 DS    0H
000018A2 B916 00FF                          2423          LLGFR 15,15
000018A6 47F0 C14E               0000195E   2424          B     @ret_lab_763
000018B0                                    2425          DS    0D
000018B0 000000D8                           2426 @FRAMESIZE_763 DC F'216'
000018B4 00000000
000018B8 0000000000000748                   2427 @lit_763_84 DC AD($X$X$H_is$Little$Endian)
000018C0 0000000000000003                   2428 @lit_763_85 DC FD'3' 0x0000000000000003
000018C8 00000000000014F8                   2429 @lit_763_86 DC AD($X$X$H32_endian_align)
                                            2430 * ***               else
000018D0                                    2431 @L77     DS    0H
                                            2432 * ***                   return XXH32_endian_align(input, len, seed, XX\
                                            2433 * H_bigEndian, XXH_aligned);
000018D0 EB23 D0B0 0024          000000B0   2434          STMG  2,3,176(13)
000018D6 B916 00F4                          2435          LLGFR 15,4
000018DA E3F0 D0C0 0024          000000C0   2436          STG   15,192(0,13)
000018E0 D70F D0C8 D0C8 000000C8 000000C8   2437          XC    200(16,13),200(13)
000018E6 4110 D0B0               000000B0   2438          LA    1,176(0,13)
000018EA E3F0 C0B8 0004          000018C8   2439          LG    15,@lit_763_86 ; XXH32_endian_align
000018F0                                    2440 @@gen_label97 DS    0H
000018F0 05EF                               2441          BALR  14,15
000018F2                                    2442 @@gen_label98 DS    0H
000018F2 B916 00FF                          2443          LLGFR 15,15
000018F6 47F0 C14E               0000195E   2444          B     @ret_lab_763
                                            2445 * ***       }   }
000018FA                                    2446 @L75     DS    0H
                                            2447 * ***
                                            2448 * ***       if ((endian_detected==XXH_littleEndian) || 0)
000018FA A7FE 0001               00000001   2449          CHI   15,1
000018FE 4770 C122               00001932   2450          BNE   @L80
00001902                                    2451 @L81     DS    0H
                                            2452 * ***           return XXH32_endian_align(input, len, seed, XXH_little\
                                            2453 * Endian, XXH_unaligned);
00001902 EB23 D0B0 0024          000000B0   2454          STMG  2,3,176(13)
00001908 B916 00F4                          2455          LLGFR 15,4
0000190C E3F0 D0C0 0024          000000C0   2456          STG   15,192(0,13)
00001912 E548 D0C8 0001          000000C8   2457          MVGHI 200(13),1
00001918 E548 D0D0 0001          000000D0   2458          MVGHI 208(13),1
0000191E 4110 D0B0               000000B0   2459          LA    1,176(0,13)
00001922 E3F0 C0B8 0004          000018C8   2460          LG    15,@lit_763_86 ; XXH32_endian_align
00001928                                    2461 @@gen_label100 DS    0H
00001928 05EF                               2462          BALR  14,15
0000192A                                    2463 @@gen_label101 DS    0H
0000192A B916 00FF                          2464          LLGFR 15,15
0000192E 47F0 C14E               0000195E   2465          B     @ret_lab_763
                                            2466 * ***       else
00001932                                    2467 @L80     DS    0H
                                            2468 * ***           return XXH32_endian_align(input, len, seed, XXH_bigEnd\
                                            2469 * ian, XXH_unaligned);
                                                                                                                           Page   52 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001932 EB23 D0B0 0024          000000B0   2470          STMG  2,3,176(13)
00001938 B916 00F4                          2471          LLGFR 15,4
0000193C E3F0 D0C0 0024          000000C0   2472          STG   15,192(0,13)
00001942 D707 D0C8 D0C8 000000C8 000000C8   2473          XC    200(8,13),200(13)
00001948 E548 D0D0 0001          000000D0   2474          MVGHI 208(13),1
0000194E 4110 D0B0               000000B0   2475          LA    1,176(0,13)
00001952 E3F0 C0B8 0004          000018C8   2476          LG    15,@lit_763_86 ; XXH32_endian_align
00001958                                    2477 @@gen_label102 DS    0H
00001958 05EF                               2478          BALR  14,15
0000195A                                    2479 @@gen_label103 DS    0H
0000195A B916 00FF                          2480          LLGFR 15,15
                                            2481 * ***
                                            2482 * ***   }
0000195E                                    2483 @ret_lab_763 DS 0H
                                            2484 * * **** Start of Epilogue
                                            2485          DCCEPIL
0000195E                                    2486+         ds 0h                                                          01-DCCEP
                                            2487+* Epilog
0000195E D707 D088 D088 00000088 00000088   2488+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001964 E3D0 D080 0004          00000080   2489+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000196A E3C0 D090 0004          00000090   2490+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001970 E3B0 C018 0004          00000018   2491+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001976 E3C0 B010 0021          00000010   2492+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000197C E3E0 D008 0004          00000008   2493+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001982 EB1C D020 0004          00000020   2494+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001988 078E                               2495+         bcr 8,14                if same dsab, just return              01-DCCEP
0000198A E3F0 D010 0024          00000010   2496+         stg 15,16(0,13)         save return code                       01-DCCEP
00001990 E300 D018 0024          00000018   2497+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001996 E3F0 D090 0004          00000090   2498+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000199C E3F0 F018 0004          00000018   2499+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000019A2 47F0 F040               00000040   2500+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2501+* End of Epilog
                                            2502 * * **** End of Epilogue
                                            2503          DROP  12
                                            2504 *
                                            2505 *   DSECT for automatic variables in "XXH32"
                                            2506 *      (FUNCTION #763)
                                            2507 *
00000000                00000000 000000AC   2508 @AUTO#$X$X$H32 DSECT
00000000                                    2509          DS    XL168
000000A8                                    2510 $X$X$H32#endian_detected#0 DS 1F ; endian_detected
                                            2511 *
000019A6                00000000 000059C8   2512 @CODE    CSECT
                                            2513 *
                                            2514 *
                                            2515 *
                                            2516 * ....... start of XXH32_createState
                                            2517 $X$X$H32_create$State ALIAS X'E7E7C8F3F26D83998581A385E2A381A385'
000019A6                                    2518 @LNAME764 DS   0H
000019A6 00000011                           2519          DC    X'00000011'
000019AA E7E7C8F3F26D8399                   2520          DC    C'XXH32_createState'
000019BB 00                                 2521          DC    X'00'
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2522 $X$X$H32_create$State DCCPRLG CINDEX=764,BASER=12,FRAME=176,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME764
                                            2523          macro
                                            2524          dccextrn &m
                                            2525          gblc    &$dccext(1000)
                                            2526          gbla    &$dccexti
                                            2527          lcla    &i
                                            2528 &$dccext(&$dccexti+1) setc    '&m'
                                            2529 &i       seta    1
                                            2530 .loop    aif    (&i gt &$dccexti).around
                                            2531          aif    ('&$dccext(&i)' eq '&m').getout
                                            2532 &i       seta    &i+1
                                            2533          ago     .loop
                                            2534 .around  anop
                                            2535 &$dccexti seta &$dccexti+1
                                            2536          extrn  &m
                                            2537 .getout  anop
                                            2538          mend
000019C0                                    2539+$eye0053    ds    0d                                                    02-DCCCA
000019C0 C4C3C3                             2540+         dc cl3'DCC'                                                    02-DCCCA
000019C3 01                                 2541+         dc xl1'01' format one                                          02-DCCCA
000019C4 00000000                           2542+         dc a(0)                                                        02-DCCCA
000019C8 0000000000001A32                   2543+         dc ad(@PER_764)                                                02-DCCCA
000019D0 00000000000000B0                   2544+         dc ad(176)                                                     02-DCCCA
000019D8 0000000000000000                   2545+         dc ad(0)                                                       02-DCCCA
000019E0 0000000000001000                   2546+         dc ad(4096)                                                    02-DCCCA
000019E8 20                                 2547+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000019E9 03                                 2548+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000019EA 03                                 2549+         dc al1(3)                                                      02-DCCCA
000019EB 08                                 2550+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000019EC 00                                 2551+         dc bl.8'00000000'                                              02-DCCCA
000019ED 000000                             2552+         dc al3(0)                                                      02-DCCCA
000019F0 00000000000019A6                   2553+         dc ad(@LNAME764)                                               02-DCCCA
000019F8                                    2554+         ds 0d                                                          02-DCCCA
000019F8 00000000000019C0                   2555+         dc ad($eye0053)                                                02-DCCCA
00001A00 0000000000000000                   2556+         dc ad(0)                                                       02-DCCCA
00001A08                                    2557+         ds    0d                                                       01-DCCPR
                                            2558+         entry $X$X$H32_create$State                                    01-DCCPR
00001A08                                    2559+$X$X$H32_create$State ds 0d                                             01-DCCPR
00001A08                                    2560+@REGION_764_1 ds 0h                                                     01-DCCPR
00001A08 EBEC D008 0024          00000008   2561+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001A0E E3E0 D088 0004          00000088   2562+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001A14 E3C0 D090 0004          00000090   2563+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001A1A B904 002E                          2564+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001A1E E3B0 C018 0004          00000018   2565+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001A24 A7EB 00B0               000000B0   2566+         aghi  14,176              increase by frame size               01-DCCPR
00001A28 E3E0 C020 0021          00000020   2567+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001A2E 4720 B020               00000020   2568+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001A32                                    2569+@PER_764 ds    0h                                                       01-DCCPR
00001A32 EBDE 2080 0024          00000080   2570+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001A38 E3C0 2090 0024          00000090   2571+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001A3E B904 00D2                          2572+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001A42 B904 00CF                          2573+         lgr   12,15               set base reg                         01-DCCPR
                        00001A08            2574+         using @REGION_764_1,12                                         01-DCCPR
                                            2575 * ******* End of Prologue
                                            2576 * *
                                            2577 * ***       return (XXH32_state_t*)XXH_malloc(sizeof(XXH32_state_t));
00001A46 E548 D0A8 0030          000000A8   2578          MVGHI 168(13),48
00001A4C 4110 D0A8               000000A8   2579          LA    1,168(0,13)
00001A50 E3F0 C0A0 0004          00001AA8   2580          LG    15,@lit_764_91 ; XXH_malloc
00001A56                                    2581 @@gen_label104 DS    0H
00001A56 05EF                               2582          BALR  14,15
00001A58                                    2583 @@gen_label105 DS    0H
                                            2584 * ***   }
                                            2585 * * **** Start of Epilogue
                                            2586          DCCEPIL
00001A58                                    2587+         ds 0h                                                          01-DCCEP
                                            2588+* Epilog
00001A58 D707 D088 D088 00000088 00000088   2589+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001A5E E3D0 D080 0004          00000080   2590+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001A64 E3C0 D090 0004          00000090   2591+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001A6A E3B0 C018 0004          00000018   2592+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001A70 E3C0 B010 0021          00000010   2593+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001A76 E3E0 D008 0004          00000008   2594+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001A7C EB1C D020 0004          00000020   2595+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001A82 078E                               2596+         bcr 8,14                if same dsab, just return              01-DCCEP
00001A84 E3F0 D010 0024          00000010   2597+         stg 15,16(0,13)         save return code                       01-DCCEP
00001A8A E300 D018 0024          00000018   2598+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001A90 E3F0 D090 0004          00000090   2599+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001A96 E3F0 F018 0004          00000018   2600+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001A9C 47F0 F040               00000040   2601+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2602+* End of Epilog
                                            2603 * * **** End of Epilogue
00001AA0                                    2604          DS    0D
00001AA0 000000B0                           2605 @FRAMESIZE_764 DC F'176'
00001AA4 00000000
00001AA8 00000000000002C8                   2606 @lit_764_91 DC AD($X$X$H_malloc)
                                            2607          DROP  12
                                            2608 *
                                            2609 *   DSECT for automatic variables in "XXH32_createState"
                                            2610 *      (FUNCTION #764)
                                            2611 *
00000000                00000000 000000A8   2612 @AUTO#$X$X$H32_create$State DSECT
00000000                                    2613          DS    XL168
                                            2614 *
00001AB0                00000000 000059C8   2615 @CODE    CSECT
                                            2616 *
                                            2617 *
                                            2618 *
                                            2619 * ....... start of XXH32_freeState
                                            2620 $X$X$H32_free$State ALIAS X'E7E7C8F3F26D86998585E2A381A385'
00001AB0                                    2621 @LNAME765 DS   0H
00001AB0 0000000F                           2622          DC    X'0000000F'
00001AB4 E7E7C8F3F26D8699                   2623          DC    C'XXH32_freeState'
                                                                                                                           Page   55 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001AC3 00                                 2624          DC    X'00'
                                            2625 $X$X$H32_free$State DCCPRLG CINDEX=765,BASER=12,FRAME=176,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME765
                                            2626          macro
                                            2627          dccextrn &m
                                            2628          gblc    &$dccext(1000)
                                            2629          gbla    &$dccexti
                                            2630          lcla    &i
                                            2631 &$dccext(&$dccexti+1) setc    '&m'
                                            2632 &i       seta    1
                                            2633 .loop    aif    (&i gt &$dccexti).around
                                            2634          aif    ('&$dccext(&i)' eq '&m').getout
                                            2635 &i       seta    &i+1
                                            2636          ago     .loop
                                            2637 .around  anop
                                            2638 &$dccexti seta &$dccexti+1
                                            2639          extrn  &m
                                            2640 .getout  anop
                                            2641          mend
00001AC8                                    2642+$eye0056    ds    0d                                                    02-DCCCA
00001AC8 C4C3C3                             2643+         dc cl3'DCC'                                                    02-DCCCA
00001ACB 01                                 2644+         dc xl1'01' format one                                          02-DCCCA
00001ACC 00000000                           2645+         dc a(0)                                                        02-DCCCA
00001AD0 0000000000001B3A                   2646+         dc ad(@PER_765)                                                02-DCCCA
00001AD8 00000000000000B0                   2647+         dc ad(176)                                                     02-DCCCA
00001AE0 0000000000000000                   2648+         dc ad(0)                                                       02-DCCCA
00001AE8 0000000000001000                   2649+         dc ad(4096)                                                    02-DCCCA
00001AF0 20                                 2650+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001AF1 03                                 2651+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001AF2 03                                 2652+         dc al1(3)                                                      02-DCCCA
00001AF3 08                                 2653+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001AF4 00                                 2654+         dc bl.8'00000000'                                              02-DCCCA
00001AF5 000000                             2655+         dc al3(0)                                                      02-DCCCA
00001AF8 0000000000001AB0                   2656+         dc ad(@LNAME765)                                               02-DCCCA
00001B00                                    2657+         ds 0d                                                          02-DCCCA
00001B00 0000000000001AC8                   2658+         dc ad($eye0056)                                                02-DCCCA
00001B08 0000000000000000                   2659+         dc ad(0)                                                       02-DCCCA
00001B10                                    2660+         ds    0d                                                       01-DCCPR
                                            2661+         entry $X$X$H32_free$State                                      01-DCCPR
00001B10                                    2662+$X$X$H32_free$State ds 0d                                               01-DCCPR
00001B10                                    2663+@REGION_765_1 ds 0h                                                     01-DCCPR
00001B10 EBEC D008 0024          00000008   2664+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001B16 E3E0 D088 0004          00000088   2665+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001B1C E3C0 D090 0004          00000090   2666+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001B22 B904 002E                          2667+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001B26 E3B0 C018 0004          00000018   2668+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001B2C A7EB 00B0               000000B0   2669+         aghi  14,176              increase by frame size               01-DCCPR
00001B30 E3E0 C020 0021          00000020   2670+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001B36 4720 B020               00000020   2671+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001B3A                                    2672+@PER_765 ds    0h                                                       01-DCCPR
00001B3A EBDE 2080 0024          00000080   2673+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001B40 E3C0 2090 0024          00000090   2674+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   56 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001B46 B904 00D2                          2675+         lgr   13,2                set real frame pointer               01-DCCPR
00001B4A B904 00CF                          2676+         lgr   12,15               set base reg                         01-DCCPR
                        00001B10            2677+         using @REGION_765_1,12                                         01-DCCPR
                                            2678 * ******* End of Prologue
                                            2679 * *
                                            2680 * ***       XXH_free(statePtr);
00001B4E E3F0 1000 0004          00000000   2681          LG    15,0(0,1)   ; statePtr
00001B54 E3F0 D0A8 0024          000000A8   2682          STG   15,168(0,13)
00001B5A 4110 D0A8               000000A8   2683          LA    1,168(0,13)
00001B5E E3F0 C0B0 0004          00001BC0   2684          LG    15,@lit_765_93 ; XXH_free
00001B64                                    2685 @@gen_label106 DS    0H
00001B64 05EF                               2686          BALR  14,15
00001B66                                    2687 @@gen_label107 DS    0H
                                            2688 * ***       return XXH_OK;
00001B66 A7F9 0000               00000000   2689          LGHI  15,0        ; 0
                                            2690 * ***   }
                                            2691 * * **** Start of Epilogue
                                            2692          DCCEPIL
00001B6A                                    2693+         ds 0h                                                          01-DCCEP
                                            2694+* Epilog
00001B6A D707 D088 D088 00000088 00000088   2695+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001B70 E3D0 D080 0004          00000080   2696+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001B76 E3C0 D090 0004          00000090   2697+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001B7C E3B0 C018 0004          00000018   2698+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B82 E3C0 B010 0021          00000010   2699+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B88 E3E0 D008 0004          00000008   2700+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B8E EB1C D020 0004          00000020   2701+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B94 078E                               2702+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B96 E3F0 D010 0024          00000010   2703+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B9C E300 D018 0024          00000018   2704+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001BA2 E3F0 D090 0004          00000090   2705+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001BA8 E3F0 F018 0004          00000018   2706+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001BAE 47F0 F040               00000040   2707+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2708+* End of Epilog
                                            2709 * * **** End of Epilogue
00001BB8                                    2710          DS    0D
00001BB8 000000B0                           2711 @FRAMESIZE_765 DC F'176'
00001BBC 00000000
00001BC0 00000000000003D0                   2712 @lit_765_93 DC AD($X$X$H_free)
                                            2713          DROP  12
                                            2714 *
                                            2715 *   DSECT for automatic variables in "XXH32_freeState"
                                            2716 *      (FUNCTION #765)
                                            2717 *
00000000                00000000 000000A8   2718 @AUTO#$X$X$H32_free$State DSECT
00000000                                    2719          DS    XL168
                                            2720 *
00001BC8                00000000 000059C8   2721 @CODE    CSECT
                                            2722 *
                                            2723 *
                                            2724 *
                                            2725 * ....... start of XXH32_copyState
                                                                                                                           Page   57 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2726 $X$X$H32_copy$State ALIAS X'E7E7C8F3F26D839697A8E2A381A385'
00001BC8                                    2727 @LNAME766 DS   0H
00001BC8 0000000F                           2728          DC    X'0000000F'
00001BCC E7E7C8F3F26D8396                   2729          DC    C'XXH32_copyState'
00001BDB 00                                 2730          DC    X'00'
                                            2731 $X$X$H32_copy$State DCCPRLG CINDEX=766,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME766
                                            2732          macro
                                            2733          dccextrn &m
                                            2734          gblc    &$dccext(1000)
                                            2735          gbla    &$dccexti
                                            2736          lcla    &i
                                            2737 &$dccext(&$dccexti+1) setc    '&m'
                                            2738 &i       seta    1
                                            2739 .loop    aif    (&i gt &$dccexti).around
                                            2740          aif    ('&$dccext(&i)' eq '&m').getout
                                            2741 &i       seta    &i+1
                                            2742          ago     .loop
                                            2743 .around  anop
                                            2744 &$dccexti seta &$dccexti+1
                                            2745          extrn  &m
                                            2746 .getout  anop
                                            2747          mend
00001BE0                                    2748+$eye0059    ds    0d                                                    02-DCCCA
00001BE0 C4C3C3                             2749+         dc cl3'DCC'                                                    02-DCCCA
00001BE3 01                                 2750+         dc xl1'01' format one                                          02-DCCCA
00001BE4 00000000                           2751+         dc a(0)                                                        02-DCCCA
00001BE8 0000000000000000                   2752+         dc ad(0)                                                       02-DCCCA
00001BF0 00000000000000A8                   2753+         dc ad(168)                                                     02-DCCCA
00001BF8 0000000000000000                   2754+         dc ad(0)                                                       02-DCCCA
00001C00 0000000000001000                   2755+         dc ad(4096)                                                    02-DCCCA
00001C08 20                                 2756+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001C09 03                                 2757+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001C0A 03                                 2758+         dc al1(3)                                                      02-DCCCA
00001C0B 08                                 2759+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001C0C 00                                 2760+         dc bl.8'00000000'                                              02-DCCCA
00001C0D 000000                             2761+         dc al3(0)                                                      02-DCCCA
00001C10 0000000000001BC8                   2762+         dc ad(@LNAME766)                                               02-DCCCA
00001C18                                    2763+         ds 0d                                                          02-DCCCA
00001C18 0000000000001BE0                   2764+         dc ad($eye0059)                                                02-DCCCA
00001C20 0000000000000000                   2765+         dc ad(0)                                                       02-DCCCA
00001C28                                    2766+         ds    0d                                                       01-DCCPR
                                            2767+         entry $X$X$H32_copy$State                                      01-DCCPR
00001C28                                    2768+$X$X$H32_copy$State ds 0d                                               01-DCCPR
00001C28                                    2769+@REGION_766_1 ds 0h                                                     01-DCCPR
00001C28 EBEC D008 0024          00000008   2770+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2771 * ******* End of Prologue
                                            2772 * *
                                            2773 * ***       __memcpy(dstState,srcState,sizeof(*dstState));
00001C2E E3F0 1008 0004          00000008   2774          LG    15,8(0,1)
00001C34 E310 1000 0004          00000000   2775          LG    1,0(0,1)
00001C3A D22F 1000 F000 00000000 00000000   2776          MVC   0(48,1),0(15)
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2777 * ***   }
00001C40                                    2778 @ret_lab_766 DS 0H
                                            2779 * * **** Start of Epilogue
                                            2780          DCCEPIL
00001C40                                    2781+         ds 0h                                                          01-DCCEP
                                            2782+* Epilog
                                            2783+* Epilog
00001C40 E3E0 D008 0004          00000008   2784+         lg    14,8(,13) restore the reg                                01-DCCEP
00001C46 EB1C D020 0004          00000020   2785+         lmg   1,12,32(13)                                              01-DCCEP
00001C4C 07FE                               2786+         br   14                                                        01-DCCEP
                                            2787+* End of Epilog
                                            2788 * * **** End of Epilogue
                                            2789 *
                                            2790 *   DSECT for automatic variables in "XXH32_copyState"
                                            2791 *      (FUNCTION #766)
                                            2792 *
00000000                00000000 000000A8   2793 @AUTO#$X$X$H32_copy$State DSECT
00000000                                    2794          DS    XL168
                                            2795 *
00001C4E                00000000 000059C8   2796 @CODE    CSECT
                                            2797 *
                                            2798 *
                                            2799 *
                                            2800 * ....... start of XXH32_reset
                                            2801 $X$X$H32_reset ALIAS X'E7E7C8F3F26D9985A285A3'
00001C4E                                    2802 @LNAME767 DS   0H
00001C4E 0000000B                           2803          DC    X'0000000B'
00001C52 E7E7C8F3F26D9985                   2804          DC    C'XXH32_reset'
00001C5D 00                                 2805          DC    X'00'
                                            2806 $X$X$H32_reset DCCPRLG CINDEX=767,BASER=12,FRAME=216,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME767
                                            2807          macro
                                            2808          dccextrn &m
                                            2809          gblc    &$dccext(1000)
                                            2810          gbla    &$dccexti
                                            2811          lcla    &i
                                            2812 &$dccext(&$dccexti+1) setc    '&m'
                                            2813 &i       seta    1
                                            2814 .loop    aif    (&i gt &$dccexti).around
                                            2815          aif    ('&$dccext(&i)' eq '&m').getout
                                            2816 &i       seta    &i+1
                                            2817          ago     .loop
                                            2818 .around  anop
                                            2819 &$dccexti seta &$dccexti+1
                                            2820          extrn  &m
                                            2821 .getout  anop
                                            2822          mend
00001C60                                    2823+$eye0062    ds    0d                                                    02-DCCCA
00001C60 C4C3C3                             2824+         dc cl3'DCC'                                                    02-DCCCA
00001C63 01                                 2825+         dc xl1'01' format one                                          02-DCCCA
00001C64 00000000                           2826+         dc a(0)                                                        02-DCCCA
00001C68 0000000000001CD2                   2827+         dc ad(@PER_767)                                                02-DCCCA
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001C70 00000000000000D8                   2828+         dc ad(216)                                                     02-DCCCA
00001C78 0000000000000000                   2829+         dc ad(0)                                                       02-DCCCA
00001C80 0000000000001000                   2830+         dc ad(4096)                                                    02-DCCCA
00001C88 20                                 2831+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001C89 03                                 2832+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001C8A 03                                 2833+         dc al1(3)                                                      02-DCCCA
00001C8B 08                                 2834+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001C8C 00                                 2835+         dc bl.8'00000000'                                              02-DCCCA
00001C8D 000000                             2836+         dc al3(0)                                                      02-DCCCA
00001C90 0000000000001C4E                   2837+         dc ad(@LNAME767)                                               02-DCCCA
00001C98                                    2838+         ds 0d                                                          02-DCCCA
00001C98 0000000000001C60                   2839+         dc ad($eye0062)                                                02-DCCCA
00001CA0 0000000000000000                   2840+         dc ad(0)                                                       02-DCCCA
00001CA8                                    2841+         ds    0d                                                       01-DCCPR
                                            2842+         entry $X$X$H32_reset                                           01-DCCPR
00001CA8                                    2843+$X$X$H32_reset ds 0d                                                    01-DCCPR
00001CA8                                    2844+@REGION_767_1 ds 0h                                                     01-DCCPR
00001CA8 EBEC D008 0024          00000008   2845+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001CAE E3E0 D088 0004          00000088   2846+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001CB4 E3C0 D090 0004          00000090   2847+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001CBA B904 002E                          2848+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001CBE E3B0 C018 0004          00000018   2849+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001CC4 A7EB 00D8               000000D8   2850+         aghi  14,216              increase by frame size               01-DCCPR
00001CC8 E3E0 C020 0021          00000020   2851+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001CCE 4720 B020               00000020   2852+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001CD2                                    2853+@PER_767 ds    0h                                                       01-DCCPR
00001CD2 EBDE 2080 0024          00000080   2854+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001CD8 E3C0 2090 0024          00000090   2855+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001CDE B904 00D2                          2856+         lgr   13,2                set real frame pointer               01-DCCPR
00001CE2 B904 00CF                          2857+         lgr   12,15               set base reg                         01-DCCPR
                        00001CA8            2858+         using @REGION_767_1,12                                         01-DCCPR
                                            2859 * ******* End of Prologue
                                            2860 * *
00001CE6 58F0 100C               0000000C   2861          L     15,12(0,1)  ; seed
                                            2862 * ***       XXH32_state_t state;
                                            2863 * ***       __memset(&state,0,sizeof(state));
00001CEA 4120 D0A8               000000A8   2864          LA    2,168(0,13)
                                            2865 * setting 48 bytes to 0x00
00001CEE D72F 2000 2000 00000000 00000000   2866          XC    0(48,2),0(2)
                                            2867 * ***       state.v1 = seed + PRIME32_1 + PRIME32_2;
00001CF4 E320 C0E0 0004          00001D88   2868          LG    2,@lit_767_96
00001CFA 183F                               2869          LR    3,15
00001CFC 5E30 2048               00000048   2870          AL    3,72(0,2)
00001D00 5E30 204C               0000004C   2871          AL    3,76(0,2)
00001D04 5030 D0B0               000000B0   2872          ST    3,176(0,13) ; offset of v1 in XXH32_state_s
                                            2873 * ***       state.v2 = seed + PRIME32_2;
00001D08 183F                               2874          LR    3,15
00001D0A 5E30 204C               0000004C   2875          AL    3,76(0,2)
00001D0E 5030 D0B4               000000B4   2876          ST    3,180(0,13) ; offset of v2 in XXH32_state_s
                                            2877 * ***       state.v3 = seed + 0;
00001D12 50F0 D0B8               000000B8   2878          ST    15,184(0,13) ; offset of v3 in XXH32_state_s
                                            2879 * ***       state.v4 = seed - PRIME32_1;
                                                                                                                           Page   60 
  Active Usings: @REGION_767_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001D16 5FF0 2048               00000048   2880          SL    15,72(0,2)
00001D1A 50F0 D0BC               000000BC   2881          ST    15,188(0,13) ; offset of v4 in XXH32_state_s
                                            2882 * ***
                                            2883 * ***       __memcpy(statePtr,&state,sizeof(state) - sizeof(state.rese\
                                            2884 * rved));
00001D1E 41F0 D0A8               000000A8   2885          LA    15,168(0,13)
00001D22 E310 1000 0004          00000000   2886          LG    1,0(0,1)
00001D28 D22B 1000 F000 00000000 00000000   2887          MVC   0(44,1),0(15)
                                            2888 * ***       return XXH_OK;
00001D2E A7F9 0000               00000000   2889          LGHI  15,0        ; 0
                                            2890 * ***   }
                                            2891 * * **** Start of Epilogue
                                            2892          DCCEPIL
00001D32                                    2893+         ds 0h                                                          01-DCCEP
                                            2894+* Epilog
00001D32 D707 D088 D088 00000088 00000088   2895+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001D38 E3D0 D080 0004          00000080   2896+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001D3E E3C0 D090 0004          00000090   2897+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001D44 E3B0 C018 0004          00000018   2898+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001D4A E3C0 B010 0021          00000010   2899+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001D50 E3E0 D008 0004          00000008   2900+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001D56 EB1C D020 0004          00000020   2901+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001D5C 078E                               2902+         bcr 8,14                if same dsab, just return              01-DCCEP
00001D5E E3F0 D010 0024          00000010   2903+         stg 15,16(0,13)         save return code                       01-DCCEP
00001D64 E300 D018 0024          00000018   2904+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001D6A E3F0 D090 0004          00000090   2905+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001D70 E3F0 F018 0004          00000018   2906+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001D76 47F0 F040               00000040   2907+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2908+* End of Epilog
                                            2909 * * **** End of Epilogue
00001D80                                    2910          DS    0D
00001D80 000000D8                           2911 @FRAMESIZE_767 DC F'216'
00001D84 00000000
00001D88 00000000000059C8                   2912 @lit_767_96 DC AD(@DATA)
                                            2913          DROP  12
                                            2914 *
                                            2915 *   DSECT for automatic variables in "XXH32_reset"
                                            2916 *      (FUNCTION #767)
                                            2917 *
00000000                00000000 000000D8   2918 @AUTO#$X$X$H32_reset DSECT
00000000                                    2919          DS    XL168
000000A8                                    2920 $X$X$H32_reset#state#0 DS 48XL1 ; state
                                            2921 *
00001D90                00000000 000059C8   2922 @CODE    CSECT
                                            2923 *
                                            2924 *
                                            2925 *
                                            2926 * ....... start of XXH32_update_endian
00001D90                                    2927 @LNAME791 DS   0H
00001D90 00000013                           2928          DC    X'00000013'
00001D94 E7E7C8F3F26DA497                   2929          DC    C'XXH32_update_endian'
00001DA7 00                                 2930          DC    X'00'
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2931 $X$X$H32_update_endian DCCPRLG CINDEX=791,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME791
                                            2932          macro
                                            2933          dccextrn &m
                                            2934          gblc    &$dccext(1000)
                                            2935          gbla    &$dccexti
                                            2936          lcla    &i
                                            2937 &$dccext(&$dccexti+1) setc    '&m'
                                            2938 &i       seta    1
                                            2939 .loop    aif    (&i gt &$dccexti).around
                                            2940          aif    ('&$dccext(&i)' eq '&m').getout
                                            2941 &i       seta    &i+1
                                            2942          ago     .loop
                                            2943 .around  anop
                                            2944 &$dccexti seta &$dccexti+1
                                            2945          extrn  &m
                                            2946 .getout  anop
                                            2947          mend
00001DA8                                    2948+$eye0065    ds    0d                                                    02-DCCCA
00001DA8 C4C3C3                             2949+         dc cl3'DCC'                                                    02-DCCCA
00001DAB 01                                 2950+         dc xl1'01' format one                                          02-DCCCA
00001DAC 00000000                           2951+         dc a(0)                                                        02-DCCCA
00001DB0 0000000000001E1A                   2952+         dc ad(@PER_791)                                                02-DCCCA
00001DB8 00000000000000C8                   2953+         dc ad(200)                                                     02-DCCCA
00001DC0 0000000000000000                   2954+         dc ad(0)                                                       02-DCCCA
00001DC8 0000000000001000                   2955+         dc ad(4096)                                                    02-DCCCA
00001DD0 20                                 2956+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001DD1 03                                 2957+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001DD2 03                                 2958+         dc al1(3)                                                      02-DCCCA
00001DD3 08                                 2959+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001DD4 00                                 2960+         dc bl.8'00000000'                                              02-DCCCA
00001DD5 000000                             2961+         dc al3(0)                                                      02-DCCCA
00001DD8 0000000000001D90                   2962+         dc ad(@LNAME791)                                               02-DCCCA
00001DE0                                    2963+         ds 0d                                                          02-DCCCA
00001DE0 0000000000001DA8                   2964+         dc ad($eye0065)                                                02-DCCCA
00001DE8 0000000000000000                   2965+         dc ad(0)                                                       02-DCCCA
00001DF0                                    2966+         ds    0d                                                       01-DCCPR
00001DF0                                    2967+$X$X$H32_update_endian ds 0d                                            01-DCCPR
00001DF0                                    2968+@REGION_791_1 ds 0h                                                     01-DCCPR
00001DF0 EBEC D008 0024          00000008   2969+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001DF6 E3E0 D088 0004          00000088   2970+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001DFC E3C0 D090 0004          00000090   2971+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001E02 B904 002E                          2972+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001E06 E3B0 C018 0004          00000018   2973+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001E0C A7EB 00C8               000000C8   2974+         aghi  14,200              increase by frame size               01-DCCPR
00001E10 E3E0 C020 0021          00000020   2975+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001E16 4720 B020               00000020   2976+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001E1A                                    2977+@PER_791 ds    0h                                                       01-DCCPR
00001E1A EBDE 2080 0024          00000080   2978+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001E20 E3C0 2090 0024          00000090   2979+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001E26 B904 00D2                          2980+         lgr   13,2                set real frame pointer               01-DCCPR
00001E2A B904 00CF                          2981+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   62 
  Active Usings: @REGION_791_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        00001DF0            2982+         using @REGION_791_1,12                                         01-DCCPR
                                            2983 * ******* End of Prologue
                                            2984 * *
                                            2985 * ***       if (input==((void *)0))
00001E2E E370 1000 0004          00000000   2986          LG    7,0(0,1)    ; state
00001E34 EB23 1008 0004          00000008   2987          LMG   2,3,8(1)    ; input
00001E3A 5880 101C               0000001C   2988          L     8,28(0,1)   ; endian
00001E3E B902 00F2                          2989          LTGR  15,2
00001E42 4770 C080               00001E70   2990          BNE   @L83
                                            2991 * ***
                                            2992 * ***
                                            2993 * ***
                                            2994 * ***           return XXH_ERROR;
00001E46 A7F9 0001               00000001   2995          LGHI  15,1        ; 1
00001E4A 47F0 C3DA               000021CA   2996          B     @ret_lab_791
00001E50                                    2997          DS    0D
00001E50 000000C8                           2998 @FRAMESIZE_791 DC F'200'
00001E54 00000000
00001E58 00000000000004D8                   2999 @lit_791_100 DC AD($X$X$H_memcpy)
00001E60 00000000000009D0                   3000 @lit_791_104 DC AD($X$X$H_read$L$E32)
00001E68 0000000000000CD8                   3001 @lit_791_105 DC AD($X$X$H32_round)
00001E70                                    3002 @L83     DS    0H
                                            3003 * ***
                                            3004 * ***
                                            3005 * ***       {   const BYTE* p = (const BYTE*)input;
                                            3006 * ***           const BYTE* const bEnd = p + len;
00001E70 4193 2000               00000000   3007          LA    9,0(3,2)
                                            3008 * ***
                                            3009 * ***           state->total_len_32 += (unsigned)len;
00001E74 18F3                               3010          LR    15,3
00001E76 5EF0 7000               00000000   3011          AL    15,0(0,7)
00001E7A 50F0 7000               00000000   3012          ST    15,0(0,7)
                                            3013 * ***           state->large_len |= (len>=16) | (state->total_len_32>=\
                                            3014 * 16);
00001E7E C23E 0000 0010                     3015          CLGFI 3,X'00000010'
00001E84 4740 C0A0               00001E90   3016          BL    @@gen_label109
00001E88 A7F8 0001               00000001   3017          LHI   15,1
00001E8C 47F0 C0A4               00001E94   3018          B     @@gen_label110
00001E90                                    3019 @@gen_label109 DS 0H
00001E90 A7F8 0000               00000000   3020          LHI   15,0
00001E94                                    3021 @@gen_label110 DS 0H
00001E94 E55D 7000 0010          00000000   3022          CLFHSI 0(7),16
00001E9A 4740 C0B6               00001EA6   3023          BL    @@gen_label111
00001E9E A718 0001               00000001   3024          LHI   1,1
00001EA2 47F0 C0BA               00001EAA   3025          B     @@gen_label112
00001EA6                                    3026 @@gen_label111 DS 0H
00001EA6 A718 0000               00000000   3027          LHI   1,0
00001EAA                                    3028 @@gen_label112 DS 0H
00001EAA 16F1                               3029          OR    15,1
00001EAC 56F0 7004               00000004   3030          O     15,4(0,7)
00001EB0 50F0 7004               00000004   3031          ST    15,4(0,7)
                                            3032 * ***
                                                                                                                           Page   63 
  Active Usings: @REGION_791_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3033 * ***           if (state->memsize + len < 16)  {
00001EB4 58F0 7028               00000028   3034          L     15,40(0,7)  ; offset of memsize in XXH32_state_s
00001EB8 B904 0013                          3035          LGR   1,3
00001EBC B91A 001F                          3036          ALGFR 1,15
00001EC0 C21E 0000 0010                     3037          CLGFI 1,X'00000010'
00001EC6 47B0 C10C               00001EFC   3038          BNL   @L84
                                            3039 * ***               XXH_memcpy((BYTE*)(state->mem32) + state->memsize,\
                                            3040 *  input, len);
00001ECA E3F0 7028 0016          00000028   3041          LLGF  15,40(0,7)
00001ED0 41FF 7018               00000018   3042          LA    15,24(15,7)
00001ED4 E3F0 D0B0 0024          000000B0   3043          STG   15,176(0,13)
00001EDA EB23 D0B8 0024          000000B8   3044          STMG  2,3,184(13)
00001EE0 4110 D0B0               000000B0   3045          LA    1,176(0,13)
00001EE4 E3F0 C068 0004          00001E58   3046          LG    15,@lit_791_100 ; XXH_memcpy
00001EEA                                    3047 @@gen_label114 DS    0H
00001EEA 05EF                               3048          BALR  14,15
00001EEC                                    3049 @@gen_label115 DS    0H
                                            3050 * ***               state->memsize += (unsigned)len;
00001EEC 5E30 7028               00000028   3051          AL    3,40(0,7)
00001EF0 5030 7028               00000028   3052          ST    3,40(0,7)
                                            3053 * ***               return XXH_OK;
00001EF4 A7F9 0000               00000000   3054          LGHI  15,0        ; 0
00001EF8 47F0 C3DA               000021CA   3055          B     @ret_lab_791
                                            3056 * ***           }
00001EFC                                    3057 @L84     DS    0H
                                            3058 * ***
                                            3059 * ***           if (state->memsize) {
00001EFC E3F0 7028 0012          00000028   3060          LT    15,40(0,7)  ; offset of memsize in XXH32_state_s
00001F02 4780 C272               00002062   3061          BZ    @L85
                                            3062 * ***               XXH_memcpy((BYTE*)(state->mem32) + state->memsize,\
                                            3063 *  input, 16-state->memsize);
00001F06 E3F0 7028 0016          00000028   3064          LLGF  15,40(0,7)
00001F0C 41FF 7018               00000018   3065          LA    15,24(15,7)
00001F10 E3F0 D0B0 0024          000000B0   3066          STG   15,176(0,13)
00001F16 E320 D0B8 0024          000000B8   3067          STG   2,184(0,13)
00001F1C A748 0010               00000010   3068          LHI   4,16        ; 16
00001F20 18F4                               3069          LR    15,4
00001F22 5FF0 7028               00000028   3070          SL    15,40(0,7)
00001F26 B916 00FF                          3071          LLGFR 15,15
00001F2A E3F0 D0C0 0024          000000C0   3072          STG   15,192(0,13)
00001F30 4110 D0B0               000000B0   3073          LA    1,176(0,13)
00001F34 E3F0 C068 0004          00001E58   3074          LG    15,@lit_791_100 ; XXH_memcpy
00001F3A                                    3075 @@gen_label117 DS    0H
00001F3A 05EF                               3076          BALR  14,15
00001F3C                                    3077 @@gen_label118 DS    0H
                                            3078 * ***               {   const U32* p32 = state->mem32;
00001F3C 4130 7018               00000018   3079          LA    3,24(0,7)
                                            3080 * ***                   state->v1 = XXH32_round(state->v1, XXH_readLE3\
                                            3081 * 2(p32, endian)); p32++;
00001F40 E330 D0B0 0024          000000B0   3082          STG   3,176(0,13)
00001F46 B914 00F8                          3083          LGFR  15,8
00001F4A E3F0 D0B8 0024          000000B8   3084          STG   15,184(0,13)
                                                                                                                           Page   64 
  Active Usings: @REGION_791_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001F50 4110 D0B0               000000B0   3085          LA    1,176(0,13)
00001F54 E350 C070 0004          00001E60   3086          LG    5,@lit_791_104 ; XXH_readLE32
00001F5A B904 00F5                          3087          LGR   15,5
00001F5E                                    3088 @@gen_label119 DS    0H
00001F5E 05EF                               3089          BALR  14,15
00001F60                                    3090 @@gen_label120 DS    0H
00001F60 E310 7008 0016          00000008   3091          LLGF  1,8(0,7)
00001F66 E310 D0B0 0024          000000B0   3092          STG   1,176(0,13)
00001F6C B916 00FF                          3093          LLGFR 15,15
00001F70 E3F0 D0B8 0024          000000B8   3094          STG   15,184(0,13)
00001F76 4110 D0B0               000000B0   3095          LA    1,176(0,13)
00001F7A E360 C078 0004          00001E68   3096          LG    6,@lit_791_105 ; XXH32_round
00001F80 B904 00F6                          3097          LGR   15,6
00001F84                                    3098 @@gen_label121 DS    0H
00001F84 05EF                               3099          BALR  14,15
00001F86                                    3100 @@gen_label122 DS    0H
00001F86 50F0 7008               00000008   3101          ST    15,8(0,7)
00001F8A 4130 3004               00000004   3102          LA    3,4(0,3)
                                            3103 * ***                   state->v2 = XXH32_round(state->v2, XXH_readLE3\
                                            3104 * 2(p32, endian)); p32++;
00001F8E E330 D0B0 0024          000000B0   3105          STG   3,176(0,13)
00001F94 B914 00F8                          3106          LGFR  15,8
00001F98 E3F0 D0B8 0024          000000B8   3107          STG   15,184(0,13)
00001F9E 4110 D0B0               000000B0   3108          LA    1,176(0,13)
00001FA2 B904 00F5                          3109          LGR   15,5
00001FA6                                    3110 @@gen_label123 DS    0H
00001FA6 05EF                               3111          BALR  14,15
00001FA8                                    3112 @@gen_label124 DS    0H
00001FA8 E310 700C 0016          0000000C   3113          LLGF  1,12(0,7)
00001FAE E310 D0B0 0024          000000B0   3114          STG   1,176(0,13)
00001FB4 B916 00FF                          3115          LLGFR 15,15
00001FB8 E3F0 D0B8 0024          000000B8   3116          STG   15,184(0,13)
00001FBE 4110 D0B0               000000B0   3117          LA    1,176(0,13)
00001FC2 B904 00F6                          3118          LGR   15,6
00001FC6                                    3119 @@gen_label125 DS    0H
00001FC6 05EF                               3120          BALR  14,15
00001FC8                                    3121 @@gen_label126 DS    0H
00001FC8 50F0 700C               0000000C   3122          ST    15,12(0,7)
00001FCC 4130 3004               00000004   3123          LA    3,4(0,3)
                                            3124 * ***                   state->v3 = XXH32_round(state->v3, XXH_readLE3\
                                            3125 * 2(p32, endian)); p32++;
00001FD0 E330 D0B0 0024          000000B0   3126          STG   3,176(0,13)
00001FD6 B914 00F8                          3127          LGFR  15,8
00001FDA E3F0 D0B8 0024          000000B8   3128          STG   15,184(0,13)
00001FE0 4110 D0B0               000000B0   3129          LA    1,176(0,13)
00001FE4 B904 00F5                          3130          LGR   15,5
00001FE8                                    3131 @@gen_label127 DS    0H
00001FE8 05EF                               3132          BALR  14,15
00001FEA                                    3133 @@gen_label128 DS    0H
00001FEA E310 7010 0016          00000010   3134          LLGF  1,16(0,7)
00001FF0 E310 D0B0 0024          000000B0   3135          STG   1,176(0,13)
00001FF6 B916 00FF                          3136          LLGFR 15,15
                                                                                                                           Page   65 
  Active Usings: @REGION_791_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001FFA E3F0 D0B8 0024          000000B8   3137          STG   15,184(0,13)
00002000 4110 D0B0               000000B0   3138          LA    1,176(0,13)
00002004 B904 00F6                          3139          LGR   15,6
00002008                                    3140 @@gen_label129 DS    0H
00002008 05EF                               3141          BALR  14,15
0000200A                                    3142 @@gen_label130 DS    0H
0000200A 50F0 7010               00000010   3143          ST    15,16(0,7)
0000200E 41F0 3004               00000004   3144          LA    15,4(0,3)
                                            3145 * ***                   state->v4 = XXH32_round(state->v4, XXH_readLE3\
                                            3146 * 2(p32, endian));
00002012 E3F0 D0B0 0024          000000B0   3147          STG   15,176(0,13)
00002018 B914 00F8                          3148          LGFR  15,8
0000201C E3F0 D0B8 0024          000000B8   3149          STG   15,184(0,13)
00002022 4110 D0B0               000000B0   3150          LA    1,176(0,13)
00002026 B904 00F5                          3151          LGR   15,5
0000202A                                    3152 @@gen_label131 DS    0H
0000202A 05EF                               3153          BALR  14,15
0000202C                                    3154 @@gen_label132 DS    0H
0000202C E310 7014 0016          00000014   3155          LLGF  1,20(0,7)
00002032 E310 D0B0 0024          000000B0   3156          STG   1,176(0,13)
00002038 B916 00FF                          3157          LLGFR 15,15
0000203C E3F0 D0B8 0024          000000B8   3158          STG   15,184(0,13)
00002042 4110 D0B0               000000B0   3159          LA    1,176(0,13)
00002046 B904 00F6                          3160          LGR   15,6
0000204A                                    3161 @@gen_label133 DS    0H
0000204A 05EF                               3162          BALR  14,15
0000204C                                    3163 @@gen_label134 DS    0H
0000204C 50F0 7014               00000014   3164          ST    15,20(0,7)
                                            3165 * ***               }
                                            3166 * ***               p += 16-state->memsize;
00002050 5F40 7028               00000028   3167          SL    4,40(0,7)
00002054 B916 00F4                          3168          LLGFR 15,4
00002058 412F 2000               00000000   3169          LA    2,0(15,2)
                                            3170 * ***               state->memsize = 0;
0000205C E54C 7028 0000          00000028   3171          MVHI  40(7),0     ; offset of memsize in XXH32_state_s
                                            3172 * ***           }
00002062                                    3173 @L85     DS    0H
                                            3174 * ***
                                            3175 * ***           if (p <= bEnd-16) {
00002062 A7F9 FFF0               0000FFF0   3176          LGHI  15,-16      ; -16
00002066 411F 9000               00000000   3177          LA    1,0(15,9)
0000206A B920 0021                          3178          CGR   2,1
0000206E 4720 C39C               0000218C   3179          BH    @L86
                                            3180 * ***               const BYTE* const limit = bEnd - 16;
00002072 41AF 9000               00000000   3181          LA    10,0(15,9)
                                            3182 * ***               U32 v1 = state->v1;
00002076 9836 7008               00000008   3183          LM    3,6,8(7)    ; offset of v1 in XXH32_state_s
                                            3184 * ***               U32 v2 = state->v2;
                                            3185 * ***               U32 v3 = state->v3;
                                            3186 * ***               U32 v4 = state->v4;
                                            3187 * ***
                                            3188 * ***               do {
                                                                                                                           Page   66 
  Active Usings: @REGION_791_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000207A                                    3189 @L87     DS    0H
                                            3190 * ***                   v1 = XXH32_round(v1, XXH_readLE32(p, endian));\
                                            3191 *  p+=4;
0000207A E320 D0B0 0024          000000B0   3192          STG   2,176(0,13)
00002080 B914 00F8                          3193          LGFR  15,8
00002084 E3F0 D0B8 0024          000000B8   3194          STG   15,184(0,13)
0000208A 4110 D0B0               000000B0   3195          LA    1,176(0,13)
0000208E E3B0 C070 0004          00001E60   3196          LG    11,@lit_791_104 ; XXH_readLE32
00002094 B904 00FB                          3197          LGR   15,11
00002098                                    3198 @@gen_label136 DS    0H
00002098 05EF                               3199          BALR  14,15
0000209A                                    3200 @@gen_label137 DS    0H
0000209A B916 0013                          3201          LLGFR 1,3
0000209E E310 D0B0 0024          000000B0   3202          STG   1,176(0,13)
000020A4 B916 00FF                          3203          LLGFR 15,15
000020A8 E3F0 D0B8 0024          000000B8   3204          STG   15,184(0,13)
000020AE 4110 D0B0               000000B0   3205          LA    1,176(0,13)
000020B2 E3F0 C078 0004          00001E68   3206          LG    15,@lit_791_105 ; XXH32_round
000020B8                                    3207 @@gen_label138 DS    0H
000020B8 05EF                               3208          BALR  14,15
000020BA                                    3209 @@gen_label139 DS    0H
000020BA 183F                               3210          LR    3,15        ; v1
000020BC 4120 2004               00000004   3211          LA    2,4(0,2)
                                            3212 * ***                   v2 = XXH32_round(v2, XXH_readLE32(p, endian));\
                                            3213 *  p+=4;
000020C0 E320 D0B0 0024          000000B0   3214          STG   2,176(0,13)
000020C6 B914 00F8                          3215          LGFR  15,8
000020CA E3F0 D0B8 0024          000000B8   3216          STG   15,184(0,13)
000020D0 4110 D0B0               000000B0   3217          LA    1,176(0,13)
000020D4 B904 00FB                          3218          LGR   15,11
000020D8                                    3219 @@gen_label140 DS    0H
000020D8 05EF                               3220          BALR  14,15
000020DA                                    3221 @@gen_label141 DS    0H
000020DA B916 0014                          3222          LLGFR 1,4
000020DE E310 D0B0 0024          000000B0   3223          STG   1,176(0,13)
000020E4 B916 00FF                          3224          LLGFR 15,15
000020E8 E3F0 D0B8 0024          000000B8   3225          STG   15,184(0,13)
000020EE 4110 D0B0               000000B0   3226          LA    1,176(0,13)
000020F2 E3F0 C078 0004          00001E68   3227          LG    15,@lit_791_105 ; XXH32_round
000020F8                                    3228 @@gen_label142 DS    0H
000020F8 05EF                               3229          BALR  14,15
000020FA                                    3230 @@gen_label143 DS    0H
000020FA 184F                               3231          LR    4,15        ; v2
000020FC 4120 2004               00000004   3232          LA    2,4(0,2)
                                            3233 * ***                   v3 = XXH32_round(v3, XXH_readLE32(p, endian));\
                                            3234 *  p+=4;
00002100 E320 D0B0 0024          000000B0   3235          STG   2,176(0,13)
00002106 B914 00F8                          3236          LGFR  15,8
0000210A E3F0 D0B8 0024          000000B8   3237          STG   15,184(0,13)
00002110 4110 D0B0               000000B0   3238          LA    1,176(0,13)
00002114 B904 00FB                          3239          LGR   15,11
00002118                                    3240 @@gen_label144 DS    0H
                                                                                                                           Page   67 
  Active Usings: @REGION_791_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002118 05EF                               3241          BALR  14,15
0000211A                                    3242 @@gen_label145 DS    0H
0000211A B916 0015                          3243          LLGFR 1,5
0000211E E310 D0B0 0024          000000B0   3244          STG   1,176(0,13)
00002124 B916 00FF                          3245          LLGFR 15,15
00002128 E3F0 D0B8 0024          000000B8   3246          STG   15,184(0,13)
0000212E 4110 D0B0               000000B0   3247          LA    1,176(0,13)
00002132 E3F0 C078 0004          00001E68   3248          LG    15,@lit_791_105 ; XXH32_round
00002138                                    3249 @@gen_label146 DS    0H
00002138 05EF                               3250          BALR  14,15
0000213A                                    3251 @@gen_label147 DS    0H
0000213A 185F                               3252          LR    5,15        ; v3
0000213C 4120 2004               00000004   3253          LA    2,4(0,2)
                                            3254 * ***                   v4 = XXH32_round(v4, XXH_readLE32(p, endian));\
                                            3255 *  p+=4;
00002140 E320 D0B0 0024          000000B0   3256          STG   2,176(0,13)
00002146 B914 00F8                          3257          LGFR  15,8
0000214A E3F0 D0B8 0024          000000B8   3258          STG   15,184(0,13)
00002150 4110 D0B0               000000B0   3259          LA    1,176(0,13)
00002154 B904 00FB                          3260          LGR   15,11
00002158                                    3261 @@gen_label148 DS    0H
00002158 05EF                               3262          BALR  14,15
0000215A                                    3263 @@gen_label149 DS    0H
0000215A B916 0016                          3264          LLGFR 1,6
0000215E E310 D0B0 0024          000000B0   3265          STG   1,176(0,13)
00002164 B916 00FF                          3266          LLGFR 15,15
00002168 E3F0 D0B8 0024          000000B8   3267          STG   15,184(0,13)
0000216E 4110 D0B0               000000B0   3268          LA    1,176(0,13)
00002172 E3F0 C078 0004          00001E68   3269          LG    15,@lit_791_105 ; XXH32_round
00002178                                    3270 @@gen_label150 DS    0H
00002178 05EF                               3271          BALR  14,15
0000217A                                    3272 @@gen_label151 DS    0H
0000217A 186F                               3273          LR    6,15        ; v4
0000217C 4120 2004               00000004   3274          LA    2,4(0,2)
                                            3275 * ***               } while (p<=limit);
00002180 B920 002A                          3276          CGR   2,10
00002184 47D0 C28A               0000207A   3277          BNH   @L87
                                            3278 * ***
                                            3279 * ***               state->v1 = v1;
00002188 9036 7008               00000008   3280          STM   3,6,8(7)    ; offset of v1 in XXH32_state_s
                                            3281 * ***               state->v2 = v2;
                                            3282 * ***               state->v3 = v3;
                                            3283 * ***               state->v4 = v4;
                                            3284 * ***           }
0000218C                                    3285 @L86     DS    0H
                                            3286 * ***
                                            3287 * ***           if (p < bEnd) {
0000218C B920 0029                          3288          CGR   2,9
00002190 47B0 C3D6               000021C6   3289          BNL   @L90
                                            3290 * ***               XXH_memcpy(state->mem32, p, (size_t)(bEnd-p));
00002194 41F0 7018               00000018   3291          LA    15,24(0,7)
00002198 E3F0 D0B0 0024          000000B0   3292          STG   15,176(0,13)
                                                                                                                           Page   68 
  Active Usings: @REGION_791_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000219E E320 D0B8 0024          000000B8   3293          STG   2,184(0,13)
000021A4 B904 00F9                          3294          LGR   15,9
000021A8 B909 00F2                          3295          SGR   15,2
000021AC E3F0 D0C0 0024          000000C0   3296          STG   15,192(0,13)
000021B2 4110 D0B0               000000B0   3297          LA    1,176(0,13)
000021B6 E3F0 C068 0004          00001E58   3298          LG    15,@lit_791_100 ; XXH_memcpy
000021BC                                    3299 @@gen_label154 DS    0H
000021BC 05EF                               3300          BALR  14,15
000021BE                                    3301 @@gen_label155 DS    0H
                                            3302 * ***               state->memsize = (unsigned)(bEnd-p);
000021BE B909 0092                          3303          SGR   9,2
000021C2 5090 7028               00000028   3304          ST    9,40(0,7)   ; offset of memsize in XXH32_state_s
                                            3305 * ***           }
000021C6                                    3306 @L90     DS    0H
                                            3307 * ***       }
                                            3308 * ***
                                            3309 * ***       return XXH_OK;
000021C6 A7F9 0000               00000000   3310          LGHI  15,0        ; 0
                                            3311 * ***   }
000021CA                                    3312 @ret_lab_791 DS 0H
                                            3313 * * **** Start of Epilogue
                                            3314          DCCEPIL
000021CA                                    3315+         ds 0h                                                          01-DCCEP
                                            3316+* Epilog
000021CA D707 D088 D088 00000088 00000088   3317+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000021D0 E3D0 D080 0004          00000080   3318+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000021D6 E3C0 D090 0004          00000090   3319+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000021DC E3B0 C018 0004          00000018   3320+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000021E2 E3C0 B010 0021          00000010   3321+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000021E8 E3E0 D008 0004          00000008   3322+         lg  14,8(0,13)          load up return address                 01-DCCEP
000021EE EB1C D020 0004          00000020   3323+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000021F4 078E                               3324+         bcr 8,14                if same dsab, just return              01-DCCEP
000021F6 E3F0 D010 0024          00000010   3325+         stg 15,16(0,13)         save return code                       01-DCCEP
000021FC E300 D018 0024          00000018   3326+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002202 E3F0 D090 0004          00000090   3327+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002208 E3F0 F018 0004          00000018   3328+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000220E 47F0 F040               00000040   3329+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3330+* End of Epilog
                                            3331 * * **** End of Epilogue
                                            3332          DROP  12
                                            3333 *
                                            3334 *   DSECT for automatic variables in "XXH32_update_endian"
                                            3335 *      (FUNCTION #791)
                                            3336 *
00000000                00000000 000000AC   3337 @AUTO#$X$X$H32_update_endian DSECT
00000000                                    3338          DS    XL168
000000A8                                    3339 $X$X$H32_update_endian#v4#5 DS 1F ; v4
000000AC                000000AC 000000A8   3340          ORG   @AUTO#$X$X$H32_update_endian+168
000000A8                                    3341 $X$X$H32_update_endian#v3#5 DS 1F ; v3
000000AC                000000AC 000000A8   3342          ORG   @AUTO#$X$X$H32_update_endian+168
000000A8                                    3343 $X$X$H32_update_endian#v2#5 DS 1F ; v2
000000AC                000000AC 000000A8   3344          ORG   @AUTO#$X$X$H32_update_endian+168
                                                                                                                           Page   69 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                    3345 $X$X$H32_update_endian#v1#5 DS 1F ; v1
                                            3346 *
00002212                00000000 000059C8   3347 @CODE    CSECT
                                            3348 *
                                            3349 *
                                            3350 *
                                            3351 * ....... start of XXH32_update
                                            3352 $X$X$H32_update ALIAS X'E7E7C8F3F26DA4978481A385'
00002212                                    3353 @LNAME768 DS   0H
00002212 0000000C                           3354          DC    X'0000000C'
00002216 E7E7C8F3F26DA497                   3355          DC    C'XXH32_update'
00002222 00                                 3356          DC    X'00'
                                            3357 $X$X$H32_update DCCPRLG CINDEX=768,BASER=12,FRAME=208,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME768
                                            3358          macro
                                            3359          dccextrn &m
                                            3360          gblc    &$dccext(1000)
                                            3361          gbla    &$dccexti
                                            3362          lcla    &i
                                            3363 &$dccext(&$dccexti+1) setc    '&m'
                                            3364 &i       seta    1
                                            3365 .loop    aif    (&i gt &$dccexti).around
                                            3366          aif    ('&$dccext(&i)' eq '&m').getout
                                            3367 &i       seta    &i+1
                                            3368          ago     .loop
                                            3369 .around  anop
                                            3370 &$dccexti seta &$dccexti+1
                                            3371          extrn  &m
                                            3372 .getout  anop
                                            3373          mend
00002228                                    3374+$eye0068    ds    0d                                                    02-DCCCA
00002228 C4C3C3                             3375+         dc cl3'DCC'                                                    02-DCCCA
0000222B 01                                 3376+         dc xl1'01' format one                                          02-DCCCA
0000222C 00000000                           3377+         dc a(0)                                                        02-DCCCA
00002230 000000000000229A                   3378+         dc ad(@PER_768)                                                02-DCCCA
00002238 00000000000000D0                   3379+         dc ad(208)                                                     02-DCCCA
00002240 0000000000000000                   3380+         dc ad(0)                                                       02-DCCCA
00002248 0000000000001000                   3381+         dc ad(4096)                                                    02-DCCCA
00002250 20                                 3382+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002251 03                                 3383+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002252 03                                 3384+         dc al1(3)                                                      02-DCCCA
00002253 08                                 3385+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002254 00                                 3386+         dc bl.8'00000000'                                              02-DCCCA
00002255 000000                             3387+         dc al3(0)                                                      02-DCCCA
00002258 0000000000002212                   3388+         dc ad(@LNAME768)                                               02-DCCCA
00002260                                    3389+         ds 0d                                                          02-DCCCA
00002260 0000000000002228                   3390+         dc ad($eye0068)                                                02-DCCCA
00002268 0000000000000000                   3391+         dc ad(0)                                                       02-DCCCA
00002270                                    3392+         ds    0d                                                       01-DCCPR
                                            3393+         entry $X$X$H32_update                                          01-DCCPR
00002270                                    3394+$X$X$H32_update ds 0d                                                   01-DCCPR
00002270                                    3395+@REGION_768_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002270 EBEC D008 0024          00000008   3396+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002276 E3E0 D088 0004          00000088   3397+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000227C E3C0 D090 0004          00000090   3398+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002282 B904 002E                          3399+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002286 E3B0 C018 0004          00000018   3400+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000228C A7EB 00D0               000000D0   3401+         aghi  14,208              increase by frame size               01-DCCPR
00002290 E3E0 C020 0021          00000020   3402+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002296 4720 B020               00000020   3403+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000229A                                    3404+@PER_768 ds    0h                                                       01-DCCPR
0000229A EBDE 2080 0024          00000080   3405+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000022A0 E3C0 2090 0024          00000090   3406+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000022A6 B904 00D2                          3407+         lgr   13,2                set real frame pointer               01-DCCPR
000022AA B904 00CF                          3408+         lgr   12,15               set base reg                         01-DCCPR
                        00002270            3409+         using @REGION_768_1,12                                         01-DCCPR
000022AE B904 0021                          3410          LGR   2,1         ; ptr to parm area
                                            3411 * ******* End of Prologue
                                            3412 * *
                                            3413 * ***       XXH_endianess endian_detected = (XXH_endianess)XXH_isLittl\
                                            3414 * eEndian();
000022B2 E3F0 C098 0004          00002308   3415          LG    15,@lit_768_130 ; XXH_isLittleEndian
000022B8                                    3416 @@gen_label156 DS    0H
000022B8 05EF                               3417          BALR  14,15
000022BA                                    3418 @@gen_label157 DS    0H
                                            3419 * ***
                                            3420 * ***       if ((endian_detected==XXH_littleEndian) || 0)
000022BA A7FE 0001               00000001   3421          CHI   15,1
000022BE 4770 C0A8               00002318   3422          BNE   @L91
000022C2                                    3423 @L92     DS    0H
                                            3424 * ***           return XXH32_update_endian(state_in, input, len, XXH_l\
                                            3425 * ittleEndian);
000022C2 E3F0 2000 0004          00000000   3426          LG    15,0(0,2)   ; state_in
000022C8 E3F0 D0B0 0024          000000B0   3427          STG   15,176(0,13)
000022CE E3F0 2008 0004          00000008   3428          LG    15,8(0,2)   ; input
000022D4 E3F0 D0B8 0024          000000B8   3429          STG   15,184(0,13)
000022DA E3F0 2010 0004          00000010   3430          LG    15,16(0,2)  ; len
000022E0 E3F0 D0C0 0024          000000C0   3431          STG   15,192(0,13)
000022E6 E548 D0C8 0001          000000C8   3432          MVGHI 200(13),1
000022EC 4110 D0B0               000000B0   3433          LA    1,176(0,13)
000022F0 E3F0 C0A0 0004          00002310   3434          LG    15,@lit_768_131 ; XXH32_update_endian
000022F6                                    3435 @@gen_label159 DS    0H
000022F6 05EF                               3436          BALR  14,15
000022F8                                    3437 @@gen_label160 DS    0H
000022F8 B914 00FF                          3438          LGFR  15,15
000022FC 47F0 C0E2               00002352   3439          B     @ret_lab_768
00002300                                    3440          DS    0D
00002300 000000D0                           3441 @FRAMESIZE_768 DC F'208'
00002304 00000000
00002308 0000000000000748                   3442 @lit_768_130 DC AD($X$X$H_is$Little$Endian)
00002310 0000000000001DF0                   3443 @lit_768_131 DC AD($X$X$H32_update_endian)
                                            3444 * ***       else
00002318                                    3445 @L91     DS    0H
                                            3446 * ***           return XXH32_update_endian(state_in, input, len, XXH_b\
                                                                                                                           Page   71 
  Active Usings: @REGION_768_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3447 * igEndian);
00002318 E3F0 2000 0004          00000000   3448          LG    15,0(0,2)   ; state_in
0000231E E3F0 D0B0 0024          000000B0   3449          STG   15,176(0,13)
00002324 E3F0 2008 0004          00000008   3450          LG    15,8(0,2)   ; input
0000232A E3F0 D0B8 0024          000000B8   3451          STG   15,184(0,13)
00002330 E3F0 2010 0004          00000010   3452          LG    15,16(0,2)  ; len
00002336 E3F0 D0C0 0024          000000C0   3453          STG   15,192(0,13)
0000233C D707 D0C8 D0C8 000000C8 000000C8   3454          XC    200(8,13),200(13)
00002342 4110 D0B0               000000B0   3455          LA    1,176(0,13)
00002346 E3F0 C0A0 0004          00002310   3456          LG    15,@lit_768_131 ; XXH32_update_endian
0000234C                                    3457 @@gen_label161 DS    0H
0000234C 05EF                               3458          BALR  14,15
0000234E                                    3459 @@gen_label162 DS    0H
0000234E B914 00FF                          3460          LGFR  15,15
                                            3461 * ***   }
00002352                                    3462 @ret_lab_768 DS 0H
                                            3463 * * **** Start of Epilogue
                                            3464          DCCEPIL
00002352                                    3465+         ds 0h                                                          01-DCCEP
                                            3466+* Epilog
00002352 D707 D088 D088 00000088 00000088   3467+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002358 E3D0 D080 0004          00000080   3468+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000235E E3C0 D090 0004          00000090   3469+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002364 E3B0 C018 0004          00000018   3470+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000236A E3C0 B010 0021          00000010   3471+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002370 E3E0 D008 0004          00000008   3472+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002376 EB1C D020 0004          00000020   3473+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000237C 078E                               3474+         bcr 8,14                if same dsab, just return              01-DCCEP
0000237E E3F0 D010 0024          00000010   3475+         stg 15,16(0,13)         save return code                       01-DCCEP
00002384 E300 D018 0024          00000018   3476+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000238A E3F0 D090 0004          00000090   3477+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002390 E3F0 F018 0004          00000018   3478+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002396 47F0 F040               00000040   3479+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3480+* End of Epilog
                                            3481 * * **** End of Epilogue
                                            3482          DROP  12
                                            3483 *
                                            3484 *   DSECT for automatic variables in "XXH32_update"
                                            3485 *      (FUNCTION #768)
                                            3486 *
00000000                00000000 000000AC   3487 @AUTO#$X$X$H32_update DSECT
00000000                                    3488          DS    XL168
000000A8                                    3489 $X$X$H32_update#endian_detected#0 DS 1F ; endian_detected
                                            3490 *
0000239A                00000000 000059C8   3491 @CODE    CSECT
                                            3492 *
                                            3493 *
                                            3494 *
                                            3495 * ....... start of XXH32_digest_endian
0000239A                                    3496 @LNAME792 DS   0H
0000239A 00000013                           3497          DC    X'00000013'
0000239E E7E7C8F3F26D8489                   3498          DC    C'XXH32_digest_endian'
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000023B1 00                                 3499          DC    X'00'
                                            3500 $X$X$H32_digest_endian DCCPRLG CINDEX=792,BASER=12,FRAME=216,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME792
                                            3501          macro
                                            3502          dccextrn &m
                                            3503          gblc    &$dccext(1000)
                                            3504          gbla    &$dccexti
                                            3505          lcla    &i
                                            3506 &$dccext(&$dccexti+1) setc    '&m'
                                            3507 &i       seta    1
                                            3508 .loop    aif    (&i gt &$dccexti).around
                                            3509          aif    ('&$dccext(&i)' eq '&m').getout
                                            3510 &i       seta    &i+1
                                            3511          ago     .loop
                                            3512 .around  anop
                                            3513 &$dccexti seta &$dccexti+1
                                            3514          extrn  &m
                                            3515 .getout  anop
                                            3516          mend
000023B8                                    3517+$eye0071    ds    0d                                                    02-DCCCA
000023B8 C4C3C3                             3518+         dc cl3'DCC'                                                    02-DCCCA
000023BB 01                                 3519+         dc xl1'01' format one                                          02-DCCCA
000023BC 00000000                           3520+         dc a(0)                                                        02-DCCCA
000023C0 000000000000242A                   3521+         dc ad(@PER_792)                                                02-DCCCA
000023C8 00000000000000D8                   3522+         dc ad(216)                                                     02-DCCCA
000023D0 0000000000000000                   3523+         dc ad(0)                                                       02-DCCCA
000023D8 0000000000001000                   3524+         dc ad(4096)                                                    02-DCCCA
000023E0 20                                 3525+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000023E1 03                                 3526+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000023E2 03                                 3527+         dc al1(3)                                                      02-DCCCA
000023E3 08                                 3528+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000023E4 00                                 3529+         dc bl.8'00000000'                                              02-DCCCA
000023E5 000000                             3530+         dc al3(0)                                                      02-DCCCA
000023E8 000000000000239A                   3531+         dc ad(@LNAME792)                                               02-DCCCA
000023F0                                    3532+         ds 0d                                                          02-DCCCA
000023F0 00000000000023B8                   3533+         dc ad($eye0071)                                                02-DCCCA
000023F8 0000000000000000                   3534+         dc ad(0)                                                       02-DCCCA
00002400                                    3535+         ds    0d                                                       01-DCCPR
00002400                                    3536+$X$X$H32_digest_endian ds 0d                                            01-DCCPR
00002400                                    3537+@REGION_792_1 ds 0h                                                     01-DCCPR
00002400 EBEC D008 0024          00000008   3538+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002406 E3E0 D088 0004          00000088   3539+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000240C E3C0 D090 0004          00000090   3540+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002412 B904 002E                          3541+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002416 E3B0 C018 0004          00000018   3542+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000241C A7EB 00D8               000000D8   3543+         aghi  14,216              increase by frame size               01-DCCPR
00002420 E3E0 C020 0021          00000020   3544+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002426 4720 B020               00000020   3545+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000242A                                    3546+@PER_792 ds    0h                                                       01-DCCPR
0000242A EBDE 2080 0024          00000080   3547+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002430 E3C0 2090 0024          00000090   3548+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002436 B904 00D2                          3549+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000243A B904 00CF                          3550+         lgr   12,15               set base reg                         01-DCCPR
                        00002400            3551+         using @REGION_792_1,12                                         01-DCCPR
0000243E B904 0021                          3552          LGR   2,1         ; ptr to parm area
                                            3553 * ******* End of Prologue
                                            3554 * *
00002442 E3F0 2000 0004          00000000   3555          LG    15,0(0,2)   ; state
                                            3556 * ***       U32 h32;
                                            3557 * ***
                                            3558 * ***       if (state->large_len) {
00002448 E310 F004 0012          00000004   3559          LT    1,4(0,15)   ; offset of large_len in XXH32_state_s
0000244E 4780 C0C0               000024C0   3560          BZ    @L94
                                            3561 * ***           h32 = ((state->v1 << 1) | (state->v1 >> (32 - 1)))
                                            3562 * ***               + ((state->v2 << 7) | (state->v2 >> (32 - 7)))
                                            3563 * ***               + ((state->v3 << 12) | (state->v3 >> (32 - 12)))
                                            3564 * ***               + ((state->v4 << 18) | (state->v4 >> (32 - 18)));
00002452 5810 F008               00000008   3565          L     1,8(0,15)   ; offset of v1 in XXH32_state_s
00002456 8910 0001               00000001   3566          SLL   1,1(0)
0000245A 5830 F008               00000008   3567          L     3,8(0,15)   ; offset of v1 in XXH32_state_s
0000245E 8830 001F               0000001F   3568          SRL   3,31(0)
00002462 1613                               3569          OR    1,3
00002464 5830 F00C               0000000C   3570          L     3,12(0,15)  ; offset of v2 in XXH32_state_s
00002468 8930 0007               00000007   3571          SLL   3,7(0)
0000246C 5840 F00C               0000000C   3572          L     4,12(0,15)  ; offset of v2 in XXH32_state_s
00002470 8840 0019               00000019   3573          SRL   4,25(0)
00002474 1634                               3574          OR    3,4
00002476 1E13                               3575          ALR   1,3
00002478 5830 F010               00000010   3576          L     3,16(0,15)  ; offset of v3 in XXH32_state_s
0000247C 8930 000C               0000000C   3577          SLL   3,12(0)
00002480 5840 F010               00000010   3578          L     4,16(0,15)  ; offset of v3 in XXH32_state_s
00002484 8840 0014               00000014   3579          SRL   4,20(0)
00002488 1634                               3580          OR    3,4
0000248A 1E13                               3581          ALR   1,3
0000248C 5830 F014               00000014   3582          L     3,20(0,15)  ; offset of v4 in XXH32_state_s
00002490 8930 0012               00000012   3583          SLL   3,18(0)
00002494 5840 F014               00000014   3584          L     4,20(0,15)  ; offset of v4 in XXH32_state_s
00002498 8840 000E               0000000E   3585          SRL   4,14(0)
0000249C 1634                               3586          OR    3,4
0000249E 1E13                               3587          ALR   1,3
                                            3588 * ***       } else {
000024A0 47F0 C0CE               000024CE   3589          B     @L95
000024A8                                    3590          DS    0D
000024A8 000000D8                           3591 @FRAMESIZE_792 DC F'216'
000024AC 00000000
000024B0 00000000000059C8                   3592 @lit_792_134 DC AD(@DATA)
000024B8 0000000000000E30                   3593 @lit_792_135 DC AD($X$X$H32_finalize)
000024C0                                    3594 @L94     DS    0H
                                            3595 * ***           h32 = state->v3  + PRIME32_5;
000024C0 5810 F010               00000010   3596          L     1,16(0,15)  ; offset of v3 in XXH32_state_s
000024C4 E330 C0B0 0004          000024B0   3597          LG    3,@lit_792_134
000024CA 5E10 3058               00000058   3598          AL    1,88(0,3)
                                            3599 * ***       }
000024CE                                    3600 @L95     DS    0H
                                                                                                                           Page   74 
  Active Usings: @REGION_792_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3601 * ***
                                            3602 * ***       h32 += state->total_len_32;
000024CE 5E10 F000               00000000   3603          AL    1,0(0,15)
                                            3604 * ***
                                            3605 * ***       return XXH32_finalize(h32, state->mem32, state->memsize, e\
                                            3606 * ndian, XXH_aligned);
000024D2 B916 0011                          3607          LLGFR 1,1
000024D6 E310 D0B0 0024          000000B0   3608          STG   1,176(0,13)
000024DC 4110 F018               00000018   3609          LA    1,24(0,15)
000024E0 E310 D0B8 0024          000000B8   3610          STG   1,184(0,13)
000024E6 E3F0 F028 0016          00000028   3611          LLGF  15,40(0,15)
000024EC E3F0 D0C0 0024          000000C0   3612          STG   15,192(0,13)
000024F2 E3F0 200C 0014          0000000C   3613          LGF   15,12(0,2)  ; endian
000024F8 E3F0 D0C8 0024          000000C8   3614          STG   15,200(0,13)
000024FE D707 D0D0 D0D0 000000D0 000000D0   3615          XC    208(8,13),208(13)
00002504 4110 D0B0               000000B0   3616          LA    1,176(0,13)
00002508 E3F0 C0B8 0004          000024B8   3617          LG    15,@lit_792_135 ; XXH32_finalize
0000250E                                    3618 @@gen_label164 DS    0H
0000250E 05EF                               3619          BALR  14,15
00002510                                    3620 @@gen_label165 DS    0H
00002510 B916 00FF                          3621          LLGFR 15,15
                                            3622 * ***   }
                                            3623 * * **** Start of Epilogue
                                            3624          DCCEPIL
00002514                                    3625+         ds 0h                                                          01-DCCEP
                                            3626+* Epilog
00002514 D707 D088 D088 00000088 00000088   3627+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000251A E3D0 D080 0004          00000080   3628+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002520 E3C0 D090 0004          00000090   3629+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002526 E3B0 C018 0004          00000018   3630+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000252C E3C0 B010 0021          00000010   3631+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002532 E3E0 D008 0004          00000008   3632+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002538 EB1C D020 0004          00000020   3633+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000253E 078E                               3634+         bcr 8,14                if same dsab, just return              01-DCCEP
00002540 E3F0 D010 0024          00000010   3635+         stg 15,16(0,13)         save return code                       01-DCCEP
00002546 E300 D018 0024          00000018   3636+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000254C E3F0 D090 0004          00000090   3637+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002552 E3F0 F018 0004          00000018   3638+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002558 47F0 F040               00000040   3639+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3640+* End of Epilog
                                            3641 * * **** End of Epilogue
                                            3642          DROP  12
                                            3643 *
                                            3644 *   DSECT for automatic variables in "XXH32_digest_endian"
                                            3645 *      (FUNCTION #792)
                                            3646 *
00000000                00000000 000000AC   3647 @AUTO#$X$X$H32_digest_endian DSECT
00000000                                    3648          DS    XL168
000000A8                                    3649 $X$X$H32_digest_endian#h32#0 DS 1F ; h32
                                            3650 *
0000255C                00000000 000059C8   3651 @CODE    CSECT
                                            3652 *
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3653 *
                                            3654 *
                                            3655 * ....... start of XXH32_digest
                                            3656 $X$X$H32_digest ALIAS X'E7E7C8F3F26D84898785A2A3'
0000255C                                    3657 @LNAME769 DS   0H
0000255C 0000000C                           3658          DC    X'0000000C'
00002560 E7E7C8F3F26D8489                   3659          DC    C'XXH32_digest'
0000256C 00                                 3660          DC    X'00'
                                            3661 $X$X$H32_digest DCCPRLG CINDEX=769,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME769
                                            3662          macro
                                            3663          dccextrn &m
                                            3664          gblc    &$dccext(1000)
                                            3665          gbla    &$dccexti
                                            3666          lcla    &i
                                            3667 &$dccext(&$dccexti+1) setc    '&m'
                                            3668 &i       seta    1
                                            3669 .loop    aif    (&i gt &$dccexti).around
                                            3670          aif    ('&$dccext(&i)' eq '&m').getout
                                            3671 &i       seta    &i+1
                                            3672          ago     .loop
                                            3673 .around  anop
                                            3674 &$dccexti seta &$dccexti+1
                                            3675          extrn  &m
                                            3676 .getout  anop
                                            3677          mend
00002570                                    3678+$eye0074    ds    0d                                                    02-DCCCA
00002570 C4C3C3                             3679+         dc cl3'DCC'                                                    02-DCCCA
00002573 01                                 3680+         dc xl1'01' format one                                          02-DCCCA
00002574 00000000                           3681+         dc a(0)                                                        02-DCCCA
00002578 00000000000025E2                   3682+         dc ad(@PER_769)                                                02-DCCCA
00002580 00000000000000C0                   3683+         dc ad(192)                                                     02-DCCCA
00002588 0000000000000000                   3684+         dc ad(0)                                                       02-DCCCA
00002590 0000000000001000                   3685+         dc ad(4096)                                                    02-DCCCA
00002598 20                                 3686+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002599 03                                 3687+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000259A 03                                 3688+         dc al1(3)                                                      02-DCCCA
0000259B 08                                 3689+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000259C 00                                 3690+         dc bl.8'00000000'                                              02-DCCCA
0000259D 000000                             3691+         dc al3(0)                                                      02-DCCCA
000025A0 000000000000255C                   3692+         dc ad(@LNAME769)                                               02-DCCCA
000025A8                                    3693+         ds 0d                                                          02-DCCCA
000025A8 0000000000002570                   3694+         dc ad($eye0074)                                                02-DCCCA
000025B0 0000000000000000                   3695+         dc ad(0)                                                       02-DCCCA
000025B8                                    3696+         ds    0d                                                       01-DCCPR
                                            3697+         entry $X$X$H32_digest                                          01-DCCPR
000025B8                                    3698+$X$X$H32_digest ds 0d                                                   01-DCCPR
000025B8                                    3699+@REGION_769_1 ds 0h                                                     01-DCCPR
000025B8 EBEC D008 0024          00000008   3700+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000025BE E3E0 D088 0004          00000088   3701+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000025C4 E3C0 D090 0004          00000090   3702+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000025CA B904 002E                          3703+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page   76 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000025CE E3B0 C018 0004          00000018   3704+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000025D4 A7EB 00C0               000000C0   3705+         aghi  14,192              increase by frame size               01-DCCPR
000025D8 E3E0 C020 0021          00000020   3706+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000025DE 4720 B020               00000020   3707+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000025E2                                    3708+@PER_769 ds    0h                                                       01-DCCPR
000025E2 EBDE 2080 0024          00000080   3709+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000025E8 E3C0 2090 0024          00000090   3710+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000025EE B904 00D2                          3711+         lgr   13,2                set real frame pointer               01-DCCPR
000025F2 B904 00CF                          3712+         lgr   12,15               set base reg                         01-DCCPR
                        000025B8            3713+         using @REGION_769_1,12                                         01-DCCPR
000025F6 B904 0021                          3714          LGR   2,1         ; ptr to parm area
                                            3715 * ******* End of Prologue
                                            3716 * *
                                            3717 * ***       XXH_endianess endian_detected = (XXH_endianess)XXH_isLittl\
                                            3718 * eEndian();
000025FA E3F0 C080 0004          00002638   3719          LG    15,@lit_769_137 ; XXH_isLittleEndian
00002600                                    3720 @@gen_label166 DS    0H
00002600 05EF                               3721          BALR  14,15
00002602                                    3722 @@gen_label167 DS    0H
                                            3723 * ***
                                            3724 * ***       if ((endian_detected==XXH_littleEndian) || 0)
00002602 A7FE 0001               00000001   3725          CHI   15,1
00002606 4770 C090               00002648   3726          BNE   @L96
0000260A                                    3727 @L97     DS    0H
                                            3728 * ***           return XXH32_digest_endian(state_in, XXH_littleEndian)\
                                            3729 * ;
0000260A E3F0 2000 0004          00000000   3730          LG    15,0(0,2)   ; state_in
00002610 E3F0 D0B0 0024          000000B0   3731          STG   15,176(0,13)
00002616 E548 D0B8 0001          000000B8   3732          MVGHI 184(13),1
0000261C 4110 D0B0               000000B0   3733          LA    1,176(0,13)
00002620 E3F0 C088 0004          00002640   3734          LG    15,@lit_769_138 ; XXH32_digest_endian
00002626                                    3735 @@gen_label169 DS    0H
00002626 05EF                               3736          BALR  14,15
00002628                                    3737 @@gen_label170 DS    0H
00002628 B916 00FF                          3738          LLGFR 15,15
0000262C 47F0 C0B2               0000266A   3739          B     @ret_lab_769
00002630                                    3740          DS    0D
00002630 000000C0                           3741 @FRAMESIZE_769 DC F'192'
00002634 00000000
00002638 0000000000000748                   3742 @lit_769_137 DC AD($X$X$H_is$Little$Endian)
00002640 0000000000002400                   3743 @lit_769_138 DC AD($X$X$H32_digest_endian)
                                            3744 * ***       else
00002648                                    3745 @L96     DS    0H
                                            3746 * ***           return XXH32_digest_endian(state_in, XXH_bigEndian);
00002648 E3F0 2000 0004          00000000   3747          LG    15,0(0,2)   ; state_in
0000264E E3F0 D0B0 0024          000000B0   3748          STG   15,176(0,13)
00002654 D707 D0B8 D0B8 000000B8 000000B8   3749          XC    184(8,13),184(13)
0000265A 4110 D0B0               000000B0   3750          LA    1,176(0,13)
0000265E E3F0 C088 0004          00002640   3751          LG    15,@lit_769_138 ; XXH32_digest_endian
00002664                                    3752 @@gen_label171 DS    0H
00002664 05EF                               3753          BALR  14,15
00002666                                    3754 @@gen_label172 DS    0H
                                                                                                                           Page   77 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002666 B916 00FF                          3755          LLGFR 15,15
                                            3756 * ***   }
0000266A                                    3757 @ret_lab_769 DS 0H
                                            3758 * * **** Start of Epilogue
                                            3759          DCCEPIL
0000266A                                    3760+         ds 0h                                                          01-DCCEP
                                            3761+* Epilog
0000266A D707 D088 D088 00000088 00000088   3762+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002670 E3D0 D080 0004          00000080   3763+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002676 E3C0 D090 0004          00000090   3764+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000267C E3B0 C018 0004          00000018   3765+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002682 E3C0 B010 0021          00000010   3766+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002688 E3E0 D008 0004          00000008   3767+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000268E EB1C D020 0004          00000020   3768+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002694 078E                               3769+         bcr 8,14                if same dsab, just return              01-DCCEP
00002696 E3F0 D010 0024          00000010   3770+         stg 15,16(0,13)         save return code                       01-DCCEP
0000269C E300 D018 0024          00000018   3771+         stg 0,24(0,13)          save more return code                  01-DCCEP
000026A2 E3F0 D090 0004          00000090   3772+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000026A8 E3F0 F018 0004          00000018   3773+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000026AE 47F0 F040               00000040   3774+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3775+* End of Epilog
                                            3776 * * **** End of Epilogue
                                            3777          DROP  12
                                            3778 *
                                            3779 *   DSECT for automatic variables in "XXH32_digest"
                                            3780 *      (FUNCTION #769)
                                            3781 *
00000000                00000000 000000AC   3782 @AUTO#$X$X$H32_digest DSECT
00000000                                    3783          DS    XL168
000000A8                                    3784 $X$X$H32_digest#endian_detected#0 DS 1F ; endian_detected
                                            3785 *
000026B2                00000000 000059C8   3786 @CODE    CSECT
                                            3787 *
                                            3788 *
                                            3789 *
                                            3790 * ....... start of XXH32_canonicalFromHash
                                            3791 $X$X$H32_canonical$From$Hash ALIAS X'E7E7C8F3F26D838195969589838193C699*
                                                                9694C881A288'
000026B2                                    3792 @LNAME770 DS   0H
000026B2 00000017                           3793          DC    X'00000017'
000026B6 E7E7C8F3F26D8381                   3794          DC    C'XXH32_canonicalFromHash'
000026CD 00                                 3795          DC    X'00'
                                            3796 $X$X$H32_canonical$From$Hash DCCPRLG CINDEX=770,BASER=12,FRAME=176,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME770
                                            3797          macro
                                            3798          dccextrn &m
                                            3799          gblc    &$dccext(1000)
                                            3800          gbla    &$dccexti
                                            3801          lcla    &i
                                            3802 &$dccext(&$dccexti+1) setc    '&m'
                                            3803 &i       seta    1
                                            3804 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   78 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3805          aif    ('&$dccext(&i)' eq '&m').getout
                                            3806 &i       seta    &i+1
                                            3807          ago     .loop
                                            3808 .around  anop
                                            3809 &$dccexti seta &$dccexti+1
                                            3810          extrn  &m
                                            3811 .getout  anop
                                            3812          mend
000026D0                                    3813+$eye0077    ds    0d                                                    02-DCCCA
000026D0 C4C3C3                             3814+         dc cl3'DCC'                                                    02-DCCCA
000026D3 01                                 3815+         dc xl1'01' format one                                          02-DCCCA
000026D4 00000000                           3816+         dc a(0)                                                        02-DCCCA
000026D8 0000000000002742                   3817+         dc ad(@PER_770)                                                02-DCCCA
000026E0 00000000000000B0                   3818+         dc ad(176)                                                     02-DCCCA
000026E8 0000000000000000                   3819+         dc ad(0)                                                       02-DCCCA
000026F0 0000000000001000                   3820+         dc ad(4096)                                                    02-DCCCA
000026F8 20                                 3821+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000026F9 03                                 3822+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000026FA 03                                 3823+         dc al1(3)                                                      02-DCCCA
000026FB 08                                 3824+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000026FC 00                                 3825+         dc bl.8'00000000'                                              02-DCCCA
000026FD 000000                             3826+         dc al3(0)                                                      02-DCCCA
00002700 00000000000026B2                   3827+         dc ad(@LNAME770)                                               02-DCCCA
00002708                                    3828+         ds 0d                                                          02-DCCCA
00002708 00000000000026D0                   3829+         dc ad($eye0077)                                                02-DCCCA
00002710 0000000000000000                   3830+         dc ad(0)                                                       02-DCCCA
00002718                                    3831+         ds    0d                                                       01-DCCPR
                                            3832+         entry $X$X$H32_canonical$From$Hash                             01-DCCPR
00002718                                    3833+$X$X$H32_canonical$From$Hash ds 0d                                      01-DCCPR
00002718                                    3834+@REGION_770_1 ds 0h                                                     01-DCCPR
00002718 EBEC D008 0024          00000008   3835+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000271E E3E0 D088 0004          00000088   3836+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002724 E3C0 D090 0004          00000090   3837+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000272A B904 002E                          3838+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000272E E3B0 C018 0004          00000018   3839+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002734 A7EB 00B0               000000B0   3840+         aghi  14,176              increase by frame size               01-DCCPR
00002738 E3E0 C020 0021          00000020   3841+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000273E 4720 B020               00000020   3842+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002742                                    3843+@PER_770 ds    0h                                                       01-DCCPR
00002742 EBDE 2080 0024          00000080   3844+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002748 E3C0 2090 0024          00000090   3845+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000274E B904 00D2                          3846+         lgr   13,2                set real frame pointer               01-DCCPR
00002752 B904 00CF                          3847+         lgr   12,15               set base reg                         01-DCCPR
                        00002718            3848+         using @REGION_770_1,12                                         01-DCCPR
00002756 B904 0021                          3849          LGR   2,1         ; ptr to parm area
                                            3850 * ******* End of Prologue
                                            3851 * *
                                            3852 * ***       { enum { XXH_sa = 1/(int)(!!(sizeof(XXH32_canonical_t) == \
                                            3853 * sizeof(XXH32_hash_t))) }; };
                                            3854 * ***       if (XXH_isLittleEndian()) hash = XXH_swap32(hash);
0000275A E3F0 C0D0 0004          000027E8   3855          LG    15,@lit_770_141 ; XXH_isLittleEndian
00002760                                    3856 @@gen_label173 DS    0H
                                                                                                                           Page   79 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002760 05EF                               3857          BALR  14,15
00002762                                    3858 @@gen_label174 DS    0H
00002762 12FF                               3859          LTR   15,15
00002764 4780 C06C               00002784   3860          BZ    @L99
00002768 E3F0 200C 0016          0000000C   3861          LLGF  15,12(0,2)  ; hash
0000276E E3F0 D0A8 0024          000000A8   3862          STG   15,168(0,13)
00002774 4110 D0A8               000000A8   3863          LA    1,168(0,13)
00002778 E3F0 C0D8 0004          000027F0   3864          LG    15,@lit_770_142 ; XXH_swap32
0000277E                                    3865 @@gen_label176 DS    0H
0000277E 05EF                               3866          BALR  14,15
00002780                                    3867 @@gen_label177 DS    0H
00002780 50F0 200C               0000000C   3868          ST    15,12(0,2)  ; hash
00002784                                    3869 @L99     DS    0H
                                            3870 * ***       __memcpy(dst,&hash,sizeof(*dst));
00002784 41F0 200C               0000000C   3871          LA    15,12(0,2)
00002788 E310 2000 0004          00000000   3872          LG    1,0(0,2)
0000278E D203 1000 F000 00000000 00000000   3873          MVC   0(4,1),0(15)
                                            3874 * ***   }
00002794                                    3875 @ret_lab_770 DS 0H
                                            3876 * * **** Start of Epilogue
                                            3877          DCCEPIL
00002794                                    3878+         ds 0h                                                          01-DCCEP
                                            3879+* Epilog
00002794 D707 D088 D088 00000088 00000088   3880+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000279A E3D0 D080 0004          00000080   3881+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000027A0 E3C0 D090 0004          00000090   3882+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000027A6 E3B0 C018 0004          00000018   3883+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000027AC E3C0 B010 0021          00000010   3884+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000027B2 E3E0 D008 0004          00000008   3885+         lg  14,8(0,13)          load up return address                 01-DCCEP
000027B8 EB1C D020 0004          00000020   3886+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000027BE 078E                               3887+         bcr 8,14                if same dsab, just return              01-DCCEP
000027C0 E3F0 D010 0024          00000010   3888+         stg 15,16(0,13)         save return code                       01-DCCEP
000027C6 E300 D018 0024          00000018   3889+         stg 0,24(0,13)          save more return code                  01-DCCEP
000027CC E3F0 D090 0004          00000090   3890+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000027D2 E3F0 F018 0004          00000018   3891+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000027D8 47F0 F040               00000040   3892+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3893+* End of Epilog
                                            3894 * * **** End of Epilogue
000027E0                                    3895          DS    0D
000027E0 000000B0                           3896 @FRAMESIZE_770 DC F'176'
000027E4 00000000
000027E8 0000000000000748                   3897 @lit_770_141 DC AD($X$X$H_is$Little$Endian)
000027F0 0000000000000698                   3898 @lit_770_142 DC AD($X$X$H_swap32)
                                            3899          DROP  12
                                            3900 *
                                            3901 *   DSECT for automatic variables in "XXH32_canonicalFromHash"
                                            3902 *      (FUNCTION #770)
                                            3903 *
00000000                00000000 000000A8   3904 @AUTO#$X$X$H32_canonical$From$Hash DSECT
00000000                                    3905          DS    XL168
                                            3906 *
000027F8                00000000 000059C8   3907 @CODE    CSECT
                                                                                                                           Page   80 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3908 *
                                            3909 *
                                            3910 *
                                            3911 * ....... start of XXH32_hashFromCanonical
                                            3912 $X$X$H32_hash$From$Canonical ALIAS X'E7E7C8F3F26D8881A288C6999694C38195*
                                                                969589838193'
000027F8                                    3913 @LNAME771 DS   0H
000027F8 00000017                           3914          DC    X'00000017'
000027FC E7E7C8F3F26D8881                   3915          DC    C'XXH32_hashFromCanonical'
00002813 00                                 3916          DC    X'00'
                                            3917 $X$X$H32_hash$From$Canonical DCCPRLG CINDEX=771,BASER=12,FRAME=176,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME771
                                            3918          macro
                                            3919          dccextrn &m
                                            3920          gblc    &$dccext(1000)
                                            3921          gbla    &$dccexti
                                            3922          lcla    &i
                                            3923 &$dccext(&$dccexti+1) setc    '&m'
                                            3924 &i       seta    1
                                            3925 .loop    aif    (&i gt &$dccexti).around
                                            3926          aif    ('&$dccext(&i)' eq '&m').getout
                                            3927 &i       seta    &i+1
                                            3928          ago     .loop
                                            3929 .around  anop
                                            3930 &$dccexti seta &$dccexti+1
                                            3931          extrn  &m
                                            3932 .getout  anop
                                            3933          mend
00002818                                    3934+$eye0080    ds    0d                                                    02-DCCCA
00002818 C4C3C3                             3935+         dc cl3'DCC'                                                    02-DCCCA
0000281B 01                                 3936+         dc xl1'01' format one                                          02-DCCCA
0000281C 00000000                           3937+         dc a(0)                                                        02-DCCCA
00002820 000000000000288A                   3938+         dc ad(@PER_771)                                                02-DCCCA
00002828 00000000000000B0                   3939+         dc ad(176)                                                     02-DCCCA
00002830 0000000000000000                   3940+         dc ad(0)                                                       02-DCCCA
00002838 0000000000001000                   3941+         dc ad(4096)                                                    02-DCCCA
00002840 20                                 3942+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002841 03                                 3943+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002842 03                                 3944+         dc al1(3)                                                      02-DCCCA
00002843 08                                 3945+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002844 00                                 3946+         dc bl.8'00000000'                                              02-DCCCA
00002845 000000                             3947+         dc al3(0)                                                      02-DCCCA
00002848 00000000000027F8                   3948+         dc ad(@LNAME771)                                               02-DCCCA
00002850                                    3949+         ds 0d                                                          02-DCCCA
00002850 0000000000002818                   3950+         dc ad($eye0080)                                                02-DCCCA
00002858 0000000000000000                   3951+         dc ad(0)                                                       02-DCCCA
00002860                                    3952+         ds    0d                                                       01-DCCPR
                                            3953+         entry $X$X$H32_hash$From$Canonical                             01-DCCPR
00002860                                    3954+$X$X$H32_hash$From$Canonical ds 0d                                      01-DCCPR
00002860                                    3955+@REGION_771_1 ds 0h                                                     01-DCCPR
00002860 EBEC D008 0024          00000008   3956+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002866 E3E0 D088 0004          00000088   3957+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page   81 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000286C E3C0 D090 0004          00000090   3958+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002872 B904 002E                          3959+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002876 E3B0 C018 0004          00000018   3960+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000287C A7EB 00B0               000000B0   3961+         aghi  14,176              increase by frame size               01-DCCPR
00002880 E3E0 C020 0021          00000020   3962+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002886 4720 B020               00000020   3963+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000288A                                    3964+@PER_771 ds    0h                                                       01-DCCPR
0000288A EBDE 2080 0024          00000080   3965+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002890 E3C0 2090 0024          00000090   3966+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002896 B904 00D2                          3967+         lgr   13,2                set real frame pointer               01-DCCPR
0000289A B904 00CF                          3968+         lgr   12,15               set base reg                         01-DCCPR
                        00002860            3969+         using @REGION_771_1,12                                         01-DCCPR
                                            3970 * ******* End of Prologue
                                            3971 * *
                                            3972 * ***       return XXH_readBE32(src);
0000289E E3F0 1000 0004          00000000   3973          LG    15,0(0,1)   ; src
000028A4 E3F0 D0A8 0024          000000A8   3974          STG   15,168(0,13)
000028AA 4110 D0A8               000000A8   3975          LA    1,168(0,13)
000028AE E3F0 C0B0 0004          00002910   3976          LG    15,@lit_771_144 ; XXH_readBE32
000028B4                                    3977 @@gen_label178 DS    0H
000028B4 05EF                               3978          BALR  14,15
000028B6                                    3979 @@gen_label179 DS    0H
000028B6 B916 00FF                          3980          LLGFR 15,15
                                            3981 * ***   }
                                            3982 * * **** Start of Epilogue
                                            3983          DCCEPIL
000028BA                                    3984+         ds 0h                                                          01-DCCEP
                                            3985+* Epilog
000028BA D707 D088 D088 00000088 00000088   3986+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000028C0 E3D0 D080 0004          00000080   3987+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000028C6 E3C0 D090 0004          00000090   3988+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000028CC E3B0 C018 0004          00000018   3989+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000028D2 E3C0 B010 0021          00000010   3990+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000028D8 E3E0 D008 0004          00000008   3991+         lg  14,8(0,13)          load up return address                 01-DCCEP
000028DE EB1C D020 0004          00000020   3992+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000028E4 078E                               3993+         bcr 8,14                if same dsab, just return              01-DCCEP
000028E6 E3F0 D010 0024          00000010   3994+         stg 15,16(0,13)         save return code                       01-DCCEP
000028EC E300 D018 0024          00000018   3995+         stg 0,24(0,13)          save more return code                  01-DCCEP
000028F2 E3F0 D090 0004          00000090   3996+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000028F8 E3F0 F018 0004          00000018   3997+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000028FE 47F0 F040               00000040   3998+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3999+* End of Epilog
                                            4000 * * **** End of Epilogue
00002908                                    4001          DS    0D
00002908 000000B0                           4002 @FRAMESIZE_771 DC F'176'
0000290C 00000000
00002910 0000000000000AF8                   4003 @lit_771_144 DC AD($X$X$H_read$B$E32)
                                            4004          DROP  12
                                            4005 *
                                            4006 *   DSECT for automatic variables in "XXH32_hashFromCanonical"
                                            4007 *      (FUNCTION #771)
                                            4008 *
                                                                                                                           Page   82 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                00000000 000000A8   4009 @AUTO#$X$X$H32_hash$From$Canonical DSECT
00000000                                    4010          DS    XL168
                                            4011 *
00002918                00000000 000059C8   4012 @CODE    CSECT
                                            4013 *
                                            4014 *
                                            4015 *
                                            4016 * ....... start of XXH_read64
00002918                                    4017 @LNAME793 DS   0H
00002918 0000000A                           4018          DC    X'0000000A'
0000291C E7E7C86D99858184                   4019          DC    C'XXH_read64'
00002926 00                                 4020          DC    X'00'
                                            4021 $X$X$H_read64 DCCPRLG CINDEX=793,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME793
                                            4022          macro
                                            4023          dccextrn &m
                                            4024          gblc    &$dccext(1000)
                                            4025          gbla    &$dccexti
                                            4026          lcla    &i
                                            4027 &$dccext(&$dccexti+1) setc    '&m'
                                            4028 &i       seta    1
                                            4029 .loop    aif    (&i gt &$dccexti).around
                                            4030          aif    ('&$dccext(&i)' eq '&m').getout
                                            4031 &i       seta    &i+1
                                            4032          ago     .loop
                                            4033 .around  anop
                                            4034 &$dccexti seta &$dccexti+1
                                            4035          extrn  &m
                                            4036 .getout  anop
                                            4037          mend
00002928                                    4038+$eye0083    ds    0d                                                    02-DCCCA
00002928 C4C3C3                             4039+         dc cl3'DCC'                                                    02-DCCCA
0000292B 01                                 4040+         dc xl1'01' format one                                          02-DCCCA
0000292C 00000000                           4041+         dc a(0)                                                        02-DCCCA
00002930 000000000000299A                   4042+         dc ad(@PER_793)                                                02-DCCCA
00002938 00000000000000B0                   4043+         dc ad(176)                                                     02-DCCCA
00002940 0000000000000000                   4044+         dc ad(0)                                                       02-DCCCA
00002948 0000000000001000                   4045+         dc ad(4096)                                                    02-DCCCA
00002950 20                                 4046+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002951 03                                 4047+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002952 03                                 4048+         dc al1(3)                                                      02-DCCCA
00002953 08                                 4049+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002954 00                                 4050+         dc bl.8'00000000'                                              02-DCCCA
00002955 000000                             4051+         dc al3(0)                                                      02-DCCCA
00002958 0000000000002918                   4052+         dc ad(@LNAME793)                                               02-DCCCA
00002960                                    4053+         ds 0d                                                          02-DCCCA
00002960 0000000000002928                   4054+         dc ad($eye0083)                                                02-DCCCA
00002968 0000000000000000                   4055+         dc ad(0)                                                       02-DCCCA
00002970                                    4056+         ds    0d                                                       01-DCCPR
00002970                                    4057+$X$X$H_read64 ds 0d                                                     01-DCCPR
00002970                                    4058+@REGION_793_1 ds 0h                                                     01-DCCPR
00002970 EBEC D008 0024          00000008   4059+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   83 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002976 E3E0 D088 0004          00000088   4060+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000297C E3C0 D090 0004          00000090   4061+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002982 B904 002E                          4062+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002986 E3B0 C018 0004          00000018   4063+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000298C A7EB 00B0               000000B0   4064+         aghi  14,176              increase by frame size               01-DCCPR
00002990 E3E0 C020 0021          00000020   4065+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002996 4720 B020               00000020   4066+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000299A                                    4067+@PER_793 ds    0h                                                       01-DCCPR
0000299A EBDE 2080 0024          00000080   4068+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000029A0 E3C0 2090 0024          00000090   4069+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000029A6 B904 00D2                          4070+         lgr   13,2                set real frame pointer               01-DCCPR
000029AA B904 00CF                          4071+         lgr   12,15               set base reg                         01-DCCPR
                        00002970            4072+         using @REGION_793_1,12                                         01-DCCPR
                                            4073 * ******* End of Prologue
                                            4074 * *
                                            4075 * ***       U64 val;
                                            4076 * ***       __memcpy(&val,memPtr,sizeof(val));
000029AE E3F0 1000 0004          00000000   4077          LG    15,0(0,1)
000029B4 4110 D0A8               000000A8   4078          LA    1,168(0,13)
000029B8 D207 1000 F000 00000000 00000000   4079          MVC   0(8,1),0(15)
                                            4080 * ***       return val;
000029BE E3F0 D0A8 0004          000000A8   4081          LG    15,168(0,13) ; val
                                            4082 * ***   }
                                            4083 * * **** Start of Epilogue
                                            4084          DCCEPIL
000029C4                                    4085+         ds 0h                                                          01-DCCEP
                                            4086+* Epilog
000029C4 D707 D088 D088 00000088 00000088   4087+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000029CA E3D0 D080 0004          00000080   4088+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000029D0 E3C0 D090 0004          00000090   4089+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000029D6 E3B0 C018 0004          00000018   4090+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000029DC E3C0 B010 0021          00000010   4091+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000029E2 E3E0 D008 0004          00000008   4092+         lg  14,8(0,13)          load up return address                 01-DCCEP
000029E8 EB1C D020 0004          00000020   4093+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000029EE 078E                               4094+         bcr 8,14                if same dsab, just return              01-DCCEP
000029F0 E3F0 D010 0024          00000010   4095+         stg 15,16(0,13)         save return code                       01-DCCEP
000029F6 E300 D018 0024          00000018   4096+         stg 0,24(0,13)          save more return code                  01-DCCEP
000029FC E3F0 D090 0004          00000090   4097+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002A02 E3F0 F018 0004          00000018   4098+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002A08 47F0 F040               00000040   4099+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4100+* End of Epilog
                                            4101 * * **** End of Epilogue
00002A10                                    4102          DS    0D
00002A10 000000B0                           4103 @FRAMESIZE_793 DC F'176'
                                            4104          DROP  12
                                            4105 *
                                            4106 *   DSECT for automatic variables in "XXH_read64"
                                            4107 *      (FUNCTION #793)
                                            4108 *
00000000                00000000 000000B0   4109 @AUTO#$X$X$H_read64 DSECT
00000000                                    4110          DS    XL168
000000A8                                    4111 $X$X$H_read64#val#0 DS 8XL1 ; val
                                                                                                                           Page   84 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4112 *
00002A14                00000000 000059C8   4113 @CODE    CSECT
                                            4114 *
                                            4115 *
                                            4116 *
                                            4117 * ....... start of XXH_swap64
00002A14                                    4118 @LNAME794 DS   0H
00002A14 0000000A                           4119          DC    X'0000000A'
00002A18 E7E7C86DA2A68197                   4120          DC    C'XXH_swap64'
00002A22 00                                 4121          DC    X'00'
                                            4122 $X$X$H_swap64 DCCPRLG CINDEX=794,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME794
                                            4123          macro
                                            4124          dccextrn &m
                                            4125          gblc    &$dccext(1000)
                                            4126          gbla    &$dccexti
                                            4127          lcla    &i
                                            4128 &$dccext(&$dccexti+1) setc    '&m'
                                            4129 &i       seta    1
                                            4130 .loop    aif    (&i gt &$dccexti).around
                                            4131          aif    ('&$dccext(&i)' eq '&m').getout
                                            4132 &i       seta    &i+1
                                            4133          ago     .loop
                                            4134 .around  anop
                                            4135 &$dccexti seta &$dccexti+1
                                            4136          extrn  &m
                                            4137 .getout  anop
                                            4138          mend
00002A28                                    4139+$eye0086    ds    0d                                                    02-DCCCA
00002A28 C4C3C3                             4140+         dc cl3'DCC'                                                    02-DCCCA
00002A2B 01                                 4141+         dc xl1'01' format one                                          02-DCCCA
00002A2C 00000000                           4142+         dc a(0)                                                        02-DCCCA
00002A30 0000000000000000                   4143+         dc ad(0)                                                       02-DCCCA
00002A38 00000000000000A8                   4144+         dc ad(168)                                                     02-DCCCA
00002A40 0000000000000000                   4145+         dc ad(0)                                                       02-DCCCA
00002A48 0000000000001000                   4146+         dc ad(4096)                                                    02-DCCCA
00002A50 20                                 4147+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002A51 03                                 4148+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002A52 03                                 4149+         dc al1(3)                                                      02-DCCCA
00002A53 08                                 4150+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002A54 00                                 4151+         dc bl.8'00000000'                                              02-DCCCA
00002A55 000000                             4152+         dc al3(0)                                                      02-DCCCA
00002A58 0000000000002A14                   4153+         dc ad(@LNAME794)                                               02-DCCCA
00002A60                                    4154+         ds 0d                                                          02-DCCCA
00002A60 0000000000002A28                   4155+         dc ad($eye0086)                                                02-DCCCA
00002A68 0000000000000000                   4156+         dc ad(0)                                                       02-DCCCA
00002A70                                    4157+         ds    0d                                                       01-DCCPR
00002A70                                    4158+$X$X$H_swap64 ds 0d                                                     01-DCCPR
00002A70                                    4159+@REGION_794_1 ds 0h                                                     01-DCCPR
00002A70 EBEC D008 0024          00000008   4160+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002A76 B904 00CF                          4161+         lgr   12,15               set base reg                         01-DCCPR
                        00002A70            4162+         using @REGION_794_1,12                                         01-DCCPR
                                                                                                                           Page   85 
  Active Usings: @REGION_794_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4163 * ******* End of Prologue
                                            4164 * *
                                            4165 * ***       return  ((x << 56) & 0xff00000000000000ULL) |
00002A7A E3F0 1000 0004          00000000   4166          LG    15,0(0,1)   ; x
                                            4167 * ***               ((x << 40) & 0x00ff000000000000ULL) |
                                            4168 * ***               ((x << 24) & 0x0000ff0000000000ULL) |
                                            4169 * ***               ((x << 8)  & 0x000000ff00000000ULL) |
                                            4170 * ***               ((x >> 8)  & 0x00000000ff000000ULL) |
                                            4171 * ***               ((x >> 24) & 0x0000000000ff0000ULL) |
                                            4172 * ***               ((x >> 40) & 0x000000000000ff00ULL) |
                                            4173 * ***               ((x >> 56) & 0x00000000000000ffULL);
00002A80 EB1F 0038 000D          00000038   4174          SLLG  1,15,56(0)
00002A86 E310 C0D8 0080          00002B48   4175          NG    1,@lit_794_147
00002A8C EB2F 0028 000D          00000028   4176          SLLG  2,15,40(0)
00002A92 E320 C0D0 0080          00002B40   4177          NG    2,@lit_794_148
00002A98 B981 0012                          4178          OGR   1,2
00002A9C EB2F 0018 000D          00000018   4179          SLLG  2,15,24(0)
00002AA2 E320 C0C8 0080          00002B38   4180          NG    2,@lit_794_149
00002AA8 B981 0012                          4181          OGR   1,2
00002AAC EB2F 0008 000D          00000008   4182          SLLG  2,15,8(0)
00002AB2 E320 C0C0 0080          00002B30   4183          NG    2,@lit_794_150
00002AB8 B981 0012                          4184          OGR   1,2
00002ABC EB2F 0008 000C          00000008   4185          SRLG  2,15,8(0)
00002AC2 E320 C0B8 0080          00002B28   4186          NG    2,@lit_794_151
00002AC8 B981 0012                          4187          OGR   1,2
00002ACC EB2F 0018 000C          00000018   4188          SRLG  2,15,24(0)
00002AD2 E320 C0B0 0080          00002B20   4189          NG    2,@lit_794_152
00002AD8 B981 0012                          4190          OGR   1,2
00002ADC EB2F 0028 000C          00000028   4191          SRLG  2,15,40(0)
00002AE2 E320 C0A8 0080          00002B18   4192          NG    2,@lit_794_153
00002AE8 B981 0012                          4193          OGR   1,2
00002AEC EBFF 0038 000C          00000038   4194          SRLG  15,15,56(0)
00002AF2 E3F0 C0A0 0080          00002B10   4195          NG    15,@lit_794_154
00002AF8 B981 001F                          4196          OGR   1,15
00002AFC B904 00F1                          4197          LGR   15,1
                                            4198 * ***   }
                                            4199 * * **** Start of Epilogue
                                            4200          DCCEPIL
00002B00                                    4201+         ds 0h                                                          01-DCCEP
                                            4202+* Epilog
                                            4203+* Epilog
00002B00 E3E0 D008 0004          00000008   4204+         lg    14,8(,13) restore the reg                                01-DCCEP
00002B06 EB1C D020 0004          00000020   4205+         lmg   1,12,32(13)                                              01-DCCEP
00002B0C 07FE                               4206+         br   14                                                        01-DCCEP
                                            4207+* End of Epilog
                                            4208 * * **** End of Epilogue
00002B10                                    4209          DS    0D
00002B10 00000000000000FF                   4210 @lit_794_154 DC FD'255' 0x00000000000000ff
00002B18 000000000000FF00                   4211 @lit_794_153 DC FD'65280' 0x000000000000ff00
00002B20 0000000000FF0000                   4212 @lit_794_152 DC FD'16711680' 0x0000000000ff0000
00002B28 00000000FF000000                   4213 @lit_794_151 DC FD'4278190080' 0x00000000ff000000
00002B30 000000FF00000000                   4214 @lit_794_150 DC FD'1095216660480' 0x000000ff00000000
                                                                                                                           Page   86 
  Active Usings: @REGION_794_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002B38 0000FF0000000000                   4215 @lit_794_149 DC FD'280375465082880' 0x0000ff0000000000
00002B40 00FF000000000000                   4216 @lit_794_148 DC FD'71776119061217280' 0x00ff000000000000
00002B48 FF00000000000000                   4217 @lit_794_147 DC FD'-72057594037927936' 0xff00000000000000
                                            4218          DROP  12
                                            4219 *
                                            4220 *   DSECT for automatic variables in "XXH_swap64"
                                            4221 *      (FUNCTION #794)
                                            4222 *
00000000                00000000 000000A8   4223 @AUTO#$X$X$H_swap64 DSECT
00000000                                    4224          DS    XL168
                                            4225 *
00002B50                00000000 000059C8   4226 @CODE    CSECT
                                            4227 *
                                            4228 *
                                            4229 *
                                            4230 * ....... start of XXH_readLE64_align
00002B50                                    4231 @LNAME795 DS   0H
00002B50 00000012                           4232          DC    X'00000012'
00002B54 E7E7C86D99858184                   4233          DC    C'XXH_readLE64_align'
00002B66 00                                 4234          DC    X'00'
                                            4235 $X$X$H_read$L$E64_align DCCPRLG CINDEX=795,BASER=12,FRAME=176,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME795
                                            4236          macro
                                            4237          dccextrn &m
                                            4238          gblc    &$dccext(1000)
                                            4239          gbla    &$dccexti
                                            4240          lcla    &i
                                            4241 &$dccext(&$dccexti+1) setc    '&m'
                                            4242 &i       seta    1
                                            4243 .loop    aif    (&i gt &$dccexti).around
                                            4244          aif    ('&$dccext(&i)' eq '&m').getout
                                            4245 &i       seta    &i+1
                                            4246          ago     .loop
                                            4247 .around  anop
                                            4248 &$dccexti seta &$dccexti+1
                                            4249          extrn  &m
                                            4250 .getout  anop
                                            4251          mend
00002B68                                    4252+$eye0089    ds    0d                                                    02-DCCCA
00002B68 C4C3C3                             4253+         dc cl3'DCC'                                                    02-DCCCA
00002B6B 01                                 4254+         dc xl1'01' format one                                          02-DCCCA
00002B6C 00000000                           4255+         dc a(0)                                                        02-DCCCA
00002B70 0000000000002BDA                   4256+         dc ad(@PER_795)                                                02-DCCCA
00002B78 00000000000000B0                   4257+         dc ad(176)                                                     02-DCCCA
00002B80 0000000000000000                   4258+         dc ad(0)                                                       02-DCCCA
00002B88 0000000000001000                   4259+         dc ad(4096)                                                    02-DCCCA
00002B90 20                                 4260+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002B91 03                                 4261+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002B92 03                                 4262+         dc al1(3)                                                      02-DCCCA
00002B93 08                                 4263+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002B94 00                                 4264+         dc bl.8'00000000'                                              02-DCCCA
00002B95 000000                             4265+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   87 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002B98 0000000000002B50                   4266+         dc ad(@LNAME795)                                               02-DCCCA
00002BA0                                    4267+         ds 0d                                                          02-DCCCA
00002BA0 0000000000002B68                   4268+         dc ad($eye0089)                                                02-DCCCA
00002BA8 0000000000000000                   4269+         dc ad(0)                                                       02-DCCCA
00002BB0                                    4270+         ds    0d                                                       01-DCCPR
00002BB0                                    4271+$X$X$H_read$L$E64_align ds 0d                                           01-DCCPR
00002BB0                                    4272+@REGION_795_1 ds 0h                                                     01-DCCPR
00002BB0 EBEC D008 0024          00000008   4273+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002BB6 E3E0 D088 0004          00000088   4274+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002BBC E3C0 D090 0004          00000090   4275+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002BC2 B904 002E                          4276+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002BC6 E3B0 C018 0004          00000018   4277+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002BCC A7EB 00B0               000000B0   4278+         aghi  14,176              increase by frame size               01-DCCPR
00002BD0 E3E0 C020 0021          00000020   4279+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002BD6 4720 B020               00000020   4280+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002BDA                                    4281+@PER_795 ds    0h                                                       01-DCCPR
00002BDA EBDE 2080 0024          00000080   4282+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002BE0 E3C0 2090 0024          00000090   4283+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002BE6 B904 00D2                          4284+         lgr   13,2                set real frame pointer               01-DCCPR
00002BEA B904 00CF                          4285+         lgr   12,15               set base reg                         01-DCCPR
                        00002BB0            4286+         using @REGION_795_1,12                                         01-DCCPR
                                            4287 * ******* End of Prologue
                                            4288 * *
                                            4289 * ***       if (align==XXH_unaligned)
00002BEE E3F0 1000 0004          00000000   4290          LG    15,0(0,1)   ; ptr
00002BF4 E55C 1014 0001          00000014   4291          CHSI  20(1),1
00002BFA 4770 C0B0               00002C60   4292          BNE   @L100
                                            4293 * ***           return endian==XXH_littleEndian ? XXH_read64(ptr) : XX\
                                            4294 * H_swap64(XXH_read64(ptr));
00002BFE E55C 100C 0001          0000000C   4295          CHSI  12(1),1
00002C04 4770 C088               00002C38   4296          BNE   @L101
00002C08 E3F0 D0A8 0024          000000A8   4297          STG   15,168(0,13)
00002C0E 4110 D0A8               000000A8   4298          LA    1,168(0,13)
00002C12 E3F0 C078 0004          00002C28   4299          LG    15,@lit_795_155 ; XXH_read64
00002C18                                    4300 @@gen_label182 DS    0H
00002C18 05EF                               4301          BALR  14,15
00002C1A                                    4302 @@gen_label183 DS    0H
00002C1A 47F0 C0AC               00002C5C   4303          B     @L102
00002C20                                    4304          DS    0D
00002C20 000000B0                           4305 @FRAMESIZE_795 DC F'176'
00002C24 00000000
00002C28 0000000000002970                   4306 @lit_795_155 DC AD($X$X$H_read64)
00002C30 0000000000002A70                   4307 @lit_795_157 DC AD($X$X$H_swap64)
00002C38                                    4308 @L101    DS    0H
00002C38 E3F0 D0A8 0024          000000A8   4309          STG   15,168(0,13)
00002C3E 4110 D0A8               000000A8   4310          LA    1,168(0,13)
00002C42 E3F0 C078 0004          00002C28   4311          LG    15,@lit_795_155 ; XXH_read64
00002C48                                    4312 @@gen_label184 DS    0H
00002C48 05EF                               4313          BALR  14,15
00002C4A                                    4314 @@gen_label185 DS    0H
00002C4A E3F0 D0A8 0024          000000A8   4315          STG   15,168(0,13)
00002C50 4110 D0A8               000000A8   4316          LA    1,168(0,13)
                                                                                                                           Page   88 
  Active Usings: @REGION_795_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002C54 E3F0 C080 0004          00002C30   4317          LG    15,@lit_795_157 ; XXH_swap64
00002C5A                                    4318 @@gen_label186 DS    0H
00002C5A 05EF                               4319          BALR  14,15
00002C5C                                    4320 @@gen_label187 DS    0H
00002C5C                                    4321 @L102    DS    0H
00002C5C 47F0 C0DC               00002C8C   4322          B     @ret_lab_795
                                            4323 * ***       else
00002C60                                    4324 @L100    DS    0H
                                            4325 * ***           return endian==XXH_littleEndian ? *(const U64*)ptr : X\
                                            4326 * XH_swap64(*(const U64*)ptr);
00002C60 E55C 100C 0001          0000000C   4327          CHSI  12(1),1
00002C66 4770 C0C4               00002C74   4328          BNE   @L104
00002C6A E3F0 F000 0004          00000000   4329          LG    15,0(0,15)  ; ptr
00002C70 47F0 C0DC               00002C8C   4330          B     @L105
00002C74                                    4331 @L104    DS    0H
00002C74 E3F0 F000 0004          00000000   4332          LG    15,0(0,15)
00002C7A E3F0 D0A8 0024          000000A8   4333          STG   15,168(0,13)
00002C80 4110 D0A8               000000A8   4334          LA    1,168(0,13)
00002C84 E3F0 C080 0004          00002C30   4335          LG    15,@lit_795_157 ; XXH_swap64
00002C8A                                    4336 @@gen_label189 DS    0H
00002C8A 05EF                               4337          BALR  14,15
00002C8C                                    4338 @@gen_label190 DS    0H
00002C8C                                    4339 @L105    DS    0H
                                            4340 * ***   }
00002C8C                                    4341 @ret_lab_795 DS 0H
                                            4342 * * **** Start of Epilogue
                                            4343          DCCEPIL
00002C8C                                    4344+         ds 0h                                                          01-DCCEP
                                            4345+* Epilog
00002C8C D707 D088 D088 00000088 00000088   4346+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002C92 E3D0 D080 0004          00000080   4347+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002C98 E3C0 D090 0004          00000090   4348+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002C9E E3B0 C018 0004          00000018   4349+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002CA4 E3C0 B010 0021          00000010   4350+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002CAA E3E0 D008 0004          00000008   4351+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002CB0 EB1C D020 0004          00000020   4352+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002CB6 078E                               4353+         bcr 8,14                if same dsab, just return              01-DCCEP
00002CB8 E3F0 D010 0024          00000010   4354+         stg 15,16(0,13)         save return code                       01-DCCEP
00002CBE E300 D018 0024          00000018   4355+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002CC4 E3F0 D090 0004          00000090   4356+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002CCA E3F0 F018 0004          00000018   4357+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002CD0 47F0 F040               00000040   4358+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4359+* End of Epilog
                                            4360 * * **** End of Epilogue
                                            4361          DROP  12
                                            4362 *
                                            4363 *   DSECT for automatic variables in "XXH_readLE64_align"
                                            4364 *      (FUNCTION #795)
                                            4365 *
00000000                00000000 000000A8   4366 @AUTO#$X$X$H_read$L$E64_align DSECT
00000000                                    4367          DS    XL168
                                            4368 *
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002CD4                00000000 000059C8   4369 @CODE    CSECT
                                            4370 *
                                            4371 *
                                            4372 *
                                            4373 * ....... start of XXH_readLE64
00002CD4                                    4374 @LNAME796 DS   0H
00002CD4 0000000C                           4375          DC    X'0000000C'
00002CD8 E7E7C86D99858184                   4376          DC    C'XXH_readLE64'
00002CE4 00                                 4377          DC    X'00'
                                            4378 $X$X$H_read$L$E64 DCCPRLG CINDEX=796,BASER=12,FRAME=192,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME796
                                            4379          macro
                                            4380          dccextrn &m
                                            4381          gblc    &$dccext(1000)
                                            4382          gbla    &$dccexti
                                            4383          lcla    &i
                                            4384 &$dccext(&$dccexti+1) setc    '&m'
                                            4385 &i       seta    1
                                            4386 .loop    aif    (&i gt &$dccexti).around
                                            4387          aif    ('&$dccext(&i)' eq '&m').getout
                                            4388 &i       seta    &i+1
                                            4389          ago     .loop
                                            4390 .around  anop
                                            4391 &$dccexti seta &$dccexti+1
                                            4392          extrn  &m
                                            4393 .getout  anop
                                            4394          mend
00002CE8                                    4395+$eye0092    ds    0d                                                    02-DCCCA
00002CE8 C4C3C3                             4396+         dc cl3'DCC'                                                    02-DCCCA
00002CEB 01                                 4397+         dc xl1'01' format one                                          02-DCCCA
00002CEC 00000000                           4398+         dc a(0)                                                        02-DCCCA
00002CF0 0000000000002D5A                   4399+         dc ad(@PER_796)                                                02-DCCCA
00002CF8 00000000000000C0                   4400+         dc ad(192)                                                     02-DCCCA
00002D00 0000000000000000                   4401+         dc ad(0)                                                       02-DCCCA
00002D08 0000000000001000                   4402+         dc ad(4096)                                                    02-DCCCA
00002D10 20                                 4403+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002D11 03                                 4404+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002D12 03                                 4405+         dc al1(3)                                                      02-DCCCA
00002D13 08                                 4406+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002D14 00                                 4407+         dc bl.8'00000000'                                              02-DCCCA
00002D15 000000                             4408+         dc al3(0)                                                      02-DCCCA
00002D18 0000000000002CD4                   4409+         dc ad(@LNAME796)                                               02-DCCCA
00002D20                                    4410+         ds 0d                                                          02-DCCCA
00002D20 0000000000002CE8                   4411+         dc ad($eye0092)                                                02-DCCCA
00002D28 0000000000000000                   4412+         dc ad(0)                                                       02-DCCCA
00002D30                                    4413+         ds    0d                                                       01-DCCPR
00002D30                                    4414+$X$X$H_read$L$E64 ds 0d                                                 01-DCCPR
00002D30                                    4415+@REGION_796_1 ds 0h                                                     01-DCCPR
00002D30 EBEC D008 0024          00000008   4416+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002D36 E3E0 D088 0004          00000088   4417+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002D3C E3C0 D090 0004          00000090   4418+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002D42 B904 002E                          4419+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page   90 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002D46 E3B0 C018 0004          00000018   4420+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002D4C A7EB 00C0               000000C0   4421+         aghi  14,192              increase by frame size               01-DCCPR
00002D50 E3E0 C020 0021          00000020   4422+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002D56 4720 B020               00000020   4423+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002D5A                                    4424+@PER_796 ds    0h                                                       01-DCCPR
00002D5A EBDE 2080 0024          00000080   4425+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002D60 E3C0 2090 0024          00000090   4426+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002D66 B904 00D2                          4427+         lgr   13,2                set real frame pointer               01-DCCPR
00002D6A B904 00CF                          4428+         lgr   12,15               set base reg                         01-DCCPR
                        00002D30            4429+         using @REGION_796_1,12                                         01-DCCPR
                                            4430 * ******* End of Prologue
                                            4431 * *
                                            4432 * ***       return XXH_readLE64_align(ptr, endian, XXH_unaligned);
00002D6E E3F0 1000 0004          00000000   4433          LG    15,0(0,1)   ; ptr
00002D74 E3F0 D0A8 0024          000000A8   4434          STG   15,168(0,13)
00002D7A E3F0 100C 0014          0000000C   4435          LGF   15,12(0,1)  ; endian
00002D80 E3F0 D0B0 0024          000000B0   4436          STG   15,176(0,13)
00002D86 E548 D0B8 0001          000000B8   4437          MVGHI 184(13),1
00002D8C 4110 D0A8               000000A8   4438          LA    1,168(0,13)
00002D90 E3F0 C0B8 0004          00002DE8   4439          LG    15,@lit_796_160 ; XXH_readLE64_align
00002D96                                    4440 @@gen_label191 DS    0H
00002D96 05EF                               4441          BALR  14,15
00002D98                                    4442 @@gen_label192 DS    0H
                                            4443 * ***   }
                                            4444 * * **** Start of Epilogue
                                            4445          DCCEPIL
00002D98                                    4446+         ds 0h                                                          01-DCCEP
                                            4447+* Epilog
00002D98 D707 D088 D088 00000088 00000088   4448+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002D9E E3D0 D080 0004          00000080   4449+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002DA4 E3C0 D090 0004          00000090   4450+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002DAA E3B0 C018 0004          00000018   4451+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002DB0 E3C0 B010 0021          00000010   4452+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002DB6 E3E0 D008 0004          00000008   4453+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002DBC EB1C D020 0004          00000020   4454+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002DC2 078E                               4455+         bcr 8,14                if same dsab, just return              01-DCCEP
00002DC4 E3F0 D010 0024          00000010   4456+         stg 15,16(0,13)         save return code                       01-DCCEP
00002DCA E300 D018 0024          00000018   4457+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002DD0 E3F0 D090 0004          00000090   4458+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002DD6 E3F0 F018 0004          00000018   4459+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002DDC 47F0 F040               00000040   4460+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4461+* End of Epilog
                                            4462 * * **** End of Epilogue
00002DE0                                    4463          DS    0D
00002DE0 000000C0                           4464 @FRAMESIZE_796 DC F'192'
00002DE4 00000000
00002DE8 0000000000002BB0                   4465 @lit_796_160 DC AD($X$X$H_read$L$E64_align)
                                            4466          DROP  12
                                            4467 *
                                            4468 *   DSECT for automatic variables in "XXH_readLE64"
                                            4469 *      (FUNCTION #796)
                                            4470 *
                                                                                                                           Page   91 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                00000000 000000A8   4471 @AUTO#$X$X$H_read$L$E64 DSECT
00000000                                    4472          DS    XL168
                                            4473 *
00002DF0                00000000 000059C8   4474 @CODE    CSECT
                                            4475 *
                                            4476 *
                                            4477 *
                                            4478 * ....... start of XXH_readBE64
00002DF0                                    4479 @LNAME797 DS   0H
00002DF0 0000000C                           4480          DC    X'0000000C'
00002DF4 E7E7C86D99858184                   4481          DC    C'XXH_readBE64'
00002E00 00                                 4482          DC    X'00'
                                            4483 $X$X$H_read$B$E64 DCCPRLG CINDEX=797,BASER=12,FRAME=176,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME797
                                            4484          macro
                                            4485          dccextrn &m
                                            4486          gblc    &$dccext(1000)
                                            4487          gbla    &$dccexti
                                            4488          lcla    &i
                                            4489 &$dccext(&$dccexti+1) setc    '&m'
                                            4490 &i       seta    1
                                            4491 .loop    aif    (&i gt &$dccexti).around
                                            4492          aif    ('&$dccext(&i)' eq '&m').getout
                                            4493 &i       seta    &i+1
                                            4494          ago     .loop
                                            4495 .around  anop
                                            4496 &$dccexti seta &$dccexti+1
                                            4497          extrn  &m
                                            4498 .getout  anop
                                            4499          mend
00002E08                                    4500+$eye0095    ds    0d                                                    02-DCCCA
00002E08 C4C3C3                             4501+         dc cl3'DCC'                                                    02-DCCCA
00002E0B 01                                 4502+         dc xl1'01' format one                                          02-DCCCA
00002E0C 00000000                           4503+         dc a(0)                                                        02-DCCCA
00002E10 0000000000002E7A                   4504+         dc ad(@PER_797)                                                02-DCCCA
00002E18 00000000000000B0                   4505+         dc ad(176)                                                     02-DCCCA
00002E20 0000000000000000                   4506+         dc ad(0)                                                       02-DCCCA
00002E28 0000000000001000                   4507+         dc ad(4096)                                                    02-DCCCA
00002E30 20                                 4508+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002E31 03                                 4509+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002E32 03                                 4510+         dc al1(3)                                                      02-DCCCA
00002E33 08                                 4511+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002E34 00                                 4512+         dc bl.8'00000000'                                              02-DCCCA
00002E35 000000                             4513+         dc al3(0)                                                      02-DCCCA
00002E38 0000000000002DF0                   4514+         dc ad(@LNAME797)                                               02-DCCCA
00002E40                                    4515+         ds 0d                                                          02-DCCCA
00002E40 0000000000002E08                   4516+         dc ad($eye0095)                                                02-DCCCA
00002E48 0000000000000000                   4517+         dc ad(0)                                                       02-DCCCA
00002E50                                    4518+         ds    0d                                                       01-DCCPR
00002E50                                    4519+$X$X$H_read$B$E64 ds 0d                                                 01-DCCPR
00002E50                                    4520+@REGION_797_1 ds 0h                                                     01-DCCPR
00002E50 EBEC D008 0024          00000008   4521+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002E56 E3E0 D088 0004          00000088   4522+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002E5C E3C0 D090 0004          00000090   4523+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002E62 B904 002E                          4524+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002E66 E3B0 C018 0004          00000018   4525+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002E6C A7EB 00B0               000000B0   4526+         aghi  14,176              increase by frame size               01-DCCPR
00002E70 E3E0 C020 0021          00000020   4527+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002E76 4720 B020               00000020   4528+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002E7A                                    4529+@PER_797 ds    0h                                                       01-DCCPR
00002E7A EBDE 2080 0024          00000080   4530+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002E80 E3C0 2090 0024          00000090   4531+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002E86 B904 00D2                          4532+         lgr   13,2                set real frame pointer               01-DCCPR
00002E8A B904 00CF                          4533+         lgr   12,15               set base reg                         01-DCCPR
                        00002E50            4534+         using @REGION_797_1,12                                         01-DCCPR
00002E8E B904 0021                          4535          LGR   2,1         ; ptr to parm area
                                            4536 * ******* End of Prologue
                                            4537 * *
                                            4538 * ***       return XXH_isLittleEndian() ? XXH_swap64(XXH_read64(ptr)) \
                                            4539 * : XXH_read64(ptr);
00002E92 E3F0 C088 0004          00002ED8   4540          LG    15,@lit_797_162 ; XXH_isLittleEndian
00002E98                                    4541 @@gen_label193 DS    0H
00002E98 05EF                               4542          BALR  14,15
00002E9A                                    4543 @@gen_label194 DS    0H
00002E9A 12FF                               4544          LTR   15,15
00002E9C 4780 C0A0               00002EF0   4545          BZ    @L106
00002EA0 E3F0 2000 0004          00000000   4546          LG    15,0(0,2)   ; ptr
00002EA6 E3F0 D0A8 0024          000000A8   4547          STG   15,168(0,13)
00002EAC 4110 D0A8               000000A8   4548          LA    1,168(0,13)
00002EB0 E3F0 C090 0004          00002EE0   4549          LG    15,@lit_797_163 ; XXH_read64
00002EB6                                    4550 @@gen_label196 DS    0H
00002EB6 05EF                               4551          BALR  14,15
00002EB8                                    4552 @@gen_label197 DS    0H
00002EB8 E3F0 D0A8 0024          000000A8   4553          STG   15,168(0,13)
00002EBE 4110 D0A8               000000A8   4554          LA    1,168(0,13)
00002EC2 E3F0 C098 0004          00002EE8   4555          LG    15,@lit_797_164 ; XXH_swap64
00002EC8                                    4556 @@gen_label198 DS    0H
00002EC8 05EF                               4557          BALR  14,15
00002ECA                                    4558 @@gen_label199 DS    0H
00002ECA 47F0 C0B8               00002F08   4559          B     @L107
00002ED0                                    4560          DS    0D
00002ED0 000000B0                           4561 @FRAMESIZE_797 DC F'176'
00002ED4 00000000
00002ED8 0000000000000748                   4562 @lit_797_162 DC AD($X$X$H_is$Little$Endian)
00002EE0 0000000000002970                   4563 @lit_797_163 DC AD($X$X$H_read64)
00002EE8 0000000000002A70                   4564 @lit_797_164 DC AD($X$X$H_swap64)
00002EF0                                    4565 @L106    DS    0H
00002EF0 E3F0 2000 0004          00000000   4566          LG    15,0(0,2)   ; ptr
00002EF6 E3F0 D0A8 0024          000000A8   4567          STG   15,168(0,13)
00002EFC 4110 D0A8               000000A8   4568          LA    1,168(0,13)
00002F00 E3F0 C090 0004          00002EE0   4569          LG    15,@lit_797_163 ; XXH_read64
00002F06                                    4570 @@gen_label200 DS    0H
00002F06 05EF                               4571          BALR  14,15
00002F08                                    4572 @@gen_label201 DS    0H
                                                                                                                           Page   93 
  Active Usings: @REGION_797_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002F08                                    4573 @L107    DS    0H
                                            4574 * ***   }
                                            4575 * * **** Start of Epilogue
                                            4576          DCCEPIL
00002F08                                    4577+         ds 0h                                                          01-DCCEP
                                            4578+* Epilog
00002F08 D707 D088 D088 00000088 00000088   4579+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002F0E E3D0 D080 0004          00000080   4580+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002F14 E3C0 D090 0004          00000090   4581+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002F1A E3B0 C018 0004          00000018   4582+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002F20 E3C0 B010 0021          00000010   4583+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002F26 E3E0 D008 0004          00000008   4584+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002F2C EB1C D020 0004          00000020   4585+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002F32 078E                               4586+         bcr 8,14                if same dsab, just return              01-DCCEP
00002F34 E3F0 D010 0024          00000010   4587+         stg 15,16(0,13)         save return code                       01-DCCEP
00002F3A E300 D018 0024          00000018   4588+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002F40 E3F0 D090 0004          00000090   4589+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002F46 E3F0 F018 0004          00000018   4590+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002F4C 47F0 F040               00000040   4591+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4592+* End of Epilog
                                            4593 * * **** End of Epilogue
                                            4594          DROP  12
                                            4595 *
                                            4596 *   DSECT for automatic variables in "XXH_readBE64"
                                            4597 *      (FUNCTION #797)
                                            4598 *
00000000                00000000 000000A8   4599 @AUTO#$X$X$H_read$B$E64 DSECT
00000000                                    4600          DS    XL168
                                            4601 *
00002F50                00000000 000059C8   4602 @CODE    CSECT
                                            4603 *
                                            4604 *
                                            4605 *
                                            4606 * ....... start of XXH64_round
00002F50                                    4607 @LNAME798 DS   0H
00002F50 0000000B                           4608          DC    X'0000000B'
00002F54 E7E7C8F6F46D9996                   4609          DC    C'XXH64_round'
00002F5F 00                                 4610          DC    X'00'
                                            4611 $X$X$H64_round DCCPRLG CINDEX=798,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME798
                                            4612          macro
                                            4613          dccextrn &m
                                            4614          gblc    &$dccext(1000)
                                            4615          gbla    &$dccexti
                                            4616          lcla    &i
                                            4617 &$dccext(&$dccexti+1) setc    '&m'
                                            4618 &i       seta    1
                                            4619 .loop    aif    (&i gt &$dccexti).around
                                            4620          aif    ('&$dccext(&i)' eq '&m').getout
                                            4621 &i       seta    &i+1
                                            4622          ago     .loop
                                            4623 .around  anop
                                                                                                                           Page   94 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4624 &$dccexti seta &$dccexti+1
                                            4625          extrn  &m
                                            4626 .getout  anop
                                            4627          mend
00002F60                                    4628+$eye0098    ds    0d                                                    02-DCCCA
00002F60 C4C3C3                             4629+         dc cl3'DCC'                                                    02-DCCCA
00002F63 01                                 4630+         dc xl1'01' format one                                          02-DCCCA
00002F64 00000000                           4631+         dc a(0)                                                        02-DCCCA
00002F68 0000000000000000                   4632+         dc ad(0)                                                       02-DCCCA
00002F70 00000000000000A8                   4633+         dc ad(168)                                                     02-DCCCA
00002F78 0000000000000000                   4634+         dc ad(0)                                                       02-DCCCA
00002F80 0000000000001000                   4635+         dc ad(4096)                                                    02-DCCCA
00002F88 20                                 4636+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002F89 03                                 4637+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002F8A 03                                 4638+         dc al1(3)                                                      02-DCCCA
00002F8B 08                                 4639+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002F8C 00                                 4640+         dc bl.8'00000000'                                              02-DCCCA
00002F8D 000000                             4641+         dc al3(0)                                                      02-DCCCA
00002F90 0000000000002F50                   4642+         dc ad(@LNAME798)                                               02-DCCCA
00002F98                                    4643+         ds 0d                                                          02-DCCCA
00002F98 0000000000002F60                   4644+         dc ad($eye0098)                                                02-DCCCA
00002FA0 0000000000000000                   4645+         dc ad(0)                                                       02-DCCCA
00002FA8                                    4646+         ds    0d                                                       01-DCCPR
00002FA8                                    4647+$X$X$H64_round ds 0d                                                    01-DCCPR
00002FA8                                    4648+@REGION_798_1 ds 0h                                                     01-DCCPR
00002FA8 EBEC D008 0024          00000008   4649+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002FAE B904 00CF                          4650+         lgr   12,15               set base reg                         01-DCCPR
                        00002FA8            4651+         using @REGION_798_1,12                                         01-DCCPR
                                            4652 * ******* End of Prologue
                                            4653 * *
                                            4654 * ***       acc += input * PRIME64_2;
00002FB2 E3F0 1000 0004          00000000   4655          LG    15,0(0,1)   ; acc
00002FB8 E310 1008 0004          00000008   4656          LG    1,8(0,1)    ; input
00002FBE E320 C058 0004          00003000   4657          LG    2,@lit_798_167
00002FC4 E330 2078 0004          00000078   4658          LG    3,120(0,2)  ; PRIME64_2
00002FCA B90C 0013                          4659          MSGR  1,3
00002FCE B90A 00F1                          4660          ALGR  15,1
                                            4661 * ***       acc  = ((acc << 31) | (acc >> (64 - 31)));
00002FD2 EB1F 001F 000D          0000001F   4662          SLLG  1,15,31(0)
00002FD8 EBFF 0021 000C          00000021   4663          SRLG  15,15,33(0)
00002FDE B981 001F                          4664          OGR   1,15
                                            4665 * ***       acc *= PRIME64_1;
00002FE2 E3F0 2070 0004          00000070   4666          LG    15,112(0,2) ; PRIME64_1
00002FE8 B90C 001F                          4667          MSGR  1,15
                                            4668 * ***       return acc;
00002FEC B904 00F1                          4669          LGR   15,1
                                            4670 * ***   }
                                            4671 * * **** Start of Epilogue
                                            4672          DCCEPIL
00002FF0                                    4673+         ds 0h                                                          01-DCCEP
                                            4674+* Epilog
                                            4675+* Epilog
                                                                                                                           Page   95 
  Active Usings: @REGION_798_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002FF0 E3E0 D008 0004          00000008   4676+         lg    14,8(,13) restore the reg                                01-DCCEP
00002FF6 EB1C D020 0004          00000020   4677+         lmg   1,12,32(13)                                              01-DCCEP
00002FFC 07FE                               4678+         br   14                                                        01-DCCEP
                                            4679+* End of Epilog
                                            4680 * * **** End of Epilogue
00003000                                    4681          DS    0D
00003000 00000000000059C8                   4682 @lit_798_167 DC AD(@DATA)
                                            4683          DROP  12
                                            4684 *
                                            4685 *   DSECT for automatic variables in "XXH64_round"
                                            4686 *      (FUNCTION #798)
                                            4687 *
00000000                00000000 000000A8   4688 @AUTO#$X$X$H64_round DSECT
00000000                                    4689          DS    XL168
                                            4690 *
00003008                00000000 000059C8   4691 @CODE    CSECT
                                            4692 *
                                            4693 *
                                            4694 *
                                            4695 * ....... start of XXH64_mergeRound
00003008                                    4696 @LNAME799 DS   0H
00003008 00000010                           4697          DC    X'00000010'
0000300C E7E7C8F6F46D9485                   4698          DC    C'XXH64_mergeRound'
0000301C 00                                 4699          DC    X'00'
                                            4700 $X$X$H64_merge$Round DCCPRLG CINDEX=799,BASER=12,FRAME=184,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME799
                                            4701          macro
                                            4702          dccextrn &m
                                            4703          gblc    &$dccext(1000)
                                            4704          gbla    &$dccexti
                                            4705          lcla    &i
                                            4706 &$dccext(&$dccexti+1) setc    '&m'
                                            4707 &i       seta    1
                                            4708 .loop    aif    (&i gt &$dccexti).around
                                            4709          aif    ('&$dccext(&i)' eq '&m').getout
                                            4710 &i       seta    &i+1
                                            4711          ago     .loop
                                            4712 .around  anop
                                            4713 &$dccexti seta &$dccexti+1
                                            4714          extrn  &m
                                            4715 .getout  anop
                                            4716          mend
00003020                                    4717+$eye0101    ds    0d                                                    02-DCCCA
00003020 C4C3C3                             4718+         dc cl3'DCC'                                                    02-DCCCA
00003023 01                                 4719+         dc xl1'01' format one                                          02-DCCCA
00003024 00000000                           4720+         dc a(0)                                                        02-DCCCA
00003028 0000000000003092                   4721+         dc ad(@PER_799)                                                02-DCCCA
00003030 00000000000000B8                   4722+         dc ad(184)                                                     02-DCCCA
00003038 0000000000000000                   4723+         dc ad(0)                                                       02-DCCCA
00003040 0000000000001000                   4724+         dc ad(4096)                                                    02-DCCCA
00003048 20                                 4725+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003049 03                                 4726+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000304A 03                                 4727+         dc al1(3)                                                      02-DCCCA
0000304B 08                                 4728+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000304C 00                                 4729+         dc bl.8'00000000'                                              02-DCCCA
0000304D 000000                             4730+         dc al3(0)                                                      02-DCCCA
00003050 0000000000003008                   4731+         dc ad(@LNAME799)                                               02-DCCCA
00003058                                    4732+         ds 0d                                                          02-DCCCA
00003058 0000000000003020                   4733+         dc ad($eye0101)                                                02-DCCCA
00003060 0000000000000000                   4734+         dc ad(0)                                                       02-DCCCA
00003068                                    4735+         ds    0d                                                       01-DCCPR
00003068                                    4736+$X$X$H64_merge$Round ds 0d                                              01-DCCPR
00003068                                    4737+@REGION_799_1 ds 0h                                                     01-DCCPR
00003068 EBEC D008 0024          00000008   4738+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000306E E3E0 D088 0004          00000088   4739+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003074 E3C0 D090 0004          00000090   4740+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000307A B904 002E                          4741+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000307E E3B0 C018 0004          00000018   4742+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003084 A7EB 00B8               000000B8   4743+         aghi  14,184              increase by frame size               01-DCCPR
00003088 E3E0 C020 0021          00000020   4744+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000308E 4720 B020               00000020   4745+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003092                                    4746+@PER_799 ds    0h                                                       01-DCCPR
00003092 EBDE 2080 0024          00000080   4747+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003098 E3C0 2090 0024          00000090   4748+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000309E B904 00D2                          4749+         lgr   13,2                set real frame pointer               01-DCCPR
000030A2 B904 00CF                          4750+         lgr   12,15               set base reg                         01-DCCPR
                        00003068            4751+         using @REGION_799_1,12                                         01-DCCPR
                                            4752 * ******* End of Prologue
                                            4753 * *
                                            4754 * ***       val  = XXH64_round(0, val);
000030A6 E320 1000 0004          00000000   4755          LG    2,0(0,1)    ; acc
000030AC E3F0 1008 0004          00000008   4756          LG    15,8(0,1)   ; val
000030B2 D707 D0A8 D0A8 000000A8 000000A8   4757          XC    168(8,13),168(13)
000030B8 E3F0 D0B0 0024          000000B0   4758          STG   15,176(0,13)
000030BE 4110 D0A8               000000A8   4759          LA    1,168(0,13)
000030C2 E3F0 C0D0 0004          00003138   4760          LG    15,@lit_799_168 ; XXH64_round
000030C8                                    4761 @@gen_label202 DS    0H
000030C8 05EF                               4762          BALR  14,15
000030CA                                    4763 @@gen_label203 DS    0H
                                            4764 * ***       acc ^= val;
000030CA B982 002F                          4765          XGR   2,15
                                            4766 * ***       acc  = acc * PRIME64_1 + PRIME64_4;
000030CE E3F0 C0D8 0004          00003140   4767          LG    15,@lit_799_169
000030D4 E310 F070 0004          00000070   4768          LG    1,112(0,15) ; PRIME64_1
000030DA B90C 0021                          4769          MSGR  2,1
000030DE E320 F088 000A          00000088   4770          ALG   2,136(0,15)
                                            4771 * ***       return acc;
000030E4 B904 00F2                          4772          LGR   15,2
                                            4773 * ***   }
                                            4774 * * **** Start of Epilogue
                                            4775          DCCEPIL
000030E8                                    4776+         ds 0h                                                          01-DCCEP
                                            4777+* Epilog
000030E8 D707 D088 D088 00000088 00000088   4778+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page   97 
  Active Usings: @REGION_799_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000030EE E3D0 D080 0004          00000080   4779+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000030F4 E3C0 D090 0004          00000090   4780+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000030FA E3B0 C018 0004          00000018   4781+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003100 E3C0 B010 0021          00000010   4782+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003106 E3E0 D008 0004          00000008   4783+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000310C EB1C D020 0004          00000020   4784+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003112 078E                               4785+         bcr 8,14                if same dsab, just return              01-DCCEP
00003114 E3F0 D010 0024          00000010   4786+         stg 15,16(0,13)         save return code                       01-DCCEP
0000311A E300 D018 0024          00000018   4787+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003120 E3F0 D090 0004          00000090   4788+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003126 E3F0 F018 0004          00000018   4789+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000312C 47F0 F040               00000040   4790+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4791+* End of Epilog
                                            4792 * * **** End of Epilogue
00003130                                    4793          DS    0D
00003130 000000B8                           4794 @FRAMESIZE_799 DC F'184'
00003134 00000000
00003138 0000000000002FA8                   4795 @lit_799_168 DC AD($X$X$H64_round)
00003140 00000000000059C8                   4796 @lit_799_169 DC AD(@DATA)
                                            4797          DROP  12
                                            4798 *
                                            4799 *   DSECT for automatic variables in "XXH64_mergeRound"
                                            4800 *      (FUNCTION #799)
                                            4801 *
00000000                00000000 000000A8   4802 @AUTO#$X$X$H64_merge$Round DSECT
00000000                                    4803          DS    XL168
                                            4804 *
00003148                00000000 000059C8   4805 @CODE    CSECT
                                            4806 *
                                            4807 *
                                            4808 *
                                            4809 * ....... start of XXH64_avalanche
00003148                                    4810 @LNAME800 DS   0H
00003148 0000000F                           4811          DC    X'0000000F'
0000314C E7E7C8F6F46D81A5                   4812          DC    C'XXH64_avalanche'
0000315B 00                                 4813          DC    X'00'
                                            4814 $X$X$H64_avalanche DCCPRLG CINDEX=800,BASER=12,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME800
                                            4815          macro
                                            4816          dccextrn &m
                                            4817          gblc    &$dccext(1000)
                                            4818          gbla    &$dccexti
                                            4819          lcla    &i
                                            4820 &$dccext(&$dccexti+1) setc    '&m'
                                            4821 &i       seta    1
                                            4822 .loop    aif    (&i gt &$dccexti).around
                                            4823          aif    ('&$dccext(&i)' eq '&m').getout
                                            4824 &i       seta    &i+1
                                            4825          ago     .loop
                                            4826 .around  anop
                                            4827 &$dccexti seta &$dccexti+1
                                            4828          extrn  &m
                                                                                                                           Page   98 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4829 .getout  anop
                                            4830          mend
00003160                                    4831+$eye0104    ds    0d                                                    02-DCCCA
00003160 C4C3C3                             4832+         dc cl3'DCC'                                                    02-DCCCA
00003163 01                                 4833+         dc xl1'01' format one                                          02-DCCCA
00003164 00000000                           4834+         dc a(0)                                                        02-DCCCA
00003168 0000000000000000                   4835+         dc ad(0)                                                       02-DCCCA
00003170 00000000000000A8                   4836+         dc ad(168)                                                     02-DCCCA
00003178 0000000000000000                   4837+         dc ad(0)                                                       02-DCCCA
00003180 0000000000001000                   4838+         dc ad(4096)                                                    02-DCCCA
00003188 20                                 4839+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003189 03                                 4840+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000318A 03                                 4841+         dc al1(3)                                                      02-DCCCA
0000318B 08                                 4842+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000318C 00                                 4843+         dc bl.8'00000000'                                              02-DCCCA
0000318D 000000                             4844+         dc al3(0)                                                      02-DCCCA
00003190 0000000000003148                   4845+         dc ad(@LNAME800)                                               02-DCCCA
00003198                                    4846+         ds 0d                                                          02-DCCCA
00003198 0000000000003160                   4847+         dc ad($eye0104)                                                02-DCCCA
000031A0 0000000000000000                   4848+         dc ad(0)                                                       02-DCCCA
000031A8                                    4849+         ds    0d                                                       01-DCCPR
000031A8                                    4850+$X$X$H64_avalanche ds 0d                                                01-DCCPR
000031A8                                    4851+@REGION_800_1 ds 0h                                                     01-DCCPR
000031A8 EBEC D008 0024          00000008   4852+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000031AE B904 00CF                          4853+         lgr   12,15               set base reg                         01-DCCPR
                        000031A8            4854+         using @REGION_800_1,12                                         01-DCCPR
                                            4855 * ******* End of Prologue
                                            4856 * *
                                            4857 * ***       h64 ^= h64 >> 33;
000031B2 E3F0 1000 0004          00000000   4858          LG    15,0(0,1)   ; h64
000031B8 EB1F 0021 000C          00000021   4859          SRLG  1,15,33(0)
000031BE B982 00F1                          4860          XGR   15,1
                                            4861 * ***       h64 *= PRIME64_2;
000031C2 E310 C058 0004          00003200   4862          LG    1,@lit_800_171
000031C8 E320 1078 0004          00000078   4863          LG    2,120(0,1)  ; PRIME64_2
000031CE B90C 00F2                          4864          MSGR  15,2
                                            4865 * ***       h64 ^= h64 >> 29;
000031D2 EB2F 001D 000C          0000001D   4866          SRLG  2,15,29(0)
000031D8 B982 00F2                          4867          XGR   15,2
                                            4868 * ***       h64 *= PRIME64_3;
000031DC E310 1080 0004          00000080   4869          LG    1,128(0,1)  ; PRIME64_3
000031E2 B90C 00F1                          4870          MSGR  15,1
                                            4871 * ***       h64 ^= h64 >> 32;
000031E6 EB1F 0020 000C          00000020   4872          SRLG  1,15,32(0)
000031EC B982 00F1                          4873          XGR   15,1
                                            4874 * ***       return h64;
                                            4875 * ***   }
                                            4876 * * **** Start of Epilogue
                                            4877          DCCEPIL
000031F0                                    4878+         ds 0h                                                          01-DCCEP
                                            4879+* Epilog
                                            4880+* Epilog
                                                                                                                           Page   99 
  Active Usings: @REGION_800_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000031F0 E3E0 D008 0004          00000008   4881+         lg    14,8(,13) restore the reg                                01-DCCEP
000031F6 EB1C D020 0004          00000020   4882+         lmg   1,12,32(13)                                              01-DCCEP
000031FC 07FE                               4883+         br   14                                                        01-DCCEP
                                            4884+* End of Epilog
                                            4885 * * **** End of Epilogue
00003200                                    4886          DS    0D
00003200 00000000000059C8                   4887 @lit_800_171 DC AD(@DATA)
                                            4888          DROP  12
                                            4889 *
                                            4890 *   DSECT for automatic variables in "XXH64_avalanche"
                                            4891 *      (FUNCTION #800)
                                            4892 *
00000000                00000000 000000A8   4893 @AUTO#$X$X$H64_avalanche DSECT
00000000                                    4894          DS    XL168
                                            4895 *
00003208                00000000 000059C8   4896 @CODE    CSECT
                                            4897 *
                                            4898 *
                                            4899 *
                                            4900 * ....... start of XXH64_finalize
00003208                                    4901 @LNAME801 DS   0H
00003208 0000000E                           4902          DC    X'0000000E'
0000320C E7E7C8F6F46D8689                   4903          DC    C'XXH64_finalize'
0000321A 00                                 4904          DC    X'00'
                                            4905 $X$X$H64_finalize DCCPRLG CINDEX=801,BASER=12,FRAME=208,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME801
                                            4906          macro
                                            4907          dccextrn &m
                                            4908          gblc    &$dccext(1000)
                                            4909          gbla    &$dccexti
                                            4910          lcla    &i
                                            4911 &$dccext(&$dccexti+1) setc    '&m'
                                            4912 &i       seta    1
                                            4913 .loop    aif    (&i gt &$dccexti).around
                                            4914          aif    ('&$dccext(&i)' eq '&m').getout
                                            4915 &i       seta    &i+1
                                            4916          ago     .loop
                                            4917 .around  anop
                                            4918 &$dccexti seta &$dccexti+1
                                            4919          extrn  &m
                                            4920 .getout  anop
                                            4921          mend
00003220                                    4922+$eye0107    ds    0d                                                    02-DCCCA
00003220 C4C3C3                             4923+         dc cl3'DCC'                                                    02-DCCCA
00003223 01                                 4924+         dc xl1'01' format one                                          02-DCCCA
00003224 00000000                           4925+         dc a(0)                                                        02-DCCCA
00003228 0000000000003292                   4926+         dc ad(@PER_801)                                                02-DCCCA
00003230 00000000000000D0                   4927+         dc ad(208)                                                     02-DCCCA
00003238 0000000000000000                   4928+         dc ad(0)                                                       02-DCCCA
00003240 0000000000001000                   4929+         dc ad(4096)                                                    02-DCCCA
00003248 20                                 4930+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003249 03                                 4931+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page  100 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000324A 03                                 4932+         dc al1(3)                                                      02-DCCCA
0000324B 08                                 4933+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000324C 00                                 4934+         dc bl.8'00000000'                                              02-DCCCA
0000324D 000000                             4935+         dc al3(0)                                                      02-DCCCA
00003250 0000000000003208                   4936+         dc ad(@LNAME801)                                               02-DCCCA
00003258                                    4937+         ds 0d                                                          02-DCCCA
00003258 0000000000003220                   4938+         dc ad($eye0107)                                                02-DCCCA
00003260 0000000000000000                   4939+         dc ad(0)                                                       02-DCCCA
00003268                                    4940+         ds    0d                                                       01-DCCPR
00003268                                    4941+$X$X$H64_finalize ds 0d                                                 01-DCCPR
00003268                                    4942+@REGION_801_1 ds 0h                                                     01-DCCPR
00003268 EBEC D008 0024          00000008   4943+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000326E E3E0 D088 0004          00000088   4944+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003274 E3C0 D090 0004          00000090   4945+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000327A B904 002E                          4946+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000327E E3B0 C018 0004          00000018   4947+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003284 A7EB 00D0               000000D0   4948+         aghi  14,208              increase by frame size               01-DCCPR
00003288 E3E0 C020 0021          00000020   4949+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000328E 4720 B020               00000020   4950+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003292                                    4951+@PER_801 ds    0h                                                       01-DCCPR
00003292 EBDE 2080 0024          00000080   4952+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003298 E3C0 2090 0024          00000090   4953+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000329E B904 00D2                          4954+         lgr   13,2                set real frame pointer               01-DCCPR
000032A2 B904 00CF                          4955+         lgr   12,15               set base reg                         01-DCCPR
                        00003268            4956+         using @REGION_801_1,12                                         01-DCCPR
                                            4957 * ******* End of Prologue
                                            4958 * *
                                            4959 * ***       const BYTE* p = (const BYTE*)ptr;
000032A6 E330 1000 0004          00000000   4960          LG    3,0(0,1)    ; h64
000032AC 5840 101C               0000001C   4961          L     4,28(0,1)   ; endian
000032B0 5850 1024               00000024   4962          L     5,36(0,1)   ; align
000032B4 E320 1008 0004          00000008   4963          LG    2,8(0,1)    ; ptr
                                            4964 * ***
                                            4965 * ***
                                            4966 * ***
                                            4967 * ***
                                            4968 * ***   # 723 "C:\asgkafka\librdkafka\src\rdxxhash.c"
                                            4969 * ***       switch(len&31) {
000032BA E3C0 C064 001A          000032CC   4970          ALGF  12,@lit_region_diff_801_1_2
                                            4971          DROP  12
                        00003B6E            4972          USING @REGION_801_2,12
000032C0 47F0 C6DA               00004248   4973          B     @L108
                                            4974          DROP  12
                        00003268            4975          USING @REGION_801_1,12
000032C8                                    4976          DS    0D
000032C8 000000D0                           4977 @FRAMESIZE_801 DC F'208'
000032CC 00000906                           4978 @lit_region_diff_801_1_2  DC A(@REGION_801_2-@REGION_801_1)
000032D0 0000000000002BB0                   4979 @lit_801_172 DC AD($X$X$H_read$L$E64_align)
000032D8 0000000000002FA8                   4980 @lit_801_173 DC AD($X$X$H64_round)
000032E0 00000000000059C8                   4981 @lit_801_174 DC AD(@DATA)
000032E8 00000000000031A8                   4982 @lit_801_181 DC AD($X$X$H64_avalanche)
000032F0 0000000000000848                   4983 @lit_801_191 DC AD($X$X$H_read$L$E32_align)
                                                                                                                           Page  101 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4984 * ***         case 24: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            4985 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            4986 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
000032F8                                    4987 @L110    DS    0H
000032F8 E320 D0B0 0024          000000B0   4988          STG   2,176(0,13)
000032FE B914 00F4                          4989          LGFR  15,4
00003302 E3F0 D0B8 0024          000000B8   4990          STG   15,184(0,13)
00003308 B914 00F5                          4991          LGFR  15,5
0000330C E3F0 D0C0 0024          000000C0   4992          STG   15,192(0,13)
00003312 4110 D0B0               000000B0   4993          LA    1,176(0,13)
00003316 E3F0 C068 0004          000032D0   4994          LG    15,@lit_801_172 ; XXH_readLE64_align
0000331C                                    4995 @@gen_label204 DS    0H
0000331C 05EF                               4996          BALR  14,15
0000331E                                    4997 @@gen_label205 DS    0H
0000331E D707 D0B0 D0B0 000000B0 000000B0   4998          XC    176(8,13),176(13)
00003324 E3F0 D0B8 0024          000000B8   4999          STG   15,184(0,13)
0000332A 4110 D0B0               000000B0   5000          LA    1,176(0,13)
0000332E E3F0 C070 0004          000032D8   5001          LG    15,@lit_801_173 ; XXH64_round
00003334                                    5002 @@gen_label206 DS    0H
00003334 05EF                               5003          BALR  14,15
00003336                                    5004 @@gen_label207 DS    0H
00003336 4120 2008               00000008   5005          LA    2,8(0,2)
0000333A B982 003F                          5006          XGR   3,15
0000333E EBF3 001B 000D          0000001B   5007          SLLG  15,3,27(0)
00003344 EB13 0025 000C          00000025   5008          SRLG  1,3,37(0)
0000334A B981 00F1                          5009          OGR   15,1
0000334E E310 C078 0004          000032E0   5010          LG    1,@lit_801_174
00003354 E330 1070 0004          00000070   5011          LG    3,112(0,1)  ; PRIME64_1
0000335A B90C 00F3                          5012          MSGR  15,3
0000335E E3F0 1088 000A          00000088   5013          ALG   15,136(0,1)
00003364 B904 003F                          5014          LGR   3,15        ; h64
                                            5015 * ***
                                            5016 * ***         case 16: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5017 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5018 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003368                                    5019 @L111    DS    0H
00003368 E320 D0B0 0024          000000B0   5020          STG   2,176(0,13)
0000336E B914 00F4                          5021          LGFR  15,4
00003372 E3F0 D0B8 0024          000000B8   5022          STG   15,184(0,13)
00003378 B914 00F5                          5023          LGFR  15,5
0000337C E3F0 D0C0 0024          000000C0   5024          STG   15,192(0,13)
00003382 4110 D0B0               000000B0   5025          LA    1,176(0,13)
00003386 E3F0 C068 0004          000032D0   5026          LG    15,@lit_801_172 ; XXH_readLE64_align
0000338C                                    5027 @@gen_label208 DS    0H
0000338C 05EF                               5028          BALR  14,15
0000338E                                    5029 @@gen_label209 DS    0H
0000338E D707 D0B0 D0B0 000000B0 000000B0   5030          XC    176(8,13),176(13)
00003394 E3F0 D0B8 0024          000000B8   5031          STG   15,184(0,13)
0000339A 4110 D0B0               000000B0   5032          LA    1,176(0,13)
0000339E E3F0 C070 0004          000032D8   5033          LG    15,@lit_801_173 ; XXH64_round
000033A4                                    5034 @@gen_label210 DS    0H
000033A4 05EF                               5035          BALR  14,15
                                                                                                                           Page  102 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000033A6                                    5036 @@gen_label211 DS    0H
000033A6 4120 2008               00000008   5037          LA    2,8(0,2)
000033AA B982 003F                          5038          XGR   3,15
000033AE EBF3 001B 000D          0000001B   5039          SLLG  15,3,27(0)
000033B4 EB13 0025 000C          00000025   5040          SRLG  1,3,37(0)
000033BA B981 00F1                          5041          OGR   15,1
000033BE E310 C078 0004          000032E0   5042          LG    1,@lit_801_174
000033C4 E330 1070 0004          00000070   5043          LG    3,112(0,1)  ; PRIME64_1
000033CA B90C 00F3                          5044          MSGR  15,3
000033CE E3F0 1088 000A          00000088   5045          ALG   15,136(0,1)
000033D4 B904 003F                          5046          LGR   3,15        ; h64
                                            5047 * ***
                                            5048 * ***         case  8: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5049 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5050 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
000033D8                                    5051 @L112    DS    0H
000033D8 E320 D0B0 0024          000000B0   5052          STG   2,176(0,13)
000033DE B914 00F4                          5053          LGFR  15,4
000033E2 E3F0 D0B8 0024          000000B8   5054          STG   15,184(0,13)
000033E8 B914 00F5                          5055          LGFR  15,5
000033EC E3F0 D0C0 0024          000000C0   5056          STG   15,192(0,13)
000033F2 4110 D0B0               000000B0   5057          LA    1,176(0,13)
000033F6 E3F0 C068 0004          000032D0   5058          LG    15,@lit_801_172 ; XXH_readLE64_align
000033FC                                    5059 @@gen_label212 DS    0H
000033FC 05EF                               5060          BALR  14,15
000033FE                                    5061 @@gen_label213 DS    0H
000033FE D707 D0B0 D0B0 000000B0 000000B0   5062          XC    176(8,13),176(13)
00003404 E3F0 D0B8 0024          000000B8   5063          STG   15,184(0,13)
0000340A 4110 D0B0               000000B0   5064          LA    1,176(0,13)
0000340E E3F0 C070 0004          000032D8   5065          LG    15,@lit_801_173 ; XXH64_round
00003414                                    5066 @@gen_label214 DS    0H
00003414 05EF                               5067          BALR  14,15
00003416                                    5068 @@gen_label215 DS    0H
00003416 B982 003F                          5069          XGR   3,15
0000341A EBF3 001B 000D          0000001B   5070          SLLG  15,3,27(0)
00003420 EB13 0025 000C          00000025   5071          SRLG  1,3,37(0)
00003426 B981 00F1                          5072          OGR   15,1
0000342A E310 C078 0004          000032E0   5073          LG    1,@lit_801_174
00003430 E320 1070 0004          00000070   5074          LG    2,112(0,1)  ; PRIME64_1
00003436 B90C 00F2                          5075          MSGR  15,2
0000343A E3F0 1088 000A          00000088   5076          ALG   15,136(0,1)
                                            5077 * ***                  return XXH64_avalanche(h64);
00003440 E3F0 D0B0 0024          000000B0   5078          STG   15,176(0,13)
00003446 4110 D0B0               000000B0   5079          LA    1,176(0,13)
0000344A E3F0 C080 0004          000032E8   5080          LG    15,@lit_801_181 ; XXH64_avalanche
00003450                                    5081 @@gen_label216 DS    0H
00003450 05EF                               5082          BALR  14,15
00003452                                    5083 @@gen_label217 DS    0H
00003452 E3C0 C064 001A          000032CC   5084          ALGF  12,@lit_region_diff_801_1_2
                                            5085          DROP  12
                        00003B6E            5086          USING @REGION_801_2,12
00003458 47F0 C94A               000044B8   5087          B     @ret_lab_801
                                                                                                                           Page  103 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5088          DROP  12
                        00003268            5089          USING @REGION_801_1,12
                                            5090 * ***
                                            5091 * ***         case 28: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5092 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5093 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
0000345C                                    5094 @L113    DS    0H
0000345C E320 D0B0 0024          000000B0   5095          STG   2,176(0,13)
00003462 B914 00F4                          5096          LGFR  15,4
00003466 E3F0 D0B8 0024          000000B8   5097          STG   15,184(0,13)
0000346C B914 00F5                          5098          LGFR  15,5
00003470 E3F0 D0C0 0024          000000C0   5099          STG   15,192(0,13)
00003476 4110 D0B0               000000B0   5100          LA    1,176(0,13)
0000347A E3F0 C068 0004          000032D0   5101          LG    15,@lit_801_172 ; XXH_readLE64_align
00003480                                    5102 @@gen_label218 DS    0H
00003480 05EF                               5103          BALR  14,15
00003482                                    5104 @@gen_label219 DS    0H
00003482 D707 D0B0 D0B0 000000B0 000000B0   5105          XC    176(8,13),176(13)
00003488 E3F0 D0B8 0024          000000B8   5106          STG   15,184(0,13)
0000348E 4110 D0B0               000000B0   5107          LA    1,176(0,13)
00003492 E3F0 C070 0004          000032D8   5108          LG    15,@lit_801_173 ; XXH64_round
00003498                                    5109 @@gen_label220 DS    0H
00003498 05EF                               5110          BALR  14,15
0000349A                                    5111 @@gen_label221 DS    0H
0000349A 4120 2008               00000008   5112          LA    2,8(0,2)
0000349E B982 003F                          5113          XGR   3,15
000034A2 EBF3 001B 000D          0000001B   5114          SLLG  15,3,27(0)
000034A8 EB13 0025 000C          00000025   5115          SRLG  1,3,37(0)
000034AE B981 00F1                          5116          OGR   15,1
000034B2 E310 C078 0004          000032E0   5117          LG    1,@lit_801_174
000034B8 E330 1070 0004          00000070   5118          LG    3,112(0,1)  ; PRIME64_1
000034BE B90C 00F3                          5119          MSGR  15,3
000034C2 E3F0 1088 000A          00000088   5120          ALG   15,136(0,1)
000034C8 B904 003F                          5121          LGR   3,15        ; h64
                                            5122 * ***
                                            5123 * ***         case 20: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5124 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5125 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
000034CC                                    5126 @L114    DS    0H
000034CC E320 D0B0 0024          000000B0   5127          STG   2,176(0,13)
000034D2 B914 00F4                          5128          LGFR  15,4
000034D6 E3F0 D0B8 0024          000000B8   5129          STG   15,184(0,13)
000034DC B914 00F5                          5130          LGFR  15,5
000034E0 E3F0 D0C0 0024          000000C0   5131          STG   15,192(0,13)
000034E6 4110 D0B0               000000B0   5132          LA    1,176(0,13)
000034EA E3F0 C068 0004          000032D0   5133          LG    15,@lit_801_172 ; XXH_readLE64_align
000034F0                                    5134 @@gen_label222 DS    0H
000034F0 05EF                               5135          BALR  14,15
000034F2                                    5136 @@gen_label223 DS    0H
000034F2 D707 D0B0 D0B0 000000B0 000000B0   5137          XC    176(8,13),176(13)
000034F8 E3F0 D0B8 0024          000000B8   5138          STG   15,184(0,13)
000034FE 4110 D0B0               000000B0   5139          LA    1,176(0,13)
                                                                                                                           Page  104 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003502 E3F0 C070 0004          000032D8   5140          LG    15,@lit_801_173 ; XXH64_round
00003508                                    5141 @@gen_label224 DS    0H
00003508 05EF                               5142          BALR  14,15
0000350A                                    5143 @@gen_label225 DS    0H
0000350A 4120 2008               00000008   5144          LA    2,8(0,2)
0000350E B982 003F                          5145          XGR   3,15
00003512 EBF3 001B 000D          0000001B   5146          SLLG  15,3,27(0)
00003518 EB13 0025 000C          00000025   5147          SRLG  1,3,37(0)
0000351E B981 00F1                          5148          OGR   15,1
00003522 E310 C078 0004          000032E0   5149          LG    1,@lit_801_174
00003528 E330 1070 0004          00000070   5150          LG    3,112(0,1)  ; PRIME64_1
0000352E B90C 00F3                          5151          MSGR  15,3
00003532 E3F0 1088 000A          00000088   5152          ALG   15,136(0,1)
00003538 B904 003F                          5153          LGR   3,15        ; h64
                                            5154 * ***
                                            5155 * ***         case 12: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5156 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5157 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
0000353C                                    5158 @L115    DS    0H
0000353C E320 D0B0 0024          000000B0   5159          STG   2,176(0,13)
00003542 B914 00F4                          5160          LGFR  15,4
00003546 E3F0 D0B8 0024          000000B8   5161          STG   15,184(0,13)
0000354C B914 00F5                          5162          LGFR  15,5
00003550 E3F0 D0C0 0024          000000C0   5163          STG   15,192(0,13)
00003556 4110 D0B0               000000B0   5164          LA    1,176(0,13)
0000355A E3F0 C068 0004          000032D0   5165          LG    15,@lit_801_172 ; XXH_readLE64_align
00003560                                    5166 @@gen_label226 DS    0H
00003560 05EF                               5167          BALR  14,15
00003562                                    5168 @@gen_label227 DS    0H
00003562 D707 D0B0 D0B0 000000B0 000000B0   5169          XC    176(8,13),176(13)
00003568 E3F0 D0B8 0024          000000B8   5170          STG   15,184(0,13)
0000356E 4110 D0B0               000000B0   5171          LA    1,176(0,13)
00003572 E3F0 C070 0004          000032D8   5172          LG    15,@lit_801_173 ; XXH64_round
00003578                                    5173 @@gen_label228 DS    0H
00003578 05EF                               5174          BALR  14,15
0000357A                                    5175 @@gen_label229 DS    0H
0000357A 4120 2008               00000008   5176          LA    2,8(0,2)
0000357E B982 003F                          5177          XGR   3,15
00003582 EBF3 001B 000D          0000001B   5178          SLLG  15,3,27(0)
00003588 EB13 0025 000C          00000025   5179          SRLG  1,3,37(0)
0000358E B981 00F1                          5180          OGR   15,1
00003592 E310 C078 0004          000032E0   5181          LG    1,@lit_801_174
00003598 E330 1070 0004          00000070   5182          LG    3,112(0,1)  ; PRIME64_1
0000359E B90C 00F3                          5183          MSGR  15,3
000035A2 E3F0 1088 000A          00000088   5184          ALG   15,136(0,1)
000035A8 B904 003F                          5185          LGR   3,15        ; h64
                                            5186 * ***
                                            5187 * ***         case  4: h64 ^= (U64)(XXH_readLE32_align(p, endian, alig\
                                            5188 * n)) * PRIME64_1; p+=4; h64 = ((h64 << 23) | (h64 >> (64 - 23))) * PR\
                                            5189 * IME64_2 + PRIME64_3;;
000035AC                                    5190 @L116    DS    0H
000035AC E320 D0B0 0024          000000B0   5191          STG   2,176(0,13)
                                                                                                                           Page  105 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000035B2 B914 00F4                          5192          LGFR  15,4
000035B6 E3F0 D0B8 0024          000000B8   5193          STG   15,184(0,13)
000035BC B914 00F5                          5194          LGFR  15,5
000035C0 E3F0 D0C0 0024          000000C0   5195          STG   15,192(0,13)
000035C6 4110 D0B0               000000B0   5196          LA    1,176(0,13)
000035CA E3F0 C088 0004          000032F0   5197          LG    15,@lit_801_191 ; XXH_readLE32_align
000035D0                                    5198 @@gen_label230 DS    0H
000035D0 05EF                               5199          BALR  14,15
000035D2                                    5200 @@gen_label231 DS    0H
000035D2 B916 00FF                          5201          LLGFR 15,15
000035D6 E310 C078 0004          000032E0   5202          LG    1,@lit_801_174
000035DC E320 1070 0004          00000070   5203          LG    2,112(0,1)  ; PRIME64_1
000035E2 B90C 00F2                          5204          MSGR  15,2
000035E6 B982 003F                          5205          XGR   3,15
000035EA EBF3 0017 000D          00000017   5206          SLLG  15,3,23(0)
000035F0 EB23 0029 000C          00000029   5207          SRLG  2,3,41(0)
000035F6 B981 00F2                          5208          OGR   15,2
000035FA E320 1078 0004          00000078   5209          LG    2,120(0,1)  ; PRIME64_2
00003600 B90C 00F2                          5210          MSGR  15,2
00003604 E3F0 1080 000A          00000080   5211          ALG   15,128(0,1)
                                            5212 * ***                  return XXH64_avalanche(h64);
0000360A E3F0 D0B0 0024          000000B0   5213          STG   15,176(0,13)
00003610 4110 D0B0               000000B0   5214          LA    1,176(0,13)
00003614 E3F0 C080 0004          000032E8   5215          LG    15,@lit_801_181 ; XXH64_avalanche
0000361A                                    5216 @@gen_label232 DS    0H
0000361A 05EF                               5217          BALR  14,15
0000361C                                    5218 @@gen_label233 DS    0H
0000361C E3C0 C064 001A          000032CC   5219          ALGF  12,@lit_region_diff_801_1_2
                                            5220          DROP  12
                        00003B6E            5221          USING @REGION_801_2,12
00003622 47F0 C94A               000044B8   5222          B     @ret_lab_801
                                            5223          DROP  12
                        00003268            5224          USING @REGION_801_1,12
                                            5225 * ***
                                            5226 * ***         case 25: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5227 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5228 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003626                                    5229 @L117    DS    0H
00003626 E320 D0B0 0024          000000B0   5230          STG   2,176(0,13)
0000362C B914 00F4                          5231          LGFR  15,4
00003630 E3F0 D0B8 0024          000000B8   5232          STG   15,184(0,13)
00003636 B914 00F5                          5233          LGFR  15,5
0000363A E3F0 D0C0 0024          000000C0   5234          STG   15,192(0,13)
00003640 4110 D0B0               000000B0   5235          LA    1,176(0,13)
00003644 E3F0 C068 0004          000032D0   5236          LG    15,@lit_801_172 ; XXH_readLE64_align
0000364A                                    5237 @@gen_label234 DS    0H
0000364A 05EF                               5238          BALR  14,15
0000364C                                    5239 @@gen_label235 DS    0H
0000364C D707 D0B0 D0B0 000000B0 000000B0   5240          XC    176(8,13),176(13)
00003652 E3F0 D0B8 0024          000000B8   5241          STG   15,184(0,13)
00003658 4110 D0B0               000000B0   5242          LA    1,176(0,13)
0000365C E3F0 C070 0004          000032D8   5243          LG    15,@lit_801_173 ; XXH64_round
                                                                                                                           Page  106 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003662                                    5244 @@gen_label236 DS    0H
00003662 05EF                               5245          BALR  14,15
00003664                                    5246 @@gen_label237 DS    0H
00003664 4120 2008               00000008   5247          LA    2,8(0,2)
00003668 B982 003F                          5248          XGR   3,15
0000366C EBF3 001B 000D          0000001B   5249          SLLG  15,3,27(0)
00003672 EB13 0025 000C          00000025   5250          SRLG  1,3,37(0)
00003678 B981 00F1                          5251          OGR   15,1
0000367C E310 C078 0004          000032E0   5252          LG    1,@lit_801_174
00003682 E330 1070 0004          00000070   5253          LG    3,112(0,1)  ; PRIME64_1
00003688 B90C 00F3                          5254          MSGR  15,3
0000368C E3F0 1088 000A          00000088   5255          ALG   15,136(0,1)
00003692 B904 003F                          5256          LGR   3,15        ; h64
                                            5257 * ***
                                            5258 * ***         case 17: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5259 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5260 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003696                                    5261 @L118    DS    0H
00003696 E320 D0B0 0024          000000B0   5262          STG   2,176(0,13)
0000369C B914 00F4                          5263          LGFR  15,4
000036A0 E3F0 D0B8 0024          000000B8   5264          STG   15,184(0,13)
000036A6 B914 00F5                          5265          LGFR  15,5
000036AA E3F0 D0C0 0024          000000C0   5266          STG   15,192(0,13)
000036B0 4110 D0B0               000000B0   5267          LA    1,176(0,13)
000036B4 E3F0 C068 0004          000032D0   5268          LG    15,@lit_801_172 ; XXH_readLE64_align
000036BA                                    5269 @@gen_label238 DS    0H
000036BA 05EF                               5270          BALR  14,15
000036BC                                    5271 @@gen_label239 DS    0H
000036BC D707 D0B0 D0B0 000000B0 000000B0   5272          XC    176(8,13),176(13)
000036C2 E3F0 D0B8 0024          000000B8   5273          STG   15,184(0,13)
000036C8 4110 D0B0               000000B0   5274          LA    1,176(0,13)
000036CC E3F0 C070 0004          000032D8   5275          LG    15,@lit_801_173 ; XXH64_round
000036D2                                    5276 @@gen_label240 DS    0H
000036D2 05EF                               5277          BALR  14,15
000036D4                                    5278 @@gen_label241 DS    0H
000036D4 4120 2008               00000008   5279          LA    2,8(0,2)
000036D8 B982 003F                          5280          XGR   3,15
000036DC EBF3 001B 000D          0000001B   5281          SLLG  15,3,27(0)
000036E2 EB13 0025 000C          00000025   5282          SRLG  1,3,37(0)
000036E8 B981 00F1                          5283          OGR   15,1
000036EC E310 C078 0004          000032E0   5284          LG    1,@lit_801_174
000036F2 E330 1070 0004          00000070   5285          LG    3,112(0,1)  ; PRIME64_1
000036F8 B90C 00F3                          5286          MSGR  15,3
000036FC E3F0 1088 000A          00000088   5287          ALG   15,136(0,1)
00003702 B904 003F                          5288          LGR   3,15        ; h64
                                            5289 * ***
                                            5290 * ***         case  9: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5291 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5292 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003706                                    5293 @L119    DS    0H
00003706 E320 D0B0 0024          000000B0   5294          STG   2,176(0,13)
0000370C B914 00F4                          5295          LGFR  15,4
                                                                                                                           Page  107 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003710 E3F0 D0B8 0024          000000B8   5296          STG   15,184(0,13)
00003716 B914 00F5                          5297          LGFR  15,5
0000371A E3F0 D0C0 0024          000000C0   5298          STG   15,192(0,13)
00003720 4110 D0B0               000000B0   5299          LA    1,176(0,13)
00003724 E3F0 C068 0004          000032D0   5300          LG    15,@lit_801_172 ; XXH_readLE64_align
0000372A                                    5301 @@gen_label242 DS    0H
0000372A 05EF                               5302          BALR  14,15
0000372C                                    5303 @@gen_label243 DS    0H
0000372C D707 D0B0 D0B0 000000B0 000000B0   5304          XC    176(8,13),176(13)
00003732 E3F0 D0B8 0024          000000B8   5305          STG   15,184(0,13)
00003738 4110 D0B0               000000B0   5306          LA    1,176(0,13)
0000373C E3F0 C070 0004          000032D8   5307          LG    15,@lit_801_173 ; XXH64_round
00003742                                    5308 @@gen_label244 DS    0H
00003742 05EF                               5309          BALR  14,15
00003744                                    5310 @@gen_label245 DS    0H
00003744 4110 2008               00000008   5311          LA    1,8(0,2)
00003748 B982 003F                          5312          XGR   3,15
0000374C EBF3 001B 000D          0000001B   5313          SLLG  15,3,27(0)
00003752 EB23 0025 000C          00000025   5314          SRLG  2,3,37(0)
00003758 B981 00F2                          5315          OGR   15,2
0000375C E320 C078 0004          000032E0   5316          LG    2,@lit_801_174
00003762 E330 2070 0004          00000070   5317          LG    3,112(0,2)  ; PRIME64_1
00003768 B90C 00F3                          5318          MSGR  15,3
0000376C E3F0 2088 000A          00000088   5319          ALG   15,136(0,2)
                                            5320 * ***                  h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            5321 *  (h64 >> (64 - 11))) * PRIME64_1;;
00003772 E310 1000 0094          00000000   5322          LLC   1,0(0,1)
00003778 B914 0011                          5323          LGFR  1,1
0000377C E320 2090 0004          00000090   5324          LG    2,144(0,2)  ; PRIME64_5
00003782 B90C 0012                          5325          MSGR  1,2
00003786 B982 00F1                          5326          XGR   15,1
0000378A EB1F 000B 000D          0000000B   5327          SLLG  1,15,11(0)
00003790 EBFF 0035 000C          00000035   5328          SRLG  15,15,53(0)
00003796 B981 001F                          5329          OGR   1,15
0000379A B90C 0013                          5330          MSGR  1,3
                                            5331 * ***                  return XXH64_avalanche(h64);
0000379E E310 D0B0 0024          000000B0   5332          STG   1,176(0,13)
000037A4 4110 D0B0               000000B0   5333          LA    1,176(0,13)
000037A8 E3F0 C080 0004          000032E8   5334          LG    15,@lit_801_181 ; XXH64_avalanche
000037AE                                    5335 @@gen_label246 DS    0H
000037AE 05EF                               5336          BALR  14,15
000037B0                                    5337 @@gen_label247 DS    0H
000037B0 E3C0 C064 001A          000032CC   5338          ALGF  12,@lit_region_diff_801_1_2
                                            5339          DROP  12
                        00003B6E            5340          USING @REGION_801_2,12
000037B6 47F0 C94A               000044B8   5341          B     @ret_lab_801
                                            5342          DROP  12
                        00003268            5343          USING @REGION_801_1,12
                                            5344 * ***
                                            5345 * ***         case 29: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5346 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5347 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
                                                                                                                           Page  108 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000037BA                                    5348 @L120    DS    0H
000037BA E320 D0B0 0024          000000B0   5349          STG   2,176(0,13)
000037C0 B914 00F4                          5350          LGFR  15,4
000037C4 E3F0 D0B8 0024          000000B8   5351          STG   15,184(0,13)
000037CA B914 00F5                          5352          LGFR  15,5
000037CE E3F0 D0C0 0024          000000C0   5353          STG   15,192(0,13)
000037D4 4110 D0B0               000000B0   5354          LA    1,176(0,13)
000037D8 E3F0 C068 0004          000032D0   5355          LG    15,@lit_801_172 ; XXH_readLE64_align
000037DE                                    5356 @@gen_label248 DS    0H
000037DE 05EF                               5357          BALR  14,15
000037E0                                    5358 @@gen_label249 DS    0H
000037E0 D707 D0B0 D0B0 000000B0 000000B0   5359          XC    176(8,13),176(13)
000037E6 E3F0 D0B8 0024          000000B8   5360          STG   15,184(0,13)
000037EC 4110 D0B0               000000B0   5361          LA    1,176(0,13)
000037F0 E3F0 C070 0004          000032D8   5362          LG    15,@lit_801_173 ; XXH64_round
000037F6                                    5363 @@gen_label250 DS    0H
000037F6 05EF                               5364          BALR  14,15
000037F8                                    5365 @@gen_label251 DS    0H
000037F8 4120 2008               00000008   5366          LA    2,8(0,2)
000037FC B982 003F                          5367          XGR   3,15
00003800 EBF3 001B 000D          0000001B   5368          SLLG  15,3,27(0)
00003806 EB13 0025 000C          00000025   5369          SRLG  1,3,37(0)
0000380C B981 00F1                          5370          OGR   15,1
00003810 E310 C078 0004          000032E0   5371          LG    1,@lit_801_174
00003816 E330 1070 0004          00000070   5372          LG    3,112(0,1)  ; PRIME64_1
0000381C B90C 00F3                          5373          MSGR  15,3
00003820 E3F0 1088 000A          00000088   5374          ALG   15,136(0,1)
00003826 B904 003F                          5375          LGR   3,15        ; h64
                                            5376 * ***
                                            5377 * ***         case 21: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5378 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5379 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
0000382A                                    5380 @L121    DS    0H
0000382A E320 D0B0 0024          000000B0   5381          STG   2,176(0,13)
00003830 B914 00F4                          5382          LGFR  15,4
00003834 E3F0 D0B8 0024          000000B8   5383          STG   15,184(0,13)
0000383A B914 00F5                          5384          LGFR  15,5
0000383E E3F0 D0C0 0024          000000C0   5385          STG   15,192(0,13)
00003844 4110 D0B0               000000B0   5386          LA    1,176(0,13)
00003848 E3F0 C068 0004          000032D0   5387          LG    15,@lit_801_172 ; XXH_readLE64_align
0000384E                                    5388 @@gen_label252 DS    0H
0000384E 05EF                               5389          BALR  14,15
00003850                                    5390 @@gen_label253 DS    0H
00003850 D707 D0B0 D0B0 000000B0 000000B0   5391          XC    176(8,13),176(13)
00003856 E3F0 D0B8 0024          000000B8   5392          STG   15,184(0,13)
0000385C 4110 D0B0               000000B0   5393          LA    1,176(0,13)
00003860 E3F0 C070 0004          000032D8   5394          LG    15,@lit_801_173 ; XXH64_round
00003866                                    5395 @@gen_label254 DS    0H
00003866 05EF                               5396          BALR  14,15
00003868                                    5397 @@gen_label255 DS    0H
00003868 4120 2008               00000008   5398          LA    2,8(0,2)
0000386C B982 003F                          5399          XGR   3,15
                                                                                                                           Page  109 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003870 EBF3 001B 000D          0000001B   5400          SLLG  15,3,27(0)
00003876 EB13 0025 000C          00000025   5401          SRLG  1,3,37(0)
0000387C B981 00F1                          5402          OGR   15,1
00003880 E310 C078 0004          000032E0   5403          LG    1,@lit_801_174
00003886 E330 1070 0004          00000070   5404          LG    3,112(0,1)  ; PRIME64_1
0000388C B90C 00F3                          5405          MSGR  15,3
00003890 E3F0 1088 000A          00000088   5406          ALG   15,136(0,1)
00003896 B904 003F                          5407          LGR   3,15        ; h64
                                            5408 * ***
                                            5409 * ***         case 13: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5410 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5411 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
0000389A                                    5412 @L122    DS    0H
0000389A E320 D0B0 0024          000000B0   5413          STG   2,176(0,13)
000038A0 B914 00F4                          5414          LGFR  15,4
000038A4 E3F0 D0B8 0024          000000B8   5415          STG   15,184(0,13)
000038AA B914 00F5                          5416          LGFR  15,5
000038AE E3F0 D0C0 0024          000000C0   5417          STG   15,192(0,13)
000038B4 4110 D0B0               000000B0   5418          LA    1,176(0,13)
000038B8 E3F0 C068 0004          000032D0   5419          LG    15,@lit_801_172 ; XXH_readLE64_align
000038BE                                    5420 @@gen_label256 DS    0H
000038BE 05EF                               5421          BALR  14,15
000038C0                                    5422 @@gen_label257 DS    0H
000038C0 D707 D0B0 D0B0 000000B0 000000B0   5423          XC    176(8,13),176(13)
000038C6 E3F0 D0B8 0024          000000B8   5424          STG   15,184(0,13)
000038CC 4110 D0B0               000000B0   5425          LA    1,176(0,13)
000038D0 E3F0 C070 0004          000032D8   5426          LG    15,@lit_801_173 ; XXH64_round
000038D6                                    5427 @@gen_label258 DS    0H
000038D6 05EF                               5428          BALR  14,15
000038D8                                    5429 @@gen_label259 DS    0H
000038D8 4120 2008               00000008   5430          LA    2,8(0,2)
000038DC B982 003F                          5431          XGR   3,15
000038E0 EBF3 001B 000D          0000001B   5432          SLLG  15,3,27(0)
000038E6 EB13 0025 000C          00000025   5433          SRLG  1,3,37(0)
000038EC B981 00F1                          5434          OGR   15,1
000038F0 E310 C078 0004          000032E0   5435          LG    1,@lit_801_174
000038F6 E330 1070 0004          00000070   5436          LG    3,112(0,1)  ; PRIME64_1
000038FC B90C 00F3                          5437          MSGR  15,3
00003900 E3F0 1088 000A          00000088   5438          ALG   15,136(0,1)
00003906 B904 003F                          5439          LGR   3,15        ; h64
                                            5440 * ***
                                            5441 * ***         case  5: h64 ^= (U64)(XXH_readLE32_align(p, endian, alig\
                                            5442 * n)) * PRIME64_1; p+=4; h64 = ((h64 << 23) | (h64 >> (64 - 23))) * PR\
                                            5443 * IME64_2 + PRIME64_3;;
0000390A                                    5444 @L123    DS    0H
0000390A E320 D0B0 0024          000000B0   5445          STG   2,176(0,13)
00003910 B914 00F4                          5446          LGFR  15,4
00003914 E3F0 D0B8 0024          000000B8   5447          STG   15,184(0,13)
0000391A B914 00F5                          5448          LGFR  15,5
0000391E E3F0 D0C0 0024          000000C0   5449          STG   15,192(0,13)
00003924 4110 D0B0               000000B0   5450          LA    1,176(0,13)
00003928 E3F0 C088 0004          000032F0   5451          LG    15,@lit_801_191 ; XXH_readLE32_align
                                                                                                                           Page  110 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000392E                                    5452 @@gen_label260 DS    0H
0000392E 05EF                               5453          BALR  14,15
00003930                                    5454 @@gen_label261 DS    0H
00003930 B916 00FF                          5455          LLGFR 15,15
00003934 E310 C078 0004          000032E0   5456          LG    1,@lit_801_174
0000393A E340 1070 0004          00000070   5457          LG    4,112(0,1)  ; PRIME64_1
00003940 B90C 00F4                          5458          MSGR  15,4
00003944 B982 003F                          5459          XGR   3,15
00003948 41F0 2004               00000004   5460          LA    15,4(0,2)
0000394C EB23 0017 000D          00000017   5461          SLLG  2,3,23(0)
00003952 EB33 0029 000C          00000029   5462          SRLG  3,3,41(0)
00003958 B981 0023                          5463          OGR   2,3
0000395C E330 1078 0004          00000078   5464          LG    3,120(0,1)  ; PRIME64_2
00003962 B90C 0023                          5465          MSGR  2,3
00003966 E320 1080 000A          00000080   5466          ALG   2,128(0,1)
                                            5467 * ***                  h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            5468 *  (h64 >> (64 - 11))) * PRIME64_1;;
0000396C E3F0 F000 0094          00000000   5469          LLC   15,0(0,15)
00003972 B914 00FF                          5470          LGFR  15,15
00003976 E310 1090 0004          00000090   5471          LG    1,144(0,1)  ; PRIME64_5
0000397C B90C 00F1                          5472          MSGR  15,1
00003980 B982 002F                          5473          XGR   2,15
00003984 EBF2 000B 000D          0000000B   5474          SLLG  15,2,11(0)
0000398A EB12 0035 000C          00000035   5475          SRLG  1,2,53(0)
00003990 B981 00F1                          5476          OGR   15,1
00003994 B90C 00F4                          5477          MSGR  15,4
                                            5478 * ***                  return XXH64_avalanche(h64);
00003998 E3F0 D0B0 0024          000000B0   5479          STG   15,176(0,13)
0000399E 4110 D0B0               000000B0   5480          LA    1,176(0,13)
000039A2 E3F0 C080 0004          000032E8   5481          LG    15,@lit_801_181 ; XXH64_avalanche
000039A8                                    5482 @@gen_label262 DS    0H
000039A8 05EF                               5483          BALR  14,15
000039AA                                    5484 @@gen_label263 DS    0H
000039AA E3C0 C064 001A          000032CC   5485          ALGF  12,@lit_region_diff_801_1_2
                                            5486          DROP  12
                        00003B6E            5487          USING @REGION_801_2,12
000039B0 47F0 C94A               000044B8   5488          B     @ret_lab_801
                                            5489          DROP  12
                        00003268            5490          USING @REGION_801_1,12
                                            5491 * ***
                                            5492 * ***         case 26: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5493 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5494 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
000039B4                                    5495 @L124    DS    0H
000039B4 E320 D0B0 0024          000000B0   5496          STG   2,176(0,13)
000039BA B914 00F4                          5497          LGFR  15,4
000039BE E3F0 D0B8 0024          000000B8   5498          STG   15,184(0,13)
000039C4 B914 00F5                          5499          LGFR  15,5
000039C8 E3F0 D0C0 0024          000000C0   5500          STG   15,192(0,13)
000039CE 4110 D0B0               000000B0   5501          LA    1,176(0,13)
000039D2 E3F0 C068 0004          000032D0   5502          LG    15,@lit_801_172 ; XXH_readLE64_align
000039D8                                    5503 @@gen_label264 DS    0H
                                                                                                                           Page  111 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000039D8 05EF                               5504          BALR  14,15
000039DA                                    5505 @@gen_label265 DS    0H
000039DA D707 D0B0 D0B0 000000B0 000000B0   5506          XC    176(8,13),176(13)
000039E0 E3F0 D0B8 0024          000000B8   5507          STG   15,184(0,13)
000039E6 4110 D0B0               000000B0   5508          LA    1,176(0,13)
000039EA E3F0 C070 0004          000032D8   5509          LG    15,@lit_801_173 ; XXH64_round
000039F0                                    5510 @@gen_label266 DS    0H
000039F0 05EF                               5511          BALR  14,15
000039F2                                    5512 @@gen_label267 DS    0H
000039F2 4120 2008               00000008   5513          LA    2,8(0,2)
000039F6 B982 003F                          5514          XGR   3,15
000039FA EBF3 001B 000D          0000001B   5515          SLLG  15,3,27(0)
00003A00 EB13 0025 000C          00000025   5516          SRLG  1,3,37(0)
00003A06 B981 00F1                          5517          OGR   15,1
00003A0A E310 C078 0004          000032E0   5518          LG    1,@lit_801_174
00003A10 E330 1070 0004          00000070   5519          LG    3,112(0,1)  ; PRIME64_1
00003A16 B90C 00F3                          5520          MSGR  15,3
00003A1A E3F0 1088 000A          00000088   5521          ALG   15,136(0,1)
00003A20 B904 003F                          5522          LGR   3,15        ; h64
                                            5523 * ***
                                            5524 * ***         case 18: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5525 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5526 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003A24                                    5527 @L125    DS    0H
00003A24 E320 D0B0 0024          000000B0   5528          STG   2,176(0,13)
00003A2A B914 00F4                          5529          LGFR  15,4
00003A2E E3F0 D0B8 0024          000000B8   5530          STG   15,184(0,13)
00003A34 B914 00F5                          5531          LGFR  15,5
00003A38 E3F0 D0C0 0024          000000C0   5532          STG   15,192(0,13)
00003A3E 4110 D0B0               000000B0   5533          LA    1,176(0,13)
00003A42 E3F0 C068 0004          000032D0   5534          LG    15,@lit_801_172 ; XXH_readLE64_align
00003A48                                    5535 @@gen_label268 DS    0H
00003A48 05EF                               5536          BALR  14,15
00003A4A                                    5537 @@gen_label269 DS    0H
00003A4A D707 D0B0 D0B0 000000B0 000000B0   5538          XC    176(8,13),176(13)
00003A50 E3F0 D0B8 0024          000000B8   5539          STG   15,184(0,13)
00003A56 4110 D0B0               000000B0   5540          LA    1,176(0,13)
00003A5A E3F0 C070 0004          000032D8   5541          LG    15,@lit_801_173 ; XXH64_round
00003A60                                    5542 @@gen_label270 DS    0H
00003A60 05EF                               5543          BALR  14,15
00003A62                                    5544 @@gen_label271 DS    0H
00003A62 4120 2008               00000008   5545          LA    2,8(0,2)
00003A66 B982 003F                          5546          XGR   3,15
00003A6A EBF3 001B 000D          0000001B   5547          SLLG  15,3,27(0)
00003A70 EB13 0025 000C          00000025   5548          SRLG  1,3,37(0)
00003A76 B981 00F1                          5549          OGR   15,1
00003A7A E310 C078 0004          000032E0   5550          LG    1,@lit_801_174
00003A80 E330 1070 0004          00000070   5551          LG    3,112(0,1)  ; PRIME64_1
00003A86 B90C 00F3                          5552          MSGR  15,3
00003A8A E3F0 1088 000A          00000088   5553          ALG   15,136(0,1)
00003A90 B904 003F                          5554          LGR   3,15        ; h64
                                            5555 * ***
                                                                                                                           Page  112 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5556 * ***         case 10: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5557 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5558 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003A94                                    5559 @L126    DS    0H
00003A94 E320 D0B0 0024          000000B0   5560          STG   2,176(0,13)
00003A9A B914 00F4                          5561          LGFR  15,4
00003A9E E3F0 D0B8 0024          000000B8   5562          STG   15,184(0,13)
00003AA4 B914 00F5                          5563          LGFR  15,5
00003AA8 E3F0 D0C0 0024          000000C0   5564          STG   15,192(0,13)
00003AAE 4110 D0B0               000000B0   5565          LA    1,176(0,13)
00003AB2 E3F0 C068 0004          000032D0   5566          LG    15,@lit_801_172 ; XXH_readLE64_align
00003AB8                                    5567 @@gen_label272 DS    0H
00003AB8 05EF                               5568          BALR  14,15
00003ABA                                    5569 @@gen_label273 DS    0H
00003ABA D707 D0B0 D0B0 000000B0 000000B0   5570          XC    176(8,13),176(13)
00003AC0 E3F0 D0B8 0024          000000B8   5571          STG   15,184(0,13)
00003AC6 4110 D0B0               000000B0   5572          LA    1,176(0,13)
00003ACA E3F0 C070 0004          000032D8   5573          LG    15,@lit_801_173 ; XXH64_round
00003AD0                                    5574 @@gen_label274 DS    0H
00003AD0 05EF                               5575          BALR  14,15
00003AD2                                    5576 @@gen_label275 DS    0H
00003AD2 4110 2008               00000008   5577          LA    1,8(0,2)
00003AD6 B982 003F                          5578          XGR   3,15
00003ADA EBF3 001B 000D          0000001B   5579          SLLG  15,3,27(0)
00003AE0 EB23 0025 000C          00000025   5580          SRLG  2,3,37(0)
00003AE6 B981 00F2                          5581          OGR   15,2
00003AEA E320 C078 0004          000032E0   5582          LG    2,@lit_801_174
00003AF0 E330 2070 0004          00000070   5583          LG    3,112(0,2)  ; PRIME64_1
00003AF6 B90C 00F3                          5584          MSGR  15,3
00003AFA E3F0 2088 000A          00000088   5585          ALG   15,136(0,2)
                                            5586 * ***                  h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            5587 *  (h64 >> (64 - 11))) * PRIME64_1;;
00003B00 4140 1001               00000001   5588          LA    4,1(0,1)
00003B04 E310 1000 0094          00000000   5589          LLC   1,0(0,1)
00003B0A B914 0011                          5590          LGFR  1,1
00003B0E E320 2090 0004          00000090   5591          LG    2,144(0,2)  ; PRIME64_5
00003B14 B90C 0012                          5592          MSGR  1,2
00003B18 B982 00F1                          5593          XGR   15,1
00003B1C EB1F 000B 000D          0000000B   5594          SLLG  1,15,11(0)
00003B22 EBFF 0035 000C          00000035   5595          SRLG  15,15,53(0)
00003B28 B981 001F                          5596          OGR   1,15
00003B2C B90C 0013                          5597          MSGR  1,3
                                            5598 * ***                  h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            5599 *  (h64 >> (64 - 11))) * PRIME64_1;;
00003B30 E3F0 4000 0094          00000000   5600          LLC   15,0(0,4)
00003B36 B914 00FF                          5601          LGFR  15,15
00003B3A B90C 00F2                          5602          MSGR  15,2
00003B3E B982 001F                          5603          XGR   1,15
00003B42 EBF1 000B 000D          0000000B   5604          SLLG  15,1,11(0)
00003B48 EB11 0035 000C          00000035   5605          SRLG  1,1,53(0)
00003B4E B981 00F1                          5606          OGR   15,1
00003B52 B90C 00F3                          5607          MSGR  15,3
                                                                                                                           Page  113 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5608 * ***                  return XXH64_avalanche(h64);
00003B56 E3F0 D0B0 0024          000000B0   5609          STG   15,176(0,13)
00003B5C 4110 D0B0               000000B0   5610          LA    1,176(0,13)
00003B60 E3F0 C080 0004          000032E8   5611          LG    15,@lit_801_181 ; XXH64_avalanche
00003B66                                    5612 @@gen_label276 DS    0H
00003B66 05EF                               5613          BALR  14,15
00003B68                                    5614 @@gen_label277 DS    0H
00003B68 E3C0 C064 001A          000032CC   5615          ALGF  12,@lit_region_diff_801_1_2
00003B6E                                    5616 @REGION_801_2 DS 0H
                                            5617          DROP  12
                        00003B6E            5618          USING @REGION_801_2,12
00003B6E 47F0 C94A               000044B8   5619          B     @ret_lab_801
00003B78                                    5620          DS    0D
00003B78 0000000000002BB0                   5621 @lit_801_226 DC AD($X$X$H_read$L$E64_align)
00003B80 0000000000002FA8                   5622 @lit_801_227 DC AD($X$X$H64_round)
00003B88 00000000000059C8                   5623 @lit_801_228 DC AD(@DATA)
00003B90 0000000000000848                   5624 @lit_801_235 DC AD($X$X$H_read$L$E32_align)
00003B98 00000000000031A8                   5625 @lit_801_237 DC AD($X$X$H64_avalanche)
00003BA0 000000000000001F                   5626 @lit_801_263 DC FD'31' 0x000000000000001f
00003BA8 0000000000000000                   5627 @lit_801_267 DC AD(__assert)
00003BB0 0000000000005A70                   5628 @lit_801_266 DC AD(@strings@)
                                            5629 * ***
                                            5630 * ***         case 30: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5631 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5632 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003BB8                                    5633 @L127    DS    0H
00003BB8 E320 D0B0 0024          000000B0   5634          STG   2,176(0,13)
00003BBE B914 00F4                          5635          LGFR  15,4
00003BC2 E3F0 D0B8 0024          000000B8   5636          STG   15,184(0,13)
00003BC8 B914 00F5                          5637          LGFR  15,5
00003BCC E3F0 D0C0 0024          000000C0   5638          STG   15,192(0,13)
00003BD2 4110 D0B0               000000B0   5639          LA    1,176(0,13)
00003BD6 E3F0 C00A 0004          00003B78   5640          LG    15,@lit_801_226 ; XXH_readLE64_align
00003BDC                                    5641 @@gen_label278 DS    0H
00003BDC 05EF                               5642          BALR  14,15
00003BDE                                    5643 @@gen_label279 DS    0H
00003BDE D707 D0B0 D0B0 000000B0 000000B0   5644          XC    176(8,13),176(13)
00003BE4 E3F0 D0B8 0024          000000B8   5645          STG   15,184(0,13)
00003BEA 4110 D0B0               000000B0   5646          LA    1,176(0,13)
00003BEE E3F0 C012 0004          00003B80   5647          LG    15,@lit_801_227 ; XXH64_round
00003BF4                                    5648 @@gen_label280 DS    0H
00003BF4 05EF                               5649          BALR  14,15
00003BF6                                    5650 @@gen_label281 DS    0H
00003BF6 4120 2008               00000008   5651          LA    2,8(0,2)
00003BFA B982 003F                          5652          XGR   3,15
00003BFE EBF3 001B 000D          0000001B   5653          SLLG  15,3,27(0)
00003C04 EB13 0025 000C          00000025   5654          SRLG  1,3,37(0)
00003C0A B981 00F1                          5655          OGR   15,1
00003C0E E310 C01A 0004          00003B88   5656          LG    1,@lit_801_228
00003C14 E330 1070 0004          00000070   5657          LG    3,112(0,1)  ; PRIME64_1
00003C1A B90C 00F3                          5658          MSGR  15,3
00003C1E E3F0 1088 000A          00000088   5659          ALG   15,136(0,1)
                                                                                                                           Page  114 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003C24 B904 003F                          5660          LGR   3,15        ; h64
                                            5661 * ***
                                            5662 * ***         case 22: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5663 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5664 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003C28                                    5665 @L128    DS    0H
00003C28 E320 D0B0 0024          000000B0   5666          STG   2,176(0,13)
00003C2E B914 00F4                          5667          LGFR  15,4
00003C32 E3F0 D0B8 0024          000000B8   5668          STG   15,184(0,13)
00003C38 B914 00F5                          5669          LGFR  15,5
00003C3C E3F0 D0C0 0024          000000C0   5670          STG   15,192(0,13)
00003C42 4110 D0B0               000000B0   5671          LA    1,176(0,13)
00003C46 E3F0 C00A 0004          00003B78   5672          LG    15,@lit_801_226 ; XXH_readLE64_align
00003C4C                                    5673 @@gen_label282 DS    0H
00003C4C 05EF                               5674          BALR  14,15
00003C4E                                    5675 @@gen_label283 DS    0H
00003C4E D707 D0B0 D0B0 000000B0 000000B0   5676          XC    176(8,13),176(13)
00003C54 E3F0 D0B8 0024          000000B8   5677          STG   15,184(0,13)
00003C5A 4110 D0B0               000000B0   5678          LA    1,176(0,13)
00003C5E E3F0 C012 0004          00003B80   5679          LG    15,@lit_801_227 ; XXH64_round
00003C64                                    5680 @@gen_label284 DS    0H
00003C64 05EF                               5681          BALR  14,15
00003C66                                    5682 @@gen_label285 DS    0H
00003C66 4120 2008               00000008   5683          LA    2,8(0,2)
00003C6A B982 003F                          5684          XGR   3,15
00003C6E EBF3 001B 000D          0000001B   5685          SLLG  15,3,27(0)
00003C74 EB13 0025 000C          00000025   5686          SRLG  1,3,37(0)
00003C7A B981 00F1                          5687          OGR   15,1
00003C7E E310 C01A 0004          00003B88   5688          LG    1,@lit_801_228
00003C84 E330 1070 0004          00000070   5689          LG    3,112(0,1)  ; PRIME64_1
00003C8A B90C 00F3                          5690          MSGR  15,3
00003C8E E3F0 1088 000A          00000088   5691          ALG   15,136(0,1)
00003C94 B904 003F                          5692          LGR   3,15        ; h64
                                            5693 * ***
                                            5694 * ***         case 14: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5695 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5696 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003C98                                    5697 @L129    DS    0H
00003C98 E320 D0B0 0024          000000B0   5698          STG   2,176(0,13)
00003C9E B914 00F4                          5699          LGFR  15,4
00003CA2 E3F0 D0B8 0024          000000B8   5700          STG   15,184(0,13)
00003CA8 B914 00F5                          5701          LGFR  15,5
00003CAC E3F0 D0C0 0024          000000C0   5702          STG   15,192(0,13)
00003CB2 4110 D0B0               000000B0   5703          LA    1,176(0,13)
00003CB6 E3F0 C00A 0004          00003B78   5704          LG    15,@lit_801_226 ; XXH_readLE64_align
00003CBC                                    5705 @@gen_label286 DS    0H
00003CBC 05EF                               5706          BALR  14,15
00003CBE                                    5707 @@gen_label287 DS    0H
00003CBE D707 D0B0 D0B0 000000B0 000000B0   5708          XC    176(8,13),176(13)
00003CC4 E3F0 D0B8 0024          000000B8   5709          STG   15,184(0,13)
00003CCA 4110 D0B0               000000B0   5710          LA    1,176(0,13)
00003CCE E3F0 C012 0004          00003B80   5711          LG    15,@lit_801_227 ; XXH64_round
                                                                                                                           Page  115 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003CD4                                    5712 @@gen_label288 DS    0H
00003CD4 05EF                               5713          BALR  14,15
00003CD6                                    5714 @@gen_label289 DS    0H
00003CD6 4120 2008               00000008   5715          LA    2,8(0,2)
00003CDA B982 003F                          5716          XGR   3,15
00003CDE EBF3 001B 000D          0000001B   5717          SLLG  15,3,27(0)
00003CE4 EB13 0025 000C          00000025   5718          SRLG  1,3,37(0)
00003CEA B981 00F1                          5719          OGR   15,1
00003CEE E310 C01A 0004          00003B88   5720          LG    1,@lit_801_228
00003CF4 E330 1070 0004          00000070   5721          LG    3,112(0,1)  ; PRIME64_1
00003CFA B90C 00F3                          5722          MSGR  15,3
00003CFE E3F0 1088 000A          00000088   5723          ALG   15,136(0,1)
00003D04 B904 003F                          5724          LGR   3,15        ; h64
                                            5725 * ***
                                            5726 * ***         case  6: h64 ^= (U64)(XXH_readLE32_align(p, endian, alig\
                                            5727 * n)) * PRIME64_1; p+=4; h64 = ((h64 << 23) | (h64 >> (64 - 23))) * PR\
                                            5728 * IME64_2 + PRIME64_3;;
00003D08                                    5729 @L130    DS    0H
00003D08 E320 D0B0 0024          000000B0   5730          STG   2,176(0,13)
00003D0E B914 00F4                          5731          LGFR  15,4
00003D12 E3F0 D0B8 0024          000000B8   5732          STG   15,184(0,13)
00003D18 B914 00F5                          5733          LGFR  15,5
00003D1C E3F0 D0C0 0024          000000C0   5734          STG   15,192(0,13)
00003D22 4110 D0B0               000000B0   5735          LA    1,176(0,13)
00003D26 E3F0 C022 0004          00003B90   5736          LG    15,@lit_801_235 ; XXH_readLE32_align
00003D2C                                    5737 @@gen_label290 DS    0H
00003D2C 05EF                               5738          BALR  14,15
00003D2E                                    5739 @@gen_label291 DS    0H
00003D2E B916 00FF                          5740          LLGFR 15,15
00003D32 E310 C01A 0004          00003B88   5741          LG    1,@lit_801_228
00003D38 E340 1070 0004          00000070   5742          LG    4,112(0,1)  ; PRIME64_1
00003D3E B90C 00F4                          5743          MSGR  15,4
00003D42 B982 003F                          5744          XGR   3,15
00003D46 41F0 2004               00000004   5745          LA    15,4(0,2)
00003D4A EB23 0017 000D          00000017   5746          SLLG  2,3,23(0)
00003D50 EB33 0029 000C          00000029   5747          SRLG  3,3,41(0)
00003D56 B981 0023                          5748          OGR   2,3
00003D5A E330 1078 0004          00000078   5749          LG    3,120(0,1)  ; PRIME64_2
00003D60 B90C 0023                          5750          MSGR  2,3
00003D64 E320 1080 000A          00000080   5751          ALG   2,128(0,1)
                                            5752 * ***                  h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            5753 *  (h64 >> (64 - 11))) * PRIME64_1;;
00003D6A 4130 F001               00000001   5754          LA    3,1(0,15)
00003D6E E3F0 F000 0094          00000000   5755          LLC   15,0(0,15)
00003D74 B914 00FF                          5756          LGFR  15,15
00003D78 E310 1090 0004          00000090   5757          LG    1,144(0,1)  ; PRIME64_5
00003D7E B90C 00F1                          5758          MSGR  15,1
00003D82 B982 002F                          5759          XGR   2,15
00003D86 EBF2 000B 000D          0000000B   5760          SLLG  15,2,11(0)
00003D8C EB22 0035 000C          00000035   5761          SRLG  2,2,53(0)
00003D92 B981 00F2                          5762          OGR   15,2
00003D96 B90C 00F4                          5763          MSGR  15,4
                                                                                                                           Page  116 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5764 * ***                  h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            5765 *  (h64 >> (64 - 11))) * PRIME64_1;;
00003D9A E320 3000 0094          00000000   5766          LLC   2,0(0,3)
00003DA0 B914 0022                          5767          LGFR  2,2
00003DA4 B90C 0021                          5768          MSGR  2,1
00003DA8 B982 00F2                          5769          XGR   15,2
00003DAC EB1F 000B 000D          0000000B   5770          SLLG  1,15,11(0)
00003DB2 EBFF 0035 000C          00000035   5771          SRLG  15,15,53(0)
00003DB8 B981 001F                          5772          OGR   1,15
00003DBC B90C 0014                          5773          MSGR  1,4
                                            5774 * ***                  return XXH64_avalanche(h64);
00003DC0 E310 D0B0 0024          000000B0   5775          STG   1,176(0,13)
00003DC6 4110 D0B0               000000B0   5776          LA    1,176(0,13)
00003DCA E3F0 C02A 0004          00003B98   5777          LG    15,@lit_801_237 ; XXH64_avalanche
00003DD0                                    5778 @@gen_label292 DS    0H
00003DD0 05EF                               5779          BALR  14,15
00003DD2                                    5780 @@gen_label293 DS    0H
00003DD2 47F0 C94A               000044B8   5781          B     @ret_lab_801
                                            5782 * ***
                                            5783 * ***         case 27: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5784 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5785 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003DD6                                    5786 @L131    DS    0H
00003DD6 E320 D0B0 0024          000000B0   5787          STG   2,176(0,13)
00003DDC B914 00F4                          5788          LGFR  15,4
00003DE0 E3F0 D0B8 0024          000000B8   5789          STG   15,184(0,13)
00003DE6 B914 00F5                          5790          LGFR  15,5
00003DEA E3F0 D0C0 0024          000000C0   5791          STG   15,192(0,13)
00003DF0 4110 D0B0               000000B0   5792          LA    1,176(0,13)
00003DF4 E3F0 C00A 0004          00003B78   5793          LG    15,@lit_801_226 ; XXH_readLE64_align
00003DFA                                    5794 @@gen_label294 DS    0H
00003DFA 05EF                               5795          BALR  14,15
00003DFC                                    5796 @@gen_label295 DS    0H
00003DFC D707 D0B0 D0B0 000000B0 000000B0   5797          XC    176(8,13),176(13)
00003E02 E3F0 D0B8 0024          000000B8   5798          STG   15,184(0,13)
00003E08 4110 D0B0               000000B0   5799          LA    1,176(0,13)
00003E0C E3F0 C012 0004          00003B80   5800          LG    15,@lit_801_227 ; XXH64_round
00003E12                                    5801 @@gen_label296 DS    0H
00003E12 05EF                               5802          BALR  14,15
00003E14                                    5803 @@gen_label297 DS    0H
00003E14 4120 2008               00000008   5804          LA    2,8(0,2)
00003E18 B982 003F                          5805          XGR   3,15
00003E1C EBF3 001B 000D          0000001B   5806          SLLG  15,3,27(0)
00003E22 EB13 0025 000C          00000025   5807          SRLG  1,3,37(0)
00003E28 B981 00F1                          5808          OGR   15,1
00003E2C E310 C01A 0004          00003B88   5809          LG    1,@lit_801_228
00003E32 E330 1070 0004          00000070   5810          LG    3,112(0,1)  ; PRIME64_1
00003E38 B90C 00F3                          5811          MSGR  15,3
00003E3C E3F0 1088 000A          00000088   5812          ALG   15,136(0,1)
00003E42 B904 003F                          5813          LGR   3,15        ; h64
                                            5814 * ***
                                            5815 * ***         case 19: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                                                                                                           Page  117 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5816 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5817 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003E46                                    5818 @L132    DS    0H
00003E46 E320 D0B0 0024          000000B0   5819          STG   2,176(0,13)
00003E4C B914 00F4                          5820          LGFR  15,4
00003E50 E3F0 D0B8 0024          000000B8   5821          STG   15,184(0,13)
00003E56 B914 00F5                          5822          LGFR  15,5
00003E5A E3F0 D0C0 0024          000000C0   5823          STG   15,192(0,13)
00003E60 4110 D0B0               000000B0   5824          LA    1,176(0,13)
00003E64 E3F0 C00A 0004          00003B78   5825          LG    15,@lit_801_226 ; XXH_readLE64_align
00003E6A                                    5826 @@gen_label298 DS    0H
00003E6A 05EF                               5827          BALR  14,15
00003E6C                                    5828 @@gen_label299 DS    0H
00003E6C D707 D0B0 D0B0 000000B0 000000B0   5829          XC    176(8,13),176(13)
00003E72 E3F0 D0B8 0024          000000B8   5830          STG   15,184(0,13)
00003E78 4110 D0B0               000000B0   5831          LA    1,176(0,13)
00003E7C E3F0 C012 0004          00003B80   5832          LG    15,@lit_801_227 ; XXH64_round
00003E82                                    5833 @@gen_label300 DS    0H
00003E82 05EF                               5834          BALR  14,15
00003E84                                    5835 @@gen_label301 DS    0H
00003E84 4120 2008               00000008   5836          LA    2,8(0,2)
00003E88 B982 003F                          5837          XGR   3,15
00003E8C EBF3 001B 000D          0000001B   5838          SLLG  15,3,27(0)
00003E92 EB13 0025 000C          00000025   5839          SRLG  1,3,37(0)
00003E98 B981 00F1                          5840          OGR   15,1
00003E9C E310 C01A 0004          00003B88   5841          LG    1,@lit_801_228
00003EA2 E330 1070 0004          00000070   5842          LG    3,112(0,1)  ; PRIME64_1
00003EA8 B90C 00F3                          5843          MSGR  15,3
00003EAC E3F0 1088 000A          00000088   5844          ALG   15,136(0,1)
00003EB2 B904 003F                          5845          LGR   3,15        ; h64
                                            5846 * ***
                                            5847 * ***         case 11: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5848 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5849 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003EB6                                    5850 @L133    DS    0H
00003EB6 E320 D0B0 0024          000000B0   5851          STG   2,176(0,13)
00003EBC B914 00F4                          5852          LGFR  15,4
00003EC0 E3F0 D0B8 0024          000000B8   5853          STG   15,184(0,13)
00003EC6 B914 00F5                          5854          LGFR  15,5
00003ECA E3F0 D0C0 0024          000000C0   5855          STG   15,192(0,13)
00003ED0 4110 D0B0               000000B0   5856          LA    1,176(0,13)
00003ED4 E3F0 C00A 0004          00003B78   5857          LG    15,@lit_801_226 ; XXH_readLE64_align
00003EDA                                    5858 @@gen_label302 DS    0H
00003EDA 05EF                               5859          BALR  14,15
00003EDC                                    5860 @@gen_label303 DS    0H
00003EDC D707 D0B0 D0B0 000000B0 000000B0   5861          XC    176(8,13),176(13)
00003EE2 E3F0 D0B8 0024          000000B8   5862          STG   15,184(0,13)
00003EE8 4110 D0B0               000000B0   5863          LA    1,176(0,13)
00003EEC E3F0 C012 0004          00003B80   5864          LG    15,@lit_801_227 ; XXH64_round
00003EF2                                    5865 @@gen_label304 DS    0H
00003EF2 05EF                               5866          BALR  14,15
00003EF4                                    5867 @@gen_label305 DS    0H
                                                                                                                           Page  118 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003EF4 4110 2008               00000008   5868          LA    1,8(0,2)
00003EF8 B982 003F                          5869          XGR   3,15
00003EFC EBF3 001B 000D          0000001B   5870          SLLG  15,3,27(0)
00003F02 EB23 0025 000C          00000025   5871          SRLG  2,3,37(0)
00003F08 B981 00F2                          5872          OGR   15,2
00003F0C E320 C01A 0004          00003B88   5873          LG    2,@lit_801_228
00003F12 E330 2070 0004          00000070   5874          LG    3,112(0,2)  ; PRIME64_1
00003F18 B90C 00F3                          5875          MSGR  15,3
00003F1C E3F0 2088 000A          00000088   5876          ALG   15,136(0,2)
                                            5877 * ***                  h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            5878 *  (h64 >> (64 - 11))) * PRIME64_1;;
00003F22 4140 1001               00000001   5879          LA    4,1(0,1)
00003F26 E310 1000 0094          00000000   5880          LLC   1,0(0,1)
00003F2C B914 0011                          5881          LGFR  1,1
00003F30 E320 2090 0004          00000090   5882          LG    2,144(0,2)  ; PRIME64_5
00003F36 B90C 0012                          5883          MSGR  1,2
00003F3A B982 00F1                          5884          XGR   15,1
00003F3E EB1F 000B 000D          0000000B   5885          SLLG  1,15,11(0)
00003F44 EBFF 0035 000C          00000035   5886          SRLG  15,15,53(0)
00003F4A B981 001F                          5887          OGR   1,15
00003F4E B90C 0013                          5888          MSGR  1,3
                                            5889 * ***                  h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            5890 *  (h64 >> (64 - 11))) * PRIME64_1;;
00003F52 41F0 4001               00000001   5891          LA    15,1(0,4)
00003F56 E340 4000 0094          00000000   5892          LLC   4,0(0,4)
00003F5C B914 0044                          5893          LGFR  4,4
00003F60 B90C 0042                          5894          MSGR  4,2
00003F64 B982 0014                          5895          XGR   1,4
00003F68 EB41 000B 000D          0000000B   5896          SLLG  4,1,11(0)
00003F6E EB11 0035 000C          00000035   5897          SRLG  1,1,53(0)
00003F74 B981 0041                          5898          OGR   4,1
00003F78 B90C 0043                          5899          MSGR  4,3
                                            5900 * ***                  h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            5901 *  (h64 >> (64 - 11))) * PRIME64_1;;
00003F7C E3F0 F000 0094          00000000   5902          LLC   15,0(0,15)
00003F82 B914 00FF                          5903          LGFR  15,15
00003F86 B90C 00F2                          5904          MSGR  15,2
00003F8A B982 004F                          5905          XGR   4,15
00003F8E EBF4 000B 000D          0000000B   5906          SLLG  15,4,11(0)
00003F94 EB14 0035 000C          00000035   5907          SRLG  1,4,53(0)
00003F9A B981 00F1                          5908          OGR   15,1
00003F9E B90C 00F3                          5909          MSGR  15,3
                                            5910 * ***                  return XXH64_avalanche(h64);
00003FA2 E3F0 D0B0 0024          000000B0   5911          STG   15,176(0,13)
00003FA8 4110 D0B0               000000B0   5912          LA    1,176(0,13)
00003FAC E3F0 C02A 0004          00003B98   5913          LG    15,@lit_801_237 ; XXH64_avalanche
00003FB2                                    5914 @@gen_label306 DS    0H
00003FB2 05EF                               5915          BALR  14,15
00003FB4                                    5916 @@gen_label307 DS    0H
00003FB4 47F0 C94A               000044B8   5917          B     @ret_lab_801
                                            5918 * ***
                                            5919 * ***         case 31: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                                                                                                           Page  119 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5920 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5921 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00003FB8                                    5922 @L134    DS    0H
00003FB8 E320 D0B0 0024          000000B0   5923          STG   2,176(0,13)
00003FBE B914 00F4                          5924          LGFR  15,4
00003FC2 E3F0 D0B8 0024          000000B8   5925          STG   15,184(0,13)
00003FC8 B914 00F5                          5926          LGFR  15,5
00003FCC E3F0 D0C0 0024          000000C0   5927          STG   15,192(0,13)
00003FD2 4110 D0B0               000000B0   5928          LA    1,176(0,13)
00003FD6 E3F0 C00A 0004          00003B78   5929          LG    15,@lit_801_226 ; XXH_readLE64_align
00003FDC                                    5930 @@gen_label308 DS    0H
00003FDC 05EF                               5931          BALR  14,15
00003FDE                                    5932 @@gen_label309 DS    0H
00003FDE D707 D0B0 D0B0 000000B0 000000B0   5933          XC    176(8,13),176(13)
00003FE4 E3F0 D0B8 0024          000000B8   5934          STG   15,184(0,13)
00003FEA 4110 D0B0               000000B0   5935          LA    1,176(0,13)
00003FEE E3F0 C012 0004          00003B80   5936          LG    15,@lit_801_227 ; XXH64_round
00003FF4                                    5937 @@gen_label310 DS    0H
00003FF4 05EF                               5938          BALR  14,15
00003FF6                                    5939 @@gen_label311 DS    0H
00003FF6 4120 2008               00000008   5940          LA    2,8(0,2)
00003FFA B982 003F                          5941          XGR   3,15
00003FFE EBF3 001B 000D          0000001B   5942          SLLG  15,3,27(0)
00004004 EB13 0025 000C          00000025   5943          SRLG  1,3,37(0)
0000400A B981 00F1                          5944          OGR   15,1
0000400E E310 C01A 0004          00003B88   5945          LG    1,@lit_801_228
00004014 E330 1070 0004          00000070   5946          LG    3,112(0,1)  ; PRIME64_1
0000401A B90C 00F3                          5947          MSGR  15,3
0000401E E3F0 1088 000A          00000088   5948          ALG   15,136(0,1)
00004024 B904 003F                          5949          LGR   3,15        ; h64
                                            5950 * ***
                                            5951 * ***         case 23: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5952 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5953 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00004028                                    5954 @L135    DS    0H
00004028 E320 D0B0 0024          000000B0   5955          STG   2,176(0,13)
0000402E B914 00F4                          5956          LGFR  15,4
00004032 E3F0 D0B8 0024          000000B8   5957          STG   15,184(0,13)
00004038 B914 00F5                          5958          LGFR  15,5
0000403C E3F0 D0C0 0024          000000C0   5959          STG   15,192(0,13)
00004042 4110 D0B0               000000B0   5960          LA    1,176(0,13)
00004046 E3F0 C00A 0004          00003B78   5961          LG    15,@lit_801_226 ; XXH_readLE64_align
0000404C                                    5962 @@gen_label312 DS    0H
0000404C 05EF                               5963          BALR  14,15
0000404E                                    5964 @@gen_label313 DS    0H
0000404E D707 D0B0 D0B0 000000B0 000000B0   5965          XC    176(8,13),176(13)
00004054 E3F0 D0B8 0024          000000B8   5966          STG   15,184(0,13)
0000405A 4110 D0B0               000000B0   5967          LA    1,176(0,13)
0000405E E3F0 C012 0004          00003B80   5968          LG    15,@lit_801_227 ; XXH64_round
00004064                                    5969 @@gen_label314 DS    0H
00004064 05EF                               5970          BALR  14,15
00004066                                    5971 @@gen_label315 DS    0H
                                                                                                                           Page  120 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004066 4120 2008               00000008   5972          LA    2,8(0,2)
0000406A B982 003F                          5973          XGR   3,15
0000406E EBF3 001B 000D          0000001B   5974          SLLG  15,3,27(0)
00004074 EB13 0025 000C          00000025   5975          SRLG  1,3,37(0)
0000407A B981 00F1                          5976          OGR   15,1
0000407E E310 C01A 0004          00003B88   5977          LG    1,@lit_801_228
00004084 E330 1070 0004          00000070   5978          LG    3,112(0,1)  ; PRIME64_1
0000408A B90C 00F3                          5979          MSGR  15,3
0000408E E3F0 1088 000A          00000088   5980          ALG   15,136(0,1)
00004094 B904 003F                          5981          LGR   3,15        ; h64
                                            5982 * ***
                                            5983 * ***         case 15: { U64 const k1 = XXH64_round(0, XXH_readLE64_al\
                                            5984 * ign(p, endian, align)); p+=8; h64 ^= k1; h64 = ((h64 << 27) | (h64 >\
                                            5985 * > (64 - 27))) * PRIME64_1 + PRIME64_4; };
00004098                                    5986 @L136    DS    0H
00004098 E320 D0B0 0024          000000B0   5987          STG   2,176(0,13)
0000409E B914 00F4                          5988          LGFR  15,4
000040A2 E3F0 D0B8 0024          000000B8   5989          STG   15,184(0,13)
000040A8 B914 00F5                          5990          LGFR  15,5
000040AC E3F0 D0C0 0024          000000C0   5991          STG   15,192(0,13)
000040B2 4110 D0B0               000000B0   5992          LA    1,176(0,13)
000040B6 E3F0 C00A 0004          00003B78   5993          LG    15,@lit_801_226 ; XXH_readLE64_align
000040BC                                    5994 @@gen_label316 DS    0H
000040BC 05EF                               5995          BALR  14,15
000040BE                                    5996 @@gen_label317 DS    0H
000040BE D707 D0B0 D0B0 000000B0 000000B0   5997          XC    176(8,13),176(13)
000040C4 E3F0 D0B8 0024          000000B8   5998          STG   15,184(0,13)
000040CA 4110 D0B0               000000B0   5999          LA    1,176(0,13)
000040CE E3F0 C012 0004          00003B80   6000          LG    15,@lit_801_227 ; XXH64_round
000040D4                                    6001 @@gen_label318 DS    0H
000040D4 05EF                               6002          BALR  14,15
000040D6                                    6003 @@gen_label319 DS    0H
000040D6 4120 2008               00000008   6004          LA    2,8(0,2)
000040DA B982 003F                          6005          XGR   3,15
000040DE EBF3 001B 000D          0000001B   6006          SLLG  15,3,27(0)
000040E4 EB13 0025 000C          00000025   6007          SRLG  1,3,37(0)
000040EA B981 00F1                          6008          OGR   15,1
000040EE E310 C01A 0004          00003B88   6009          LG    1,@lit_801_228
000040F4 E330 1070 0004          00000070   6010          LG    3,112(0,1)  ; PRIME64_1
000040FA B90C 00F3                          6011          MSGR  15,3
000040FE E3F0 1088 000A          00000088   6012          ALG   15,136(0,1)
00004104 B904 003F                          6013          LGR   3,15        ; h64
                                            6014 * ***
                                            6015 * ***         case  7: h64 ^= (U64)(XXH_readLE32_align(p, endian, alig\
                                            6016 * n)) * PRIME64_1; p+=4; h64 = ((h64 << 23) | (h64 >> (64 - 23))) * PR\
                                            6017 * IME64_2 + PRIME64_3;;
00004108                                    6018 @L137    DS    0H
00004108 E320 D0B0 0024          000000B0   6019          STG   2,176(0,13)
0000410E B914 00F4                          6020          LGFR  15,4
00004112 E3F0 D0B8 0024          000000B8   6021          STG   15,184(0,13)
00004118 B914 00F5                          6022          LGFR  15,5
0000411C E3F0 D0C0 0024          000000C0   6023          STG   15,192(0,13)
                                                                                                                           Page  121 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004122 4110 D0B0               000000B0   6024          LA    1,176(0,13)
00004126 E3F0 C022 0004          00003B90   6025          LG    15,@lit_801_235 ; XXH_readLE32_align
0000412C                                    6026 @@gen_label320 DS    0H
0000412C 05EF                               6027          BALR  14,15
0000412E                                    6028 @@gen_label321 DS    0H
0000412E B916 00FF                          6029          LLGFR 15,15
00004132 E310 C01A 0004          00003B88   6030          LG    1,@lit_801_228
00004138 E340 1070 0004          00000070   6031          LG    4,112(0,1)  ; PRIME64_1
0000413E B90C 00F4                          6032          MSGR  15,4
00004142 B982 003F                          6033          XGR   3,15
00004146 4120 2004               00000004   6034          LA    2,4(0,2)
0000414A EBF3 0017 000D          00000017   6035          SLLG  15,3,23(0)
00004150 EB33 0029 000C          00000029   6036          SRLG  3,3,41(0)
00004156 B981 00F3                          6037          OGR   15,3
0000415A E330 1078 0004          00000078   6038          LG    3,120(0,1)  ; PRIME64_2
00004160 B90C 00F3                          6039          MSGR  15,3
00004164 E3F0 1080 000A          00000080   6040          ALG   15,128(0,1)
0000416A B904 003F                          6041          LGR   3,15        ; h64
                                            6042 * ***
                                            6043 * ***         case  3: h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            6044 *  (h64 >> (64 - 11))) * PRIME64_1;;
0000416E                                    6045 @L138    DS    0H
0000416E B904 00F2                          6046          LGR   15,2
00004172 4120 2001               00000001   6047          LA    2,1(0,2)
00004176 E3F0 F000 0094          00000000   6048          LLC   15,0(0,15)
0000417C B914 00FF                          6049          LGFR  15,15
00004180 E310 C01A 0004          00003B88   6050          LG    1,@lit_801_228
00004186 E340 1090 0004          00000090   6051          LG    4,144(0,1)  ; PRIME64_5
0000418C B90C 00F4                          6052          MSGR  15,4
00004190 B982 003F                          6053          XGR   3,15
00004194 EBF3 000B 000D          0000000B   6054          SLLG  15,3,11(0)
0000419A EB33 0035 000C          00000035   6055          SRLG  3,3,53(0)
000041A0 B981 00F3                          6056          OGR   15,3
000041A4 E310 1070 0004          00000070   6057          LG    1,112(0,1)  ; PRIME64_1
000041AA B90C 00F1                          6058          MSGR  15,1
000041AE B904 003F                          6059          LGR   3,15        ; h64
                                            6060 * ***
                                            6061 * ***         case  2: h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            6062 *  (h64 >> (64 - 11))) * PRIME64_1;;
000041B2                                    6063 @L139    DS    0H
000041B2 B904 00F2                          6064          LGR   15,2
000041B6 4120 2001               00000001   6065          LA    2,1(0,2)
000041BA E3F0 F000 0094          00000000   6066          LLC   15,0(0,15)
000041C0 B914 00FF                          6067          LGFR  15,15
000041C4 E310 C01A 0004          00003B88   6068          LG    1,@lit_801_228
000041CA E340 1090 0004          00000090   6069          LG    4,144(0,1)  ; PRIME64_5
000041D0 B90C 00F4                          6070          MSGR  15,4
000041D4 B982 003F                          6071          XGR   3,15
000041D8 EBF3 000B 000D          0000000B   6072          SLLG  15,3,11(0)
000041DE EB33 0035 000C          00000035   6073          SRLG  3,3,53(0)
000041E4 B981 00F3                          6074          OGR   15,3
000041E8 E310 1070 0004          00000070   6075          LG    1,112(0,1)  ; PRIME64_1
                                                                                                                           Page  122 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000041EE B90C 00F1                          6076          MSGR  15,1
000041F2 B904 003F                          6077          LGR   3,15        ; h64
                                            6078 * ***
                                            6079 * ***         case  1: h64 ^= (*p++) * PRIME64_5; h64 = ((h64 << 11) |\
                                            6080 *  (h64 >> (64 - 11))) * PRIME64_1;;
000041F6                                    6081 @L140    DS    0H
000041F6 E3F0 2000 0094          00000000   6082          LLC   15,0(0,2)
000041FC B914 00FF                          6083          LGFR  15,15
00004200 E310 C01A 0004          00003B88   6084          LG    1,@lit_801_228
00004206 E320 1090 0004          00000090   6085          LG    2,144(0,1)  ; PRIME64_5
0000420C B90C 00F2                          6086          MSGR  15,2
00004210 B982 003F                          6087          XGR   3,15
00004214 EBF3 000B 000D          0000000B   6088          SLLG  15,3,11(0)
0000421A EB23 0035 000C          00000035   6089          SRLG  2,3,53(0)
00004220 B981 00F2                          6090          OGR   15,2
00004224 E310 1070 0004          00000070   6091          LG    1,112(0,1)  ; PRIME64_1
0000422A B90C 00F1                          6092          MSGR  15,1
0000422E B904 003F                          6093          LGR   3,15        ; h64
                                            6094 * ***
                                            6095 * ***         case  0: return XXH64_avalanche(h64);
00004232                                    6096 @L141    DS    0H
00004232 E330 D0B0 0024          000000B0   6097          STG   3,176(0,13)
00004238 4110 D0B0               000000B0   6098          LA    1,176(0,13)
0000423C E3F0 C02A 0004          00003B98   6099          LG    15,@lit_801_237 ; XXH64_avalanche
00004242                                    6100 @@gen_label322 DS    0H
00004242 05EF                               6101          BALR  14,15
00004244                                    6102 @@gen_label323 DS    0H
00004244 47F0 C94A               000044B8   6103          B     @ret_lab_801
                                            6104 * ***       }
00004248                                    6105 @L108    DS    0H
00004248 E3F0 1010 0004          00000010   6106          LG    15,16(0,1)  ; len
0000424E E3F0 C032 0080          00003BA0   6107          NG    15,@lit_801_263
00004254 C2FE 0000 001F                     6108          CLGFI 15,X'0000001F'
0000425A 4720 C90A               00004478   6109          BH    @L109
0000425E 4110 C70A               00004278   6110          LA    1,@@gen_label324
00004262 EBFF 0004 000D          00000004   6111          SLLG  15,15,4(0)
00004268 E3C1 F008 000A          00000008   6112          ALG   12,8(1,15)
0000426E E3F1 F000 0004          00000000   6113          LG    15,0(1,15)
00004274 47FF C000               00000000   6114          B     0(15,12)
00004278                                    6115 @@gen_label324 DS    0D
00004278 00000000000006C4                   6116          DC AD(@L141-@REGION_801_2)
00004280 0000000000000000                   6117          DC AD(@REGION_801_2-@REGION_801_2)
00004288 0000000000000688                   6118          DC AD(@L140-@REGION_801_2)
00004290 0000000000000000                   6119          DC AD(@REGION_801_2-@REGION_801_2)
00004298 0000000000000644                   6120          DC AD(@L139-@REGION_801_2)
000042A0 0000000000000000                   6121          DC AD(@REGION_801_2-@REGION_801_2)
000042A8 0000000000000600                   6122          DC AD(@L138-@REGION_801_2)
000042B0 0000000000000000                   6123          DC AD(@REGION_801_2-@REGION_801_2)
000042B8 0000000000000344                   6124          DC AD(@L116-@REGION_801_1)
000042C0 FFFFFFFFFFFFF6FA                   6125          DC AD(@REGION_801_1-@REGION_801_2)
000042C8 00000000000006A2                   6126          DC AD(@L123-@REGION_801_1)
000042D0 FFFFFFFFFFFFF6FA                   6127          DC AD(@REGION_801_1-@REGION_801_2)
                                                                                                                           Page  123 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000042D8 000000000000019A                   6128          DC AD(@L130-@REGION_801_2)
000042E0 0000000000000000                   6129          DC AD(@REGION_801_2-@REGION_801_2)
000042E8 000000000000059A                   6130          DC AD(@L137-@REGION_801_2)
000042F0 0000000000000000                   6131          DC AD(@REGION_801_2-@REGION_801_2)
000042F8 0000000000000170                   6132          DC AD(@L112-@REGION_801_1)
00004300 FFFFFFFFFFFFF6FA                   6133          DC AD(@REGION_801_1-@REGION_801_2)
00004308 000000000000049E                   6134          DC AD(@L119-@REGION_801_1)
00004310 FFFFFFFFFFFFF6FA                   6135          DC AD(@REGION_801_1-@REGION_801_2)
00004318 000000000000082C                   6136          DC AD(@L126-@REGION_801_1)
00004320 FFFFFFFFFFFFF6FA                   6137          DC AD(@REGION_801_1-@REGION_801_2)
00004328 0000000000000348                   6138          DC AD(@L133-@REGION_801_2)
00004330 0000000000000000                   6139          DC AD(@REGION_801_2-@REGION_801_2)
00004338 00000000000002D4                   6140          DC AD(@L115-@REGION_801_1)
00004340 FFFFFFFFFFFFF6FA                   6141          DC AD(@REGION_801_1-@REGION_801_2)
00004348 0000000000000632                   6142          DC AD(@L122-@REGION_801_1)
00004350 FFFFFFFFFFFFF6FA                   6143          DC AD(@REGION_801_1-@REGION_801_2)
00004358 000000000000012A                   6144          DC AD(@L129-@REGION_801_2)
00004360 0000000000000000                   6145          DC AD(@REGION_801_2-@REGION_801_2)
00004368 000000000000052A                   6146          DC AD(@L136-@REGION_801_2)
00004370 0000000000000000                   6147          DC AD(@REGION_801_2-@REGION_801_2)
00004378 0000000000000100                   6148          DC AD(@L111-@REGION_801_1)
00004380 FFFFFFFFFFFFF6FA                   6149          DC AD(@REGION_801_1-@REGION_801_2)
00004388 000000000000042E                   6150          DC AD(@L118-@REGION_801_1)
00004390 FFFFFFFFFFFFF6FA                   6151          DC AD(@REGION_801_1-@REGION_801_2)
00004398 00000000000007BC                   6152          DC AD(@L125-@REGION_801_1)
000043A0 FFFFFFFFFFFFF6FA                   6153          DC AD(@REGION_801_1-@REGION_801_2)
000043A8 00000000000002D8                   6154          DC AD(@L132-@REGION_801_2)
000043B0 0000000000000000                   6155          DC AD(@REGION_801_2-@REGION_801_2)
000043B8 0000000000000264                   6156          DC AD(@L114-@REGION_801_1)
000043C0 FFFFFFFFFFFFF6FA                   6157          DC AD(@REGION_801_1-@REGION_801_2)
000043C8 00000000000005C2                   6158          DC AD(@L121-@REGION_801_1)
000043D0 FFFFFFFFFFFFF6FA                   6159          DC AD(@REGION_801_1-@REGION_801_2)
000043D8 00000000000000BA                   6160          DC AD(@L128-@REGION_801_2)
000043E0 0000000000000000                   6161          DC AD(@REGION_801_2-@REGION_801_2)
000043E8 00000000000004BA                   6162          DC AD(@L135-@REGION_801_2)
000043F0 0000000000000000                   6163          DC AD(@REGION_801_2-@REGION_801_2)
000043F8 0000000000000090                   6164          DC AD(@L110-@REGION_801_1)
00004400 FFFFFFFFFFFFF6FA                   6165          DC AD(@REGION_801_1-@REGION_801_2)
00004408 00000000000003BE                   6166          DC AD(@L117-@REGION_801_1)
00004410 FFFFFFFFFFFFF6FA                   6167          DC AD(@REGION_801_1-@REGION_801_2)
00004418 000000000000074C                   6168          DC AD(@L124-@REGION_801_1)
00004420 FFFFFFFFFFFFF6FA                   6169          DC AD(@REGION_801_1-@REGION_801_2)
00004428 0000000000000268                   6170          DC AD(@L131-@REGION_801_2)
00004430 0000000000000000                   6171          DC AD(@REGION_801_2-@REGION_801_2)
00004438 00000000000001F4                   6172          DC AD(@L113-@REGION_801_1)
00004440 FFFFFFFFFFFFF6FA                   6173          DC AD(@REGION_801_1-@REGION_801_2)
00004448 0000000000000552                   6174          DC AD(@L120-@REGION_801_1)
00004450 FFFFFFFFFFFFF6FA                   6175          DC AD(@REGION_801_1-@REGION_801_2)
00004458 000000000000004A                   6176          DC AD(@L127-@REGION_801_2)
00004460 0000000000000000                   6177          DC AD(@REGION_801_2-@REGION_801_2)
00004468 000000000000044A                   6178          DC AD(@L134-@REGION_801_2)
00004470 0000000000000000                   6179          DC AD(@REGION_801_2-@REGION_801_2)
                                                                                                                           Page  124 
  Active Usings: @REGION_801_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004478                                    6180 @L109    DS    0H
                                            6181 * ***
                                            6182 * ***
                                            6183 * ***       ((0) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdka\
                                            6184 * fka\\src\\rdxxhash.c", 806, "0"));
00004478 E3F0 C01A 0004          00003B88   6185          LG    15,@lit_801_228
0000447E 41F0 F098               00000098   6186          LA    15,152(0,15)
00004482 E3F0 D0B0 0024          000000B0   6187          STG   15,176(0,13)
00004488 E3F0 C042 0004          00003BB0   6188          LG    15,@lit_801_266
0000448E 4110 F022               00000022   6189          LA    1,34(0,15)
00004492 E310 D0B8 0024          000000B8   6190          STG   1,184(0,13)
00004498 E548 D0C0 0326          000000C0   6191          MVGHI 192(13),806
0000449E 41F0 F048               00000048   6192          LA    15,72(0,15)
000044A2 E3F0 D0C8 0024          000000C8   6193          STG   15,200(0,13)
000044A8 4110 D0B0               000000B0   6194          LA    1,176(0,13)
000044AC E3F0 C03A 0004          00003BA8   6195          LG    15,@lit_801_267 ; __assert
000044B2                                    6196 @@gen_label325 DS    0H
000044B2 05EF                               6197          BALR  14,15
000044B4                                    6198 @@gen_label326 DS    0H
                                            6199 * ***       return 0;
000044B4 A7F9 0000               00000000   6200          LGHI  15,0        ; 0
                                            6201 * ***   }
000044B8                                    6202 @ret_lab_801 DS 0H
                                            6203 * * **** Start of Epilogue
                                            6204          DCCEPIL
000044B8                                    6205+         ds 0h                                                          01-DCCEP
                                            6206+* Epilog
000044B8 D707 D088 D088 00000088 00000088   6207+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000044BE E3D0 D080 0004          00000080   6208+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000044C4 E3C0 D090 0004          00000090   6209+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000044CA E3B0 C018 0004          00000018   6210+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000044D0 E3C0 B010 0021          00000010   6211+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000044D6 E3E0 D008 0004          00000008   6212+         lg  14,8(0,13)          load up return address                 01-DCCEP
000044DC EB1C D020 0004          00000020   6213+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000044E2 078E                               6214+         bcr 8,14                if same dsab, just return              01-DCCEP
000044E4 E3F0 D010 0024          00000010   6215+         stg 15,16(0,13)         save return code                       01-DCCEP
000044EA E300 D018 0024          00000018   6216+         stg 0,24(0,13)          save more return code                  01-DCCEP
000044F0 E3F0 D090 0004          00000090   6217+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000044F6 E3F0 F018 0004          00000018   6218+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000044FC 47F0 F040               00000040   6219+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6220+* End of Epilog
                                            6221 * * **** End of Epilogue
                                            6222          DROP  12
                                            6223 *
                                            6224 *   DSECT for automatic variables in "XXH64_finalize"
                                            6225 *      (FUNCTION #801)
                                            6226 *
00000000                00000000 000000B0   6227 @AUTO#$X$X$H64_finalize DSECT
00000000                                    6228          DS    XL168
000000A8                                    6229 $X$X$H64_finalize#k1#25 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6230          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6231 $X$X$H64_finalize#k1#24 DS 8XL1 ; k1
                                                                                                                           Page  125 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000B0                000000B0 000000A8   6232          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6233 $X$X$H64_finalize#k1#23 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6234          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6235 $X$X$H64_finalize#k1#22 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6236          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6237 $X$X$H64_finalize#k1#21 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6238          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6239 $X$X$H64_finalize#k1#20 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6240          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6241 $X$X$H64_finalize#k1#19 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6242          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6243 $X$X$H64_finalize#k1#18 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6244          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6245 $X$X$H64_finalize#k1#17 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6246          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6247 $X$X$H64_finalize#k1#16 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6248          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6249 $X$X$H64_finalize#k1#15 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6250          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6251 $X$X$H64_finalize#k1#14 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6252          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6253 $X$X$H64_finalize#k1#13 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6254          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6255 $X$X$H64_finalize#k1#12 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6256          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6257 $X$X$H64_finalize#k1#11 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6258          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6259 $X$X$H64_finalize#k1#10 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6260          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6261 $X$X$H64_finalize#k1#9 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6262          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6263 $X$X$H64_finalize#k1#8 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6264          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6265 $X$X$H64_finalize#k1#7 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6266          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6267 $X$X$H64_finalize#k1#6 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6268          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6269 $X$X$H64_finalize#k1#5 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6270          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6271 $X$X$H64_finalize#k1#4 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6272          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6273 $X$X$H64_finalize#k1#3 DS 8XL1 ; k1
000000B0                000000B0 000000A8   6274          ORG   @AUTO#$X$X$H64_finalize+168
000000A8                                    6275 $X$X$H64_finalize#k1#2 DS 8XL1 ; k1
                                            6276 *
00004500                00000000 000059C8   6277 @CODE    CSECT
                                            6278 *
                                            6279 *
                                            6280 *
                                            6281 * ....... start of XXH64_endian_align
00004500                                    6282 @LNAME802 DS   0H
00004500 00000012                           6283          DC    X'00000012'
                                                                                                                           Page  126 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004504 E7E7C8F6F46D8595                   6284          DC    C'XXH64_endian_align'
00004516 00                                 6285          DC    X'00'
                                            6286 $X$X$H64_endian_align DCCPRLG CINDEX=802,BASER=12,FRAME=216,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME802
                                            6287          macro
                                            6288          dccextrn &m
                                            6289          gblc    &$dccext(1000)
                                            6290          gbla    &$dccexti
                                            6291          lcla    &i
                                            6292 &$dccext(&$dccexti+1) setc    '&m'
                                            6293 &i       seta    1
                                            6294 .loop    aif    (&i gt &$dccexti).around
                                            6295          aif    ('&$dccext(&i)' eq '&m').getout
                                            6296 &i       seta    &i+1
                                            6297          ago     .loop
                                            6298 .around  anop
                                            6299 &$dccexti seta &$dccexti+1
                                            6300          extrn  &m
                                            6301 .getout  anop
                                            6302          mend
00004518                                    6303+$eye0110    ds    0d                                                    02-DCCCA
00004518 C4C3C3                             6304+         dc cl3'DCC'                                                    02-DCCCA
0000451B 01                                 6305+         dc xl1'01' format one                                          02-DCCCA
0000451C 00000000                           6306+         dc a(0)                                                        02-DCCCA
00004520 000000000000458A                   6307+         dc ad(@PER_802)                                                02-DCCCA
00004528 00000000000000D8                   6308+         dc ad(216)                                                     02-DCCCA
00004530 0000000000000000                   6309+         dc ad(0)                                                       02-DCCCA
00004538 0000000000001000                   6310+         dc ad(4096)                                                    02-DCCCA
00004540 20                                 6311+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004541 03                                 6312+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004542 03                                 6313+         dc al1(3)                                                      02-DCCCA
00004543 08                                 6314+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004544 00                                 6315+         dc bl.8'00000000'                                              02-DCCCA
00004545 000000                             6316+         dc al3(0)                                                      02-DCCCA
00004548 0000000000004500                   6317+         dc ad(@LNAME802)                                               02-DCCCA
00004550                                    6318+         ds 0d                                                          02-DCCCA
00004550 0000000000004518                   6319+         dc ad($eye0110)                                                02-DCCCA
00004558 0000000000000000                   6320+         dc ad(0)                                                       02-DCCCA
00004560                                    6321+         ds    0d                                                       01-DCCPR
00004560                                    6322+$X$X$H64_endian_align ds 0d                                             01-DCCPR
00004560                                    6323+@REGION_802_1 ds 0h                                                     01-DCCPR
00004560 EBEC D008 0024          00000008   6324+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004566 E3E0 D088 0004          00000088   6325+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000456C E3C0 D090 0004          00000090   6326+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004572 B904 002E                          6327+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004576 E3B0 C018 0004          00000018   6328+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000457C A7EB 00D8               000000D8   6329+         aghi  14,216              increase by frame size               01-DCCPR
00004580 E3E0 C020 0021          00000020   6330+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004586 4720 B020               00000020   6331+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000458A                                    6332+@PER_802 ds    0h                                                       01-DCCPR
0000458A EBDE 2080 0024          00000080   6333+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004590 E3C0 2090 0024          00000090   6334+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page  127 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004596 B904 00D2                          6335+         lgr   13,2                set real frame pointer               01-DCCPR
0000459A B904 00CF                          6336+         lgr   12,15               set base reg                         01-DCCPR
                        00004560            6337+         using @REGION_802_1,12                                         01-DCCPR
                                            6338 * ******* End of Prologue
                                            6339 * *
                                            6340 * ***       const BYTE* p = (const BYTE*)input;
0000459E E370 1008 0004          00000008   6341          LG    7,8(0,1)    ; len
000045A4 E350 1010 0004          00000010   6342          LG    5,16(0,1)   ; seed
000045AA 5880 101C               0000001C   6343          L     8,28(0,1)   ; endian
000045AE 5890 1024               00000024   6344          L     9,36(0,1)   ; align
000045B2 E320 1000 0004          00000000   6345          LG    2,0(0,1)    ; input
                                            6346 * ***       const BYTE* bEnd = p + len;
000045B8 41F7 2000               00000000   6347          LA    15,0(7,2)
                                            6348 * ***       U64 h64;
                                            6349 * ***
                                            6350 * ***
                                            6351 * ***   # 825 "C:\asgkafka\librdkafka\src\rdxxhash.c"
                                            6352 * ***       if (len>=32) {
000045BC C27E 0000 0020                     6353          CLGFI 7,X'00000020'
000045C2 4740 C298               000047F8   6354          BL    @L142
                                            6355 * ***           const BYTE* const limit = bEnd - 32;
000045C6 A719 FFE0               0000FFE0   6356          LGHI  1,-32       ; -32
000045CA 41A1 F000               00000000   6357          LA    10,0(1,15)
                                            6358 * ***           U64 v1 = seed + PRIME64_1 + PRIME64_2;
000045CE E3F0 C270 0004          000047D0   6359          LG    15,@lit_802_277
000045D4 B904 0035                          6360          LGR   3,5
000045D8 E330 F070 000A          00000070   6361          ALG   3,112(0,15)
000045DE E330 F078 000A          00000078   6362          ALG   3,120(0,15)
                                            6363 * ***           U64 v2 = seed + PRIME64_2;
000045E4 B904 0045                          6364          LGR   4,5
000045E8 E340 F078 000A          00000078   6365          ALG   4,120(0,15)
                                            6366 * ***           U64 v3 = seed + 0;
                                            6367 * ***           U64 v4 = seed - PRIME64_1;
000045EE B904 0065                          6368          LGR   6,5
000045F2 E360 F070 000B          00000070   6369          SLG   6,112(0,15)
                                            6370 * ***
                                            6371 * ***           do {
000045F8                                    6372 @L143    DS    0H
                                            6373 * ***               v1 = XXH64_round(v1, XXH_readLE64_align(p, endian,\
                                            6374 *  align)); p+=8;
000045F8 E320 D0B0 0024          000000B0   6375          STG   2,176(0,13)
000045FE B914 00F8                          6376          LGFR  15,8
00004602 E3F0 D0B8 0024          000000B8   6377          STG   15,184(0,13)
00004608 B914 00F9                          6378          LGFR  15,9
0000460C E3F0 D0C0 0024          000000C0   6379          STG   15,192(0,13)
00004612 4110 D0B0               000000B0   6380          LA    1,176(0,13)
00004616 E3B0 C278 0004          000047D8   6381          LG    11,@lit_802_278 ; XXH_readLE64_align
0000461C B904 00FB                          6382          LGR   15,11
00004620                                    6383 @@gen_label328 DS    0H
00004620 05EF                               6384          BALR  14,15
00004622                                    6385 @@gen_label329 DS    0H
00004622 E330 D0B0 0024          000000B0   6386          STG   3,176(0,13)
                                                                                                                           Page  128 
  Active Usings: @REGION_802_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004628 E3F0 D0B8 0024          000000B8   6387          STG   15,184(0,13)
0000462E 4110 D0B0               000000B0   6388          LA    1,176(0,13)
00004632 E3F0 C280 0004          000047E0   6389          LG    15,@lit_802_292 ; XXH64_round
00004638                                    6390 @@gen_label330 DS    0H
00004638 05EF                               6391          BALR  14,15
0000463A                                    6392 @@gen_label331 DS    0H
0000463A B904 003F                          6393          LGR   3,15        ; v1
0000463E 4120 2008               00000008   6394          LA    2,8(0,2)
                                            6395 * ***               v2 = XXH64_round(v2, XXH_readLE64_align(p, endian,\
                                            6396 *  align)); p+=8;
00004642 E320 D0B0 0024          000000B0   6397          STG   2,176(0,13)
00004648 B914 00F8                          6398          LGFR  15,8
0000464C E3F0 D0B8 0024          000000B8   6399          STG   15,184(0,13)
00004652 B914 00F9                          6400          LGFR  15,9
00004656 E3F0 D0C0 0024          000000C0   6401          STG   15,192(0,13)
0000465C 4110 D0B0               000000B0   6402          LA    1,176(0,13)
00004660 B904 00FB                          6403          LGR   15,11
00004664                                    6404 @@gen_label332 DS    0H
00004664 05EF                               6405          BALR  14,15
00004666                                    6406 @@gen_label333 DS    0H
00004666 E340 D0B0 0024          000000B0   6407          STG   4,176(0,13)
0000466C E3F0 D0B8 0024          000000B8   6408          STG   15,184(0,13)
00004672 4110 D0B0               000000B0   6409          LA    1,176(0,13)
00004676 E3F0 C280 0004          000047E0   6410          LG    15,@lit_802_292 ; XXH64_round
0000467C                                    6411 @@gen_label334 DS    0H
0000467C 05EF                               6412          BALR  14,15
0000467E                                    6413 @@gen_label335 DS    0H
0000467E B904 004F                          6414          LGR   4,15        ; v2
00004682 4120 2008               00000008   6415          LA    2,8(0,2)
                                            6416 * ***               v3 = XXH64_round(v3, XXH_readLE64_align(p, endian,\
                                            6417 *  align)); p+=8;
00004686 E320 D0B0 0024          000000B0   6418          STG   2,176(0,13)
0000468C B914 00F8                          6419          LGFR  15,8
00004690 E3F0 D0B8 0024          000000B8   6420          STG   15,184(0,13)
00004696 B914 00F9                          6421          LGFR  15,9
0000469A E3F0 D0C0 0024          000000C0   6422          STG   15,192(0,13)
000046A0 4110 D0B0               000000B0   6423          LA    1,176(0,13)
000046A4 B904 00FB                          6424          LGR   15,11
000046A8                                    6425 @@gen_label336 DS    0H
000046A8 05EF                               6426          BALR  14,15
000046AA                                    6427 @@gen_label337 DS    0H
000046AA E350 D0B0 0024          000000B0   6428          STG   5,176(0,13)
000046B0 E3F0 D0B8 0024          000000B8   6429          STG   15,184(0,13)
000046B6 4110 D0B0               000000B0   6430          LA    1,176(0,13)
000046BA E3F0 C280 0004          000047E0   6431          LG    15,@lit_802_292 ; XXH64_round
000046C0                                    6432 @@gen_label338 DS    0H
000046C0 05EF                               6433          BALR  14,15
000046C2                                    6434 @@gen_label339 DS    0H
000046C2 B904 005F                          6435          LGR   5,15        ; v3
000046C6 4120 2008               00000008   6436          LA    2,8(0,2)
                                            6437 * ***               v4 = XXH64_round(v4, XXH_readLE64_align(p, endian,\
                                            6438 *  align)); p+=8;
                                                                                                                           Page  129 
  Active Usings: @REGION_802_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000046CA E320 D0B0 0024          000000B0   6439          STG   2,176(0,13)
000046D0 B914 00F8                          6440          LGFR  15,8
000046D4 E3F0 D0B8 0024          000000B8   6441          STG   15,184(0,13)
000046DA B914 00F9                          6442          LGFR  15,9
000046DE E3F0 D0C0 0024          000000C0   6443          STG   15,192(0,13)
000046E4 4110 D0B0               000000B0   6444          LA    1,176(0,13)
000046E8 B904 00FB                          6445          LGR   15,11
000046EC                                    6446 @@gen_label340 DS    0H
000046EC 05EF                               6447          BALR  14,15
000046EE                                    6448 @@gen_label341 DS    0H
000046EE E360 D0B0 0024          000000B0   6449          STG   6,176(0,13)
000046F4 E3F0 D0B8 0024          000000B8   6450          STG   15,184(0,13)
000046FA 4110 D0B0               000000B0   6451          LA    1,176(0,13)
000046FE E3F0 C280 0004          000047E0   6452          LG    15,@lit_802_292 ; XXH64_round
00004704                                    6453 @@gen_label342 DS    0H
00004704 05EF                               6454          BALR  14,15
00004706                                    6455 @@gen_label343 DS    0H
00004706 B904 006F                          6456          LGR   6,15        ; v4
0000470A 4120 2008               00000008   6457          LA    2,8(0,2)
                                            6458 * ***           } while (p<=limit);
0000470E B920 002A                          6459          CGR   2,10
00004712 47D0 C098               000045F8   6460          BNH   @L143
                                            6461 * ***
                                            6462 * ***           h64 = ((v1 << 1) | (v1 >> (64 - 1))) + ((v2 << 7) | (v\
                                            6463 * 2 >> (64 - 7))) + ((v3 << 12) | (v3 >> (64 - 12))) + ((v4 << 18) | (\
                                            6464 * v4 >> (64 - 18)));
00004716 EBF3 0001 000D          00000001   6465          SLLG  15,3,1(0)
0000471C EB13 003F 000C          0000003F   6466          SRLG  1,3,63(0)
00004722 B981 00F1                          6467          OGR   15,1
00004726 EB14 0007 000D          00000007   6468          SLLG  1,4,7(0)
0000472C EBA4 0039 000C          00000039   6469          SRLG  10,4,57(0)
00004732 B981 001A                          6470          OGR   1,10
00004736 B90A 00F1                          6471          ALGR  15,1
0000473A EB15 000C 000D          0000000C   6472          SLLG  1,5,12(0)
00004740 EBA5 0034 000C          00000034   6473          SRLG  10,5,52(0)
00004746 B981 001A                          6474          OGR   1,10
0000474A B90A 00F1                          6475          ALGR  15,1
0000474E EB16 0012 000D          00000012   6476          SLLG  1,6,18(0)
00004754 EBA6 002E 000C          0000002E   6477          SRLG  10,6,46(0)
0000475A B981 001A                          6478          OGR   1,10
0000475E B90A 00F1                          6479          ALGR  15,1
                                            6480 * ***           h64 = XXH64_mergeRound(h64, v1);
00004762 E3F0 D0B0 0024          000000B0   6481          STG   15,176(0,13)
00004768 E330 D0B8 0024          000000B8   6482          STG   3,184(0,13)
0000476E 4110 D0B0               000000B0   6483          LA    1,176(0,13)
00004772 E330 C288 0004          000047E8   6484          LG    3,@lit_802_286 ; XXH64_mergeRound
00004778 B904 00F3                          6485          LGR   15,3
0000477C                                    6486 @@gen_label345 DS    0H
0000477C 05EF                               6487          BALR  14,15
0000477E                                    6488 @@gen_label346 DS    0H
                                            6489 * ***           h64 = XXH64_mergeRound(h64, v2);
0000477E E3F0 D0B0 0024          000000B0   6490          STG   15,176(0,13)
                                                                                                                           Page  130 
  Active Usings: @REGION_802_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004784 E340 D0B8 0024          000000B8   6491          STG   4,184(0,13)
0000478A 4110 D0B0               000000B0   6492          LA    1,176(0,13)
0000478E B904 00F3                          6493          LGR   15,3
00004792                                    6494 @@gen_label347 DS    0H
00004792 05EF                               6495          BALR  14,15
00004794                                    6496 @@gen_label348 DS    0H
                                            6497 * ***           h64 = XXH64_mergeRound(h64, v3);
00004794 E3F0 D0B0 0024          000000B0   6498          STG   15,176(0,13)
0000479A E350 D0B8 0024          000000B8   6499          STG   5,184(0,13)
000047A0 4110 D0B0               000000B0   6500          LA    1,176(0,13)
000047A4 B904 00F3                          6501          LGR   15,3
000047A8                                    6502 @@gen_label349 DS    0H
000047A8 05EF                               6503          BALR  14,15
000047AA                                    6504 @@gen_label350 DS    0H
                                            6505 * ***           h64 = XXH64_mergeRound(h64, v4);
000047AA E3F0 D0B0 0024          000000B0   6506          STG   15,176(0,13)
000047B0 E360 D0B8 0024          000000B8   6507          STG   6,184(0,13)
000047B6 4110 D0B0               000000B0   6508          LA    1,176(0,13)
000047BA B904 00F3                          6509          LGR   15,3
000047BE                                    6510 @@gen_label351 DS    0H
000047BE 05EF                               6511          BALR  14,15
000047C0                                    6512 @@gen_label352 DS    0H
                                            6513 * ***
                                            6514 * ***       } else {
000047C0 47F0 C2A8               00004808   6515          B     @L146
000047C8                                    6516          DS    0D
000047C8 000000D8                           6517 @FRAMESIZE_802 DC F'216'
000047CC 00000000
000047D0 00000000000059C8                   6518 @lit_802_277 DC AD(@DATA)
000047D8 0000000000002BB0                   6519 @lit_802_278 DC AD($X$X$H_read$L$E64_align)
000047E0 0000000000002FA8                   6520 @lit_802_292 DC AD($X$X$H64_round)
000047E8 0000000000003068                   6521 @lit_802_286 DC AD($X$X$H64_merge$Round)
000047F0 0000000000003268                   6522 @lit_802_291 DC AD($X$X$H64_finalize)
000047F8                                    6523 @L142    DS    0H
                                            6524 * ***           h64  = seed + PRIME64_5;
000047F8 E3F0 C270 0004          000047D0   6525          LG    15,@lit_802_277
000047FE E350 F090 000A          00000090   6526          ALG   5,144(0,15)
00004804 B904 00F5                          6527          LGR   15,5        ; h64
                                            6528 * ***       }
00004808                                    6529 @L146    DS    0H
                                            6530 * ***
                                            6531 * ***       h64 += (U64) len;
00004808 B90A 00F7                          6532          ALGR  15,7
                                            6533 * ***
                                            6534 * ***       return XXH64_finalize(h64, p, len, endian, align);
0000480C E3F0 D0B0 0024          000000B0   6535          STG   15,176(0,13)
00004812 E320 D0B8 0024          000000B8   6536          STG   2,184(0,13)
00004818 E370 D0C0 0024          000000C0   6537          STG   7,192(0,13)
0000481E B914 00F8                          6538          LGFR  15,8
00004822 E3F0 D0C8 0024          000000C8   6539          STG   15,200(0,13)
00004828 B914 00F9                          6540          LGFR  15,9
0000482C E3F0 D0D0 0024          000000D0   6541          STG   15,208(0,13)
                                                                                                                           Page  131 
  Active Usings: @REGION_802_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004832 4110 D0B0               000000B0   6542          LA    1,176(0,13)
00004836 E3F0 C290 0004          000047F0   6543          LG    15,@lit_802_291 ; XXH64_finalize
0000483C                                    6544 @@gen_label353 DS    0H
0000483C 05EF                               6545          BALR  14,15
0000483E                                    6546 @@gen_label354 DS    0H
                                            6547 * ***   }
                                            6548 * * **** Start of Epilogue
                                            6549          DCCEPIL
0000483E                                    6550+         ds 0h                                                          01-DCCEP
                                            6551+* Epilog
0000483E D707 D088 D088 00000088 00000088   6552+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004844 E3D0 D080 0004          00000080   6553+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000484A E3C0 D090 0004          00000090   6554+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004850 E3B0 C018 0004          00000018   6555+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004856 E3C0 B010 0021          00000010   6556+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000485C E3E0 D008 0004          00000008   6557+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004862 EB1C D020 0004          00000020   6558+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004868 078E                               6559+         bcr 8,14                if same dsab, just return              01-DCCEP
0000486A E3F0 D010 0024          00000010   6560+         stg 15,16(0,13)         save return code                       01-DCCEP
00004870 E300 D018 0024          00000018   6561+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004876 E3F0 D090 0004          00000090   6562+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000487C E3F0 F018 0004          00000018   6563+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004882 47F0 F040               00000040   6564+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6565+* End of Epilog
                                            6566 * * **** End of Epilogue
                                            6567          DROP  12
                                            6568 *
                                            6569 *   DSECT for automatic variables in "XXH64_endian_align"
                                            6570 *      (FUNCTION #802)
                                            6571 *
00000000                00000000 000000B0   6572 @AUTO#$X$X$H64_endian_align DSECT
00000000                                    6573          DS    XL168
000000A8                                    6574 $X$X$H64_endian_align#v4#1 DS 8XL1 ; v4
000000B0                000000B0 000000A8   6575          ORG   @AUTO#$X$X$H64_endian_align+168
000000A8                                    6576 $X$X$H64_endian_align#v3#1 DS 8XL1 ; v3
000000B0                000000B0 000000A8   6577          ORG   @AUTO#$X$X$H64_endian_align+168
000000A8                                    6578 $X$X$H64_endian_align#v2#1 DS 8XL1 ; v2
000000B0                000000B0 000000A8   6579          ORG   @AUTO#$X$X$H64_endian_align+168
000000A8                                    6580 $X$X$H64_endian_align#v1#1 DS 8XL1 ; v1
000000B0                000000B0 000000A8   6581          ORG   @AUTO#$X$X$H64_endian_align+168
000000A8                                    6582 $X$X$H64_endian_align#h64#0 DS 8XL1 ; h64
                                            6583 *
00004886                00000000 000059C8   6584 @CODE    CSECT
                                            6585 *
                                            6586 *
                                            6587 *
                                            6588 * ....... start of XXH64
                                            6589 $X$X$H64 ALIAS C'XXH64'
00004886                                    6590 @LNAME772 DS   0H
00004886 00000005                           6591          DC    X'00000005'
0000488A E7E7C8F6F4                         6592          DC    C'XXH64'
0000488F 00                                 6593          DC    X'00'
                                                                                                                           Page  132 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6594 $X$X$H64 DCCPRLG CINDEX=772,BASER=12,FRAME=216,ENTRY=YES,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME772
                                            6595          macro
                                            6596          dccextrn &m
                                            6597          gblc    &$dccext(1000)
                                            6598          gbla    &$dccexti
                                            6599          lcla    &i
                                            6600 &$dccext(&$dccexti+1) setc    '&m'
                                            6601 &i       seta    1
                                            6602 .loop    aif    (&i gt &$dccexti).around
                                            6603          aif    ('&$dccext(&i)' eq '&m').getout
                                            6604 &i       seta    &i+1
                                            6605          ago     .loop
                                            6606 .around  anop
                                            6607 &$dccexti seta &$dccexti+1
                                            6608          extrn  &m
                                            6609 .getout  anop
                                            6610          mend
00004890                                    6611+$eye0113    ds    0d                                                    02-DCCCA
00004890 C4C3C3                             6612+         dc cl3'DCC'                                                    02-DCCCA
00004893 01                                 6613+         dc xl1'01' format one                                          02-DCCCA
00004894 00000000                           6614+         dc a(0)                                                        02-DCCCA
00004898 0000000000004902                   6615+         dc ad(@PER_772)                                                02-DCCCA
000048A0 00000000000000D8                   6616+         dc ad(216)                                                     02-DCCCA
000048A8 0000000000000000                   6617+         dc ad(0)                                                       02-DCCCA
000048B0 0000000000001000                   6618+         dc ad(4096)                                                    02-DCCCA
000048B8 20                                 6619+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000048B9 03                                 6620+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000048BA 03                                 6621+         dc al1(3)                                                      02-DCCCA
000048BB 08                                 6622+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000048BC 00                                 6623+         dc bl.8'00000000'                                              02-DCCCA
000048BD 000000                             6624+         dc al3(0)                                                      02-DCCCA
000048C0 0000000000004886                   6625+         dc ad(@LNAME772)                                               02-DCCCA
000048C8                                    6626+         ds 0d                                                          02-DCCCA
000048C8 0000000000004890                   6627+         dc ad($eye0113)                                                02-DCCCA
000048D0 0000000000000000                   6628+         dc ad(0)                                                       02-DCCCA
000048D8                                    6629+         ds    0d                                                       01-DCCPR
                                            6630+         entry $X$X$H64                                                 01-DCCPR
000048D8                                    6631+$X$X$H64 ds    0d                                                       01-DCCPR
000048D8                                    6632+@REGION_772_1 ds 0h                                                     01-DCCPR
000048D8 EBEC D008 0024          00000008   6633+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000048DE E3E0 D088 0004          00000088   6634+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000048E4 E3C0 D090 0004          00000090   6635+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000048EA B904 002E                          6636+         lgr   2,14                copy addr of our savearea            01-DCCPR
000048EE E3B0 C018 0004          00000018   6637+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000048F4 A7EB 00D8               000000D8   6638+         aghi  14,216              increase by frame size               01-DCCPR
000048F8 E3E0 C020 0021          00000020   6639+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000048FE 4720 B020               00000020   6640+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004902                                    6641+@PER_772 ds    0h                                                       01-DCCPR
00004902 EBDE 2080 0024          00000080   6642+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004908 E3C0 2090 0024          00000090   6643+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000490E B904 00D2                          6644+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page  133 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004912 B904 00CF                          6645+         lgr   12,15               set base reg                         01-DCCPR
                        000048D8            6646+         using @REGION_772_1,12                                         01-DCCPR
                                            6647 * ******* End of Prologue
                                            6648 * *
00004916 EB24 1000 0004          00000000   6649          LMG   2,4,0(1)    ; input
                                            6650 * ***   # 864 "C:\asgkafka\librdkafka\src\rdxxhash.c"
                                            6651 * ***       XXH_endianess endian_detected = (XXH_endianess)XXH_isLittl\
                                            6652 * eEndian();
0000491C E3F0 C090 0004          00004968   6653          LG    15,@lit_772_297 ; XXH_isLittleEndian
00004922                                    6654 @@gen_label355 DS    0H
00004922 05EF                               6655          BALR  14,15
00004924                                    6656 @@gen_label356 DS    0H
                                            6657 * ***
                                            6658 * ***       if (1) {
                                            6659 * ***           if ((((size_t)input) & 7)==0) {
00004924 B904 0012                          6660          LGR   1,2
00004928 E310 C098 0080          00004970   6661          NG    1,@lit_772_298
0000492E B902 0011                          6662          LTGR  1,1
00004932 4770 C0C4               0000499C   6663          BNE   @L147
                                            6664 * ***               if ((endian_detected==XXH_littleEndian) || 0)
00004936 A7FE 0001               00000001   6665          CHI   15,1
0000493A 4770 C0A8               00004980   6666          BNE   @L149
0000493E                                    6667 @L150    DS    0H
                                            6668 * ***                   return XXH64_endian_align(input, len, seed, XX\
                                            6669 * H_littleEndian, XXH_aligned);
0000493E EB24 D0B0 0024          000000B0   6670          STMG  2,4,176(13)
00004944 E548 D0C8 0001          000000C8   6671          MVGHI 200(13),1
0000494A D707 D0D0 D0D0 000000D0 000000D0   6672          XC    208(8,13),208(13)
00004950 4110 D0B0               000000B0   6673          LA    1,176(0,13)
00004954 E3F0 C0A0 0004          00004978   6674          LG    15,@lit_772_299 ; XXH64_endian_align
0000495A                                    6675 @@gen_label359 DS    0H
0000495A 05EF                               6676          BALR  14,15
0000495C                                    6677 @@gen_label360 DS    0H
0000495C 47F0 C10C               000049E4   6678          B     @ret_lab_772
00004960                                    6679          DS    0D
00004960 000000D8                           6680 @FRAMESIZE_772 DC F'216'
00004964 00000000
00004968 0000000000000748                   6681 @lit_772_297 DC AD($X$X$H_is$Little$Endian)
00004970 0000000000000007                   6682 @lit_772_298 DC FD'7' 0x0000000000000007
00004978 0000000000004560                   6683 @lit_772_299 DC AD($X$X$H64_endian_align)
                                            6684 * ***               else
00004980                                    6685 @L149    DS    0H
                                            6686 * ***                   return XXH64_endian_align(input, len, seed, XX\
                                            6687 * H_bigEndian, XXH_aligned);
00004980 EB24 D0B0 0024          000000B0   6688          STMG  2,4,176(13)
00004986 D70F D0C8 D0C8 000000C8 000000C8   6689          XC    200(16,13),200(13)
0000498C 4110 D0B0               000000B0   6690          LA    1,176(0,13)
00004990 E3F0 C0A0 0004          00004978   6691          LG    15,@lit_772_299 ; XXH64_endian_align
00004996                                    6692 @@gen_label361 DS    0H
00004996 05EF                               6693          BALR  14,15
00004998                                    6694 @@gen_label362 DS    0H
00004998 47F0 C10C               000049E4   6695          B     @ret_lab_772
                                                                                                                           Page  134 
  Active Usings: @REGION_772_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6696 * ***       }   }
0000499C                                    6697 @L147    DS    0H
                                            6698 * ***
                                            6699 * ***       if ((endian_detected==XXH_littleEndian) || 0)
0000499C A7FE 0001               00000001   6700          CHI   15,1
000049A0 4770 C0EE               000049C6   6701          BNE   @L152
000049A4                                    6702 @L153    DS    0H
                                            6703 * ***           return XXH64_endian_align(input, len, seed, XXH_little\
                                            6704 * Endian, XXH_unaligned);
000049A4 EB24 D0B0 0024          000000B0   6705          STMG  2,4,176(13)
000049AA E548 D0C8 0001          000000C8   6706          MVGHI 200(13),1
000049B0 E548 D0D0 0001          000000D0   6707          MVGHI 208(13),1
000049B6 4110 D0B0               000000B0   6708          LA    1,176(0,13)
000049BA E3F0 C0A0 0004          00004978   6709          LG    15,@lit_772_299 ; XXH64_endian_align
000049C0                                    6710 @@gen_label364 DS    0H
000049C0 05EF                               6711          BALR  14,15
000049C2                                    6712 @@gen_label365 DS    0H
000049C2 47F0 C10C               000049E4   6713          B     @ret_lab_772
                                            6714 * ***       else
000049C6                                    6715 @L152    DS    0H
                                            6716 * ***           return XXH64_endian_align(input, len, seed, XXH_bigEnd\
                                            6717 * ian, XXH_unaligned);
000049C6 EB24 D0B0 0024          000000B0   6718          STMG  2,4,176(13)
000049CC D707 D0C8 D0C8 000000C8 000000C8   6719          XC    200(8,13),200(13)
000049D2 E548 D0D0 0001          000000D0   6720          MVGHI 208(13),1
000049D8 4110 D0B0               000000B0   6721          LA    1,176(0,13)
000049DC E3F0 C0A0 0004          00004978   6722          LG    15,@lit_772_299 ; XXH64_endian_align
000049E2                                    6723 @@gen_label366 DS    0H
000049E2 05EF                               6724          BALR  14,15
000049E4                                    6725 @@gen_label367 DS    0H
                                            6726 * ***
                                            6727 * ***   }
000049E4                                    6728 @ret_lab_772 DS 0H
                                            6729 * * **** Start of Epilogue
                                            6730          DCCEPIL
000049E4                                    6731+         ds 0h                                                          01-DCCEP
                                            6732+* Epilog
000049E4 D707 D088 D088 00000088 00000088   6733+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000049EA E3D0 D080 0004          00000080   6734+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000049F0 E3C0 D090 0004          00000090   6735+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000049F6 E3B0 C018 0004          00000018   6736+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000049FC E3C0 B010 0021          00000010   6737+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004A02 E3E0 D008 0004          00000008   6738+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004A08 EB1C D020 0004          00000020   6739+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004A0E 078E                               6740+         bcr 8,14                if same dsab, just return              01-DCCEP
00004A10 E3F0 D010 0024          00000010   6741+         stg 15,16(0,13)         save return code                       01-DCCEP
00004A16 E300 D018 0024          00000018   6742+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004A1C E3F0 D090 0004          00000090   6743+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004A22 E3F0 F018 0004          00000018   6744+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004A28 47F0 F040               00000040   6745+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6746+* End of Epilog
                                            6747 * * **** End of Epilogue
                                                                                                                           Page  135 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6748          DROP  12
                                            6749 *
                                            6750 *   DSECT for automatic variables in "XXH64"
                                            6751 *      (FUNCTION #772)
                                            6752 *
00000000                00000000 000000AC   6753 @AUTO#$X$X$H64 DSECT
00000000                                    6754          DS    XL168
000000A8                                    6755 $X$X$H64#endian_detected#0 DS 1F ; endian_detected
                                            6756 *
00004A2C                00000000 000059C8   6757 @CODE    CSECT
                                            6758 *
                                            6759 *
                                            6760 *
                                            6761 * ....... start of XXH64_createState
                                            6762 $X$X$H64_create$State ALIAS X'E7E7C8F6F46D83998581A385E2A381A385'
00004A2C                                    6763 @LNAME773 DS   0H
00004A2C 00000011                           6764          DC    X'00000011'
00004A30 E7E7C8F6F46D8399                   6765          DC    C'XXH64_createState'
00004A41 00                                 6766          DC    X'00'
                                            6767 $X$X$H64_create$State DCCPRLG CINDEX=773,BASER=12,FRAME=176,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME773
                                            6768          macro
                                            6769          dccextrn &m
                                            6770          gblc    &$dccext(1000)
                                            6771          gbla    &$dccexti
                                            6772          lcla    &i
                                            6773 &$dccext(&$dccexti+1) setc    '&m'
                                            6774 &i       seta    1
                                            6775 .loop    aif    (&i gt &$dccexti).around
                                            6776          aif    ('&$dccext(&i)' eq '&m').getout
                                            6777 &i       seta    &i+1
                                            6778          ago     .loop
                                            6779 .around  anop
                                            6780 &$dccexti seta &$dccexti+1
                                            6781          extrn  &m
                                            6782 .getout  anop
                                            6783          mend
00004A48                                    6784+$eye0116    ds    0d                                                    02-DCCCA
00004A48 C4C3C3                             6785+         dc cl3'DCC'                                                    02-DCCCA
00004A4B 01                                 6786+         dc xl1'01' format one                                          02-DCCCA
00004A4C 00000000                           6787+         dc a(0)                                                        02-DCCCA
00004A50 0000000000004ABA                   6788+         dc ad(@PER_773)                                                02-DCCCA
00004A58 00000000000000B0                   6789+         dc ad(176)                                                     02-DCCCA
00004A60 0000000000000000                   6790+         dc ad(0)                                                       02-DCCCA
00004A68 0000000000001000                   6791+         dc ad(4096)                                                    02-DCCCA
00004A70 20                                 6792+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004A71 03                                 6793+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004A72 03                                 6794+         dc al1(3)                                                      02-DCCCA
00004A73 08                                 6795+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004A74 00                                 6796+         dc bl.8'00000000'                                              02-DCCCA
00004A75 000000                             6797+         dc al3(0)                                                      02-DCCCA
00004A78 0000000000004A2C                   6798+         dc ad(@LNAME773)                                               02-DCCCA
                                                                                                                           Page  136 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004A80                                    6799+         ds 0d                                                          02-DCCCA
00004A80 0000000000004A48                   6800+         dc ad($eye0116)                                                02-DCCCA
00004A88 0000000000000000                   6801+         dc ad(0)                                                       02-DCCCA
00004A90                                    6802+         ds    0d                                                       01-DCCPR
                                            6803+         entry $X$X$H64_create$State                                    01-DCCPR
00004A90                                    6804+$X$X$H64_create$State ds 0d                                             01-DCCPR
00004A90                                    6805+@REGION_773_1 ds 0h                                                     01-DCCPR
00004A90 EBEC D008 0024          00000008   6806+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004A96 E3E0 D088 0004          00000088   6807+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004A9C E3C0 D090 0004          00000090   6808+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004AA2 B904 002E                          6809+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004AA6 E3B0 C018 0004          00000018   6810+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004AAC A7EB 00B0               000000B0   6811+         aghi  14,176              increase by frame size               01-DCCPR
00004AB0 E3E0 C020 0021          00000020   6812+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004AB6 4720 B020               00000020   6813+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004ABA                                    6814+@PER_773 ds    0h                                                       01-DCCPR
00004ABA EBDE 2080 0024          00000080   6815+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004AC0 E3C0 2090 0024          00000090   6816+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004AC6 B904 00D2                          6817+         lgr   13,2                set real frame pointer               01-DCCPR
00004ACA B904 00CF                          6818+         lgr   12,15               set base reg                         01-DCCPR
                        00004A90            6819+         using @REGION_773_1,12                                         01-DCCPR
                                            6820 * ******* End of Prologue
                                            6821 * *
                                            6822 * ***       return (XXH64_state_t*)XXH_malloc(sizeof(XXH64_state_t));
00004ACE E548 D0A8 0058          000000A8   6823          MVGHI 168(13),88
00004AD4 4110 D0A8               000000A8   6824          LA    1,168(0,13)
00004AD8 E3F0 C0A0 0004          00004B30   6825          LG    15,@lit_773_304 ; XXH_malloc
00004ADE                                    6826 @@gen_label368 DS    0H
00004ADE 05EF                               6827          BALR  14,15
00004AE0                                    6828 @@gen_label369 DS    0H
                                            6829 * ***   }
                                            6830 * * **** Start of Epilogue
                                            6831          DCCEPIL
00004AE0                                    6832+         ds 0h                                                          01-DCCEP
                                            6833+* Epilog
00004AE0 D707 D088 D088 00000088 00000088   6834+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004AE6 E3D0 D080 0004          00000080   6835+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004AEC E3C0 D090 0004          00000090   6836+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004AF2 E3B0 C018 0004          00000018   6837+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004AF8 E3C0 B010 0021          00000010   6838+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004AFE E3E0 D008 0004          00000008   6839+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004B04 EB1C D020 0004          00000020   6840+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004B0A 078E                               6841+         bcr 8,14                if same dsab, just return              01-DCCEP
00004B0C E3F0 D010 0024          00000010   6842+         stg 15,16(0,13)         save return code                       01-DCCEP
00004B12 E300 D018 0024          00000018   6843+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004B18 E3F0 D090 0004          00000090   6844+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004B1E E3F0 F018 0004          00000018   6845+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004B24 47F0 F040               00000040   6846+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6847+* End of Epilog
                                            6848 * * **** End of Epilogue
00004B28                                    6849          DS    0D
00004B28 000000B0                           6850 @FRAMESIZE_773 DC F'176'
                                                                                                                           Page  137 
  Active Usings: @REGION_773_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004B2C 00000000
00004B30 00000000000002C8                   6851 @lit_773_304 DC AD($X$X$H_malloc)
                                            6852          DROP  12
                                            6853 *
                                            6854 *   DSECT for automatic variables in "XXH64_createState"
                                            6855 *      (FUNCTION #773)
                                            6856 *
00000000                00000000 000000A8   6857 @AUTO#$X$X$H64_create$State DSECT
00000000                                    6858          DS    XL168
                                            6859 *
00004B38                00000000 000059C8   6860 @CODE    CSECT
                                            6861 *
                                            6862 *
                                            6863 *
                                            6864 * ....... start of XXH64_freeState
                                            6865 $X$X$H64_free$State ALIAS X'E7E7C8F6F46D86998585E2A381A385'
00004B38                                    6866 @LNAME774 DS   0H
00004B38 0000000F                           6867          DC    X'0000000F'
00004B3C E7E7C8F6F46D8699                   6868          DC    C'XXH64_freeState'
00004B4B 00                                 6869          DC    X'00'
                                            6870 $X$X$H64_free$State DCCPRLG CINDEX=774,BASER=12,FRAME=176,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME774
                                            6871          macro
                                            6872          dccextrn &m
                                            6873          gblc    &$dccext(1000)
                                            6874          gbla    &$dccexti
                                            6875          lcla    &i
                                            6876 &$dccext(&$dccexti+1) setc    '&m'
                                            6877 &i       seta    1
                                            6878 .loop    aif    (&i gt &$dccexti).around
                                            6879          aif    ('&$dccext(&i)' eq '&m').getout
                                            6880 &i       seta    &i+1
                                            6881          ago     .loop
                                            6882 .around  anop
                                            6883 &$dccexti seta &$dccexti+1
                                            6884          extrn  &m
                                            6885 .getout  anop
                                            6886          mend
00004B50                                    6887+$eye0119    ds    0d                                                    02-DCCCA
00004B50 C4C3C3                             6888+         dc cl3'DCC'                                                    02-DCCCA
00004B53 01                                 6889+         dc xl1'01' format one                                          02-DCCCA
00004B54 00000000                           6890+         dc a(0)                                                        02-DCCCA
00004B58 0000000000004BC2                   6891+         dc ad(@PER_774)                                                02-DCCCA
00004B60 00000000000000B0                   6892+         dc ad(176)                                                     02-DCCCA
00004B68 0000000000000000                   6893+         dc ad(0)                                                       02-DCCCA
00004B70 0000000000001000                   6894+         dc ad(4096)                                                    02-DCCCA
00004B78 20                                 6895+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004B79 03                                 6896+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004B7A 03                                 6897+         dc al1(3)                                                      02-DCCCA
00004B7B 08                                 6898+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004B7C 00                                 6899+         dc bl.8'00000000'                                              02-DCCCA
00004B7D 000000                             6900+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page  138 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004B80 0000000000004B38                   6901+         dc ad(@LNAME774)                                               02-DCCCA
00004B88                                    6902+         ds 0d                                                          02-DCCCA
00004B88 0000000000004B50                   6903+         dc ad($eye0119)                                                02-DCCCA
00004B90 0000000000000000                   6904+         dc ad(0)                                                       02-DCCCA
00004B98                                    6905+         ds    0d                                                       01-DCCPR
                                            6906+         entry $X$X$H64_free$State                                      01-DCCPR
00004B98                                    6907+$X$X$H64_free$State ds 0d                                               01-DCCPR
00004B98                                    6908+@REGION_774_1 ds 0h                                                     01-DCCPR
00004B98 EBEC D008 0024          00000008   6909+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004B9E E3E0 D088 0004          00000088   6910+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004BA4 E3C0 D090 0004          00000090   6911+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004BAA B904 002E                          6912+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004BAE E3B0 C018 0004          00000018   6913+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004BB4 A7EB 00B0               000000B0   6914+         aghi  14,176              increase by frame size               01-DCCPR
00004BB8 E3E0 C020 0021          00000020   6915+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004BBE 4720 B020               00000020   6916+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004BC2                                    6917+@PER_774 ds    0h                                                       01-DCCPR
00004BC2 EBDE 2080 0024          00000080   6918+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004BC8 E3C0 2090 0024          00000090   6919+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004BCE B904 00D2                          6920+         lgr   13,2                set real frame pointer               01-DCCPR
00004BD2 B904 00CF                          6921+         lgr   12,15               set base reg                         01-DCCPR
                        00004B98            6922+         using @REGION_774_1,12                                         01-DCCPR
                                            6923 * ******* End of Prologue
                                            6924 * *
                                            6925 * ***       XXH_free(statePtr);
00004BD6 E3F0 1000 0004          00000000   6926          LG    15,0(0,1)   ; statePtr
00004BDC E3F0 D0A8 0024          000000A8   6927          STG   15,168(0,13)
00004BE2 4110 D0A8               000000A8   6928          LA    1,168(0,13)
00004BE6 E3F0 C0B0 0004          00004C48   6929          LG    15,@lit_774_306 ; XXH_free
00004BEC                                    6930 @@gen_label370 DS    0H
00004BEC 05EF                               6931          BALR  14,15
00004BEE                                    6932 @@gen_label371 DS    0H
                                            6933 * ***       return XXH_OK;
00004BEE A7F9 0000               00000000   6934          LGHI  15,0        ; 0
                                            6935 * ***   }
                                            6936 * * **** Start of Epilogue
                                            6937          DCCEPIL
00004BF2                                    6938+         ds 0h                                                          01-DCCEP
                                            6939+* Epilog
00004BF2 D707 D088 D088 00000088 00000088   6940+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004BF8 E3D0 D080 0004          00000080   6941+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004BFE E3C0 D090 0004          00000090   6942+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004C04 E3B0 C018 0004          00000018   6943+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004C0A E3C0 B010 0021          00000010   6944+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004C10 E3E0 D008 0004          00000008   6945+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004C16 EB1C D020 0004          00000020   6946+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004C1C 078E                               6947+         bcr 8,14                if same dsab, just return              01-DCCEP
00004C1E E3F0 D010 0024          00000010   6948+         stg 15,16(0,13)         save return code                       01-DCCEP
00004C24 E300 D018 0024          00000018   6949+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004C2A E3F0 D090 0004          00000090   6950+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004C30 E3F0 F018 0004          00000018   6951+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004C36 47F0 F040               00000040   6952+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page  139 
  Active Usings: @REGION_774_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6953+* End of Epilog
                                            6954 * * **** End of Epilogue
00004C40                                    6955          DS    0D
00004C40 000000B0                           6956 @FRAMESIZE_774 DC F'176'
00004C44 00000000
00004C48 00000000000003D0                   6957 @lit_774_306 DC AD($X$X$H_free)
                                            6958          DROP  12
                                            6959 *
                                            6960 *   DSECT for automatic variables in "XXH64_freeState"
                                            6961 *      (FUNCTION #774)
                                            6962 *
00000000                00000000 000000A8   6963 @AUTO#$X$X$H64_free$State DSECT
00000000                                    6964          DS    XL168
                                            6965 *
00004C50                00000000 000059C8   6966 @CODE    CSECT
                                            6967 *
                                            6968 *
                                            6969 *
                                            6970 * ....... start of XXH64_copyState
                                            6971 $X$X$H64_copy$State ALIAS X'E7E7C8F6F46D839697A8E2A381A385'
00004C50                                    6972 @LNAME775 DS   0H
00004C50 0000000F                           6973          DC    X'0000000F'
00004C54 E7E7C8F6F46D8396                   6974          DC    C'XXH64_copyState'
00004C63 00                                 6975          DC    X'00'
                                            6976 $X$X$H64_copy$State DCCPRLG CINDEX=775,BASER=0,FRAME=168,SAVEAREA=NO,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME775
                                            6977          macro
                                            6978          dccextrn &m
                                            6979          gblc    &$dccext(1000)
                                            6980          gbla    &$dccexti
                                            6981          lcla    &i
                                            6982 &$dccext(&$dccexti+1) setc    '&m'
                                            6983 &i       seta    1
                                            6984 .loop    aif    (&i gt &$dccexti).around
                                            6985          aif    ('&$dccext(&i)' eq '&m').getout
                                            6986 &i       seta    &i+1
                                            6987          ago     .loop
                                            6988 .around  anop
                                            6989 &$dccexti seta &$dccexti+1
                                            6990          extrn  &m
                                            6991 .getout  anop
                                            6992          mend
00004C68                                    6993+$eye0122    ds    0d                                                    02-DCCCA
00004C68 C4C3C3                             6994+         dc cl3'DCC'                                                    02-DCCCA
00004C6B 01                                 6995+         dc xl1'01' format one                                          02-DCCCA
00004C6C 00000000                           6996+         dc a(0)                                                        02-DCCCA
00004C70 0000000000000000                   6997+         dc ad(0)                                                       02-DCCCA
00004C78 00000000000000A8                   6998+         dc ad(168)                                                     02-DCCCA
00004C80 0000000000000000                   6999+         dc ad(0)                                                       02-DCCCA
00004C88 0000000000001000                   7000+         dc ad(4096)                                                    02-DCCCA
00004C90 20                                 7001+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004C91 03                                 7002+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page  140 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004C92 03                                 7003+         dc al1(3)                                                      02-DCCCA
00004C93 08                                 7004+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004C94 00                                 7005+         dc bl.8'00000000'                                              02-DCCCA
00004C95 000000                             7006+         dc al3(0)                                                      02-DCCCA
00004C98 0000000000004C50                   7007+         dc ad(@LNAME775)                                               02-DCCCA
00004CA0                                    7008+         ds 0d                                                          02-DCCCA
00004CA0 0000000000004C68                   7009+         dc ad($eye0122)                                                02-DCCCA
00004CA8 0000000000000000                   7010+         dc ad(0)                                                       02-DCCCA
00004CB0                                    7011+         ds    0d                                                       01-DCCPR
                                            7012+         entry $X$X$H64_copy$State                                      01-DCCPR
00004CB0                                    7013+$X$X$H64_copy$State ds 0d                                               01-DCCPR
00004CB0                                    7014+@REGION_775_1 ds 0h                                                     01-DCCPR
00004CB0 EBEC D008 0024          00000008   7015+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            7016 * ******* End of Prologue
                                            7017 * *
                                            7018 * ***       __memcpy(dstState,srcState,sizeof(*dstState));
00004CB6 E3F0 1008 0004          00000008   7019          LG    15,8(0,1)
00004CBC E310 1000 0004          00000000   7020          LG    1,0(0,1)
00004CC2 D257 1000 F000 00000000 00000000   7021          MVC   0(88,1),0(15)
                                            7022 * ***   }
00004CC8                                    7023 @ret_lab_775 DS 0H
                                            7024 * * **** Start of Epilogue
                                            7025          DCCEPIL
00004CC8                                    7026+         ds 0h                                                          01-DCCEP
                                            7027+* Epilog
                                            7028+* Epilog
00004CC8 E3E0 D008 0004          00000008   7029+         lg    14,8(,13) restore the reg                                01-DCCEP
00004CCE EB1C D020 0004          00000020   7030+         lmg   1,12,32(13)                                              01-DCCEP
00004CD4 07FE                               7031+         br   14                                                        01-DCCEP
                                            7032+* End of Epilog
                                            7033 * * **** End of Epilogue
                                            7034 *
                                            7035 *   DSECT for automatic variables in "XXH64_copyState"
                                            7036 *      (FUNCTION #775)
                                            7037 *
00000000                00000000 000000A8   7038 @AUTO#$X$X$H64_copy$State DSECT
00000000                                    7039          DS    XL168
                                            7040 *
00004CD6                00000000 000059C8   7041 @CODE    CSECT
                                            7042 *
                                            7043 *
                                            7044 *
                                            7045 * ....... start of XXH64_reset
                                            7046 $X$X$H64_reset ALIAS X'E7E7C8F6F46D9985A285A3'
00004CD6                                    7047 @LNAME776 DS   0H
00004CD6 0000000B                           7048          DC    X'0000000B'
00004CDA E7E7C8F6F46D9985                   7049          DC    C'XXH64_reset'
00004CE5 00                                 7050          DC    X'00'
                                            7051 $X$X$H64_reset DCCPRLG CINDEX=776,BASER=12,FRAME=256,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME776
                                            7052          macro
                                            7053          dccextrn &m
                                                                                                                           Page  141 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7054          gblc    &$dccext(1000)
                                            7055          gbla    &$dccexti
                                            7056          lcla    &i
                                            7057 &$dccext(&$dccexti+1) setc    '&m'
                                            7058 &i       seta    1
                                            7059 .loop    aif    (&i gt &$dccexti).around
                                            7060          aif    ('&$dccext(&i)' eq '&m').getout
                                            7061 &i       seta    &i+1
                                            7062          ago     .loop
                                            7063 .around  anop
                                            7064 &$dccexti seta &$dccexti+1
                                            7065          extrn  &m
                                            7066 .getout  anop
                                            7067          mend
00004CE8                                    7068+$eye0125    ds    0d                                                    02-DCCCA
00004CE8 C4C3C3                             7069+         dc cl3'DCC'                                                    02-DCCCA
00004CEB 01                                 7070+         dc xl1'01' format one                                          02-DCCCA
00004CEC 00000000                           7071+         dc a(0)                                                        02-DCCCA
00004CF0 0000000000004D5A                   7072+         dc ad(@PER_776)                                                02-DCCCA
00004CF8 0000000000000100                   7073+         dc ad(256)                                                     02-DCCCA
00004D00 0000000000000000                   7074+         dc ad(0)                                                       02-DCCCA
00004D08 0000000000001000                   7075+         dc ad(4096)                                                    02-DCCCA
00004D10 20                                 7076+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004D11 03                                 7077+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004D12 03                                 7078+         dc al1(3)                                                      02-DCCCA
00004D13 08                                 7079+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004D14 00                                 7080+         dc bl.8'00000000'                                              02-DCCCA
00004D15 000000                             7081+         dc al3(0)                                                      02-DCCCA
00004D18 0000000000004CD6                   7082+         dc ad(@LNAME776)                                               02-DCCCA
00004D20                                    7083+         ds 0d                                                          02-DCCCA
00004D20 0000000000004CE8                   7084+         dc ad($eye0125)                                                02-DCCCA
00004D28 0000000000000000                   7085+         dc ad(0)                                                       02-DCCCA
00004D30                                    7086+         ds    0d                                                       01-DCCPR
                                            7087+         entry $X$X$H64_reset                                           01-DCCPR
00004D30                                    7088+$X$X$H64_reset ds 0d                                                    01-DCCPR
00004D30                                    7089+@REGION_776_1 ds 0h                                                     01-DCCPR
00004D30 EBEC D008 0024          00000008   7090+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004D36 E3E0 D088 0004          00000088   7091+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004D3C E3C0 D090 0004          00000090   7092+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004D42 B904 002E                          7093+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004D46 E3B0 C018 0004          00000018   7094+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004D4C A7EB 0100               00000100   7095+         aghi  14,256              increase by frame size               01-DCCPR
00004D50 E3E0 C020 0021          00000020   7096+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004D56 4720 B020               00000020   7097+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004D5A                                    7098+@PER_776 ds    0h                                                       01-DCCPR
00004D5A EBDE 2080 0024          00000080   7099+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004D60 E3C0 2090 0024          00000090   7100+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004D66 B904 00D2                          7101+         lgr   13,2                set real frame pointer               01-DCCPR
00004D6A B904 00CF                          7102+         lgr   12,15               set base reg                         01-DCCPR
                        00004D30            7103+         using @REGION_776_1,12                                         01-DCCPR
                                            7104 * ******* End of Prologue
                                            7105 * *
                                                                                                                           Page  142 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004D6E E3F0 1008 0004          00000008   7106          LG    15,8(0,1)   ; seed
                                            7107 * ***       XXH64_state_t state;
                                            7108 * ***       __memset(&state,0,sizeof(state));
00004D74 4120 D0A8               000000A8   7109          LA    2,168(0,13)
                                            7110 * setting 88 bytes to 0x00
00004D78 D757 2000 2000 00000000 00000000   7111          XC    0(88,2),0(2)
                                            7112 * ***       state.v1 = seed + PRIME64_1 + PRIME64_2;
00004D7E E320 C0F0 0004          00004E20   7113          LG    2,@lit_776_309
00004D84 B904 003F                          7114          LGR   3,15
00004D88 E330 2070 000A          00000070   7115          ALG   3,112(0,2)
00004D8E E330 2078 000A          00000078   7116          ALG   3,120(0,2)
00004D94 E330 D0B0 0024          000000B0   7117          STG   3,176(0,13) ; offset of v1 in XXH64_state_s
                                            7118 * ***       state.v2 = seed + PRIME64_2;
00004D9A B904 003F                          7119          LGR   3,15
00004D9E E330 2078 000A          00000078   7120          ALG   3,120(0,2)
00004DA4 E330 D0B8 0024          000000B8   7121          STG   3,184(0,13) ; offset of v2 in XXH64_state_s
                                            7122 * ***       state.v3 = seed + 0;
00004DAA E3F0 D0C0 0024          000000C0   7123          STG   15,192(0,13) ; offset of v3 in XXH64_state_s
                                            7124 * ***       state.v4 = seed - PRIME64_1;
00004DB0 E3F0 2070 000B          00000070   7125          SLG   15,112(0,2)
00004DB6 E3F0 D0C8 0024          000000C8   7126          STG   15,200(0,13) ; offset of v4 in XXH64_state_s
                                            7127 * ***
                                            7128 * ***       __memcpy(statePtr,&state,sizeof(state) - sizeof(state.rese\
                                            7129 * rved));
00004DBC 41F0 D0A8               000000A8   7130          LA    15,168(0,13)
00004DC0 E310 1000 0004          00000000   7131          LG    1,0(0,1)
00004DC6 D24F 1000 F000 00000000 00000000   7132          MVC   0(80,1),0(15)
                                            7133 * ***       return XXH_OK;
00004DCC A7F9 0000               00000000   7134          LGHI  15,0        ; 0
                                            7135 * ***   }
                                            7136 * * **** Start of Epilogue
                                            7137          DCCEPIL
00004DD0                                    7138+         ds 0h                                                          01-DCCEP
                                            7139+* Epilog
00004DD0 D707 D088 D088 00000088 00000088   7140+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004DD6 E3D0 D080 0004          00000080   7141+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004DDC E3C0 D090 0004          00000090   7142+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004DE2 E3B0 C018 0004          00000018   7143+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004DE8 E3C0 B010 0021          00000010   7144+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004DEE E3E0 D008 0004          00000008   7145+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004DF4 EB1C D020 0004          00000020   7146+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004DFA 078E                               7147+         bcr 8,14                if same dsab, just return              01-DCCEP
00004DFC E3F0 D010 0024          00000010   7148+         stg 15,16(0,13)         save return code                       01-DCCEP
00004E02 E300 D018 0024          00000018   7149+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004E08 E3F0 D090 0004          00000090   7150+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004E0E E3F0 F018 0004          00000018   7151+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004E14 47F0 F040               00000040   7152+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7153+* End of Epilog
                                            7154 * * **** End of Epilogue
00004E18                                    7155          DS    0D
00004E18 00000100                           7156 @FRAMESIZE_776 DC F'256'
00004E1C 00000000
                                                                                                                           Page  143 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004E20 00000000000059C8                   7157 @lit_776_309 DC AD(@DATA)
                                            7158          DROP  12
                                            7159 *
                                            7160 *   DSECT for automatic variables in "XXH64_reset"
                                            7161 *      (FUNCTION #776)
                                            7162 *
00000000                00000000 00000100   7163 @AUTO#$X$X$H64_reset DSECT
00000000                                    7164          DS    XL168
000000A8                                    7165 $X$X$H64_reset#state#0 DS 88XL1 ; state
                                            7166 *
00004E28                00000000 000059C8   7167 @CODE    CSECT
                                            7168 *
                                            7169 *
                                            7170 *
                                            7171 * ....... start of XXH64_update_endian
00004E28                                    7172 @LNAME803 DS   0H
00004E28 00000013                           7173          DC    X'00000013'
00004E2C E7E7C8F6F46DA497                   7174          DC    C'XXH64_update_endian'
00004E3F 00                                 7175          DC    X'00'
                                            7176 $X$X$H64_update_endian DCCPRLG CINDEX=803,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME803
                                            7177          macro
                                            7178          dccextrn &m
                                            7179          gblc    &$dccext(1000)
                                            7180          gbla    &$dccexti
                                            7181          lcla    &i
                                            7182 &$dccext(&$dccexti+1) setc    '&m'
                                            7183 &i       seta    1
                                            7184 .loop    aif    (&i gt &$dccexti).around
                                            7185          aif    ('&$dccext(&i)' eq '&m').getout
                                            7186 &i       seta    &i+1
                                            7187          ago     .loop
                                            7188 .around  anop
                                            7189 &$dccexti seta &$dccexti+1
                                            7190          extrn  &m
                                            7191 .getout  anop
                                            7192          mend
00004E40                                    7193+$eye0128    ds    0d                                                    02-DCCCA
00004E40 C4C3C3                             7194+         dc cl3'DCC'                                                    02-DCCCA
00004E43 01                                 7195+         dc xl1'01' format one                                          02-DCCCA
00004E44 00000000                           7196+         dc a(0)                                                        02-DCCCA
00004E48 0000000000004EB2                   7197+         dc ad(@PER_803)                                                02-DCCCA
00004E50 00000000000000C8                   7198+         dc ad(200)                                                     02-DCCCA
00004E58 0000000000000000                   7199+         dc ad(0)                                                       02-DCCCA
00004E60 0000000000001000                   7200+         dc ad(4096)                                                    02-DCCCA
00004E68 20                                 7201+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004E69 03                                 7202+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004E6A 03                                 7203+         dc al1(3)                                                      02-DCCCA
00004E6B 08                                 7204+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004E6C 00                                 7205+         dc bl.8'00000000'                                              02-DCCCA
00004E6D 000000                             7206+         dc al3(0)                                                      02-DCCCA
00004E70 0000000000004E28                   7207+         dc ad(@LNAME803)                                               02-DCCCA
                                                                                                                           Page  144 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004E78                                    7208+         ds 0d                                                          02-DCCCA
00004E78 0000000000004E40                   7209+         dc ad($eye0128)                                                02-DCCCA
00004E80 0000000000000000                   7210+         dc ad(0)                                                       02-DCCCA
00004E88                                    7211+         ds    0d                                                       01-DCCPR
00004E88                                    7212+$X$X$H64_update_endian ds 0d                                            01-DCCPR
00004E88                                    7213+@REGION_803_1 ds 0h                                                     01-DCCPR
00004E88 EBEC D008 0024          00000008   7214+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004E8E E3E0 D088 0004          00000088   7215+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004E94 E3C0 D090 0004          00000090   7216+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004E9A B904 002E                          7217+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004E9E E3B0 C018 0004          00000018   7218+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004EA4 A7EB 00C8               000000C8   7219+         aghi  14,200              increase by frame size               01-DCCPR
00004EA8 E3E0 C020 0021          00000020   7220+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004EAE 4720 B020               00000020   7221+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004EB2                                    7222+@PER_803 ds    0h                                                       01-DCCPR
00004EB2 EBDE 2080 0024          00000080   7223+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004EB8 E3C0 2090 0024          00000090   7224+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004EBE B904 00D2                          7225+         lgr   13,2                set real frame pointer               01-DCCPR
00004EC2 B904 00CF                          7226+         lgr   12,15               set base reg                         01-DCCPR
                        00004E88            7227+         using @REGION_803_1,12                                         01-DCCPR
                                            7228 * ******* End of Prologue
                                            7229 * *
                                            7230 * ***       if (input==((void *)0))
00004EC6 E370 1000 0004          00000000   7231          LG    7,0(0,1)    ; state
00004ECC EB23 1008 0004          00000008   7232          LMG   2,3,8(1)    ; input
00004ED2 5880 101C               0000001C   7233          L     8,28(0,1)   ; endian
00004ED6 B902 00F2                          7234          LTGR  15,2
00004EDA 4770 C080               00004F08   7235          BNE   @L155
                                            7236 * ***
                                            7237 * ***
                                            7238 * ***
                                            7239 * ***           return XXH_ERROR;
00004EDE A7F9 0001               00000001   7240          LGHI  15,1        ; 1
00004EE2 47F0 C38E               00005216   7241          B     @ret_lab_803
00004EE8                                    7242          DS    0D
00004EE8 000000C8                           7243 @FRAMESIZE_803 DC F'200'
00004EEC 00000000
00004EF0 00000000000004D8                   7244 @lit_803_313 DC AD($X$X$H_memcpy)
00004EF8 0000000000002D30                   7245 @lit_803_317 DC AD($X$X$H_read$L$E64)
00004F00 0000000000002FA8                   7246 @lit_803_318 DC AD($X$X$H64_round)
00004F08                                    7247 @L155    DS    0H
                                            7248 * ***
                                            7249 * ***
                                            7250 * ***       {   const BYTE* p = (const BYTE*)input;
                                            7251 * ***           const BYTE* const bEnd = p + len;
00004F08 4193 2000               00000000   7252          LA    9,0(3,2)
                                            7253 * ***
                                            7254 * ***           state->total_len += len;
00004F0C B904 00F3                          7255          LGR   15,3
00004F10 E3F0 7000 000A          00000000   7256          ALG   15,0(0,7)
00004F16 E3F0 7000 0024          00000000   7257          STG   15,0(0,7)
                                            7258 * ***
                                                                                                                           Page  145 
  Active Usings: @REGION_803_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7259 * ***           if (state->memsize + len < 32) {
00004F1C 58F0 7048               00000048   7260          L     15,72(0,7)  ; offset of memsize in XXH64_state_s
00004F20 B904 0013                          7261          LGR   1,3
00004F24 B91A 001F                          7262          ALGFR 1,15
00004F28 C21E 0000 0020                     7263          CLGFI 1,X'00000020'
00004F2E 47B0 C0DC               00004F64   7264          BNL   @L156
                                            7265 * ***               XXH_memcpy(((BYTE*)state->mem64) + state->memsize,\
                                            7266 *  input, len);
00004F32 E3F0 7048 0016          00000048   7267          LLGF  15,72(0,7)
00004F38 41FF 7028               00000028   7268          LA    15,40(15,7)
00004F3C E3F0 D0B0 0024          000000B0   7269          STG   15,176(0,13)
00004F42 EB23 D0B8 0024          000000B8   7270          STMG  2,3,184(13)
00004F48 4110 D0B0               000000B0   7271          LA    1,176(0,13)
00004F4C E3F0 C068 0004          00004EF0   7272          LG    15,@lit_803_313 ; XXH_memcpy
00004F52                                    7273 @@gen_label374 DS    0H
00004F52 05EF                               7274          BALR  14,15
00004F54                                    7275 @@gen_label375 DS    0H
                                            7276 * ***               state->memsize += (U32)len;
00004F54 5E30 7048               00000048   7277          AL    3,72(0,7)
00004F58 5030 7048               00000048   7278          ST    3,72(0,7)
                                            7279 * ***               return XXH_OK;
00004F5C A7F9 0000               00000000   7280          LGHI  15,0        ; 0
00004F60 47F0 C38E               00005216   7281          B     @ret_lab_803
                                            7282 * ***           }
00004F64                                    7283 @L156    DS    0H
                                            7284 * ***
                                            7285 * ***           if (state->memsize) {
00004F64 E3F0 7048 0012          00000048   7286          LT    15,72(0,7)  ; offset of memsize in XXH64_state_s
00004F6A 4780 C23A               000050C2   7287          BZ    @L157
                                            7288 * ***               XXH_memcpy(((BYTE*)state->mem64) + state->memsize,\
                                            7289 *  input, 32-state->memsize);
00004F6E E3F0 7048 0016          00000048   7290          LLGF  15,72(0,7)
00004F74 41FF 7028               00000028   7291          LA    15,40(15,7)
00004F78 E3F0 D0B0 0024          000000B0   7292          STG   15,176(0,13)
00004F7E E320 D0B8 0024          000000B8   7293          STG   2,184(0,13)
00004F84 A738 0020               00000020   7294          LHI   3,32        ; 32
00004F88 18F3                               7295          LR    15,3
00004F8A 5FF0 7048               00000048   7296          SL    15,72(0,7)
00004F8E B916 00FF                          7297          LLGFR 15,15
00004F92 E3F0 D0C0 0024          000000C0   7298          STG   15,192(0,13)
00004F98 4110 D0B0               000000B0   7299          LA    1,176(0,13)
00004F9C E3F0 C068 0004          00004EF0   7300          LG    15,@lit_803_313 ; XXH_memcpy
00004FA2                                    7301 @@gen_label377 DS    0H
00004FA2 05EF                               7302          BALR  14,15
00004FA4                                    7303 @@gen_label378 DS    0H
                                            7304 * ***               state->v1 = XXH64_round(state->v1, XXH_readLE64(st\
                                            7305 * ate->mem64+0, endian));
00004FA4 41F0 7028               00000028   7306          LA    15,40(0,7)
00004FA8 E3F0 D0B0 0024          000000B0   7307          STG   15,176(0,13)
00004FAE B914 00F8                          7308          LGFR  15,8
00004FB2 E3F0 D0B8 0024          000000B8   7309          STG   15,184(0,13)
00004FB8 4110 D0B0               000000B0   7310          LA    1,176(0,13)
                                                                                                                           Page  146 
  Active Usings: @REGION_803_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004FBC E340 C070 0004          00004EF8   7311          LG    4,@lit_803_317 ; XXH_readLE64
00004FC2 B904 00F4                          7312          LGR   15,4
00004FC6                                    7313 @@gen_label379 DS    0H
00004FC6 05EF                               7314          BALR  14,15
00004FC8                                    7315 @@gen_label380 DS    0H
00004FC8 E310 7008 0004          00000008   7316          LG    1,8(0,7)
00004FCE E310 D0B0 0024          000000B0   7317          STG   1,176(0,13)
00004FD4 E3F0 D0B8 0024          000000B8   7318          STG   15,184(0,13)
00004FDA 4110 D0B0               000000B0   7319          LA    1,176(0,13)
00004FDE E350 C078 0004          00004F00   7320          LG    5,@lit_803_318 ; XXH64_round
00004FE4 B904 00F5                          7321          LGR   15,5
00004FE8                                    7322 @@gen_label381 DS    0H
00004FE8 05EF                               7323          BALR  14,15
00004FEA                                    7324 @@gen_label382 DS    0H
00004FEA E3F0 7008 0024          00000008   7325          STG   15,8(0,7)
                                            7326 * ***               state->v2 = XXH64_round(state->v2, XXH_readLE64(st\
                                            7327 * ate->mem64+1, endian));
00004FF0 41F0 7030               00000030   7328          LA    15,48(0,7)
00004FF4 E3F0 D0B0 0024          000000B0   7329          STG   15,176(0,13)
00004FFA B914 00F8                          7330          LGFR  15,8
00004FFE E3F0 D0B8 0024          000000B8   7331          STG   15,184(0,13)
00005004 4110 D0B0               000000B0   7332          LA    1,176(0,13)
00005008 B904 00F4                          7333          LGR   15,4
0000500C                                    7334 @@gen_label383 DS    0H
0000500C 05EF                               7335          BALR  14,15
0000500E                                    7336 @@gen_label384 DS    0H
0000500E E310 7010 0004          00000010   7337          LG    1,16(0,7)
00005014 E310 D0B0 0024          000000B0   7338          STG   1,176(0,13)
0000501A E3F0 D0B8 0024          000000B8   7339          STG   15,184(0,13)
00005020 4110 D0B0               000000B0   7340          LA    1,176(0,13)
00005024 B904 00F5                          7341          LGR   15,5
00005028                                    7342 @@gen_label385 DS    0H
00005028 05EF                               7343          BALR  14,15
0000502A                                    7344 @@gen_label386 DS    0H
0000502A E3F0 7010 0024          00000010   7345          STG   15,16(0,7)
                                            7346 * ***               state->v3 = XXH64_round(state->v3, XXH_readLE64(st\
                                            7347 * ate->mem64+2, endian));
00005030 41F0 7038               00000038   7348          LA    15,56(0,7)
00005034 E3F0 D0B0 0024          000000B0   7349          STG   15,176(0,13)
0000503A B914 00F8                          7350          LGFR  15,8
0000503E E3F0 D0B8 0024          000000B8   7351          STG   15,184(0,13)
00005044 4110 D0B0               000000B0   7352          LA    1,176(0,13)
00005048 B904 00F4                          7353          LGR   15,4
0000504C                                    7354 @@gen_label387 DS    0H
0000504C 05EF                               7355          BALR  14,15
0000504E                                    7356 @@gen_label388 DS    0H
0000504E E310 7018 0004          00000018   7357          LG    1,24(0,7)
00005054 E310 D0B0 0024          000000B0   7358          STG   1,176(0,13)
0000505A E3F0 D0B8 0024          000000B8   7359          STG   15,184(0,13)
00005060 4110 D0B0               000000B0   7360          LA    1,176(0,13)
00005064 B904 00F5                          7361          LGR   15,5
00005068                                    7362 @@gen_label389 DS    0H
                                                                                                                           Page  147 
  Active Usings: @REGION_803_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005068 05EF                               7363          BALR  14,15
0000506A                                    7364 @@gen_label390 DS    0H
0000506A E3F0 7018 0024          00000018   7365          STG   15,24(0,7)
                                            7366 * ***               state->v4 = XXH64_round(state->v4, XXH_readLE64(st\
                                            7367 * ate->mem64+3, endian));
00005070 41F0 7040               00000040   7368          LA    15,64(0,7)
00005074 E3F0 D0B0 0024          000000B0   7369          STG   15,176(0,13)
0000507A B914 00F8                          7370          LGFR  15,8
0000507E E3F0 D0B8 0024          000000B8   7371          STG   15,184(0,13)
00005084 4110 D0B0               000000B0   7372          LA    1,176(0,13)
00005088 B904 00F4                          7373          LGR   15,4
0000508C                                    7374 @@gen_label391 DS    0H
0000508C 05EF                               7375          BALR  14,15
0000508E                                    7376 @@gen_label392 DS    0H
0000508E E310 7020 0004          00000020   7377          LG    1,32(0,7)
00005094 E310 D0B0 0024          000000B0   7378          STG   1,176(0,13)
0000509A E3F0 D0B8 0024          000000B8   7379          STG   15,184(0,13)
000050A0 4110 D0B0               000000B0   7380          LA    1,176(0,13)
000050A4 B904 00F5                          7381          LGR   15,5
000050A8                                    7382 @@gen_label393 DS    0H
000050A8 05EF                               7383          BALR  14,15
000050AA                                    7384 @@gen_label394 DS    0H
000050AA E3F0 7020 0024          00000020   7385          STG   15,32(0,7)
                                            7386 * ***               p += 32-state->memsize;
000050B0 5F30 7048               00000048   7387          SL    3,72(0,7)
000050B4 B916 00F3                          7388          LLGFR 15,3
000050B8 412F 2000               00000000   7389          LA    2,0(15,2)
                                            7390 * ***               state->memsize = 0;
000050BC E54C 7048 0000          00000048   7391          MVHI  72(7),0     ; offset of memsize in XXH64_state_s
                                            7392 * ***           }
000050C2                                    7393 @L157    DS    0H
                                            7394 * ***
                                            7395 * ***           if (p+32 <= bEnd) {
000050C2 41F0 2020               00000020   7396          LA    15,32(0,2)
000050C6 B920 00F9                          7397          CGR   15,9
000050CA 4720 C350               000051D8   7398          BH    @L158
                                            7399 * ***               const BYTE* const limit = bEnd - 32;
000050CE A7F9 FFE0               0000FFE0   7400          LGHI  15,-32      ; -32
000050D2 41AF 9000               00000000   7401          LA    10,0(15,9)
                                            7402 * ***               U64 v1 = state->v1;
000050D6 EB36 7008 0004          00000008   7403          LMG   3,6,8(7)    ; offset of v1 in XXH64_state_s
                                            7404 * ***               U64 v2 = state->v2;
                                            7405 * ***               U64 v3 = state->v3;
                                            7406 * ***               U64 v4 = state->v4;
                                            7407 * ***
                                            7408 * ***               do {
000050DC                                    7409 @L159    DS    0H
                                            7410 * ***                   v1 = XXH64_round(v1, XXH_readLE64(p, endian));\
                                            7411 *  p+=8;
000050DC E320 D0B0 0024          000000B0   7412          STG   2,176(0,13)
000050E2 B914 00F8                          7413          LGFR  15,8
000050E6 E3F0 D0B8 0024          000000B8   7414          STG   15,184(0,13)
                                                                                                                           Page  148 
  Active Usings: @REGION_803_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000050EC 4110 D0B0               000000B0   7415          LA    1,176(0,13)
000050F0 E3B0 C070 0004          00004EF8   7416          LG    11,@lit_803_317 ; XXH_readLE64
000050F6 B904 00FB                          7417          LGR   15,11
000050FA                                    7418 @@gen_label396 DS    0H
000050FA 05EF                               7419          BALR  14,15
000050FC                                    7420 @@gen_label397 DS    0H
000050FC E330 D0B0 0024          000000B0   7421          STG   3,176(0,13)
00005102 E3F0 D0B8 0024          000000B8   7422          STG   15,184(0,13)
00005108 4110 D0B0               000000B0   7423          LA    1,176(0,13)
0000510C E3F0 C078 0004          00004F00   7424          LG    15,@lit_803_318 ; XXH64_round
00005112                                    7425 @@gen_label398 DS    0H
00005112 05EF                               7426          BALR  14,15
00005114                                    7427 @@gen_label399 DS    0H
00005114 B904 003F                          7428          LGR   3,15        ; v1
00005118 4120 2008               00000008   7429          LA    2,8(0,2)
                                            7430 * ***                   v2 = XXH64_round(v2, XXH_readLE64(p, endian));\
                                            7431 *  p+=8;
0000511C E320 D0B0 0024          000000B0   7432          STG   2,176(0,13)
00005122 B914 00F8                          7433          LGFR  15,8
00005126 E3F0 D0B8 0024          000000B8   7434          STG   15,184(0,13)
0000512C 4110 D0B0               000000B0   7435          LA    1,176(0,13)
00005130 B904 00FB                          7436          LGR   15,11
00005134                                    7437 @@gen_label400 DS    0H
00005134 05EF                               7438          BALR  14,15
00005136                                    7439 @@gen_label401 DS    0H
00005136 E340 D0B0 0024          000000B0   7440          STG   4,176(0,13)
0000513C E3F0 D0B8 0024          000000B8   7441          STG   15,184(0,13)
00005142 4110 D0B0               000000B0   7442          LA    1,176(0,13)
00005146 E3F0 C078 0004          00004F00   7443          LG    15,@lit_803_318 ; XXH64_round
0000514C                                    7444 @@gen_label402 DS    0H
0000514C 05EF                               7445          BALR  14,15
0000514E                                    7446 @@gen_label403 DS    0H
0000514E B904 004F                          7447          LGR   4,15        ; v2
00005152 4120 2008               00000008   7448          LA    2,8(0,2)
                                            7449 * ***                   v3 = XXH64_round(v3, XXH_readLE64(p, endian));\
                                            7450 *  p+=8;
00005156 E320 D0B0 0024          000000B0   7451          STG   2,176(0,13)
0000515C B914 00F8                          7452          LGFR  15,8
00005160 E3F0 D0B8 0024          000000B8   7453          STG   15,184(0,13)
00005166 4110 D0B0               000000B0   7454          LA    1,176(0,13)
0000516A B904 00FB                          7455          LGR   15,11
0000516E                                    7456 @@gen_label404 DS    0H
0000516E 05EF                               7457          BALR  14,15
00005170                                    7458 @@gen_label405 DS    0H
00005170 E350 D0B0 0024          000000B0   7459          STG   5,176(0,13)
00005176 E3F0 D0B8 0024          000000B8   7460          STG   15,184(0,13)
0000517C 4110 D0B0               000000B0   7461          LA    1,176(0,13)
00005180 E3F0 C078 0004          00004F00   7462          LG    15,@lit_803_318 ; XXH64_round
00005186                                    7463 @@gen_label406 DS    0H
00005186 05EF                               7464          BALR  14,15
00005188                                    7465 @@gen_label407 DS    0H
00005188 B904 005F                          7466          LGR   5,15        ; v3
                                                                                                                           Page  149 
  Active Usings: @REGION_803_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000518C 4120 2008               00000008   7467          LA    2,8(0,2)
                                            7468 * ***                   v4 = XXH64_round(v4, XXH_readLE64(p, endian));\
                                            7469 *  p+=8;
00005190 E320 D0B0 0024          000000B0   7470          STG   2,176(0,13)
00005196 B914 00F8                          7471          LGFR  15,8
0000519A E3F0 D0B8 0024          000000B8   7472          STG   15,184(0,13)
000051A0 4110 D0B0               000000B0   7473          LA    1,176(0,13)
000051A4 B904 00FB                          7474          LGR   15,11
000051A8                                    7475 @@gen_label408 DS    0H
000051A8 05EF                               7476          BALR  14,15
000051AA                                    7477 @@gen_label409 DS    0H
000051AA E360 D0B0 0024          000000B0   7478          STG   6,176(0,13)
000051B0 E3F0 D0B8 0024          000000B8   7479          STG   15,184(0,13)
000051B6 4110 D0B0               000000B0   7480          LA    1,176(0,13)
000051BA E3F0 C078 0004          00004F00   7481          LG    15,@lit_803_318 ; XXH64_round
000051C0                                    7482 @@gen_label410 DS    0H
000051C0 05EF                               7483          BALR  14,15
000051C2                                    7484 @@gen_label411 DS    0H
000051C2 B904 006F                          7485          LGR   6,15        ; v4
000051C6 4120 2008               00000008   7486          LA    2,8(0,2)
                                            7487 * ***               } while (p<=limit);
000051CA B920 002A                          7488          CGR   2,10
000051CE 47D0 C254               000050DC   7489          BNH   @L159
                                            7490 * ***
                                            7491 * ***               state->v1 = v1;
000051D2 EB36 7008 0024          00000008   7492          STMG  3,6,8(7)    ; offset of v1 in XXH64_state_s
                                            7493 * ***               state->v2 = v2;
                                            7494 * ***               state->v3 = v3;
                                            7495 * ***               state->v4 = v4;
                                            7496 * ***           }
000051D8                                    7497 @L158    DS    0H
                                            7498 * ***
                                            7499 * ***           if (p < bEnd) {
000051D8 B920 0029                          7500          CGR   2,9
000051DC 47B0 C38A               00005212   7501          BNL   @L162
                                            7502 * ***               XXH_memcpy(state->mem64, p, (size_t)(bEnd-p));
000051E0 41F0 7028               00000028   7503          LA    15,40(0,7)
000051E4 E3F0 D0B0 0024          000000B0   7504          STG   15,176(0,13)
000051EA E320 D0B8 0024          000000B8   7505          STG   2,184(0,13)
000051F0 B904 00F9                          7506          LGR   15,9
000051F4 B909 00F2                          7507          SGR   15,2
000051F8 E3F0 D0C0 0024          000000C0   7508          STG   15,192(0,13)
000051FE 4110 D0B0               000000B0   7509          LA    1,176(0,13)
00005202 E3F0 C068 0004          00004EF0   7510          LG    15,@lit_803_313 ; XXH_memcpy
00005208                                    7511 @@gen_label414 DS    0H
00005208 05EF                               7512          BALR  14,15
0000520A                                    7513 @@gen_label415 DS    0H
                                            7514 * ***               state->memsize = (unsigned)(bEnd-p);
0000520A B909 0092                          7515          SGR   9,2
0000520E 5090 7048               00000048   7516          ST    9,72(0,7)   ; offset of memsize in XXH64_state_s
                                            7517 * ***           }
00005212                                    7518 @L162    DS    0H
                                                                                                                           Page  150 
  Active Usings: @REGION_803_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7519 * ***       }
                                            7520 * ***
                                            7521 * ***       return XXH_OK;
00005212 A7F9 0000               00000000   7522          LGHI  15,0        ; 0
                                            7523 * ***   }
00005216                                    7524 @ret_lab_803 DS 0H
                                            7525 * * **** Start of Epilogue
                                            7526          DCCEPIL
00005216                                    7527+         ds 0h                                                          01-DCCEP
                                            7528+* Epilog
00005216 D707 D088 D088 00000088 00000088   7529+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000521C E3D0 D080 0004          00000080   7530+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005222 E3C0 D090 0004          00000090   7531+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005228 E3B0 C018 0004          00000018   7532+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000522E E3C0 B010 0021          00000010   7533+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005234 E3E0 D008 0004          00000008   7534+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000523A EB1C D020 0004          00000020   7535+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005240 078E                               7536+         bcr 8,14                if same dsab, just return              01-DCCEP
00005242 E3F0 D010 0024          00000010   7537+         stg 15,16(0,13)         save return code                       01-DCCEP
00005248 E300 D018 0024          00000018   7538+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000524E E3F0 D090 0004          00000090   7539+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005254 E3F0 F018 0004          00000018   7540+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000525A 47F0 F040               00000040   7541+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7542+* End of Epilog
                                            7543 * * **** End of Epilogue
                                            7544          DROP  12
                                            7545 *
                                            7546 *   DSECT for automatic variables in "XXH64_update_endian"
                                            7547 *      (FUNCTION #803)
                                            7548 *
00000000                00000000 000000B0   7549 @AUTO#$X$X$H64_update_endian DSECT
00000000                                    7550          DS    XL168
000000A8                                    7551 $X$X$H64_update_endian#v4#4 DS 8XL1 ; v4
000000B0                000000B0 000000A8   7552          ORG   @AUTO#$X$X$H64_update_endian+168
000000A8                                    7553 $X$X$H64_update_endian#v3#4 DS 8XL1 ; v3
000000B0                000000B0 000000A8   7554          ORG   @AUTO#$X$X$H64_update_endian+168
000000A8                                    7555 $X$X$H64_update_endian#v2#4 DS 8XL1 ; v2
000000B0                000000B0 000000A8   7556          ORG   @AUTO#$X$X$H64_update_endian+168
000000A8                                    7557 $X$X$H64_update_endian#v1#4 DS 8XL1 ; v1
                                            7558 *
0000525E                00000000 000059C8   7559 @CODE    CSECT
                                            7560 *
                                            7561 *
                                            7562 *
                                            7563 * ....... start of XXH64_update
                                            7564 $X$X$H64_update ALIAS X'E7E7C8F6F46DA4978481A385'
0000525E                                    7565 @LNAME777 DS   0H
0000525E 0000000C                           7566          DC    X'0000000C'
00005262 E7E7C8F6F46DA497                   7567          DC    C'XXH64_update'
0000526E 00                                 7568          DC    X'00'
                                            7569 $X$X$H64_update DCCPRLG CINDEX=777,BASER=12,FRAME=208,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME777
                                                                                                                           Page  151 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7570          macro
                                            7571          dccextrn &m
                                            7572          gblc    &$dccext(1000)
                                            7573          gbla    &$dccexti
                                            7574          lcla    &i
                                            7575 &$dccext(&$dccexti+1) setc    '&m'
                                            7576 &i       seta    1
                                            7577 .loop    aif    (&i gt &$dccexti).around
                                            7578          aif    ('&$dccext(&i)' eq '&m').getout
                                            7579 &i       seta    &i+1
                                            7580          ago     .loop
                                            7581 .around  anop
                                            7582 &$dccexti seta &$dccexti+1
                                            7583          extrn  &m
                                            7584 .getout  anop
                                            7585          mend
00005270                                    7586+$eye0131    ds    0d                                                    02-DCCCA
00005270 C4C3C3                             7587+         dc cl3'DCC'                                                    02-DCCCA
00005273 01                                 7588+         dc xl1'01' format one                                          02-DCCCA
00005274 00000000                           7589+         dc a(0)                                                        02-DCCCA
00005278 00000000000052E2                   7590+         dc ad(@PER_777)                                                02-DCCCA
00005280 00000000000000D0                   7591+         dc ad(208)                                                     02-DCCCA
00005288 0000000000000000                   7592+         dc ad(0)                                                       02-DCCCA
00005290 0000000000001000                   7593+         dc ad(4096)                                                    02-DCCCA
00005298 20                                 7594+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005299 03                                 7595+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000529A 03                                 7596+         dc al1(3)                                                      02-DCCCA
0000529B 08                                 7597+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000529C 00                                 7598+         dc bl.8'00000000'                                              02-DCCCA
0000529D 000000                             7599+         dc al3(0)                                                      02-DCCCA
000052A0 000000000000525E                   7600+         dc ad(@LNAME777)                                               02-DCCCA
000052A8                                    7601+         ds 0d                                                          02-DCCCA
000052A8 0000000000005270                   7602+         dc ad($eye0131)                                                02-DCCCA
000052B0 0000000000000000                   7603+         dc ad(0)                                                       02-DCCCA
000052B8                                    7604+         ds    0d                                                       01-DCCPR
                                            7605+         entry $X$X$H64_update                                          01-DCCPR
000052B8                                    7606+$X$X$H64_update ds 0d                                                   01-DCCPR
000052B8                                    7607+@REGION_777_1 ds 0h                                                     01-DCCPR
000052B8 EBEC D008 0024          00000008   7608+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000052BE E3E0 D088 0004          00000088   7609+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000052C4 E3C0 D090 0004          00000090   7610+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000052CA B904 002E                          7611+         lgr   2,14                copy addr of our savearea            01-DCCPR
000052CE E3B0 C018 0004          00000018   7612+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000052D4 A7EB 00D0               000000D0   7613+         aghi  14,208              increase by frame size               01-DCCPR
000052D8 E3E0 C020 0021          00000020   7614+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000052DE 4720 B020               00000020   7615+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000052E2                                    7616+@PER_777 ds    0h                                                       01-DCCPR
000052E2 EBDE 2080 0024          00000080   7617+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000052E8 E3C0 2090 0024          00000090   7618+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000052EE B904 00D2                          7619+         lgr   13,2                set real frame pointer               01-DCCPR
000052F2 B904 00CF                          7620+         lgr   12,15               set base reg                         01-DCCPR
                        000052B8            7621+         using @REGION_777_1,12                                         01-DCCPR
                                                                                                                           Page  152 
  Active Usings: @REGION_777_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000052F6 B904 0021                          7622          LGR   2,1         ; ptr to parm area
                                            7623 * ******* End of Prologue
                                            7624 * *
                                            7625 * ***       XXH_endianess endian_detected = (XXH_endianess)XXH_isLittl\
                                            7626 * eEndian();
000052FA E3F0 C098 0004          00005350   7627          LG    15,@lit_777_342 ; XXH_isLittleEndian
00005300                                    7628 @@gen_label416 DS    0H
00005300 05EF                               7629          BALR  14,15
00005302                                    7630 @@gen_label417 DS    0H
                                            7631 * ***
                                            7632 * ***       if ((endian_detected==XXH_littleEndian) || 0)
00005302 A7FE 0001               00000001   7633          CHI   15,1
00005306 4770 C0A8               00005360   7634          BNE   @L163
0000530A                                    7635 @L164    DS    0H
                                            7636 * ***           return XXH64_update_endian(state_in, input, len, XXH_l\
                                            7637 * ittleEndian);
0000530A E3F0 2000 0004          00000000   7638          LG    15,0(0,2)   ; state_in
00005310 E3F0 D0B0 0024          000000B0   7639          STG   15,176(0,13)
00005316 E3F0 2008 0004          00000008   7640          LG    15,8(0,2)   ; input
0000531C E3F0 D0B8 0024          000000B8   7641          STG   15,184(0,13)
00005322 E3F0 2010 0004          00000010   7642          LG    15,16(0,2)  ; len
00005328 E3F0 D0C0 0024          000000C0   7643          STG   15,192(0,13)
0000532E E548 D0C8 0001          000000C8   7644          MVGHI 200(13),1
00005334 4110 D0B0               000000B0   7645          LA    1,176(0,13)
00005338 E3F0 C0A0 0004          00005358   7646          LG    15,@lit_777_343 ; XXH64_update_endian
0000533E                                    7647 @@gen_label419 DS    0H
0000533E 05EF                               7648          BALR  14,15
00005340                                    7649 @@gen_label420 DS    0H
00005340 B914 00FF                          7650          LGFR  15,15
00005344 47F0 C0E2               0000539A   7651          B     @ret_lab_777
00005348                                    7652          DS    0D
00005348 000000D0                           7653 @FRAMESIZE_777 DC F'208'
0000534C 00000000
00005350 0000000000000748                   7654 @lit_777_342 DC AD($X$X$H_is$Little$Endian)
00005358 0000000000004E88                   7655 @lit_777_343 DC AD($X$X$H64_update_endian)
                                            7656 * ***       else
00005360                                    7657 @L163    DS    0H
                                            7658 * ***           return XXH64_update_endian(state_in, input, len, XXH_b\
                                            7659 * igEndian);
00005360 E3F0 2000 0004          00000000   7660          LG    15,0(0,2)   ; state_in
00005366 E3F0 D0B0 0024          000000B0   7661          STG   15,176(0,13)
0000536C E3F0 2008 0004          00000008   7662          LG    15,8(0,2)   ; input
00005372 E3F0 D0B8 0024          000000B8   7663          STG   15,184(0,13)
00005378 E3F0 2010 0004          00000010   7664          LG    15,16(0,2)  ; len
0000537E E3F0 D0C0 0024          000000C0   7665          STG   15,192(0,13)
00005384 D707 D0C8 D0C8 000000C8 000000C8   7666          XC    200(8,13),200(13)
0000538A 4110 D0B0               000000B0   7667          LA    1,176(0,13)
0000538E E3F0 C0A0 0004          00005358   7668          LG    15,@lit_777_343 ; XXH64_update_endian
00005394                                    7669 @@gen_label421 DS    0H
00005394 05EF                               7670          BALR  14,15
00005396                                    7671 @@gen_label422 DS    0H
00005396 B914 00FF                          7672          LGFR  15,15
                                                                                                                           Page  153 
  Active Usings: @REGION_777_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7673 * ***   }
0000539A                                    7674 @ret_lab_777 DS 0H
                                            7675 * * **** Start of Epilogue
                                            7676          DCCEPIL
0000539A                                    7677+         ds 0h                                                          01-DCCEP
                                            7678+* Epilog
0000539A D707 D088 D088 00000088 00000088   7679+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000053A0 E3D0 D080 0004          00000080   7680+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000053A6 E3C0 D090 0004          00000090   7681+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000053AC E3B0 C018 0004          00000018   7682+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000053B2 E3C0 B010 0021          00000010   7683+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000053B8 E3E0 D008 0004          00000008   7684+         lg  14,8(0,13)          load up return address                 01-DCCEP
000053BE EB1C D020 0004          00000020   7685+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000053C4 078E                               7686+         bcr 8,14                if same dsab, just return              01-DCCEP
000053C6 E3F0 D010 0024          00000010   7687+         stg 15,16(0,13)         save return code                       01-DCCEP
000053CC E300 D018 0024          00000018   7688+         stg 0,24(0,13)          save more return code                  01-DCCEP
000053D2 E3F0 D090 0004          00000090   7689+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000053D8 E3F0 F018 0004          00000018   7690+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000053DE 47F0 F040               00000040   7691+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7692+* End of Epilog
                                            7693 * * **** End of Epilogue
                                            7694          DROP  12
                                            7695 *
                                            7696 *   DSECT for automatic variables in "XXH64_update"
                                            7697 *      (FUNCTION #777)
                                            7698 *
00000000                00000000 000000AC   7699 @AUTO#$X$X$H64_update DSECT
00000000                                    7700          DS    XL168
000000A8                                    7701 $X$X$H64_update#endian_detected#0 DS 1F ; endian_detected
                                            7702 *
000053E2                00000000 000059C8   7703 @CODE    CSECT
                                            7704 *
                                            7705 *
                                            7706 *
                                            7707 * ....... start of XXH64_digest_endian
000053E2                                    7708 @LNAME804 DS   0H
000053E2 00000013                           7709          DC    X'00000013'
000053E6 E7E7C8F6F46D8489                   7710          DC    C'XXH64_digest_endian'
000053F9 00                                 7711          DC    X'00'
                                            7712 $X$X$H64_digest_endian DCCPRLG CINDEX=804,BASER=12,FRAME=216,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME804
                                            7713          macro
                                            7714          dccextrn &m
                                            7715          gblc    &$dccext(1000)
                                            7716          gbla    &$dccexti
                                            7717          lcla    &i
                                            7718 &$dccext(&$dccexti+1) setc    '&m'
                                            7719 &i       seta    1
                                            7720 .loop    aif    (&i gt &$dccexti).around
                                            7721          aif    ('&$dccext(&i)' eq '&m').getout
                                            7722 &i       seta    &i+1
                                            7723          ago     .loop
                                                                                                                           Page  154 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7724 .around  anop
                                            7725 &$dccexti seta &$dccexti+1
                                            7726          extrn  &m
                                            7727 .getout  anop
                                            7728          mend
00005400                                    7729+$eye0134    ds    0d                                                    02-DCCCA
00005400 C4C3C3                             7730+         dc cl3'DCC'                                                    02-DCCCA
00005403 01                                 7731+         dc xl1'01' format one                                          02-DCCCA
00005404 00000000                           7732+         dc a(0)                                                        02-DCCCA
00005408 0000000000005472                   7733+         dc ad(@PER_804)                                                02-DCCCA
00005410 00000000000000D8                   7734+         dc ad(216)                                                     02-DCCCA
00005418 0000000000000000                   7735+         dc ad(0)                                                       02-DCCCA
00005420 0000000000001000                   7736+         dc ad(4096)                                                    02-DCCCA
00005428 20                                 7737+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005429 03                                 7738+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000542A 03                                 7739+         dc al1(3)                                                      02-DCCCA
0000542B 08                                 7740+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000542C 00                                 7741+         dc bl.8'00000000'                                              02-DCCCA
0000542D 000000                             7742+         dc al3(0)                                                      02-DCCCA
00005430 00000000000053E2                   7743+         dc ad(@LNAME804)                                               02-DCCCA
00005438                                    7744+         ds 0d                                                          02-DCCCA
00005438 0000000000005400                   7745+         dc ad($eye0134)                                                02-DCCCA
00005440 0000000000000000                   7746+         dc ad(0)                                                       02-DCCCA
00005448                                    7747+         ds    0d                                                       01-DCCPR
00005448                                    7748+$X$X$H64_digest_endian ds 0d                                            01-DCCPR
00005448                                    7749+@REGION_804_1 ds 0h                                                     01-DCCPR
00005448 EBEC D008 0024          00000008   7750+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000544E E3E0 D088 0004          00000088   7751+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005454 E3C0 D090 0004          00000090   7752+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000545A B904 002E                          7753+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000545E E3B0 C018 0004          00000018   7754+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005464 A7EB 00D8               000000D8   7755+         aghi  14,216              increase by frame size               01-DCCPR
00005468 E3E0 C020 0021          00000020   7756+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000546E 4720 B020               00000020   7757+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005472                                    7758+@PER_804 ds    0h                                                       01-DCCPR
00005472 EBDE 2080 0024          00000080   7759+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005478 E3C0 2090 0024          00000090   7760+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000547E B904 00D2                          7761+         lgr   13,2                set real frame pointer               01-DCCPR
00005482 B904 00CF                          7762+         lgr   12,15               set base reg                         01-DCCPR
                        00005448            7763+         using @REGION_804_1,12                                         01-DCCPR
00005486 B904 0061                          7764          LGR   6,1         ; ptr to parm area
                                            7765 * ******* End of Prologue
                                            7766 * *
0000548A E320 6000 0004          00000000   7767          LG    2,0(0,6)    ; state
                                            7768 * ***       U64 h64;
                                            7769 * ***
                                            7770 * ***       if (state->total_len >= 32) {
00005490 E559 2000 0020          00000000   7771          CLGHSI 0(2),32
00005496 4740 C130               00005578   7772          BL    @L166
                                            7773 * ***           U64 const v1 = state->v1;
0000549A E3F0 2008 0004          00000008   7774          LG    15,8(0,2)   ; offset of v1 in XXH64_state_s
                                            7775 * ***           U64 const v2 = state->v2;
                                                                                                                           Page  155 
  Active Usings: @REGION_804_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000054A0 EB35 2010 0004          00000010   7776          LMG   3,5,16(2)   ; offset of v2 in XXH64_state_s
                                            7777 * ***           U64 const v3 = state->v3;
                                            7778 * ***           U64 const v4 = state->v4;
                                            7779 * ***
                                            7780 * ***           h64 = ((v1 << 1) | (v1 >> (64 - 1))) + ((v2 << 7) | (v\
                                            7781 * 2 >> (64 - 7))) + ((v3 << 12) | (v3 >> (64 - 12))) + ((v4 << 18) | (\
                                            7782 * v4 >> (64 - 18)));
000054A6 EB1F 0001 000D          00000001   7783          SLLG  1,15,1(0)
000054AC EB7F 003F 000C          0000003F   7784          SRLG  7,15,63(0)
000054B2 B981 0017                          7785          OGR   1,7
000054B6 EB73 0007 000D          00000007   7786          SLLG  7,3,7(0)
000054BC EB83 0039 000C          00000039   7787          SRLG  8,3,57(0)
000054C2 B981 0078                          7788          OGR   7,8
000054C6 B90A 0017                          7789          ALGR  1,7
000054CA EB74 000C 000D          0000000C   7790          SLLG  7,4,12(0)
000054D0 EB84 0034 000C          00000034   7791          SRLG  8,4,52(0)
000054D6 B981 0078                          7792          OGR   7,8
000054DA B90A 0017                          7793          ALGR  1,7
000054DE EB75 0012 000D          00000012   7794          SLLG  7,5,18(0)
000054E4 EB85 002E 000C          0000002E   7795          SRLG  8,5,46(0)
000054EA B981 0078                          7796          OGR   7,8
000054EE B90A 0017                          7797          ALGR  1,7
                                            7798 * ***           h64 = XXH64_mergeRound(h64, v1);
000054F2 E310 D0B0 0024          000000B0   7799          STG   1,176(0,13)
000054F8 E3F0 D0B8 0024          000000B8   7800          STG   15,184(0,13)
000054FE 4110 D0B0               000000B0   7801          LA    1,176(0,13)
00005502 E370 C118 0004          00005560   7802          LG    7,@lit_804_346 ; XXH64_mergeRound
00005508 B904 00F7                          7803          LGR   15,7
0000550C                                    7804 @@gen_label424 DS    0H
0000550C 05EF                               7805          BALR  14,15
0000550E                                    7806 @@gen_label425 DS    0H
                                            7807 * ***           h64 = XXH64_mergeRound(h64, v2);
0000550E E3F0 D0B0 0024          000000B0   7808          STG   15,176(0,13)
00005514 E330 D0B8 0024          000000B8   7809          STG   3,184(0,13)
0000551A 4110 D0B0               000000B0   7810          LA    1,176(0,13)
0000551E B904 00F7                          7811          LGR   15,7
00005522                                    7812 @@gen_label426 DS    0H
00005522 05EF                               7813          BALR  14,15
00005524                                    7814 @@gen_label427 DS    0H
                                            7815 * ***           h64 = XXH64_mergeRound(h64, v3);
00005524 E3F0 D0B0 0024          000000B0   7816          STG   15,176(0,13)
0000552A E340 D0B8 0024          000000B8   7817          STG   4,184(0,13)
00005530 4110 D0B0               000000B0   7818          LA    1,176(0,13)
00005534 B904 00F7                          7819          LGR   15,7
00005538                                    7820 @@gen_label428 DS    0H
00005538 05EF                               7821          BALR  14,15
0000553A                                    7822 @@gen_label429 DS    0H
                                            7823 * ***           h64 = XXH64_mergeRound(h64, v4);
0000553A E3F0 D0B0 0024          000000B0   7824          STG   15,176(0,13)
00005540 E350 D0B8 0024          000000B8   7825          STG   5,184(0,13)
00005546 4110 D0B0               000000B0   7826          LA    1,176(0,13)
0000554A B904 00F7                          7827          LGR   15,7
                                                                                                                           Page  156 
  Active Usings: @REGION_804_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000554E                                    7828 @@gen_label430 DS    0H
0000554E 05EF                               7829          BALR  14,15
00005550                                    7830 @@gen_label431 DS    0H
                                            7831 * ***       } else {
00005550 47F0 C142               0000558A   7832          B     @L167
00005558                                    7833          DS    0D
00005558 000000D8                           7834 @FRAMESIZE_804 DC F'216'
0000555C 00000000
00005560 0000000000003068                   7835 @lit_804_346 DC AD($X$X$H64_merge$Round)
00005568 00000000000059C8                   7836 @lit_804_350 DC AD(@DATA)
00005570 0000000000003268                   7837 @lit_804_351 DC AD($X$X$H64_finalize)
00005578                                    7838 @L166    DS    0H
                                            7839 * ***           h64  = state->v3  + PRIME64_5;
00005578 E3F0 2018 0004          00000018   7840          LG    15,24(0,2)  ; offset of v3 in XXH64_state_s
0000557E E310 C120 0004          00005568   7841          LG    1,@lit_804_350
00005584 E3F0 1090 000A          00000090   7842          ALG   15,144(0,1)
                                            7843 * ***       }
0000558A                                    7844 @L167    DS    0H
                                            7845 * ***
                                            7846 * ***       h64 += (U64) state->total_len;
0000558A E3F0 2000 000A          00000000   7847          ALG   15,0(0,2)
                                            7848 * ***
                                            7849 * ***       return XXH64_finalize(h64, state->mem64, (size_t)state->to\
                                            7850 * tal_len, endian, XXH_aligned);
00005590 E3F0 D0B0 0024          000000B0   7851          STG   15,176(0,13)
00005596 41F0 2028               00000028   7852          LA    15,40(0,2)
0000559A E3F0 D0B8 0024          000000B8   7853          STG   15,184(0,13)
000055A0 E3F0 2000 0004          00000000   7854          LG    15,0(0,2)
000055A6 E3F0 D0C0 0024          000000C0   7855          STG   15,192(0,13)
000055AC E3F0 600C 0014          0000000C   7856          LGF   15,12(0,6)  ; endian
000055B2 E3F0 D0C8 0024          000000C8   7857          STG   15,200(0,13)
000055B8 D707 D0D0 D0D0 000000D0 000000D0   7858          XC    208(8,13),208(13)
000055BE 4110 D0B0               000000B0   7859          LA    1,176(0,13)
000055C2 E3F0 C128 0004          00005570   7860          LG    15,@lit_804_351 ; XXH64_finalize
000055C8                                    7861 @@gen_label432 DS    0H
000055C8 05EF                               7862          BALR  14,15
000055CA                                    7863 @@gen_label433 DS    0H
                                            7864 * ***   }
                                            7865 * * **** Start of Epilogue
                                            7866          DCCEPIL
000055CA                                    7867+         ds 0h                                                          01-DCCEP
                                            7868+* Epilog
000055CA D707 D088 D088 00000088 00000088   7869+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000055D0 E3D0 D080 0004          00000080   7870+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000055D6 E3C0 D090 0004          00000090   7871+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000055DC E3B0 C018 0004          00000018   7872+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000055E2 E3C0 B010 0021          00000010   7873+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000055E8 E3E0 D008 0004          00000008   7874+         lg  14,8(0,13)          load up return address                 01-DCCEP
000055EE EB1C D020 0004          00000020   7875+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000055F4 078E                               7876+         bcr 8,14                if same dsab, just return              01-DCCEP
000055F6 E3F0 D010 0024          00000010   7877+         stg 15,16(0,13)         save return code                       01-DCCEP
000055FC E300 D018 0024          00000018   7878+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page  157 
  Active Usings: @REGION_804_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005602 E3F0 D090 0004          00000090   7879+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005608 E3F0 F018 0004          00000018   7880+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000560E 47F0 F040               00000040   7881+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7882+* End of Epilog
                                            7883 * * **** End of Epilogue
                                            7884          DROP  12
                                            7885 *
                                            7886 *   DSECT for automatic variables in "XXH64_digest_endian"
                                            7887 *      (FUNCTION #804)
                                            7888 *
00000000                00000000 000000B0   7889 @AUTO#$X$X$H64_digest_endian DSECT
00000000                                    7890          DS    XL168
000000A8                                    7891 $X$X$H64_digest_endian#v4#1 DS 8XL1 ; v4
000000B0                000000B0 000000A8   7892          ORG   @AUTO#$X$X$H64_digest_endian+168
000000A8                                    7893 $X$X$H64_digest_endian#v3#1 DS 8XL1 ; v3
000000B0                000000B0 000000A8   7894          ORG   @AUTO#$X$X$H64_digest_endian+168
000000A8                                    7895 $X$X$H64_digest_endian#v2#1 DS 8XL1 ; v2
000000B0                000000B0 000000A8   7896          ORG   @AUTO#$X$X$H64_digest_endian+168
000000A8                                    7897 $X$X$H64_digest_endian#v1#1 DS 8XL1 ; v1
000000B0                000000B0 000000A8   7898          ORG   @AUTO#$X$X$H64_digest_endian+168
000000A8                                    7899 $X$X$H64_digest_endian#h64#0 DS 8XL1 ; h64
                                            7900 *
00005612                00000000 000059C8   7901 @CODE    CSECT
                                            7902 *
                                            7903 *
                                            7904 *
                                            7905 * ....... start of XXH64_digest
                                            7906 $X$X$H64_digest ALIAS X'E7E7C8F6F46D84898785A2A3'
00005612                                    7907 @LNAME778 DS   0H
00005612 0000000C                           7908          DC    X'0000000C'
00005616 E7E7C8F6F46D8489                   7909          DC    C'XXH64_digest'
00005622 00                                 7910          DC    X'00'
                                            7911 $X$X$H64_digest DCCPRLG CINDEX=778,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME778
                                            7912          macro
                                            7913          dccextrn &m
                                            7914          gblc    &$dccext(1000)
                                            7915          gbla    &$dccexti
                                            7916          lcla    &i
                                            7917 &$dccext(&$dccexti+1) setc    '&m'
                                            7918 &i       seta    1
                                            7919 .loop    aif    (&i gt &$dccexti).around
                                            7920          aif    ('&$dccext(&i)' eq '&m').getout
                                            7921 &i       seta    &i+1
                                            7922          ago     .loop
                                            7923 .around  anop
                                            7924 &$dccexti seta &$dccexti+1
                                            7925          extrn  &m
                                            7926 .getout  anop
                                            7927          mend
00005628                                    7928+$eye0137    ds    0d                                                    02-DCCCA
00005628 C4C3C3                             7929+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page  158 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000562B 01                                 7930+         dc xl1'01' format one                                          02-DCCCA
0000562C 00000000                           7931+         dc a(0)                                                        02-DCCCA
00005630 000000000000569A                   7932+         dc ad(@PER_778)                                                02-DCCCA
00005638 00000000000000C0                   7933+         dc ad(192)                                                     02-DCCCA
00005640 0000000000000000                   7934+         dc ad(0)                                                       02-DCCCA
00005648 0000000000001000                   7935+         dc ad(4096)                                                    02-DCCCA
00005650 20                                 7936+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005651 03                                 7937+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005652 03                                 7938+         dc al1(3)                                                      02-DCCCA
00005653 08                                 7939+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005654 00                                 7940+         dc bl.8'00000000'                                              02-DCCCA
00005655 000000                             7941+         dc al3(0)                                                      02-DCCCA
00005658 0000000000005612                   7942+         dc ad(@LNAME778)                                               02-DCCCA
00005660                                    7943+         ds 0d                                                          02-DCCCA
00005660 0000000000005628                   7944+         dc ad($eye0137)                                                02-DCCCA
00005668 0000000000000000                   7945+         dc ad(0)                                                       02-DCCCA
00005670                                    7946+         ds    0d                                                       01-DCCPR
                                            7947+         entry $X$X$H64_digest                                          01-DCCPR
00005670                                    7948+$X$X$H64_digest ds 0d                                                   01-DCCPR
00005670                                    7949+@REGION_778_1 ds 0h                                                     01-DCCPR
00005670 EBEC D008 0024          00000008   7950+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005676 E3E0 D088 0004          00000088   7951+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000567C E3C0 D090 0004          00000090   7952+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005682 B904 002E                          7953+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005686 E3B0 C018 0004          00000018   7954+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000568C A7EB 00C0               000000C0   7955+         aghi  14,192              increase by frame size               01-DCCPR
00005690 E3E0 C020 0021          00000020   7956+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005696 4720 B020               00000020   7957+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000569A                                    7958+@PER_778 ds    0h                                                       01-DCCPR
0000569A EBDE 2080 0024          00000080   7959+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000056A0 E3C0 2090 0024          00000090   7960+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000056A6 B904 00D2                          7961+         lgr   13,2                set real frame pointer               01-DCCPR
000056AA B904 00CF                          7962+         lgr   12,15               set base reg                         01-DCCPR
                        00005670            7963+         using @REGION_778_1,12                                         01-DCCPR
000056AE B904 0021                          7964          LGR   2,1         ; ptr to parm area
                                            7965 * ******* End of Prologue
                                            7966 * *
                                            7967 * ***       XXH_endianess endian_detected = (XXH_endianess)XXH_isLittl\
                                            7968 * eEndian();
000056B2 E3F0 C080 0004          000056F0   7969          LG    15,@lit_778_353 ; XXH_isLittleEndian
000056B8                                    7970 @@gen_label434 DS    0H
000056B8 05EF                               7971          BALR  14,15
000056BA                                    7972 @@gen_label435 DS    0H
                                            7973 * ***
                                            7974 * ***       if ((endian_detected==XXH_littleEndian) || 0)
000056BA A7FE 0001               00000001   7975          CHI   15,1
000056BE 4770 C090               00005700   7976          BNE   @L168
000056C2                                    7977 @L169    DS    0H
                                            7978 * ***           return XXH64_digest_endian(state_in, XXH_littleEndian)\
                                            7979 * ;
000056C2 E3F0 2000 0004          00000000   7980          LG    15,0(0,2)   ; state_in
000056C8 E3F0 D0B0 0024          000000B0   7981          STG   15,176(0,13)
                                                                                                                           Page  159 
  Active Usings: @REGION_778_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000056CE E548 D0B8 0001          000000B8   7982          MVGHI 184(13),1
000056D4 4110 D0B0               000000B0   7983          LA    1,176(0,13)
000056D8 E3F0 C088 0004          000056F8   7984          LG    15,@lit_778_354 ; XXH64_digest_endian
000056DE                                    7985 @@gen_label437 DS    0H
000056DE 05EF                               7986          BALR  14,15
000056E0                                    7987 @@gen_label438 DS    0H
000056E0 47F0 C0AE               0000571E   7988          B     @ret_lab_778
000056E8                                    7989          DS    0D
000056E8 000000C0                           7990 @FRAMESIZE_778 DC F'192'
000056EC 00000000
000056F0 0000000000000748                   7991 @lit_778_353 DC AD($X$X$H_is$Little$Endian)
000056F8 0000000000005448                   7992 @lit_778_354 DC AD($X$X$H64_digest_endian)
                                            7993 * ***       else
00005700                                    7994 @L168    DS    0H
                                            7995 * ***           return XXH64_digest_endian(state_in, XXH_bigEndian);
00005700 E3F0 2000 0004          00000000   7996          LG    15,0(0,2)   ; state_in
00005706 E3F0 D0B0 0024          000000B0   7997          STG   15,176(0,13)
0000570C D707 D0B8 D0B8 000000B8 000000B8   7998          XC    184(8,13),184(13)
00005712 4110 D0B0               000000B0   7999          LA    1,176(0,13)
00005716 E3F0 C088 0004          000056F8   8000          LG    15,@lit_778_354 ; XXH64_digest_endian
0000571C                                    8001 @@gen_label439 DS    0H
0000571C 05EF                               8002          BALR  14,15
0000571E                                    8003 @@gen_label440 DS    0H
                                            8004 * ***   }
0000571E                                    8005 @ret_lab_778 DS 0H
                                            8006 * * **** Start of Epilogue
                                            8007          DCCEPIL
0000571E                                    8008+         ds 0h                                                          01-DCCEP
                                            8009+* Epilog
0000571E D707 D088 D088 00000088 00000088   8010+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005724 E3D0 D080 0004          00000080   8011+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000572A E3C0 D090 0004          00000090   8012+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005730 E3B0 C018 0004          00000018   8013+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005736 E3C0 B010 0021          00000010   8014+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000573C E3E0 D008 0004          00000008   8015+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005742 EB1C D020 0004          00000020   8016+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005748 078E                               8017+         bcr 8,14                if same dsab, just return              01-DCCEP
0000574A E3F0 D010 0024          00000010   8018+         stg 15,16(0,13)         save return code                       01-DCCEP
00005750 E300 D018 0024          00000018   8019+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005756 E3F0 D090 0004          00000090   8020+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000575C E3F0 F018 0004          00000018   8021+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005762 47F0 F040               00000040   8022+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8023+* End of Epilog
                                            8024 * * **** End of Epilogue
                                            8025          DROP  12
                                            8026 *
                                            8027 *   DSECT for automatic variables in "XXH64_digest"
                                            8028 *      (FUNCTION #778)
                                            8029 *
00000000                00000000 000000AC   8030 @AUTO#$X$X$H64_digest DSECT
00000000                                    8031          DS    XL168
000000A8                                    8032 $X$X$H64_digest#endian_detected#0 DS 1F ; endian_detected
                                                                                                                           Page  160 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8033 *
00005766                00000000 000059C8   8034 @CODE    CSECT
                                            8035 *
                                            8036 *
                                            8037 *
                                            8038 * ....... start of XXH64_canonicalFromHash
                                            8039 $X$X$H64_canonical$From$Hash ALIAS X'E7E7C8F6F46D838195969589838193C699*
                                                                9694C881A288'
00005766                                    8040 @LNAME779 DS   0H
00005766 00000017                           8041          DC    X'00000017'
0000576A E7E7C8F6F46D8381                   8042          DC    C'XXH64_canonicalFromHash'
00005781 00                                 8043          DC    X'00'
                                            8044 $X$X$H64_canonical$From$Hash DCCPRLG CINDEX=779,BASER=12,FRAME=176,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME779
                                            8045          macro
                                            8046          dccextrn &m
                                            8047          gblc    &$dccext(1000)
                                            8048          gbla    &$dccexti
                                            8049          lcla    &i
                                            8050 &$dccext(&$dccexti+1) setc    '&m'
                                            8051 &i       seta    1
                                            8052 .loop    aif    (&i gt &$dccexti).around
                                            8053          aif    ('&$dccext(&i)' eq '&m').getout
                                            8054 &i       seta    &i+1
                                            8055          ago     .loop
                                            8056 .around  anop
                                            8057 &$dccexti seta &$dccexti+1
                                            8058          extrn  &m
                                            8059 .getout  anop
                                            8060          mend
00005788                                    8061+$eye0140    ds    0d                                                    02-DCCCA
00005788 C4C3C3                             8062+         dc cl3'DCC'                                                    02-DCCCA
0000578B 01                                 8063+         dc xl1'01' format one                                          02-DCCCA
0000578C 00000000                           8064+         dc a(0)                                                        02-DCCCA
00005790 00000000000057FA                   8065+         dc ad(@PER_779)                                                02-DCCCA
00005798 00000000000000B0                   8066+         dc ad(176)                                                     02-DCCCA
000057A0 0000000000000000                   8067+         dc ad(0)                                                       02-DCCCA
000057A8 0000000000001000                   8068+         dc ad(4096)                                                    02-DCCCA
000057B0 20                                 8069+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000057B1 03                                 8070+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000057B2 03                                 8071+         dc al1(3)                                                      02-DCCCA
000057B3 08                                 8072+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000057B4 00                                 8073+         dc bl.8'00000000'                                              02-DCCCA
000057B5 000000                             8074+         dc al3(0)                                                      02-DCCCA
000057B8 0000000000005766                   8075+         dc ad(@LNAME779)                                               02-DCCCA
000057C0                                    8076+         ds 0d                                                          02-DCCCA
000057C0 0000000000005788                   8077+         dc ad($eye0140)                                                02-DCCCA
000057C8 0000000000000000                   8078+         dc ad(0)                                                       02-DCCCA
000057D0                                    8079+         ds    0d                                                       01-DCCPR
                                            8080+         entry $X$X$H64_canonical$From$Hash                             01-DCCPR
000057D0                                    8081+$X$X$H64_canonical$From$Hash ds 0d                                      01-DCCPR
000057D0                                    8082+@REGION_779_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page  161 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000057D0 EBEC D008 0024          00000008   8083+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000057D6 E3E0 D088 0004          00000088   8084+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000057DC E3C0 D090 0004          00000090   8085+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000057E2 B904 002E                          8086+         lgr   2,14                copy addr of our savearea            01-DCCPR
000057E6 E3B0 C018 0004          00000018   8087+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000057EC A7EB 00B0               000000B0   8088+         aghi  14,176              increase by frame size               01-DCCPR
000057F0 E3E0 C020 0021          00000020   8089+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000057F6 4720 B020               00000020   8090+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000057FA                                    8091+@PER_779 ds    0h                                                       01-DCCPR
000057FA EBDE 2080 0024          00000080   8092+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005800 E3C0 2090 0024          00000090   8093+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005806 B904 00D2                          8094+         lgr   13,2                set real frame pointer               01-DCCPR
0000580A B904 00CF                          8095+         lgr   12,15               set base reg                         01-DCCPR
                        000057D0            8096+         using @REGION_779_1,12                                         01-DCCPR
0000580E B904 0021                          8097          LGR   2,1         ; ptr to parm area
                                            8098 * ******* End of Prologue
                                            8099 * *
                                            8100 * ***       { enum { XXH_sa = 1/(int)(!!(sizeof(XXH64_canonical_t) == \
                                            8101 * sizeof(XXH64_hash_t))) }; };
                                            8102 * ***       if (XXH_isLittleEndian()) hash = XXH_swap64(hash);
00005812 E3F0 C0D0 0004          000058A0   8103          LG    15,@lit_779_357 ; XXH_isLittleEndian
00005818                                    8104 @@gen_label441 DS    0H
00005818 05EF                               8105          BALR  14,15
0000581A                                    8106 @@gen_label442 DS    0H
0000581A 12FF                               8107          LTR   15,15
0000581C 4780 C06E               0000583E   8108          BZ    @L171
00005820 E3F0 2008 0004          00000008   8109          LG    15,8(0,2)   ; hash
00005826 E3F0 D0A8 0024          000000A8   8110          STG   15,168(0,13)
0000582C 4110 D0A8               000000A8   8111          LA    1,168(0,13)
00005830 E3F0 C0D8 0004          000058A8   8112          LG    15,@lit_779_358 ; XXH_swap64
00005836                                    8113 @@gen_label444 DS    0H
00005836 05EF                               8114          BALR  14,15
00005838                                    8115 @@gen_label445 DS    0H
00005838 E3F0 2008 0024          00000008   8116          STG   15,8(0,2)   ; hash
0000583E                                    8117 @L171    DS    0H
                                            8118 * ***       __memcpy(dst,&hash,sizeof(*dst));
0000583E 41F0 2008               00000008   8119          LA    15,8(0,2)
00005842 E310 2000 0004          00000000   8120          LG    1,0(0,2)
00005848 D207 1000 F000 00000000 00000000   8121          MVC   0(8,1),0(15)
                                            8122 * ***   }
0000584E                                    8123 @ret_lab_779 DS 0H
                                            8124 * * **** Start of Epilogue
                                            8125          DCCEPIL
0000584E                                    8126+         ds 0h                                                          01-DCCEP
                                            8127+* Epilog
0000584E D707 D088 D088 00000088 00000088   8128+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005854 E3D0 D080 0004          00000080   8129+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000585A E3C0 D090 0004          00000090   8130+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005860 E3B0 C018 0004          00000018   8131+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005866 E3C0 B010 0021          00000010   8132+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000586C E3E0 D008 0004          00000008   8133+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005872 EB1C D020 0004          00000020   8134+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  162 
  Active Usings: @REGION_779_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005878 078E                               8135+         bcr 8,14                if same dsab, just return              01-DCCEP
0000587A E3F0 D010 0024          00000010   8136+         stg 15,16(0,13)         save return code                       01-DCCEP
00005880 E300 D018 0024          00000018   8137+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005886 E3F0 D090 0004          00000090   8138+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000588C E3F0 F018 0004          00000018   8139+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005892 47F0 F040               00000040   8140+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8141+* End of Epilog
                                            8142 * * **** End of Epilogue
00005898                                    8143          DS    0D
00005898 000000B0                           8144 @FRAMESIZE_779 DC F'176'
0000589C 00000000
000058A0 0000000000000748                   8145 @lit_779_357 DC AD($X$X$H_is$Little$Endian)
000058A8 0000000000002A70                   8146 @lit_779_358 DC AD($X$X$H_swap64)
                                            8147          DROP  12
                                            8148 *
                                            8149 *   DSECT for automatic variables in "XXH64_canonicalFromHash"
                                            8150 *      (FUNCTION #779)
                                            8151 *
00000000                00000000 000000A8   8152 @AUTO#$X$X$H64_canonical$From$Hash DSECT
00000000                                    8153          DS    XL168
                                            8154 *
000058B0                00000000 000059C8   8155 @CODE    CSECT
                                            8156 *
                                            8157 *
                                            8158 *
                                            8159 * ....... start of XXH64_hashFromCanonical
                                            8160 $X$X$H64_hash$From$Canonical ALIAS X'E7E7C8F6F46D8881A288C6999694C38195*
                                                                969589838193'
000058B0                                    8161 @LNAME780 DS   0H
000058B0 00000017                           8162          DC    X'00000017'
000058B4 E7E7C8F6F46D8881                   8163          DC    C'XXH64_hashFromCanonical'
000058CB 00                                 8164          DC    X'00'
                                            8165 $X$X$H64_hash$From$Canonical DCCPRLG CINDEX=780,BASER=12,FRAME=176,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME780
                                            8166          macro
                                            8167          dccextrn &m
                                            8168          gblc    &$dccext(1000)
                                            8169          gbla    &$dccexti
                                            8170          lcla    &i
                                            8171 &$dccext(&$dccexti+1) setc    '&m'
                                            8172 &i       seta    1
                                            8173 .loop    aif    (&i gt &$dccexti).around
                                            8174          aif    ('&$dccext(&i)' eq '&m').getout
                                            8175 &i       seta    &i+1
                                            8176          ago     .loop
                                            8177 .around  anop
                                            8178 &$dccexti seta &$dccexti+1
                                            8179          extrn  &m
                                            8180 .getout  anop
                                            8181          mend
000058D0                                    8182+$eye0143    ds    0d                                                    02-DCCCA
000058D0 C4C3C3                             8183+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page  163 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000058D3 01                                 8184+         dc xl1'01' format one                                          02-DCCCA
000058D4 00000000                           8185+         dc a(0)                                                        02-DCCCA
000058D8 0000000000005942                   8186+         dc ad(@PER_780)                                                02-DCCCA
000058E0 00000000000000B0                   8187+         dc ad(176)                                                     02-DCCCA
000058E8 0000000000000000                   8188+         dc ad(0)                                                       02-DCCCA
000058F0 0000000000001000                   8189+         dc ad(4096)                                                    02-DCCCA
000058F8 20                                 8190+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000058F9 03                                 8191+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000058FA 03                                 8192+         dc al1(3)                                                      02-DCCCA
000058FB 08                                 8193+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000058FC 00                                 8194+         dc bl.8'00000000'                                              02-DCCCA
000058FD 000000                             8195+         dc al3(0)                                                      02-DCCCA
00005900 00000000000058B0                   8196+         dc ad(@LNAME780)                                               02-DCCCA
00005908                                    8197+         ds 0d                                                          02-DCCCA
00005908 00000000000058D0                   8198+         dc ad($eye0143)                                                02-DCCCA
00005910 0000000000000000                   8199+         dc ad(0)                                                       02-DCCCA
00005918                                    8200+         ds    0d                                                       01-DCCPR
                                            8201+         entry $X$X$H64_hash$From$Canonical                             01-DCCPR
00005918                                    8202+$X$X$H64_hash$From$Canonical ds 0d                                      01-DCCPR
00005918                                    8203+@REGION_780_1 ds 0h                                                     01-DCCPR
00005918 EBEC D008 0024          00000008   8204+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000591E E3E0 D088 0004          00000088   8205+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005924 E3C0 D090 0004          00000090   8206+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000592A B904 002E                          8207+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000592E E3B0 C018 0004          00000018   8208+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005934 A7EB 00B0               000000B0   8209+         aghi  14,176              increase by frame size               01-DCCPR
00005938 E3E0 C020 0021          00000020   8210+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000593E 4720 B020               00000020   8211+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005942                                    8212+@PER_780 ds    0h                                                       01-DCCPR
00005942 EBDE 2080 0024          00000080   8213+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005948 E3C0 2090 0024          00000090   8214+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000594E B904 00D2                          8215+         lgr   13,2                set real frame pointer               01-DCCPR
00005952 B904 00CF                          8216+         lgr   12,15               set base reg                         01-DCCPR
                        00005918            8217+         using @REGION_780_1,12                                         01-DCCPR
                                            8218 * ******* End of Prologue
                                            8219 * *
                                            8220 * ***       return XXH_readBE64(src);
00005956 E3F0 1000 0004          00000000   8221          LG    15,0(0,1)   ; src
0000595C E3F0 D0A8 0024          000000A8   8222          STG   15,168(0,13)
00005962 4110 D0A8               000000A8   8223          LA    1,168(0,13)
00005966 E3F0 C0A8 0004          000059C0   8224          LG    15,@lit_780_360 ; XXH_readBE64
0000596C                                    8225 @@gen_label446 DS    0H
0000596C 05EF                               8226          BALR  14,15
0000596E                                    8227 @@gen_label447 DS    0H
                                            8228 * ***   }
                                            8229 * * **** Start of Epilogue
                                            8230          DCCEPIL
0000596E                                    8231+         ds 0h                                                          01-DCCEP
                                            8232+* Epilog
0000596E D707 D088 D088 00000088 00000088   8233+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005974 E3D0 D080 0004          00000080   8234+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000597A E3C0 D090 0004          00000090   8235+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page  164 
  Active Usings: @REGION_780_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005980 E3B0 C018 0004          00000018   8236+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005986 E3C0 B010 0021          00000010   8237+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000598C E3E0 D008 0004          00000008   8238+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005992 EB1C D020 0004          00000020   8239+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005998 078E                               8240+         bcr 8,14                if same dsab, just return              01-DCCEP
0000599A E3F0 D010 0024          00000010   8241+         stg 15,16(0,13)         save return code                       01-DCCEP
000059A0 E300 D018 0024          00000018   8242+         stg 0,24(0,13)          save more return code                  01-DCCEP
000059A6 E3F0 D090 0004          00000090   8243+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000059AC E3F0 F018 0004          00000018   8244+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000059B2 47F0 F040               00000040   8245+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8246+* End of Epilog
                                            8247 * * **** End of Epilogue
000059B8                                    8248          DS    0D
000059B8 000000B0                           8249 @FRAMESIZE_780 DC F'176'
000059BC 00000000
000059C0 0000000000002E50                   8250 @lit_780_360 DC AD($X$X$H_read$B$E64)
                                            8251          DROP  12
                                            8252 *
                                            8253 *   DSECT for automatic variables in "XXH64_hashFromCanonical"
                                            8254 *      (FUNCTION #780)
                                            8255 *
00000000                00000000 000000A8   8256 @AUTO#$X$X$H64_hash$From$Canonical DSECT
00000000                                    8257          DS    XL168
                                            8258 *
000059C8                00000000 000059C8   8259 @CODE    CSECT
                                            8260 @@STATIC ALIAS X'7C9984A7A78881A28850'
                                            8261 @@STATIC DXD   64D
                                            8262 *
                                            8263 *  Non-Re-Entrant Data Section
                                            8264 *
000059C8                000059C8 000000F2   8265 @DATA    CSECT
                                            8266 @DATA    RMODE ANY
                                            8267 @DATA    AMODE ANY
000059C8 99846D8381939396                   8268 @@T349   DC    X'99846D838193939683'               rd.calloc
000059D1 00                                 8269          DC    1X'00'
000059D2 99846D9481939396                   8270 @@T34D   DC    X'99846D948193939683'               rd.malloc
000059DB 00                                 8271          DC    1X'00'
000059DC 99846D9985819393                   8272 @@T352   DC    X'99846D99858193939683'             rd.realloc
000059E6 0000                               8273          DC    2X'00'
000059E8 99846DA2A39984A4                   8274 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
000059F1 00                                 8275          DC    1X'00'
000059F2 99846DA2A3999584                   8276 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
000059FC 0000                               8277          DC    2X'00'
000059FE 99846D9985868395                   8278 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00005A0C 00000000                           8279          DC    4X'00'
00005A10 9E3779B1                           8280 $P$R$I$M$E32_1 DC    X'9E3779B1'                   ....
00005A14 85EBCA77                           8281 $P$R$I$M$E32_2 DC    X'85EBCA77'                   e...
00005A18 C2B2AE3D                           8282 $P$R$I$M$E32_3 DC    X'C2B2AE3D'                   B...
00005A1C 27D4EB2F                           8283 $P$R$I$M$E32_4 DC    X'27D4EB2F'                   .M..
00005A20 165667B1                           8284 $P$R$I$M$E32_5 DC    X'165667B1'                   ....
00005A24 E7E7C8F3F26D8689                   8285 @@T3A5   DC    X'E7E7C8F3F26D868995819389A985'     XXH32.finalize
00005A32 000000000000                       8286          DC    6X'00'
                                                                                                                           Page  165 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005A38 9E3779B185EBCA87                   8287 $P$R$I$M$E64_1 DC    X'9E3779B185EBCA87'           ....e..g
00005A40 C2B2AE3D27D4EB4F                   8288 $P$R$I$M$E64_2 DC    X'C2B2AE3D27D4EB4F'           B....M..
00005A48 165667B19E3779F9                   8289 $P$R$I$M$E64_3 DC    X'165667B19E3779F9'           .......9
00005A50 85EBCA77C2B2AE63                   8290 $P$R$I$M$E64_4 DC    X'85EBCA77C2B2AE63'           e...B...
00005A58 27D4EB2F165667C5                   8291 $P$R$I$M$E64_5 DC    X'27D4EB2F165667C5'           .M.....E
00005A60 E7E7C8F6F46D8689                   8292 @@T415   DC    X'E7E7C8F6F46D868995819389A985'     XXH64.finalize
00005A6E 00                                 8293          DC    1X'00'
00005A70                                    8294 @strings@ DS   0H
00005A70 C37AE081A2879281                   8295          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00005A80 849281869281E0A2                   8296          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00005A90 9700C37AE081A287                   8297          DC    X'9700C37AE081A2879281869281E09389' p.C..asgkafka.li
00005AA0 8299849281869281                   8298          DC    X'8299849281869281E0A29983E09984A7' brdkafka.src.rdx
00005AB0 A78881A2884B8300                   8299          DC    X'A78881A2884B8300F000'             xhash.c.0.
                                            8300 *
                                            8301 *
                                            8302 *   Re-entrant Data Initialization Section
                                            8303 *
                                            8304 @@INIT@  ALIAS C'rdxxhash:'
00005AC0                00005AC0 00000230   8305 @@INIT@  CSECT
                                            8306 @@INIT@  AMODE ANY
                                            8307 @@INIT@  RMODE ANY
00005AC0 05                                 8308          DC    XL1'5'
00005AC1 000000                             8309          DC    AL3(0)
00005AC4 00000120                           8310          DC    AL4(288)
00005AC8 00000000                           8311          DC    4X'00'
00005ACC 00000000                           8312          DC    Q(@@STATIC)
00005AD0 00000000                           8313          DC    X'00000000'
00005AD4 00000001                           8314          DC    X'00000001'
00005AD8 00000000                           8315          DC    X'00000000'
00005ADC 000000FF                           8316          DC    X'000000FF'
00005AE0 0102039C09867F97                   8317          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00005AF0 1112139D85088718                   8318          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00005B00 818283840A171B88                   8319          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00005B10 9116939495960498                   8320          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00005B20 A0E2E4E0E1E3E5E7                   8321          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00005B30 E9EAEBE8EDEEEFEC                   8322          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00005B40 2FC2C4C0C1C3C5C7                   8323          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00005B50 C9CACBC8CDCECFCC                   8324          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00005B60 6162636465666768                   8325          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00005B70 6A6B6C6D6E6F7071                   8326          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00005B80 7E73747576777879                   8327          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00005B90 A3A5B7A9A7B6BCBD                   8328          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00005BA0 4142434445464748                   8329          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00005BB0 4A4B4C4D4E4F5051                   8330          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00005BC0 F753545556575859                   8331          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00005BD0 3132333435363738                   8332          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            8333 *
00005BE0 05                                 8334          DC    XL1'5'
00005BE1 000000                             8335          DC    AL3(0)
00005BE4 000001E0                           8336          DC    AL4(480)
00005BE8 00000000                           8337          DC    4X'00'
00005BEC 00000000                           8338          DC    Q(@@STATIC)
                                                                                                                           Page  166 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005BF0 00000000                           8339          DC    X'00000000'
00005BF4 00000101                           8340          DC    X'00000101'
00005BF8 00000000                           8341          DC    X'00000000'
00005BFC 000000A0                           8342          DC    X'000000A0'
00005C00 010203372D2E2F16                   8343          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00005C10 1112133C3D322618                   8344          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00005C20 5A7F7B5B6C507D4D                   8345          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00005C30 F1F2F3F4F5F6F7F8                   8346          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00005C40 C1C2C3C4C5C6C7C8                   8347          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00005C50 D8D9E2E3E4E5E6E7                   8348          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00005C60 8182838485868788                   8349          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00005C70 9899A2A3A4A5A6A7                   8350          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00005C80 2122232425061728                   8351          DC    X'2122232425061728292A2B2C090A1B30' ................
00005C90 311A333435360838                   8352          DC    X'311A333435360838393A3B04143EFF80' ................
                                            8353 *
00005CA0 05                                 8354          DC    XL1'5'
00005CA1 000000                             8355          DC    AL3(0)
00005CA4 00000208                           8356          DC    AL4(520)
00005CA8 00000000                           8357          DC    4X'00'
00005CAC 00000000                           8358          DC    Q(@@STATIC)
00005CB0 00000000                           8359          DC    X'00000000'
00005CB4 000001C0                           8360          DC    X'000001C0'
00005CB8 00000000                           8361          DC    X'00000000'
00005CBC 00000001                           8362          DC    X'00000001'
00005CC0 8A40404040404040                   8363          DC    X'8A40404040404040'                 ........
                                            8364 *
00005CC8 05                                 8365          DC    XL1'5'
00005CC9 000000                             8366          DC    AL3(0)
00005CCC 00000000                           8367          DC    AL4(0)
00005CD0 00000000                           8368          DC    4X'00'
00005CD4 00000000                           8369          DC    Q(@@STATIC)
00005CD8 00000000                           8370          DC    X'00000000'
00005CDC 000001E0                           8371          DC    X'000001E0'
00005CE0 00000000                           8372          DC    X'00000000'
00005CE4 00000001                           8373          DC    X'00000001'
00005CE8 8B40404040404040                   8374          DC    X'8B40404040404040'                 ........
                                            8375 *
                                            8376          END
                                                 Relocation Dictionary                                                     Page  167 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000003 00000148   A 4      +
 00000002 00000004 00000150   A 4      +
 00000002 00000007 00000158   A 4      +
 00000002 00000007 00000160   A 4      +
 00000002 00000002 00000180   A 4      +
 00000002 00000002 000001A8   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 00000005 00000268   A 4      +
 00000002 00000002 00000288   A 4      +
 00000002 00000002 000002B0   A 4      +
 00000002 00000002 000002B8   A 4      +
 00000002 00000002 00000370   A 4      +
 00000002 00000002 00000390   A 4      +
 00000002 00000002 000003B8   A 4      +
 00000002 00000002 000003C0   A 4      +
 00000002 00000002 00000478   A 4      +
 00000002 00000002 000004C0   A 4      +
 00000002 00000002 000004C8   A 4      +
 00000002 00000002 00000558   A 4      +
 00000002 00000002 00000580   A 4      +
 00000002 00000002 00000588   A 4      +
 00000002 00000002 00000680   A 4      +
 00000002 00000002 00000688   A 4      +
 00000002 00000002 00000708   A 4      +
 00000002 00000002 00000730   A 4      +
 00000002 00000002 00000738   A 4      +
 00000002 00000002 00000808   A 4      +
 00000002 00000002 00000830   A 4      +
 00000002 00000002 00000838   A 4      +
 00000002 00000002 000008C0   A 4      +
 00000002 00000002 000008C8   A 4      +
 00000002 00000002 00000990   A 4      +
 00000002 00000002 000009B8   A 4      +
 00000002 00000002 000009C0   A 4      +
 00000002 00000002 00000A90   A 4      +
 00000002 00000002 00000AB8   A 4      +
 00000002 00000002 00000AE0   A 4      +
 00000002 00000002 00000AE8   A 4      +
 00000002 00000002 00000B88   A 4      +
 00000002 00000002 00000B90   A 4      +
 00000002 00000002 00000B98   A 4      +
 00000002 00000002 00000C50   A 4      +
 00000002 00000002 00000C58   A 4      +
 00000002 00000002 00000CC0   A 4      +
 00000002 00000002 00000CC8   A 4      +
 00000002 00000007 00000D18   A 4      +
 00000002 00000002 00000D68   A 4      +
 00000002 00000002 00000D70   A 4      +
 00000002 00000007 00000DC8   A 4      +
 00000002 00000002 00000DF0   A 4      +
                                                 Relocation Dictionary                                                     Page  168 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000E18   A 4      +
 00000002 00000002 00000E20   A 4      +
 00000002 00000002 00000E90   A 4      +
 00000002 00000007 00000E98   A 4      +
 00000002 00000002 00000EA0   A 4      +
 00000002 00000004 00000EB0   A 4      +
 00000002 00000007 00000EB8   A 4      +
 00000002 00000002 000014B8   A 4      +
 00000002 00000002 000014E0   A 4      +
 00000002 00000002 000014E8   A 4      +
 00000002 00000007 00001700   A 4      +
 00000002 00000002 00001708   A 4      +
 00000002 00000002 00001710   A 4      +
 00000002 00000002 00001718   A 4      +
 00000002 00000002 000017D0   A 4      +
 00000002 00000002 000017F8   A 4      +
 00000002 00000002 00001800   A 4      +
 00000002 00000002 000018B8   A 4      +
 00000002 00000002 000018C8   A 4      +
 00000002 00000002 000019C8   A 4      +
 00000002 00000002 000019F0   A 4      +
 00000002 00000002 000019F8   A 4      +
 00000002 00000002 00001AA8   A 4      +
 00000002 00000002 00001AD0   A 4      +
 00000002 00000002 00001AF8   A 4      +
 00000002 00000002 00001B00   A 4      +
 00000002 00000002 00001BC0   A 4      +
 00000002 00000002 00001C10   A 4      +
 00000002 00000002 00001C18   A 4      +
 00000002 00000002 00001C68   A 4      +
 00000002 00000002 00001C90   A 4      +
 00000002 00000002 00001C98   A 4      +
 00000002 00000007 00001D88   A 4      +
 00000002 00000002 00001DB0   A 4      +
 00000002 00000002 00001DD8   A 4      +
 00000002 00000002 00001DE0   A 4      +
 00000002 00000002 00001E58   A 4      +
 00000002 00000002 00001E60   A 4      +
 00000002 00000002 00001E68   A 4      +
 00000002 00000002 00002230   A 4      +
 00000002 00000002 00002258   A 4      +
 00000002 00000002 00002260   A 4      +
 00000002 00000002 00002308   A 4      +
 00000002 00000002 00002310   A 4      +
 00000002 00000002 000023C0   A 4      +
 00000002 00000002 000023E8   A 4      +
 00000002 00000002 000023F0   A 4      +
 00000002 00000007 000024B0   A 4      +
 00000002 00000002 000024B8   A 4      +
 00000002 00000002 00002578   A 4      +
 00000002 00000002 000025A0   A 4      +
 00000002 00000002 000025A8   A 4      +
 00000002 00000002 00002638   A 4      +
                                                 Relocation Dictionary                                                     Page  169 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00002640   A 4      +
 00000002 00000002 000026D8   A 4      +
 00000002 00000002 00002700   A 4      +
 00000002 00000002 00002708   A 4      +
 00000002 00000002 000027E8   A 4      +
 00000002 00000002 000027F0   A 4      +
 00000002 00000002 00002820   A 4      +
 00000002 00000002 00002848   A 4      +
 00000002 00000002 00002850   A 4      +
 00000002 00000002 00002910   A 4      +
 00000002 00000002 00002930   A 4      +
 00000002 00000002 00002958   A 4      +
 00000002 00000002 00002960   A 4      +
 00000002 00000002 00002A58   A 4      +
 00000002 00000002 00002A60   A 4      +
 00000002 00000002 00002B70   A 4      +
 00000002 00000002 00002B98   A 4      +
 00000002 00000002 00002BA0   A 4      +
 00000002 00000002 00002C28   A 4      +
 00000002 00000002 00002C30   A 4      +
 00000002 00000002 00002CF0   A 4      +
 00000002 00000002 00002D18   A 4      +
 00000002 00000002 00002D20   A 4      +
 00000002 00000002 00002DE8   A 4      +
 00000002 00000002 00002E10   A 4      +
 00000002 00000002 00002E38   A 4      +
 00000002 00000002 00002E40   A 4      +
 00000002 00000002 00002ED8   A 4      +
 00000002 00000002 00002EE0   A 4      +
 00000002 00000002 00002EE8   A 4      +
 00000002 00000002 00002F90   A 4      +
 00000002 00000002 00002F98   A 4      +
 00000002 00000007 00003000   A 4      +
 00000002 00000002 00003028   A 4      +
 00000002 00000002 00003050   A 4      +
 00000002 00000002 00003058   A 4      +
 00000002 00000002 00003138   A 4      +
 00000002 00000007 00003140   A 4      +
 00000002 00000002 00003190   A 4      +
 00000002 00000002 00003198   A 4      +
 00000002 00000007 00003200   A 4      +
 00000002 00000002 00003228   A 4      +
 00000002 00000002 00003250   A 4      +
 00000002 00000002 00003258   A 4      +
 00000002 00000002 000032D0   A 4      +
 00000002 00000002 000032D8   A 4      +
 00000002 00000007 000032E0   A 4      +
 00000002 00000002 000032E8   A 4      +
 00000002 00000002 000032F0   A 4      +
 00000002 00000002 00003B78   A 4      +
 00000002 00000002 00003B80   A 4      +
 00000002 00000007 00003B88   A 4      +
 00000002 00000002 00003B90   A 4      +
                                                 Relocation Dictionary                                                     Page  170 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00003B98   A 4      +
 00000002 00000004 00003BA8   A 4      +
 00000002 00000007 00003BB0   A 4      +
 00000002 00000002 00004520   A 4      +
 00000002 00000002 00004548   A 4      +
 00000002 00000002 00004550   A 4      +
 00000002 00000007 000047D0   A 4      +
 00000002 00000002 000047D8   A 4      +
 00000002 00000002 000047E0   A 4      +
 00000002 00000002 000047E8   A 4      +
 00000002 00000002 000047F0   A 4      +
 00000002 00000002 00004898   A 4      +
 00000002 00000002 000048C0   A 4      +
 00000002 00000002 000048C8   A 4      +
 00000002 00000002 00004968   A 4      +
 00000002 00000002 00004978   A 4      +
 00000002 00000002 00004A50   A 4      +
 00000002 00000002 00004A78   A 4      +
 00000002 00000002 00004A80   A 4      +
 00000002 00000002 00004B30   A 4      +
 00000002 00000002 00004B58   A 4      +
 00000002 00000002 00004B80   A 4      +
 00000002 00000002 00004B88   A 4      +
 00000002 00000002 00004C48   A 4      +
 00000002 00000002 00004C98   A 4      +
 00000002 00000002 00004CA0   A 4      +
 00000002 00000002 00004CF0   A 4      +
 00000002 00000002 00004D18   A 4      +
 00000002 00000002 00004D20   A 4      +
 00000002 00000007 00004E20   A 4      +
 00000002 00000002 00004E48   A 4      +
 00000002 00000002 00004E70   A 4      +
 00000002 00000002 00004E78   A 4      +
 00000002 00000002 00004EF0   A 4      +
 00000002 00000002 00004EF8   A 4      +
 00000002 00000002 00004F00   A 4      +
 00000002 00000002 00005278   A 4      +
 00000002 00000002 000052A0   A 4      +
 00000002 00000002 000052A8   A 4      +
 00000002 00000002 00005350   A 4      +
 00000002 00000002 00005358   A 4      +
 00000002 00000002 00005408   A 4      +
 00000002 00000002 00005430   A 4      +
 00000002 00000002 00005438   A 4      +
 00000002 00000002 00005560   A 4      +
 00000002 00000007 00005568   A 4      +
 00000002 00000002 00005570   A 4      +
 00000002 00000002 00005630   A 4      +
 00000002 00000002 00005658   A 4      +
 00000002 00000002 00005660   A 4      +
 00000002 00000002 000056F0   A 4      +
 00000002 00000002 000056F8   A 4      +
 00000002 00000002 00005790   A 4      +
                                                 Relocation Dictionary                                                     Page  171 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 000057B8   A 4      +
 00000002 00000002 000057C0   A 4      +
 00000002 00000002 000058A0   A 4      +
 00000002 00000002 000058A8   A 4      +
 00000002 00000002 000058D8   A 4      +
 00000002 00000002 00005900   A 4      +
 00000002 00000002 00005908   A 4      +
 00000002 00000002 000059C0   A 4      +
 00000008 00000006 00005ACC   Q 4      +
 00000008 00000006 00005BEC   Q 4      +
 00000008 00000006 00005CAC   Q 4      +
 00000008 00000006 00005CD4   Q 4      +
                                                 DSECT Cross Reference                                                     Page  172 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#$X$X$H_free
         000000A8  FFFFFFFC  00451
@AUTO#$X$X$H_is$Little$Endian
         000000AC  FFFFFFF8  00828
@AUTO#$X$X$H_malloc
         000000A8  FFFFFFFD  00350
@AUTO#$X$X$H_memcpy
         000000A8  FFFFFFFB  00541
@AUTO#$X$X$H_read$B$E32
         000000A8  FFFFFFF5  01211
@AUTO#$X$X$H_read$B$E64
         000000A8  FFFFFFE0  04599
@AUTO#$X$X$H_read$L$E32
         000000A8  FFFFFFF6  01081
@AUTO#$X$X$H_read$L$E32_align
         000000A8  FFFFFFF7  00975
@AUTO#$X$X$H_read$L$E64
         000000A8  FFFFFFE1  04471
@AUTO#$X$X$H_read$L$E64_align
         000000A8  FFFFFFE2  04366
@AUTO#$X$X$H_read32
         000000AC  FFFFFFFA  00641
@AUTO#$X$X$H_read64
         000000B0  FFFFFFE4  04109
@AUTO#$X$X$H_swap32
         000000A8  FFFFFFF9  00730
@AUTO#$X$X$H_swap64
         000000A8  FFFFFFE3  04223
@AUTO#$X$X$H_version$Number
         000000A8  FFFFFFF4  01281
@AUTO#$X$X$H32
         000000AC  FFFFFFEF  02508
@AUTO#$X$X$H32_avalanche
         000000A8  FFFFFFF2  01462
@AUTO#$X$X$H32_canonical$From$Hash
         000000A8  FFFFFFE6  03904
@AUTO#$X$X$H32_copy$State
         000000A8  FFFFFFEC  02793
@AUTO#$X$X$H32_create$State
         000000A8  FFFFFFEE  02612
@AUTO#$X$X$H32_digest
         000000AC  FFFFFFE7  03782
@AUTO#$X$X$H32_digest_endian
         000000AC  FFFFFFE8  03647
@AUTO#$X$X$H32_endian_align
         000000AC  FFFFFFF0  02314
@AUTO#$X$X$H32_finalize
         000000A8  FFFFFFF1  02034
@AUTO#$X$X$H32_free$State
         000000A8  FFFFFFED  02718
@AUTO#$X$X$H32_hash$From$Canonical
         000000A8  FFFFFFE5  04009
@AUTO#$X$X$H32_reset
                                                 DSECT Cross Reference                                                     Page  173 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
         000000D8  FFFFFFEB  02918
@AUTO#$X$X$H32_round
         000000A8  FFFFFFF3  01369
@AUTO#$X$X$H32_update
         000000AC  FFFFFFE9  03487
@AUTO#$X$X$H32_update_endian
         000000AC  FFFFFFEA  03337
@AUTO#$X$X$H64
         000000AC  FFFFFFDA  06753
@AUTO#$X$X$H64_avalanche
         000000A8  FFFFFFDD  04893
@AUTO#$X$X$H64_canonical$From$Hash
         000000A8  FFFFFFD1  08152
@AUTO#$X$X$H64_copy$State
         000000A8  FFFFFFD7  07038
@AUTO#$X$X$H64_create$State
         000000A8  FFFFFFD9  06857
@AUTO#$X$X$H64_digest
         000000AC  FFFFFFD2  08030
@AUTO#$X$X$H64_digest_endian
         000000B0  FFFFFFD3  07889
@AUTO#$X$X$H64_endian_align
         000000B0  FFFFFFDB  06572
@AUTO#$X$X$H64_finalize
         000000B0  FFFFFFDC  06227
@AUTO#$X$X$H64_free$State
         000000A8  FFFFFFD8  06963
@AUTO#$X$X$H64_hash$From$Canonical
         000000A8  FFFFFFD0  08256
@AUTO#$X$X$H64_merge$Round
         000000A8  FFFFFFDE  04802
@AUTO#$X$X$H64_reset
         00000100  FFFFFFD6  07163
@AUTO#$X$X$H64_round
         000000A8  FFFFFFDF  04688
@AUTO#$X$X$H64_update
         000000AC  FFFFFFD4  07699
@AUTO#$X$X$H64_update_endian
         000000B0  FFFFFFD5  07549
@AUTO#rd_free
         000000A8  FFFFFFFE  00250
@AUTO#rd_malloc
         000000A8  FFFFFFFF  00147
                                          Macro and Copy Code Source Summary                                               Page  174 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:43 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  dccextrn
                                                      Using Map                                                            Page  175 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
    83  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00108    109 @REGION_752_1,12
   142  00000168  00000002 DROP                                           12              12
   210  000001FE  00000002 USING  ORDINARY    000001C0 00001000 00000002  12 000A8    217 @REGION_754_1,12
   245  00000270  00000002 DROP                                           12              12
   313  00000306  00000002 USING  ORDINARY    000002C8 00001000 00000002  12 000A8    319 @REGION_759_1,12
   345  00000378  00000002 DROP                                           12              12
   413  0000040E  00000002 USING  ORDINARY    000003D0 00001000 00000002  12 000A8    419 @REGION_760_1,12
   446  00000480  00000002 DROP                                           12              12
   503  000004E2  00000002 USING  ORDINARY    000004D8 00001000 00000002  12 00060    521 @REGION_761_1,12
   536  0000053E  00000002 DROP                                           12              12
   604  000005D6  00000002 USING  ORDINARY    00000598 00001000 00000002  12 00000        @REGION_781_1,12
   636  0000063C  00000002 DROP                                           12              12
   793  00000786  00000002 USING  ORDINARY    00000748 00001000 00000002  12 00000        @REGION_783_1,12
   823  000007E4  00000002 DROP                                           12              12
   892  00000886  00000002 USING  ORDINARY    00000848 00001000 00000002  12 000E6    943 @REGION_784_1,12
   970  00000976  00000002 DROP                                           12              12
  1038  00000A0E  00000002 USING  ORDINARY    000009D0 00001000 00000002  12 000C0   1048 @REGION_785_1,12
  1076  00000A98  00000002 DROP                                           12              12
  1144  00000B36  00000002 USING  ORDINARY    00000AF8 00001000 00000002  12 000C0   1180 @REGION_786_1,12
  1206  00000C04  00000002 DROP                                           12              12
  1333  00000CE2  00000002 USING  ORDINARY    00000CD8 00001000 00000002  12 00040   1339 @REGION_787_1,12
  1364  00000D20  00000002 DROP                                           12              12
  1421  00000D8A  00000002 USING  ORDINARY    00000D80 00001000 00000002  12 00048   1430 @REGION_788_1,12
  1457  00000DD0  00000002 DROP                                           12              12
  1525  00000E6E  00000002 USING  ORDINARY    00000E30 00001000 00000002  12 00620   2002 @REGION_789_1,12
  2029  00001498  00000002 DROP                                           12              12
  2097  00001536  00000002 USING  ORDINARY    000014F8 00001000 00000002  12 0023A   2284 @REGION_790_1,12
  2309  000017BC  00000002 DROP                                           12              12
  2388  0000184E  00000002 USING  ORDINARY    00001810 00001000 00000002  12 0014E   2476 @REGION_763_1,12
  2503  000019A6  00000002 DROP                                           12              12
  2574  00001A46  00000002 USING  ORDINARY    00001A08 00001000 00000002  12 000A0   2580 @REGION_764_1,12
  2607  00001AB0  00000002 DROP                                           12              12
  2677  00001B4E  00000002 USING  ORDINARY    00001B10 00001000 00000002  12 000B0   2684 @REGION_765_1,12
  2713  00001BC8  00000002 DROP                                           12              12
  2858  00001CE6  00000002 USING  ORDINARY    00001CA8 00001000 00000002  12 000E0   2868 @REGION_767_1,12
  2913  00001D90  00000002 DROP                                           12              12
  2982  00001E2E  00000002 USING  ORDINARY    00001DF0 00001000 00000002  12 003DA   3298 @REGION_791_1,12
  3332  00002212  00000002 DROP                                           12              12
  3409  000022AE  00000002 USING  ORDINARY    00002270 00001000 00000002  12 000E2   3456 @REGION_768_1,12
  3482  0000239A  00000002 DROP                                           12              12
  3551  0000243E  00000002 USING  ORDINARY    00002400 00001000 00000002  12 000CE   3617 @REGION_792_1,12
  3642  0000255C  00000002 DROP                                           12              12
  3713  000025F6  00000002 USING  ORDINARY    000025B8 00001000 00000002  12 000B2   3751 @REGION_769_1,12
  3777  000026B2  00000002 DROP                                           12              12
  3848  00002756  00000002 USING  ORDINARY    00002718 00001000 00000002  12 000D8   3864 @REGION_770_1,12
  3899  000027F8  00000002 DROP                                           12              12
  3969  0000289E  00000002 USING  ORDINARY    00002860 00001000 00000002  12 000B0   3976 @REGION_771_1,12
  4004  00002918  00000002 DROP                                           12              12
  4072  000029AE  00000002 USING  ORDINARY    00002970 00001000 00000002  12 00000        @REGION_793_1,12
  4104  00002A14  00000002 DROP                                           12              12
  4162  00002A7A  00000002 USING  ORDINARY    00002A70 00001000 00000002  12 000D8   4195 @REGION_794_1,12
                                                      Using Map                                                            Page  176 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  4218  00002B50  00000002 DROP                                           12              12
  4286  00002BEE  00000002 USING  ORDINARY    00002BB0 00001000 00000002  12 000DC   4335 @REGION_795_1,12
  4361  00002CD4  00000002 DROP                                           12              12
  4429  00002D6E  00000002 USING  ORDINARY    00002D30 00001000 00000002  12 000B8   4439 @REGION_796_1,12
  4466  00002DF0  00000002 DROP                                           12              12
  4534  00002E8E  00000002 USING  ORDINARY    00002E50 00001000 00000002  12 000B8   4569 @REGION_797_1,12
  4594  00002F50  00000002 DROP                                           12              12
  4651  00002FB2  00000002 USING  ORDINARY    00002FA8 00001000 00000002  12 00058   4657 @REGION_798_1,12
  4683  00003008  00000002 DROP                                           12              12
  4751  000030A6  00000002 USING  ORDINARY    00003068 00001000 00000002  12 000D8   4767 @REGION_799_1,12
  4797  00003148  00000002 DROP                                           12              12
  4854  000031B2  00000002 USING  ORDINARY    000031A8 00001000 00000002  12 00058   4862 @REGION_800_1,12
  4888  00003208  00000002 DROP                                           12              12
  4956  000032A6  00000002 USING  ORDINARY    00003268 00001000 00000002  12 00064   4970 @REGION_801_1,12
  4971  000032C0  00000002 DROP                                           12              12
  4972  000032C0  00000002 USING  ORDINARY    00003B6E 00001000 00000002  12 006DA   4973 @REGION_801_2,12
  4974  000032C4  00000002 DROP                                           12              12
  4975  000032C4  00000002 USING  ORDINARY    00003268 00001000 00000002  12 00080   5084 @REGION_801_1,12
  5085  00003458  00000002 DROP                                           12              12
  5086  00003458  00000002 USING  ORDINARY    00003B6E 00001000 00000002  12 0094A   5087 @REGION_801_2,12
  5088  0000345C  00000002 DROP                                           12              12
  5089  0000345C  00000002 USING  ORDINARY    00003268 00001000 00000002  12 00088   5219 @REGION_801_1,12
  5220  00003622  00000002 DROP                                           12              12
  5221  00003622  00000002 USING  ORDINARY    00003B6E 00001000 00000002  12 0094A   5222 @REGION_801_2,12
  5223  00003626  00000002 DROP                                           12              12
  5224  00003626  00000002 USING  ORDINARY    00003268 00001000 00000002  12 00080   5338 @REGION_801_1,12
  5339  000037B6  00000002 DROP                                           12              12
  5340  000037B6  00000002 USING  ORDINARY    00003B6E 00001000 00000002  12 0094A   5341 @REGION_801_2,12
  5342  000037BA  00000002 DROP                                           12              12
  5343  000037BA  00000002 USING  ORDINARY    00003268 00001000 00000002  12 00088   5485 @REGION_801_1,12
  5486  000039B0  00000002 DROP                                           12              12
  5487  000039B0  00000002 USING  ORDINARY    00003B6E 00001000 00000002  12 0094A   5488 @REGION_801_2,12
  5489  000039B4  00000002 DROP                                           12              12
  5490  000039B4  00000002 USING  ORDINARY    00003268 00001000 00000002  12 00080   5615 @REGION_801_1,12
  5617  00003B6E  00000002 DROP                                           12              12
  5618  00003B6E  00000002 USING  ORDINARY    00003B6E 00001000 00000002  12 0094A   6195 @REGION_801_2,12
  6222  00004500  00000002 DROP                                           12              12
  6337  0000459E  00000002 USING  ORDINARY    00004560 00001000 00000002  12 002A8   6543 @REGION_802_1,12
  6567  00004886  00000002 DROP                                           12              12
  6646  00004916  00000002 USING  ORDINARY    000048D8 00001000 00000002  12 0010C   6722 @REGION_772_1,12
  6748  00004A2C  00000002 DROP                                           12              12
  6819  00004ACE  00000002 USING  ORDINARY    00004A90 00001000 00000002  12 000A0   6825 @REGION_773_1,12
  6852  00004B38  00000002 DROP                                           12              12
  6922  00004BD6  00000002 USING  ORDINARY    00004B98 00001000 00000002  12 000B0   6929 @REGION_774_1,12
  6958  00004C50  00000002 DROP                                           12              12
  7103  00004D6E  00000002 USING  ORDINARY    00004D30 00001000 00000002  12 000F0   7113 @REGION_776_1,12
  7158  00004E28  00000002 DROP                                           12              12
  7227  00004EC6  00000002 USING  ORDINARY    00004E88 00001000 00000002  12 0038E   7510 @REGION_803_1,12
  7544  0000525E  00000002 DROP                                           12              12
  7621  000052F6  00000002 USING  ORDINARY    000052B8 00001000 00000002  12 000E2   7668 @REGION_777_1,12
  7694  000053E2  00000002 DROP                                           12              12
  7763  00005486  00000002 USING  ORDINARY    00005448 00001000 00000002  12 00142   7860 @REGION_804_1,12
  7884  00005612  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  177 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  7963  000056AE  00000002 USING  ORDINARY    00005670 00001000 00000002  12 000AE   8000 @REGION_778_1,12
  8025  00005766  00000002 DROP                                           12              12
  8096  0000580E  00000002 USING  ORDINARY    000057D0 00001000 00000002  12 000D8   8112 @REGION_779_1,12
  8147  000058B0  00000002 DROP                                           12              12
  8217  00005956  00000002 USING  ORDINARY    00005918 00001000 00000002  12 000A8   8224 @REGION_780_1,12
  8251  000059C8  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  178 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDXXHASH ..\asg\asm\rdxxhash.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil

Assembly Start Time: 12.43.48 Stop Time: 12.43.49 Processor Time: 00.00.00.0590
Return Code 000
