                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_metadata_cache.obj ../asg/asm/rdkafka_metadata_cache.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_metadata_cache.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_METADATA_CACHE
          SD 00000002 00000000 00005E8C            07  @CODE
rd_avl_find_node
          ER 00000003                                  RD_AVL_FIND_NODE
write     ER 00000004                                  WRITE
malloc    ER 00000005                                  MALLOC
fprintf   ER 00000006                                  FPRINTF
qsort     ER 00000007                                  QSORT
rd_kafka_op_reply
          ER 00000008                                  RD_KAFKA_OP_REPLY
rd_kafka_err2str
          ER 00000009                                  RD_KAFKA_ERR2STR
rd_kafka_q_destroy_final
          ER 0000000A                                  RD_KAFKA_Q_DESTROY_FINAL
strdup    ER 0000000B                                  STRDUP
rd_kafka_q_purge0
          ER 0000000C                                  RD_KAFKA_Q_PURGE0
rd_list_init
          ER 0000000D                                  RD_LIST_INIT
@@ASSERT  ER 0000000E                                  __ASSERT
rd_list_add
          ER 0000000F                                  RD_LIST_ADD
mtx_init  ER 00000010                                  MTX_INIT
mtx_destroy
          ER 00000011                                  MTX_DESTROY
mtx_lock  ER 00000012                                  MTX_LOCK
GETTFD@Y  ER 00000013                                  GETTIMEOFDAY
rd_list_clear
          ER 00000014                                  RD_LIST_CLEAR
mtx_unlock
          ER 00000015                                  MTX_UNLOCK
cnd_init  ER 00000016                                  CND_INIT
rd_list_destroy
          ER 00000017                                  RD_LIST_DESTROY
cnd_destroy
          ER 00000018                                  CND_DESTROY
rd_list_elem
          ER 00000019                                  RD_LIST_ELEM
cnd_signal
          ER 0000001A                                  CND_SIGNAL
cnd_broadcast
          ER 0000001B                                  CND_BROADCAST
rd_kafka_timer_stop
          ER 0000001C                                  RD_KAFKA_TIMER_STOP
rd_kafka_timer_start0
          ER 0000001D                                  RD_KAFKA_TIMER_START0
rd_list_find
          ER 0000001E                                  RD_LIST_FIND
rd_list_cmp_str
          ER 0000001F                                  RD_LIST_CMP_STR
rd_list_apply
          ER 00000020                                  RD_LIST_APPLY
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
rd_avl_destroy
          ER 00000021                                  RD_AVL_DESTROY
rd_avl_init
          ER 00000022                                  RD_AVL_INIT
cnd_timedwait_ms
          ER 00000023                                  CND_TIMEDWAIT_MS
rd_avl_insert_node
          ER 00000024                                  RD_AVL_INSERT_NODE
rd_kafka_crash
          ER 00000025                                  RD_KAFKA_CRASH
rd_kafka_topic_partition_list_get_topic_names
          ER 00000026                                  RD_KAFKA_TOPIC_PARTITION_LIST_GET_TOPIC_NAMES
rwlock_rdlock
          ER 00000027                                  RWLOCK_RDLOCK
rwlock_wrlock
          ER 00000028                                  RWLOCK_WRLOCK
rwlock_rdunlock
          ER 00000029                                  RWLOCK_RDUNLOCK
rwlock_wrunlock
          ER 0000002A                                  RWLOCK_WRUNLOCK
@@STDERP  XD 0000002B 00000003 00000000                __STDERRP
bsearch   ER 0000002C                                  BSEARCH
rd_kafka_enq_once_trigger_destroy
          ER 0000002D                                  RD_KAFKA_ENQ_ONCE_TRIGGER_DESTROY
rd_avl_remove_elm0
          ER 0000002E                                  RD_AVL_REMOVE_ELM0
free      ER 0000002F                                  FREE
rd_kafka_log0
          ER 00000030                                  RD_KAFKA_LOG0
@rdkafka_metadata_cache&
          XD 00000031 00000007 000006D8                @@STATIC
@rdkafka_metadata_cache
          SD 00000032 00005E90 00000A50            07  @DATA
@@STDERP  ER 00000033                                  @E__STDERRP
rdkafka_metadata_cache:
          SD 00000034 000068E0 00001040            07  @@INIT@
rd_kafka_metadata_cache_find
          LD          000034D8          00000002   00  RD_KAFKA_METADATA_CACHE_FIND
rd_kafka_metadata_partition_id_cmp
          LD          00003650          00000002   00  RD_KAFKA_METADATA_PARTITION_ID_CMP
rd_kafka_metadata_cache_purge
          LD          00003B00          00000002   00  RD_KAFKA_METADATA_CACHE_PURGE
rd_kafka_metadata_cache_expiry_start
          LD          00003CD8          00000002   00  RD_KAFKA_METADATA_CACHE_EXPIRY_START
rd_kafka_metadata_cache_topic_update
          LD          00003E68          00000002   00  RD_KAFKA_METADATA_CACHE_TOPIC_UPDATE
rd_kafka_metadata_cache_update
          LD          00004058          00000002   00  RD_KAFKA_METADATA_CACHE_UPDATE
rd_kafka_metadata_cache_purge_hints
          LD          00004328          00000002   00  RD_KAFKA_METADATA_CACHE_PURGE_HINTS
rd_kafka_metadata_cache_hint
          LD          00004590          00000002   00  RD_KAFKA_METADATA_CACHE_HINT
rd_kafka_metadata_cache_hint_rktparlist
                                              External Symbol Dictionary                                                   Page    5 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
          LD          000048A0          00000002   00  RD_KAFKA_METADATA_CACHE_HINT_RKTPARLIST
rd_kafka_metadata_cache_init
          LD          00004B90          00000002   00  RD_KAFKA_METADATA_CACHE_INIT
rd_kafka_metadata_cache_destroy
          LD          00004D78          00000002   00  RD_KAFKA_METADATA_CACHE_DESTROY
rd_kafka_metadata_cache_wait_state_change_async
          LD          00004F70          00000002   00  RD_KAFKA_METADATA_CACHE_WAIT_STATE_CHANGE_ASYNC
rd_kafka_metadata_cache_wait_change
          LD          000050E0          00000002   00  RD_KAFKA_METADATA_CACHE_WAIT_CHANGE
rd_kafka_metadata_cache_propagate_changes
          LD          000053C8          00000002   00  RD_KAFKA_METADATA_CACHE_PROPAGATE_CHANGES
rd_kafka_metadata_cache_topic_get
          LD          00005560          00000002   00  RD_KAFKA_METADATA_CACHE_TOPIC_GET
rd_kafka_metadata_cache_topic_partition_get
          LD          000056B8          00000002   00  RD_KAFKA_METADATA_CACHE_TOPIC_PARTITION_GET
rd_kafka_metadata_cache_topics_count_exists
          LD          000058B8          00000002   00  RD_KAFKA_METADATA_CACHE_TOPICS_COUNT_EXISTS
rd_kafka_metadata_cache_topics_to_list
          LD          00005A80          00000002   00  RD_KAFKA_METADATA_CACHE_TOPICS_TO_LIST
rd_kafka_metadata_cache_dump
          LD          00005C70          00000002   00  RD_KAFKA_METADATA_CACHE_DUMP
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:43:06 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DD4C5E3C1C4C1E3C16DC3C1C3C8C5'
00000000                00000000 00005E8C     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D9485A3818481A3816D8381838885'
                                              18 rd_avl_find_node ALIAS X'99846D81A5936D868995846D95968485'
                                              19          EXTRN rd_avl_find_node
                                              20 write    ALIAS C'write'
                                              21          EXTRN write
                                              22 malloc   ALIAS C'malloc'
                                              23          EXTRN malloc
                                              24 fprintf  ALIAS C'fprintf'
                                              25          EXTRN fprintf
                                              26 qsort    ALIAS C'qsort'
                                              27          EXTRN qsort
                                              28 rd_kafka_op_reply ALIAS X'99846D92818692816D96976D99859793A8'
                                              29          EXTRN rd_kafka_op_reply
                                              30 rd_kafka_err2str ALIAS X'99846D92818692816D859999F2A2A399'
                                              31          EXTRN rd_kafka_err2str
                                              32 rd_kafka_q_destroy_final ALIAS X'99846D92818692816D986D8485A2A39996A86D*
                                                                8689958193'
                                              33          EXTRN rd_kafka_q_destroy_final
                                              34 strdup   ALIAS C'strdup'
                                              35          EXTRN strdup
                                              36 rd_kafka_q_purge0 ALIAS X'99846D92818692816D986D97A4998785F0'
                                              37          EXTRN rd_kafka_q_purge0
                                              38 rd_list_init ALIAS X'99846D9389A2A36D899589A3'
                                              39          EXTRN rd_list_init
                                              40 __assert ALIAS C'@@ASSERT'
                                              41          EXTRN __assert
                                              42 rd_list_add ALIAS X'99846D9389A2A36D818484'
                                              43          EXTRN rd_list_add
                                              44 mtx_init ALIAS X'94A3A76D899589A3'
                                              45          EXTRN mtx_init
                                              46 mtx_destroy ALIAS X'94A3A76D8485A2A39996A8'
                                              47          EXTRN mtx_destroy
                                              48 mtx_lock ALIAS X'94A3A76D93968392'
                                              49          EXTRN mtx_lock
                                              50 gettimeofday ALIAS C'GETTFD@Y'
                                              51          EXTRN gettimeofday
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                              52 rd_list_clear ALIAS X'99846D9389A2A36D8393858199'
                                              53          EXTRN rd_list_clear
                                              54 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              55          EXTRN mtx_unlock
                                              56 cnd_init ALIAS X'8395846D899589A3'
                                              57          EXTRN cnd_init
                                              58 rd_list_destroy ALIAS X'99846D9389A2A36D8485A2A39996A8'
                                              59          EXTRN rd_list_destroy
                                              60 cnd_destroy ALIAS X'8395846D8485A2A39996A8'
                                              61          EXTRN cnd_destroy
                                              62 rd_list_elem ALIAS X'99846D9389A2A36D85938594'
                                              63          EXTRN rd_list_elem
                                              64 cnd_signal ALIAS X'8395846DA28987958193'
                                              65          EXTRN cnd_signal
                                              66 cnd_broadcast ALIAS X'8395846D82999681848381A2A3'
                                              67          EXTRN cnd_broadcast
                                              68 rd_kafka_timer_stop ALIAS X'99846D92818692816DA3899485996DA2A39697'
                                              69          EXTRN rd_kafka_timer_stop
                                              70 rd_kafka_timer_start0 ALIAS X'99846D92818692816DA3899485996DA2A38199A3F*
                                                                0'
                                              71          EXTRN rd_kafka_timer_start0
                                              72 rd_list_find ALIAS X'99846D9389A2A36D86899584'
                                              73          EXTRN rd_list_find
                                              74 rd_list_cmp_str ALIAS X'99846D9389A2A36D8394976DA2A399'
                                              75          EXTRN rd_list_cmp_str
                                              76 rd_list_apply ALIAS X'99846D9389A2A36D81979793A8'
                                              77          EXTRN rd_list_apply
                                              78 rd_avl_destroy ALIAS X'99846D81A5936D8485A2A39996A8'
                                              79          EXTRN rd_avl_destroy
                                              80 rd_avl_init ALIAS X'99846D81A5936D899589A3'
                                              81          EXTRN rd_avl_init
                                              82 cnd_timedwait_ms ALIAS X'8395846DA389948584A68189A36D94A2'
                                              83          EXTRN cnd_timedwait_ms
                                              84 rd_avl_insert_node ALIAS X'99846D81A5936D8995A28599A36D95968485'
                                              85          EXTRN rd_avl_insert_node
                                              86 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                              87          EXTRN rd_kafka_crash
                                              88 rd_kafka_topic_partition_list_get_topic_names ALIAS X'99846D92818692816*
                                                                DA3969789836D978199A389A38996956D9389A2A36D8785A36DA3969*
                                                                789836D95819485A2'
                                              89          EXTRN rd_kafka_topic_partition_list_get_topic_names
                                              90 rwlock_rdlock ALIAS X'99A6939683926D998493968392'
                                              91          EXTRN rwlock_rdlock
                                              92 rwlock_wrlock ALIAS X'99A6939683926DA69993968392'
                                              93          EXTRN rwlock_wrlock
                                              94 rwlock_rdunlock ALIAS X'99A6939683926D9984A49593968392'
                                              95          EXTRN rwlock_rdunlock
                                              96 rwlock_wrunlock ALIAS X'99A6939683926DA699A49593968392'
                                              97          EXTRN rwlock_wrunlock
                                              98 __stderrp ALIAS C'@@STDERP'
                                              99 __stderrp DXD   0F
                                             100 bsearch  ALIAS C'bsearch'
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             101          EXTRN bsearch
                                             102 rd_kafka_enq_once_trigger_destroy ALIAS X'99846D92818692816D8595986D969*
                                                                583856DA39989878785996D8485A2A39996A8'
                                             103          EXTRN rd_kafka_enq_once_trigger_destroy
                                             104 rd_avl_remove_elm0 ALIAS X'99846D81A5936D99859496A5856D859394F0'
                                             105          EXTRN rd_avl_remove_elm0
                                             106 free     ALIAS C'free'
                                             107          EXTRN free
                                             108 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                             109          EXTRN rd_kafka_log0
                                             110 *
                                             111 *
                                             112 *
                                             113 * ....... start of rd_malloc
00000000                                     114 @LNAME752 DS   0H
00000000 00000009                            115          DC    X'00000009'
00000004 99846D9481939396                    116          DC    C'rd_malloc'
0000000D 00                                  117          DC    X'00'
                                             118 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                             119          macro
                                             120          dccextrn &m
                                             121          gblc    &$dccext(1000)
                                             122          gbla    &$dccexti
                                             123          lcla    &i
                                             124 &$dccext(&$dccexti+1) setc    '&m'
                                             125 &i       seta    1
                                             126 .loop    aif    (&i gt &$dccexti).around
                                             127          aif    ('&$dccext(&i)' eq '&m').getout
                                             128 &i       seta    &i+1
                                             129          ago     .loop
                                             130 .around  anop
                                             131 &$dccexti seta &$dccexti+1
                                             132          extrn  &m
                                             133 .getout  anop
                                             134          mend
00000010                                     135+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                              136+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                  137+         dc xl1'01' format one                                          02-DCCCA
00000014 00000000                            138+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                    139+         dc ad(@PER_752)                                                02-DCCCA
00000020 00000000000000D0                    140+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                    141+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                    142+         dc ad(4096)                                                    02-DCCCA
00000038 20                                  143+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                  144+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                  145+         dc al1(3)                                                      02-DCCCA
0000003B 08                                  146+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                  147+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                              148+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                    149+         dc ad(@LNAME752)                                               02-DCCCA
00000048                                     150+         ds 0d                                                          02-DCCCA
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000048 0000000000000010                    151+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                    152+         dc ad(0)                                                       02-DCCCA
00000058                                     153+         ds    0d                                                       01-DCCPR
00000058                                     154+rd_malloc ds   0d                                                       01-DCCPR
00000058                                     155+@REGION_752_1 ds 0h                                                     01-DCCPR
00000058 EBEC D008 0024          00000008    156+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088    157+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090    158+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                           159+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018    160+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0    161+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020    162+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020    163+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                     164+@PER_752 ds    0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080    165+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090    166+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                           167+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                           168+         lgr   12,15               set base reg                         01-DCCPR
                        00000058             169+         using @REGION_752_1,12                                         01-DCCPR
                                             170 * ******* End of Prologue
                                             171 * *
                                             172 * ***      void *p = malloc(sz);
00000096 E3F0 1000 0004          00000000    173          LG    15,0(0,1)   ; sz
0000009C E3F0 D0B0 0024          000000B0    174          STG   15,176(0,13)
000000A2 4110 D0B0               000000B0    175          LA    1,176(0,13)
000000A6 E3F0 C0F0 0004          00000148    176          LG    15,@lit_752_0 ; malloc
000000AC                                     177 @@gen_label0 DS    0H
000000AC 05EF                                178          BALR  14,15
000000AE                                     179 @@gen_label1 DS    0H
000000AE B904 002F                           180          LGR   2,15
                                             181 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             182 * ka\\src\\rd.h", 128, "p"));
000000B2 B902 00F2                           183          LTGR  15,2
000000B6 4770 C09A               000000F2    184          BNZ   @L34
000000BA                                     185 @L33     DS    0H
000000BA E3F0 C108 0004          00000160    186          LG    15,@lit_752_1
000000C0 41F0 F00A               0000000A    187          LA    15,10(0,15)
000000C4 E3F0 D0B0 0024          000000B0    188          STG   15,176(0,13)
000000CA E3F0 C100 0004          00000158    189          LG    15,@lit_752_2
000000D0 E3F0 D0B8 0024          000000B8    190          STG   15,184(0,13)
000000D6 E548 D0C0 0080          000000C0    191          MVGHI 192(13),128
000000DC 41F0 F020               00000020    192          LA    15,32(0,15)
000000E0 E3F0 D0C8 0024          000000C8    193          STG   15,200(0,13)
000000E6 4110 D0B0               000000B0    194          LA    1,176(0,13)
000000EA E3F0 C0F8 0004          00000150    195          LG    15,@lit_752_3 ; __assert
000000F0                                     196 @@gen_label3 DS    0H
000000F0 05EF                                197          BALR  14,15
000000F2                                     198 @@gen_label4 DS    0H
000000F2                                     199 @L34     DS    0H
                                             200 * ***      return p;
000000F2 B904 00F2                           201          LGR   15,2
                                             202 * ***   }
                                                                                                                           Page   10 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             203 * * **** Start of Epilogue
                                             204          DCCEPIL
000000F6                                     205+         ds 0h                                                          01-DCCEP
                                             206+* Epilog
000000F6 D707 D088 D088 00000088 00000088    207+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000FC E3D0 D080 0004          00000080    208+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000102 E3C0 D090 0004          00000090    209+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000108 E3B0 C018 0004          00000018    210+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000010E E3C0 B010 0021          00000010    211+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000114 E3E0 D008 0004          00000008    212+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000011A EB1C D020 0004          00000020    213+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000120 078E                                214+         bcr 8,14                if same dsab, just return              01-DCCEP
00000122 E3F0 D010 0024          00000010    215+         stg 15,16(0,13)         save return code                       01-DCCEP
00000128 E300 D018 0024          00000018    216+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000012E E3F0 D090 0004          00000090    217+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000134 E3F0 F018 0004          00000018    218+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000013A 47F0 F040               00000040    219+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             220+* End of Epilog
                                             221 * * **** End of Epilogue
00000140                                     222          DS    0D
00000140 000000D0                            223 @FRAMESIZE_752 DC F'208'
00000144 00000000
00000148 0000000000000000                    224 @lit_752_0 DC  AD(malloc)
00000150 0000000000000000                    225 @lit_752_3 DC  AD(__assert)
00000158 0000000000006076                    226 @lit_752_2 DC  AD(@strings@)
00000160 0000000000005E90                    227 @lit_752_1 DC  AD(@DATA)
                                             228          DROP  12
                                             229 *
                                             230 *   DSECT for automatic variables in "rd_malloc"
                                             231 *      (FUNCTION #752)
                                             232 *
00000000                00000000 000000A8    233 @AUTO#rd_malloc DSECT
00000000                                     234          DS    XL168
                                             235 *
00000168                00000000 00005E8C    236 @CODE    CSECT
                                             237 *
                                             238 *
                                             239 *
                                             240 * ....... start of rd_free
00000168                                     241 @LNAME754 DS   0H
00000168 00000007                            242          DC    X'00000007'
0000016C 99846D86998585                      243          DC    C'rd_free'
00000173 00                                  244          DC    X'00'
                                             245 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             246          macro
                                             247          dccextrn &m
                                             248          gblc    &$dccext(1000)
                                             249          gbla    &$dccexti
                                             250          lcla    &i
                                             251 &$dccext(&$dccexti+1) setc    '&m'
                                             252 &i       seta    1
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             253 .loop    aif    (&i gt &$dccexti).around
                                             254          aif    ('&$dccext(&i)' eq '&m').getout
                                             255 &i       seta    &i+1
                                             256          ago     .loop
                                             257 .around  anop
                                             258 &$dccexti seta &$dccexti+1
                                             259          extrn  &m
                                             260 .getout  anop
                                             261          mend
00000178                                     262+$eye0005    ds    0d                                                    02-DCCCA
00000178 C4C3C3                              263+         dc cl3'DCC'                                                    02-DCCCA
0000017B 01                                  264+         dc xl1'01' format one                                          02-DCCCA
0000017C 00000000                            265+         dc a(0)                                                        02-DCCCA
00000180 00000000000001EA                    266+         dc ad(@PER_754)                                                02-DCCCA
00000188 00000000000000B0                    267+         dc ad(176)                                                     02-DCCCA
00000190 0000000000000000                    268+         dc ad(0)                                                       02-DCCCA
00000198 0000000000001000                    269+         dc ad(4096)                                                    02-DCCCA
000001A0 20                                  270+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A1 03                                  271+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001A2 03                                  272+         dc al1(3)                                                      02-DCCCA
000001A3 08                                  273+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000001A4 00                                  274+         dc bl.8'00000000'                                              02-DCCCA
000001A5 000000                              275+         dc al3(0)                                                      02-DCCCA
000001A8 0000000000000168                    276+         dc ad(@LNAME754)                                               02-DCCCA
000001B0                                     277+         ds 0d                                                          02-DCCCA
000001B0 0000000000000178                    278+         dc ad($eye0005)                                                02-DCCCA
000001B8 0000000000000000                    279+         dc ad(0)                                                       02-DCCCA
000001C0                                     280+         ds    0d                                                       01-DCCPR
000001C0                                     281+rd_free  ds    0d                                                       01-DCCPR
000001C0                                     282+@REGION_754_1 ds 0h                                                     01-DCCPR
000001C0 EBEC D008 0024          00000008    283+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001C6 E3E0 D088 0004          00000088    284+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001CC E3C0 D090 0004          00000090    285+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001D2 B904 002E                           286+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001D6 E3B0 C018 0004          00000018    287+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001DC A7EB 00B0               000000B0    288+         aghi  14,176              increase by frame size               01-DCCPR
000001E0 E3E0 C020 0021          00000020    289+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001E6 4720 B020               00000020    290+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001EA                                     291+@PER_754 ds    0h                                                       01-DCCPR
000001EA EBDE 2080 0024          00000080    292+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F0 E3C0 2090 0024          00000090    293+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001F6 B904 00D2                           294+         lgr   13,2                set real frame pointer               01-DCCPR
000001FA B904 00CF                           295+         lgr   12,15               set base reg                         01-DCCPR
                        000001C0             296+         using @REGION_754_1,12                                         01-DCCPR
                                             297 * ******* End of Prologue
                                             298 * *
                                             299 * ***      free(ptr);
000001FE E3F0 1000 0004          00000000    300          LG    15,0(0,1)   ; ptr
00000204 E3F0 D0A8 0024          000000A8    301          STG   15,168(0,13)
0000020A 4110 D0A8               000000A8    302          LA    1,168(0,13)
0000020E E3F0 C0A8 0004          00000268    303          LG    15,@lit_754_5 ; free
00000214                                     304 @@gen_label5 DS    0H
                                                                                                                           Page   12 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000214 05EF                                305          BALR  14,15
00000216                                     306 @@gen_label6 DS    0H
                                             307 * ***   }
00000216                                     308 @ret_lab_754 DS 0H
                                             309 * * **** Start of Epilogue
                                             310          DCCEPIL
00000216                                     311+         ds 0h                                                          01-DCCEP
                                             312+* Epilog
00000216 D707 D088 D088 00000088 00000088    313+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000021C E3D0 D080 0004          00000080    314+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000222 E3C0 D090 0004          00000090    315+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000228 E3B0 C018 0004          00000018    316+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000022E E3C0 B010 0021          00000010    317+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000234 E3E0 D008 0004          00000008    318+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000023A EB1C D020 0004          00000020    319+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000240 078E                                320+         bcr 8,14                if same dsab, just return              01-DCCEP
00000242 E3F0 D010 0024          00000010    321+         stg 15,16(0,13)         save return code                       01-DCCEP
00000248 E300 D018 0024          00000018    322+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000024E E3F0 D090 0004          00000090    323+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000254 E3F0 F018 0004          00000018    324+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000025A 47F0 F040               00000040    325+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             326+* End of Epilog
                                             327 * * **** End of Epilogue
00000260                                     328          DS    0D
00000260 000000B0                            329 @FRAMESIZE_754 DC F'176'
00000264 00000000
00000268 0000000000000000                    330 @lit_754_5 DC  AD(free)
                                             331          DROP  12
                                             332 *
                                             333 *   DSECT for automatic variables in "rd_free"
                                             334 *      (FUNCTION #754)
                                             335 *
00000000                00000000 000000A8    336 @AUTO#rd_free DSECT
00000000                                     337          DS    XL168
                                             338 *
00000270                00000000 00005E8C    339 @CODE    CSECT
                                             340 *
                                             341 *
                                             342 *
                                             343 * ....... start of rd_strdup
00000270                                     344 @LNAME755 DS   0H
00000270 00000009                            345          DC    X'00000009'
00000274 99846DA2A39984A4                    346          DC    C'rd_strdup'
0000027D 00                                  347          DC    X'00'
                                             348 rd_strdup DCCPRLG CINDEX=755,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME755
                                             349          macro
                                             350          dccextrn &m
                                             351          gblc    &$dccext(1000)
                                             352          gbla    &$dccexti
                                             353          lcla    &i
                                             354 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             355 &i       seta    1
                                             356 .loop    aif    (&i gt &$dccexti).around
                                             357          aif    ('&$dccext(&i)' eq '&m').getout
                                             358 &i       seta    &i+1
                                             359          ago     .loop
                                             360 .around  anop
                                             361 &$dccexti seta &$dccexti+1
                                             362          extrn  &m
                                             363 .getout  anop
                                             364          mend
00000280                                     365+$eye0008    ds    0d                                                    02-DCCCA
00000280 C4C3C3                              366+         dc cl3'DCC'                                                    02-DCCCA
00000283 01                                  367+         dc xl1'01' format one                                          02-DCCCA
00000284 00000000                            368+         dc a(0)                                                        02-DCCCA
00000288 00000000000002F2                    369+         dc ad(@PER_755)                                                02-DCCCA
00000290 00000000000000D0                    370+         dc ad(208)                                                     02-DCCCA
00000298 0000000000000000                    371+         dc ad(0)                                                       02-DCCCA
000002A0 0000000000001000                    372+         dc ad(4096)                                                    02-DCCCA
000002A8 20                                  373+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002A9 03                                  374+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002AA 03                                  375+         dc al1(3)                                                      02-DCCCA
000002AB 08                                  376+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002AC 00                                  377+         dc bl.8'00000000'                                              02-DCCCA
000002AD 000000                              378+         dc al3(0)                                                      02-DCCCA
000002B0 0000000000000270                    379+         dc ad(@LNAME755)                                               02-DCCCA
000002B8                                     380+         ds 0d                                                          02-DCCCA
000002B8 0000000000000280                    381+         dc ad($eye0008)                                                02-DCCCA
000002C0 0000000000000000                    382+         dc ad(0)                                                       02-DCCCA
000002C8                                     383+         ds    0d                                                       01-DCCPR
000002C8                                     384+rd_strdup ds   0d                                                       01-DCCPR
000002C8                                     385+@REGION_755_1 ds 0h                                                     01-DCCPR
000002C8 EBEC D008 0024          00000008    386+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002CE E3E0 D088 0004          00000088    387+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002D4 E3C0 D090 0004          00000090    388+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000002DA B904 002E                           389+         lgr   2,14                copy addr of our savearea            01-DCCPR
000002DE E3B0 C018 0004          00000018    390+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000002E4 A7EB 00D0               000000D0    391+         aghi  14,208              increase by frame size               01-DCCPR
000002E8 E3E0 C020 0021          00000020    392+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000002EE 4720 B020               00000020    393+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000002F2                                     394+@PER_755 ds    0h                                                       01-DCCPR
000002F2 EBDE 2080 0024          00000080    395+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000002F8 E3C0 2090 0024          00000090    396+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000002FE B904 00D2                           397+         lgr   13,2                set real frame pointer               01-DCCPR
00000302 B904 00CF                           398+         lgr   12,15               set base reg                         01-DCCPR
                        000002C8             399+         using @REGION_755_1,12                                         01-DCCPR
                                             400 * ******* End of Prologue
                                             401 * *
                                             402 * ***
                                             403 * ***      char *n = strdup(s);
00000306 E3F0 1000 0004          00000000    404          LG    15,0(0,1)   ; s
0000030C E3F0 D0B0 0024          000000B0    405          STG   15,176(0,13)
00000312 4110 D0B0               000000B0    406          LA    1,176(0,13)
                                                                                                                           Page   14 
  Active Usings: @REGION_755_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000316 E3F0 C0F0 0004          000003B8    407          LG    15,@lit_755_7 ; strdup
0000031C                                     408 @@gen_label7 DS    0H
0000031C 05EF                                409          BALR  14,15
0000031E                                     410 @@gen_label8 DS    0H
0000031E B904 002F                           411          LGR   2,15
                                             412 * ***
                                             413 * ***
                                             414 * ***
                                             415 * ***      ((n) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             416 * ka\\src\\rd.h", 148, "n"));
00000322 B902 00F2                           417          LTGR  15,2
00000326 4770 C09A               00000362    418          BNZ   @L38
0000032A                                     419 @L37     DS    0H
0000032A E3F0 C108 0004          000003D0    420          LG    15,@lit_755_8
00000330 41F0 F020               00000020    421          LA    15,32(0,15)
00000334 E3F0 D0B0 0024          000000B0    422          STG   15,176(0,13)
0000033A E3F0 C100 0004          000003C8    423          LG    15,@lit_755_9
00000340 E3F0 D0B8 0024          000000B8    424          STG   15,184(0,13)
00000346 E548 D0C0 0094          000000C0    425          MVGHI 192(13),148
0000034C 41F0 F022               00000022    426          LA    15,34(0,15)
00000350 E3F0 D0C8 0024          000000C8    427          STG   15,200(0,13)
00000356 4110 D0B0               000000B0    428          LA    1,176(0,13)
0000035A E3F0 C0F8 0004          000003C0    429          LG    15,@lit_755_10 ; __assert
00000360                                     430 @@gen_label10 DS    0H
00000360 05EF                                431          BALR  14,15
00000362                                     432 @@gen_label11 DS    0H
00000362                                     433 @L38     DS    0H
                                             434 * ***      return n;
00000362 B904 00F2                           435          LGR   15,2
                                             436 * ***   }
                                             437 * * **** Start of Epilogue
                                             438          DCCEPIL
00000366                                     439+         ds 0h                                                          01-DCCEP
                                             440+* Epilog
00000366 D707 D088 D088 00000088 00000088    441+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000036C E3D0 D080 0004          00000080    442+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000372 E3C0 D090 0004          00000090    443+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000378 E3B0 C018 0004          00000018    444+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000037E E3C0 B010 0021          00000010    445+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000384 E3E0 D008 0004          00000008    446+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000038A EB1C D020 0004          00000020    447+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000390 078E                                448+         bcr 8,14                if same dsab, just return              01-DCCEP
00000392 E3F0 D010 0024          00000010    449+         stg 15,16(0,13)         save return code                       01-DCCEP
00000398 E300 D018 0024          00000018    450+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000039E E3F0 D090 0004          00000090    451+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003A4 E3F0 F018 0004          00000018    452+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003AA 47F0 F040               00000040    453+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             454+* End of Epilog
                                             455 * * **** End of Epilogue
000003B0                                     456          DS    0D
000003B0 000000D0                            457 @FRAMESIZE_755 DC F'208'
000003B4 00000000
                                                                                                                           Page   15 
  Active Usings: @REGION_755_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000003B8 0000000000000000                    458 @lit_755_7 DC  AD(strdup)
000003C0 0000000000000000                    459 @lit_755_10 DC AD(__assert)
000003C8 0000000000006076                    460 @lit_755_9 DC  AD(@strings@)
000003D0 0000000000005E90                    461 @lit_755_8 DC  AD(@DATA)
                                             462          DROP  12
                                             463 *
                                             464 *   DSECT for automatic variables in "rd_strdup"
                                             465 *      (FUNCTION #755)
                                             466 *
00000000                00000000 000000A8    467 @AUTO#rd_strdup DSECT
00000000                                     468          DS    XL168
                                             469 *
000003D8                00000000 00005E8C    470 @CODE    CSECT
                                             471 *
                                             472 *
                                             473 *
                                             474 * ....... start of rd_clock
000003D8                                     475 @LNAME1088 DS  0H
000003D8 00000008                            476          DC    X'00000008'
000003DC 99846D8393968392                    477          DC    C'rd_clock'
000003E4 00                                  478          DC    X'00'
                                             479 rd_clock DCCPRLG CINDEX=1088,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1088
                                             480          macro
                                             481          dccextrn &m
                                             482          gblc    &$dccext(1000)
                                             483          gbla    &$dccexti
                                             484          lcla    &i
                                             485 &$dccext(&$dccexti+1) setc    '&m'
                                             486 &i       seta    1
                                             487 .loop    aif    (&i gt &$dccexti).around
                                             488          aif    ('&$dccext(&i)' eq '&m').getout
                                             489 &i       seta    &i+1
                                             490          ago     .loop
                                             491 .around  anop
                                             492 &$dccexti seta &$dccexti+1
                                             493          extrn  &m
                                             494 .getout  anop
                                             495          mend
000003E8                                     496+$eye0011    ds    0d                                                    02-DCCCA
000003E8 C4C3C3                              497+         dc cl3'DCC'                                                    02-DCCCA
000003EB 01                                  498+         dc xl1'01' format one                                          02-DCCCA
000003EC 00000000                            499+         dc a(0)                                                        02-DCCCA
000003F0 000000000000045A                    500+         dc ad(@PER_1088)                                               02-DCCCA
000003F8 00000000000000C8                    501+         dc ad(200)                                                     02-DCCCA
00000400 0000000000000000                    502+         dc ad(0)                                                       02-DCCCA
00000408 0000000000001000                    503+         dc ad(4096)                                                    02-DCCCA
00000410 20                                  504+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000411 03                                  505+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000412 03                                  506+         dc al1(3)                                                      02-DCCCA
00000413 08                                  507+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000414 00                                  508+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000415 000000                              509+         dc al3(0)                                                      02-DCCCA
00000418 00000000000003D8                    510+         dc ad(@LNAME1088)                                              02-DCCCA
00000420                                     511+         ds 0d                                                          02-DCCCA
00000420 00000000000003E8                    512+         dc ad($eye0011)                                                02-DCCCA
00000428 0000000000000000                    513+         dc ad(0)                                                       02-DCCCA
00000430                                     514+         ds    0d                                                       01-DCCPR
00000430                                     515+rd_clock ds    0d                                                       01-DCCPR
00000430                                     516+@REGION_1088_1 ds 0h                                                    01-DCCPR
00000430 EBEC D008 0024          00000008    517+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000436 E3E0 D088 0004          00000088    518+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000043C E3C0 D090 0004          00000090    519+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000442 B904 002E                           520+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000446 E3B0 C018 0004          00000018    521+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000044C A7EB 00C8               000000C8    522+         aghi  14,200              increase by frame size               01-DCCPR
00000450 E3E0 C020 0021          00000020    523+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000456 4720 B020               00000020    524+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000045A                                     525+@PER_1088 ds   0h                                                       01-DCCPR
0000045A EBDE 2080 0024          00000080    526+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000460 E3C0 2090 0024          00000090    527+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000466 B904 00D2                           528+         lgr   13,2                set real frame pointer               01-DCCPR
0000046A B904 00CF                           529+         lgr   12,15               set base reg                         01-DCCPR
                        00000430             530+         using @REGION_1088_1,12                                        01-DCCPR
                                             531 * ******* End of Prologue
                                             532 * *
                                             533 * ***   # 97 "C:\asgkafka\librdkafka\src\rdtime.h"
                                             534 * ***       struct timeval tv;
                                             535 * ***       gettimeofday(&tv, ((void *)0));
0000046E 41F0 D0A8               000000A8    536          LA    15,168(0,13)
00000472 E3F0 D0B8 0024          000000B8    537          STG   15,184(0,13)
00000478 D707 D0C0 D0C0 000000C0 000000C0    538          XC    192(8,13),192(13)
0000047E 4110 D0B8               000000B8    539          LA    1,184(0,13)
00000482 E3F0 C0C0 0004          000004F0    540          LG    15,@lit_1088_12 ; gettimeofday
00000488                                     541 @@gen_label12 DS    0H
00000488 05EF                                542          BALR  14,15
0000048A                                     543 @@gen_label13 DS    0H
                                             544 * ***       return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_\
                                             545 * usec;
0000048A E3F0 D0A8 0004          000000A8    546          LG    15,168(0,13)
00000490 C2F0 000F 4240                      547          MSGFI 15,X'000F4240'
00000496 E310 D0B0 0004          000000B0    548          LG    1,176(0,13) ; offset of tv_usec in timeval
0000049C B90A 00F1                           549          ALGR  15,1
                                             550 * ***   # 118 "C:\asgkafka\librdkafka\src\rdtime.h"
                                             551 * ***   }
                                             552 * * **** Start of Epilogue
                                             553          DCCEPIL
000004A0                                     554+         ds 0h                                                          01-DCCEP
                                             555+* Epilog
000004A0 D707 D088 D088 00000088 00000088    556+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000004A6 E3D0 D080 0004          00000080    557+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000004AC E3C0 D090 0004          00000090    558+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000004B2 E3B0 C018 0004          00000018    559+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000004B8 E3C0 B010 0021          00000010    560+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   17 
  Active Usings: @REGION_1088_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000004BE E3E0 D008 0004          00000008    561+         lg  14,8(0,13)          load up return address                 01-DCCEP
000004C4 EB1C D020 0004          00000020    562+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000004CA 078E                                563+         bcr 8,14                if same dsab, just return              01-DCCEP
000004CC E3F0 D010 0024          00000010    564+         stg 15,16(0,13)         save return code                       01-DCCEP
000004D2 E300 D018 0024          00000018    565+         stg 0,24(0,13)          save more return code                  01-DCCEP
000004D8 E3F0 D090 0004          00000090    566+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000004DE E3F0 F018 0004          00000018    567+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000004E4 47F0 F040               00000040    568+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             569+* End of Epilog
                                             570 * * **** End of Epilogue
000004E8                                     571          DS    0D
000004E8 000000C8                            572 @FRAMESIZE_1088 DC F'200'
000004EC 00000000
000004F0 0000000000000000                    573 @lit_1088_12 DC AD(gettimeofday)
                                             574          DROP  12
                                             575 *
                                             576 *   DSECT for automatic variables in "rd_clock"
                                             577 *      (FUNCTION #1088)
                                             578 *
00000000                00000000 000000B8    579 @AUTO#rd_clock DSECT
00000000                                     580          DS    XL168
000000A8                                     581 rd_clock#tv#0 DS 16XL1     ; tv
                                             582 *
000004F8                00000000 00005E8C    583 @CODE    CSECT
                                             584 *
                                             585 *
                                             586 *
                                             587 * ....... start of rd_list_cnt
000004F8                                     588 @LNAME1247 DS  0H
000004F8 0000000B                            589          DC    X'0000000B'
000004FC 99846D9389A2A36D                    590          DC    C'rd_list_cnt'
00000507 00                                  591          DC    X'00'
                                             592 rd_list_cnt DCCPRLG CINDEX=1247,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1247
                                             593          macro
                                             594          dccextrn &m
                                             595          gblc    &$dccext(1000)
                                             596          gbla    &$dccexti
                                             597          lcla    &i
                                             598 &$dccext(&$dccexti+1) setc    '&m'
                                             599 &i       seta    1
                                             600 .loop    aif    (&i gt &$dccexti).around
                                             601          aif    ('&$dccext(&i)' eq '&m').getout
                                             602 &i       seta    &i+1
                                             603          ago     .loop
                                             604 .around  anop
                                             605 &$dccexti seta &$dccexti+1
                                             606          extrn  &m
                                             607 .getout  anop
                                             608          mend
00000508                                     609+$eye0014    ds    0d                                                    02-DCCCA
00000508 C4C3C3                              610+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000050B 01                                  611+         dc xl1'01' format one                                          02-DCCCA
0000050C 00000000                            612+         dc a(0)                                                        02-DCCCA
00000510 0000000000000000                    613+         dc ad(0)                                                       02-DCCCA
00000518 00000000000000A8                    614+         dc ad(168)                                                     02-DCCCA
00000520 0000000000000000                    615+         dc ad(0)                                                       02-DCCCA
00000528 0000000000001000                    616+         dc ad(4096)                                                    02-DCCCA
00000530 20                                  617+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000531 03                                  618+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000532 03                                  619+         dc al1(3)                                                      02-DCCCA
00000533 08                                  620+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000534 00                                  621+         dc bl.8'00000000'                                              02-DCCCA
00000535 000000                              622+         dc al3(0)                                                      02-DCCCA
00000538 00000000000004F8                    623+         dc ad(@LNAME1247)                                              02-DCCCA
00000540                                     624+         ds 0d                                                          02-DCCCA
00000540 0000000000000508                    625+         dc ad($eye0014)                                                02-DCCCA
00000548 0000000000000000                    626+         dc ad(0)                                                       02-DCCCA
00000550                                     627+         ds    0d                                                       01-DCCPR
00000550                                     628+rd_list_cnt ds 0d                                                       01-DCCPR
00000550                                     629+@REGION_1247_1 ds 0h                                                    01-DCCPR
00000550 EBEC D008 0024          00000008    630+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             631 * ******* End of Prologue
                                             632 * *
                                             633 * ***           return rl->rl_cnt;
00000556 E3F0 1000 0004          00000000    634          LG    15,0(0,1)   ; rl
0000055C E3F0 F004 0014          00000004    635          LGF   15,4(0,15)
                                             636 * ***   }
                                             637 * * **** Start of Epilogue
                                             638          DCCEPIL
00000562                                     639+         ds 0h                                                          01-DCCEP
                                             640+* Epilog
                                             641+* Epilog
00000562 E3E0 D008 0004          00000008    642+         lg    14,8(,13) restore the reg                                01-DCCEP
00000568 EB1C D020 0004          00000020    643+         lmg   1,12,32(13)                                              01-DCCEP
0000056E 07FE                                644+         br   14                                                        01-DCCEP
                                             645+* End of Epilog
                                             646 * * **** End of Epilogue
                                             647 *
                                             648 *   DSECT for automatic variables in "rd_list_cnt"
                                             649 *      (FUNCTION #1247)
                                             650 *
00000000                00000000 000000A8    651 @AUTO#rd_list_cnt DSECT
00000000                                     652          DS    XL168
                                             653 *
00000570                00000000 00005E8C    654 @CODE    CSECT
                                             655 *
                                             656 *
                                             657 *
                                             658 * ....... start of rd_kafka_q_keep
00000570                                     659 @LNAME1428 DS  0H
00000570 0000000F                            660          DC    X'0000000F'
00000574 99846D9281869281                    661          DC    C'rd_kafka_q_keep'
00000583 00                                  662          DC    X'00'
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             663 rd_kafka_q_keep DCCPRLG CINDEX=1428,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1428
                                             664          macro
                                             665          dccextrn &m
                                             666          gblc    &$dccext(1000)
                                             667          gbla    &$dccexti
                                             668          lcla    &i
                                             669 &$dccext(&$dccexti+1) setc    '&m'
                                             670 &i       seta    1
                                             671 .loop    aif    (&i gt &$dccexti).around
                                             672          aif    ('&$dccext(&i)' eq '&m').getout
                                             673 &i       seta    &i+1
                                             674          ago     .loop
                                             675 .around  anop
                                             676 &$dccexti seta &$dccexti+1
                                             677          extrn  &m
                                             678 .getout  anop
                                             679          mend
00000588                                     680+$eye0017    ds    0d                                                    02-DCCCA
00000588 C4C3C3                              681+         dc cl3'DCC'                                                    02-DCCCA
0000058B 01                                  682+         dc xl1'01' format one                                          02-DCCCA
0000058C 00000000                            683+         dc a(0)                                                        02-DCCCA
00000590 00000000000005FA                    684+         dc ad(@PER_1428)                                               02-DCCCA
00000598 00000000000000B0                    685+         dc ad(176)                                                     02-DCCCA
000005A0 0000000000000000                    686+         dc ad(0)                                                       02-DCCCA
000005A8 0000000000001000                    687+         dc ad(4096)                                                    02-DCCCA
000005B0 20                                  688+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000005B1 03                                  689+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000005B2 03                                  690+         dc al1(3)                                                      02-DCCCA
000005B3 08                                  691+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000005B4 00                                  692+         dc bl.8'00000000'                                              02-DCCCA
000005B5 000000                              693+         dc al3(0)                                                      02-DCCCA
000005B8 0000000000000570                    694+         dc ad(@LNAME1428)                                              02-DCCCA
000005C0                                     695+         ds 0d                                                          02-DCCCA
000005C0 0000000000000588                    696+         dc ad($eye0017)                                                02-DCCCA
000005C8 0000000000000000                    697+         dc ad(0)                                                       02-DCCCA
000005D0                                     698+         ds    0d                                                       01-DCCPR
000005D0                                     699+rd_kafka_q_keep ds 0d                                                   01-DCCPR
000005D0                                     700+@REGION_1428_1 ds 0h                                                    01-DCCPR
000005D0 EBEC D008 0024          00000008    701+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000005D6 E3E0 D088 0004          00000088    702+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000005DC E3C0 D090 0004          00000090    703+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000005E2 B904 002E                           704+         lgr   2,14                copy addr of our savearea            01-DCCPR
000005E6 E3B0 C018 0004          00000018    705+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000005EC A7EB 00B0               000000B0    706+         aghi  14,176              increase by frame size               01-DCCPR
000005F0 E3E0 C020 0021          00000020    707+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000005F6 4720 B020               00000020    708+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000005FA                                     709+@PER_1428 ds   0h                                                       01-DCCPR
000005FA EBDE 2080 0024          00000080    710+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000600 E3C0 2090 0024          00000090    711+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000606 B904 00D2                           712+         lgr   13,2                set real frame pointer               01-DCCPR
0000060A B904 00CF                           713+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   20 
  Active Usings: @REGION_1428_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        000005D0             714+         using @REGION_1428_1,12                                        01-DCCPR
                                             715 * ******* End of Prologue
                                             716 * *
                                             717 * ***           mtx_lock(&rkq->rkq_lock);
0000060E E320 1000 0004          00000000    718          LG    2,0(0,1)    ; rkq
00000614 E320 D0A8 0024          000000A8    719          STG   2,168(0,13)
0000061A 4110 D0A8               000000A8    720          LA    1,168(0,13)
0000061E E3F0 C0C8 0004          00000698    721          LG    15,@lit_1428_14 ; mtx_lock
00000624                                     722 @@gen_label14 DS    0H
00000624 05EF                                723          BALR  14,15
00000626                                     724 @@gen_label15 DS    0H
                                             725 * ***           rkq->rkq_refcnt++;
00000626 58F0 2080               00000080    726          L     15,128(0,2)
0000062A A7FA 0001               00000001    727          AHI   15,1
0000062E 50F0 2080               00000080    728          ST    15,128(0,2)
                                             729 * ***           mtx_unlock(&rkq->rkq_lock);
00000632 E320 D0A8 0024          000000A8    730          STG   2,168(0,13)
00000638 4110 D0A8               000000A8    731          LA    1,168(0,13)
0000063C E3F0 C0D0 0004          000006A0    732          LG    15,@lit_1428_15 ; mtx_unlock
00000642                                     733 @@gen_label16 DS    0H
00000642 05EF                                734          BALR  14,15
00000644                                     735 @@gen_label17 DS    0H
                                             736 * ***      return rkq;
00000644 B904 00F2                           737          LGR   15,2
                                             738 * ***   }
                                             739 * * **** Start of Epilogue
                                             740          DCCEPIL
00000648                                     741+         ds 0h                                                          01-DCCEP
                                             742+* Epilog
00000648 D707 D088 D088 00000088 00000088    743+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000064E E3D0 D080 0004          00000080    744+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000654 E3C0 D090 0004          00000090    745+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000065A E3B0 C018 0004          00000018    746+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000660 E3C0 B010 0021          00000010    747+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000666 E3E0 D008 0004          00000008    748+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000066C EB1C D020 0004          00000020    749+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000672 078E                                750+         bcr 8,14                if same dsab, just return              01-DCCEP
00000674 E3F0 D010 0024          00000010    751+         stg 15,16(0,13)         save return code                       01-DCCEP
0000067A E300 D018 0024          00000018    752+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000680 E3F0 D090 0004          00000090    753+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000686 E3F0 F018 0004          00000018    754+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000068C 47F0 F040               00000040    755+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             756+* End of Epilog
                                             757 * * **** End of Epilogue
00000690                                     758          DS    0D
00000690 000000B0                            759 @FRAMESIZE_1428 DC F'176'
00000694 00000000
00000698 0000000000000000                    760 @lit_1428_14 DC AD(mtx_lock)
000006A0 0000000000000000                    761 @lit_1428_15 DC AD(mtx_unlock)
                                             762          DROP  12
                                             763 *
                                             764 *   DSECT for automatic variables in "rd_kafka_q_keep"
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             765 *      (FUNCTION #1428)
                                             766 *
00000000                00000000 000000A8    767 @AUTO#rd_kafka_q_keep DSECT
00000000                                     768          DS    XL168
                                             769 *
000006A8                00000000 00005E8C    770 @CODE    CSECT
                                             771 *
                                             772 *
                                             773 *
                                             774 * ....... start of rd_kafka_q_disable0
000006A8                                     775 @LNAME1432 DS  0H
000006A8 00000013                            776          DC    X'00000013'
000006AC 99846D9281869281                    777          DC    C'rd_kafka_q_disable0'
000006BF 00                                  778          DC    X'00'
                                             779 rd_kafka_q_disable0 DCCPRLG CINDEX=1432,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1432
                                             780          macro
                                             781          dccextrn &m
                                             782          gblc    &$dccext(1000)
                                             783          gbla    &$dccexti
                                             784          lcla    &i
                                             785 &$dccext(&$dccexti+1) setc    '&m'
                                             786 &i       seta    1
                                             787 .loop    aif    (&i gt &$dccexti).around
                                             788          aif    ('&$dccext(&i)' eq '&m').getout
                                             789 &i       seta    &i+1
                                             790          ago     .loop
                                             791 .around  anop
                                             792 &$dccexti seta &$dccexti+1
                                             793          extrn  &m
                                             794 .getout  anop
                                             795          mend
000006C0                                     796+$eye0020    ds    0d                                                    02-DCCCA
000006C0 C4C3C3                              797+         dc cl3'DCC'                                                    02-DCCCA
000006C3 01                                  798+         dc xl1'01' format one                                          02-DCCCA
000006C4 00000000                            799+         dc a(0)                                                        02-DCCCA
000006C8 0000000000000732                    800+         dc ad(@PER_1432)                                               02-DCCCA
000006D0 00000000000000B0                    801+         dc ad(176)                                                     02-DCCCA
000006D8 0000000000000000                    802+         dc ad(0)                                                       02-DCCCA
000006E0 0000000000001000                    803+         dc ad(4096)                                                    02-DCCCA
000006E8 20                                  804+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000006E9 03                                  805+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000006EA 03                                  806+         dc al1(3)                                                      02-DCCCA
000006EB 08                                  807+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000006EC 00                                  808+         dc bl.8'00000000'                                              02-DCCCA
000006ED 000000                              809+         dc al3(0)                                                      02-DCCCA
000006F0 00000000000006A8                    810+         dc ad(@LNAME1432)                                              02-DCCCA
000006F8                                     811+         ds 0d                                                          02-DCCCA
000006F8 00000000000006C0                    812+         dc ad($eye0020)                                                02-DCCCA
00000700 0000000000000000                    813+         dc ad(0)                                                       02-DCCCA
00000708                                     814+         ds    0d                                                       01-DCCPR
00000708                                     815+rd_kafka_q_disable0 ds 0d                                               01-DCCPR
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000708                                     816+@REGION_1432_1 ds 0h                                                    01-DCCPR
00000708 EBEC D008 0024          00000008    817+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000070E E3E0 D088 0004          00000088    818+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000714 E3C0 D090 0004          00000090    819+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000071A B904 002E                           820+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000071E E3B0 C018 0004          00000018    821+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000724 A7EB 00B0               000000B0    822+         aghi  14,176              increase by frame size               01-DCCPR
00000728 E3E0 C020 0021          00000020    823+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000072E 4720 B020               00000020    824+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000732                                     825+@PER_1432 ds   0h                                                       01-DCCPR
00000732 EBDE 2080 0024          00000080    826+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000738 E3C0 2090 0024          00000090    827+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000073E B904 00D2                           828+         lgr   13,2                set real frame pointer               01-DCCPR
00000742 B904 00CF                           829+         lgr   12,15               set base reg                         01-DCCPR
                        00000708             830+         using @REGION_1432_1,12                                        01-DCCPR
                                             831 * ******* End of Prologue
                                             832 * *
                                             833 * ***           if (do_lock)
00000746 E320 1000 0004          00000000    834          LG    2,0(0,1)    ; rkq
0000074C E330 100C 0012          0000000C    835          LT    3,12(0,1)   ; do_lock
00000752 4780 C060               00000768    836          BZ    @L256
                                             837 * ***                   mtx_lock(&rkq->rkq_lock);
00000756 E320 D0A8 0024          000000A8    838          STG   2,168(0,13)
0000075C 4110 D0A8               000000A8    839          LA    1,168(0,13)
00000760 E3F0 C0D8 0004          000007E0    840          LG    15,@lit_1432_17 ; mtx_lock
00000766                                     841 @@gen_label19 DS    0H
00000766 05EF                                842          BALR  14,15
00000768                                     843 @@gen_label20 DS    0H
00000768                                     844 @L256    DS    0H
                                             845 * ***           rkq->rkq_flags &= ~0x2;
00000768 58F0 2084               00000084    846          L     15,132(0,2)
0000076C A5F7 FFFD               0000FFFD    847          NILL  15,65533
00000770 50F0 2084               00000084    848          ST    15,132(0,2)
                                             849 * ***           if (do_lock)
00000774 1233                                850          LTR   3,3
00000776 4780 C084               0000078C    851          BZ    @ret_lab_1432
                                             852 * ***                   mtx_unlock(&rkq->rkq_lock);
0000077A E320 D0A8 0024          000000A8    853          STG   2,168(0,13)
00000780 4110 D0A8               000000A8    854          LA    1,168(0,13)
00000784 E3F0 C0E0 0004          000007E8    855          LG    15,@lit_1432_18 ; mtx_unlock
0000078A                                     856 @@gen_label22 DS    0H
0000078A 05EF                                857          BALR  14,15
0000078C                                     858 @@gen_label23 DS    0H
0000078C                                     859 @L257    DS    0H
                                             860 * ***   }
0000078C                                     861 @ret_lab_1432 DS 0H
                                             862 * * **** Start of Epilogue
                                             863          DCCEPIL
0000078C                                     864+         ds 0h                                                          01-DCCEP
                                             865+* Epilog
0000078C D707 D088 D088 00000088 00000088    866+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000792 E3D0 D080 0004          00000080    867+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page   23 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000798 E3C0 D090 0004          00000090    868+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000079E E3B0 C018 0004          00000018    869+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000007A4 E3C0 B010 0021          00000010    870+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000007AA E3E0 D008 0004          00000008    871+         lg  14,8(0,13)          load up return address                 01-DCCEP
000007B0 EB1C D020 0004          00000020    872+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000007B6 078E                                873+         bcr 8,14                if same dsab, just return              01-DCCEP
000007B8 E3F0 D010 0024          00000010    874+         stg 15,16(0,13)         save return code                       01-DCCEP
000007BE E300 D018 0024          00000018    875+         stg 0,24(0,13)          save more return code                  01-DCCEP
000007C4 E3F0 D090 0004          00000090    876+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000007CA E3F0 F018 0004          00000018    877+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000007D0 47F0 F040               00000040    878+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             879+* End of Epilog
                                             880 * * **** End of Epilogue
000007D8                                     881          DS    0D
000007D8 000000B0                            882 @FRAMESIZE_1432 DC F'176'
000007DC 00000000
000007E0 0000000000000000                    883 @lit_1432_17 DC AD(mtx_lock)
000007E8 0000000000000000                    884 @lit_1432_18 DC AD(mtx_unlock)
                                             885          DROP  12
                                             886 *
                                             887 *   DSECT for automatic variables in "rd_kafka_q_disable0"
                                             888 *      (FUNCTION #1432)
                                             889 *
00000000                00000000 000000A8    890 @AUTO#rd_kafka_q_disable0 DSECT
00000000                                     891          DS    XL168
                                             892 *
000007F0                00000000 00005E8C    893 @CODE    CSECT
                                             894 *
                                             895 *
                                             896 *
                                             897 * ....... start of rd_kafka_q_destroy0
000007F0                                     898 @LNAME1435 DS  0H
000007F0 00000013                            899          DC    X'00000013'
000007F4 99846D9281869281                    900          DC    C'rd_kafka_q_destroy0'
00000807 00                                  901          DC    X'00'
                                             902 rd_kafka_q_destroy0 DCCPRLG CINDEX=1435,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1435
                                             903          macro
                                             904          dccextrn &m
                                             905          gblc    &$dccext(1000)
                                             906          gbla    &$dccexti
                                             907          lcla    &i
                                             908 &$dccext(&$dccexti+1) setc    '&m'
                                             909 &i       seta    1
                                             910 .loop    aif    (&i gt &$dccexti).around
                                             911          aif    ('&$dccext(&i)' eq '&m').getout
                                             912 &i       seta    &i+1
                                             913          ago     .loop
                                             914 .around  anop
                                             915 &$dccexti seta &$dccexti+1
                                             916          extrn  &m
                                             917 .getout  anop
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             918          mend
00000808                                     919+$eye0023    ds    0d                                                    02-DCCCA
00000808 C4C3C3                              920+         dc cl3'DCC'                                                    02-DCCCA
0000080B 01                                  921+         dc xl1'01' format one                                          02-DCCCA
0000080C 00000000                            922+         dc a(0)                                                        02-DCCCA
00000810 000000000000087A                    923+         dc ad(@PER_1435)                                               02-DCCCA
00000818 00000000000000D8                    924+         dc ad(216)                                                     02-DCCCA
00000820 0000000000000000                    925+         dc ad(0)                                                       02-DCCCA
00000828 0000000000001000                    926+         dc ad(4096)                                                    02-DCCCA
00000830 20                                  927+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000831 03                                  928+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000832 03                                  929+         dc al1(3)                                                      02-DCCCA
00000833 08                                  930+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000834 00                                  931+         dc bl.8'00000000'                                              02-DCCCA
00000835 000000                              932+         dc al3(0)                                                      02-DCCCA
00000838 00000000000007F0                    933+         dc ad(@LNAME1435)                                              02-DCCCA
00000840                                     934+         ds 0d                                                          02-DCCCA
00000840 0000000000000808                    935+         dc ad($eye0023)                                                02-DCCCA
00000848 0000000000000000                    936+         dc ad(0)                                                       02-DCCCA
00000850                                     937+         ds    0d                                                       01-DCCPR
00000850                                     938+rd_kafka_q_destroy0 ds 0d                                               01-DCCPR
00000850                                     939+@REGION_1435_1 ds 0h                                                    01-DCCPR
00000850 EBEC D008 0024          00000008    940+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000856 E3E0 D088 0004          00000088    941+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000085C E3C0 D090 0004          00000090    942+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000862 B904 002E                           943+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000866 E3B0 C018 0004          00000018    944+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000086C A7EB 00D8               000000D8    945+         aghi  14,216              increase by frame size               01-DCCPR
00000870 E3E0 C020 0021          00000020    946+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000876 4720 B020               00000020    947+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000087A                                     948+@PER_1435 ds   0h                                                       01-DCCPR
0000087A EBDE 2080 0024          00000080    949+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000880 E3C0 2090 0024          00000090    950+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000886 B904 00D2                           951+         lgr   13,2                set real frame pointer               01-DCCPR
0000088A B904 00CF                           952+         lgr   12,15               set base reg                         01-DCCPR
                        00000850             953+         using @REGION_1435_1,12                                        01-DCCPR
                                             954 * ******* End of Prologue
                                             955 * *
                                             956 * ***           int do_delete = 0;
0000088E E320 1000 0004          00000000    957          LG    2,0(0,1)    ; rkq
                                             958 * ***
                                             959 * ***           if (disable) {
00000894 E3F0 100C 0012          0000000C    960          LT    15,12(0,1)  ; disable
0000089A 4780 C07E               000008CE    961          BZ    @L258
                                             962 * ***
                                             963 * ***
                                             964 * ***
                                             965 * ***
                                             966 * ***                   rd_kafka_q_disable0(rkq, 1);
0000089E E320 D0B0 0024          000000B0    967          STG   2,176(0,13)
000008A4 E548 D0B8 0001          000000B8    968          MVGHI 184(13),1
000008AA 4110 D0B0               000000B0    969          LA    1,176(0,13)
                                                                                                                           Page   25 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000008AE E3F0 C170 0004          000009C0    970          LG    15,@lit_1435_21 ; rd_kafka_q_disable0
000008B4                                     971 @@gen_label25 DS    0H
000008B4 05EF                                972          BALR  14,15
000008B6                                     973 @@gen_label26 DS    0H
                                             974 * ***                   rd_kafka_q_purge0(rkq, 1);
000008B6 E320 D0B0 0024          000000B0    975          STG   2,176(0,13)
000008BC E548 D0B8 0001          000000B8    976          MVGHI 184(13),1
000008C2 4110 D0B0               000000B0    977          LA    1,176(0,13)
000008C6 E3F0 C178 0004          000009C8    978          LG    15,@lit_1435_22 ; rd_kafka_q_purge0
000008CC                                     979 @@gen_label27 DS    0H
000008CC 05EF                                980          BALR  14,15
000008CE                                     981 @@gen_label28 DS    0H
                                             982 * ***           }
000008CE                                     983 @L258    DS    0H
                                             984 * ***
                                             985 * ***           mtx_lock(&rkq->rkq_lock);
000008CE E320 D0B0 0024          000000B0    986          STG   2,176(0,13)
000008D4 4110 D0B0               000000B0    987          LA    1,176(0,13)
000008D8 E3F0 C180 0004          000009D0    988          LG    15,@lit_1435_23 ; mtx_lock
000008DE                                     989 @@gen_label29 DS    0H
000008DE 05EF                                990          BALR  14,15
000008E0                                     991 @@gen_label30 DS    0H
                                             992 * ***           do { if (((!(rkq->rkq_refcnt > 0)))) rd_kafka_crash("C\
                                             993 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h",211, __FUNCTION__, ((\
                                             994 * (void *)0)), "assert: " "rkq->rkq_refcnt > 0"); } while (0);
000008E0                                     995 @L259    DS    0H
000008E0 E55C 2080 0000          00000080    996          CHSI  128(2),0
000008E6 4720 C0DC               0000092C    997          BH    @L262
000008EA E3F0 C198 0004          000009E8    998          LG    15,@lit_1435_24
000008F0 4110 F024               00000024    999          LA    1,36(0,15)
000008F4 E310 D0B0 0024          000000B0   1000          STG   1,176(0,13)
000008FA E548 D0B8 00D3          000000B8   1001          MVGHI 184(13),211
00000900 E310 C190 0004          000009E0   1002          LG    1,@lit_1435_25
00000906 4110 1072               00000072   1003          LA    1,114(0,1)
0000090A E310 D0C0 0024          000000C0   1004          STG   1,192(0,13)
00000910 D707 D0C8 D0C8 000000C8 000000C8   1005          XC    200(8,13),200(13)
00000916 41F0 F050               00000050   1006          LA    15,80(0,15)
0000091A E3F0 D0D0 0024          000000D0   1007          STG   15,208(0,13)
00000920 4110 D0B0               000000B0   1008          LA    1,176(0,13)
00000924 E3F0 C188 0004          000009D8   1009          LG    15,@lit_1435_26 ; rd_kafka_crash
0000092A                                    1010 @@gen_label32 DS    0H
0000092A 05EF                               1011          BALR  14,15
0000092C                                    1012 @@gen_label33 DS    0H
0000092C                                    1013 @L262    DS    0H
                                            1014 * ***           do_delete = !--rkq->rkq_refcnt;
0000092C 58F0 2080               00000080   1015          L     15,128(0,2)
00000930 A7FA FFFF               0000FFFF   1016          AHI   15,-1
00000934 50F0 2080               00000080   1017          ST    15,128(0,2)
00000938 103F                               1018          LPR   3,15
0000093A A73A FFFF               0000FFFF   1019          AHI   3,-1
0000093E 8830 001F               0000001F   1020          SRL   3,31(0)
                                            1021 * ***           mtx_unlock(&rkq->rkq_lock);
                                                                                                                           Page   26 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000942 E320 D0B0 0024          000000B0   1022          STG   2,176(0,13)
00000948 4110 D0B0               000000B0   1023          LA    1,176(0,13)
0000094C E3F0 C1A0 0004          000009F0   1024          LG    15,@lit_1435_27 ; mtx_unlock
00000952                                    1025 @@gen_label34 DS    0H
00000952 05EF                               1026          BALR  14,15
00000954                                    1027 @@gen_label35 DS    0H
                                            1028 * ***
                                            1029 * ***           if (((do_delete)))
00000954 1233                               1030          LTR   3,3
00000956 4780 C11C               0000096C   1031          BZ    @L263
                                            1032 * ***                   rd_kafka_q_destroy_final(rkq);
0000095A E320 D0B0 0024          000000B0   1033          STG   2,176(0,13)
00000960 4110 D0B0               000000B0   1034          LA    1,176(0,13)
00000964 E3F0 C1A8 0004          000009F8   1035          LG    15,@lit_1435_28 ; rd_kafka_q_destroy_final
0000096A                                    1036 @@gen_label37 DS    0H
0000096A 05EF                               1037          BALR  14,15
0000096C                                    1038 @@gen_label38 DS    0H
0000096C                                    1039 @L263    DS    0H
                                            1040 * ***   }
0000096C                                    1041 @ret_lab_1435 DS 0H
                                            1042 * * **** Start of Epilogue
                                            1043          DCCEPIL
0000096C                                    1044+         ds 0h                                                          01-DCCEP
                                            1045+* Epilog
0000096C D707 D088 D088 00000088 00000088   1046+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000972 E3D0 D080 0004          00000080   1047+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000978 E3C0 D090 0004          00000090   1048+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000097E E3B0 C018 0004          00000018   1049+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000984 E3C0 B010 0021          00000010   1050+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000098A E3E0 D008 0004          00000008   1051+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000990 EB1C D020 0004          00000020   1052+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000996 078E                               1053+         bcr 8,14                if same dsab, just return              01-DCCEP
00000998 E3F0 D010 0024          00000010   1054+         stg 15,16(0,13)         save return code                       01-DCCEP
0000099E E300 D018 0024          00000018   1055+         stg 0,24(0,13)          save more return code                  01-DCCEP
000009A4 E3F0 D090 0004          00000090   1056+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000009AA E3F0 F018 0004          00000018   1057+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000009B0 47F0 F040               00000040   1058+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1059+* End of Epilog
                                            1060 * * **** End of Epilogue
000009B8                                    1061          DS    0D
000009B8 000000D8                           1062 @FRAMESIZE_1435 DC F'216'
000009BC 00000000
000009C0 0000000000000708                   1063 @lit_1435_21 DC AD(rd_kafka_q_disable0)
000009C8 0000000000000000                   1064 @lit_1435_22 DC AD(rd_kafka_q_purge0)
000009D0 0000000000000000                   1065 @lit_1435_23 DC AD(mtx_lock)
000009D8 0000000000000000                   1066 @lit_1435_26 DC AD(rd_kafka_crash)
000009E0 0000000000005E90                   1067 @lit_1435_25 DC AD(@DATA)
000009E8 0000000000006076                   1068 @lit_1435_24 DC AD(@strings@)
000009F0 0000000000000000                   1069 @lit_1435_27 DC AD(mtx_unlock)
000009F8 0000000000000000                   1070 @lit_1435_28 DC AD(rd_kafka_q_destroy_final)
                                            1071          DROP  12
                                            1072 *
                                                                                                                           Page   27 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1073 *   DSECT for automatic variables in "rd_kafka_q_destroy0"
                                            1074 *      (FUNCTION #1435)
                                            1075 *
00000000                00000000 000000AC   1076 @AUTO#rd_kafka_q_destroy0 DSECT
00000000                                    1077          DS    XL168
000000A8                                    1078 rd_kafka_q_destroy0#do_delete#0 DS 1F ; do_delete
                                            1079 *
00000A00                00000000 00005E8C   1080 @CODE    CSECT
                                            1081 *
                                            1082 *
                                            1083 *
                                            1084 * ....... start of rd_kafka_q_fwd_get
00000A00                                    1085 @LNAME1439 DS  0H
00000A00 00000012                           1086          DC    X'00000012'
00000A04 99846D9281869281                   1087          DC    C'rd_kafka_q_fwd_get'
00000A16 00                                 1088          DC    X'00'
                                            1089 rd_kafka_q_fwd_get DCCPRLG CINDEX=1439,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1439
                                            1090          macro
                                            1091          dccextrn &m
                                            1092          gblc    &$dccext(1000)
                                            1093          gbla    &$dccexti
                                            1094          lcla    &i
                                            1095 &$dccext(&$dccexti+1) setc    '&m'
                                            1096 &i       seta    1
                                            1097 .loop    aif    (&i gt &$dccexti).around
                                            1098          aif    ('&$dccext(&i)' eq '&m').getout
                                            1099 &i       seta    &i+1
                                            1100          ago     .loop
                                            1101 .around  anop
                                            1102 &$dccexti seta &$dccexti+1
                                            1103          extrn  &m
                                            1104 .getout  anop
                                            1105          mend
00000A18                                    1106+$eye0026    ds    0d                                                    02-DCCCA
00000A18 C4C3C3                             1107+         dc cl3'DCC'                                                    02-DCCCA
00000A1B 01                                 1108+         dc xl1'01' format one                                          02-DCCCA
00000A1C 00000000                           1109+         dc a(0)                                                        02-DCCCA
00000A20 0000000000000A8A                   1110+         dc ad(@PER_1439)                                               02-DCCCA
00000A28 00000000000000B8                   1111+         dc ad(184)                                                     02-DCCCA
00000A30 0000000000000000                   1112+         dc ad(0)                                                       02-DCCCA
00000A38 0000000000001000                   1113+         dc ad(4096)                                                    02-DCCCA
00000A40 20                                 1114+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A41 03                                 1115+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A42 03                                 1116+         dc al1(3)                                                      02-DCCCA
00000A43 08                                 1117+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A44 00                                 1118+         dc bl.8'00000000'                                              02-DCCCA
00000A45 000000                             1119+         dc al3(0)                                                      02-DCCCA
00000A48 0000000000000A00                   1120+         dc ad(@LNAME1439)                                              02-DCCCA
00000A50                                    1121+         ds 0d                                                          02-DCCCA
00000A50 0000000000000A18                   1122+         dc ad($eye0026)                                                02-DCCCA
00000A58 0000000000000000                   1123+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000A60                                    1124+         ds    0d                                                       01-DCCPR
00000A60                                    1125+rd_kafka_q_fwd_get ds 0d                                                01-DCCPR
00000A60                                    1126+@REGION_1439_1 ds 0h                                                    01-DCCPR
00000A60 EBEC D008 0024          00000008   1127+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A66 E3E0 D088 0004          00000088   1128+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000A6C E3C0 D090 0004          00000090   1129+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000A72 B904 002E                          1130+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000A76 E3B0 C018 0004          00000018   1131+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000A7C A7EB 00B8               000000B8   1132+         aghi  14,184              increase by frame size               01-DCCPR
00000A80 E3E0 C020 0021          00000020   1133+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000A86 4720 B020               00000020   1134+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000A8A                                    1135+@PER_1439 ds   0h                                                       01-DCCPR
00000A8A EBDE 2080 0024          00000080   1136+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000A90 E3C0 2090 0024          00000090   1137+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000A96 B904 00D2                          1138+         lgr   13,2                set real frame pointer               01-DCCPR
00000A9A B904 00CF                          1139+         lgr   12,15               set base reg                         01-DCCPR
                        00000A60            1140+         using @REGION_1439_1,12                                        01-DCCPR
                                            1141 * ******* End of Prologue
                                            1142 * *
00000A9E E320 1000 0004          00000000   1143          LG    2,0(0,1)    ; rkq
                                            1144 * ***           rd_kafka_q_t *fwdq;
                                            1145 * ***           if (do_lock)
00000AA4 E340 100C 0012          0000000C   1146          LT    4,12(0,1)   ; do_lock
00000AAA 4780 C060               00000AC0   1147          BZ    @L270
                                            1148 * ***                   mtx_lock(&rkq->rkq_lock);
00000AAE E320 D0B0 0024          000000B0   1149          STG   2,176(0,13)
00000AB4 4110 D0B0               000000B0   1150          LA    1,176(0,13)
00000AB8 E3F0 C0F0 0004          00000B50   1151          LG    15,@lit_1439_30 ; mtx_lock
00000ABE                                    1152 @@gen_label40 DS    0H
00000ABE 05EF                               1153          BALR  14,15
00000AC0                                    1154 @@gen_label41 DS    0H
00000AC0                                    1155 @L270    DS    0H
                                            1156 * ***
                                            1157 * ***           if ((fwdq = rkq->rkq_fwdq))
00000AC0 E330 2058 0004          00000058   1158          LG    3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
00000AC6 B902 00F3                          1159          LTGR  15,3
00000ACA 4780 C080               00000AE0   1160          BZ    @L271
                                            1161 * ***                   rd_kafka_q_keep(fwdq);
00000ACE E330 D0B0 0024          000000B0   1162          STG   3,176(0,13)
00000AD4 4110 D0B0               000000B0   1163          LA    1,176(0,13)
00000AD8 E3F0 C0F8 0004          00000B58   1164          LG    15,@lit_1439_31 ; rd_kafka_q_keep
00000ADE                                    1165 @@gen_label43 DS    0H
00000ADE 05EF                               1166          BALR  14,15
00000AE0                                    1167 @@gen_label44 DS    0H
00000AE0                                    1168 @L271    DS    0H
                                            1169 * ***
                                            1170 * ***           if (do_lock)
00000AE0 1244                               1171          LTR   4,4
00000AE2 4780 C098               00000AF8   1172          BZ    @L272
                                            1173 * ***                   mtx_unlock(&rkq->rkq_lock);
00000AE6 E320 D0B0 0024          000000B0   1174          STG   2,176(0,13)
00000AEC 4110 D0B0               000000B0   1175          LA    1,176(0,13)
                                                                                                                           Page   29 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000AF0 E3F0 C100 0004          00000B60   1176          LG    15,@lit_1439_32 ; mtx_unlock
00000AF6                                    1177 @@gen_label46 DS    0H
00000AF6 05EF                               1178          BALR  14,15
00000AF8                                    1179 @@gen_label47 DS    0H
00000AF8                                    1180 @L272    DS    0H
                                            1181 * ***
                                            1182 * ***           return fwdq;
00000AF8 B904 00F3                          1183          LGR   15,3
                                            1184 * ***   }
                                            1185 * * **** Start of Epilogue
                                            1186          DCCEPIL
00000AFC                                    1187+         ds 0h                                                          01-DCCEP
                                            1188+* Epilog
00000AFC D707 D088 D088 00000088 00000088   1189+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000B02 E3D0 D080 0004          00000080   1190+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000B08 E3C0 D090 0004          00000090   1191+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000B0E E3B0 C018 0004          00000018   1192+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000B14 E3C0 B010 0021          00000010   1193+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000B1A E3E0 D008 0004          00000008   1194+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000B20 EB1C D020 0004          00000020   1195+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000B26 078E                               1196+         bcr 8,14                if same dsab, just return              01-DCCEP
00000B28 E3F0 D010 0024          00000010   1197+         stg 15,16(0,13)         save return code                       01-DCCEP
00000B2E E300 D018 0024          00000018   1198+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000B34 E3F0 D090 0004          00000090   1199+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000B3A E3F0 F018 0004          00000018   1200+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000B40 47F0 F040               00000040   1201+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1202+* End of Epilog
                                            1203 * * **** End of Epilogue
00000B48                                    1204          DS    0D
00000B48 000000B8                           1205 @FRAMESIZE_1439 DC F'184'
00000B4C 00000000
00000B50 0000000000000000                   1206 @lit_1439_30 DC AD(mtx_lock)
00000B58 00000000000005D0                   1207 @lit_1439_31 DC AD(rd_kafka_q_keep)
00000B60 0000000000000000                   1208 @lit_1439_32 DC AD(mtx_unlock)
                                            1209          DROP  12
                                            1210 *
                                            1211 *   DSECT for automatic variables in "rd_kafka_q_fwd_get"
                                            1212 *      (FUNCTION #1439)
                                            1213 *
00000000                00000000 000000A8   1214 @AUTO#rd_kafka_q_fwd_get DSECT
00000000                                    1215          DS    XL168
                                            1216 *
00000B68                00000000 00005E8C   1217 @CODE    CSECT
                                            1218 *
                                            1219 *
                                            1220 *
                                            1221 * ....... start of rd_kafka_q_io_event
00000B68                                    1222 @LNAME1441 DS  0H
00000B68 00000013                           1223          DC    X'00000013'
00000B6C 99846D9281869281                   1224          DC    C'rd_kafka_q_io_event'
00000B7F 00                                 1225          DC    X'00'
                                            1226 rd_kafka_q_io_event DCCPRLG CINDEX=1441,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                H=ZARCH,LNAMEADDR=@LNAME1441
                                            1227          macro
                                            1228          dccextrn &m
                                            1229          gblc    &$dccext(1000)
                                            1230          gbla    &$dccexti
                                            1231          lcla    &i
                                            1232 &$dccext(&$dccexti+1) setc    '&m'
                                            1233 &i       seta    1
                                            1234 .loop    aif    (&i gt &$dccexti).around
                                            1235          aif    ('&$dccext(&i)' eq '&m').getout
                                            1236 &i       seta    &i+1
                                            1237          ago     .loop
                                            1238 .around  anop
                                            1239 &$dccexti seta &$dccexti+1
                                            1240          extrn  &m
                                            1241 .getout  anop
                                            1242          mend
00000B80                                    1243+$eye0029    ds    0d                                                    02-DCCCA
00000B80 C4C3C3                             1244+         dc cl3'DCC'                                                    02-DCCCA
00000B83 01                                 1245+         dc xl1'01' format one                                          02-DCCCA
00000B84 00000000                           1246+         dc a(0)                                                        02-DCCCA
00000B88 0000000000000BF2                   1247+         dc ad(@PER_1441)                                               02-DCCCA
00000B90 00000000000000C0                   1248+         dc ad(192)                                                     02-DCCCA
00000B98 0000000000000000                   1249+         dc ad(0)                                                       02-DCCCA
00000BA0 0000000000001000                   1250+         dc ad(4096)                                                    02-DCCCA
00000BA8 20                                 1251+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000BA9 03                                 1252+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000BAA 03                                 1253+         dc al1(3)                                                      02-DCCCA
00000BAB 08                                 1254+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000BAC 00                                 1255+         dc bl.8'00000000'                                              02-DCCCA
00000BAD 000000                             1256+         dc al3(0)                                                      02-DCCCA
00000BB0 0000000000000B68                   1257+         dc ad(@LNAME1441)                                              02-DCCCA
00000BB8                                    1258+         ds 0d                                                          02-DCCCA
00000BB8 0000000000000B80                   1259+         dc ad($eye0029)                                                02-DCCCA
00000BC0 0000000000000000                   1260+         dc ad(0)                                                       02-DCCCA
00000BC8                                    1261+         ds    0d                                                       01-DCCPR
00000BC8                                    1262+rd_kafka_q_io_event ds 0d                                               01-DCCPR
00000BC8                                    1263+@REGION_1441_1 ds 0h                                                    01-DCCPR
00000BC8 EBEC D008 0024          00000008   1264+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000BCE E3E0 D088 0004          00000088   1265+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000BD4 E3C0 D090 0004          00000090   1266+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000BDA B904 002E                          1267+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000BDE E3B0 C018 0004          00000018   1268+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000BE4 A7EB 00C0               000000C0   1269+         aghi  14,192              increase by frame size               01-DCCPR
00000BE8 E3E0 C020 0021          00000020   1270+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000BEE 4720 B020               00000020   1271+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000BF2                                    1272+@PER_1441 ds   0h                                                       01-DCCPR
00000BF2 EBDE 2080 0024          00000080   1273+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000BF8 E3C0 2090 0024          00000090   1274+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000BFE B904 00D2                          1275+         lgr   13,2                set real frame pointer               01-DCCPR
00000C02 B904 00CF                          1276+         lgr   12,15               set base reg                         01-DCCPR
                        00000BC8            1277+         using @REGION_1441_1,12                                        01-DCCPR
                                                                                                                           Page   31 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1278 * ******* End of Prologue
                                            1279 * *
00000C06 E3F0 1000 0004          00000000   1280          LG    15,0(0,1)   ; rkq
                                            1281 * ***
                                            1282 * ***      if (((!rkq->rkq_qio)))
00000C0C E310 F090 0002          00000090   1283          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000C12 4780 C102               00000CCA   1284          BZ    @ret_lab_1441
                                            1285 * ***         return;
00000C16                                    1286 @L275    DS    0H
                                            1287 * ***
                                            1288 * ***           if (rkq->rkq_qio->event_cb) {
00000C16 E310 F090 0004          00000090   1289          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000C1C E310 1020 0002          00000020   1290          LTG   1,32(0,1)   ; offset of event_cb in rd_kafka_q_io
00000C22 4780 C0A8               00000C70   1291          BZ    @L276
                                            1292 * ***                   rkq->rkq_qio->event_cb(rkq->rkq_rk,
                                            1293 * ***                                          rkq->rkq_qio->event_cb_\
                                            1294 * opaque);
00000C26 E310 F088 0004          00000088   1295          LG    1,136(0,15)
00000C2C E310 D0A8 0024          000000A8   1296          STG   1,168(0,13)
00000C32 E310 F090 0004          00000090   1297          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000C38 E310 1028 0004          00000028   1298          LG    1,40(0,1)
00000C3E E310 D0B0 0024          000000B0   1299          STG   1,176(0,13)
00000C44 E3F0 F090 0004          00000090   1300          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000C4A E3F0 F020 0004          00000020   1301          LG    15,32(0,15) ; offset of event_cb in rd_kafka_q_io
00000C50 4110 D0A8               000000A8   1302          LA    1,168(0,13)
00000C54                                    1303 @@gen_label50 DS    0H
00000C54 05EF                               1304          BALR  14,15
00000C56                                    1305 @@gen_label51 DS    0H
                                            1306 * ***                   return;
00000C56 47F0 C102               00000CCA   1307          B     @ret_lab_1441
00000C60                                    1308          DS    0D
00000C60 000000C0                           1309 @FRAMESIZE_1441 DC F'192'
00000C64 00000000
00000C68 0000000000000000                   1310 @lit_1441_34 DC AD(write)
                                            1311 * ***           }
00000C70                                    1312 @L276    DS    0H
                                            1313 * ***
                                            1314 * ***
                                            1315 * ***
                                            1316 * ***
                                            1317 * ***
                                            1318 * ***
                                            1319 * ***           if (rkq->rkq_qio->sent)
00000C70 E310 F090 0004          00000090   1320          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000C76 9500 1018      00000018 00000000   1321          CLI   24(1),0
00000C7A 4770 C102               00000CCA   1322          BNE   @ret_lab_1441
                                            1323 * ***                   return;
00000C7E                                    1324 @L277    DS    0H
                                            1325 * ***
                                            1326 * ***           rkq->rkq_qio->sent = 1;
00000C7E E310 F090 0004          00000090   1327          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000C84 9201 1018      00000018 00000001   1328          MVI   24(1),1     ; offset of sent in rd_kafka_q_io
                                                                                                                           Page   32 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1329 * ***
                                            1330 * ***
                                            1331 * ***
                                            1332 * ***           if (write(rkq->rkq_qio->fd,rkq->rkq_qio->payload,(int)\
                                            1333 * rkq->rkq_qio->size) == -1)
00000C88 E310 F090 0004          00000090   1334          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000C8E E310 1000 0014          00000000   1335          LGF   1,0(0,1)
00000C94 E310 D0A8 0024          000000A8   1336          STG   1,168(0,13)
00000C9A E310 F090 0004          00000090   1337          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000CA0 E310 1008 0004          00000008   1338          LG    1,8(0,1)
00000CA6 E310 D0B0 0024          000000B0   1339          STG   1,176(0,13)
00000CAC E3F0 F090 0004          00000090   1340          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000CB2 E3F0 F014 0014          00000014   1341          LGF   15,20(0,15)
00000CB8 E3F0 D0B8 0024          000000B8   1342          STG   15,184(0,13)
00000CBE 4110 D0A8               000000A8   1343          LA    1,168(0,13)
00000CC2 E3F0 C0A0 0004          00000C68   1344          LG    15,@lit_1441_34 ; write
00000CC8                                    1345 @@gen_label53 DS    0H
00000CC8 05EF                               1346          BALR  14,15
00000CCA                                    1347 @@gen_label54 DS    0H
                                            1348 * ***
                                            1349 * ***                   ;
00000CCA                                    1350 @L278    DS    0H
                                            1351 * ***   }
00000CCA                                    1352 @ret_lab_1441 DS 0H
                                            1353 * * **** Start of Epilogue
                                            1354          DCCEPIL
00000CCA                                    1355+         ds 0h                                                          01-DCCEP
                                            1356+* Epilog
00000CCA D707 D088 D088 00000088 00000088   1357+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000CD0 E3D0 D080 0004          00000080   1358+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000CD6 E3C0 D090 0004          00000090   1359+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000CDC E3B0 C018 0004          00000018   1360+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000CE2 E3C0 B010 0021          00000010   1361+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000CE8 E3E0 D008 0004          00000008   1362+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000CEE EB1C D020 0004          00000020   1363+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000CF4 078E                               1364+         bcr 8,14                if same dsab, just return              01-DCCEP
00000CF6 E3F0 D010 0024          00000010   1365+         stg 15,16(0,13)         save return code                       01-DCCEP
00000CFC E300 D018 0024          00000018   1366+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000D02 E3F0 D090 0004          00000090   1367+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000D08 E3F0 F018 0004          00000018   1368+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000D0E 47F0 F040               00000040   1369+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1370+* End of Epilog
                                            1371 * * **** End of Epilogue
                                            1372          DROP  12
                                            1373 *
                                            1374 *   DSECT for automatic variables in "rd_kafka_q_io_event"
                                            1375 *      (FUNCTION #1441)
                                            1376 *
00000000                00000000 000000A8   1377 @AUTO#rd_kafka_q_io_event DSECT
00000000                                    1378          DS    XL168
                                            1379 *
00000D12                00000000 00005E8C   1380 @CODE    CSECT
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1381 *
                                            1382 *
                                            1383 *
                                            1384 * ....... start of rd_kafka_op_cmp_prio
00000D12                                    1385 @LNAME1442 DS  0H
00000D12 00000014                           1386          DC    X'00000014'
00000D16 99846D9281869281                   1387          DC    C'rd_kafka_op_cmp_prio'
00000D2A 00                                 1388          DC    X'00'
                                            1389 rd_kafka_op_cmp_prio DCCPRLG CINDEX=1442,BASER=12,FRAME=176,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1442
                                            1390          macro
                                            1391          dccextrn &m
                                            1392          gblc    &$dccext(1000)
                                            1393          gbla    &$dccexti
                                            1394          lcla    &i
                                            1395 &$dccext(&$dccexti+1) setc    '&m'
                                            1396 &i       seta    1
                                            1397 .loop    aif    (&i gt &$dccexti).around
                                            1398          aif    ('&$dccext(&i)' eq '&m').getout
                                            1399 &i       seta    &i+1
                                            1400          ago     .loop
                                            1401 .around  anop
                                            1402 &$dccexti seta &$dccexti+1
                                            1403          extrn  &m
                                            1404 .getout  anop
                                            1405          mend
00000D30                                    1406+$eye0032    ds    0d                                                    02-DCCCA
00000D30 C4C3C3                             1407+         dc cl3'DCC'                                                    02-DCCCA
00000D33 01                                 1408+         dc xl1'01' format one                                          02-DCCCA
00000D34 00000000                           1409+         dc a(0)                                                        02-DCCCA
00000D38 0000000000000000                   1410+         dc ad(0)                                                       02-DCCCA
00000D40 00000000000000B0                   1411+         dc ad(176)                                                     02-DCCCA
00000D48 0000000000000000                   1412+         dc ad(0)                                                       02-DCCCA
00000D50 0000000000001000                   1413+         dc ad(4096)                                                    02-DCCCA
00000D58 20                                 1414+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D59 03                                 1415+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D5A 03                                 1416+         dc al1(3)                                                      02-DCCCA
00000D5B 08                                 1417+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D5C 00                                 1418+         dc bl.8'00000000'                                              02-DCCCA
00000D5D 000000                             1419+         dc al3(0)                                                      02-DCCCA
00000D60 0000000000000D12                   1420+         dc ad(@LNAME1442)                                              02-DCCCA
00000D68                                    1421+         ds 0d                                                          02-DCCCA
00000D68 0000000000000D30                   1422+         dc ad($eye0032)                                                02-DCCCA
00000D70 0000000000000000                   1423+         dc ad(0)                                                       02-DCCCA
00000D78                                    1424+         ds    0d                                                       01-DCCPR
00000D78                                    1425+rd_kafka_op_cmp_prio ds 0d                                              01-DCCPR
00000D78                                    1426+@REGION_1442_1 ds 0h                                                    01-DCCPR
00000D78 EBEC D008 0024          00000008   1427+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D7E B904 00CF                          1428+         lgr   12,15               set base reg                         01-DCCPR
                        00000D78            1429+         using @REGION_1442_1,12                                        01-DCCPR
                                            1430 * ******* End of Prologue
                                            1431 * *
                                                                                                                           Page   34 
  Active Usings: @REGION_1442_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1432 * ***           const rd_kafka_op_t *a = _a, *b = _b;
00000D82 E3F0 1000 0004          00000000   1433          LG    15,0(0,1)   ; _a
00000D88 E310 1008 0004          00000008   1434          LG    1,8(0,1)    ; _b
                                            1435 * ***
                                            1436 * ***           return (int)((b->rko_prio) < (a->rko_prio) ? -1 : ((b-\
                                            1437 * >rko_prio) > (a->rko_prio)));
00000D8E 5820 1034               00000034   1438          L     2,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
00000D92 5920 F034               00000034   1439          C     2,52(0,15)
00000D96 47B0 C02A               00000DA2   1440          BNL   @L279
00000D9A A7F8 FFFF               0000FFFF   1441          LHI   15,-1       ; -1
00000D9E 47F0 C042               00000DBA   1442          B     @L280
00000DA2                                    1443 @L279    DS    0H
00000DA2 5810 1034               00000034   1444          L     1,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
00000DA6 5910 F034               00000034   1445          C     1,52(0,15)
00000DAA 47D0 C03E               00000DB6   1446          BNH   @@gen_label56
00000DAE A7F8 0001               00000001   1447          LHI   15,1
00000DB2 47F0 C042               00000DBA   1448          B     @@gen_label57
00000DB6                                    1449 @@gen_label56 DS 0H
00000DB6 A7F8 0000               00000000   1450          LHI   15,0
00000DBA                                    1451 @@gen_label57 DS 0H
00000DBA                                    1452 @L280    DS    0H
00000DBA B914 00FF                          1453          LGFR  15,15
                                            1454 * ***   }
                                            1455 * * **** Start of Epilogue
                                            1456          DCCEPIL
00000DBE                                    1457+         ds 0h                                                          01-DCCEP
                                            1458+* Epilog
                                            1459+* Epilog
00000DBE E3E0 D008 0004          00000008   1460+         lg    14,8(,13) restore the reg                                01-DCCEP
00000DC4 EB1C D020 0004          00000020   1461+         lmg   1,12,32(13)                                              01-DCCEP
00000DCA 07FE                               1462+         br   14                                                        01-DCCEP
                                            1463+* End of Epilog
                                            1464 * * **** End of Epilogue
                                            1465          DROP  12
                                            1466 *
                                            1467 *   DSECT for automatic variables in "rd_kafka_op_cmp_prio"
                                            1468 *      (FUNCTION #1442)
                                            1469 *
00000000                00000000 000000A8   1470 @AUTO#rd_kafka_op_cmp_prio DSECT
00000000                                    1471          DS    XL168
                                            1472 *
00000DCC                00000000 00005E8C   1473 @CODE    CSECT
                                            1474 *
                                            1475 *
                                            1476 *
                                            1477 * ....... start of rd_kafka_q_enq0
00000DCC                                    1478 @LNAME1444 DS  0H
00000DCC 0000000F                           1479          DC    X'0000000F'
00000DD0 99846D9281869281                   1480          DC    C'rd_kafka_q_enq0'
00000DDF 00                                 1481          DC    X'00'
                                            1482 rd_kafka_q_enq0 DCCPRLG CINDEX=1444,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1444
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1483          macro
                                            1484          dccextrn &m
                                            1485          gblc    &$dccext(1000)
                                            1486          gbla    &$dccexti
                                            1487          lcla    &i
                                            1488 &$dccext(&$dccexti+1) setc    '&m'
                                            1489 &i       seta    1
                                            1490 .loop    aif    (&i gt &$dccexti).around
                                            1491          aif    ('&$dccext(&i)' eq '&m').getout
                                            1492 &i       seta    &i+1
                                            1493          ago     .loop
                                            1494 .around  anop
                                            1495 &$dccexti seta &$dccexti+1
                                            1496          extrn  &m
                                            1497 .getout  anop
                                            1498          mend
00000DE0                                    1499+$eye0035    ds    0d                                                    02-DCCCA
00000DE0 C4C3C3                             1500+         dc cl3'DCC'                                                    02-DCCCA
00000DE3 01                                 1501+         dc xl1'01' format one                                          02-DCCCA
00000DE4 00000000                           1502+         dc a(0)                                                        02-DCCCA
00000DE8 0000000000000E52                   1503+         dc ad(@PER_1444)                                               02-DCCCA
00000DF0 00000000000000C0                   1504+         dc ad(192)                                                     02-DCCCA
00000DF8 0000000000000000                   1505+         dc ad(0)                                                       02-DCCCA
00000E00 0000000000001000                   1506+         dc ad(4096)                                                    02-DCCCA
00000E08 20                                 1507+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E09 03                                 1508+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E0A 03                                 1509+         dc al1(3)                                                      02-DCCCA
00000E0B 08                                 1510+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E0C 00                                 1511+         dc bl.8'00000000'                                              02-DCCCA
00000E0D 000000                             1512+         dc al3(0)                                                      02-DCCCA
00000E10 0000000000000DCC                   1513+         dc ad(@LNAME1444)                                              02-DCCCA
00000E18                                    1514+         ds 0d                                                          02-DCCCA
00000E18 0000000000000DE0                   1515+         dc ad($eye0035)                                                02-DCCCA
00000E20 0000000000000000                   1516+         dc ad(0)                                                       02-DCCCA
00000E28                                    1517+         ds    0d                                                       01-DCCPR
00000E28                                    1518+rd_kafka_q_enq0 ds 0d                                                   01-DCCPR
00000E28                                    1519+@REGION_1444_1 ds 0h                                                    01-DCCPR
00000E28 EBEC D008 0024          00000008   1520+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000E2E E3E0 D088 0004          00000088   1521+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000E34 E3C0 D090 0004          00000090   1522+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000E3A B904 002E                          1523+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000E3E E3B0 C018 0004          00000018   1524+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000E44 A7EB 00C0               000000C0   1525+         aghi  14,192              increase by frame size               01-DCCPR
00000E48 E3E0 C020 0021          00000020   1526+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000E4E 4720 B020               00000020   1527+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000E52                                    1528+@PER_1444 ds   0h                                                       01-DCCPR
00000E52 EBDE 2080 0024          00000080   1529+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000E58 E3C0 2090 0024          00000090   1530+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000E5E B904 00D2                          1531+         lgr   13,2                set real frame pointer               01-DCCPR
00000E62 B904 00CF                          1532+         lgr   12,15               set base reg                         01-DCCPR
                        00000E28            1533+         using @REGION_1444_1,12                                        01-DCCPR
                                            1534 * ******* End of Prologue
                                                                                                                           Page   36 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1535 * *
                                            1536 * ***       if (((!rko->rko_prio)))
00000E66 EB34 1000 0004          00000000   1537          LMG   3,4,0(1)    ; rkq
00000E6C E3F0 4034 0012          00000034   1538          LT    15,52(0,4)  ; offset of rko_prio in rd_kafka_op_s
00000E72 4770 C090               00000EB8   1539          BNZ   @L288
                                            1540 * ***           do {  (rko)->rko_link .tqe_next = (((void *)0)); (rko)\
                                            1541 * ->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; *(&rkq->rkq_q)->tqh_\
                                            1542 * last = (rko); (&rkq->rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; \
                                            1543 * } while ( 0);
00000E76                                    1544 @L289    DS    0H
00000E76 A7F9 0000               00000000   1545          LGHI  15,0        ; 0
00000E7A E3F0 4000 0024          00000000   1546          STG   15,0(0,4)   ; rko
00000E80 E3F0 3068 0004          00000068   1547          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00000E86 E3F0 4008 0024          00000008   1548          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00000E8C E3F0 3068 0004          00000068   1549          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00000E92 E340 F000 0024          00000000   1550          STG   4,0(0,15)
00000E98 E340 3068 0024          00000068   1551          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
                                            1552 * ***       else if (at_head)
00000E9E 47F0 C1C2               00000FEA   1553          B     @L292
00000EA8                                    1554          DS    0D
00000EA8 000000C0                           1555 @FRAMESIZE_1444 DC F'192'
00000EAC 00000000
00000EB0 0000000000000D78                   1556 @lit_1444_38 DC AD(rd_kafka_op_cmp_prio)
00000EB8                                    1557 @L288    DS    0H
00000EB8 E3F0 1014 0012          00000014   1558          LT    15,20(0,1)  ; at_head
00000EBE 4780 C0D8               00000F00   1559          BZ    @L300
                                            1560 * ***               do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_\
                                            1561 * q)->tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link \
                                            1562 * .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last\
                                            1563 *  = &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rk\
                                            1564 * o)->rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0);
00000EC2                                    1565 @L294    DS    0H
00000EC2 E3F0 3060 0004          00000060   1566          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00000EC8 E3F0 4000 0024          00000000   1567          STG   15,0(0,4)
00000ECE B902 00FF                          1568          LTGR  15,15
00000ED2 4780 C0BE               00000EE6   1569          BE    @L297
00000ED6 E3F0 3060 0004          00000060   1570          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00000EDC E340 F008 0024          00000008   1571          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00000EE2 47F0 C0C4               00000EEC   1572          B     @L298
00000EE6                                    1573 @L297    DS    0H
00000EE6 E340 3068 0024          00000068   1574          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00000EEC                                    1575 @L298    DS    0H
00000EEC E340 3060 0024          00000060   1576          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00000EF2 41F0 3060               00000060   1577          LA    15,96(0,3)
00000EF6 E3F0 4008 0024          00000008   1578          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
                                            1579 * ***       else
00000EFC 47F0 C1C2               00000FEA   1580          B     @L292
                                            1581 * ***           do { if(((&rkq->rkq_q)->tqh_first) == ((void *)0)) { d\
                                            1582 * o {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)->tqh_first) != (\
                                            1583 * ((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tqe_prev = &(rko)-\
                                            1584 * >rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rko_link\
                                            1585 *  .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)->rko_link .tqe_p\
                                                                                                                           Page   37 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1586 * rev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } else { rd_kafka_op_\
                                            1587 * t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); (_tmp) != (((voi\
                                            1588 * d *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if(rd_kafka_op_cmp\
                                            1589 * _prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_prev = (_tmp)->rko\
                                            1590 * _link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp); *(_tmp)->rko_li\
                                            1591 * nk .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &(rko)->rko_link \
                                            1592 * .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_link .tqe_next)) \
                                            1593 * { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko_link .tqe_next)\
                                            1594 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = &\
                                            1595 * (rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rk\
                                            1596 * o_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko); (rko)->rko_lin\
                                            1597 * k .tqe_prev = &(_tmp)->rko_link .tqe_next; } while ( 0); break; } } \
                                            1598 * } } while(0);
00000F00                                    1599 @L300    DS    0H
00000F00 E3F0 3060 0002          00000060   1600          LTG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00000F06 4770 C120               00000F48   1601          BNE   @L303
00000F0A                                    1602 @L304    DS    0H
00000F0A E3F0 3060 0004          00000060   1603          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00000F10 E3F0 4000 0024          00000000   1604          STG   15,0(0,4)
00000F16 B902 00FF                          1605          LTGR  15,15
00000F1A 4780 C106               00000F2E   1606          BE    @L307
00000F1E E3F0 3060 0004          00000060   1607          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00000F24 E340 F008 0024          00000008   1608          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00000F2A 47F0 C10C               00000F34   1609          B     @L308
00000F2E                                    1610 @L307    DS    0H
00000F2E E340 3068 0024          00000068   1611          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00000F34                                    1612 @L308    DS    0H
00000F34 E340 3060 0024          00000060   1613          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00000F3A 41F0 3060               00000060   1614          LA    15,96(0,3)
00000F3E E3F0 4008 0024          00000008   1615          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00000F44 47F0 C1C2               00000FEA   1616          B     @L309
00000F48                                    1617 @L303    DS    0H
00000F48 E320 3060 0004          00000060   1618          LG    2,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00000F4E 47F0 C1BA               00000FE2   1619          B     @L311
00000F52                                    1620 @L310    DS    0H
00000F52 E340 D0B0 0024          000000B0   1621          STG   4,176(0,13)
00000F58 E320 D0B8 0024          000000B8   1622          STG   2,184(0,13)
00000F5E 4110 D0B0               000000B0   1623          LA    1,176(0,13)
00000F62 E3F0 C088 0004          00000EB0   1624          LG    15,@lit_1444_38 ; rd_kafka_op_cmp_prio
00000F68                                    1625 @@gen_label63 DS    0H
00000F68 05EF                               1626          BALR  14,15
00000F6A                                    1627 @@gen_label64 DS    0H
00000F6A 12FF                               1628          LTR   15,15
00000F6C 47B0 C170               00000F98   1629          BNL   @L314
00000F70                                    1630 @L315    DS    0H
00000F70 E3F0 2008 0004          00000008   1631          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
00000F76 E3F0 4008 0024          00000008   1632          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00000F7C E320 4000 0024          00000000   1633          STG   2,0(0,4)    ; rko
00000F82 E3F0 2008 0004          00000008   1634          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
00000F88 E340 F000 0024          00000000   1635          STG   4,0(0,15)
00000F8E E340 2008 0024          00000008   1636          STG   4,8(0,2)    ; offset of tqe_prev in 0000055
00000F94 47F0 C1C2               00000FEA   1637          B     @L312
                                                                                                                           Page   38 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000F98                                    1638 @L314    DS    0H
00000F98 E3F0 2000 0002          00000000   1639          LTG   15,0(0,2)   ; _tmp
00000F9E 4770 C1B4               00000FDC   1640          BNZ   @L318
00000FA2                                    1641 @L319    DS    0H
00000FA2 E3F0 2000 0004          00000000   1642          LG    15,0(0,2)   ; _tmp
00000FA8 E3F0 4000 0024          00000000   1643          STG   15,0(0,4)
00000FAE B902 00FF                          1644          LTGR  15,15
00000FB2 4780 C19E               00000FC6   1645          BE    @L322
00000FB6 E3F0 4000 0004          00000000   1646          LG    15,0(0,4)   ; rko
00000FBC E340 F008 0024          00000008   1647          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00000FC2 47F0 C1A4               00000FCC   1648          B     @L323
00000FC6                                    1649 @L322    DS    0H
00000FC6 E340 3068 0024          00000068   1650          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00000FCC                                    1651 @L323    DS    0H
00000FCC E340 2000 0024          00000000   1652          STG   4,0(0,2)    ; _tmp
00000FD2 E320 4008 0024          00000008   1653          STG   2,8(0,4)    ; offset of tqe_prev in 0000055
00000FD8 47F0 C1C2               00000FEA   1654          B     @L312
00000FDC                                    1655 @L318    DS    0H
00000FDC E320 2000 0004          00000000   1656          LG    2,0(0,2)    ; _tmp
00000FE2                                    1657 @L311    DS    0H
00000FE2 B902 00F2                          1658          LTGR  15,2
00000FE6 4770 C12A               00000F52   1659          BNE   @L310
00000FEA                                    1660 @L312    DS    0H
00000FEA                                    1661 @L309    DS    0H
                                            1662 * ***
                                            1663 * ***       rkq->rkq_qlen++;
00000FEA                                    1664 @L299    DS    0H
00000FEA                                    1665 @L292    DS    0H
00000FEA 58F0 3070               00000070   1666          L     15,112(0,3)
00000FEE A7FA 0001               00000001   1667          AHI   15,1
00000FF2 50F0 3070               00000070   1668          ST    15,112(0,3)
                                            1669 * ***       rkq->rkq_qsize += rko->rko_len;
00000FF6 E3F0 3078 0004          00000078   1670          LG    15,120(0,3)
00000FFC E3F0 4030 0018          00000030   1671          AGF   15,48(0,4)
00001002 E3F0 3078 0024          00000078   1672          STG   15,120(0,3)
                                            1673 * ***   }
00001008                                    1674 @ret_lab_1444 DS 0H
                                            1675 * * **** Start of Epilogue
                                            1676          DCCEPIL
00001008                                    1677+         ds 0h                                                          01-DCCEP
                                            1678+* Epilog
00001008 D707 D088 D088 00000088 00000088   1679+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000100E E3D0 D080 0004          00000080   1680+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001014 E3C0 D090 0004          00000090   1681+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000101A E3B0 C018 0004          00000018   1682+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001020 E3C0 B010 0021          00000010   1683+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001026 E3E0 D008 0004          00000008   1684+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000102C EB1C D020 0004          00000020   1685+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001032 078E                               1686+         bcr 8,14                if same dsab, just return              01-DCCEP
00001034 E3F0 D010 0024          00000010   1687+         stg 15,16(0,13)         save return code                       01-DCCEP
0000103A E300 D018 0024          00000018   1688+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001040 E3F0 D090 0004          00000090   1689+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page   39 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001046 E3F0 F018 0004          00000018   1690+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000104C 47F0 F040               00000040   1691+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1692+* End of Epilog
                                            1693 * * **** End of Epilogue
                                            1694          DROP  12
                                            1695 *
                                            1696 *   DSECT for automatic variables in "rd_kafka_q_enq0"
                                            1697 *      (FUNCTION #1444)
                                            1698 *
00000000                00000000 000000A8   1699 @AUTO#rd_kafka_q_enq0 DSECT
00000000                                    1700          DS    XL168
                                            1701 *
00001050                00000000 00005E8C   1702 @CODE    CSECT
                                            1703 *
                                            1704 *
                                            1705 *
                                            1706 * ....... start of rd_kafka_q_enq1
00001050                                    1707 @LNAME1445 DS  0H
00001050 0000000F                           1708          DC    X'0000000F'
00001054 99846D9281869281                   1709          DC    C'rd_kafka_q_enq1'
00001063 00                                 1710          DC    X'00'
                                            1711 rd_kafka_q_enq1 DCCPRLG CINDEX=1445,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1445
                                            1712          macro
                                            1713          dccextrn &m
                                            1714          gblc    &$dccext(1000)
                                            1715          gbla    &$dccexti
                                            1716          lcla    &i
                                            1717 &$dccext(&$dccexti+1) setc    '&m'
                                            1718 &i       seta    1
                                            1719 .loop    aif    (&i gt &$dccexti).around
                                            1720          aif    ('&$dccext(&i)' eq '&m').getout
                                            1721 &i       seta    &i+1
                                            1722          ago     .loop
                                            1723 .around  anop
                                            1724 &$dccexti seta &$dccexti+1
                                            1725          extrn  &m
                                            1726 .getout  anop
                                            1727          mend
00001068                                    1728+$eye0038    ds    0d                                                    02-DCCCA
00001068 C4C3C3                             1729+         dc cl3'DCC'                                                    02-DCCCA
0000106B 01                                 1730+         dc xl1'01' format one                                          02-DCCCA
0000106C 00000000                           1731+         dc a(0)                                                        02-DCCCA
00001070 00000000000010DA                   1732+         dc ad(@PER_1445)                                               02-DCCCA
00001078 00000000000000D8                   1733+         dc ad(216)                                                     02-DCCCA
00001080 0000000000000000                   1734+         dc ad(0)                                                       02-DCCCA
00001088 0000000000001000                   1735+         dc ad(4096)                                                    02-DCCCA
00001090 20                                 1736+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001091 03                                 1737+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001092 03                                 1738+         dc al1(3)                                                      02-DCCCA
00001093 08                                 1739+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001094 00                                 1740+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001095 000000                             1741+         dc al3(0)                                                      02-DCCCA
00001098 0000000000001050                   1742+         dc ad(@LNAME1445)                                              02-DCCCA
000010A0                                    1743+         ds 0d                                                          02-DCCCA
000010A0 0000000000001068                   1744+         dc ad($eye0038)                                                02-DCCCA
000010A8 0000000000000000                   1745+         dc ad(0)                                                       02-DCCCA
000010B0                                    1746+         ds    0d                                                       01-DCCPR
000010B0                                    1747+rd_kafka_q_enq1 ds 0d                                                   01-DCCPR
000010B0                                    1748+@REGION_1445_1 ds 0h                                                    01-DCCPR
000010B0 EBEC D008 0024          00000008   1749+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000010B6 E3E0 D088 0004          00000088   1750+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000010BC E3C0 D090 0004          00000090   1751+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000010C2 B904 002E                          1752+         lgr   2,14                copy addr of our savearea            01-DCCPR
000010C6 E3B0 C018 0004          00000018   1753+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000010CC A7EB 00D8               000000D8   1754+         aghi  14,216              increase by frame size               01-DCCPR
000010D0 E3E0 C020 0021          00000020   1755+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000010D6 4720 B020               00000020   1756+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000010DA                                    1757+@PER_1445 ds   0h                                                       01-DCCPR
000010DA EBDE 2080 0024          00000080   1758+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000010E0 E3C0 2090 0024          00000090   1759+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000010E6 B904 00D2                          1760+         lgr   13,2                set real frame pointer               01-DCCPR
000010EA B904 00CF                          1761+         lgr   12,15               set base reg                         01-DCCPR
                        000010B0            1762+         using @REGION_1445_1,12                                        01-DCCPR
000010EE B904 0071                          1763          LGR   7,1         ; ptr to parm area
                                            1764 * ******* End of Prologue
                                            1765 * *
000010F2 EB24 7000 0004          00000000   1766          LMG   2,4,0(7)    ; rkq
000010F8 E350 7024 0012          00000024   1767          LT    5,36(0,7)   ; do_lock
                                            1768 * ***           rd_kafka_q_t *fwdq;
                                            1769 * ***
                                            1770 * ***           if (do_lock)
000010FE 4780 C064               00001114   1771          BZ    @L325
                                            1772 * ***                   mtx_lock(&rkq->rkq_lock);
00001102 E320 D0B0 0024          000000B0   1773          STG   2,176(0,13)
00001108 4110 D0B0               000000B0   1774          LA    1,176(0,13)
0000110C E3F0 C0B0 0004          00001160   1775          LG    15,@lit_1445_40 ; mtx_lock
00001112                                    1776 @@gen_label70 DS    0H
00001112 05EF                               1777          BALR  14,15
00001114                                    1778 @@gen_label71 DS    0H
00001114                                    1779 @L324    DS    0H
                                            1780 * ***
                                            1781 * ***           do {} while (0);
00001114                                    1782 @L325    DS    0H
                                            1783 * ***
                                            1784 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
00001114 9102 2087      00000087 00000002   1785          TM    135(2),2
00001118 4770 C0F8               000011A8   1786          BNZ   @L328
                                            1787 * ***
                                            1788 * ***                   if (do_lock)
0000111C 1255                               1789          LTR   5,5
0000111E 4780 C084               00001134   1790          BZ    @L329
                                            1791 * ***                           mtx_unlock(&rkq->rkq_lock);
00001122 E320 D0B0 0024          000000B0   1792          STG   2,176(0,13)
                                                                                                                           Page   41 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001128 4110 D0B0               000000B0   1793          LA    1,176(0,13)
0000112C E3F0 C0B8 0004          00001168   1794          LG    15,@lit_1445_41 ; mtx_unlock
00001132                                    1795 @@gen_label74 DS    0H
00001132 05EF                               1796          BALR  14,15
00001134                                    1797 @@gen_label75 DS    0H
00001134                                    1798 @L329    DS    0H
                                            1799 * ***
                                            1800 * ***                   return rd_kafka_op_reply(rko, RD_KAFKA_RESP_ER\
                                            1801 * R__DESTROY);
00001134 E330 D0B0 0024          000000B0   1802          STG   3,176(0,13)
0000113A E548 D0B8 FF3B          000000B8   1803          MVGHI 184(13),-197
00001140 4110 D0B0               000000B0   1804          LA    1,176(0,13)
00001144 E3F0 C0C0 0004          00001170   1805          LG    15,@lit_1445_42 ; rd_kafka_op_reply
0000114A                                    1806 @@gen_label76 DS    0H
0000114A 05EF                               1807          BALR  14,15
0000114C                                    1808 @@gen_label77 DS    0H
0000114C B914 00FF                          1809          LGFR  15,15
00001150 47F0 C212               000012C2   1810          B     @ret_lab_1445
00001158                                    1811          DS    0D
00001158 000000D8                           1812 @FRAMESIZE_1445 DC F'216'
0000115C 00000000
00001160 0000000000000000                   1813 @lit_1445_40 DC AD(mtx_lock)
00001168 0000000000000000                   1814 @lit_1445_41 DC AD(mtx_unlock)
00001170 0000000000000000                   1815 @lit_1445_42 DC AD(rd_kafka_op_reply)
00001178 0000000000000A60                   1816 @lit_1445_43 DC AD(rd_kafka_q_fwd_get)
00001180 0000000000000E28                   1817 @lit_1445_44 DC AD(rd_kafka_q_enq0)
00001188 0000000000000000                   1818 @lit_1445_45 DC AD(cnd_signal)
00001190 0000000000000BC8                   1819 @lit_1445_46 DC AD(rd_kafka_q_io_event)
00001198 00000000000010B0                   1820 @lit_1445_49 DC AD(rd_kafka_q_enq1)
000011A0 0000000000000850                   1821 @lit_1445_50 DC AD(rd_kafka_q_destroy0)
                                            1822 * ***           }
000011A8                                    1823 @L328    DS    0H
                                            1824 * ***
                                            1825 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
000011A8 E320 D0B0 0024          000000B0   1826          STG   2,176(0,13)
000011AE D707 D0B8 D0B8 000000B8 000000B8   1827          XC    184(8,13),184(13)
000011B4 4110 D0B0               000000B0   1828          LA    1,176(0,13)
000011B8 E3F0 C0C8 0004          00001178   1829          LG    15,@lit_1445_43 ; rd_kafka_q_fwd_get
000011BE                                    1830 @@gen_label78 DS    0H
000011BE 05EF                               1831          BALR  14,15
000011C0                                    1832 @@gen_label79 DS    0H
000011C0 B904 006F                          1833          LGR   6,15
000011C4 B902 00F6                          1834          LTGR  15,6
000011C8 4770 C1B4               00001264   1835          BNZ   @L330
                                            1836 * ***                   if (!rko->rko_serve && orig_destq->rkq_serve) \
                                            1837 * {
000011CC E3F0 3050 0002          00000050   1838          LTG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
000011D2 4770 C148               000011F8   1839          BNZ   @L331
000011D6 E3F0 4098 0002          00000098   1840          LTG   15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
000011DC 4780 C148               000011F8   1841          BZ    @L331
                                            1842 * ***
                                            1843 * ***
                                                                                                                           Page   42 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1844 * ***                           rko->rko_serve = orig_destq->rkq_serve\
                                            1845 * ;
000011E0 E3F0 4098 0004          00000098   1846          LG    15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
000011E6 E3F0 3050 0024          00000050   1847          STG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
                                            1848 * ***                           rko->rko_serve_opaque = orig_destq->rk\
                                            1849 * q_opaque;
000011EC E3F0 40A0 0004          000000A0   1850          LG    15,160(0,4) ; offset of rkq_opaque in rd_kafka_q_s
000011F2 E3F0 3058 0024          00000058   1851          STG   15,88(0,3)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                s
                                            1852 * ***                   }
000011F8                                    1853 @L331    DS    0H
                                            1854 * ***
                                            1855 * ***                   rd_kafka_q_enq0(rkq, rko, at_head);
000011F8 EB23 D0B0 0024          000000B0   1856          STMG  2,3,176(13)
000011FE E3F0 701C 0014          0000001C   1857          LGF   15,28(0,7)  ; at_head
00001204 E3F0 D0C0 0024          000000C0   1858          STG   15,192(0,13)
0000120A 4110 D0B0               000000B0   1859          LA    1,176(0,13)
0000120E E3F0 C0D0 0004          00001180   1860          LG    15,@lit_1445_44 ; rd_kafka_q_enq0
00001214                                    1861 @@gen_label83 DS    0H
00001214 05EF                               1862          BALR  14,15
00001216                                    1863 @@gen_label84 DS    0H
                                            1864 * ***                   cnd_signal(&rkq->rkq_cond);
00001216 41F0 2028               00000028   1865          LA    15,40(0,2)
0000121A E3F0 D0B0 0024          000000B0   1866          STG   15,176(0,13)
00001220 4110 D0B0               000000B0   1867          LA    1,176(0,13)
00001224 E3F0 C0D8 0004          00001188   1868          LG    15,@lit_1445_45 ; cnd_signal
0000122A                                    1869 @@gen_label85 DS    0H
0000122A 05EF                               1870          BALR  14,15
0000122C                                    1871 @@gen_label86 DS    0H
                                            1872 * ***                   if (rkq->rkq_qlen == 1)
0000122C E55C 2070 0001          00000070   1873          CHSI  112(2),1
00001232 4770 C198               00001248   1874          BNE   @L332
                                            1875 * ***                           rd_kafka_q_io_event(rkq);
00001236 E320 D0B0 0024          000000B0   1876          STG   2,176(0,13)
0000123C 4110 D0B0               000000B0   1877          LA    1,176(0,13)
00001240 E3F0 C0E0 0004          00001190   1878          LG    15,@lit_1445_46 ; rd_kafka_q_io_event
00001246                                    1879 @@gen_label88 DS    0H
00001246 05EF                               1880          BALR  14,15
00001248                                    1881 @@gen_label89 DS    0H
00001248                                    1882 @L332    DS    0H
                                            1883 * ***
                                            1884 * ***                   if (do_lock)
00001248 1255                               1885          LTR   5,5
0000124A 4780 C20E               000012BE   1886          BZ    @L334
                                            1887 * ***                           mtx_unlock(&rkq->rkq_lock);
0000124E E320 D0B0 0024          000000B0   1888          STG   2,176(0,13)
00001254 4110 D0B0               000000B0   1889          LA    1,176(0,13)
00001258 E3F0 C0B8 0004          00001168   1890          LG    15,@lit_1445_41 ; mtx_unlock
0000125E                                    1891 @@gen_label91 DS    0H
0000125E 05EF                               1892          BALR  14,15
00001260                                    1893 @@gen_label92 DS    0H
00001260                                    1894 @L333    DS    0H
                                                                                                                           Page   43 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1895 * ***           } else {
00001260 47F0 C20E               000012BE   1896          B     @L334
00001264                                    1897 @L330    DS    0H
                                            1898 * ***                   if (do_lock)
00001264 1255                               1899          LTR   5,5
00001266 4780 C1CC               0000127C   1900          BZ    @L335
                                            1901 * ***                           mtx_unlock(&rkq->rkq_lock);
0000126A E320 D0B0 0024          000000B0   1902          STG   2,176(0,13)
00001270 4110 D0B0               000000B0   1903          LA    1,176(0,13)
00001274 E3F0 C0B8 0004          00001168   1904          LG    15,@lit_1445_41 ; mtx_unlock
0000127A                                    1905 @@gen_label94 DS    0H
0000127A 05EF                               1906          BALR  14,15
0000127C                                    1907 @@gen_label95 DS    0H
0000127C                                    1908 @L335    DS    0H
                                            1909 * ***                   rd_kafka_q_enq1(fwdq, rko, orig_destq, at_head\
                                            1910 * , 1);
0000127C E360 D0B0 0024          000000B0   1911          STG   6,176(0,13)
00001282 EB34 D0B8 0024          000000B8   1912          STMG  3,4,184(13)
00001288 E3F0 701C 0014          0000001C   1913          LGF   15,28(0,7)  ; at_head
0000128E E3F0 D0C8 0024          000000C8   1914          STG   15,200(0,13)
00001294 E548 D0D0 0001          000000D0   1915          MVGHI 208(13),1
0000129A 4110 D0B0               000000B0   1916          LA    1,176(0,13)
0000129E E3F0 C0E8 0004          00001198   1917          LG    15,@lit_1445_49 ; rd_kafka_q_enq1
000012A4                                    1918 @@gen_label96 DS    0H
000012A4 05EF                               1919          BALR  14,15
000012A6                                    1920 @@gen_label97 DS    0H
                                            1921 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
000012A6 E360 D0B0 0024          000000B0   1922          STG   6,176(0,13)
000012AC D707 D0B8 D0B8 000000B8 000000B8   1923          XC    184(8,13),184(13)
000012B2 4110 D0B0               000000B0   1924          LA    1,176(0,13)
000012B6 E3F0 C0F0 0004          000011A0   1925          LG    15,@lit_1445_50 ; rd_kafka_q_destroy0
000012BC                                    1926 @@gen_label98 DS    0H
000012BC 05EF                               1927          BALR  14,15
000012BE                                    1928 @@gen_label99 DS    0H
                                            1929 * ***           }
000012BE                                    1930 @L334    DS    0H
                                            1931 * ***
                                            1932 * ***           return 1;
000012BE A7F9 0001               00000001   1933          LGHI  15,1        ; 1
                                            1934 * ***   }
000012C2                                    1935 @ret_lab_1445 DS 0H
                                            1936 * * **** Start of Epilogue
                                            1937          DCCEPIL
000012C2                                    1938+         ds 0h                                                          01-DCCEP
                                            1939+* Epilog
000012C2 D707 D088 D088 00000088 00000088   1940+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000012C8 E3D0 D080 0004          00000080   1941+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000012CE E3C0 D090 0004          00000090   1942+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000012D4 E3B0 C018 0004          00000018   1943+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000012DA E3C0 B010 0021          00000010   1944+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000012E0 E3E0 D008 0004          00000008   1945+         lg  14,8(0,13)          load up return address                 01-DCCEP
000012E6 EB1C D020 0004          00000020   1946+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   44 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000012EC 078E                               1947+         bcr 8,14                if same dsab, just return              01-DCCEP
000012EE E3F0 D010 0024          00000010   1948+         stg 15,16(0,13)         save return code                       01-DCCEP
000012F4 E300 D018 0024          00000018   1949+         stg 0,24(0,13)          save more return code                  01-DCCEP
000012FA E3F0 D090 0004          00000090   1950+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001300 E3F0 F018 0004          00000018   1951+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001306 47F0 F040               00000040   1952+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1953+* End of Epilog
                                            1954 * * **** End of Epilogue
                                            1955          DROP  12
                                            1956 *
                                            1957 *   DSECT for automatic variables in "rd_kafka_q_enq1"
                                            1958 *      (FUNCTION #1445)
                                            1959 *
00000000                00000000 000000A8   1960 @AUTO#rd_kafka_q_enq1 DSECT
00000000                                    1961          DS    XL168
                                            1962 *
0000130A                00000000 00005E8C   1963 @CODE    CSECT
                                            1964 *
                                            1965 *
                                            1966 *
                                            1967 * ....... start of rd_kafka_q_enq
0000130A                                    1968 @LNAME1446 DS  0H
0000130A 0000000E                           1969          DC    X'0000000E'
0000130E 99846D9281869281                   1970          DC    C'rd_kafka_q_enq'
0000131C 00                                 1971          DC    X'00'
                                            1972 rd_kafka_q_enq DCCPRLG CINDEX=1446,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1446
                                            1973          macro
                                            1974          dccextrn &m
                                            1975          gblc    &$dccext(1000)
                                            1976          gbla    &$dccexti
                                            1977          lcla    &i
                                            1978 &$dccext(&$dccexti+1) setc    '&m'
                                            1979 &i       seta    1
                                            1980 .loop    aif    (&i gt &$dccexti).around
                                            1981          aif    ('&$dccext(&i)' eq '&m').getout
                                            1982 &i       seta    &i+1
                                            1983          ago     .loop
                                            1984 .around  anop
                                            1985 &$dccexti seta &$dccexti+1
                                            1986          extrn  &m
                                            1987 .getout  anop
                                            1988          mend
00001320                                    1989+$eye0041    ds    0d                                                    02-DCCCA
00001320 C4C3C3                             1990+         dc cl3'DCC'                                                    02-DCCCA
00001323 01                                 1991+         dc xl1'01' format one                                          02-DCCCA
00001324 00000000                           1992+         dc a(0)                                                        02-DCCCA
00001328 0000000000001392                   1993+         dc ad(@PER_1446)                                               02-DCCCA
00001330 00000000000000D0                   1994+         dc ad(208)                                                     02-DCCCA
00001338 0000000000000000                   1995+         dc ad(0)                                                       02-DCCCA
00001340 0000000000001000                   1996+         dc ad(4096)                                                    02-DCCCA
00001348 20                                 1997+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001349 03                                 1998+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000134A 03                                 1999+         dc al1(3)                                                      02-DCCCA
0000134B 08                                 2000+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000134C 00                                 2001+         dc bl.8'00000000'                                              02-DCCCA
0000134D 000000                             2002+         dc al3(0)                                                      02-DCCCA
00001350 000000000000130A                   2003+         dc ad(@LNAME1446)                                              02-DCCCA
00001358                                    2004+         ds 0d                                                          02-DCCCA
00001358 0000000000001320                   2005+         dc ad($eye0041)                                                02-DCCCA
00001360 0000000000000000                   2006+         dc ad(0)                                                       02-DCCCA
00001368                                    2007+         ds    0d                                                       01-DCCPR
00001368                                    2008+rd_kafka_q_enq ds 0d                                                    01-DCCPR
00001368                                    2009+@REGION_1446_1 ds 0h                                                    01-DCCPR
00001368 EBEC D008 0024          00000008   2010+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000136E E3E0 D088 0004          00000088   2011+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001374 E3C0 D090 0004          00000090   2012+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000137A B904 002E                          2013+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000137E E3B0 C018 0004          00000018   2014+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001384 A7EB 00D0               000000D0   2015+         aghi  14,208              increase by frame size               01-DCCPR
00001388 E3E0 C020 0021          00000020   2016+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000138E 4720 B020               00000020   2017+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001392                                    2018+@PER_1446 ds   0h                                                       01-DCCPR
00001392 EBDE 2080 0024          00000080   2019+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001398 E3C0 2090 0024          00000090   2020+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000139E B904 00D2                          2021+         lgr   13,2                set real frame pointer               01-DCCPR
000013A2 B904 00CF                          2022+         lgr   12,15               set base reg                         01-DCCPR
                        00001368            2023+         using @REGION_1446_1,12                                        01-DCCPR
                                            2024 * ******* End of Prologue
                                            2025 * *
                                            2026 * ***           return rd_kafka_q_enq1(rkq, rko, rkq, 0, 1);
000013A6 E3F0 1000 0004          00000000   2027          LG    15,0(0,1)   ; rkq
000013AC E3F0 D0A8 0024          000000A8   2028          STG   15,168(0,13)
000013B2 E3F0 1008 0004          00000008   2029          LG    15,8(0,1)   ; rko
000013B8 E3F0 D0B0 0024          000000B0   2030          STG   15,176(0,13)
000013BE E3F0 1000 0004          00000000   2031          LG    15,0(0,1)   ; rkq
000013C4 E3F0 D0B8 0024          000000B8   2032          STG   15,184(0,13)
000013CA D707 D0C0 D0C0 000000C0 000000C0   2033          XC    192(8,13),192(13)
000013D0 E548 D0C8 0001          000000C8   2034          MVGHI 200(13),1
000013D6 4110 D0A8               000000A8   2035          LA    1,168(0,13)
000013DA E3F0 C0D0 0004          00001438   2036          LG    15,@lit_1446_53 ; rd_kafka_q_enq1
000013E0                                    2037 @@gen_label100 DS    0H
000013E0 05EF                               2038          BALR  14,15
000013E2                                    2039 @@gen_label101 DS    0H
000013E2 B914 00FF                          2040          LGFR  15,15
                                            2041 * ***   }
                                            2042 * * **** Start of Epilogue
                                            2043          DCCEPIL
000013E6                                    2044+         ds 0h                                                          01-DCCEP
                                            2045+* Epilog
000013E6 D707 D088 D088 00000088 00000088   2046+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000013EC E3D0 D080 0004          00000080   2047+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000013F2 E3C0 D090 0004          00000090   2048+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000013F8 E3B0 C018 0004          00000018   2049+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page   46 
  Active Usings: @REGION_1446_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000013FE E3C0 B010 0021          00000010   2050+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001404 E3E0 D008 0004          00000008   2051+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000140A EB1C D020 0004          00000020   2052+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001410 078E                               2053+         bcr 8,14                if same dsab, just return              01-DCCEP
00001412 E3F0 D010 0024          00000010   2054+         stg 15,16(0,13)         save return code                       01-DCCEP
00001418 E300 D018 0024          00000018   2055+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000141E E3F0 D090 0004          00000090   2056+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001424 E3F0 F018 0004          00000018   2057+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000142A 47F0 F040               00000040   2058+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2059+* End of Epilog
                                            2060 * * **** End of Epilogue
00001430                                    2061          DS    0D
00001430 000000D0                           2062 @FRAMESIZE_1446 DC F'208'
00001434 00000000
00001438 00000000000010B0                   2063 @lit_1446_53 DC AD(rd_kafka_q_enq1)
                                            2064          DROP  12
                                            2065 *
                                            2066 *   DSECT for automatic variables in "rd_kafka_q_enq"
                                            2067 *      (FUNCTION #1446)
                                            2068 *
00000000                00000000 000000A8   2069 @AUTO#rd_kafka_q_enq DSECT
00000000                                    2070          DS    XL168
                                            2071 *
00001440                00000000 00005E8C   2072 @CODE    CSECT
                                            2073 *
                                            2074 *
                                            2075 *
                                            2076 * ....... start of rd_kafka_replyq_clear
00001440                                    2077 @LNAME1458 DS  0H
00001440 00000015                           2078          DC    X'00000015'
00001444 99846D9281869281                   2079          DC    C'rd_kafka_replyq_clear'
00001459 00                                 2080          DC    X'00'
                                            2081 rd_kafka_replyq_clear DCCPRLG CINDEX=1458,BASER=0,FRAME=168,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1458
                                            2082          macro
                                            2083          dccextrn &m
                                            2084          gblc    &$dccext(1000)
                                            2085          gbla    &$dccexti
                                            2086          lcla    &i
                                            2087 &$dccext(&$dccexti+1) setc    '&m'
                                            2088 &i       seta    1
                                            2089 .loop    aif    (&i gt &$dccexti).around
                                            2090          aif    ('&$dccext(&i)' eq '&m').getout
                                            2091 &i       seta    &i+1
                                            2092          ago     .loop
                                            2093 .around  anop
                                            2094 &$dccexti seta &$dccexti+1
                                            2095          extrn  &m
                                            2096 .getout  anop
                                            2097          mend
00001460                                    2098+$eye0044    ds    0d                                                    02-DCCCA
00001460 C4C3C3                             2099+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001463 01                                 2100+         dc xl1'01' format one                                          02-DCCCA
00001464 00000000                           2101+         dc a(0)                                                        02-DCCCA
00001468 0000000000000000                   2102+         dc ad(0)                                                       02-DCCCA
00001470 00000000000000A8                   2103+         dc ad(168)                                                     02-DCCCA
00001478 0000000000000000                   2104+         dc ad(0)                                                       02-DCCCA
00001480 0000000000001000                   2105+         dc ad(4096)                                                    02-DCCCA
00001488 20                                 2106+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001489 03                                 2107+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000148A 03                                 2108+         dc al1(3)                                                      02-DCCCA
0000148B 08                                 2109+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000148C 00                                 2110+         dc bl.8'00000000'                                              02-DCCCA
0000148D 000000                             2111+         dc al3(0)                                                      02-DCCCA
00001490 0000000000001440                   2112+         dc ad(@LNAME1458)                                              02-DCCCA
00001498                                    2113+         ds 0d                                                          02-DCCCA
00001498 0000000000001460                   2114+         dc ad($eye0044)                                                02-DCCCA
000014A0 0000000000000000                   2115+         dc ad(0)                                                       02-DCCCA
000014A8                                    2116+         ds    0d                                                       01-DCCPR
000014A8                                    2117+rd_kafka_replyq_clear ds 0d                                             01-DCCPR
000014A8                                    2118+@REGION_1458_1 ds 0h                                                    01-DCCPR
000014A8 EBEC D008 0024          00000008   2119+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2120 * ******* End of Prologue
                                            2121 * *
                                            2122 * ***      __memset(replyq,0,sizeof(*replyq));
000014AE E3F0 1000 0004          00000000   2123          LG    15,0(0,1)
                                            2124 * setting 16 bytes to 0x00
000014B4 D70F F000 F000 00000000 00000000   2125          XC    0(16,15),0(15)
                                            2126 * ***   }
000014BA                                    2127 @ret_lab_1458 DS 0H
                                            2128 * * **** Start of Epilogue
                                            2129          DCCEPIL
000014BA                                    2130+         ds 0h                                                          01-DCCEP
                                            2131+* Epilog
                                            2132+* Epilog
000014BA E3E0 D008 0004          00000008   2133+         lg    14,8(,13) restore the reg                                01-DCCEP
000014C0 EB1C D020 0004          00000020   2134+         lmg   1,12,32(13)                                              01-DCCEP
000014C6 07FE                               2135+         br   14                                                        01-DCCEP
                                            2136+* End of Epilog
                                            2137 * * **** End of Epilogue
                                            2138 *
                                            2139 *   DSECT for automatic variables in "rd_kafka_replyq_clear"
                                            2140 *      (FUNCTION #1458)
                                            2141 *
00000000                00000000 000000A8   2142 @AUTO#rd_kafka_replyq_clear DSECT
00000000                                    2143          DS    XL168
                                            2144 *
000014C8                00000000 00005E8C   2145 @CODE    CSECT
                                            2146 *
                                            2147 *
                                            2148 *
                                            2149 * ....... start of rd_kafka_replyq_destroy
000014C8                                    2150 @LNAME1460 DS  0H
000014C8 00000017                           2151          DC    X'00000017'
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000014CC 99846D9281869281                   2152          DC    C'rd_kafka_replyq_destroy'
000014E3 00                                 2153          DC    X'00'
                                            2154 rd_kafka_replyq_destroy DCCPRLG CINDEX=1460,BASER=12,FRAME=184,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1460
                                            2155          macro
                                            2156          dccextrn &m
                                            2157          gblc    &$dccext(1000)
                                            2158          gbla    &$dccexti
                                            2159          lcla    &i
                                            2160 &$dccext(&$dccexti+1) setc    '&m'
                                            2161 &i       seta    1
                                            2162 .loop    aif    (&i gt &$dccexti).around
                                            2163          aif    ('&$dccext(&i)' eq '&m').getout
                                            2164 &i       seta    &i+1
                                            2165          ago     .loop
                                            2166 .around  anop
                                            2167 &$dccexti seta &$dccexti+1
                                            2168          extrn  &m
                                            2169 .getout  anop
                                            2170          mend
000014E8                                    2171+$eye0047    ds    0d                                                    02-DCCCA
000014E8 C4C3C3                             2172+         dc cl3'DCC'                                                    02-DCCCA
000014EB 01                                 2173+         dc xl1'01' format one                                          02-DCCCA
000014EC 00000000                           2174+         dc a(0)                                                        02-DCCCA
000014F0 000000000000155A                   2175+         dc ad(@PER_1460)                                               02-DCCCA
000014F8 00000000000000B8                   2176+         dc ad(184)                                                     02-DCCCA
00001500 0000000000000000                   2177+         dc ad(0)                                                       02-DCCCA
00001508 0000000000001000                   2178+         dc ad(4096)                                                    02-DCCCA
00001510 20                                 2179+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001511 03                                 2180+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001512 03                                 2181+         dc al1(3)                                                      02-DCCCA
00001513 08                                 2182+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001514 00                                 2183+         dc bl.8'00000000'                                              02-DCCCA
00001515 000000                             2184+         dc al3(0)                                                      02-DCCCA
00001518 00000000000014C8                   2185+         dc ad(@LNAME1460)                                              02-DCCCA
00001520                                    2186+         ds 0d                                                          02-DCCCA
00001520 00000000000014E8                   2187+         dc ad($eye0047)                                                02-DCCCA
00001528 0000000000000000                   2188+         dc ad(0)                                                       02-DCCCA
00001530                                    2189+         ds    0d                                                       01-DCCPR
00001530                                    2190+rd_kafka_replyq_destroy ds 0d                                           01-DCCPR
00001530                                    2191+@REGION_1460_1 ds 0h                                                    01-DCCPR
00001530 EBEC D008 0024          00000008   2192+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001536 E3E0 D088 0004          00000088   2193+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000153C E3C0 D090 0004          00000090   2194+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001542 B904 002E                          2195+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001546 E3B0 C018 0004          00000018   2196+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000154C A7EB 00B8               000000B8   2197+         aghi  14,184              increase by frame size               01-DCCPR
00001550 E3E0 C020 0021          00000020   2198+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001556 4720 B020               00000020   2199+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000155A                                    2200+@PER_1460 ds   0h                                                       01-DCCPR
0000155A EBDE 2080 0024          00000080   2201+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001560 E3C0 2090 0024          00000090   2202+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001566 B904 00D2                          2203+         lgr   13,2                set real frame pointer               01-DCCPR
0000156A B904 00CF                          2204+         lgr   12,15               set base reg                         01-DCCPR
                        00001530            2205+         using @REGION_1460_1,12                                        01-DCCPR
                                            2206 * ******* End of Prologue
                                            2207 * *
                                            2208 * ***      if (replyq->q)
0000156E E320 1000 0004          00000000   2209          LG    2,0(0,1)    ; replyq
00001574 E3F0 2000 0002          00000000   2210          LTG   15,0(0,2)   ; replyq
0000157A 4780 C06C               0000159C   2211          BZ    @L445
                                            2212 * ***         rd_kafka_q_destroy0(replyq->q, 0 );
0000157E E3F0 2000 0004          00000000   2213          LG    15,0(0,2)
00001584 E3F0 D0A8 0024          000000A8   2214          STG   15,168(0,13)
0000158A D707 D0B0 D0B0 000000B0 000000B0   2215          XC    176(8,13),176(13)
00001590 4110 D0A8               000000A8   2216          LA    1,168(0,13)
00001594 E3F0 C0D0 0004          00001600   2217          LG    15,@lit_1460_55 ; rd_kafka_q_destroy0
0000159A                                    2218 @@gen_label103 DS    0H
0000159A 05EF                               2219          BALR  14,15
0000159C                                    2220 @@gen_label104 DS    0H
0000159C                                    2221 @L445    DS    0H
                                            2222 * ***   # 772 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            2223 * ***      rd_kafka_replyq_clear(replyq);
0000159C E320 D0A8 0024          000000A8   2224          STG   2,168(0,13)
000015A2 4110 D0A8               000000A8   2225          LA    1,168(0,13)
000015A6 E3F0 C0D8 0004          00001608   2226          LG    15,@lit_1460_56 ; rd_kafka_replyq_clear
000015AC                                    2227 @@gen_label105 DS    0H
000015AC 05EF                               2228          BALR  14,15
000015AE                                    2229 @@gen_label106 DS    0H
                                            2230 * ***   }
000015AE                                    2231 @ret_lab_1460 DS 0H
                                            2232 * * **** Start of Epilogue
                                            2233          DCCEPIL
000015AE                                    2234+         ds 0h                                                          01-DCCEP
                                            2235+* Epilog
000015AE D707 D088 D088 00000088 00000088   2236+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000015B4 E3D0 D080 0004          00000080   2237+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000015BA E3C0 D090 0004          00000090   2238+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000015C0 E3B0 C018 0004          00000018   2239+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000015C6 E3C0 B010 0021          00000010   2240+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000015CC E3E0 D008 0004          00000008   2241+         lg  14,8(0,13)          load up return address                 01-DCCEP
000015D2 EB1C D020 0004          00000020   2242+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000015D8 078E                               2243+         bcr 8,14                if same dsab, just return              01-DCCEP
000015DA E3F0 D010 0024          00000010   2244+         stg 15,16(0,13)         save return code                       01-DCCEP
000015E0 E300 D018 0024          00000018   2245+         stg 0,24(0,13)          save more return code                  01-DCCEP
000015E6 E3F0 D090 0004          00000090   2246+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000015EC E3F0 F018 0004          00000018   2247+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000015F2 47F0 F040               00000040   2248+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2249+* End of Epilog
                                            2250 * * **** End of Epilogue
000015F8                                    2251          DS    0D
000015F8 000000B8                           2252 @FRAMESIZE_1460 DC F'184'
000015FC 00000000
00001600 0000000000000850                   2253 @lit_1460_55 DC AD(rd_kafka_q_destroy0)
                                                                                                                           Page   50 
  Active Usings: @REGION_1460_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001608 00000000000014A8                   2254 @lit_1460_56 DC AD(rd_kafka_replyq_clear)
                                            2255          DROP  12
                                            2256 *
                                            2257 *   DSECT for automatic variables in "rd_kafka_replyq_destroy"
                                            2258 *      (FUNCTION #1460)
                                            2259 *
00000000                00000000 000000A8   2260 @AUTO#rd_kafka_replyq_destroy DSECT
00000000                                    2261          DS    XL168
                                            2262 *
00001610                00000000 00005E8C   2263 @CODE    CSECT
                                            2264 *
                                            2265 *
                                            2266 *
                                            2267 * ....... start of rd_kafka_replyq_enq
00001610                                    2268 @LNAME1461 DS  0H
00001610 00000013                           2269          DC    X'00000013'
00001614 99846D9281869281                   2270          DC    C'rd_kafka_replyq_enq'
00001627 00                                 2271          DC    X'00'
                                            2272 rd_kafka_replyq_enq DCCPRLG CINDEX=1461,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1461
                                            2273          macro
                                            2274          dccextrn &m
                                            2275          gblc    &$dccext(1000)
                                            2276          gbla    &$dccexti
                                            2277          lcla    &i
                                            2278 &$dccext(&$dccexti+1) setc    '&m'
                                            2279 &i       seta    1
                                            2280 .loop    aif    (&i gt &$dccexti).around
                                            2281          aif    ('&$dccext(&i)' eq '&m').getout
                                            2282 &i       seta    &i+1
                                            2283          ago     .loop
                                            2284 .around  anop
                                            2285 &$dccexti seta &$dccexti+1
                                            2286          extrn  &m
                                            2287 .getout  anop
                                            2288          mend
00001628                                    2289+$eye0050    ds    0d                                                    02-DCCCA
00001628 C4C3C3                             2290+         dc cl3'DCC'                                                    02-DCCCA
0000162B 01                                 2291+         dc xl1'01' format one                                          02-DCCCA
0000162C 00000000                           2292+         dc a(0)                                                        02-DCCCA
00001630 000000000000169A                   2293+         dc ad(@PER_1461)                                               02-DCCCA
00001638 00000000000000C0                   2294+         dc ad(192)                                                     02-DCCCA
00001640 0000000000000000                   2295+         dc ad(0)                                                       02-DCCCA
00001648 0000000000001000                   2296+         dc ad(4096)                                                    02-DCCCA
00001650 20                                 2297+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001651 03                                 2298+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001652 03                                 2299+         dc al1(3)                                                      02-DCCCA
00001653 08                                 2300+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001654 00                                 2301+         dc bl.8'00000000'                                              02-DCCCA
00001655 000000                             2302+         dc al3(0)                                                      02-DCCCA
00001658 0000000000001610                   2303+         dc ad(@LNAME1461)                                              02-DCCCA
00001660                                    2304+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001660 0000000000001628                   2305+         dc ad($eye0050)                                                02-DCCCA
00001668 0000000000000000                   2306+         dc ad(0)                                                       02-DCCCA
00001670                                    2307+         ds    0d                                                       01-DCCPR
00001670                                    2308+rd_kafka_replyq_enq ds 0d                                               01-DCCPR
00001670                                    2309+@REGION_1461_1 ds 0h                                                    01-DCCPR
00001670 EBEC D008 0024          00000008   2310+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001676 E3E0 D088 0004          00000088   2311+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000167C E3C0 D090 0004          00000090   2312+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001682 B904 002E                          2313+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001686 E3B0 C018 0004          00000018   2314+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000168C A7EB 00C0               000000C0   2315+         aghi  14,192              increase by frame size               01-DCCPR
00001690 E3E0 C020 0021          00000020   2316+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001696 4720 B020               00000020   2317+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000169A                                    2318+@PER_1461 ds   0h                                                       01-DCCPR
0000169A EBDE 2080 0024          00000080   2319+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000016A0 E3C0 2090 0024          00000090   2320+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000016A6 B904 00D2                          2321+         lgr   13,2                set real frame pointer               01-DCCPR
000016AA B904 00CF                          2322+         lgr   12,15               set base reg                         01-DCCPR
                        00001670            2323+         using @REGION_1461_1,12                                        01-DCCPR
000016AE B904 0031                          2324          LGR   3,1         ; ptr to parm area
                                            2325 * ******* End of Prologue
                                            2326 * *
                                            2327 * ***      rd_kafka_q_t *rkq = replyq->q;
000016B2 E3F0 3000 0004          00000000   2328          LG    15,0(0,3)   ; replyq
000016B8 E310 3008 0004          00000008   2329          LG    1,8(0,3)    ; rko
000016BE E320 F000 0004          00000000   2330          LG    2,0(0,15)   ; replyq
                                            2331 * ***      int r;
                                            2332 * ***
                                            2333 * ***      if (version)
000016C4 E330 3014 0012          00000014   2334          LT    3,20(0,3)   ; version
000016CA 4780 C080               000016F0   2335          BZ    @L446
                                            2336 * ***         rko->rko_version = version;
000016CE 5030 101C               0000001C   2337          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
000016D2 47F0 C088               000016F8   2338          B     @L447
000016D8                                    2339          DS    0D
000016D8 000000C0                           2340 @FRAMESIZE_1461 DC F'192'
000016DC 00000000
000016E0 0000000000001368                   2341 @lit_1461_59 DC AD(rd_kafka_q_enq)
000016E8 0000000000000850                   2342 @lit_1461_60 DC AD(rd_kafka_q_destroy0)
                                            2343 * ***      else
000016F0                                    2344 @L446    DS    0H
                                            2345 * ***         rko->rko_version = replyq->version;
000016F0 5830 F008               00000008   2346          L     3,8(0,15)   ; offset of version in rd_kafka_replyq_s
000016F4 5030 101C               0000001C   2347          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
000016F8                                    2348 @L447    DS    0H
                                            2349 * ***
                                            2350 * ***
                                            2351 * ***
                                            2352 * ***           replyq->q = ((void *)0);
000016F8 A739 0000               00000000   2353          LGHI  3,0         ; 0
000016FC E330 F000 0024          00000000   2354          STG   3,0(0,15)   ; replyq
                                            2355 * ***
                                                                                                                           Page   52 
  Active Usings: @REGION_1461_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2356 * ***
                                            2357 * ***   # 807 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            2358 * ***
                                            2359 * ***
                                            2360 * ***
                                            2361 * ***      r = rd_kafka_q_enq(rkq, rko);
00001702 E320 D0B0 0024          000000B0   2362          STG   2,176(0,13)
00001708 E310 D0B8 0024          000000B8   2363          STG   1,184(0,13)
0000170E 4110 D0B0               000000B0   2364          LA    1,176(0,13)
00001712 E3F0 C070 0004          000016E0   2365          LG    15,@lit_1461_59 ; rd_kafka_q_enq
00001718                                    2366 @@gen_label108 DS    0H
00001718 05EF                               2367          BALR  14,15
0000171A                                    2368 @@gen_label109 DS    0H
0000171A 183F                               2369          LR    3,15
                                            2370 * ***
                                            2371 * ***      rd_kafka_q_destroy0(rkq, 0 );
0000171C E320 D0B0 0024          000000B0   2372          STG   2,176(0,13)
00001722 D707 D0B8 D0B8 000000B8 000000B8   2373          XC    184(8,13),184(13)
00001728 4110 D0B0               000000B0   2374          LA    1,176(0,13)
0000172C E3F0 C078 0004          000016E8   2375          LG    15,@lit_1461_60 ; rd_kafka_q_destroy0
00001732                                    2376 @@gen_label110 DS    0H
00001732 05EF                               2377          BALR  14,15
00001734                                    2378 @@gen_label111 DS    0H
                                            2379 * ***
                                            2380 * ***      return r;
00001734 B914 00F3                          2381          LGFR  15,3
                                            2382 * ***   }
                                            2383 * * **** Start of Epilogue
                                            2384          DCCEPIL
00001738                                    2385+         ds 0h                                                          01-DCCEP
                                            2386+* Epilog
00001738 D707 D088 D088 00000088 00000088   2387+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000173E E3D0 D080 0004          00000080   2388+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001744 E3C0 D090 0004          00000090   2389+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000174A E3B0 C018 0004          00000018   2390+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001750 E3C0 B010 0021          00000010   2391+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001756 E3E0 D008 0004          00000008   2392+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000175C EB1C D020 0004          00000020   2393+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001762 078E                               2394+         bcr 8,14                if same dsab, just return              01-DCCEP
00001764 E3F0 D010 0024          00000010   2395+         stg 15,16(0,13)         save return code                       01-DCCEP
0000176A E300 D018 0024          00000018   2396+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001770 E3F0 D090 0004          00000090   2397+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001776 E3F0 F018 0004          00000018   2398+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000177C 47F0 F040               00000040   2399+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2400+* End of Epilog
                                            2401 * * **** End of Epilogue
                                            2402          DROP  12
                                            2403 *
                                            2404 *   DSECT for automatic variables in "rd_kafka_replyq_enq"
                                            2405 *      (FUNCTION #1461)
                                            2406 *
00000000                00000000 000000AC   2407 @AUTO#rd_kafka_replyq_enq DSECT
                                                                                                                           Page   53 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                                    2408          DS    XL168
000000A8                                    2409 rd_kafka_replyq_enq#r#0 DS 1F ; r
                                            2410 *
00001780                00000000 00005E8C   2411 @CODE    CSECT
                                            2412 *
                                            2413 *
                                            2414 *
                                            2415 * ....... start of rd_kafka_enq_once_destroy0
00001780                                    2416 @LNAME1475 DS  0H
00001780 0000001A                           2417          DC    X'0000001A'
00001784 99846D9281869281                   2418          DC    C'rd_kafka_enq_once_destroy0'
0000179E 00                                 2419          DC    X'00'
                                            2420 rd_kafka_enq_once_destroy0 DCCPRLG CINDEX=1475,BASER=12,FRAME=200,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1475
                                            2421          macro
                                            2422          dccextrn &m
                                            2423          gblc    &$dccext(1000)
                                            2424          gbla    &$dccexti
                                            2425          lcla    &i
                                            2426 &$dccext(&$dccexti+1) setc    '&m'
                                            2427 &i       seta    1
                                            2428 .loop    aif    (&i gt &$dccexti).around
                                            2429          aif    ('&$dccext(&i)' eq '&m').getout
                                            2430 &i       seta    &i+1
                                            2431          ago     .loop
                                            2432 .around  anop
                                            2433 &$dccexti seta &$dccexti+1
                                            2434          extrn  &m
                                            2435 .getout  anop
                                            2436          mend
000017A0                                    2437+$eye0053    ds    0d                                                    02-DCCCA
000017A0 C4C3C3                             2438+         dc cl3'DCC'                                                    02-DCCCA
000017A3 01                                 2439+         dc xl1'01' format one                                          02-DCCCA
000017A4 00000000                           2440+         dc a(0)                                                        02-DCCCA
000017A8 0000000000001812                   2441+         dc ad(@PER_1475)                                               02-DCCCA
000017B0 00000000000000C8                   2442+         dc ad(200)                                                     02-DCCCA
000017B8 0000000000000000                   2443+         dc ad(0)                                                       02-DCCCA
000017C0 0000000000001000                   2444+         dc ad(4096)                                                    02-DCCCA
000017C8 20                                 2445+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000017C9 03                                 2446+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000017CA 03                                 2447+         dc al1(3)                                                      02-DCCCA
000017CB 08                                 2448+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000017CC 00                                 2449+         dc bl.8'00000000'                                              02-DCCCA
000017CD 000000                             2450+         dc al3(0)                                                      02-DCCCA
000017D0 0000000000001780                   2451+         dc ad(@LNAME1475)                                              02-DCCCA
000017D8                                    2452+         ds 0d                                                          02-DCCCA
000017D8 00000000000017A0                   2453+         dc ad($eye0053)                                                02-DCCCA
000017E0 0000000000000000                   2454+         dc ad(0)                                                       02-DCCCA
000017E8                                    2455+         ds    0d                                                       01-DCCPR
000017E8                                    2456+rd_kafka_enq_once_destroy0 ds 0d                                        01-DCCPR
000017E8                                    2457+@REGION_1475_1 ds 0h                                                    01-DCCPR
000017E8 EBEC D008 0024          00000008   2458+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000017EE E3E0 D088 0004          00000088   2459+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000017F4 E3C0 D090 0004          00000090   2460+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000017FA B904 002E                          2461+         lgr   2,14                copy addr of our savearea            01-DCCPR
000017FE E3B0 C018 0004          00000018   2462+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001804 A7EB 00C8               000000C8   2463+         aghi  14,200              increase by frame size               01-DCCPR
00001808 E3E0 C020 0021          00000020   2464+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000180E 4720 B020               00000020   2465+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001812                                    2466+@PER_1475 ds   0h                                                       01-DCCPR
00001812 EBDE 2080 0024          00000080   2467+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001818 E3C0 2090 0024          00000090   2468+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000181E B904 00D2                          2469+         lgr   13,2                set real frame pointer               01-DCCPR
00001822 B904 00CF                          2470+         lgr   12,15               set base reg                         01-DCCPR
                        000017E8            2471+         using @REGION_1475_1,12                                        01-DCCPR
                                            2472 * ******* End of Prologue
                                            2473 * *
00001826 E320 1000 0004          00000000   2474          LG    2,0(0,1)    ; eonce
                                            2475 * ***
                                            2476 * ***
                                            2477 * ***
                                            2478 * ***           ((!eonce->rko) ? (void)0 : __assert(__func__, "C:\\asg\
                                            2479 * kafka\\librdkafka\\src\\rdkafka_queue.h", 946, "!eonce->rko"));
0000182C E3F0 2030 0002          00000030   2480          LTG   15,48(0,2)  ; offset of rko in rd_kafka_enq_once_s
00001832 4780 C08A               00001872   2481          BZ    @L455
00001836                                    2482 @L454    DS    0H
00001836 E3F0 C1A0 0004          00001988   2483          LG    15,@lit_1475_62
0000183C 41F0 F086               00000086   2484          LA    15,134(0,15)
00001840 E3F0 D0A8 0024          000000A8   2485          STG   15,168(0,13)
00001846 E3F0 C198 0004          00001980   2486          LG    15,@lit_1475_63
0000184C 4110 F024               00000024   2487          LA    1,36(0,15)
00001850 E310 D0B0 0024          000000B0   2488          STG   1,176(0,13)
00001856 E548 D0B8 03B2          000000B8   2489          MVGHI 184(13),946
0000185C 41F0 F06C               0000006C   2490          LA    15,108(0,15)
00001860 E3F0 D0C0 0024          000000C0   2491          STG   15,192(0,13)
00001866 4110 D0A8               000000A8   2492          LA    1,168(0,13)
0000186A E3F0 C190 0004          00001978   2493          LG    15,@lit_1475_64 ; __assert
00001870                                    2494 @@gen_label113 DS    0H
00001870 05EF                               2495          BALR  14,15
00001872                                    2496 @@gen_label114 DS    0H
00001872                                    2497 @L455    DS    0H
                                            2498 * ***           ((!eonce->replyq.q) ? (void)0 : __assert(__func__, "C:\
                                            2499 * \\asgkafka\\librdkafka\\src\\rdkafka_queue.h", 947, "!eonce->replyq.\
                                            2500 * q"));
00001872 E3F0 2038 0002          00000038   2501          LTG   15,56(0,2)  ; offset of replyq in rd_kafka_enq_once_s
00001878 4780 C0D0               000018B8   2502          BZ    @L457
0000187C                                    2503 @L456    DS    0H
0000187C E3F0 C1A0 0004          00001988   2504          LG    15,@lit_1475_62
00001882 41F0 F086               00000086   2505          LA    15,134(0,15)
00001886 E3F0 D0A8 0024          000000A8   2506          STG   15,168(0,13)
0000188C E3F0 C198 0004          00001980   2507          LG    15,@lit_1475_63
00001892 4110 F024               00000024   2508          LA    1,36(0,15)
00001896 E310 D0B0 0024          000000B0   2509          STG   1,176(0,13)
0000189C E548 D0B8 03B3          000000B8   2510          MVGHI 184(13),947
                                                                                                                           Page   55 
  Active Usings: @REGION_1475_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000018A2 41F0 F078               00000078   2511          LA    15,120(0,15)
000018A6 E3F0 D0C0 0024          000000C0   2512          STG   15,192(0,13)
000018AC 4110 D0A8               000000A8   2513          LA    1,168(0,13)
000018B0 E3F0 C190 0004          00001978   2514          LG    15,@lit_1475_64 ; __assert
000018B6                                    2515 @@gen_label116 DS    0H
000018B6 05EF                               2516          BALR  14,15
000018B8                                    2517 @@gen_label117 DS    0H
000018B8                                    2518 @L457    DS    0H
                                            2519 * ***
                                            2520 * ***
                                            2521 * ***
                                            2522 * ***           ((eonce->refcnt == 0) ? (void)0 : __assert(__func__, "\
                                            2523 * C:\\asgkafka\\librdkafka\\src\\rdkafka_queue.h", 951, "eonce->refcnt\
                                            2524 *  == 0"));
000018B8 E55C 2028 0000          00000028   2525          CHSI  40(2),0
000018BE 4780 C116               000018FE   2526          BE    @L459
000018C2                                    2527 @L458    DS    0H
000018C2 E3F0 C1A0 0004          00001988   2528          LG    15,@lit_1475_62
000018C8 41F0 F086               00000086   2529          LA    15,134(0,15)
000018CC E3F0 D0A8 0024          000000A8   2530          STG   15,168(0,13)
000018D2 E3F0 C198 0004          00001980   2531          LG    15,@lit_1475_63
000018D8 4110 F024               00000024   2532          LA    1,36(0,15)
000018DC E310 D0B0 0024          000000B0   2533          STG   1,176(0,13)
000018E2 E548 D0B8 03B7          000000B8   2534          MVGHI 184(13),951
000018E8 41F0 F08A               0000008A   2535          LA    15,138(0,15)
000018EC E3F0 D0C0 0024          000000C0   2536          STG   15,192(0,13)
000018F2 4110 D0A8               000000A8   2537          LA    1,168(0,13)
000018F6 E3F0 C190 0004          00001978   2538          LG    15,@lit_1475_64 ; __assert
000018FC                                    2539 @@gen_label119 DS    0H
000018FC 05EF                               2540          BALR  14,15
000018FE                                    2541 @@gen_label120 DS    0H
000018FE                                    2542 @L459    DS    0H
                                            2543 * ***
                                            2544 * ***           mtx_destroy(&eonce->lock);
000018FE E320 D0A8 0024          000000A8   2545          STG   2,168(0,13)
00001904 4110 D0A8               000000A8   2546          LA    1,168(0,13)
00001908 E3F0 C1A8 0004          00001990   2547          LG    15,@lit_1475_71 ; mtx_destroy
0000190E                                    2548 @@gen_label121 DS    0H
0000190E 05EF                               2549          BALR  14,15
00001910                                    2550 @@gen_label122 DS    0H
                                            2551 * ***           rd_free(eonce);
00001910 E320 D0A8 0024          000000A8   2552          STG   2,168(0,13)
00001916 4110 D0A8               000000A8   2553          LA    1,168(0,13)
0000191A E3F0 C1B0 0004          00001998   2554          LG    15,@lit_1475_72 ; rd_free
00001920                                    2555 @@gen_label123 DS    0H
00001920 05EF                               2556          BALR  14,15
00001922                                    2557 @@gen_label124 DS    0H
                                            2558 * ***   }
00001922                                    2559 @ret_lab_1475 DS 0H
                                            2560 * * **** Start of Epilogue
                                            2561          DCCEPIL
00001922                                    2562+         ds 0h                                                          01-DCCEP
                                                                                                                           Page   56 
  Active Usings: @REGION_1475_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2563+* Epilog
00001922 D707 D088 D088 00000088 00000088   2564+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001928 E3D0 D080 0004          00000080   2565+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000192E E3C0 D090 0004          00000090   2566+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001934 E3B0 C018 0004          00000018   2567+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000193A E3C0 B010 0021          00000010   2568+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001940 E3E0 D008 0004          00000008   2569+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001946 EB1C D020 0004          00000020   2570+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000194C 078E                               2571+         bcr 8,14                if same dsab, just return              01-DCCEP
0000194E E3F0 D010 0024          00000010   2572+         stg 15,16(0,13)         save return code                       01-DCCEP
00001954 E300 D018 0024          00000018   2573+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000195A E3F0 D090 0004          00000090   2574+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001960 E3F0 F018 0004          00000018   2575+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001966 47F0 F040               00000040   2576+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2577+* End of Epilog
                                            2578 * * **** End of Epilogue
00001970                                    2579          DS    0D
00001970 000000C8                           2580 @FRAMESIZE_1475 DC F'200'
00001974 00000000
00001978 0000000000000000                   2581 @lit_1475_64 DC AD(__assert)
00001980 0000000000006076                   2582 @lit_1475_63 DC AD(@strings@)
00001988 0000000000005E90                   2583 @lit_1475_62 DC AD(@DATA)
00001990 0000000000000000                   2584 @lit_1475_71 DC AD(mtx_destroy)
00001998 00000000000001C0                   2585 @lit_1475_72 DC AD(rd_free)
                                            2586          DROP  12
                                            2587 *
                                            2588 *   DSECT for automatic variables in "rd_kafka_enq_once_destroy0"
                                            2589 *      (FUNCTION #1475)
                                            2590 *
00000000                00000000 000000A8   2591 @AUTO#rd_kafka_enq_once_destroy0 DSECT
00000000                                    2592          DS    XL168
                                            2593 *
000019A0                00000000 00005E8C   2594 @CODE    CSECT
                                            2595 *
                                            2596 *
                                            2597 *
                                            2598 * ....... start of rd_kafka_enq_once_add_source
000019A0                                    2599 @LNAME1476 DS  0H
000019A0 0000001C                           2600          DC    X'0000001C'
000019A4 99846D9281869281                   2601          DC    C'rd_kafka_enq_once_add_source'
000019C0 00                                 2602          DC    X'00'
                                            2603 rd_kafka_enq_once_add_source DCCPRLG CINDEX=1476,BASER=12,FRAME=176,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1476
                                            2604          macro
                                            2605          dccextrn &m
                                            2606          gblc    &$dccext(1000)
                                            2607          gbla    &$dccexti
                                            2608          lcla    &i
                                            2609 &$dccext(&$dccexti+1) setc    '&m'
                                            2610 &i       seta    1
                                            2611 .loop    aif    (&i gt &$dccexti).around
                                            2612          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   57 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2613 &i       seta    &i+1
                                            2614          ago     .loop
                                            2615 .around  anop
                                            2616 &$dccexti seta &$dccexti+1
                                            2617          extrn  &m
                                            2618 .getout  anop
                                            2619          mend
000019C8                                    2620+$eye0056    ds    0d                                                    02-DCCCA
000019C8 C4C3C3                             2621+         dc cl3'DCC'                                                    02-DCCCA
000019CB 01                                 2622+         dc xl1'01' format one                                          02-DCCCA
000019CC 00000000                           2623+         dc a(0)                                                        02-DCCCA
000019D0 0000000000001A3A                   2624+         dc ad(@PER_1476)                                               02-DCCCA
000019D8 00000000000000B0                   2625+         dc ad(176)                                                     02-DCCCA
000019E0 0000000000000000                   2626+         dc ad(0)                                                       02-DCCCA
000019E8 0000000000001000                   2627+         dc ad(4096)                                                    02-DCCCA
000019F0 20                                 2628+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000019F1 03                                 2629+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000019F2 03                                 2630+         dc al1(3)                                                      02-DCCCA
000019F3 08                                 2631+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000019F4 00                                 2632+         dc bl.8'00000000'                                              02-DCCCA
000019F5 000000                             2633+         dc al3(0)                                                      02-DCCCA
000019F8 00000000000019A0                   2634+         dc ad(@LNAME1476)                                              02-DCCCA
00001A00                                    2635+         ds 0d                                                          02-DCCCA
00001A00 00000000000019C8                   2636+         dc ad($eye0056)                                                02-DCCCA
00001A08 0000000000000000                   2637+         dc ad(0)                                                       02-DCCCA
00001A10                                    2638+         ds    0d                                                       01-DCCPR
00001A10                                    2639+rd_kafka_enq_once_add_source ds 0d                                      01-DCCPR
00001A10                                    2640+@REGION_1476_1 ds 0h                                                    01-DCCPR
00001A10 EBEC D008 0024          00000008   2641+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001A16 E3E0 D088 0004          00000088   2642+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001A1C E3C0 D090 0004          00000090   2643+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001A22 B904 002E                          2644+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001A26 E3B0 C018 0004          00000018   2645+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001A2C A7EB 00B0               000000B0   2646+         aghi  14,176              increase by frame size               01-DCCPR
00001A30 E3E0 C020 0021          00000020   2647+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001A36 4720 B020               00000020   2648+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001A3A                                    2649+@PER_1476 ds   0h                                                       01-DCCPR
00001A3A EBDE 2080 0024          00000080   2650+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001A40 E3C0 2090 0024          00000090   2651+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001A46 B904 00D2                          2652+         lgr   13,2                set real frame pointer               01-DCCPR
00001A4A B904 00CF                          2653+         lgr   12,15               set base reg                         01-DCCPR
                        00001A10            2654+         using @REGION_1476_1,12                                        01-DCCPR
                                            2655 * ******* End of Prologue
                                            2656 * *
                                            2657 * ***           mtx_lock(&eonce->lock);
00001A4E E320 1000 0004          00000000   2658          LG    2,0(0,1)    ; eonce
00001A54 E320 D0A8 0024          000000A8   2659          STG   2,168(0,13)
00001A5A 4110 D0A8               000000A8   2660          LA    1,168(0,13)
00001A5E E3F0 C0C8 0004          00001AD8   2661          LG    15,@lit_1476_74 ; mtx_lock
00001A64                                    2662 @@gen_label125 DS    0H
00001A64 05EF                               2663          BALR  14,15
00001A66                                    2664 @@gen_label126 DS    0H
                                                                                                                           Page   58 
  Active Usings: @REGION_1476_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2665 * ***           eonce->refcnt++;
00001A66 58F0 2028               00000028   2666          L     15,40(0,2)
00001A6A A7FA 0001               00000001   2667          AHI   15,1
00001A6E 50F0 2028               00000028   2668          ST    15,40(0,2)
                                            2669 * ***           mtx_unlock(&eonce->lock);
00001A72 E320 D0A8 0024          000000A8   2670          STG   2,168(0,13)
00001A78 4110 D0A8               000000A8   2671          LA    1,168(0,13)
00001A7C E3F0 C0D0 0004          00001AE0   2672          LG    15,@lit_1476_75 ; mtx_unlock
00001A82                                    2673 @@gen_label127 DS    0H
00001A82 05EF                               2674          BALR  14,15
00001A84                                    2675 @@gen_label128 DS    0H
                                            2676 * ***   }
00001A84                                    2677 @ret_lab_1476 DS 0H
                                            2678 * * **** Start of Epilogue
                                            2679          DCCEPIL
00001A84                                    2680+         ds 0h                                                          01-DCCEP
                                            2681+* Epilog
00001A84 D707 D088 D088 00000088 00000088   2682+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001A8A E3D0 D080 0004          00000080   2683+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001A90 E3C0 D090 0004          00000090   2684+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001A96 E3B0 C018 0004          00000018   2685+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001A9C E3C0 B010 0021          00000010   2686+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001AA2 E3E0 D008 0004          00000008   2687+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001AA8 EB1C D020 0004          00000020   2688+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001AAE 078E                               2689+         bcr 8,14                if same dsab, just return              01-DCCEP
00001AB0 E3F0 D010 0024          00000010   2690+         stg 15,16(0,13)         save return code                       01-DCCEP
00001AB6 E300 D018 0024          00000018   2691+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001ABC E3F0 D090 0004          00000090   2692+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001AC2 E3F0 F018 0004          00000018   2693+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001AC8 47F0 F040               00000040   2694+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2695+* End of Epilog
                                            2696 * * **** End of Epilogue
00001AD0                                    2697          DS    0D
00001AD0 000000B0                           2698 @FRAMESIZE_1476 DC F'176'
00001AD4 00000000
00001AD8 0000000000000000                   2699 @lit_1476_74 DC AD(mtx_lock)
00001AE0 0000000000000000                   2700 @lit_1476_75 DC AD(mtx_unlock)
                                            2701          DROP  12
                                            2702 *
                                            2703 *   DSECT for automatic variables in "rd_kafka_enq_once_add_source"
                                            2704 *      (FUNCTION #1476)
                                            2705 *
00000000                00000000 000000A8   2706 @AUTO#rd_kafka_enq_once_add_source DSECT
00000000                                    2707          DS    XL168
                                            2708 *
00001AE8                00000000 00005E8C   2709 @CODE    CSECT
                                            2710 *
                                            2711 *
                                            2712 *
                                            2713 * ....... start of rd_kafka_enq_once_trigger
00001AE8                                    2714 @LNAME1480 DS  0H
00001AE8 00000019                           2715          DC    X'00000019'
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001AEC 99846D9281869281                   2716          DC    C'rd_kafka_enq_once_trigger'
00001B05 00                                 2717          DC    X'00'
                                            2718 rd_kafka_enq_once_trigger DCCPRLG CINDEX=1480,BASER=12,FRAME=216,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1480
                                            2719          macro
                                            2720          dccextrn &m
                                            2721          gblc    &$dccext(1000)
                                            2722          gbla    &$dccexti
                                            2723          lcla    &i
                                            2724 &$dccext(&$dccexti+1) setc    '&m'
                                            2725 &i       seta    1
                                            2726 .loop    aif    (&i gt &$dccexti).around
                                            2727          aif    ('&$dccext(&i)' eq '&m').getout
                                            2728 &i       seta    &i+1
                                            2729          ago     .loop
                                            2730 .around  anop
                                            2731 &$dccexti seta &$dccexti+1
                                            2732          extrn  &m
                                            2733 .getout  anop
                                            2734          mend
00001B08                                    2735+$eye0059    ds    0d                                                    02-DCCCA
00001B08 C4C3C3                             2736+         dc cl3'DCC'                                                    02-DCCCA
00001B0B 01                                 2737+         dc xl1'01' format one                                          02-DCCCA
00001B0C 00000000                           2738+         dc a(0)                                                        02-DCCCA
00001B10 0000000000001B7A                   2739+         dc ad(@PER_1480)                                               02-DCCCA
00001B18 00000000000000D8                   2740+         dc ad(216)                                                     02-DCCCA
00001B20 0000000000000000                   2741+         dc ad(0)                                                       02-DCCCA
00001B28 0000000000001000                   2742+         dc ad(4096)                                                    02-DCCCA
00001B30 20                                 2743+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001B31 03                                 2744+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001B32 03                                 2745+         dc al1(3)                                                      02-DCCCA
00001B33 08                                 2746+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001B34 00                                 2747+         dc bl.8'00000000'                                              02-DCCCA
00001B35 000000                             2748+         dc al3(0)                                                      02-DCCCA
00001B38 0000000000001AE8                   2749+         dc ad(@LNAME1480)                                              02-DCCCA
00001B40                                    2750+         ds 0d                                                          02-DCCCA
00001B40 0000000000001B08                   2751+         dc ad($eye0059)                                                02-DCCCA
00001B48 0000000000000000                   2752+         dc ad(0)                                                       02-DCCCA
00001B50                                    2753+         ds    0d                                                       01-DCCPR
00001B50                                    2754+rd_kafka_enq_once_trigger ds 0d                                         01-DCCPR
00001B50                                    2755+@REGION_1480_1 ds 0h                                                    01-DCCPR
00001B50 EBEC D008 0024          00000008   2756+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001B56 E3E0 D088 0004          00000088   2757+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001B5C E3C0 D090 0004          00000090   2758+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001B62 B904 002E                          2759+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001B66 E3B0 C018 0004          00000018   2760+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001B6C A7EB 00D8               000000D8   2761+         aghi  14,216              increase by frame size               01-DCCPR
00001B70 E3E0 C020 0021          00000020   2762+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001B76 4720 B020               00000020   2763+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001B7A                                    2764+@PER_1480 ds   0h                                                       01-DCCPR
00001B7A EBDE 2080 0024          00000080   2765+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001B80 E3C0 2090 0024          00000090   2766+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001B86 B904 00D2                          2767+         lgr   13,2                set real frame pointer               01-DCCPR
00001B8A B904 00CF                          2768+         lgr   12,15               set base reg                         01-DCCPR
                        00001B50            2769+         using @REGION_1480_1,12                                        01-DCCPR
00001B8E B904 0051                          2770          LGR   5,1         ; ptr to parm area
                                            2771 * ******* End of Prologue
                                            2772 * *
00001B92 E330 5000 0004          00000000   2773          LG    3,0(0,5)    ; eonce
                                            2774 * ***           int do_destroy;
                                            2775 * ***           rd_kafka_op_t *rko = ((void *)0);
00001B98 A769 0000               00000000   2776          LGHI  6,0         ; 0
00001B9C B904 0026                          2777          LGR   2,6         ; rko
                                            2778 * ***           rd_kafka_replyq_t replyq = {};
                                            2779 * setting 16 bytes to 0x00
00001BA0 D70F D0A8 D0A8 000000A8 000000A8   2780          XC    168(16,13),168(13)
                                            2781 * ***
                                            2782 * ***           mtx_lock(&eonce->lock);
00001BA6 E330 D0B8 0024          000000B8   2783          STG   3,184(0,13)
00001BAC 4110 D0B8               000000B8   2784          LA    1,184(0,13)
00001BB0 E3F0 C1C8 0004          00001D18   2785          LG    15,@lit_1480_78 ; mtx_lock
00001BB6                                    2786 @@gen_label129 DS    0H
00001BB6 05EF                               2787          BALR  14,15
00001BB8                                    2788 @@gen_label130 DS    0H
                                            2789 * ***
                                            2790 * ***           ((eonce->refcnt > 0) ? (void)0 : __assert(__func__, "C\
                                            2791 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h", 1061, "eonce->refcnt\
                                            2792 *  > 0"));
00001BB8 E55C 3028 0000          00000028   2793          CHSI  40(3),0
00001BBE 4720 C0AE               00001BFE   2794          BH    @L470
00001BC2                                    2795 @L469    DS    0H
00001BC2 E3F0 C1E0 0004          00001D30   2796          LG    15,@lit_1480_79
00001BC8 41F0 F0E4               000000E4   2797          LA    15,228(0,15)
00001BCC E3F0 D0B8 0024          000000B8   2798          STG   15,184(0,13)
00001BD2 E3F0 C1D8 0004          00001D28   2799          LG    15,@lit_1480_80
00001BD8 4110 F024               00000024   2800          LA    1,36(0,15)
00001BDC E310 D0C0 0024          000000C0   2801          STG   1,192(0,13)
00001BE2 E548 D0C8 0425          000000C8   2802          MVGHI 200(13),1061
00001BE8 41F0 F09E               0000009E   2803          LA    15,158(0,15)
00001BEC E3F0 D0D0 0024          000000D0   2804          STG   15,208(0,13)
00001BF2 4110 D0B8               000000B8   2805          LA    1,184(0,13)
00001BF6 E3F0 C1D0 0004          00001D20   2806          LG    15,@lit_1480_81 ; __assert
00001BFC                                    2807 @@gen_label132 DS    0H
00001BFC 05EF                               2808          BALR  14,15
00001BFE                                    2809 @@gen_label133 DS    0H
00001BFE                                    2810 @L470    DS    0H
                                            2811 * ***           eonce->refcnt--;
00001BFE 58F0 3028               00000028   2812          L     15,40(0,3)
00001C02 A7FA FFFF               0000FFFF   2813          AHI   15,-1
00001C06 50F0 3028               00000028   2814          ST    15,40(0,3)
                                            2815 * ***           do_destroy = eonce->refcnt == 0;
00001C0A A7F8 0000               00000000   2816          LHI   15,0        ; 0
00001C0E 57F0 3028               00000028   2817          X     15,40(0,3)
00001C12 104F                               2818          LPR   4,15
                                                                                                                           Page   61 
  Active Usings: @REGION_1480_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001C14 A74A FFFF               0000FFFF   2819          AHI   4,-1
00001C18 8840 001F               0000001F   2820          SRL   4,31(0)
                                            2821 * ***
                                            2822 * ***           if (eonce->rko) {
00001C1C E3F0 3030 0002          00000030   2823          LTG   15,48(0,3)  ; offset of rko in rd_kafka_enq_once_s
00001C22 4780 C0FE               00001C4E   2824          BZ    @L471
                                            2825 * ***
                                            2826 * ***   # 1072 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            2827 * ***                   rko = eonce->rko;
00001C26 E320 3030 0004          00000030   2828          LG    2,48(0,3)   ; offset of rko in rd_kafka_enq_once_s
                                            2829 * ***                   replyq = eonce->replyq;
00001C2C D20F D0A8 3038 000000A8 00000038   2830          MVC   168(16,13),56(3)
                                            2831 * ***
                                            2832 * ***                   eonce->rko = ((void *)0);
00001C32 E360 3030 0024          00000030   2833          STG   6,48(0,3)   ; offset of rko in rd_kafka_enq_once_s
                                            2834 * ***                   rd_kafka_replyq_clear(&eonce->replyq);
00001C38 41F0 3038               00000038   2835          LA    15,56(0,3)
00001C3C E3F0 D0B8 0024          000000B8   2836          STG   15,184(0,13)
00001C42 4110 D0B8               000000B8   2837          LA    1,184(0,13)
00001C46 E3F0 C1E8 0004          00001D38   2838          LG    15,@lit_1480_84 ; rd_kafka_replyq_clear
00001C4C                                    2839 @@gen_label135 DS    0H
00001C4C 05EF                               2840          BALR  14,15
00001C4E                                    2841 @@gen_label136 DS    0H
                                            2842 * ***
                                            2843 * ***
                                            2844 * ***           }
00001C4E                                    2845 @L471    DS    0H
                                            2846 * ***           mtx_unlock(&eonce->lock);
00001C4E E330 D0B8 0024          000000B8   2847          STG   3,184(0,13)
00001C54 4110 D0B8               000000B8   2848          LA    1,184(0,13)
00001C58 E3F0 C1F0 0004          00001D40   2849          LG    15,@lit_1480_85 ; mtx_unlock
00001C5E                                    2850 @@gen_label137 DS    0H
00001C5E 05EF                               2851          BALR  14,15
00001C60                                    2852 @@gen_label138 DS    0H
                                            2853 * ***
                                            2854 * ***           if (do_destroy) {
00001C60 1244                               2855          LTR   4,4
00001C62 4780 C128               00001C78   2856          BZ    @L472
                                            2857 * ***
                                            2858 * ***                   rd_kafka_enq_once_destroy0(eonce);
00001C66 E330 D0B8 0024          000000B8   2859          STG   3,184(0,13)
00001C6C 4110 D0B8               000000B8   2860          LA    1,184(0,13)
00001C70 E3F0 C1F8 0004          00001D48   2861          LG    15,@lit_1480_86 ; rd_kafka_enq_once_destroy0
00001C76                                    2862 @@gen_label140 DS    0H
00001C76 05EF                               2863          BALR  14,15
00001C78                                    2864 @@gen_label141 DS    0H
                                            2865 * ***           }
00001C78                                    2866 @L472    DS    0H
                                            2867 * ***
                                            2868 * ***           if (rko) {
00001C78 B902 00F2                          2869          LTGR  15,2
00001C7C 4780 C176               00001CC6   2870          BZ    @L473
                                                                                                                           Page   62 
  Active Usings: @REGION_1480_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2871 * ***                   rko->rko_err = err;
00001C80 58F0 500C               0000000C   2872          L     15,12(0,5)  ; err
00001C84 50F0 2020               00000020   2873          ST    15,32(0,2)  ; offset of rko_err in rd_kafka_op_s
                                            2874 * ***                   rd_kafka_replyq_enq(&replyq, rko, replyq.versi\
                                            2875 * on);
00001C88 41F0 D0A8               000000A8   2876          LA    15,168(0,13)
00001C8C E3F0 D0B8 0024          000000B8   2877          STG   15,184(0,13)
00001C92 E320 D0C0 0024          000000C0   2878          STG   2,192(0,13)
00001C98 E3F0 D0B0 0014          000000B0   2879          LGF   15,176(0,13)
00001C9E E3F0 D0C8 0024          000000C8   2880          STG   15,200(0,13)
00001CA4 4110 D0B8               000000B8   2881          LA    1,184(0,13)
00001CA8 E3F0 C200 0004          00001D50   2882          LG    15,@lit_1480_87 ; rd_kafka_replyq_enq
00001CAE                                    2883 @@gen_label143 DS    0H
00001CAE 05EF                               2884          BALR  14,15
00001CB0                                    2885 @@gen_label144 DS    0H
                                            2886 * ***                   rd_kafka_replyq_destroy(&replyq);
00001CB0 41F0 D0A8               000000A8   2887          LA    15,168(0,13)
00001CB4 E3F0 D0B8 0024          000000B8   2888          STG   15,184(0,13)
00001CBA 4110 D0B8               000000B8   2889          LA    1,184(0,13)
00001CBE E3F0 C208 0004          00001D58   2890          LG    15,@lit_1480_88 ; rd_kafka_replyq_destroy
00001CC4                                    2891 @@gen_label145 DS    0H
00001CC4 05EF                               2892          BALR  14,15
00001CC6                                    2893 @@gen_label146 DS    0H
                                            2894 * ***           }
00001CC6                                    2895 @L473    DS    0H
                                            2896 * ***   }
00001CC6                                    2897 @ret_lab_1480 DS 0H
                                            2898 * * **** Start of Epilogue
                                            2899          DCCEPIL
00001CC6                                    2900+         ds 0h                                                          01-DCCEP
                                            2901+* Epilog
00001CC6 D707 D088 D088 00000088 00000088   2902+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001CCC E3D0 D080 0004          00000080   2903+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001CD2 E3C0 D090 0004          00000090   2904+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001CD8 E3B0 C018 0004          00000018   2905+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001CDE E3C0 B010 0021          00000010   2906+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001CE4 E3E0 D008 0004          00000008   2907+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001CEA EB1C D020 0004          00000020   2908+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001CF0 078E                               2909+         bcr 8,14                if same dsab, just return              01-DCCEP
00001CF2 E3F0 D010 0024          00000010   2910+         stg 15,16(0,13)         save return code                       01-DCCEP
00001CF8 E300 D018 0024          00000018   2911+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001CFE E3F0 D090 0004          00000090   2912+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001D04 E3F0 F018 0004          00000018   2913+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001D0A 47F0 F040               00000040   2914+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2915+* End of Epilog
                                            2916 * * **** End of Epilogue
00001D10                                    2917          DS    0D
00001D10 000000D8                           2918 @FRAMESIZE_1480 DC F'216'
00001D14 00000000
00001D18 0000000000000000                   2919 @lit_1480_78 DC AD(mtx_lock)
00001D20 0000000000000000                   2920 @lit_1480_81 DC AD(__assert)
00001D28 0000000000006076                   2921 @lit_1480_80 DC AD(@strings@)
                                                                                                                           Page   63 
  Active Usings: @REGION_1480_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001D30 0000000000005E90                   2922 @lit_1480_79 DC AD(@DATA)
00001D38 00000000000014A8                   2923 @lit_1480_84 DC AD(rd_kafka_replyq_clear)
00001D40 0000000000000000                   2924 @lit_1480_85 DC AD(mtx_unlock)
00001D48 00000000000017E8                   2925 @lit_1480_86 DC AD(rd_kafka_enq_once_destroy0)
00001D50 0000000000001670                   2926 @lit_1480_87 DC AD(rd_kafka_replyq_enq)
00001D58 0000000000001530                   2927 @lit_1480_88 DC AD(rd_kafka_replyq_destroy)
                                            2928          DROP  12
                                            2929 *
                                            2930 *   DSECT for automatic variables in "rd_kafka_enq_once_trigger"
                                            2931 *      (FUNCTION #1480)
                                            2932 *
00000000                00000000 000000B8   2933 @AUTO#rd_kafka_enq_once_trigger DSECT
00000000                                    2934          DS    XL168
000000A8                                    2935 rd_kafka_enq_once_trigger#replyq#0 DS 16XL1 ; replyq
000000B8                000000B8 000000A8   2936          ORG   @AUTO#rd_kafka_enq_once_trigger+168
000000A8                                    2937 rd_kafka_enq_once_trigger#do_destroy#0 DS 1F ; do_destroy
                                            2938 *
00001D60                00000000 00005E8C   2939 @CODE    CSECT
                                            2940 *
                                            2941 *
                                            2942 *
                                            2943 * ....... start of rd_tmpabuf_new
00001D60                                    2944 @LNAME1492 DS  0H
00001D60 0000000E                           2945          DC    X'0000000E'
00001D64 99846DA394978182                   2946          DC    C'rd_tmpabuf_new'
00001D72 00                                 2947          DC    X'00'
                                            2948 rd_tmpabuf_new DCCPRLG CINDEX=1492,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1492
                                            2949          macro
                                            2950          dccextrn &m
                                            2951          gblc    &$dccext(1000)
                                            2952          gbla    &$dccexti
                                            2953          lcla    &i
                                            2954 &$dccext(&$dccexti+1) setc    '&m'
                                            2955 &i       seta    1
                                            2956 .loop    aif    (&i gt &$dccexti).around
                                            2957          aif    ('&$dccext(&i)' eq '&m').getout
                                            2958 &i       seta    &i+1
                                            2959          ago     .loop
                                            2960 .around  anop
                                            2961 &$dccexti seta &$dccexti+1
                                            2962          extrn  &m
                                            2963 .getout  anop
                                            2964          mend
00001D78                                    2965+$eye0062    ds    0d                                                    02-DCCCA
00001D78 C4C3C3                             2966+         dc cl3'DCC'                                                    02-DCCCA
00001D7B 01                                 2967+         dc xl1'01' format one                                          02-DCCCA
00001D7C 00000000                           2968+         dc a(0)                                                        02-DCCCA
00001D80 0000000000001DEA                   2969+         dc ad(@PER_1492)                                               02-DCCCA
00001D88 00000000000000B0                   2970+         dc ad(176)                                                     02-DCCCA
00001D90 0000000000000000                   2971+         dc ad(0)                                                       02-DCCCA
00001D98 0000000000001000                   2972+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   64 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001DA0 20                                 2973+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001DA1 03                                 2974+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001DA2 03                                 2975+         dc al1(3)                                                      02-DCCCA
00001DA3 08                                 2976+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001DA4 00                                 2977+         dc bl.8'00000000'                                              02-DCCCA
00001DA5 000000                             2978+         dc al3(0)                                                      02-DCCCA
00001DA8 0000000000001D60                   2979+         dc ad(@LNAME1492)                                              02-DCCCA
00001DB0                                    2980+         ds 0d                                                          02-DCCCA
00001DB0 0000000000001D78                   2981+         dc ad($eye0062)                                                02-DCCCA
00001DB8 0000000000000000                   2982+         dc ad(0)                                                       02-DCCCA
00001DC0                                    2983+         ds    0d                                                       01-DCCPR
00001DC0                                    2984+rd_tmpabuf_new ds 0d                                                    01-DCCPR
00001DC0                                    2985+@REGION_1492_1 ds 0h                                                    01-DCCPR
00001DC0 EBEC D008 0024          00000008   2986+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001DC6 E3E0 D088 0004          00000088   2987+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001DCC E3C0 D090 0004          00000090   2988+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001DD2 B904 002E                          2989+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001DD6 E3B0 C018 0004          00000018   2990+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001DDC A7EB 00B0               000000B0   2991+         aghi  14,176              increase by frame size               01-DCCPR
00001DE0 E3E0 C020 0021          00000020   2992+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001DE6 4720 B020               00000020   2993+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001DEA                                    2994+@PER_1492 ds   0h                                                       01-DCCPR
00001DEA EBDE 2080 0024          00000080   2995+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001DF0 E3C0 2090 0024          00000090   2996+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001DF6 B904 00D2                          2997+         lgr   13,2                set real frame pointer               01-DCCPR
00001DFA B904 00CF                          2998+         lgr   12,15               set base reg                         01-DCCPR
                        00001DC0            2999+         using @REGION_1492_1,12                                        01-DCCPR
00001DFE B904 0031                          3000          LGR   3,1         ; ptr to parm area
                                            3001 * ******* End of Prologue
                                            3002 * *
                                            3003 * ***       tab->buf = rd_malloc(size);
00001E02 E320 3000 0004          00000000   3004          LG    2,0(0,3)    ; tab
00001E08 E3F0 3008 0004          00000008   3005          LG    15,8(0,3)   ; size
00001E0E E3F0 D0A8 0024          000000A8   3006          STG   15,168(0,13)
00001E14 4110 D0A8               000000A8   3007          LA    1,168(0,13)
00001E18 E3F0 C0D8 0004          00001E98   3008          LG    15,@lit_1492_90 ; rd_malloc
00001E1E                                    3009 @@gen_label147 DS    0H
00001E1E 05EF                               3010          BALR  14,15
00001E20                                    3011 @@gen_label148 DS    0H
00001E20 E3F0 2010 0024          00000010   3012          STG   15,16(0,2)
                                            3013 * ***       tab->size = size;
00001E26 E3F0 3008 0004          00000008   3014          LG    15,8(0,3)   ; size
00001E2C E3F0 2000 0024          00000000   3015          STG   15,0(0,2)   ; tab
                                            3016 * ***       tab->of = 0;
00001E32 E548 2008 0000          00000008   3017          MVGHI 8(2),0      ; offset of of in rd_tmpabuf_s
                                            3018 * ***       tab->failed = 0;
00001E38 E54C 2018 0000          00000018   3019          MVHI  24(2),0     ; offset of failed in rd_tmpabuf_s
                                            3020 * ***       tab->assert_on_fail = assert_on_fail;
00001E3E 58F0 3014               00000014   3021          L     15,20(0,3)  ; assert_on_fail
00001E42 50F0 201C               0000001C   3022          ST    15,28(0,2)  ; offset of assert_on_fail in rd_tmpabuf_s
                                            3023 * ***   }
00001E46                                    3024 @ret_lab_1492 DS 0H
                                                                                                                           Page   65 
  Active Usings: @REGION_1492_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3025 * * **** Start of Epilogue
                                            3026          DCCEPIL
00001E46                                    3027+         ds 0h                                                          01-DCCEP
                                            3028+* Epilog
00001E46 D707 D088 D088 00000088 00000088   3029+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001E4C E3D0 D080 0004          00000080   3030+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001E52 E3C0 D090 0004          00000090   3031+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001E58 E3B0 C018 0004          00000018   3032+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001E5E E3C0 B010 0021          00000010   3033+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001E64 E3E0 D008 0004          00000008   3034+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001E6A EB1C D020 0004          00000020   3035+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001E70 078E                               3036+         bcr 8,14                if same dsab, just return              01-DCCEP
00001E72 E3F0 D010 0024          00000010   3037+         stg 15,16(0,13)         save return code                       01-DCCEP
00001E78 E300 D018 0024          00000018   3038+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001E7E E3F0 D090 0004          00000090   3039+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001E84 E3F0 F018 0004          00000018   3040+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E8A 47F0 F040               00000040   3041+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3042+* End of Epilog
                                            3043 * * **** End of Epilogue
00001E90                                    3044          DS    0D
00001E90 000000B0                           3045 @FRAMESIZE_1492 DC F'176'
00001E94 00000000
00001E98 0000000000000058                   3046 @lit_1492_90 DC AD(rd_malloc)
                                            3047          DROP  12
                                            3048 *
                                            3049 *   DSECT for automatic variables in "rd_tmpabuf_new"
                                            3050 *      (FUNCTION #1492)
                                            3051 *
00000000                00000000 000000A8   3052 @AUTO#rd_tmpabuf_new DSECT
00000000                                    3053          DS    XL168
                                            3054 *
00001EA0                00000000 00005E8C   3055 @CODE    CSECT
                                            3056 *
                                            3057 *
                                            3058 *
                                            3059 * ....... start of rd_tmpabuf_alloc0
00001EA0                                    3060 @LNAME1495 DS  0H
00001EA0 00000011                           3061          DC    X'00000011'
00001EA4 99846DA394978182                   3062          DC    C'rd_tmpabuf_alloc0'
00001EB5 00                                 3063          DC    X'00'
                                            3064 rd_tmpabuf_alloc0 DCCPRLG CINDEX=1495,BASER=12,FRAME=240,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1495
                                            3065          macro
                                            3066          dccextrn &m
                                            3067          gblc    &$dccext(1000)
                                            3068          gbla    &$dccexti
                                            3069          lcla    &i
                                            3070 &$dccext(&$dccexti+1) setc    '&m'
                                            3071 &i       seta    1
                                            3072 .loop    aif    (&i gt &$dccexti).around
                                            3073          aif    ('&$dccext(&i)' eq '&m').getout
                                            3074 &i       seta    &i+1
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3075          ago     .loop
                                            3076 .around  anop
                                            3077 &$dccexti seta &$dccexti+1
                                            3078          extrn  &m
                                            3079 .getout  anop
                                            3080          mend
00001EB8                                    3081+$eye0065    ds    0d                                                    02-DCCCA
00001EB8 C4C3C3                             3082+         dc cl3'DCC'                                                    02-DCCCA
00001EBB 01                                 3083+         dc xl1'01' format one                                          02-DCCCA
00001EBC 00000000                           3084+         dc a(0)                                                        02-DCCCA
00001EC0 0000000000001F2A                   3085+         dc ad(@PER_1495)                                               02-DCCCA
00001EC8 00000000000000F0                   3086+         dc ad(240)                                                     02-DCCCA
00001ED0 0000000000000000                   3087+         dc ad(0)                                                       02-DCCCA
00001ED8 0000000000001000                   3088+         dc ad(4096)                                                    02-DCCCA
00001EE0 20                                 3089+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001EE1 03                                 3090+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001EE2 03                                 3091+         dc al1(3)                                                      02-DCCCA
00001EE3 08                                 3092+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001EE4 00                                 3093+         dc bl.8'00000000'                                              02-DCCCA
00001EE5 000000                             3094+         dc al3(0)                                                      02-DCCCA
00001EE8 0000000000001EA0                   3095+         dc ad(@LNAME1495)                                              02-DCCCA
00001EF0                                    3096+         ds 0d                                                          02-DCCCA
00001EF0 0000000000001EB8                   3097+         dc ad($eye0065)                                                02-DCCCA
00001EF8 0000000000000000                   3098+         dc ad(0)                                                       02-DCCCA
00001F00                                    3099+         ds    0d                                                       01-DCCPR
00001F00                                    3100+rd_tmpabuf_alloc0 ds 0d                                                 01-DCCPR
00001F00                                    3101+@REGION_1495_1 ds 0h                                                    01-DCCPR
00001F00 EBEC D008 0024          00000008   3102+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001F06 E3E0 D088 0004          00000088   3103+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001F0C E3C0 D090 0004          00000090   3104+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001F12 B904 002E                          3105+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001F16 E3B0 C018 0004          00000018   3106+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001F1C A7EB 00F0               000000F0   3107+         aghi  14,240              increase by frame size               01-DCCPR
00001F20 E3E0 C020 0021          00000020   3108+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001F26 4720 B020               00000020   3109+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001F2A                                    3110+@PER_1495 ds   0h                                                       01-DCCPR
00001F2A EBDE 2080 0024          00000080   3111+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001F30 E3C0 2090 0024          00000090   3112+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001F36 B904 00D2                          3113+         lgr   13,2                set real frame pointer               01-DCCPR
00001F3A B904 00CF                          3114+         lgr   12,15               set base reg                         01-DCCPR
                        00001F00            3115+         using @REGION_1495_1,12                                        01-DCCPR
                                            3116          DCCPRV REG=2      ; Get PRV from DVT
00001F3E E320 B008 0004          00000008   3117+         LG 2,8(0,11)                                                   01-DCCPR
00001F44 B904 0031                          3118          LGR   3,1         ; ptr to parm area
                                            3119 * ******* End of Prologue
                                            3120 * *
00001F48 E3F0 3010 0004          00000010   3121          LG    15,16(0,3)  ; tab
00001F4E E310 3018 0004          00000018   3122          LG    1,24(0,3)   ; size
                                            3123 * ***       void* ptr;
                                            3124 * ***
                                            3125 * ***       if (((tab->failed)))
00001F54 E340 F018 0012          00000018   3126          LT    4,24(0,15)  ; offset of failed in rd_tmpabuf_s
                                                                                                                           Page   67 
  Active Usings: @REGION_1495_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001F5A 4780 C098               00001F98   3127          BZ    @L484
                                            3128 * ***           return ((void *)0);
00001F5E A7F9 0000               00000000   3129          LGHI  15,0        ; 0
00001F62 47F0 C196               00002096   3130          B     @ret_lab_1495
00001F68                                    3131          DS    0D
00001F68 000000F0                           3132 @FRAMESIZE_1495 DC F'240'
00001F6C 00000000
00001F70 0000000000000000                   3133 @lit_1495_96 DC AD(fprintf)
00001F78 0000000000005E90                   3134 @lit_1495_95 DC AD(@DATA)
00001F80 0000000000006076                   3135 @lit_1495_94 DC AD(@strings@)
00001F88 00000000                           3136 @lit_1495_93 DC Q(__stderrp)
00001F8C 00000000
00001F90 0000000000000000                   3137 @lit_1495_97 DC AD(__assert)
00001F98                                    3138 @L484    DS    0H
                                            3139 * ***
                                            3140 * ***       if (((tab->of + size > tab->size))) {
00001F98 B904 0041                          3141          LGR   4,1
00001F9C E340 F008 000A          00000008   3142          ALG   4,8(0,15)
00001FA2 E340 F000 0021          00000000   3143          CLG   4,0(0,15)
00001FA8 47D0 C16E               0000206E   3144          BNH   @L485
                                            3145 * ***           if (tab->assert_on_fail) {
00001FAC E340 F01C 0012          0000001C   3146          LT    4,28(0,15)  ; offset of assert_on_fail in rd_tmpabuf_s
00001FB2 4780 C166               00002066   3147          BZ    @L486
                                            3148 * ***               fprintf(__stderrp,
                                            3149 * ***                   "%s: %s:%d: requested size %" "zu" " + %" "zu"\
                                            3150 *  " > %" "zu" "\n",
                                            3151 * ***                   __FUNCTION__, func, line, tab->of, size,
                                            3152 * ***                   tab->size);
00001FB6 E340 C088 0016          00001F88   3153          LLGF  4,@lit_1495_93 ; __stderrp
00001FBC E324 2000 0004          00000000   3154          LG    2,0(4,2)    ; __stderrp
00001FC2 E320 D0B0 0024          000000B0   3155          STG   2,176(0,13)
00001FC8 E320 C080 0004          00001F80   3156          LG    2,@lit_1495_94
00001FCE 4140 20B0               000000B0   3157          LA    4,176(0,2)
00001FD2 E340 D0B8 0024          000000B8   3158          STG   4,184(0,13)
00001FD8 E340 C078 0004          00001F78   3159          LG    4,@lit_1495_95
00001FDE 4150 4132               00000132   3160          LA    5,306(0,4)
00001FE2 E350 D0C0 0024          000000C0   3161          STG   5,192(0,13)
00001FE8 E350 3000 0004          00000000   3162          LG    5,0(0,3)    ; func
00001FEE E350 D0C8 0024          000000C8   3163          STG   5,200(0,13)
00001FF4 E330 300C 0014          0000000C   3164          LGF   3,12(0,3)   ; line
00001FFA E330 D0D0 0024          000000D0   3165          STG   3,208(0,13)
00002000 E330 F008 0004          00000008   3166          LG    3,8(0,15)
00002006 E330 D0D8 0024          000000D8   3167          STG   3,216(0,13)
0000200C E310 D0E0 0024          000000E0   3168          STG   1,224(0,13)
00002012 E3F0 F000 0004          00000000   3169          LG    15,0(0,15)
00002018 E3F0 D0E8 0024          000000E8   3170          STG   15,232(0,13)
0000201E 4110 D0B0               000000B0   3171          LA    1,176(0,13)
00002022 E3F0 C070 0004          00001F70   3172          LG    15,@lit_1495_96 ; fprintf
00002028                                    3173 @@gen_label152 DS    0H
00002028 05EF                               3174          BALR  14,15
0000202A                                    3175 @@gen_label153 DS    0H
                                            3176 * ***               ((!*"rd_tmpabuf_alloc: not enough size in buffer")\
                                                                                                                           Page   68 
  Active Usings: @REGION_1495_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3177 *  ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdka\
                                            3178 * fka_buf.h", 113, "!*\"rd_tmpabuf_alloc: not enough size in buffer\""\
                                            3179 * ));
0000202A 41F0 20DC               000000DC   3180          LA    15,220(0,2)
0000202E 9500 F000      00000000 00000000   3181          CLI   0(15),0
00002032 4780 C166               00002066   3182          BE    @L486
00002036                                    3183 @L487    DS    0H
00002036 41F0 4132               00000132   3184          LA    15,306(0,4)
0000203A E3F0 D0B0 0024          000000B0   3185          STG   15,176(0,13)
00002040 41F0 2108               00000108   3186          LA    15,264(0,2)
00002044 E3F0 D0B8 0024          000000B8   3187          STG   15,184(0,13)
0000204A E548 D0C0 0071          000000C0   3188          MVGHI 192(13),113
00002050 41F0 2132               00000132   3189          LA    15,306(0,2)
00002054 E3F0 D0C8 0024          000000C8   3190          STG   15,200(0,13)
0000205A 4110 D0B0               000000B0   3191          LA    1,176(0,13)
0000205E E3F0 C090 0004          00001F90   3192          LG    15,@lit_1495_97 ; __assert
00002064                                    3193 @@gen_label155 DS    0H
00002064 05EF                               3194          BALR  14,15
00002066                                    3195 @@gen_label156 DS    0H
00002066                                    3196 @L488    DS    0H
                                            3197 * ***           }
00002066                                    3198 @L486    DS    0H
                                            3199 * ***           return ((void *)0);
00002066 A7F9 0000               00000000   3200          LGHI  15,0        ; 0
0000206A 47F0 C196               00002096   3201          B     @ret_lab_1495
                                            3202 * ***       }
0000206E                                    3203 @L485    DS    0H
                                            3204 * ***
                                            3205 * ***       ptr = (void*)(tab->buf + tab->of);
0000206E E320 F010 0004          00000010   3206          LG    2,16(0,15)  ; offset of buf in rd_tmpabuf_s
00002074 E330 F008 0004          00000008   3207          LG    3,8(0,15)   ; offset of of in rd_tmpabuf_s
0000207A 4123 2000               00000000   3208          LA    2,0(3,2)
                                            3209 * ***       tab->of += (((size) + ((8) - 1)) & ~(8-1));
0000207E A71B 0007               00000007   3210          AGHI  1,7
00002082 A517 FFF8               0000FFF8   3211          NILL  1,65528
00002086 E310 F008 000A          00000008   3212          ALG   1,8(0,15)
0000208C E310 F008 0024          00000008   3213          STG   1,8(0,15)
                                            3214 * ***
                                            3215 * ***       return ptr;
00002092 B904 00F2                          3216          LGR   15,2
                                            3217 * ***   }
00002096                                    3218 @ret_lab_1495 DS 0H
                                            3219 * * **** Start of Epilogue
                                            3220          DCCEPIL
00002096                                    3221+         ds 0h                                                          01-DCCEP
                                            3222+* Epilog
00002096 D707 D088 D088 00000088 00000088   3223+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000209C E3D0 D080 0004          00000080   3224+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000020A2 E3C0 D090 0004          00000090   3225+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000020A8 E3B0 C018 0004          00000018   3226+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000020AE E3C0 B010 0021          00000010   3227+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000020B4 E3E0 D008 0004          00000008   3228+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page   69 
  Active Usings: @REGION_1495_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000020BA EB1C D020 0004          00000020   3229+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000020C0 078E                               3230+         bcr 8,14                if same dsab, just return              01-DCCEP
000020C2 E3F0 D010 0024          00000010   3231+         stg 15,16(0,13)         save return code                       01-DCCEP
000020C8 E300 D018 0024          00000018   3232+         stg 0,24(0,13)          save more return code                  01-DCCEP
000020CE E3F0 D090 0004          00000090   3233+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000020D4 E3F0 F018 0004          00000018   3234+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000020DA 47F0 F040               00000040   3235+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3236+* End of Epilog
                                            3237 * * **** End of Epilogue
                                            3238          DROP  12
                                            3239 *
                                            3240 *   DSECT for automatic variables in "rd_tmpabuf_alloc0"
                                            3241 *      (FUNCTION #1495)
                                            3242 *
00000000                00000000 000000A8   3243 @AUTO#rd_tmpabuf_alloc0 DSECT
00000000                                    3244          DS    XL168
                                            3245 *
000020DE                00000000 00005E8C   3246 @CODE    CSECT
                                            3247 *
                                            3248 *
                                            3249 *
                                            3250 * ....... start of rd_tmpabuf_write0
000020DE                                    3251 @LNAME1496 DS  0H
000020DE 00000011                           3252          DC    X'00000011'
000020E2 99846DA394978182                   3253          DC    C'rd_tmpabuf_write0'
000020F3 00                                 3254          DC    X'00'
                                            3255 rd_tmpabuf_write0 DCCPRLG CINDEX=1496,BASER=12,FRAME=208,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1496
                                            3256          macro
                                            3257          dccextrn &m
                                            3258          gblc    &$dccext(1000)
                                            3259          gbla    &$dccexti
                                            3260          lcla    &i
                                            3261 &$dccext(&$dccexti+1) setc    '&m'
                                            3262 &i       seta    1
                                            3263 .loop    aif    (&i gt &$dccexti).around
                                            3264          aif    ('&$dccext(&i)' eq '&m').getout
                                            3265 &i       seta    &i+1
                                            3266          ago     .loop
                                            3267 .around  anop
                                            3268 &$dccexti seta &$dccexti+1
                                            3269          extrn  &m
                                            3270 .getout  anop
                                            3271          mend
000020F8                                    3272+$eye0069    ds    0d                                                    02-DCCCA
000020F8 C4C3C3                             3273+         dc cl3'DCC'                                                    02-DCCCA
000020FB 01                                 3274+         dc xl1'01' format one                                          02-DCCCA
000020FC 00000000                           3275+         dc a(0)                                                        02-DCCCA
00002100 000000000000216A                   3276+         dc ad(@PER_1496)                                               02-DCCCA
00002108 00000000000000D0                   3277+         dc ad(208)                                                     02-DCCCA
00002110 0000000000000000                   3278+         dc ad(0)                                                       02-DCCCA
00002118 0000000000001000                   3279+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002120 20                                 3280+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002121 03                                 3281+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002122 03                                 3282+         dc al1(3)                                                      02-DCCCA
00002123 08                                 3283+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002124 00                                 3284+         dc bl.8'00000000'                                              02-DCCCA
00002125 000000                             3285+         dc al3(0)                                                      02-DCCCA
00002128 00000000000020DE                   3286+         dc ad(@LNAME1496)                                              02-DCCCA
00002130                                    3287+         ds 0d                                                          02-DCCCA
00002130 00000000000020F8                   3288+         dc ad($eye0069)                                                02-DCCCA
00002138 0000000000000000                   3289+         dc ad(0)                                                       02-DCCCA
00002140                                    3290+         ds    0d                                                       01-DCCPR
00002140                                    3291+rd_tmpabuf_write0 ds 0d                                                 01-DCCPR
00002140                                    3292+@REGION_1496_1 ds 0h                                                    01-DCCPR
00002140 EBEC D008 0024          00000008   3293+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002146 E3E0 D088 0004          00000088   3294+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000214C E3C0 D090 0004          00000090   3295+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002152 B904 002E                          3296+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002156 E3B0 C018 0004          00000018   3297+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000215C A7EB 00D0               000000D0   3298+         aghi  14,208              increase by frame size               01-DCCPR
00002160 E3E0 C020 0021          00000020   3299+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002166 4720 B020               00000020   3300+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000216A                                    3301+@PER_1496 ds   0h                                                       01-DCCPR
0000216A EBDE 2080 0024          00000080   3302+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002170 E3C0 2090 0024          00000090   3303+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002176 B904 00D2                          3304+         lgr   13,2                set real frame pointer               01-DCCPR
0000217A B904 00CF                          3305+         lgr   12,15               set base reg                         01-DCCPR
                        00002140            3306+         using @REGION_1496_1,12                                        01-DCCPR
0000217E B904 0031                          3307          LGR   3,1         ; ptr to parm area
                                            3308 * ******* End of Prologue
                                            3309 * *
                                            3310 * ***       void* ptr = rd_tmpabuf_alloc0(func, line, tab, size);
00002182 E320 3020 0004          00000020   3311          LG    2,32(0,3)   ; size
00002188 E3F0 3000 0004          00000000   3312          LG    15,0(0,3)   ; func
0000218E E3F0 D0B0 0024          000000B0   3313          STG   15,176(0,13)
00002194 E3F0 300C 0014          0000000C   3314          LGF   15,12(0,3)  ; line
0000219A E3F0 D0B8 0024          000000B8   3315          STG   15,184(0,13)
000021A0 E3F0 3010 0004          00000010   3316          LG    15,16(0,3)  ; tab
000021A6 E3F0 D0C0 0024          000000C0   3317          STG   15,192(0,13)
000021AC E320 D0C8 0024          000000C8   3318          STG   2,200(0,13)
000021B2 4110 D0B0               000000B0   3319          LA    1,176(0,13)
000021B6 E3F0 C120 0004          00002260   3320          LG    15,@lit_1496_100 ; rd_tmpabuf_alloc0
000021BC                                    3321 @@gen_label157 DS    0H
000021BC 05EF                               3322          BALR  14,15
000021BE                                    3323 @@gen_label158 DS    0H
                                            3324 * ***
                                            3325 * ***       if (((ptr && size)))
000021BE B902 001F                          3326          LTGR  1,15
000021C2 4780 C0CA               0000220A   3327          BZ    @L489
000021C6 B902 0012                          3328          LTGR  1,2
000021CA 4780 C0CA               0000220A   3329          BZ    @L489
                                            3330 * ***           __memcpy(ptr,buf,size);
000021CE E330 3018 0004          00000018   3331          LG    3,24(0,3)
                                                                                                                           Page   71 
  Active Usings: @REGION_1496_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000021D4 B904 004F                          3332          LGR   4,15
000021D8 B902 0012                          3333          LTGR  1,2
000021DC 4780 C0CA               0000220A   3334          BZ    @@gen_label163
000021E0 A71B FFFF               0000FFFF   3335          AGHI  1,-1
000021E4 EB21 0008 000A          00000008   3336          SRAG  2,1,8(0)
000021EA B902 0022                          3337          LTGR  2,2
000021EE 4780 C0C6               00002206   3338          BZ    @@gen_label162
000021F2                                    3339 @@gen_label161 DS 0H
000021F2 D2FF 4000 3000 00000000 00000000   3340          MVC   0(256,4),0(3)
000021F8 4140 4100               00000100   3341          LA    4,256(0,4)
000021FC 4130 3100               00000100   3342          LA    3,256(0,3)
00002200 E320 C0B2 0046          000021F2   3343          BCTG  2,@@gen_label161
00002206                                    3344 @@gen_label162 DS 0H
00002206 4410 C128               00002268   3345          EX    1,@lit_1496_101
0000220A                                    3346 @@gen_label163 DS 0H
0000220A                                    3347 @L489    DS    0H
                                            3348 * ***
                                            3349 * ***       return ptr;
                                            3350 * ***   }
                                            3351 * * **** Start of Epilogue
                                            3352          DCCEPIL
0000220A                                    3353+         ds 0h                                                          01-DCCEP
                                            3354+* Epilog
0000220A D707 D088 D088 00000088 00000088   3355+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002210 E3D0 D080 0004          00000080   3356+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002216 E3C0 D090 0004          00000090   3357+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000221C E3B0 C018 0004          00000018   3358+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002222 E3C0 B010 0021          00000010   3359+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002228 E3E0 D008 0004          00000008   3360+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000222E EB1C D020 0004          00000020   3361+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002234 078E                               3362+         bcr 8,14                if same dsab, just return              01-DCCEP
00002236 E3F0 D010 0024          00000010   3363+         stg 15,16(0,13)         save return code                       01-DCCEP
0000223C E300 D018 0024          00000018   3364+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002242 E3F0 D090 0004          00000090   3365+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002248 E3F0 F018 0004          00000018   3366+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000224E 47F0 F040               00000040   3367+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3368+* End of Epilog
                                            3369 * * **** End of Epilogue
00002258                                    3370          DS    0D
00002258 000000D0                           3371 @FRAMESIZE_1496 DC F'208'
0000225C 00000000
00002260 0000000000001F00                   3372 @lit_1496_100 DC AD(rd_tmpabuf_alloc0)
00002268 D200 4000 3000 00000000 00000000   3373 @lit_1496_101          MVC 0(1,4),0(3)
                                            3374          DROP  12
                                            3375 *
                                            3376 *   DSECT for automatic variables in "rd_tmpabuf_write0"
                                            3377 *      (FUNCTION #1496)
                                            3378 *
00000000                00000000 000000A8   3379 @AUTO#rd_tmpabuf_write0 DSECT
00000000                                    3380          DS    XL168
                                            3381 *
0000226E                00000000 00005E8C   3382 @CODE    CSECT
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3383 *
                                            3384 *
                                            3385 *
                                            3386 * ....... start of rd_tmpabuf_write_str0
0000226E                                    3387 @LNAME1497 DS  0H
0000226E 00000015                           3388          DC    X'00000015'
00002272 99846DA394978182                   3389          DC    C'rd_tmpabuf_write_str0'
00002287 00                                 3390          DC    X'00'
                                            3391 rd_tmpabuf_write_str0 DCCPRLG CINDEX=1497,BASER=12,FRAME=208,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1497
                                            3392          macro
                                            3393          dccextrn &m
                                            3394          gblc    &$dccext(1000)
                                            3395          gbla    &$dccexti
                                            3396          lcla    &i
                                            3397 &$dccext(&$dccexti+1) setc    '&m'
                                            3398 &i       seta    1
                                            3399 .loop    aif    (&i gt &$dccexti).around
                                            3400          aif    ('&$dccext(&i)' eq '&m').getout
                                            3401 &i       seta    &i+1
                                            3402          ago     .loop
                                            3403 .around  anop
                                            3404 &$dccexti seta &$dccexti+1
                                            3405          extrn  &m
                                            3406 .getout  anop
                                            3407          mend
00002288                                    3408+$eye0072    ds    0d                                                    02-DCCCA
00002288 C4C3C3                             3409+         dc cl3'DCC'                                                    02-DCCCA
0000228B 01                                 3410+         dc xl1'01' format one                                          02-DCCCA
0000228C 00000000                           3411+         dc a(0)                                                        02-DCCCA
00002290 00000000000022FA                   3412+         dc ad(@PER_1497)                                               02-DCCCA
00002298 00000000000000D0                   3413+         dc ad(208)                                                     02-DCCCA
000022A0 0000000000000000                   3414+         dc ad(0)                                                       02-DCCCA
000022A8 0000000000001000                   3415+         dc ad(4096)                                                    02-DCCCA
000022B0 20                                 3416+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000022B1 03                                 3417+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000022B2 03                                 3418+         dc al1(3)                                                      02-DCCCA
000022B3 08                                 3419+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000022B4 00                                 3420+         dc bl.8'00000000'                                              02-DCCCA
000022B5 000000                             3421+         dc al3(0)                                                      02-DCCCA
000022B8 000000000000226E                   3422+         dc ad(@LNAME1497)                                              02-DCCCA
000022C0                                    3423+         ds 0d                                                          02-DCCCA
000022C0 0000000000002288                   3424+         dc ad($eye0072)                                                02-DCCCA
000022C8 0000000000000000                   3425+         dc ad(0)                                                       02-DCCCA
000022D0                                    3426+         ds    0d                                                       01-DCCPR
000022D0                                    3427+rd_tmpabuf_write_str0 ds 0d                                             01-DCCPR
000022D0                                    3428+@REGION_1497_1 ds 0h                                                    01-DCCPR
000022D0 EBEC D008 0024          00000008   3429+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000022D6 E3E0 D088 0004          00000088   3430+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000022DC E3C0 D090 0004          00000090   3431+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000022E2 B904 002E                          3432+         lgr   2,14                copy addr of our savearea            01-DCCPR
000022E6 E3B0 C018 0004          00000018   3433+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000022EC A7EB 00D0               000000D0   3434+         aghi  14,208              increase by frame size               01-DCCPR
000022F0 E3E0 C020 0021          00000020   3435+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000022F6 4720 B020               00000020   3436+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000022FA                                    3437+@PER_1497 ds   0h                                                       01-DCCPR
000022FA EBDE 2080 0024          00000080   3438+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002300 E3C0 2090 0024          00000090   3439+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002306 B904 00D2                          3440+         lgr   13,2                set real frame pointer               01-DCCPR
0000230A B904 00CF                          3441+         lgr   12,15               set base reg                         01-DCCPR
                        000022D0            3442+         using @REGION_1497_1,12                                        01-DCCPR
                                            3443 * ******* End of Prologue
                                            3444 * *
                                            3445 * ***       return rd_tmpabuf_write0(func, line, tab, str, __strlen(st\
                                            3446 * r) + 1);
0000230E E3F0 1018 0004          00000018   3447          LG    15,24(0,1)
00002314 B904 002F                          3448          LGR   2,15
00002318 A709 0000               00000000   3449          LGHI  0,0
0000231C                                    3450 @@gen_label164 DS 0H
0000231C B25E 000F                          3451          SRST  0,15
00002320 4710 C04C               0000231C   3452          BC  1,@@gen_label164
00002324 B90B 0002                          3453          SLGR  0,2
00002328 A70B 0001               00000001   3454          AGHI  0,1
0000232C E3F0 1000 0004          00000000   3455          LG    15,0(0,1)   ; func
00002332 E3F0 D0A8 0024          000000A8   3456          STG   15,168(0,13)
00002338 E3F0 100C 0014          0000000C   3457          LGF   15,12(0,1)  ; line
0000233E E3F0 D0B0 0024          000000B0   3458          STG   15,176(0,13)
00002344 E3F0 1010 0004          00000010   3459          LG    15,16(0,1)  ; tab
0000234A E3F0 D0B8 0024          000000B8   3460          STG   15,184(0,13)
00002350 E3F0 1018 0004          00000018   3461          LG    15,24(0,1)  ; str
00002356 EBF0 D0C0 0024          000000C0   3462          STMG  15,0,192(13)
0000235C 4110 D0A8               000000A8   3463          LA    1,168(0,13)
00002360 E3F0 C0E8 0004          000023B8   3464          LG    15,@lit_1497_103 ; rd_tmpabuf_write0
00002366                                    3465 @@gen_label165 DS    0H
00002366 05EF                               3466          BALR  14,15
00002368                                    3467 @@gen_label166 DS    0H
                                            3468 * ***   }
                                            3469 * * **** Start of Epilogue
                                            3470          DCCEPIL
00002368                                    3471+         ds 0h                                                          01-DCCEP
                                            3472+* Epilog
00002368 D707 D088 D088 00000088 00000088   3473+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000236E E3D0 D080 0004          00000080   3474+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002374 E3C0 D090 0004          00000090   3475+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000237A E3B0 C018 0004          00000018   3476+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002380 E3C0 B010 0021          00000010   3477+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002386 E3E0 D008 0004          00000008   3478+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000238C EB1C D020 0004          00000020   3479+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002392 078E                               3480+         bcr 8,14                if same dsab, just return              01-DCCEP
00002394 E3F0 D010 0024          00000010   3481+         stg 15,16(0,13)         save return code                       01-DCCEP
0000239A E300 D018 0024          00000018   3482+         stg 0,24(0,13)          save more return code                  01-DCCEP
000023A0 E3F0 D090 0004          00000090   3483+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000023A6 E3F0 F018 0004          00000018   3484+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000023AC 47F0 F040               00000040   3485+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   74 
  Active Usings: @REGION_1497_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3486+* End of Epilog
                                            3487 * * **** End of Epilogue
000023B0                                    3488          DS    0D
000023B0 000000D0                           3489 @FRAMESIZE_1497 DC F'208'
000023B4 00000000
000023B8 0000000000002140                   3490 @lit_1497_103 DC AD(rd_tmpabuf_write0)
                                            3491          DROP  12
                                            3492 *
                                            3493 *   DSECT for automatic variables in "rd_tmpabuf_write_str0"
                                            3494 *      (FUNCTION #1497)
                                            3495 *
00000000                00000000 000000A8   3496 @AUTO#rd_tmpabuf_write_str0 DSECT
00000000                                    3497          DS    XL168
                                            3498 *
000023C0                00000000 00005E8C   3499 @CODE    CSECT
                                            3500 *
                                            3501 *
                                            3502 *
                                            3503 * ....... start of rd_avl_rdlock
000023C0                                    3504 @LNAME1607 DS  0H
000023C0 0000000D                           3505          DC    X'0000000D'
000023C4 99846D81A5936D99                   3506          DC    C'rd_avl_rdlock'
000023D1 00                                 3507          DC    X'00'
                                            3508 rd_avl_rdlock DCCPRLG CINDEX=1607,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME1607
                                            3509          macro
                                            3510          dccextrn &m
                                            3511          gblc    &$dccext(1000)
                                            3512          gbla    &$dccexti
                                            3513          lcla    &i
                                            3514 &$dccext(&$dccexti+1) setc    '&m'
                                            3515 &i       seta    1
                                            3516 .loop    aif    (&i gt &$dccexti).around
                                            3517          aif    ('&$dccext(&i)' eq '&m').getout
                                            3518 &i       seta    &i+1
                                            3519          ago     .loop
                                            3520 .around  anop
                                            3521 &$dccexti seta &$dccexti+1
                                            3522          extrn  &m
                                            3523 .getout  anop
                                            3524          mend
000023D8                                    3525+$eye0075    ds    0d                                                    02-DCCCA
000023D8 C4C3C3                             3526+         dc cl3'DCC'                                                    02-DCCCA
000023DB 01                                 3527+         dc xl1'01' format one                                          02-DCCCA
000023DC 00000000                           3528+         dc a(0)                                                        02-DCCCA
000023E0 000000000000244A                   3529+         dc ad(@PER_1607)                                               02-DCCCA
000023E8 00000000000000B0                   3530+         dc ad(176)                                                     02-DCCCA
000023F0 0000000000000000                   3531+         dc ad(0)                                                       02-DCCCA
000023F8 0000000000001000                   3532+         dc ad(4096)                                                    02-DCCCA
00002400 20                                 3533+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002401 03                                 3534+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002402 03                                 3535+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002403 08                                 3536+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002404 00                                 3537+         dc bl.8'00000000'                                              02-DCCCA
00002405 000000                             3538+         dc al3(0)                                                      02-DCCCA
00002408 00000000000023C0                   3539+         dc ad(@LNAME1607)                                              02-DCCCA
00002410                                    3540+         ds 0d                                                          02-DCCCA
00002410 00000000000023D8                   3541+         dc ad($eye0075)                                                02-DCCCA
00002418 0000000000000000                   3542+         dc ad(0)                                                       02-DCCCA
00002420                                    3543+         ds    0d                                                       01-DCCPR
00002420                                    3544+rd_avl_rdlock ds 0d                                                     01-DCCPR
00002420                                    3545+@REGION_1607_1 ds 0h                                                    01-DCCPR
00002420 EBEC D008 0024          00000008   3546+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002426 E3E0 D088 0004          00000088   3547+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000242C E3C0 D090 0004          00000090   3548+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002432 B904 002E                          3549+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002436 E3B0 C018 0004          00000018   3550+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000243C A7EB 00B0               000000B0   3551+         aghi  14,176              increase by frame size               01-DCCPR
00002440 E3E0 C020 0021          00000020   3552+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002446 4720 B020               00000020   3553+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000244A                                    3554+@PER_1607 ds   0h                                                       01-DCCPR
0000244A EBDE 2080 0024          00000080   3555+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002450 E3C0 2090 0024          00000090   3556+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002456 B904 00D2                          3557+         lgr   13,2                set real frame pointer               01-DCCPR
0000245A B904 00CF                          3558+         lgr   12,15               set base reg                         01-DCCPR
                        00002420            3559+         using @REGION_1607_1,12                                        01-DCCPR
                                            3560 * ******* End of Prologue
                                            3561 * *
                                            3562 * ***           if (ravl->ravl_flags & 0x1)
0000245E E3F0 1000 0004          00000000   3563          LG    15,0(0,1)   ; ravl
00002464 9101 F013      00000013 00000001   3564          TM    19(15),1
00002468 4780 C062               00002482   3565          BZ    @ret_lab_1607
                                            3566 * ***                   rwlock_rdlock(&ravl->ravl_rwlock);
0000246C 41F0 F018               00000018   3567          LA    15,24(0,15)
00002470 E3F0 D0A8 0024          000000A8   3568          STG   15,168(0,13)
00002476 4110 D0A8               000000A8   3569          LA    1,168(0,13)
0000247A E3F0 C0B8 0004          000024D8   3570          LG    15,@lit_1607_105 ; rwlock_rdlock
00002480                                    3571 @@gen_label168 DS    0H
00002480 05EF                               3572          BALR  14,15
00002482                                    3573 @@gen_label169 DS    0H
00002482                                    3574 @L545    DS    0H
                                            3575 * ***   }
00002482                                    3576 @ret_lab_1607 DS 0H
                                            3577 * * **** Start of Epilogue
                                            3578          DCCEPIL
00002482                                    3579+         ds 0h                                                          01-DCCEP
                                            3580+* Epilog
00002482 D707 D088 D088 00000088 00000088   3581+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002488 E3D0 D080 0004          00000080   3582+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000248E E3C0 D090 0004          00000090   3583+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002494 E3B0 C018 0004          00000018   3584+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000249A E3C0 B010 0021          00000010   3585+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000024A0 E3E0 D008 0004          00000008   3586+         lg  14,8(0,13)          load up return address                 01-DCCEP
000024A6 EB1C D020 0004          00000020   3587+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   76 
  Active Usings: @REGION_1607_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000024AC 078E                               3588+         bcr 8,14                if same dsab, just return              01-DCCEP
000024AE E3F0 D010 0024          00000010   3589+         stg 15,16(0,13)         save return code                       01-DCCEP
000024B4 E300 D018 0024          00000018   3590+         stg 0,24(0,13)          save more return code                  01-DCCEP
000024BA E3F0 D090 0004          00000090   3591+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000024C0 E3F0 F018 0004          00000018   3592+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000024C6 47F0 F040               00000040   3593+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3594+* End of Epilog
                                            3595 * * **** End of Epilogue
000024D0                                    3596          DS    0D
000024D0 000000B0                           3597 @FRAMESIZE_1607 DC F'176'
000024D4 00000000
000024D8 0000000000000000                   3598 @lit_1607_105 DC AD(rwlock_rdlock)
                                            3599          DROP  12
                                            3600 *
                                            3601 *   DSECT for automatic variables in "rd_avl_rdlock"
                                            3602 *      (FUNCTION #1607)
                                            3603 *
00000000                00000000 000000A8   3604 @AUTO#rd_avl_rdlock DSECT
00000000                                    3605          DS    XL168
                                            3606 *
000024E0                00000000 00005E8C   3607 @CODE    CSECT
                                            3608 *
                                            3609 *
                                            3610 *
                                            3611 * ....... start of rd_avl_wrlock
000024E0                                    3612 @LNAME1608 DS  0H
000024E0 0000000D                           3613          DC    X'0000000D'
000024E4 99846D81A5936DA6                   3614          DC    C'rd_avl_wrlock'
000024F1 00                                 3615          DC    X'00'
                                            3616 rd_avl_wrlock DCCPRLG CINDEX=1608,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME1608
                                            3617          macro
                                            3618          dccextrn &m
                                            3619          gblc    &$dccext(1000)
                                            3620          gbla    &$dccexti
                                            3621          lcla    &i
                                            3622 &$dccext(&$dccexti+1) setc    '&m'
                                            3623 &i       seta    1
                                            3624 .loop    aif    (&i gt &$dccexti).around
                                            3625          aif    ('&$dccext(&i)' eq '&m').getout
                                            3626 &i       seta    &i+1
                                            3627          ago     .loop
                                            3628 .around  anop
                                            3629 &$dccexti seta &$dccexti+1
                                            3630          extrn  &m
                                            3631 .getout  anop
                                            3632          mend
000024F8                                    3633+$eye0078    ds    0d                                                    02-DCCCA
000024F8 C4C3C3                             3634+         dc cl3'DCC'                                                    02-DCCCA
000024FB 01                                 3635+         dc xl1'01' format one                                          02-DCCCA
000024FC 00000000                           3636+         dc a(0)                                                        02-DCCCA
00002500 000000000000256A                   3637+         dc ad(@PER_1608)                                               02-DCCCA
                                                                                                                           Page   77 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002508 00000000000000B0                   3638+         dc ad(176)                                                     02-DCCCA
00002510 0000000000000000                   3639+         dc ad(0)                                                       02-DCCCA
00002518 0000000000001000                   3640+         dc ad(4096)                                                    02-DCCCA
00002520 20                                 3641+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002521 03                                 3642+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002522 03                                 3643+         dc al1(3)                                                      02-DCCCA
00002523 08                                 3644+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002524 00                                 3645+         dc bl.8'00000000'                                              02-DCCCA
00002525 000000                             3646+         dc al3(0)                                                      02-DCCCA
00002528 00000000000024E0                   3647+         dc ad(@LNAME1608)                                              02-DCCCA
00002530                                    3648+         ds 0d                                                          02-DCCCA
00002530 00000000000024F8                   3649+         dc ad($eye0078)                                                02-DCCCA
00002538 0000000000000000                   3650+         dc ad(0)                                                       02-DCCCA
00002540                                    3651+         ds    0d                                                       01-DCCPR
00002540                                    3652+rd_avl_wrlock ds 0d                                                     01-DCCPR
00002540                                    3653+@REGION_1608_1 ds 0h                                                    01-DCCPR
00002540 EBEC D008 0024          00000008   3654+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002546 E3E0 D088 0004          00000088   3655+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000254C E3C0 D090 0004          00000090   3656+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002552 B904 002E                          3657+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002556 E3B0 C018 0004          00000018   3658+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000255C A7EB 00B0               000000B0   3659+         aghi  14,176              increase by frame size               01-DCCPR
00002560 E3E0 C020 0021          00000020   3660+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002566 4720 B020               00000020   3661+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000256A                                    3662+@PER_1608 ds   0h                                                       01-DCCPR
0000256A EBDE 2080 0024          00000080   3663+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002570 E3C0 2090 0024          00000090   3664+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002576 B904 00D2                          3665+         lgr   13,2                set real frame pointer               01-DCCPR
0000257A B904 00CF                          3666+         lgr   12,15               set base reg                         01-DCCPR
                        00002540            3667+         using @REGION_1608_1,12                                        01-DCCPR
                                            3668 * ******* End of Prologue
                                            3669 * *
                                            3670 * ***           if (ravl->ravl_flags & 0x1)
0000257E E3F0 1000 0004          00000000   3671          LG    15,0(0,1)   ; ravl
00002584 9101 F013      00000013 00000001   3672          TM    19(15),1
00002588 4780 C062               000025A2   3673          BZ    @ret_lab_1608
                                            3674 * ***                   rwlock_wrlock(&ravl->ravl_rwlock);
0000258C 41F0 F018               00000018   3675          LA    15,24(0,15)
00002590 E3F0 D0A8 0024          000000A8   3676          STG   15,168(0,13)
00002596 4110 D0A8               000000A8   3677          LA    1,168(0,13)
0000259A E3F0 C0B8 0004          000025F8   3678          LG    15,@lit_1608_107 ; rwlock_wrlock
000025A0                                    3679 @@gen_label171 DS    0H
000025A0 05EF                               3680          BALR  14,15
000025A2                                    3681 @@gen_label172 DS    0H
000025A2                                    3682 @L546    DS    0H
                                            3683 * ***   }
000025A2                                    3684 @ret_lab_1608 DS 0H
                                            3685 * * **** Start of Epilogue
                                            3686          DCCEPIL
000025A2                                    3687+         ds 0h                                                          01-DCCEP
                                            3688+* Epilog
000025A2 D707 D088 D088 00000088 00000088   3689+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page   78 
  Active Usings: @REGION_1608_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000025A8 E3D0 D080 0004          00000080   3690+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000025AE E3C0 D090 0004          00000090   3691+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000025B4 E3B0 C018 0004          00000018   3692+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000025BA E3C0 B010 0021          00000010   3693+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000025C0 E3E0 D008 0004          00000008   3694+         lg  14,8(0,13)          load up return address                 01-DCCEP
000025C6 EB1C D020 0004          00000020   3695+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000025CC 078E                               3696+         bcr 8,14                if same dsab, just return              01-DCCEP
000025CE E3F0 D010 0024          00000010   3697+         stg 15,16(0,13)         save return code                       01-DCCEP
000025D4 E300 D018 0024          00000018   3698+         stg 0,24(0,13)          save more return code                  01-DCCEP
000025DA E3F0 D090 0004          00000090   3699+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000025E0 E3F0 F018 0004          00000018   3700+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000025E6 47F0 F040               00000040   3701+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3702+* End of Epilog
                                            3703 * * **** End of Epilogue
000025F0                                    3704          DS    0D
000025F0 000000B0                           3705 @FRAMESIZE_1608 DC F'176'
000025F4 00000000
000025F8 0000000000000000                   3706 @lit_1608_107 DC AD(rwlock_wrlock)
                                            3707          DROP  12
                                            3708 *
                                            3709 *   DSECT for automatic variables in "rd_avl_wrlock"
                                            3710 *      (FUNCTION #1608)
                                            3711 *
00000000                00000000 000000A8   3712 @AUTO#rd_avl_wrlock DSECT
00000000                                    3713          DS    XL168
                                            3714 *
00002600                00000000 00005E8C   3715 @CODE    CSECT
                                            3716 *
                                            3717 *
                                            3718 *
                                            3719 * ....... start of rd_avl_rdunlock
00002600                                    3720 @LNAME1609 DS  0H
00002600 0000000F                           3721          DC    X'0000000F'
00002604 99846D81A5936D99                   3722          DC    C'rd_avl_rdunlock'
00002613 00                                 3723          DC    X'00'
                                            3724 rd_avl_rdunlock DCCPRLG CINDEX=1609,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1609
                                            3725          macro
                                            3726          dccextrn &m
                                            3727          gblc    &$dccext(1000)
                                            3728          gbla    &$dccexti
                                            3729          lcla    &i
                                            3730 &$dccext(&$dccexti+1) setc    '&m'
                                            3731 &i       seta    1
                                            3732 .loop    aif    (&i gt &$dccexti).around
                                            3733          aif    ('&$dccext(&i)' eq '&m').getout
                                            3734 &i       seta    &i+1
                                            3735          ago     .loop
                                            3736 .around  anop
                                            3737 &$dccexti seta &$dccexti+1
                                            3738          extrn  &m
                                            3739 .getout  anop
                                                                                                                           Page   79 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3740          mend
00002618                                    3741+$eye0081    ds    0d                                                    02-DCCCA
00002618 C4C3C3                             3742+         dc cl3'DCC'                                                    02-DCCCA
0000261B 01                                 3743+         dc xl1'01' format one                                          02-DCCCA
0000261C 00000000                           3744+         dc a(0)                                                        02-DCCCA
00002620 000000000000268A                   3745+         dc ad(@PER_1609)                                               02-DCCCA
00002628 00000000000000B0                   3746+         dc ad(176)                                                     02-DCCCA
00002630 0000000000000000                   3747+         dc ad(0)                                                       02-DCCCA
00002638 0000000000001000                   3748+         dc ad(4096)                                                    02-DCCCA
00002640 20                                 3749+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002641 03                                 3750+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002642 03                                 3751+         dc al1(3)                                                      02-DCCCA
00002643 08                                 3752+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002644 00                                 3753+         dc bl.8'00000000'                                              02-DCCCA
00002645 000000                             3754+         dc al3(0)                                                      02-DCCCA
00002648 0000000000002600                   3755+         dc ad(@LNAME1609)                                              02-DCCCA
00002650                                    3756+         ds 0d                                                          02-DCCCA
00002650 0000000000002618                   3757+         dc ad($eye0081)                                                02-DCCCA
00002658 0000000000000000                   3758+         dc ad(0)                                                       02-DCCCA
00002660                                    3759+         ds    0d                                                       01-DCCPR
00002660                                    3760+rd_avl_rdunlock ds 0d                                                   01-DCCPR
00002660                                    3761+@REGION_1609_1 ds 0h                                                    01-DCCPR
00002660 EBEC D008 0024          00000008   3762+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002666 E3E0 D088 0004          00000088   3763+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000266C E3C0 D090 0004          00000090   3764+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002672 B904 002E                          3765+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002676 E3B0 C018 0004          00000018   3766+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000267C A7EB 00B0               000000B0   3767+         aghi  14,176              increase by frame size               01-DCCPR
00002680 E3E0 C020 0021          00000020   3768+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002686 4720 B020               00000020   3769+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000268A                                    3770+@PER_1609 ds   0h                                                       01-DCCPR
0000268A EBDE 2080 0024          00000080   3771+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002690 E3C0 2090 0024          00000090   3772+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002696 B904 00D2                          3773+         lgr   13,2                set real frame pointer               01-DCCPR
0000269A B904 00CF                          3774+         lgr   12,15               set base reg                         01-DCCPR
                        00002660            3775+         using @REGION_1609_1,12                                        01-DCCPR
                                            3776 * ******* End of Prologue
                                            3777 * *
                                            3778 * ***           if (ravl->ravl_flags & 0x1)
0000269E E3F0 1000 0004          00000000   3779          LG    15,0(0,1)   ; ravl
000026A4 9101 F013      00000013 00000001   3780          TM    19(15),1
000026A8 4780 C062               000026C2   3781          BZ    @ret_lab_1609
                                            3782 * ***                   rwlock_rdunlock(&ravl->ravl_rwlock);
000026AC 41F0 F018               00000018   3783          LA    15,24(0,15)
000026B0 E3F0 D0A8 0024          000000A8   3784          STG   15,168(0,13)
000026B6 4110 D0A8               000000A8   3785          LA    1,168(0,13)
000026BA E3F0 C0B8 0004          00002718   3786          LG    15,@lit_1609_109 ; rwlock_rdunlock
000026C0                                    3787 @@gen_label174 DS    0H
000026C0 05EF                               3788          BALR  14,15
000026C2                                    3789 @@gen_label175 DS    0H
000026C2                                    3790 @L547    DS    0H
                                            3791 * ***   }
                                                                                                                           Page   80 
  Active Usings: @REGION_1609_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000026C2                                    3792 @ret_lab_1609 DS 0H
                                            3793 * * **** Start of Epilogue
                                            3794          DCCEPIL
000026C2                                    3795+         ds 0h                                                          01-DCCEP
                                            3796+* Epilog
000026C2 D707 D088 D088 00000088 00000088   3797+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000026C8 E3D0 D080 0004          00000080   3798+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000026CE E3C0 D090 0004          00000090   3799+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000026D4 E3B0 C018 0004          00000018   3800+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000026DA E3C0 B010 0021          00000010   3801+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000026E0 E3E0 D008 0004          00000008   3802+         lg  14,8(0,13)          load up return address                 01-DCCEP
000026E6 EB1C D020 0004          00000020   3803+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000026EC 078E                               3804+         bcr 8,14                if same dsab, just return              01-DCCEP
000026EE E3F0 D010 0024          00000010   3805+         stg 15,16(0,13)         save return code                       01-DCCEP
000026F4 E300 D018 0024          00000018   3806+         stg 0,24(0,13)          save more return code                  01-DCCEP
000026FA E3F0 D090 0004          00000090   3807+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002700 E3F0 F018 0004          00000018   3808+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002706 47F0 F040               00000040   3809+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3810+* End of Epilog
                                            3811 * * **** End of Epilogue
00002710                                    3812          DS    0D
00002710 000000B0                           3813 @FRAMESIZE_1609 DC F'176'
00002714 00000000
00002718 0000000000000000                   3814 @lit_1609_109 DC AD(rwlock_rdunlock)
                                            3815          DROP  12
                                            3816 *
                                            3817 *   DSECT for automatic variables in "rd_avl_rdunlock"
                                            3818 *      (FUNCTION #1609)
                                            3819 *
00000000                00000000 000000A8   3820 @AUTO#rd_avl_rdunlock DSECT
00000000                                    3821          DS    XL168
                                            3822 *
00002720                00000000 00005E8C   3823 @CODE    CSECT
                                            3824 *
                                            3825 *
                                            3826 *
                                            3827 * ....... start of rd_avl_wrunlock
00002720                                    3828 @LNAME1610 DS  0H
00002720 0000000F                           3829          DC    X'0000000F'
00002724 99846D81A5936DA6                   3830          DC    C'rd_avl_wrunlock'
00002733 00                                 3831          DC    X'00'
                                            3832 rd_avl_wrunlock DCCPRLG CINDEX=1610,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1610
                                            3833          macro
                                            3834          dccextrn &m
                                            3835          gblc    &$dccext(1000)
                                            3836          gbla    &$dccexti
                                            3837          lcla    &i
                                            3838 &$dccext(&$dccexti+1) setc    '&m'
                                            3839 &i       seta    1
                                            3840 .loop    aif    (&i gt &$dccexti).around
                                            3841          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   81 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3842 &i       seta    &i+1
                                            3843          ago     .loop
                                            3844 .around  anop
                                            3845 &$dccexti seta &$dccexti+1
                                            3846          extrn  &m
                                            3847 .getout  anop
                                            3848          mend
00002738                                    3849+$eye0084    ds    0d                                                    02-DCCCA
00002738 C4C3C3                             3850+         dc cl3'DCC'                                                    02-DCCCA
0000273B 01                                 3851+         dc xl1'01' format one                                          02-DCCCA
0000273C 00000000                           3852+         dc a(0)                                                        02-DCCCA
00002740 00000000000027AA                   3853+         dc ad(@PER_1610)                                               02-DCCCA
00002748 00000000000000B0                   3854+         dc ad(176)                                                     02-DCCCA
00002750 0000000000000000                   3855+         dc ad(0)                                                       02-DCCCA
00002758 0000000000001000                   3856+         dc ad(4096)                                                    02-DCCCA
00002760 20                                 3857+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002761 03                                 3858+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002762 03                                 3859+         dc al1(3)                                                      02-DCCCA
00002763 08                                 3860+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002764 00                                 3861+         dc bl.8'00000000'                                              02-DCCCA
00002765 000000                             3862+         dc al3(0)                                                      02-DCCCA
00002768 0000000000002720                   3863+         dc ad(@LNAME1610)                                              02-DCCCA
00002770                                    3864+         ds 0d                                                          02-DCCCA
00002770 0000000000002738                   3865+         dc ad($eye0084)                                                02-DCCCA
00002778 0000000000000000                   3866+         dc ad(0)                                                       02-DCCCA
00002780                                    3867+         ds    0d                                                       01-DCCPR
00002780                                    3868+rd_avl_wrunlock ds 0d                                                   01-DCCPR
00002780                                    3869+@REGION_1610_1 ds 0h                                                    01-DCCPR
00002780 EBEC D008 0024          00000008   3870+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002786 E3E0 D088 0004          00000088   3871+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000278C E3C0 D090 0004          00000090   3872+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002792 B904 002E                          3873+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002796 E3B0 C018 0004          00000018   3874+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000279C A7EB 00B0               000000B0   3875+         aghi  14,176              increase by frame size               01-DCCPR
000027A0 E3E0 C020 0021          00000020   3876+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000027A6 4720 B020               00000020   3877+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000027AA                                    3878+@PER_1610 ds   0h                                                       01-DCCPR
000027AA EBDE 2080 0024          00000080   3879+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000027B0 E3C0 2090 0024          00000090   3880+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000027B6 B904 00D2                          3881+         lgr   13,2                set real frame pointer               01-DCCPR
000027BA B904 00CF                          3882+         lgr   12,15               set base reg                         01-DCCPR
                        00002780            3883+         using @REGION_1610_1,12                                        01-DCCPR
                                            3884 * ******* End of Prologue
                                            3885 * *
                                            3886 * ***           if (ravl->ravl_flags & 0x1)
000027BE E3F0 1000 0004          00000000   3887          LG    15,0(0,1)   ; ravl
000027C4 9101 F013      00000013 00000001   3888          TM    19(15),1
000027C8 4780 C062               000027E2   3889          BZ    @ret_lab_1610
                                            3890 * ***                   rwlock_wrunlock(&ravl->ravl_rwlock);
000027CC 41F0 F018               00000018   3891          LA    15,24(0,15)
000027D0 E3F0 D0A8 0024          000000A8   3892          STG   15,168(0,13)
000027D6 4110 D0A8               000000A8   3893          LA    1,168(0,13)
                                                                                                                           Page   82 
  Active Usings: @REGION_1610_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000027DA E3F0 C0B8 0004          00002838   3894          LG    15,@lit_1610_111 ; rwlock_wrunlock
000027E0                                    3895 @@gen_label177 DS    0H
000027E0 05EF                               3896          BALR  14,15
000027E2                                    3897 @@gen_label178 DS    0H
000027E2                                    3898 @L548    DS    0H
                                            3899 * ***   }
000027E2                                    3900 @ret_lab_1610 DS 0H
                                            3901 * * **** Start of Epilogue
                                            3902          DCCEPIL
000027E2                                    3903+         ds 0h                                                          01-DCCEP
                                            3904+* Epilog
000027E2 D707 D088 D088 00000088 00000088   3905+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000027E8 E3D0 D080 0004          00000080   3906+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000027EE E3C0 D090 0004          00000090   3907+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000027F4 E3B0 C018 0004          00000018   3908+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000027FA E3C0 B010 0021          00000010   3909+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002800 E3E0 D008 0004          00000008   3910+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002806 EB1C D020 0004          00000020   3911+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000280C 078E                               3912+         bcr 8,14                if same dsab, just return              01-DCCEP
0000280E E3F0 D010 0024          00000010   3913+         stg 15,16(0,13)         save return code                       01-DCCEP
00002814 E300 D018 0024          00000018   3914+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000281A E3F0 D090 0004          00000090   3915+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002820 E3F0 F018 0004          00000018   3916+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002826 47F0 F040               00000040   3917+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3918+* End of Epilog
                                            3919 * * **** End of Epilogue
00002830                                    3920          DS    0D
00002830 000000B0                           3921 @FRAMESIZE_1610 DC F'176'
00002834 00000000
00002838 0000000000000000                   3922 @lit_1610_111 DC AD(rwlock_wrunlock)
                                            3923          DROP  12
                                            3924 *
                                            3925 *   DSECT for automatic variables in "rd_avl_wrunlock"
                                            3926 *      (FUNCTION #1610)
                                            3927 *
00000000                00000000 000000A8   3928 @AUTO#rd_avl_wrunlock DSECT
00000000                                    3929          DS    XL168
                                            3930 *
00002840                00000000 00005E8C   3931 @CODE    CSECT
                                            3932 *
                                            3933 *
                                            3934 *
                                            3935 * ....... start of rd_avl_insert
00002840                                    3936 @LNAME1612 DS  0H
00002840 0000000D                           3937          DC    X'0000000D'
00002844 99846D81A5936D89                   3938          DC    C'rd_avl_insert'
00002851 00                                 3939          DC    X'00'
                                            3940 rd_avl_insert DCCPRLG CINDEX=1612,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME1612
                                            3941          macro
                                            3942          dccextrn &m
                                            3943          gblc    &$dccext(1000)
                                                                                                                           Page   83 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3944          gbla    &$dccexti
                                            3945          lcla    &i
                                            3946 &$dccext(&$dccexti+1) setc    '&m'
                                            3947 &i       seta    1
                                            3948 .loop    aif    (&i gt &$dccexti).around
                                            3949          aif    ('&$dccext(&i)' eq '&m').getout
                                            3950 &i       seta    &i+1
                                            3951          ago     .loop
                                            3952 .around  anop
                                            3953 &$dccexti seta &$dccexti+1
                                            3954          extrn  &m
                                            3955 .getout  anop
                                            3956          mend
00002858                                    3957+$eye0087    ds    0d                                                    02-DCCCA
00002858 C4C3C3                             3958+         dc cl3'DCC'                                                    02-DCCCA
0000285B 01                                 3959+         dc xl1'01' format one                                          02-DCCCA
0000285C 00000000                           3960+         dc a(0)                                                        02-DCCCA
00002860 00000000000028CA                   3961+         dc ad(@PER_1612)                                               02-DCCCA
00002868 00000000000000D0                   3962+         dc ad(208)                                                     02-DCCCA
00002870 0000000000000000                   3963+         dc ad(0)                                                       02-DCCCA
00002878 0000000000001000                   3964+         dc ad(4096)                                                    02-DCCCA
00002880 20                                 3965+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002881 03                                 3966+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002882 03                                 3967+         dc al1(3)                                                      02-DCCCA
00002883 08                                 3968+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002884 00                                 3969+         dc bl.8'00000000'                                              02-DCCCA
00002885 000000                             3970+         dc al3(0)                                                      02-DCCCA
00002888 0000000000002840                   3971+         dc ad(@LNAME1612)                                              02-DCCCA
00002890                                    3972+         ds 0d                                                          02-DCCCA
00002890 0000000000002858                   3973+         dc ad($eye0087)                                                02-DCCCA
00002898 0000000000000000                   3974+         dc ad(0)                                                       02-DCCCA
000028A0                                    3975+         ds    0d                                                       01-DCCPR
000028A0                                    3976+rd_avl_insert ds 0d                                                     01-DCCPR
000028A0                                    3977+@REGION_1612_1 ds 0h                                                    01-DCCPR
000028A0 EBEC D008 0024          00000008   3978+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000028A6 E3E0 D088 0004          00000088   3979+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000028AC E3C0 D090 0004          00000090   3980+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000028B2 B904 002E                          3981+         lgr   2,14                copy addr of our savearea            01-DCCPR
000028B6 E3B0 C018 0004          00000018   3982+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000028BC A7EB 00D0               000000D0   3983+         aghi  14,208              increase by frame size               01-DCCPR
000028C0 E3E0 C020 0021          00000020   3984+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000028C6 4720 B020               00000020   3985+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000028CA                                    3986+@PER_1612 ds   0h                                                       01-DCCPR
000028CA EBDE 2080 0024          00000080   3987+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000028D0 E3C0 2090 0024          00000090   3988+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000028D6 B904 00D2                          3989+         lgr   13,2                set real frame pointer               01-DCCPR
000028DA B904 00CF                          3990+         lgr   12,15               set base reg                         01-DCCPR
                        000028A0            3991+         using @REGION_1612_1,12                                        01-DCCPR
                                            3992 * ******* End of Prologue
                                            3993 * *
                                            3994 * ***           rd_avl_node_t *existing = ((void *)0);
000028DE E320 1000 0004          00000000   3995          LG    2,0(0,1)    ; ravl
                                                                                                                           Page   84 
  Active Usings: @REGION_1612_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000028E4 E330 1010 0004          00000010   3996          LG    3,16(0,1)   ; ran
000028EA A749 0000               00000000   3997          LGHI  4,0         ; 0
000028EE E340 D0A8 0024          000000A8   3998          STG   4,168(0,13) ; existing
                                            3999 * ***
                                            4000 * ***           __memset(ran,0,sizeof(*ran));
                                            4001 * setting 32 bytes to 0x00
000028F4 D71F 3000 3000 00000000 00000000   4002          XC    0(32,3),0(3)
                                            4003 * ***           ran->ran_elm = elm;
000028FA E3F0 1008 0004          00000008   4004          LG    15,8(0,1)   ; elm
00002900 E3F0 3018 0024          00000018   4005          STG   15,24(0,3)  ; offset of ran_elm in rd_avl_node_s
                                            4006 * ***
                                            4007 * ***           rd_avl_wrlock(ravl);
00002906 E320 D0B0 0024          000000B0   4008          STG   2,176(0,13)
0000290C 4110 D0B0               000000B0   4009          LA    1,176(0,13)
00002910 E3F0 C0E0 0004          00002980   4010          LG    15,@lit_1612_114 ; rd_avl_wrlock
00002916                                    4011 @@gen_label179 DS    0H
00002916 05EF                               4012          BALR  14,15
00002918                                    4013 @@gen_label180 DS    0H
                                            4014 * ***           ravl->ravl_root = rd_avl_insert_node(ravl, ravl->ravl_\
                                            4015 * root,
                                            4016 * ***                                                ran, &existing);
00002918 E320 D0B0 0024          000000B0   4017          STG   2,176(0,13)
0000291E E3F0 2000 0004          00000000   4018          LG    15,0(0,2)
00002924 E3F0 D0B8 0024          000000B8   4019          STG   15,184(0,13)
0000292A E330 D0C0 0024          000000C0   4020          STG   3,192(0,13)
00002930 41F0 D0A8               000000A8   4021          LA    15,168(0,13)
00002934 E3F0 D0C8 0024          000000C8   4022          STG   15,200(0,13)
0000293A 4110 D0B0               000000B0   4023          LA    1,176(0,13)
0000293E E3F0 C0E8 0004          00002988   4024          LG    15,@lit_1612_115 ; rd_avl_insert_node
00002944                                    4025 @@gen_label181 DS    0H
00002944 05EF                               4026          BALR  14,15
00002946                                    4027 @@gen_label182 DS    0H
00002946 E3F0 2000 0024          00000000   4028          STG   15,0(0,2)
                                            4029 * ***           rd_avl_wrunlock(ravl);
0000294C E320 D0B0 0024          000000B0   4030          STG   2,176(0,13)
00002952 4110 D0B0               000000B0   4031          LA    1,176(0,13)
00002956 E3F0 C0F0 0004          00002990   4032          LG    15,@lit_1612_116 ; rd_avl_wrunlock
0000295C                                    4033 @@gen_label183 DS    0H
0000295C 05EF                               4034          BALR  14,15
0000295E                                    4035 @@gen_label184 DS    0H
                                            4036 * ***
                                            4037 * ***           return existing ? existing->ran_elm : ((void *)0);
0000295E E3F0 D0A8 0004          000000A8   4038          LG    15,168(0,13) ; existing
00002964 B902 001F                          4039          LTGR  1,15
00002968 4780 C0F8               00002998   4040          BZ    @L549
0000296C E340 F018 0004          00000018   4041          LG    4,24(0,15)  ; offset of ran_elm in rd_avl_node_s
00002972 47F0 C0F8               00002998   4042          B     @L550
00002978                                    4043          DS    0D
00002978 000000D0                           4044 @FRAMESIZE_1612 DC F'208'
0000297C 00000000
00002980 0000000000002540                   4045 @lit_1612_114 DC AD(rd_avl_wrlock)
00002988 0000000000000000                   4046 @lit_1612_115 DC AD(rd_avl_insert_node)
                                                                                                                           Page   85 
  Active Usings: @REGION_1612_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002990 0000000000002780                   4047 @lit_1612_116 DC AD(rd_avl_wrunlock)
00002998                                    4048 @L549    DS    0H
00002998                                    4049 @L550    DS    0H
00002998 B904 00F4                          4050          LGR   15,4
                                            4051 * ***   }
                                            4052 * * **** Start of Epilogue
                                            4053          DCCEPIL
0000299C                                    4054+         ds 0h                                                          01-DCCEP
                                            4055+* Epilog
0000299C D707 D088 D088 00000088 00000088   4056+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000029A2 E3D0 D080 0004          00000080   4057+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000029A8 E3C0 D090 0004          00000090   4058+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000029AE E3B0 C018 0004          00000018   4059+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000029B4 E3C0 B010 0021          00000010   4060+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000029BA E3E0 D008 0004          00000008   4061+         lg  14,8(0,13)          load up return address                 01-DCCEP
000029C0 EB1C D020 0004          00000020   4062+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000029C6 078E                               4063+         bcr 8,14                if same dsab, just return              01-DCCEP
000029C8 E3F0 D010 0024          00000010   4064+         stg 15,16(0,13)         save return code                       01-DCCEP
000029CE E300 D018 0024          00000018   4065+         stg 0,24(0,13)          save more return code                  01-DCCEP
000029D4 E3F0 D090 0004          00000090   4066+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000029DA E3F0 F018 0004          00000018   4067+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000029E0 47F0 F040               00000040   4068+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4069+* End of Epilog
                                            4070 * * **** End of Epilogue
                                            4071          DROP  12
                                            4072 *
                                            4073 *   DSECT for automatic variables in "rd_avl_insert"
                                            4074 *      (FUNCTION #1612)
                                            4075 *
00000000                00000000 000000A8   4076 @AUTO#rd_avl_insert DSECT
00000000                                    4077          DS    XL168
                                            4078 *
000029E4                00000000 00005E8C   4079 @CODE    CSECT
                                            4080 *
                                            4081 *
                                            4082 *
                                            4083 * ....... start of rd_avl_remove_elm
000029E4                                    4084 @LNAME1614 DS  0H
000029E4 00000011                           4085          DC    X'00000011'
000029E8 99846D81A5936D99                   4086          DC    C'rd_avl_remove_elm'
000029F9 00                                 4087          DC    X'00'
                                            4088 rd_avl_remove_elm DCCPRLG CINDEX=1614,BASER=12,FRAME=192,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1614
                                            4089          macro
                                            4090          dccextrn &m
                                            4091          gblc    &$dccext(1000)
                                            4092          gbla    &$dccexti
                                            4093          lcla    &i
                                            4094 &$dccext(&$dccexti+1) setc    '&m'
                                            4095 &i       seta    1
                                            4096 .loop    aif    (&i gt &$dccexti).around
                                            4097          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4098 &i       seta    &i+1
                                            4099          ago     .loop
                                            4100 .around  anop
                                            4101 &$dccexti seta &$dccexti+1
                                            4102          extrn  &m
                                            4103 .getout  anop
                                            4104          mend
00002A00                                    4105+$eye0090    ds    0d                                                    02-DCCCA
00002A00 C4C3C3                             4106+         dc cl3'DCC'                                                    02-DCCCA
00002A03 01                                 4107+         dc xl1'01' format one                                          02-DCCCA
00002A04 00000000                           4108+         dc a(0)                                                        02-DCCCA
00002A08 0000000000002A72                   4109+         dc ad(@PER_1614)                                               02-DCCCA
00002A10 00000000000000C0                   4110+         dc ad(192)                                                     02-DCCCA
00002A18 0000000000000000                   4111+         dc ad(0)                                                       02-DCCCA
00002A20 0000000000001000                   4112+         dc ad(4096)                                                    02-DCCCA
00002A28 20                                 4113+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002A29 03                                 4114+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002A2A 03                                 4115+         dc al1(3)                                                      02-DCCCA
00002A2B 08                                 4116+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002A2C 00                                 4117+         dc bl.8'00000000'                                              02-DCCCA
00002A2D 000000                             4118+         dc al3(0)                                                      02-DCCCA
00002A30 00000000000029E4                   4119+         dc ad(@LNAME1614)                                              02-DCCCA
00002A38                                    4120+         ds 0d                                                          02-DCCCA
00002A38 0000000000002A00                   4121+         dc ad($eye0090)                                                02-DCCCA
00002A40 0000000000000000                   4122+         dc ad(0)                                                       02-DCCCA
00002A48                                    4123+         ds    0d                                                       01-DCCPR
00002A48                                    4124+rd_avl_remove_elm ds 0d                                                 01-DCCPR
00002A48                                    4125+@REGION_1614_1 ds 0h                                                    01-DCCPR
00002A48 EBEC D008 0024          00000008   4126+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002A4E E3E0 D088 0004          00000088   4127+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002A54 E3C0 D090 0004          00000090   4128+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002A5A B904 002E                          4129+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002A5E E3B0 C018 0004          00000018   4130+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002A64 A7EB 00C0               000000C0   4131+         aghi  14,192              increase by frame size               01-DCCPR
00002A68 E3E0 C020 0021          00000020   4132+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002A6E 4720 B020               00000020   4133+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002A72                                    4134+@PER_1614 ds   0h                                                       01-DCCPR
00002A72 EBDE 2080 0024          00000080   4135+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002A78 E3C0 2090 0024          00000090   4136+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002A7E B904 00D2                          4137+         lgr   13,2                set real frame pointer               01-DCCPR
00002A82 B904 00CF                          4138+         lgr   12,15               set base reg                         01-DCCPR
                        00002A48            4139+         using @REGION_1614_1,12                                        01-DCCPR
00002A86 B904 0031                          4140          LGR   3,1         ; ptr to parm area
                                            4141 * ******* End of Prologue
                                            4142 * *
                                            4143 * ***           rd_avl_wrlock(ravl);
00002A8A E320 3000 0004          00000000   4144          LG    2,0(0,3)    ; ravl
00002A90 E320 D0A8 0024          000000A8   4145          STG   2,168(0,13)
00002A96 4110 D0A8               000000A8   4146          LA    1,168(0,13)
00002A9A E3F0 C0F0 0004          00002B38   4147          LG    15,@lit_1614_119 ; rd_avl_wrlock
00002AA0                                    4148 @@gen_label186 DS    0H
00002AA0 05EF                               4149          BALR  14,15
                                                                                                                           Page   87 
  Active Usings: @REGION_1614_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002AA2                                    4150 @@gen_label187 DS    0H
                                            4151 * ***           ravl->ravl_root = rd_avl_remove_elm0(ravl, ravl->ravl_\
                                            4152 * root, elm);
00002AA2 E320 D0A8 0024          000000A8   4153          STG   2,168(0,13)
00002AA8 E3F0 2000 0004          00000000   4154          LG    15,0(0,2)
00002AAE E3F0 D0B0 0024          000000B0   4155          STG   15,176(0,13)
00002AB4 E3F0 3008 0004          00000008   4156          LG    15,8(0,3)   ; elm
00002ABA E3F0 D0B8 0024          000000B8   4157          STG   15,184(0,13)
00002AC0 4110 D0A8               000000A8   4158          LA    1,168(0,13)
00002AC4 E3F0 C0F8 0004          00002B40   4159          LG    15,@lit_1614_120 ; rd_avl_remove_elm0
00002ACA                                    4160 @@gen_label188 DS    0H
00002ACA 05EF                               4161          BALR  14,15
00002ACC                                    4162 @@gen_label189 DS    0H
00002ACC E3F0 2000 0024          00000000   4163          STG   15,0(0,2)
                                            4164 * ***           rd_avl_wrunlock(ravl);
00002AD2 E320 D0A8 0024          000000A8   4165          STG   2,168(0,13)
00002AD8 4110 D0A8               000000A8   4166          LA    1,168(0,13)
00002ADC E3F0 C100 0004          00002B48   4167          LG    15,@lit_1614_121 ; rd_avl_wrunlock
00002AE2                                    4168 @@gen_label190 DS    0H
00002AE2 05EF                               4169          BALR  14,15
00002AE4                                    4170 @@gen_label191 DS    0H
                                            4171 * ***   }
00002AE4                                    4172 @ret_lab_1614 DS 0H
                                            4173 * * **** Start of Epilogue
                                            4174          DCCEPIL
00002AE4                                    4175+         ds 0h                                                          01-DCCEP
                                            4176+* Epilog
00002AE4 D707 D088 D088 00000088 00000088   4177+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002AEA E3D0 D080 0004          00000080   4178+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002AF0 E3C0 D090 0004          00000090   4179+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002AF6 E3B0 C018 0004          00000018   4180+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002AFC E3C0 B010 0021          00000010   4181+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002B02 E3E0 D008 0004          00000008   4182+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002B08 EB1C D020 0004          00000020   4183+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002B0E 078E                               4184+         bcr 8,14                if same dsab, just return              01-DCCEP
00002B10 E3F0 D010 0024          00000010   4185+         stg 15,16(0,13)         save return code                       01-DCCEP
00002B16 E300 D018 0024          00000018   4186+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002B1C E3F0 D090 0004          00000090   4187+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002B22 E3F0 F018 0004          00000018   4188+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002B28 47F0 F040               00000040   4189+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4190+* End of Epilog
                                            4191 * * **** End of Epilogue
00002B30                                    4192          DS    0D
00002B30 000000C0                           4193 @FRAMESIZE_1614 DC F'192'
00002B34 00000000
00002B38 0000000000002540                   4194 @lit_1614_119 DC AD(rd_avl_wrlock)
00002B40 0000000000000000                   4195 @lit_1614_120 DC AD(rd_avl_remove_elm0)
00002B48 0000000000002780                   4196 @lit_1614_121 DC AD(rd_avl_wrunlock)
                                            4197          DROP  12
                                            4198 *
                                            4199 *   DSECT for automatic variables in "rd_avl_remove_elm"
                                            4200 *      (FUNCTION #1614)
                                                                                                                           Page   88 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4201 *
00000000                00000000 000000A8   4202 @AUTO#rd_avl_remove_elm DSECT
00000000                                    4203          DS    XL168
                                            4204 *
00002B50                00000000 00005E8C   4205 @CODE    CSECT
                                            4206 *
                                            4207 *
                                            4208 *
                                            4209 * ....... start of rd_avl_find
00002B50                                    4210 @LNAME1616 DS  0H
00002B50 0000000B                           4211          DC    X'0000000B'
00002B54 99846D81A5936D86                   4212          DC    C'rd_avl_find'
00002B5F 00                                 4213          DC    X'00'
                                            4214 rd_avl_find DCCPRLG CINDEX=1616,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME1616
                                            4215          macro
                                            4216          dccextrn &m
                                            4217          gblc    &$dccext(1000)
                                            4218          gbla    &$dccexti
                                            4219          lcla    &i
                                            4220 &$dccext(&$dccexti+1) setc    '&m'
                                            4221 &i       seta    1
                                            4222 .loop    aif    (&i gt &$dccexti).around
                                            4223          aif    ('&$dccext(&i)' eq '&m').getout
                                            4224 &i       seta    &i+1
                                            4225          ago     .loop
                                            4226 .around  anop
                                            4227 &$dccexti seta &$dccexti+1
                                            4228          extrn  &m
                                            4229 .getout  anop
                                            4230          mend
00002B60                                    4231+$eye0093    ds    0d                                                    02-DCCCA
00002B60 C4C3C3                             4232+         dc cl3'DCC'                                                    02-DCCCA
00002B63 01                                 4233+         dc xl1'01' format one                                          02-DCCCA
00002B64 00000000                           4234+         dc a(0)                                                        02-DCCCA
00002B68 0000000000002BD2                   4235+         dc ad(@PER_1616)                                               02-DCCCA
00002B70 00000000000000C8                   4236+         dc ad(200)                                                     02-DCCCA
00002B78 0000000000000000                   4237+         dc ad(0)                                                       02-DCCCA
00002B80 0000000000001000                   4238+         dc ad(4096)                                                    02-DCCCA
00002B88 20                                 4239+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002B89 03                                 4240+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002B8A 03                                 4241+         dc al1(3)                                                      02-DCCCA
00002B8B 08                                 4242+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002B8C 00                                 4243+         dc bl.8'00000000'                                              02-DCCCA
00002B8D 000000                             4244+         dc al3(0)                                                      02-DCCCA
00002B90 0000000000002B50                   4245+         dc ad(@LNAME1616)                                              02-DCCCA
00002B98                                    4246+         ds 0d                                                          02-DCCCA
00002B98 0000000000002B60                   4247+         dc ad($eye0093)                                                02-DCCCA
00002BA0 0000000000000000                   4248+         dc ad(0)                                                       02-DCCCA
00002BA8                                    4249+         ds    0d                                                       01-DCCPR
00002BA8                                    4250+rd_avl_find ds 0d                                                       01-DCCPR
00002BA8                                    4251+@REGION_1616_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002BA8 EBEC D008 0024          00000008   4252+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002BAE E3E0 D088 0004          00000088   4253+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002BB4 E3C0 D090 0004          00000090   4254+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002BBA B904 002E                          4255+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002BBE E3B0 C018 0004          00000018   4256+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002BC4 A7EB 00C8               000000C8   4257+         aghi  14,200              increase by frame size               01-DCCPR
00002BC8 E3E0 C020 0021          00000020   4258+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002BCE 4720 B020               00000020   4259+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002BD2                                    4260+@PER_1616 ds   0h                                                       01-DCCPR
00002BD2 EBDE 2080 0024          00000080   4261+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002BD8 E3C0 2090 0024          00000090   4262+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002BDE B904 00D2                          4263+         lgr   13,2                set real frame pointer               01-DCCPR
00002BE2 B904 00CF                          4264+         lgr   12,15               set base reg                         01-DCCPR
                        00002BA8            4265+         using @REGION_1616_1,12                                        01-DCCPR
00002BE6 B904 0031                          4266          LGR   3,1         ; ptr to parm area
                                            4267 * ******* End of Prologue
                                            4268 * *
00002BEA E320 3000 0004          00000000   4269          LG    2,0(0,3)    ; ravl
                                            4270 * ***           const rd_avl_node_t *ran;
                                            4271 * ***           void *ret;
                                            4272 * ***
                                            4273 * ***           if (dolock)
00002BF0 E340 3014 0012          00000014   4274          LT    4,20(0,3)   ; dolock
00002BF6 4780 C064               00002C0C   4275          BZ    @L551
                                            4276 * ***                   rd_avl_rdlock(ravl);
00002BFA E320 D0B0 0024          000000B0   4277          STG   2,176(0,13)
00002C00 4110 D0B0               000000B0   4278          LA    1,176(0,13)
00002C04 E3F0 C0A8 0004          00002C50   4279          LG    15,@lit_1616_123 ; rd_avl_rdlock
00002C0A                                    4280 @@gen_label193 DS    0H
00002C0A 05EF                               4281          BALR  14,15
00002C0C                                    4282 @@gen_label194 DS    0H
00002C0C                                    4283 @L551    DS    0H
                                            4284 * ***
                                            4285 * ***           ran = rd_avl_find_node(ravl, ravl->ravl_root, elm);
00002C0C E320 D0B0 0024          000000B0   4286          STG   2,176(0,13)
00002C12 E3F0 2000 0004          00000000   4287          LG    15,0(0,2)
00002C18 E3F0 D0B8 0024          000000B8   4288          STG   15,184(0,13)
00002C1E E3F0 3008 0004          00000008   4289          LG    15,8(0,3)   ; elm
00002C24 E3F0 D0C0 0024          000000C0   4290          STG   15,192(0,13)
00002C2A 4110 D0B0               000000B0   4291          LA    1,176(0,13)
00002C2E E3F0 C0B0 0004          00002C58   4292          LG    15,@lit_1616_124 ; rd_avl_find_node
00002C34                                    4293 @@gen_label195 DS    0H
00002C34 05EF                               4294          BALR  14,15
00002C36                                    4295 @@gen_label196 DS    0H
                                            4296 * ***           ret = ran ? ran->ran_elm : ((void *)0);
00002C36 B902 001F                          4297          LTGR  1,15
00002C3A 4780 C0C0               00002C68   4298          BZ    @L552
00002C3E E330 F018 0004          00000018   4299          LG    3,24(0,15)  ; offset of ran_elm in rd_avl_node_s
00002C44 47F0 C0C4               00002C6C   4300          B     @L553
00002C48                                    4301          DS    0D
00002C48 000000C8                           4302 @FRAMESIZE_1616 DC F'200'
00002C4C 00000000
                                                                                                                           Page   90 
  Active Usings: @REGION_1616_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002C50 0000000000002420                   4303 @lit_1616_123 DC AD(rd_avl_rdlock)
00002C58 0000000000000000                   4304 @lit_1616_124 DC AD(rd_avl_find_node)
00002C60 0000000000002660                   4305 @lit_1616_126 DC AD(rd_avl_rdunlock)
00002C68                                    4306 @L552    DS    0H
00002C68 A739 0000               00000000   4307          LGHI  3,0         ; 0
00002C6C                                    4308 @L553    DS    0H
                                            4309 * ***
                                            4310 * ***           if (dolock)
00002C6C 1244                               4311          LTR   4,4
00002C6E 4780 C0DC               00002C84   4312          BZ    @L554
                                            4313 * ***                   rd_avl_rdunlock(ravl);
00002C72 E320 D0B0 0024          000000B0   4314          STG   2,176(0,13)
00002C78 4110 D0B0               000000B0   4315          LA    1,176(0,13)
00002C7C E3F0 C0B8 0004          00002C60   4316          LG    15,@lit_1616_126 ; rd_avl_rdunlock
00002C82                                    4317 @@gen_label199 DS    0H
00002C82 05EF                               4318          BALR  14,15
00002C84                                    4319 @@gen_label200 DS    0H
00002C84                                    4320 @L554    DS    0H
                                            4321 * ***
                                            4322 * ***           return ret;
00002C84 B904 00F3                          4323          LGR   15,3
                                            4324 * ***   }
                                            4325 * * **** Start of Epilogue
                                            4326          DCCEPIL
00002C88                                    4327+         ds 0h                                                          01-DCCEP
                                            4328+* Epilog
00002C88 D707 D088 D088 00000088 00000088   4329+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002C8E E3D0 D080 0004          00000080   4330+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002C94 E3C0 D090 0004          00000090   4331+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002C9A E3B0 C018 0004          00000018   4332+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002CA0 E3C0 B010 0021          00000010   4333+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002CA6 E3E0 D008 0004          00000008   4334+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002CAC EB1C D020 0004          00000020   4335+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002CB2 078E                               4336+         bcr 8,14                if same dsab, just return              01-DCCEP
00002CB4 E3F0 D010 0024          00000010   4337+         stg 15,16(0,13)         save return code                       01-DCCEP
00002CBA E300 D018 0024          00000018   4338+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002CC0 E3F0 D090 0004          00000090   4339+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002CC6 E3F0 F018 0004          00000018   4340+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002CCC 47F0 F040               00000040   4341+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4342+* End of Epilog
                                            4343 * * **** End of Epilogue
                                            4344          DROP  12
                                            4345 *
                                            4346 *   DSECT for automatic variables in "rd_avl_find"
                                            4347 *      (FUNCTION #1616)
                                            4348 *
00000000                00000000 000000A8   4349 @AUTO#rd_avl_find DSECT
00000000                                    4350          DS    XL168
                                            4351 *
00002CD0                00000000 00005E8C   4352 @CODE    CSECT
                                            4353 *
                                            4354 *
                                                                                                                           Page   91 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4355 *
                                            4356 * ....... start of rd_kafka_metadata_cache_delete
00002CD0                                    4357 @LNAME1957 DS  0H
00002CD0 0000001E                           4358          DC    X'0000001E'
00002CD4 99846D9281869281                   4359          DC    C'rd_kafka_metadata_cache_delete'
00002CF2 00                                 4360          DC    X'00'
                                            4361 rd_kafka_metadata_cache_delete DCCPRLG CINDEX=1957,BASER=12,FRAME=208,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1957
                                            4362          macro
                                            4363          dccextrn &m
                                            4364          gblc    &$dccext(1000)
                                            4365          gbla    &$dccexti
                                            4366          lcla    &i
                                            4367 &$dccext(&$dccexti+1) setc    '&m'
                                            4368 &i       seta    1
                                            4369 .loop    aif    (&i gt &$dccexti).around
                                            4370          aif    ('&$dccext(&i)' eq '&m').getout
                                            4371 &i       seta    &i+1
                                            4372          ago     .loop
                                            4373 .around  anop
                                            4374 &$dccexti seta &$dccexti+1
                                            4375          extrn  &m
                                            4376 .getout  anop
                                            4377          mend
00002CF8                                    4378+$eye0096    ds    0d                                                    02-DCCCA
00002CF8 C4C3C3                             4379+         dc cl3'DCC'                                                    02-DCCCA
00002CFB 01                                 4380+         dc xl1'01' format one                                          02-DCCCA
00002CFC 00000000                           4381+         dc a(0)                                                        02-DCCCA
00002D00 0000000000002D6A                   4382+         dc ad(@PER_1957)                                               02-DCCCA
00002D08 00000000000000D0                   4383+         dc ad(208)                                                     02-DCCCA
00002D10 0000000000000000                   4384+         dc ad(0)                                                       02-DCCCA
00002D18 0000000000001000                   4385+         dc ad(4096)                                                    02-DCCCA
00002D20 20                                 4386+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002D21 03                                 4387+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002D22 03                                 4388+         dc al1(3)                                                      02-DCCCA
00002D23 08                                 4389+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002D24 00                                 4390+         dc bl.8'00000000'                                              02-DCCCA
00002D25 000000                             4391+         dc al3(0)                                                      02-DCCCA
00002D28 0000000000002CD0                   4392+         dc ad(@LNAME1957)                                              02-DCCCA
00002D30                                    4393+         ds 0d                                                          02-DCCCA
00002D30 0000000000002CF8                   4394+         dc ad($eye0096)                                                02-DCCCA
00002D38 0000000000000000                   4395+         dc ad(0)                                                       02-DCCCA
00002D40                                    4396+         ds    0d                                                       01-DCCPR
00002D40                                    4397+rd_kafka_metadata_cache_delete ds 0d                                    01-DCCPR
00002D40                                    4398+@REGION_1957_1 ds 0h                                                    01-DCCPR
00002D40 EBEC D008 0024          00000008   4399+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002D46 E3E0 D088 0004          00000088   4400+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002D4C E3C0 D090 0004          00000090   4401+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002D52 B904 002E                          4402+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002D56 E3B0 C018 0004          00000018   4403+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002D5C A7EB 00D0               000000D0   4404+         aghi  14,208              increase by frame size               01-DCCPR
00002D60 E3E0 C020 0021          00000020   4405+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002D66 4720 B020               00000020   4406+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002D6A                                    4407+@PER_1957 ds   0h                                                       01-DCCPR
00002D6A EBDE 2080 0024          00000080   4408+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002D70 E3C0 2090 0024          00000090   4409+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002D76 B904 00D2                          4410+         lgr   13,2                set real frame pointer               01-DCCPR
00002D7A B904 00CF                          4411+         lgr   12,15               set base reg                         01-DCCPR
                        00002D40            4412+         using @REGION_1957_1,12                                        01-DCCPR
                                            4413 * ******* End of Prologue
                                            4414 * *
                                            4415 * ***           if (unlink_avl)
00002D7E EB23 1000 0004          00000000   4416          LMG   2,3,0(1)    ; rk
00002D84 E3F0 1014 0012          00000014   4417          LT    15,20(0,1)  ; unlink_avl
00002D8A 4780 C06A               00002DAA   4418          BZ    @L631
                                            4419 * ***                   rd_avl_remove_elm(&rk->rk_metadata_cache.rkmc_\
                                            4420 * avl, rkmce);
00002D8E 41F0 2AA8               00000AA8   4421          LA    15,2728(0,2)
00002D92 E3F0 D0A8 0024          000000A8   4422          STG   15,168(0,13)
00002D98 E330 D0B0 0024          000000B0   4423          STG   3,176(0,13)
00002D9E 4110 D0A8               000000A8   4424          LA    1,168(0,13)
00002DA2 E3F0 C098 0004          00002DD8   4425          LG    15,@lit_1957_128 ; rd_avl_remove_elm
00002DA8                                    4426 @@gen_label202 DS    0H
00002DA8 05EF                               4427          BALR  14,15
00002DAA                                    4428 @@gen_label203 DS    0H
00002DAA                                    4429 @L630    DS    0H
                                            4430 * ***           do {   if (((rkmce)->rkmce_link .tqe_next) != (((void \
                                            4431 * *)0))) (rkmce)->rkmce_link .tqe_next->rkmce_link .tqe_prev = (rkmce)\
                                            4432 * ->rkmce_link .tqe_prev; else (&rk->rk_metadata_cache.rkmc_expiry)->t\
                                            4433 * qh_last = (rkmce)->rkmce_link .tqe_prev; *(rkmce)->rkmce_link .tqe_p\
                                            4434 * rev = (rkmce)->rkmce_link .tqe_next; ; } while ( 0);
00002DAA                                    4435 @L631    DS    0H
00002DAA E3F0 3020 0002          00000020   4436          LTG   15,32(0,3)  ; offset of rkmce_link in rd_kafka_metadata_*
                                                                cache_entry
00002DB0 4780 C0C0               00002E00   4437          BE    @L634
00002DB4 E3F0 3020 0004          00000020   4438          LG    15,32(0,3)  ; offset of rkmce_link in rd_kafka_metadata_*
                                                                cache_entry
00002DBA E310 3028 0004          00000028   4439          LG    1,40(0,3)   ; offset of tqe_prev in 0000110
00002DC0 E310 F028 0024          00000028   4440          STG   1,40(0,15)  ; offset of tqe_prev in 0000110
00002DC6 47F0 C0CC               00002E0C   4441          B     @L635
00002DD0                                    4442          DS    0D
00002DD0 000000D0                           4443 @FRAMESIZE_1957 DC F'208'
00002DD4 00000000
00002DD8 0000000000002A48                   4444 @lit_1957_128 DC AD(rd_avl_remove_elm)
00002DE0 0000000000000000                   4445 @lit_1957_131 DC AD(rd_kafka_crash)
00002DE8 0000000000005E90                   4446 @lit_1957_130 DC AD(@DATA)
00002DF0 0000000000006076                   4447 @lit_1957_129 DC AD(@strings@)
00002DF8 00000000000001C0                   4448 @lit_1957_132 DC AD(rd_free)
00002E00                                    4449 @L634    DS    0H
00002E00 E3F0 3028 0004          00000028   4450          LG    15,40(0,3)  ; offset of tqe_prev in 0000110
00002E06 E3F0 2B00 0024          00000B00   4451          STG   15,2816(0,2) ; offset of tqh_last in 0000111
00002E0C                                    4452 @L635    DS    0H
00002E0C E3F0 3028 0004          00000028   4453          LG    15,40(0,3)  ; offset of tqe_prev in 0000110
00002E12 E310 3020 0004          00000020   4454          LG    1,32(0,3)   ; offset of rkmce_link in rd_kafka_metadata_*
                                                                                                                           Page   93 
  Active Usings: @REGION_1957_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                cache_entry
00002E18 E310 F000 0024          00000000   4455          STG   1,0(0,15)
                                            4456 * ***           do { if (((!(rk->rk_metadata_cache.rkmc_cnt > 0)))) rd\
                                            4457 * _kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_metadata_cache.\
                                            4458 * c",85, __FUNCTION__, (((void *)0)), "assert: " "rk->rk_metadata_cach\
                                            4459 * e.rkmc_cnt > 0"); } while (0);
00002E1E                                    4460 @L636    DS    0H
00002E1E E55C 2B40 0000          00000B40   4461          CHSI  2880(2),0
00002E24 4720 C12A               00002E6A   4462          BH    @L639
00002E28 E3F0 C0B0 0004          00002DF0   4463          LG    15,@lit_1957_129
00002E2E 4110 F162               00000162   4464          LA    1,354(0,15)
00002E32 E310 D0A8 0024          000000A8   4465          STG   1,168(0,13)
00002E38 E548 D0B0 0055          000000B0   4466          MVGHI 176(13),85
00002E3E E310 C0A8 0004          00002DE8   4467          LG    1,@lit_1957_130
00002E44 4110 11A6               000001A6   4468          LA    1,422(0,1)
00002E48 E310 D0B8 0024          000000B8   4469          STG   1,184(0,13)
00002E4E D707 D0C0 D0C0 000000C0 000000C0   4470          XC    192(8,13),192(13)
00002E54 41F0 F196               00000196   4471          LA    15,406(0,15)
00002E58 E3F0 D0C8 0024          000000C8   4472          STG   15,200(0,13)
00002E5E 4110 D0A8               000000A8   4473          LA    1,168(0,13)
00002E62 E3F0 C0A0 0004          00002DE0   4474          LG    15,@lit_1957_131 ; rd_kafka_crash
00002E68                                    4475 @@gen_label206 DS    0H
00002E68 05EF                               4476          BALR  14,15
00002E6A                                    4477 @@gen_label207 DS    0H
00002E6A                                    4478 @L639    DS    0H
                                            4479 * ***           rk->rk_metadata_cache.rkmc_cnt--;
00002E6A 58F0 2B40               00000B40   4480          L     15,2880(0,2)
00002E6E A7FA FFFF               0000FFFF   4481          AHI   15,-1
00002E72 50F0 2B40               00000B40   4482          ST    15,2880(0,2)
                                            4483 * ***
                                            4484 * ***           rd_free(rkmce);
00002E76 E330 D0A8 0024          000000A8   4485          STG   3,168(0,13)
00002E7C 4110 D0A8               000000A8   4486          LA    1,168(0,13)
00002E80 E3F0 C0B8 0004          00002DF8   4487          LG    15,@lit_1957_132 ; rd_free
00002E86                                    4488 @@gen_label208 DS    0H
00002E86 05EF                               4489          BALR  14,15
00002E88                                    4490 @@gen_label209 DS    0H
                                            4491 * ***   }
00002E88                                    4492 @ret_lab_1957 DS 0H
                                            4493 * * **** Start of Epilogue
                                            4494          DCCEPIL
00002E88                                    4495+         ds 0h                                                          01-DCCEP
                                            4496+* Epilog
00002E88 D707 D088 D088 00000088 00000088   4497+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002E8E E3D0 D080 0004          00000080   4498+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002E94 E3C0 D090 0004          00000090   4499+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002E9A E3B0 C018 0004          00000018   4500+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002EA0 E3C0 B010 0021          00000010   4501+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002EA6 E3E0 D008 0004          00000008   4502+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002EAC EB1C D020 0004          00000020   4503+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002EB2 078E                               4504+         bcr 8,14                if same dsab, just return              01-DCCEP
00002EB4 E3F0 D010 0024          00000010   4505+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page   94 
  Active Usings: @REGION_1957_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002EBA E300 D018 0024          00000018   4506+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002EC0 E3F0 D090 0004          00000090   4507+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002EC6 E3F0 F018 0004          00000018   4508+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002ECC 47F0 F040               00000040   4509+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4510+* End of Epilog
                                            4511 * * **** End of Epilogue
                                            4512          DROP  12
                                            4513 *
                                            4514 *   DSECT for automatic variables in "rd_kafka_metadata_cache_delete"
                                            4515 *      (FUNCTION #1957)
                                            4516 *
00000000                00000000 000000A8   4517 @AUTO#rd_kafka_metadata_cache_delete DSECT
00000000                                    4518          DS    XL168
                                            4519 *
00002ED0                00000000 00005E8C   4520 @CODE    CSECT
                                            4521 *
                                            4522 *
                                            4523 *
                                            4524 * ....... start of rd_kafka_metadata_cache_delete_by_name
00002ED0                                    4525 @LNAME1958 DS  0H
00002ED0 00000026                           4526          DC    X'00000026'
00002ED4 99846D9281869281                   4527          DC    C'rd_kafka_metadata_cache_delete_b'
00002EF4 A86D95819485                       4528          DC    C'y_name'
00002EFA 00                                 4529          DC    X'00'
                                            4530 rd_kafka_metadata_cache_delete_by_name DCCPRLG CINDEX=1958,BASER=12,FRA*
                                                                ME=200,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1958
                                            4531          macro
                                            4532          dccextrn &m
                                            4533          gblc    &$dccext(1000)
                                            4534          gbla    &$dccexti
                                            4535          lcla    &i
                                            4536 &$dccext(&$dccexti+1) setc    '&m'
                                            4537 &i       seta    1
                                            4538 .loop    aif    (&i gt &$dccexti).around
                                            4539          aif    ('&$dccext(&i)' eq '&m').getout
                                            4540 &i       seta    &i+1
                                            4541          ago     .loop
                                            4542 .around  anop
                                            4543 &$dccexti seta &$dccexti+1
                                            4544          extrn  &m
                                            4545 .getout  anop
                                            4546          mend
00002F00                                    4547+$eye0099    ds    0d                                                    02-DCCCA
00002F00 C4C3C3                             4548+         dc cl3'DCC'                                                    02-DCCCA
00002F03 01                                 4549+         dc xl1'01' format one                                          02-DCCCA
00002F04 00000000                           4550+         dc a(0)                                                        02-DCCCA
00002F08 0000000000002F72                   4551+         dc ad(@PER_1958)                                               02-DCCCA
00002F10 00000000000000C8                   4552+         dc ad(200)                                                     02-DCCCA
00002F18 0000000000000000                   4553+         dc ad(0)                                                       02-DCCCA
00002F20 0000000000001000                   4554+         dc ad(4096)                                                    02-DCCCA
00002F28 20                                 4555+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002F29 03                                 4556+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   95 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002F2A 03                                 4557+         dc al1(3)                                                      02-DCCCA
00002F2B 08                                 4558+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002F2C 00                                 4559+         dc bl.8'00000000'                                              02-DCCCA
00002F2D 000000                             4560+         dc al3(0)                                                      02-DCCCA
00002F30 0000000000002ED0                   4561+         dc ad(@LNAME1958)                                              02-DCCCA
00002F38                                    4562+         ds 0d                                                          02-DCCCA
00002F38 0000000000002F00                   4563+         dc ad($eye0099)                                                02-DCCCA
00002F40 0000000000000000                   4564+         dc ad(0)                                                       02-DCCCA
00002F48                                    4565+         ds    0d                                                       01-DCCPR
00002F48                                    4566+rd_kafka_metadata_cache_delete_by_name ds 0d                            01-DCCPR
00002F48                                    4567+@REGION_1958_1 ds 0h                                                    01-DCCPR
00002F48 EBEC D008 0024          00000008   4568+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002F4E E3E0 D088 0004          00000088   4569+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002F54 E3C0 D090 0004          00000090   4570+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002F5A B904 002E                          4571+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002F5E E3B0 C018 0004          00000018   4572+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002F64 A7EB 00C8               000000C8   4573+         aghi  14,200              increase by frame size               01-DCCPR
00002F68 E3E0 C020 0021          00000020   4574+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002F6E 4720 B020               00000020   4575+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002F72                                    4576+@PER_1958 ds   0h                                                       01-DCCPR
00002F72 EBDE 2080 0024          00000080   4577+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002F78 E3C0 2090 0024          00000090   4578+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002F7E B904 00D2                          4579+         lgr   13,2                set real frame pointer               01-DCCPR
00002F82 B904 00CF                          4580+         lgr   12,15               set base reg                         01-DCCPR
                        00002F48            4581+         using @REGION_1958_1,12                                        01-DCCPR
00002F86 B904 0031                          4582          LGR   3,1         ; ptr to parm area
                                            4583 * ******* End of Prologue
                                            4584 * *
                                            4585 * ***           struct rd_kafka_metadata_cache_entry *rkmce;
                                            4586 * ***
                                            4587 * ***           rkmce = rd_kafka_metadata_cache_find(rk, topic, 1);
00002F8A E3F0 3000 0004          00000000   4588          LG    15,0(0,3)   ; rk
00002F90 E3F0 D0B0 0024          000000B0   4589          STG   15,176(0,13)
00002F96 E3F0 3008 0004          00000008   4590          LG    15,8(0,3)   ; topic
00002F9C E3F0 D0B8 0024          000000B8   4591          STG   15,184(0,13)
00002FA2 E548 D0C0 0001          000000C0   4592          MVGHI 192(13),1
00002FA8 4110 D0B0               000000B0   4593          LA    1,176(0,13)
00002FAC E3F0 C0B8 0004          00003000   4594          LG    15,@lit_1958_134 ; rd_kafka_metadata_cache_find
00002FB2                                    4595 @@gen_label210 DS    0H
00002FB2 05EF                               4596          BALR  14,15
00002FB4                                    4597 @@gen_label211 DS    0H
00002FB4 B904 002F                          4598          LGR   2,15
                                            4599 * ***           if (rkmce)
00002FB8 B902 00F2                          4600          LTGR  15,2
00002FBC 4780 C09C               00002FE4   4601          BZ    @L640
                                            4602 * ***                   rd_kafka_metadata_cache_delete(rk, rkmce, 1);
00002FC0 E3F0 3000 0004          00000000   4603          LG    15,0(0,3)   ; rk
00002FC6 E3F0 D0B0 0024          000000B0   4604          STG   15,176(0,13)
00002FCC E320 D0B8 0024          000000B8   4605          STG   2,184(0,13)
00002FD2 E548 D0C0 0001          000000C0   4606          MVGHI 192(13),1
00002FD8 4110 D0B0               000000B0   4607          LA    1,176(0,13)
00002FDC E3F0 C0C0 0004          00003008   4608          LG    15,@lit_1958_135 ; rd_kafka_metadata_cache_delete
                                                                                                                           Page   96 
  Active Usings: @REGION_1958_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002FE2                                    4609 @@gen_label213 DS    0H
00002FE2 05EF                               4610          BALR  14,15
00002FE4                                    4611 @@gen_label214 DS    0H
00002FE4                                    4612 @L640    DS    0H
                                            4613 * ***           return rkmce ? 1 : 0;
00002FE4 B902 00F2                          4614          LTGR  15,2
00002FE8 4780 C0C8               00003010   4615          BZ    @L641
00002FEC A7F8 0001               00000001   4616          LHI   15,1        ; 1
00002FF0 47F0 C0CC               00003014   4617          B     @L642
00002FF8                                    4618          DS    0D
00002FF8 000000C8                           4619 @FRAMESIZE_1958 DC F'200'
00002FFC 00000000
00003000 00000000000034D8                   4620 @lit_1958_134 DC AD(rd_kafka_metadata_cache_find)
00003008 0000000000002D40                   4621 @lit_1958_135 DC AD(rd_kafka_metadata_cache_delete)
00003010                                    4622 @L641    DS    0H
00003010 A7F8 0000               00000000   4623          LHI   15,0        ; 0
00003014                                    4624 @L642    DS    0H
00003014 B914 00FF                          4625          LGFR  15,15
                                            4626 * ***   }
                                            4627 * * **** Start of Epilogue
                                            4628          DCCEPIL
00003018                                    4629+         ds 0h                                                          01-DCCEP
                                            4630+* Epilog
00003018 D707 D088 D088 00000088 00000088   4631+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000301E E3D0 D080 0004          00000080   4632+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003024 E3C0 D090 0004          00000090   4633+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000302A E3B0 C018 0004          00000018   4634+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003030 E3C0 B010 0021          00000010   4635+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003036 E3E0 D008 0004          00000008   4636+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000303C EB1C D020 0004          00000020   4637+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003042 078E                               4638+         bcr 8,14                if same dsab, just return              01-DCCEP
00003044 E3F0 D010 0024          00000010   4639+         stg 15,16(0,13)         save return code                       01-DCCEP
0000304A E300 D018 0024          00000018   4640+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003050 E3F0 D090 0004          00000090   4641+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003056 E3F0 F018 0004          00000018   4642+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000305C 47F0 F040               00000040   4643+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4644+* End of Epilog
                                            4645 * * **** End of Epilogue
                                            4646          DROP  12
                                            4647 *
                                            4648 *   DSECT for automatic variables in "rd_kafka_metadata_cache_delete_b
                                            4649 *           y_name"
                                            4650 *      (FUNCTION #1958)
                                            4651 *
00000000                00000000 000000A8   4652 @AUTO#rd_kafka_metadata_cache_delete_by_name DSECT
00000000                                    4653          DS    XL168
                                            4654 *
00003060                00000000 00005E8C   4655 @CODE    CSECT
                                            4656 *
                                            4657 *
                                            4658 *
                                            4659 * ....... start of rd_kafka_metadata_cache_evict_tmr_cb
                                                                                                                           Page   97 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003060                                    4660 @LNAME1960 DS  0H
00003060 00000024                           4661          DC    X'00000024'
00003064 99846D9281869281                   4662          DC    C'rd_kafka_metadata_cache_evict_tm'
00003084 996D8382                           4663          DC    C'r_cb'
00003088 00                                 4664          DC    X'00'
                                            4665 rd_kafka_metadata_cache_evict_tmr_cb DCCPRLG CINDEX=1960,BASER=12,FRAME*
                                                                =184,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1960
                                            4666          macro
                                            4667          dccextrn &m
                                            4668          gblc    &$dccext(1000)
                                            4669          gbla    &$dccexti
                                            4670          lcla    &i
                                            4671 &$dccext(&$dccexti+1) setc    '&m'
                                            4672 &i       seta    1
                                            4673 .loop    aif    (&i gt &$dccexti).around
                                            4674          aif    ('&$dccext(&i)' eq '&m').getout
                                            4675 &i       seta    &i+1
                                            4676          ago     .loop
                                            4677 .around  anop
                                            4678 &$dccexti seta &$dccexti+1
                                            4679          extrn  &m
                                            4680 .getout  anop
                                            4681          mend
00003090                                    4682+$eye0102    ds    0d                                                    02-DCCCA
00003090 C4C3C3                             4683+         dc cl3'DCC'                                                    02-DCCCA
00003093 01                                 4684+         dc xl1'01' format one                                          02-DCCCA
00003094 00000000                           4685+         dc a(0)                                                        02-DCCCA
00003098 0000000000003102                   4686+         dc ad(@PER_1960)                                               02-DCCCA
000030A0 00000000000000B8                   4687+         dc ad(184)                                                     02-DCCCA
000030A8 0000000000000000                   4688+         dc ad(0)                                                       02-DCCCA
000030B0 0000000000001000                   4689+         dc ad(4096)                                                    02-DCCCA
000030B8 20                                 4690+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000030B9 03                                 4691+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000030BA 03                                 4692+         dc al1(3)                                                      02-DCCCA
000030BB 08                                 4693+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000030BC 00                                 4694+         dc bl.8'00000000'                                              02-DCCCA
000030BD 000000                             4695+         dc al3(0)                                                      02-DCCCA
000030C0 0000000000003060                   4696+         dc ad(@LNAME1960)                                              02-DCCCA
000030C8                                    4697+         ds 0d                                                          02-DCCCA
000030C8 0000000000003090                   4698+         dc ad($eye0102)                                                02-DCCCA
000030D0 0000000000000000                   4699+         dc ad(0)                                                       02-DCCCA
000030D8                                    4700+         ds    0d                                                       01-DCCPR
000030D8                                    4701+rd_kafka_metadata_cache_evict_tmr_cb ds 0d                              01-DCCPR
000030D8                                    4702+@REGION_1960_1 ds 0h                                                    01-DCCPR
000030D8 EBEC D008 0024          00000008   4703+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000030DE E3E0 D088 0004          00000088   4704+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000030E4 E3C0 D090 0004          00000090   4705+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000030EA B904 002E                          4706+         lgr   2,14                copy addr of our savearea            01-DCCPR
000030EE E3B0 C018 0004          00000018   4707+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000030F4 A7EB 00B8               000000B8   4708+         aghi  14,184              increase by frame size               01-DCCPR
000030F8 E3E0 C020 0021          00000020   4709+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000030FE 4720 B020               00000020   4710+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page   98 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003102                                    4711+@PER_1960 ds   0h                                                       01-DCCPR
00003102 EBDE 2080 0024          00000080   4712+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003108 E3C0 2090 0024          00000090   4713+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000310E B904 00D2                          4714+         lgr   13,2                set real frame pointer               01-DCCPR
00003112 B904 00CF                          4715+         lgr   12,15               set base reg                         01-DCCPR
                        000030D8            4716+         using @REGION_1960_1,12                                        01-DCCPR
                                            4717 * ******* End of Prologue
                                            4718 * *
                                            4719 * ***           rd_kafka_t *rk = arg;
00003116 E320 1008 0004          00000008   4720          LG    2,8(0,1)    ; arg
                                            4721 * ***
                                            4722 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000311C 41F0 29A0               000009A0   4723          LA    15,2464(0,2)
00003120 E3F0 D0B0 0024          000000B0   4724          STG   15,176(0,13)
00003126 4110 D0B0               000000B0   4725          LA    1,176(0,13)
0000312A E3F0 C0D8 0004          000031B0   4726          LG    15,@lit_1960_139 ; rwlock_wrlock
00003130                                    4727 @@gen_label216 DS    0H
00003130 05EF                               4728          BALR  14,15
00003132                                    4729 @@gen_label217 DS    0H
                                            4730 * ***           rd_kafka_metadata_cache_evict(rk);
00003132 E320 D0B0 0024          000000B0   4731          STG   2,176(0,13)
00003138 4110 D0B0               000000B0   4732          LA    1,176(0,13)
0000313C E3F0 C0E0 0004          000031B8   4733          LG    15,@lit_1960_140 ; rd_kafka_metadata_cache_evict
00003142                                    4734 @@gen_label218 DS    0H
00003142 05EF                               4735          BALR  14,15
00003144                                    4736 @@gen_label219 DS    0H
                                            4737 * ***           rwlock_wrunlock(&(rk)->rk_lock);
00003144 41F0 29A0               000009A0   4738          LA    15,2464(0,2)
00003148 E3F0 D0B0 0024          000000B0   4739          STG   15,176(0,13)
0000314E 4110 D0B0               000000B0   4740          LA    1,176(0,13)
00003152 E3F0 C0E8 0004          000031C0   4741          LG    15,@lit_1960_141 ; rwlock_wrunlock
00003158                                    4742 @@gen_label220 DS    0H
00003158 05EF                               4743          BALR  14,15
0000315A                                    4744 @@gen_label221 DS    0H
                                            4745 * ***   }
0000315A                                    4746 @ret_lab_1960 DS 0H
                                            4747 * * **** Start of Epilogue
                                            4748          DCCEPIL
0000315A                                    4749+         ds 0h                                                          01-DCCEP
                                            4750+* Epilog
0000315A D707 D088 D088 00000088 00000088   4751+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003160 E3D0 D080 0004          00000080   4752+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003166 E3C0 D090 0004          00000090   4753+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000316C E3B0 C018 0004          00000018   4754+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003172 E3C0 B010 0021          00000010   4755+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003178 E3E0 D008 0004          00000008   4756+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000317E EB1C D020 0004          00000020   4757+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003184 078E                               4758+         bcr 8,14                if same dsab, just return              01-DCCEP
00003186 E3F0 D010 0024          00000010   4759+         stg 15,16(0,13)         save return code                       01-DCCEP
0000318C E300 D018 0024          00000018   4760+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003192 E3F0 D090 0004          00000090   4761+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003198 E3F0 F018 0004          00000018   4762+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   99 
  Active Usings: @REGION_1960_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000319E 47F0 F040               00000040   4763+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4764+* End of Epilog
                                            4765 * * **** End of Epilogue
000031A8                                    4766          DS    0D
000031A8 000000B8                           4767 @FRAMESIZE_1960 DC F'184'
000031AC 00000000
000031B0 0000000000000000                   4768 @lit_1960_139 DC AD(rwlock_wrlock)
000031B8 0000000000003238                   4769 @lit_1960_140 DC AD(rd_kafka_metadata_cache_evict)
000031C0 0000000000000000                   4770 @lit_1960_141 DC AD(rwlock_wrunlock)
                                            4771          DROP  12
                                            4772 *
                                            4773 *   DSECT for automatic variables in "rd_kafka_metadata_cache_evict_tm
                                            4774 *           r_cb"
                                            4775 *      (FUNCTION #1960)
                                            4776 *
00000000                00000000 000000A8   4777 @AUTO#rd_kafka_metadata_cache_evict_tmr_cb DSECT
00000000                                    4778          DS    XL168
                                            4779 *
000031C8                00000000 00005E8C   4780 @CODE    CSECT
                                            4781 *
                                            4782 *
                                            4783 *
                                            4784 * ....... start of rd_kafka_metadata_cache_evict
000031C8                                    4785 @LNAME1959 DS  0H
000031C8 0000001D                           4786          DC    X'0000001D'
000031CC 99846D9281869281                   4787          DC    C'rd_kafka_metadata_cache_evict'
000031E9 00                                 4788          DC    X'00'
                                            4789 rd_kafka_metadata_cache_evict DCCPRLG CINDEX=1959,BASER=12,FRAME=248,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1959
                                            4790          macro
                                            4791          dccextrn &m
                                            4792          gblc    &$dccext(1000)
                                            4793          gbla    &$dccexti
                                            4794          lcla    &i
                                            4795 &$dccext(&$dccexti+1) setc    '&m'
                                            4796 &i       seta    1
                                            4797 .loop    aif    (&i gt &$dccexti).around
                                            4798          aif    ('&$dccext(&i)' eq '&m').getout
                                            4799 &i       seta    &i+1
                                            4800          ago     .loop
                                            4801 .around  anop
                                            4802 &$dccexti seta &$dccexti+1
                                            4803          extrn  &m
                                            4804 .getout  anop
                                            4805          mend
000031F0                                    4806+$eye0105    ds    0d                                                    02-DCCCA
000031F0 C4C3C3                             4807+         dc cl3'DCC'                                                    02-DCCCA
000031F3 01                                 4808+         dc xl1'01' format one                                          02-DCCCA
000031F4 00000000                           4809+         dc a(0)                                                        02-DCCCA
000031F8 0000000000003262                   4810+         dc ad(@PER_1959)                                               02-DCCCA
00003200 00000000000000F8                   4811+         dc ad(248)                                                     02-DCCCA
00003208 0000000000000000                   4812+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  100 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003210 0000000000001000                   4813+         dc ad(4096)                                                    02-DCCCA
00003218 20                                 4814+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003219 03                                 4815+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000321A 03                                 4816+         dc al1(3)                                                      02-DCCCA
0000321B 08                                 4817+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000321C 00                                 4818+         dc bl.8'00000000'                                              02-DCCCA
0000321D 000000                             4819+         dc al3(0)                                                      02-DCCCA
00003220 00000000000031C8                   4820+         dc ad(@LNAME1959)                                              02-DCCCA
00003228                                    4821+         ds 0d                                                          02-DCCCA
00003228 00000000000031F0                   4822+         dc ad($eye0105)                                                02-DCCCA
00003230 0000000000000000                   4823+         dc ad(0)                                                       02-DCCCA
00003238                                    4824+         ds    0d                                                       01-DCCPR
00003238                                    4825+rd_kafka_metadata_cache_evict ds 0d                                     01-DCCPR
00003238                                    4826+@REGION_1959_1 ds 0h                                                    01-DCCPR
00003238 EBEC D008 0024          00000008   4827+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000323E E3E0 D088 0004          00000088   4828+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003244 E3C0 D090 0004          00000090   4829+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000324A B904 002E                          4830+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000324E E3B0 C018 0004          00000018   4831+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003254 A7EB 00F8               000000F8   4832+         aghi  14,248              increase by frame size               01-DCCPR
00003258 E3E0 C020 0021          00000020   4833+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000325E 4720 B020               00000020   4834+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003262                                    4835+@PER_1959 ds   0h                                                       01-DCCPR
00003262 EBDE 2080 0024          00000080   4836+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003268 E3C0 2090 0024          00000090   4837+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000326E B904 00D2                          4838+         lgr   13,2                set real frame pointer               01-DCCPR
00003272 B904 00CF                          4839+         lgr   12,15               set base reg                         01-DCCPR
                        00003238            4840+         using @REGION_1959_1,12                                        01-DCCPR
                                            4841 * ******* End of Prologue
                                            4842 * *
                                            4843 * ***           int cnt = 0;
00003276 E330 1000 0004          00000000   4844          LG    3,0(0,1)    ; rk
0000327C A728 0000               00000000   4845          LHI   2,0         ; 0
                                            4846 * ***           rd_ts_t now = rd_clock();
00003280 E3F0 C060 0004          00003298   4847          LG    15,@lit_1959_144 ; rd_clock
00003286                                    4848 @@gen_label222 DS    0H
00003286 05EF                               4849          BALR  14,15
00003288                                    4850 @@gen_label223 DS    0H
00003288 B904 004F                          4851          LGR   4,15
                                            4852 * ***           struct rd_kafka_metadata_cache_entry *rkmce;
                                            4853 * ***
                                            4854 * ***           while ((rkmce = ((&rk->rk_metadata_cache.rkmc_expiry)-\
                                            4855 * >tqh_first)) &&
0000328C 47F0 C0C2               000032FA   4856          B     @L646
00003290                                    4857          DS    0D
00003290 000000F8                           4858 @FRAMESIZE_1959 DC F'248'
00003294 00000000
00003298 0000000000000430                   4859 @lit_1959_144 DC AD(rd_clock)
000032A0 0000000000002D40                   4860 @lit_1959_145 DC AD(rd_kafka_metadata_cache_delete)
000032A8 0000000000000000                   4861 @lit_1959_148 DC AD(rd_kafka_timer_start0)
000032B0 00000000000030D8                   4862 @lit_1959_147 DC AD(rd_kafka_metadata_cache_evict_tmr_cb)
000032B8 0000000000000000                   4863 @lit_1959_150 DC AD(rd_kafka_timer_stop)
                                                                                                                           Page  101 
  Active Usings: @REGION_1959_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000032C0 0000000000000000                   4864 @lit_1959_152 DC AD(rd_kafka_log0)
000032C8 0000000000006076                   4865 @lit_1959_151 DC AD(@strings@)
000032D0 00000000000053C8                   4866 @lit_1959_153 DC AD(rd_kafka_metadata_cache_propagate_changes)
000032D8                                    4867 @L645    DS    0H
                                            4868 * ***                   rd_kafka_metadata_cache_delete(rk, rkmce, 1);
000032D8 E330 D0B0 0024          000000B0   4869          STG   3,176(0,13)
000032DE E3F0 D0B8 0024          000000B8   4870          STG   15,184(0,13)
000032E4 E548 D0C0 0001          000000C0   4871          MVGHI 192(13),1
000032EA 4110 D0B0               000000B0   4872          LA    1,176(0,13)
000032EE E3F0 C068 0004          000032A0   4873          LG    15,@lit_1959_145 ; rd_kafka_metadata_cache_delete
000032F4                                    4874 @@gen_label224 DS    0H
000032F4 05EF                               4875          BALR  14,15
000032F6                                    4876 @@gen_label225 DS    0H
                                            4877 * ***                   cnt++;
000032F6 A72A 0001               00000001   4878          AHI   2,1
                                            4879 * ***           }
000032FA                                    4880 @L646    DS    0H
000032FA E3F0 3AF8 0004          00000AF8   4881          LG    15,2808(0,3) ; offset of rkmc_expiry in rd_kafka_metadat*
                                                                a_cache
00003300 B902 001F                          4882          LTGR  1,15
00003304 4780 C0DE               00003316   4883          BZ    @L647
                                            4884 * ***                  rkmce->rkmce_ts_expires <= now) {
00003308 E310 F030 0004          00000030   4885          LG    1,48(0,15)  ; offset of rkmce_ts_expires in rd_kafka_met*
                                                                adata_cache_entry
0000330E B920 0014                          4886          CGR   1,4
00003312 47D0 C0A0               000032D8   4887          BNH   @L645
00003316                                    4888 @L647    DS    0H
                                            4889 * ***
                                            4890 * ***           if (rkmce)
00003316 B902 001F                          4891          LTGR  1,15
0000331A 4780 C13C               00003374   4892          BZ    @L648
                                            4893 * ***                   rd_kafka_timer_start0(&rk->rk_timers,&rk->rk_m\
                                            4894 * etadata_cache.rkmc_expiry_tmr,rkmce->rkmce_ts_expires - now,0,1,rd_k\
                                            4895 * afka_metadata_cache_evict_tmr_cb,rk);
0000331E A719 1010               00001010   4896          LGHI  1,4112      ; 4112
00003322 4111 3000               00000000   4897          LA    1,0(1,3)
00003326 E310 D0B0 0024          000000B0   4898          STG   1,176(0,13)
0000332C 4110 3B08               00000B08   4899          LA    1,2824(0,3)
00003330 E310 D0B8 0024          000000B8   4900          STG   1,184(0,13)
00003336 E3F0 F030 0004          00000030   4901          LG    15,48(0,15) ; offset of rkmce_ts_expires in rd_kafka_met*
                                                                adata_cache_entry
0000333C B909 00F4                          4902          SGR   15,4
00003340 E3F0 D0C0 0024          000000C0   4903          STG   15,192(0,13)
00003346 D707 D0C8 D0C8 000000C8 000000C8   4904          XC    200(8,13),200(13)
0000334C E548 D0D0 0001          000000D0   4905          MVGHI 208(13),1
00003352 E3F0 C078 0004          000032B0   4906          LG    15,@lit_1959_147 ; rd_kafka_metadata_cache_evict_tmr_cb
00003358 E3F0 D0D8 0024          000000D8   4907          STG   15,216(0,13)
0000335E E330 D0E0 0024          000000E0   4908          STG   3,224(0,13)
00003364 4110 D0B0               000000B0   4909          LA    1,176(0,13)
00003368 E3F0 C070 0004          000032A8   4910          LG    15,@lit_1959_148 ; rd_kafka_timer_start0
0000336E                                    4911 @@gen_label229 DS    0H
0000336E 05EF                               4912          BALR  14,15
                                                                                                                           Page  102 
  Active Usings: @REGION_1959_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003370                                    4913 @@gen_label230 DS    0H
00003370 47F0 C166               0000339E   4914          B     @L650
                                            4915 * ***
                                            4916 * ***
                                            4917 * ***
                                            4918 * ***
                                            4919 * ***           else
00003374                                    4920 @L648    DS    0H
                                            4921 * ***                   rd_kafka_timer_stop(&rk->rk_timers,
                                            4922 * ***                                       &rk->rk_metadata_cache.rkm\
                                            4923 * c_expiry_tmr, 1);
00003374 A7F9 1010               00001010   4924          LGHI  15,4112     ; 4112
00003378 41FF 3000               00000000   4925          LA    15,0(15,3)
0000337C E3F0 D0B0 0024          000000B0   4926          STG   15,176(0,13)
00003382 41F0 3B08               00000B08   4927          LA    15,2824(0,3)
00003386 E3F0 D0B8 0024          000000B8   4928          STG   15,184(0,13)
0000338C E548 D0C0 0001          000000C0   4929          MVGHI 192(13),1
00003392 4110 D0B0               000000B0   4930          LA    1,176(0,13)
00003396 E3F0 C080 0004          000032B8   4931          LG    15,@lit_1959_150 ; rd_kafka_timer_stop
0000339C                                    4932 @@gen_label231 DS    0H
0000339C 05EF                               4933          BALR  14,15
0000339E                                    4934 @@gen_label232 DS    0H
0000339E                                    4935 @L649    DS    0H
                                            4936 * ***
                                            4937 * ***           do { if ((((rk)->rk_conf.debug & (0x8)))) rd_kafka_log\
                                            4938 * 0(&rk->rk_conf,rk,((void *)0), 7,(0x8), "METADATA","Expired %d entri\
                                            4939 * es from metadata cache " "(%d entries remain)", cnt, rk->rk_metadata\
                                            4940 * _cache.rkmc_cnt); } while (0);
0000339E                                    4941 @L650    DS    0H
0000339E 9108 3323      00000323 00000008   4942          TM    803(3),8
000033A2 4780 C1CC               00003404   4943          BZ    @L653
000033A6 41F0 3210               00000210   4944          LA    15,528(0,3)
000033AA E3F0 D0B0 0024          000000B0   4945          STG   15,176(0,13)
000033B0 E330 D0B8 0024          000000B8   4946          STG   3,184(0,13)
000033B6 D707 D0C0 D0C0 000000C0 000000C0   4947          XC    192(8,13),192(13)
000033BC E548 D0C8 0007          000000C8   4948          MVGHI 200(13),7
000033C2 E548 D0D0 0008          000000D0   4949          MVGHI 208(13),8
000033C8 E3F0 C090 0004          000032C8   4950          LG    15,@lit_1959_151
000033CE 4110 F1C2               000001C2   4951          LA    1,450(0,15)
000033D2 E310 D0D8 0024          000000D8   4952          STG   1,216(0,13)
000033D8 41F0 F1CC               000001CC   4953          LA    15,460(0,15)
000033DC E3F0 D0E0 0024          000000E0   4954          STG   15,224(0,13)
000033E2 B914 00F2                          4955          LGFR  15,2
000033E6 E3F0 D0E8 0024          000000E8   4956          STG   15,232(0,13)
000033EC E3F0 3B40 0014          00000B40   4957          LGF   15,2880(0,3)
000033F2 E3F0 D0F0 0024          000000F0   4958          STG   15,240(0,13)
000033F8 4110 D0B0               000000B0   4959          LA    1,176(0,13)
000033FC E3F0 C088 0004          000032C0   4960          LG    15,@lit_1959_152 ; rd_kafka_log0
00003402                                    4961 @@gen_label234 DS    0H
00003402 05EF                               4962          BALR  14,15
00003404                                    4963 @@gen_label235 DS    0H
00003404                                    4964 @L653    DS    0H
                                                                                                                           Page  103 
  Active Usings: @REGION_1959_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4965 * ***
                                            4966 * ***
                                            4967 * ***
                                            4968 * ***
                                            4969 * ***           if (cnt)
00003404 1222                               4970          LTR   2,2
00003406 4780 C1E4               0000341C   4971          BZ    @L654
                                            4972 * ***                   rd_kafka_metadata_cache_propagate_changes(rk);
0000340A E330 D0B0 0024          000000B0   4973          STG   3,176(0,13)
00003410 4110 D0B0               000000B0   4974          LA    1,176(0,13)
00003414 E3F0 C098 0004          000032D0   4975          LG    15,@lit_1959_153 ; rd_kafka_metadata_cache_propagate_cha*
                                                                nges
0000341A                                    4976 @@gen_label237 DS    0H
0000341A 05EF                               4977          BALR  14,15
0000341C                                    4978 @@gen_label238 DS    0H
0000341C                                    4979 @L654    DS    0H
                                            4980 * ***
                                            4981 * ***           return cnt;
0000341C B914 00F2                          4982          LGFR  15,2
                                            4983 * ***   }
                                            4984 * * **** Start of Epilogue
                                            4985          DCCEPIL
00003420                                    4986+         ds 0h                                                          01-DCCEP
                                            4987+* Epilog
00003420 D707 D088 D088 00000088 00000088   4988+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003426 E3D0 D080 0004          00000080   4989+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000342C E3C0 D090 0004          00000090   4990+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003432 E3B0 C018 0004          00000018   4991+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003438 E3C0 B010 0021          00000010   4992+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000343E E3E0 D008 0004          00000008   4993+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003444 EB1C D020 0004          00000020   4994+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000344A 078E                               4995+         bcr 8,14                if same dsab, just return              01-DCCEP
0000344C E3F0 D010 0024          00000010   4996+         stg 15,16(0,13)         save return code                       01-DCCEP
00003452 E300 D018 0024          00000018   4997+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003458 E3F0 D090 0004          00000090   4998+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000345E E3F0 F018 0004          00000018   4999+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003464 47F0 F040               00000040   5000+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5001+* End of Epilog
                                            5002 * * **** End of Epilogue
                                            5003          DROP  12
                                            5004 *
                                            5005 *   DSECT for automatic variables in "rd_kafka_metadata_cache_evict"
                                            5006 *      (FUNCTION #1959)
                                            5007 *
00000000                00000000 000000B0   5008 @AUTO#rd_kafka_metadata_cache_evict DSECT
00000000                                    5009          DS    XL168
000000A8                                    5010 rd_kafka_metadata_cache_evict#now#0 DS 8XL1 ; now
000000B0                000000B0 000000A8   5011          ORG   @AUTO#rd_kafka_metadata_cache_evict+168
000000A8                                    5012 rd_kafka_metadata_cache_evict#cnt#0 DS 1F ; cnt
                                            5013 *
00003468                00000000 00005E8C   5014 @CODE    CSECT
                                            5015 *
                                                                                                                           Page  104 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5016 *
                                            5017 *
                                            5018 * ....... start of rd_kafka_metadata_cache_find
                                            5019 rd_kafka_metadata_cache_find ALIAS X'99846D92818692816D9485A3818481A381*
                                                                6D83818388856D86899584'
00003468                                    5020 @LNAME1635 DS  0H
00003468 0000001C                           5021          DC    X'0000001C'
0000346C 99846D9281869281                   5022          DC    C'rd_kafka_metadata_cache_find'
00003488 00                                 5023          DC    X'00'
                                            5024 rd_kafka_metadata_cache_find DCCPRLG CINDEX=1635,BASER=12,FRAME=288,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1635
                                            5025          macro
                                            5026          dccextrn &m
                                            5027          gblc    &$dccext(1000)
                                            5028          gbla    &$dccexti
                                            5029          lcla    &i
                                            5030 &$dccext(&$dccexti+1) setc    '&m'
                                            5031 &i       seta    1
                                            5032 .loop    aif    (&i gt &$dccexti).around
                                            5033          aif    ('&$dccext(&i)' eq '&m').getout
                                            5034 &i       seta    &i+1
                                            5035          ago     .loop
                                            5036 .around  anop
                                            5037 &$dccexti seta &$dccexti+1
                                            5038          extrn  &m
                                            5039 .getout  anop
                                            5040          mend
00003490                                    5041+$eye0108    ds    0d                                                    02-DCCCA
00003490 C4C3C3                             5042+         dc cl3'DCC'                                                    02-DCCCA
00003493 01                                 5043+         dc xl1'01' format one                                          02-DCCCA
00003494 00000000                           5044+         dc a(0)                                                        02-DCCCA
00003498 0000000000003502                   5045+         dc ad(@PER_1635)                                               02-DCCCA
000034A0 0000000000000120                   5046+         dc ad(288)                                                     02-DCCCA
000034A8 0000000000000000                   5047+         dc ad(0)                                                       02-DCCCA
000034B0 0000000000001000                   5048+         dc ad(4096)                                                    02-DCCCA
000034B8 20                                 5049+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000034B9 03                                 5050+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000034BA 03                                 5051+         dc al1(3)                                                      02-DCCCA
000034BB 08                                 5052+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000034BC 00                                 5053+         dc bl.8'00000000'                                              02-DCCCA
000034BD 000000                             5054+         dc al3(0)                                                      02-DCCCA
000034C0 0000000000003468                   5055+         dc ad(@LNAME1635)                                              02-DCCCA
000034C8                                    5056+         ds 0d                                                          02-DCCCA
000034C8 0000000000003490                   5057+         dc ad($eye0108)                                                02-DCCCA
000034D0 0000000000000000                   5058+         dc ad(0)                                                       02-DCCCA
000034D8                                    5059+         ds    0d                                                       01-DCCPR
                                            5060+         entry rd_kafka_metadata_cache_find                             01-DCCPR
000034D8                                    5061+rd_kafka_metadata_cache_find ds 0d                                      01-DCCPR
000034D8                                    5062+@REGION_1635_1 ds 0h                                                    01-DCCPR
000034D8 EBEC D008 0024          00000008   5063+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000034DE E3E0 D088 0004          00000088   5064+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000034E4 E3C0 D090 0004          00000090   5065+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page  105 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000034EA B904 002E                          5066+         lgr   2,14                copy addr of our savearea            01-DCCPR
000034EE E3B0 C018 0004          00000018   5067+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000034F4 A7EB 0120               00000120   5068+         aghi  14,288              increase by frame size               01-DCCPR
000034F8 E3E0 C020 0021          00000020   5069+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000034FE 4720 B020               00000020   5070+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003502                                    5071+@PER_1635 ds   0h                                                       01-DCCPR
00003502 EBDE 2080 0024          00000080   5072+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003508 E3C0 2090 0024          00000090   5073+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000350E B904 00D2                          5074+         lgr   13,2                set real frame pointer               01-DCCPR
00003512 B904 00CF                          5075+         lgr   12,15               set base reg                         01-DCCPR
                        000034D8            5076+         using @REGION_1635_1,12                                        01-DCCPR
00003516 B904 0021                          5077          LGR   2,1         ; ptr to parm area
                                            5078 * ******* End of Prologue
                                            5079 * *
                                            5080 * ***           struct rd_kafka_metadata_cache_entry skel, *rkmce;
                                            5081 * ***           skel.rkmce_mtopic.topic = (char *)topic;
0000351A E3F0 2008 0004          00000008   5082          LG    15,8(0,2)   ; topic
00003520 E3F0 D0E8 0024          000000E8   5083          STG   15,232(0,13) ; offset of rkmce_mtopic in rd_kafka_metada*
                                                                ta_cache_entry
                                            5084 * ***           rkmce = rd_avl_find(&rk->rk_metadata_cache.rkmc_avl, &\
                                            5085 * skel, 1);
00003526 E3F0 2000 0004          00000000   5086          LG    15,0(0,2)   ; rk
0000352C 41F0 FAA8               00000AA8   5087          LA    15,2728(0,15)
00003530 E3F0 D108 0024          00000108   5088          STG   15,264(0,13)
00003536 41F0 D0A8               000000A8   5089          LA    15,168(0,13)
0000353A E3F0 D110 0024          00000110   5090          STG   15,272(0,13)
00003540 E548 D118 0001          00000118   5091          MVGHI 280(13),1
00003546 4110 D108               00000108   5092          LA    1,264(0,13)
0000354A E3F0 C0B0 0004          00003588   5093          LG    15,@lit_1635_155 ; rd_avl_find
00003550                                    5094 @@gen_label239 DS    0H
00003550 05EF                               5095          BALR  14,15
00003552                                    5096 @@gen_label240 DS    0H
                                            5097 * ***           if (rkmce && (!valid || !(((rkmce)->rkmce_mtopic.err) \
                                            5098 * == RD_KAFKA_RESP_ERR__WAIT_CACHE || ((rkmce)->rkmce_mtopic.err) == R\
                                            5099 * D_KAFKA_RESP_ERR__NOENT)))
00003552 B902 001F                          5100          LTGR  1,15
00003556 4780 C0B8               00003590   5101          BZ    @L655
0000355A E310 2014 0012          00000014   5102          LT    1,20(0,2)   ; valid
00003560 4780 C0A0               00003578   5103          BZ    @L656
00003564 E55C F058 FF5C          00000058   5104          CHSI  88(15),-164
0000356A 4780 C0B8               00003590   5105          BE    @L655
0000356E E55C F058 FF64          00000058   5106          CHSI  88(15),-156
00003574 4780 C0B8               00003590   5107          BE    @L655
00003578                                    5108 @L656    DS    0H
                                            5109 * ***                   return rkmce;
00003578 47F0 C0BC               00003594   5110          B     @ret_lab_1635
00003580                                    5111          DS    0D
00003580 00000120                           5112 @FRAMESIZE_1635 DC F'288'
00003584 00000000
00003588 0000000000002BA8                   5113 @lit_1635_155 DC AD(rd_avl_find)
00003590                                    5114 @L655    DS    0H
                                            5115 * ***           return ((void *)0);
                                                                                                                           Page  106 
  Active Usings: @REGION_1635_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003590 A7F9 0000               00000000   5116          LGHI  15,0        ; 0
                                            5117 * ***   }
00003594                                    5118 @ret_lab_1635 DS 0H
                                            5119 * * **** Start of Epilogue
                                            5120          DCCEPIL
00003594                                    5121+         ds 0h                                                          01-DCCEP
                                            5122+* Epilog
00003594 D707 D088 D088 00000088 00000088   5123+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000359A E3D0 D080 0004          00000080   5124+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000035A0 E3C0 D090 0004          00000090   5125+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000035A6 E3B0 C018 0004          00000018   5126+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000035AC E3C0 B010 0021          00000010   5127+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000035B2 E3E0 D008 0004          00000008   5128+         lg  14,8(0,13)          load up return address                 01-DCCEP
000035B8 EB1C D020 0004          00000020   5129+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000035BE 078E                               5130+         bcr 8,14                if same dsab, just return              01-DCCEP
000035C0 E3F0 D010 0024          00000010   5131+         stg 15,16(0,13)         save return code                       01-DCCEP
000035C6 E300 D018 0024          00000018   5132+         stg 0,24(0,13)          save more return code                  01-DCCEP
000035CC E3F0 D090 0004          00000090   5133+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000035D2 E3F0 F018 0004          00000018   5134+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000035D8 47F0 F040               00000040   5135+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5136+* End of Epilog
                                            5137 * * **** End of Epilogue
                                            5138          DROP  12
                                            5139 *
                                            5140 *   DSECT for automatic variables in "rd_kafka_metadata_cache_find"
                                            5141 *      (FUNCTION #1635)
                                            5142 *
00000000                00000000 00000108   5143 @AUTO#rd_kafka_metadata_cache_find DSECT
00000000                                    5144          DS    XL168
000000A8                                    5145 rd_kafka_metadata_cache_find#skel#0 DS 96XL1 ; skel
                                            5146 *
000035DC                00000000 00005E8C   5147 @CODE    CSECT
                                            5148 *
                                            5149 *
                                            5150 *
                                            5151 * ....... start of rd_kafka_metadata_partition_id_cmp
                                            5152 rd_kafka_metadata_partition_id_cmp ALIAS X'99846D92818692816D9485A38184*
                                                                81A3816D978199A389A38996956D89846D839497'
000035DC                                    5153 @LNAME1628 DS  0H
000035DC 00000022                           5154          DC    X'00000022'
000035E0 99846D9281869281                   5155          DC    C'rd_kafka_metadata_partition_id_c'
00003600 9497                               5156          DC    C'mp'
00003602 00                                 5157          DC    X'00'
                                            5158 rd_kafka_metadata_partition_id_cmp DCCPRLG CINDEX=1628,BASER=12,FRAME=1*
                                                                76,SAVEAREA=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1628
                                            5159          macro
                                            5160          dccextrn &m
                                            5161          gblc    &$dccext(1000)
                                            5162          gbla    &$dccexti
                                            5163          lcla    &i
                                            5164 &$dccext(&$dccexti+1) setc    '&m'
                                            5165 &i       seta    1
                                                                                                                           Page  107 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5166 .loop    aif    (&i gt &$dccexti).around
                                            5167          aif    ('&$dccext(&i)' eq '&m').getout
                                            5168 &i       seta    &i+1
                                            5169          ago     .loop
                                            5170 .around  anop
                                            5171 &$dccexti seta &$dccexti+1
                                            5172          extrn  &m
                                            5173 .getout  anop
                                            5174          mend
00003608                                    5175+$eye0111    ds    0d                                                    02-DCCCA
00003608 C4C3C3                             5176+         dc cl3'DCC'                                                    02-DCCCA
0000360B 01                                 5177+         dc xl1'01' format one                                          02-DCCCA
0000360C 00000000                           5178+         dc a(0)                                                        02-DCCCA
00003610 0000000000000000                   5179+         dc ad(0)                                                       02-DCCCA
00003618 00000000000000B0                   5180+         dc ad(176)                                                     02-DCCCA
00003620 0000000000000000                   5181+         dc ad(0)                                                       02-DCCCA
00003628 0000000000001000                   5182+         dc ad(4096)                                                    02-DCCCA
00003630 20                                 5183+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003631 03                                 5184+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003632 03                                 5185+         dc al1(3)                                                      02-DCCCA
00003633 08                                 5186+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003634 00                                 5187+         dc bl.8'00000000'                                              02-DCCCA
00003635 000000                             5188+         dc al3(0)                                                      02-DCCCA
00003638 00000000000035DC                   5189+         dc ad(@LNAME1628)                                              02-DCCCA
00003640                                    5190+         ds 0d                                                          02-DCCCA
00003640 0000000000003608                   5191+         dc ad($eye0111)                                                02-DCCCA
00003648 0000000000000000                   5192+         dc ad(0)                                                       02-DCCCA
00003650                                    5193+         ds    0d                                                       01-DCCPR
                                            5194+         entry rd_kafka_metadata_partition_id_cmp                       01-DCCPR
00003650                                    5195+rd_kafka_metadata_partition_id_cmp ds 0d                                01-DCCPR
00003650                                    5196+@REGION_1628_1 ds 0h                                                    01-DCCPR
00003650 EBEC D008 0024          00000008   5197+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003656 B904 00CF                          5198+         lgr   12,15               set base reg                         01-DCCPR
                        00003650            5199+         using @REGION_1628_1,12                                        01-DCCPR
                                            5200 * ******* End of Prologue
                                            5201 * *
                                            5202 * ***           const rd_kafka_metadata_partition_t *a = _a, *b = _b;
0000365A E3F0 1000 0004          00000000   5203          LG    15,0(0,1)   ; _a
00003660 E310 1008 0004          00000008   5204          LG    1,8(0,1)    ; _b
                                            5205 * ***           return (int)((a->id) < (b->id) ? -1 : ((a->id) > (b->i\
                                            5206 * d)));
00003666 5820 F000               00000000   5207          L     2,0(0,15)   ; a
0000366A 5920 1000               00000000   5208          C     2,0(0,1)
0000366E 47B0 C02A               0000367A   5209          BNL   @L657
00003672 A7F8 FFFF               0000FFFF   5210          LHI   15,-1       ; -1
00003676 47F0 C042               00003692   5211          B     @L658
0000367A                                    5212 @L657    DS    0H
0000367A 58F0 F000               00000000   5213          L     15,0(0,15)  ; a
0000367E 59F0 1000               00000000   5214          C     15,0(0,1)
00003682 47D0 C03E               0000368E   5215          BNH   @@gen_label246
00003686 A7F8 0001               00000001   5216          LHI   15,1
0000368A 47F0 C042               00003692   5217          B     @@gen_label247
                                                                                                                           Page  108 
  Active Usings: @REGION_1628_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000368E                                    5218 @@gen_label246 DS 0H
0000368E A7F8 0000               00000000   5219          LHI   15,0
00003692                                    5220 @@gen_label247 DS 0H
00003692                                    5221 @L658    DS    0H
00003692 B914 00FF                          5222          LGFR  15,15
                                            5223 * ***   }
                                            5224 * * **** Start of Epilogue
                                            5225          DCCEPIL
00003696                                    5226+         ds 0h                                                          01-DCCEP
                                            5227+* Epilog
                                            5228+* Epilog
00003696 E3E0 D008 0004          00000008   5229+         lg    14,8(,13) restore the reg                                01-DCCEP
0000369C EB1C D020 0004          00000020   5230+         lmg   1,12,32(13)                                              01-DCCEP
000036A2 07FE                               5231+         br   14                                                        01-DCCEP
                                            5232+* End of Epilog
                                            5233 * * **** End of Epilogue
                                            5234          DROP  12
                                            5235 *
                                            5236 *   DSECT for automatic variables in "rd_kafka_metadata_partition_id_c
                                            5237 *           mp"
                                            5238 *      (FUNCTION #1628)
                                            5239 *
00000000                00000000 000000A8   5240 @AUTO#rd_kafka_metadata_partition_id_cmp DSECT
00000000                                    5241          DS    XL168
                                            5242 *
000036A4                00000000 00005E8C   5243 @CODE    CSECT
                                            5244 *
                                            5245 *
                                            5246 *
                                            5247 * ....... start of rd_kafka_metadata_cache_insert
000036A4                                    5248 @LNAME1961 DS  0H
000036A4 0000001E                           5249          DC    X'0000001E'
000036A8 99846D9281869281                   5250          DC    C'rd_kafka_metadata_cache_insert'
000036C6 00                                 5251          DC    X'00'
                                            5252 rd_kafka_metadata_cache_insert DCCPRLG CINDEX=1961,BASER=12,FRAME=240,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1961
                                            5253          macro
                                            5254          dccextrn &m
                                            5255          gblc    &$dccext(1000)
                                            5256          gbla    &$dccexti
                                            5257          lcla    &i
                                            5258 &$dccext(&$dccexti+1) setc    '&m'
                                            5259 &i       seta    1
                                            5260 .loop    aif    (&i gt &$dccexti).around
                                            5261          aif    ('&$dccext(&i)' eq '&m').getout
                                            5262 &i       seta    &i+1
                                            5263          ago     .loop
                                            5264 .around  anop
                                            5265 &$dccexti seta &$dccexti+1
                                            5266          extrn  &m
                                            5267 .getout  anop
                                            5268          mend
                                                                                                                           Page  109 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000036C8                                    5269+$eye0114    ds    0d                                                    02-DCCCA
000036C8 C4C3C3                             5270+         dc cl3'DCC'                                                    02-DCCCA
000036CB 01                                 5271+         dc xl1'01' format one                                          02-DCCCA
000036CC 00000000                           5272+         dc a(0)                                                        02-DCCCA
000036D0 000000000000373A                   5273+         dc ad(@PER_1961)                                               02-DCCCA
000036D8 00000000000000F0                   5274+         dc ad(240)                                                     02-DCCCA
000036E0 0000000000000000                   5275+         dc ad(0)                                                       02-DCCCA
000036E8 0000000000001000                   5276+         dc ad(4096)                                                    02-DCCCA
000036F0 20                                 5277+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000036F1 03                                 5278+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000036F2 03                                 5279+         dc al1(3)                                                      02-DCCCA
000036F3 08                                 5280+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000036F4 00                                 5281+         dc bl.8'00000000'                                              02-DCCCA
000036F5 000000                             5282+         dc al3(0)                                                      02-DCCCA
000036F8 00000000000036A4                   5283+         dc ad(@LNAME1961)                                              02-DCCCA
00003700                                    5284+         ds 0d                                                          02-DCCCA
00003700 00000000000036C8                   5285+         dc ad($eye0114)                                                02-DCCCA
00003708 0000000000000000                   5286+         dc ad(0)                                                       02-DCCCA
00003710                                    5287+         ds    0d                                                       01-DCCPR
00003710                                    5288+rd_kafka_metadata_cache_insert ds 0d                                    01-DCCPR
00003710                                    5289+@REGION_1961_1 ds 0h                                                    01-DCCPR
00003710 EBEC D008 0024          00000008   5290+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003716 E3E0 D088 0004          00000088   5291+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000371C E3C0 D090 0004          00000090   5292+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003722 B904 002E                          5293+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003726 E3B0 C018 0004          00000018   5294+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000372C A7EB 00F0               000000F0   5295+         aghi  14,240              increase by frame size               01-DCCPR
00003730 E3E0 C020 0021          00000020   5296+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003736 4720 B020               00000020   5297+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000373A                                    5298+@PER_1961 ds   0h                                                       01-DCCPR
0000373A EBDE 2080 0024          00000080   5299+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003740 E3C0 2090 0024          00000090   5300+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003746 B904 00D2                          5301+         lgr   13,2                set real frame pointer               01-DCCPR
0000374A B904 00CF                          5302+         lgr   12,15               set base reg                         01-DCCPR
                        00003710            5303+         using @REGION_1961_1,12                                        01-DCCPR
0000374E B904 0051                          5304          LGR   5,1         ; ptr to parm area
                                            5305 * ******* End of Prologue
                                            5306 * *
00003752 EB23 5000 0004          00000000   5307          LMG   2,3,0(5)    ; rk
                                            5308 * ***           struct rd_kafka_metadata_cache_entry *rkmce, *old;
                                            5309 * ***           size_t topic_len;
                                            5310 * ***           rd_tmpabuf_t tbuf;
                                            5311 * ***           int i;
                                            5312 * ***
                                            5313 * ***
                                            5314 * ***   # 214 "C:\asgkafka\librdkafka\src\rdkafka_metadata_cache.c"
                                            5315 * ***           topic_len = __strlen(mtopic->topic) + 1;
00003758 E3F0 3000 0004          00000000   5316          LG    15,0(0,3)
0000375E B904 001F                          5317          LGR   1,15
00003762 A709 0000               00000000   5318          LGHI  0,0
00003766                                    5319 @@gen_label248 DS 0H
00003766 B25E 000F                          5320          SRST  0,15
                                                                                                                           Page  110 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000376A 4710 C056               00003766   5321          BC  1,@@gen_label248
0000376E B90B 0001                          5322          SLGR  0,1
00003772 A70B 0001               00000001   5323          AGHI  0,1
                                            5324 * ***           rd_tmpabuf_new(&tbuf,
                                            5325 * ***                          (((sizeof(*rkmce)) + ((8) - 1)) & ~(8-1\
                                            5326 * )) +
                                            5327 * ***                          1);
00003776 41F0 D0A8               000000A8   5328          LA    15,168(0,13)
0000377A E3F0 D0C8 0024          000000C8   5329          STG   15,200(0,13)
                                            5330 * ***                          (((topic_len) + ((8) - 1)) & ~(8-1)) +
                                            5331 * ***                          (mtopic->partition_cnt *
                                            5332 * ***                           (((sizeof(*mtopic->partitions)) + ((8)\
                                            5333 *  - 1)) & ~(8-1))),
00003780 A70B 0007               00000007   5334          AGHI  0,7
00003784 A507 FFF8               0000FFF8   5335          NILL  0,65528
00003788 A70B 0060               00000060   5336          AGHI  0,96
0000378C E3F0 3008 0014          00000008   5337          LGF   15,8(0,3)
00003792 EB1F 0002 000D          00000002   5338          SLLG  1,15,2(0)   ;   .
00003798 B90A 001F                          5339          ALGR  1,15        ;   .
0000379C EB11 0003 000D          00000003   5340          SLLG  1,1,3(0)    ;   .
000037A2 B90A 0001                          5341          ALGR  0,1
000037A6 E300 D0D0 0024          000000D0   5342          STG   0,208(0,13)
000037AC E548 D0D8 0001          000000D8   5343          MVGHI 216(13),1
000037B2 4110 D0C8               000000C8   5344          LA    1,200(0,13)
000037B6 E3F0 C188 0004          00003898   5345          LG    15,@lit_1961_159 ; rd_tmpabuf_new
000037BC                                    5346 @@gen_label249 DS    0H
000037BC 05EF                               5347          BALR  14,15
000037BE                                    5348 @@gen_label250 DS    0H
                                            5349 * ***
                                            5350 * ***           rkmce = rd_tmpabuf_alloc0(__FUNCTION__,222,&tbuf,sizeo\
                                            5351 * f(*rkmce));
000037BE E360 C198 0004          000038A8   5352          LG    6,@lit_1961_160
000037C4 41F0 61C6               000001C6   5353          LA    15,454(0,6)
000037C8 E3F0 D0C8 0024          000000C8   5354          STG   15,200(0,13)
000037CE E548 D0D0 00DE          000000D0   5355          MVGHI 208(13),222
000037D4 41F0 D0A8               000000A8   5356          LA    15,168(0,13)
000037D8 E3F0 D0D8 0024          000000D8   5357          STG   15,216(0,13)
000037DE E548 D0E0 0060          000000E0   5358          MVGHI 224(13),96
000037E4 4110 D0C8               000000C8   5359          LA    1,200(0,13)
000037E8 E3F0 C190 0004          000038A0   5360          LG    15,@lit_1961_161 ; rd_tmpabuf_alloc0
000037EE                                    5361 @@gen_label251 DS    0H
000037EE 05EF                               5362          BALR  14,15
000037F0                                    5363 @@gen_label252 DS    0H
000037F0 B904 004F                          5364          LGR   4,15
                                            5365 * ***
                                            5366 * ***           rkmce->rkmce_mtopic = *mtopic;
000037F4 D21F 4040 3000 00000040 00000000   5367          MVC   64(32,4),0(3)
                                            5368 * ***
                                            5369 * ***
                                            5370 * ***           rkmce->rkmce_mtopic.topic = rd_tmpabuf_write_str0(__FU\
                                            5371 * NCTION__, 227, &tbuf, mtopic->topic);
000037FA 41F0 61C6               000001C6   5372          LA    15,454(0,6)
                                                                                                                           Page  111 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000037FE E3F0 D0C8 0024          000000C8   5373          STG   15,200(0,13)
00003804 E548 D0D0 00E3          000000D0   5374          MVGHI 208(13),227
0000380A 41F0 D0A8               000000A8   5375          LA    15,168(0,13)
0000380E E3F0 D0D8 0024          000000D8   5376          STG   15,216(0,13)
00003814 E3F0 3000 0004          00000000   5377          LG    15,0(0,3)
0000381A E3F0 D0E0 0024          000000E0   5378          STG   15,224(0,13)
00003820 4110 D0C8               000000C8   5379          LA    1,200(0,13)
00003824 E3F0 C1A0 0004          000038B0   5380          LG    15,@lit_1961_162 ; rd_tmpabuf_write_str0
0000382A                                    5381 @@gen_label253 DS    0H
0000382A 05EF                               5382          BALR  14,15
0000382C                                    5383 @@gen_label254 DS    0H
0000382C E3F0 4040 0024          00000040   5384          STG   15,64(0,4)
                                            5385 * ***
                                            5386 * ***
                                            5387 * ***           rkmce->rkmce_mtopic.partitions =
                                            5388 * ***                   rd_tmpabuf_write0(__FUNCTION__, 231, &tbuf, mt\
                                            5389 * opic->partitions, mtopic->partition_cnt * sizeof(*mtopic->partitions\
                                            5390 * ));
00003832 41F0 61C6               000001C6   5391          LA    15,454(0,6)
00003836 E3F0 D0C8 0024          000000C8   5392          STG   15,200(0,13)
0000383C E548 D0D0 00E7          000000D0   5393          MVGHI 208(13),231
00003842 41F0 D0A8               000000A8   5394          LA    15,168(0,13)
00003846 E3F0 D0D8 0024          000000D8   5395          STG   15,216(0,13)
0000384C E3F0 3010 0004          00000010   5396          LG    15,16(0,3)
00003852 E3F0 D0E0 0024          000000E0   5397          STG   15,224(0,13)
00003858 E3F0 3008 0014          00000008   5398          LGF   15,8(0,3)
0000385E EB1F 0002 000D          00000002   5399          SLLG  1,15,2(0)   ;   .
00003864 B90A 001F                          5400          ALGR  1,15        ;   .
00003868 EB11 0003 000D          00000003   5401          SLLG  1,1,3(0)    ;   .
0000386E E310 D0E8 0024          000000E8   5402          STG   1,232(0,13)
00003874 4110 D0C8               000000C8   5403          LA    1,200(0,13)
00003878 E3F0 C1A8 0004          000038B8   5404          LG    15,@lit_1961_163 ; rd_tmpabuf_write0
0000387E                                    5405 @@gen_label255 DS    0H
0000387E 05EF                               5406          BALR  14,15
00003880                                    5407 @@gen_label256 DS    0H
00003880 E3F0 4050 0024          00000050   5408          STG   15,80(0,4)
                                            5409 * ***
                                            5410 * ***
                                            5411 * ***
                                            5412 * ***
                                            5413 * ***           for (i = 0 ; i < mtopic->partition_cnt ; i++) {
00003886 A7F8 0000               00000000   5414          LHI   15,0        ; 0
0000388A 47F0 C260               00003970   5415          B     @L660
00003890                                    5416          DS    0D
00003890 000000F0                           5417 @FRAMESIZE_1961 DC F'240'
00003894 00000000
00003898 0000000000001DC0                   5418 @lit_1961_159 DC AD(rd_tmpabuf_new)
000038A0 0000000000001F00                   5419 @lit_1961_161 DC AD(rd_tmpabuf_alloc0)
000038A8 0000000000005E90                   5420 @lit_1961_160 DC AD(@DATA)
000038B0 00000000000022D0                   5421 @lit_1961_162 DC AD(rd_tmpabuf_write_str0)
000038B8 0000000000002140                   5422 @lit_1961_163 DC AD(rd_tmpabuf_write0)
000038C0 0000000000000000                   5423 @lit_1961_168 DC AD(qsort)
                                                                                                                           Page  112 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000038C8 0000000000003650                   5424 @lit_1961_167 DC AD(rd_kafka_metadata_partition_id_cmp)
000038D0 00000000000028A0                   5425 @lit_1961_170 DC AD(rd_avl_insert)
000038D8 0000000000002D40                   5426 @lit_1961_171 DC AD(rd_kafka_metadata_cache_delete)
000038E0                                    5427 @L659    DS    0H
                                            5428 * ***                   rkmce->rkmce_mtopic.partitions[i].replicas = (\
                                            5429 * (void *)0);
000038E0 B914 001F                          5430          LGFR  1,15
000038E4 E360 4050 0004          00000050   5431          LG    6,80(0,4)   ; offset of partitions in rd_kafka_metadata_*
                                                                topic
000038EA EB71 0002 000D          00000002   5432          SLLG  7,1,2(0)    ;   .
000038F0 B90A 0071                          5433          ALGR  7,1         ;   .
000038F4 EB77 0003 000D          00000003   5434          SLLG  7,7,3(0)    ;   .
000038FA A719 0000               00000000   5435          LGHI  1,0         ; 0
000038FE E317 6010 0024          00000010   5436          STG   1,16(7,6)   ; offset of replicas in rd_kafka_metadata_pa*
                                                                rtition
                                            5437 * ***                   rkmce->rkmce_mtopic.partitions[i].replica_cnt \
                                            5438 * = 0;
00003904 B914 006F                          5439          LGFR  6,15
00003908 E370 4050 0004          00000050   5440          LG    7,80(0,4)   ; offset of partitions in rd_kafka_metadata_*
                                                                topic
0000390E EB86 0002 000D          00000002   5441          SLLG  8,6,2(0)    ;   .
00003914 B90A 0086                          5442          ALGR  8,6         ;   .
00003918 EB88 0003 000D          00000003   5443          SLLG  8,8,3(0)    ;   .
0000391E 4168 7000               00000000   5444          LA    6,0(8,7)
00003922 E54C 600C 0000          0000000C   5445          MVHI  12(6),0     ; offset of replica_cnt in rd_kafka_metadata*
                                                                _partition
                                            5446 * ***                   rkmce->rkmce_mtopic.partitions[i].isrs = ((voi\
                                            5447 * d *)0);
00003928 B914 006F                          5448          LGFR  6,15
0000392C E370 4050 0004          00000050   5449          LG    7,80(0,4)   ; offset of partitions in rd_kafka_metadata_*
                                                                topic
00003932 EB86 0002 000D          00000002   5450          SLLG  8,6,2(0)    ;   .
00003938 B90A 0086                          5451          ALGR  8,6         ;   .
0000393C EB88 0003 000D          00000003   5452          SLLG  8,8,3(0)    ;   .
00003942 E318 7020 0024          00000020   5453          STG   1,32(8,7)   ; offset of isrs in rd_kafka_metadata_partit*
                                                                ion
                                            5454 * ***                   rkmce->rkmce_mtopic.partitions[i].isr_cnt = 0;
00003948 B914 001F                          5455          LGFR  1,15
0000394C E360 4050 0004          00000050   5456          LG    6,80(0,4)   ; offset of partitions in rd_kafka_metadata_*
                                                                topic
00003952 EB71 0002 000D          00000002   5457          SLLG  7,1,2(0)    ;   .
00003958 B90A 0071                          5458          ALGR  7,1         ;   .
0000395C EB77 0003 000D          00000003   5459          SLLG  7,7,3(0)    ;   .
00003962 4117 6000               00000000   5460          LA    1,0(7,6)
00003966 E54C 1018 0000          00000018   5461          MVHI  24(1),0     ; offset of isr_cnt in rd_kafka_metadata_par*
                                                                tition
                                            5462 * ***           }
0000396C A7FA 0001               00000001   5463          AHI   15,1
00003970                                    5464 @L660    DS    0H
00003970 59F0 3008               00000008   5465          C     15,8(0,3)
00003974 4740 C1D0               000038E0   5466          BL    @L659
                                            5467 * ***
                                                                                                                           Page  113 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5468 * ***
                                            5469 * ***           qsort(rkmce->rkmce_mtopic.partitions,
                                            5470 * ***                 rkmce->rkmce_mtopic.partition_cnt,
                                            5471 * ***                 sizeof(*rkmce->rkmce_mtopic.partitions),
                                            5472 * ***                 rd_kafka_metadata_partition_id_cmp);
00003978 E3F0 4050 0004          00000050   5473          LG    15,80(0,4)
0000397E E3F0 D0C8 0024          000000C8   5474          STG   15,200(0,13)
00003984 E3F0 4048 0014          00000048   5475          LGF   15,72(0,4)
0000398A E3F0 D0D0 0024          000000D0   5476          STG   15,208(0,13)
00003990 E548 D0D8 0028          000000D8   5477          MVGHI 216(13),40
00003996 E3F0 C1B8 0004          000038C8   5478          LG    15,@lit_1961_167 ; rd_kafka_metadata_partition_id_cmp
0000399C E3F0 D0E0 0024          000000E0   5479          STG   15,224(0,13)
000039A2 4110 D0C8               000000C8   5480          LA    1,200(0,13)
000039A6 E3F0 C1B0 0004          000038C0   5481          LG    15,@lit_1961_168 ; qsort
000039AC                                    5482 @@gen_label258 DS    0H
000039AC 05EF                               5483          BALR  14,15
000039AE                                    5484 @@gen_label259 DS    0H
                                            5485 * ***
                                            5486 * ***           do {  (rkmce)->rkmce_link .tqe_next = (((void *)0)); (\
                                            5487 * rkmce)->rkmce_link .tqe_prev = (&rk->rk_metadata_cache.rkmc_expiry)-\
                                            5488 * >tqh_last; *(&rk->rk_metadata_cache.rkmc_expiry)->tqh_last = (rkmce)\
                                            5489 * ; (&rk->rk_metadata_cache.rkmc_expiry)->tqh_last = &(rkmce)->rkmce_l\
                                            5490 * ink .tqe_next; } while ( 0);
000039AE                                    5491 @L663    DS    0H
000039AE A7F9 0000               00000000   5492          LGHI  15,0        ; 0
000039B2 E3F0 4020 0024          00000020   5493          STG   15,32(0,4)  ; offset of rkmce_link in rd_kafka_metadata_*
                                                                cache_entry
000039B8 E3F0 2B00 0004          00000B00   5494          LG    15,2816(0,2) ; offset of tqh_last in 0000111
000039BE E3F0 4028 0024          00000028   5495          STG   15,40(0,4)  ; offset of tqe_prev in 0000110
000039C4 E3F0 2B00 0004          00000B00   5496          LG    15,2816(0,2) ; offset of tqh_last in 0000111
000039CA E340 F000 0024          00000000   5497          STG   4,0(0,15)
000039D0 41F0 4020               00000020   5498          LA    15,32(0,4)
000039D4 E3F0 2B00 0024          00000B00   5499          STG   15,2816(0,2) ; offset of tqh_last in 0000111
                                            5500 * ***
                                            5501 * ***           rk->rk_metadata_cache.rkmc_cnt++;
000039DA 58F0 2B40               00000B40   5502          L     15,2880(0,2)
000039DE A7FA 0001               00000001   5503          AHI   15,1
000039E2 50F0 2B40               00000B40   5504          ST    15,2880(0,2)
                                            5505 * ***           rkmce->rkmce_ts_expires = ts_expires;
000039E6 E3F0 5018 0004          00000018   5506          LG    15,24(0,5)  ; ts_expires
000039EC E3F0 4030 0024          00000030   5507          STG   15,48(0,4)  ; offset of rkmce_ts_expires in rd_kafka_met*
                                                                adata_cache_entry
                                            5508 * ***           rkmce->rkmce_ts_insert = now;
000039F2 E3F0 5010 0004          00000010   5509          LG    15,16(0,5)  ; now
000039F8 E3F0 4038 0024          00000038   5510          STG   15,56(0,4)  ; offset of rkmce_ts_insert in rd_kafka_meta*
                                                                data_cache_entry
                                            5511 * ***
                                            5512 * ***
                                            5513 * ***           old = rd_avl_insert(&rk->rk_metadata_cache.rkmc_avl, r\
                                            5514 * kmce, &(rkmce)->rkmce_avlnode);
000039FE 41F0 2AA8               00000AA8   5515          LA    15,2728(0,2)
00003A02 E3F0 D0C8 0024          000000C8   5516          STG   15,200(0,13)
                                                                                                                           Page  114 
  Active Usings: @REGION_1961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003A08 E340 D0D0 0024          000000D0   5517          STG   4,208(0,13)
00003A0E E340 D0D8 0024          000000D8   5518          STG   4,216(0,13)
00003A14 4110 D0C8               000000C8   5519          LA    1,200(0,13)
00003A18 E3F0 C1C0 0004          000038D0   5520          LG    15,@lit_1961_170 ; rd_avl_insert
00003A1E                                    5521 @@gen_label260 DS    0H
00003A1E 05EF                               5522          BALR  14,15
00003A20                                    5523 @@gen_label261 DS    0H
                                            5524 * ***
                                            5525 * ***           if (old)
00003A20 B902 001F                          5526          LTGR  1,15
00003A24 4780 C336               00003A46   5527          BZ    @L666
                                            5528 * ***                   rd_kafka_metadata_cache_delete(rk, old, 0);
00003A28 E320 D0C8 0024          000000C8   5529          STG   2,200(0,13)
00003A2E E3F0 D0D0 0024          000000D0   5530          STG   15,208(0,13)
00003A34 D707 D0D8 D0D8 000000D8 000000D8   5531          XC    216(8,13),216(13)
00003A3A 4110 D0C8               000000C8   5532          LA    1,200(0,13)
00003A3E E3F0 C1C8 0004          000038D8   5533          LG    15,@lit_1961_171 ; rd_kafka_metadata_cache_delete
00003A44                                    5534 @@gen_label263 DS    0H
00003A44 05EF                               5535          BALR  14,15
00003A46                                    5536 @@gen_label264 DS    0H
00003A46                                    5537 @L666    DS    0H
                                            5538 * ***
                                            5539 * ***
                                            5540 * ***
                                            5541 * ***           return rkmce;
00003A46 B904 00F4                          5542          LGR   15,4
                                            5543 * ***   }
                                            5544 * * **** Start of Epilogue
                                            5545          DCCEPIL
00003A4A                                    5546+         ds 0h                                                          01-DCCEP
                                            5547+* Epilog
00003A4A D707 D088 D088 00000088 00000088   5548+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003A50 E3D0 D080 0004          00000080   5549+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003A56 E3C0 D090 0004          00000090   5550+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003A5C E3B0 C018 0004          00000018   5551+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003A62 E3C0 B010 0021          00000010   5552+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003A68 E3E0 D008 0004          00000008   5553+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003A6E EB1C D020 0004          00000020   5554+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003A74 078E                               5555+         bcr 8,14                if same dsab, just return              01-DCCEP
00003A76 E3F0 D010 0024          00000010   5556+         stg 15,16(0,13)         save return code                       01-DCCEP
00003A7C E300 D018 0024          00000018   5557+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003A82 E3F0 D090 0004          00000090   5558+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003A88 E3F0 F018 0004          00000018   5559+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003A8E 47F0 F040               00000040   5560+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5561+* End of Epilog
                                            5562 * * **** End of Epilogue
                                            5563          DROP  12
                                            5564 *
                                            5565 *   DSECT for automatic variables in "rd_kafka_metadata_cache_insert"
                                            5566 *      (FUNCTION #1961)
                                            5567 *
00000000                00000000 000000C8   5568 @AUTO#rd_kafka_metadata_cache_insert DSECT
                                                                                                                           Page  115 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000000                                    5569          DS    XL168
000000A8                                    5570 rd_kafka_metadata_cache_insert#i#0 DS 1F ; i
000000AC                000000AC 000000A8   5571          ORG   @AUTO#rd_kafka_metadata_cache_insert+168
000000A8                                    5572 rd_kafka_metadata_cache_insert#tbuf#0 DS 32XL1 ; tbuf
000000C8                000000C8 000000A8   5573          ORG   @AUTO#rd_kafka_metadata_cache_insert+168
000000A8                                    5574 rd_kafka_metadata_cache_insert#topic_len#0 DS 8XL1 ; topic_len
                                            5575 *
00003A92                00000000 00005E8C   5576 @CODE    CSECT
                                            5577 *
                                            5578 *
                                            5579 *
                                            5580 * ....... start of rd_kafka_metadata_cache_purge
                                            5581 rd_kafka_metadata_cache_purge ALIAS X'99846D92818692816D9485A3818481A38*
                                                                16D83818388856D97A4998785'
00003A92                                    5582 @LNAME1645 DS  0H
00003A92 0000001D                           5583          DC    X'0000001D'
00003A96 99846D9281869281                   5584          DC    C'rd_kafka_metadata_cache_purge'
00003AB3 00                                 5585          DC    X'00'
                                            5586 rd_kafka_metadata_cache_purge DCCPRLG CINDEX=1645,BASER=12,FRAME=200,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1645
                                            5587          macro
                                            5588          dccextrn &m
                                            5589          gblc    &$dccext(1000)
                                            5590          gbla    &$dccexti
                                            5591          lcla    &i
                                            5592 &$dccext(&$dccexti+1) setc    '&m'
                                            5593 &i       seta    1
                                            5594 .loop    aif    (&i gt &$dccexti).around
                                            5595          aif    ('&$dccext(&i)' eq '&m').getout
                                            5596 &i       seta    &i+1
                                            5597          ago     .loop
                                            5598 .around  anop
                                            5599 &$dccexti seta &$dccexti+1
                                            5600          extrn  &m
                                            5601 .getout  anop
                                            5602          mend
00003AB8                                    5603+$eye0117    ds    0d                                                    02-DCCCA
00003AB8 C4C3C3                             5604+         dc cl3'DCC'                                                    02-DCCCA
00003ABB 01                                 5605+         dc xl1'01' format one                                          02-DCCCA
00003ABC 00000000                           5606+         dc a(0)                                                        02-DCCCA
00003AC0 0000000000003B2A                   5607+         dc ad(@PER_1645)                                               02-DCCCA
00003AC8 00000000000000C8                   5608+         dc ad(200)                                                     02-DCCCA
00003AD0 0000000000000000                   5609+         dc ad(0)                                                       02-DCCCA
00003AD8 0000000000001000                   5610+         dc ad(4096)                                                    02-DCCCA
00003AE0 20                                 5611+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003AE1 03                                 5612+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003AE2 03                                 5613+         dc al1(3)                                                      02-DCCCA
00003AE3 08                                 5614+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003AE4 00                                 5615+         dc bl.8'00000000'                                              02-DCCCA
00003AE5 000000                             5616+         dc al3(0)                                                      02-DCCCA
00003AE8 0000000000003A92                   5617+         dc ad(@LNAME1645)                                              02-DCCCA
00003AF0                                    5618+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  116 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003AF0 0000000000003AB8                   5619+         dc ad($eye0117)                                                02-DCCCA
00003AF8 0000000000000000                   5620+         dc ad(0)                                                       02-DCCCA
00003B00                                    5621+         ds    0d                                                       01-DCCPR
                                            5622+         entry rd_kafka_metadata_cache_purge                            01-DCCPR
00003B00                                    5623+rd_kafka_metadata_cache_purge ds 0d                                     01-DCCPR
00003B00                                    5624+@REGION_1645_1 ds 0h                                                    01-DCCPR
00003B00 EBEC D008 0024          00000008   5625+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003B06 E3E0 D088 0004          00000088   5626+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003B0C E3C0 D090 0004          00000090   5627+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003B12 B904 002E                          5628+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003B16 E3B0 C018 0004          00000018   5629+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003B1C A7EB 00C8               000000C8   5630+         aghi  14,200              increase by frame size               01-DCCPR
00003B20 E3E0 C020 0021          00000020   5631+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003B26 4720 B020               00000020   5632+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003B2A                                    5633+@PER_1645 ds   0h                                                       01-DCCPR
00003B2A EBDE 2080 0024          00000080   5634+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003B30 E3C0 2090 0024          00000090   5635+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003B36 B904 00D2                          5636+         lgr   13,2                set real frame pointer               01-DCCPR
00003B3A B904 00CF                          5637+         lgr   12,15               set base reg                         01-DCCPR
                        00003B00            5638+         using @REGION_1645_1,12                                        01-DCCPR
00003B3E B904 0041                          5639          LGR   4,1         ; ptr to parm area
                                            5640 * ******* End of Prologue
                                            5641 * *
00003B42 E320 4000 0004          00000000   5642          LG    2,0(0,4)    ; rk
                                            5643 * ***           struct rd_kafka_metadata_cache_entry *rkmce;
                                            5644 * ***           int was_empty = (((&rk->rk_metadata_cache.rkmc_expiry)\
                                            5645 * ->tqh_first) == (((void *)0)));
00003B48 E3F0 2AF8 0002          00000AF8   5646          LTG   15,2808(0,2) ; offset of rkmc_expiry in rd_kafka_metadat*
                                                                a_cache
00003B4E 4770 C088               00003B88   5647          BNE   @@gen_label265
00003B52 A738 0001               00000001   5648          LHI   3,1
00003B56 47F0 C08C               00003B8C   5649          B     @@gen_label266
00003B60                                    5650          DS    0D
00003B60 000000C8                           5651 @FRAMESIZE_1645 DC F'200'
00003B64 00000000
00003B68 0000000000002D40                   5652 @lit_1645_173 DC AD(rd_kafka_metadata_cache_delete)
00003B70 0000000000000000                   5653 @lit_1645_175 DC AD(rd_kafka_timer_stop)
00003B78 00000000000053C8                   5654 @lit_1645_176 DC AD(rd_kafka_metadata_cache_propagate_changes)
00003B80 0000000000000000                   5655 @lit_1645_177 DC AD(rd_list_clear)
00003B88                                    5656 @@gen_label265 DS 0H
00003B88 A738 0000               00000000   5657          LHI   3,0
00003B8C                                    5658 @@gen_label266 DS 0H
                                            5659 * ***
                                            5660 * ***           while ((rkmce = ((&rk->rk_metadata_cache.rkmc_expiry)-\
                                            5661 * >tqh_first)))
00003B8C 47F0 C0AE               00003BAE   5662          B     @L670
00003B90                                    5663 @L669    DS    0H
                                            5664 * ***                   rd_kafka_metadata_cache_delete(rk, rkmce, 1);
00003B90 E320 D0B0 0024          000000B0   5665          STG   2,176(0,13)
00003B96 E3F0 D0B8 0024          000000B8   5666          STG   15,184(0,13)
00003B9C E548 D0C0 0001          000000C0   5667          MVGHI 192(13),1
00003BA2 4110 D0B0               000000B0   5668          LA    1,176(0,13)
                                                                                                                           Page  117 
  Active Usings: @REGION_1645_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003BA6 E3F0 C068 0004          00003B68   5669          LG    15,@lit_1645_173 ; rd_kafka_metadata_cache_delete
00003BAC                                    5670 @@gen_label267 DS    0H
00003BAC 05EF                               5671          BALR  14,15
00003BAE                                    5672 @@gen_label268 DS    0H
00003BAE                                    5673 @L670    DS    0H
00003BAE E3F0 2AF8 0004          00000AF8   5674          LG    15,2808(0,2) ; offset of rkmc_expiry in rd_kafka_metadat*
                                                                a_cache
00003BB4 B902 001F                          5675          LTGR  1,15
00003BB8 4770 C090               00003B90   5676          BNZ   @L669
                                            5677 * ***
                                            5678 * ***           rd_kafka_timer_stop(&rk->rk_timers,
                                            5679 * ***                               &rk->rk_metadata_cache.rkmc_expiry\
                                            5680 * _tmr, 1);
00003BBC A7F9 1010               00001010   5681          LGHI  15,4112     ; 4112
00003BC0 41FF 2000               00000000   5682          LA    15,0(15,2)
00003BC4 E3F0 D0B0 0024          000000B0   5683          STG   15,176(0,13)
00003BCA 41F0 2B08               00000B08   5684          LA    15,2824(0,2)
00003BCE E3F0 D0B8 0024          000000B8   5685          STG   15,184(0,13)
00003BD4 E548 D0C0 0001          000000C0   5686          MVGHI 192(13),1
00003BDA 4110 D0B0               000000B0   5687          LA    1,176(0,13)
00003BDE E3F0 C070 0004          00003B70   5688          LG    15,@lit_1645_175 ; rd_kafka_timer_stop
00003BE4                                    5689 @@gen_label270 DS    0H
00003BE4 05EF                               5690          BALR  14,15
00003BE6                                    5691 @@gen_label271 DS    0H
                                            5692 * ***
                                            5693 * ***           if (!was_empty)
00003BE6 1233                               5694          LTR   3,3
00003BE8 4770 C0FE               00003BFE   5695          BNZ   @L671
                                            5696 * ***                   rd_kafka_metadata_cache_propagate_changes(rk);
00003BEC E320 D0B0 0024          000000B0   5697          STG   2,176(0,13)
00003BF2 4110 D0B0               000000B0   5698          LA    1,176(0,13)
00003BF6 E3F0 C078 0004          00003B78   5699          LG    15,@lit_1645_176 ; rd_kafka_metadata_cache_propagate_cha*
                                                                nges
00003BFC                                    5700 @@gen_label273 DS    0H
00003BFC 05EF                               5701          BALR  14,15
00003BFE                                    5702 @@gen_label274 DS    0H
00003BFE                                    5703 @L671    DS    0H
                                            5704 * ***
                                            5705 * ***           if (purge_observers)
00003BFE 9500 400F      0000000F 00000000   5706          CLI   15(4),0
00003C02 4780 C11C               00003C1C   5707          BE    @L672
                                            5708 * ***                   rd_list_clear(&rk->rk_metadata_cache.rkmc_obse\
                                            5709 * rvers);
00003C06 41F0 2B48               00000B48   5710          LA    15,2888(0,2)
00003C0A E3F0 D0B0 0024          000000B0   5711          STG   15,176(0,13)
00003C10 4110 D0B0               000000B0   5712          LA    1,176(0,13)
00003C14 E3F0 C080 0004          00003B80   5713          LG    15,@lit_1645_177 ; rd_list_clear
00003C1A                                    5714 @@gen_label276 DS    0H
00003C1A 05EF                               5715          BALR  14,15
00003C1C                                    5716 @@gen_label277 DS    0H
00003C1C                                    5717 @L672    DS    0H
                                            5718 * ***   }
                                                                                                                           Page  118 
  Active Usings: @REGION_1645_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003C1C                                    5719 @ret_lab_1645 DS 0H
                                            5720 * * **** Start of Epilogue
                                            5721          DCCEPIL
00003C1C                                    5722+         ds 0h                                                          01-DCCEP
                                            5723+* Epilog
00003C1C D707 D088 D088 00000088 00000088   5724+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003C22 E3D0 D080 0004          00000080   5725+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003C28 E3C0 D090 0004          00000090   5726+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003C2E E3B0 C018 0004          00000018   5727+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003C34 E3C0 B010 0021          00000010   5728+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003C3A E3E0 D008 0004          00000008   5729+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003C40 EB1C D020 0004          00000020   5730+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003C46 078E                               5731+         bcr 8,14                if same dsab, just return              01-DCCEP
00003C48 E3F0 D010 0024          00000010   5732+         stg 15,16(0,13)         save return code                       01-DCCEP
00003C4E E300 D018 0024          00000018   5733+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003C54 E3F0 D090 0004          00000090   5734+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003C5A E3F0 F018 0004          00000018   5735+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003C60 47F0 F040               00000040   5736+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5737+* End of Epilog
                                            5738 * * **** End of Epilogue
                                            5739          DROP  12
                                            5740 *
                                            5741 *   DSECT for automatic variables in "rd_kafka_metadata_cache_purge"
                                            5742 *      (FUNCTION #1645)
                                            5743 *
00000000                00000000 000000AC   5744 @AUTO#rd_kafka_metadata_cache_purge DSECT
00000000                                    5745          DS    XL168
000000A8                                    5746 rd_kafka_metadata_cache_purge#was_empty#0 DS 1F ; was_empty
                                            5747 *
00003C64                00000000 00005E8C   5748 @CODE    CSECT
                                            5749 *
                                            5750 *
                                            5751 *
                                            5752 * ....... start of rd_kafka_metadata_cache_expiry_start
                                            5753 rd_kafka_metadata_cache_expiry_start ALIAS X'99846D92818692816D9485A381*
                                                                8481A3816D83818388856D85A7978999A86DA2A38199A3'
00003C64                                    5754 @LNAME1631 DS  0H
00003C64 00000024                           5755          DC    X'00000024'
00003C68 99846D9281869281                   5756          DC    C'rd_kafka_metadata_cache_expiry_s'
00003C88 A38199A3                           5757          DC    C'tart'
00003C8C 00                                 5758          DC    X'00'
                                            5759 rd_kafka_metadata_cache_expiry_start DCCPRLG CINDEX=1631,BASER=12,FRAME*
                                                                =232,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1631
                                            5760          macro
                                            5761          dccextrn &m
                                            5762          gblc    &$dccext(1000)
                                            5763          gbla    &$dccexti
                                            5764          lcla    &i
                                            5765 &$dccext(&$dccexti+1) setc    '&m'
                                            5766 &i       seta    1
                                            5767 .loop    aif    (&i gt &$dccexti).around
                                            5768          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  119 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5769 &i       seta    &i+1
                                            5770          ago     .loop
                                            5771 .around  anop
                                            5772 &$dccexti seta &$dccexti+1
                                            5773          extrn  &m
                                            5774 .getout  anop
                                            5775          mend
00003C90                                    5776+$eye0120    ds    0d                                                    02-DCCCA
00003C90 C4C3C3                             5777+         dc cl3'DCC'                                                    02-DCCCA
00003C93 01                                 5778+         dc xl1'01' format one                                          02-DCCCA
00003C94 00000000                           5779+         dc a(0)                                                        02-DCCCA
00003C98 0000000000003D02                   5780+         dc ad(@PER_1631)                                               02-DCCCA
00003CA0 00000000000000E8                   5781+         dc ad(232)                                                     02-DCCCA
00003CA8 0000000000000000                   5782+         dc ad(0)                                                       02-DCCCA
00003CB0 0000000000001000                   5783+         dc ad(4096)                                                    02-DCCCA
00003CB8 20                                 5784+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003CB9 03                                 5785+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003CBA 03                                 5786+         dc al1(3)                                                      02-DCCCA
00003CBB 08                                 5787+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003CBC 00                                 5788+         dc bl.8'00000000'                                              02-DCCCA
00003CBD 000000                             5789+         dc al3(0)                                                      02-DCCCA
00003CC0 0000000000003C64                   5790+         dc ad(@LNAME1631)                                              02-DCCCA
00003CC8                                    5791+         ds 0d                                                          02-DCCCA
00003CC8 0000000000003C90                   5792+         dc ad($eye0120)                                                02-DCCCA
00003CD0 0000000000000000                   5793+         dc ad(0)                                                       02-DCCCA
00003CD8                                    5794+         ds    0d                                                       01-DCCPR
                                            5795+         entry rd_kafka_metadata_cache_expiry_start                     01-DCCPR
00003CD8                                    5796+rd_kafka_metadata_cache_expiry_start ds 0d                              01-DCCPR
00003CD8                                    5797+@REGION_1631_1 ds 0h                                                    01-DCCPR
00003CD8 EBEC D008 0024          00000008   5798+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003CDE E3E0 D088 0004          00000088   5799+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003CE4 E3C0 D090 0004          00000090   5800+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003CEA B904 002E                          5801+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003CEE E3B0 C018 0004          00000018   5802+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003CF4 A7EB 00E8               000000E8   5803+         aghi  14,232              increase by frame size               01-DCCPR
00003CF8 E3E0 C020 0021          00000020   5804+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003CFE 4720 B020               00000020   5805+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003D02                                    5806+@PER_1631 ds   0h                                                       01-DCCPR
00003D02 EBDE 2080 0024          00000080   5807+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003D08 E3C0 2090 0024          00000090   5808+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003D0E B904 00D2                          5809+         lgr   13,2                set real frame pointer               01-DCCPR
00003D12 B904 00CF                          5810+         lgr   12,15               set base reg                         01-DCCPR
                        00003CD8            5811+         using @REGION_1631_1,12                                        01-DCCPR
                                            5812 * ******* End of Prologue
                                            5813 * *
00003D16 E320 1000 0004          00000000   5814          LG    2,0(0,1)    ; rk
                                            5815 * ***           struct rd_kafka_metadata_cache_entry *rkmce;
                                            5816 * ***
                                            5817 * ***           if ((rkmce = ((&rk->rk_metadata_cache.rkmc_expiry)->tq\
                                            5818 * h_first)))
00003D1C E3F0 2AF8 0004          00000AF8   5819          LG    15,2808(0,2) ; offset of rkmc_expiry in rd_kafka_metadat*
                                                                a_cache
                                                                                                                           Page  120 
  Active Usings: @REGION_1631_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003D22 B902 001F                          5820          LTGR  1,15
00003D26 4780 C0AC               00003D84   5821          BZ    @L673
                                            5822 * ***                   rd_kafka_timer_start0(&rk->rk_timers,&rk->rk_m\
                                            5823 * etadata_cache.rkmc_expiry_tmr,rkmce->rkmce_ts_expires - rd_clock(),0\
                                            5824 * ,1,rd_kafka_metadata_cache_evict_tmr_cb,rk);
00003D2A E330 F030 0004          00000030   5825          LG    3,48(0,15)  ; offset of rkmce_ts_expires in rd_kafka_met*
                                                                adata_cache_entry
00003D30 E3F0 C100 0004          00003DD8   5826          LG    15,@lit_1631_179 ; rd_clock
00003D36                                    5827 @@gen_label279 DS    0H
00003D36 05EF                               5828          BALR  14,15
00003D38                                    5829 @@gen_label280 DS    0H
00003D38 B909 003F                          5830          SGR   3,15
00003D3C A7F9 1010               00001010   5831          LGHI  15,4112     ; 4112
00003D40 41FF 2000               00000000   5832          LA    15,0(15,2)
00003D44 E3F0 D0B0 0024          000000B0   5833          STG   15,176(0,13)
00003D4A 41F0 2B08               00000B08   5834          LA    15,2824(0,2)
00003D4E E3F0 D0B8 0024          000000B8   5835          STG   15,184(0,13)
00003D54 E330 D0C0 0024          000000C0   5836          STG   3,192(0,13)
00003D5A D707 D0C8 D0C8 000000C8 000000C8   5837          XC    200(8,13),200(13)
00003D60 E548 D0D0 0001          000000D0   5838          MVGHI 208(13),1
00003D66 E3F0 C110 0004          00003DE8   5839          LG    15,@lit_1631_181 ; rd_kafka_metadata_cache_evict_tmr_cb
00003D6C E3F0 D0D8 0024          000000D8   5840          STG   15,216(0,13)
00003D72 E320 D0E0 0024          000000E0   5841          STG   2,224(0,13)
00003D78 4110 D0B0               000000B0   5842          LA    1,176(0,13)
00003D7C E3F0 C108 0004          00003DE0   5843          LG    15,@lit_1631_182 ; rd_kafka_timer_start0
00003D82                                    5844 @@gen_label281 DS    0H
00003D82 05EF                               5845          BALR  14,15
00003D84                                    5846 @@gen_label282 DS    0H
00003D84                                    5847 @L673    DS    0H
                                            5848 * ***
                                            5849 * ***
                                            5850 * ***
                                            5851 * ***
                                            5852 * ***   }
00003D84                                    5853 @ret_lab_1631 DS 0H
                                            5854 * * **** Start of Epilogue
                                            5855          DCCEPIL
00003D84                                    5856+         ds 0h                                                          01-DCCEP
                                            5857+* Epilog
00003D84 D707 D088 D088 00000088 00000088   5858+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003D8A E3D0 D080 0004          00000080   5859+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003D90 E3C0 D090 0004          00000090   5860+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003D96 E3B0 C018 0004          00000018   5861+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003D9C E3C0 B010 0021          00000010   5862+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003DA2 E3E0 D008 0004          00000008   5863+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003DA8 EB1C D020 0004          00000020   5864+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003DAE 078E                               5865+         bcr 8,14                if same dsab, just return              01-DCCEP
00003DB0 E3F0 D010 0024          00000010   5866+         stg 15,16(0,13)         save return code                       01-DCCEP
00003DB6 E300 D018 0024          00000018   5867+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003DBC E3F0 D090 0004          00000090   5868+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003DC2 E3F0 F018 0004          00000018   5869+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003DC8 47F0 F040               00000040   5870+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page  121 
  Active Usings: @REGION_1631_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5871+* End of Epilog
                                            5872 * * **** End of Epilogue
00003DD0                                    5873          DS    0D
00003DD0 000000E8                           5874 @FRAMESIZE_1631 DC F'232'
00003DD4 00000000
00003DD8 0000000000000430                   5875 @lit_1631_179 DC AD(rd_clock)
00003DE0 0000000000000000                   5876 @lit_1631_182 DC AD(rd_kafka_timer_start0)
00003DE8 00000000000030D8                   5877 @lit_1631_181 DC AD(rd_kafka_metadata_cache_evict_tmr_cb)
                                            5878          DROP  12
                                            5879 *
                                            5880 *   DSECT for automatic variables in "rd_kafka_metadata_cache_expiry_s
                                            5881 *           tart"
                                            5882 *      (FUNCTION #1631)
                                            5883 *
00000000                00000000 000000A8   5884 @AUTO#rd_kafka_metadata_cache_expiry_start DSECT
00000000                                    5885          DS    XL168
                                            5886 *
00003DF0                00000000 00005E8C   5887 @CODE    CSECT
                                            5888 *
                                            5889 *
                                            5890 *
                                            5891 * ....... start of rd_kafka_metadata_cache_topic_update
                                            5892 rd_kafka_metadata_cache_topic_update ALIAS X'99846D92818692816D9485A381*
                                                                8481A3816D83818388856DA3969789836DA4978481A385'
00003DF0                                    5893 @LNAME1632 DS  0H
00003DF0 00000024                           5894          DC    X'00000024'
00003DF4 99846D9281869281                   5895          DC    C'rd_kafka_metadata_cache_topic_up'
00003E14 8481A385                           5896          DC    C'date'
00003E18 00                                 5897          DC    X'00'
                                            5898 rd_kafka_metadata_cache_topic_update DCCPRLG CINDEX=1632,BASER=12,FRAME*
                                                                =208,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1632
                                            5899          macro
                                            5900          dccextrn &m
                                            5901          gblc    &$dccext(1000)
                                            5902          gbla    &$dccexti
                                            5903          lcla    &i
                                            5904 &$dccext(&$dccexti+1) setc    '&m'
                                            5905 &i       seta    1
                                            5906 .loop    aif    (&i gt &$dccexti).around
                                            5907          aif    ('&$dccext(&i)' eq '&m').getout
                                            5908 &i       seta    &i+1
                                            5909          ago     .loop
                                            5910 .around  anop
                                            5911 &$dccexti seta &$dccexti+1
                                            5912          extrn  &m
                                            5913 .getout  anop
                                            5914          mend
00003E20                                    5915+$eye0123    ds    0d                                                    02-DCCCA
00003E20 C4C3C3                             5916+         dc cl3'DCC'                                                    02-DCCCA
00003E23 01                                 5917+         dc xl1'01' format one                                          02-DCCCA
00003E24 00000000                           5918+         dc a(0)                                                        02-DCCCA
00003E28 0000000000003E92                   5919+         dc ad(@PER_1632)                                               02-DCCCA
                                                                                                                           Page  122 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003E30 00000000000000D0                   5920+         dc ad(208)                                                     02-DCCCA
00003E38 0000000000000000                   5921+         dc ad(0)                                                       02-DCCCA
00003E40 0000000000001000                   5922+         dc ad(4096)                                                    02-DCCCA
00003E48 20                                 5923+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003E49 03                                 5924+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003E4A 03                                 5925+         dc al1(3)                                                      02-DCCCA
00003E4B 08                                 5926+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003E4C 00                                 5927+         dc bl.8'00000000'                                              02-DCCCA
00003E4D 000000                             5928+         dc al3(0)                                                      02-DCCCA
00003E50 0000000000003DF0                   5929+         dc ad(@LNAME1632)                                              02-DCCCA
00003E58                                    5930+         ds 0d                                                          02-DCCCA
00003E58 0000000000003E20                   5931+         dc ad($eye0123)                                                02-DCCCA
00003E60 0000000000000000                   5932+         dc ad(0)                                                       02-DCCCA
00003E68                                    5933+         ds    0d                                                       01-DCCPR
                                            5934+         entry rd_kafka_metadata_cache_topic_update                     01-DCCPR
00003E68                                    5935+rd_kafka_metadata_cache_topic_update ds 0d                              01-DCCPR
00003E68                                    5936+@REGION_1632_1 ds 0h                                                    01-DCCPR
00003E68 EBEC D008 0024          00000008   5937+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003E6E E3E0 D088 0004          00000088   5938+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003E74 E3C0 D090 0004          00000090   5939+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003E7A B904 002E                          5940+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003E7E E3B0 C018 0004          00000018   5941+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003E84 A7EB 00D0               000000D0   5942+         aghi  14,208              increase by frame size               01-DCCPR
00003E88 E3E0 C020 0021          00000020   5943+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003E8E 4720 B020               00000020   5944+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003E92                                    5945+@PER_1632 ds   0h                                                       01-DCCPR
00003E92 EBDE 2080 0024          00000080   5946+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003E98 E3C0 2090 0024          00000090   5947+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003E9E B904 00D2                          5948+         lgr   13,2                set real frame pointer               01-DCCPR
00003EA2 B904 00CF                          5949+         lgr   12,15               set base reg                         01-DCCPR
                        00003E68            5950+         using @REGION_1632_1,12                                        01-DCCPR
00003EA6 B904 0051                          5951          LGR   5,1         ; ptr to parm area
                                            5952 * ******* End of Prologue
                                            5953 * *
                                            5954 * ***           rd_ts_t now = rd_clock();
00003EAA EB34 5000 0004          00000000   5955          LMG   3,4,0(5)    ; rk
00003EB0 E3F0 C090 0004          00003EF8   5956          LG    15,@lit_1632_184 ; rd_clock
00003EB6                                    5957 @@gen_label283 DS    0H
00003EB6 05EF                               5958          BALR  14,15
00003EB8                                    5959 @@gen_label284 DS    0H
                                            5960 * ***           rd_ts_t ts_expires = now + (rk->rk_conf.metadata_max_a\
                                            5961 * ge_ms * 1000);
00003EB8 5810 3318               00000318   5962          L     1,792(0,3)  ; offset of metadata_max_age_ms in rd_kafka_*
                                                                conf_s
00003EBC A71C 03E8               000003E8   5963          MHI   1,1000
00003EC0 B904 002F                          5964          LGR   2,15
00003EC4 B918 0021                          5965          AGFR  2,1
00003EC8 B904 0012                          5966          LGR   1,2         ; ts_expires
                                            5967 * ***           int changed = 1;
00003ECC A728 0001               00000001   5968          LHI   2,1         ; 1
                                            5969 * ***
                                            5970 * ***
                                                                                                                           Page  123 
  Active Usings: @REGION_1632_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5971 * ***
                                            5972 * ***           if (mdt->err == RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PAR\
                                            5973 * T)
00003ED0 E55C 4018 0003          00000018   5974          CHSI  24(4),3
00003ED6 4770 C0BA               00003F22   5975          BNE   @L674
                                            5976 * ***                   ts_expires = ((ts_expires) < (now + (100 * 100\
                                            5977 * 0)) ? (ts_expires) : (now + (100 * 1000)));
00003EDA B904 006F                          5978          LGR   6,15
00003EDE C268 0001 86A0                     5979          AGFI  6,X'000186A0'
00003EE4 B920 0016                          5980          CGR   1,6
00003EE8 47B0 C0B0               00003F18   5981          BNL   @L675
00003EEC 47F0 C0BA               00003F22   5982          B     @L676
00003EF0                                    5983          DS    0D
00003EF0 000000D0                           5984 @FRAMESIZE_1632 DC F'208'
00003EF4 00000000
00003EF8 0000000000000430                   5985 @lit_1632_184 DC AD(rd_clock)
00003F00 0000000000003710                   5986 @lit_1632_186 DC AD(rd_kafka_metadata_cache_insert)
00003F08 0000000000002F48                   5987 @lit_1632_187 DC AD(rd_kafka_metadata_cache_delete_by_name)
00003F10 00000000000053C8                   5988 @lit_1632_188 DC AD(rd_kafka_metadata_cache_propagate_changes)
00003F18                                    5989 @L675    DS    0H
00003F18 B904 001F                          5990          LGR   1,15
00003F1C C218 0001 86A0                     5991          AGFI  1,X'000186A0'
00003F22                                    5992 @L676    DS    0H
00003F22                                    5993 @L674    DS    0H
                                            5994 * ***
                                            5995 * ***           if (!mdt->err ||
00003F22 E360 4018 0012          00000018   5996          LT    6,24(0,4)   ; offset of err in rd_kafka_metadata_topic
00003F28 4780 C0D8               00003F40   5997          BZ    @L679
                                            5998 * ***               mdt->err == RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_\
                                            5999 * FAILED ||
00003F2C E55C 4018 001D          00000018   6000          CHSI  24(4),29
00003F32 4780 C0D8               00003F40   6001          BE    @L679
00003F36                                    6002 @L677    DS    0H
                                            6003 * ***               mdt->err == RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PAR\
                                            6004 * T)
00003F36 E55C 4018 0003          00000018   6005          CHSI  24(4),3
00003F3C 4770 C0FA               00003F62   6006          BNE   @L678
00003F40                                    6007 @L679    DS    0H
                                            6008 * ***                   rd_kafka_metadata_cache_insert(rk, mdt, now, t\
                                            6009 * s_expires);
00003F40 EB34 D0B0 0024          000000B0   6010          STMG  3,4,176(13)
00003F46 E3F0 D0C0 0024          000000C0   6011          STG   15,192(0,13)
00003F4C E310 D0C8 0024          000000C8   6012          STG   1,200(0,13)
00003F52 4110 D0B0               000000B0   6013          LA    1,176(0,13)
00003F56 E3F0 C098 0004          00003F00   6014          LG    15,@lit_1632_186 ; rd_kafka_metadata_cache_insert
00003F5C                                    6015 @@gen_label290 DS    0H
00003F5C 05EF                               6016          BALR  14,15
00003F5E                                    6017 @@gen_label291 DS    0H
00003F5E 47F0 C11A               00003F82   6018          B     @L680
                                            6019 * ***           else
00003F62                                    6020 @L678    DS    0H
                                            6021 * ***                   changed = rd_kafka_metadata_cache_delete_by_na\
                                                                                                                           Page  124 
  Active Usings: @REGION_1632_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6022 * me(rk,
                                            6023 * ***                                                                 \
                                            6024 *    mdt->topic);
00003F62 E330 D0B0 0024          000000B0   6025          STG   3,176(0,13)
00003F68 E3F0 4000 0004          00000000   6026          LG    15,0(0,4)
00003F6E E3F0 D0B8 0024          000000B8   6027          STG   15,184(0,13)
00003F74 4110 D0B0               000000B0   6028          LA    1,176(0,13)
00003F78 E3F0 C0A0 0004          00003F08   6029          LG    15,@lit_1632_187 ; rd_kafka_metadata_cache_delete_by_nam*
                                                                e
00003F7E                                    6030 @@gen_label292 DS    0H
00003F7E 05EF                               6031          BALR  14,15
00003F80                                    6032 @@gen_label293 DS    0H
00003F80 182F                               6033          LR    2,15        ; changed
00003F82                                    6034 @L680    DS    0H
                                            6035 * ***
                                            6036 * ***           if (changed && propagate)
00003F82 1222                               6037          LTR   2,2
00003F84 4780 C13A               00003FA2   6038          BZ    @L681
00003F88 9500 5017      00000017 00000000   6039          CLI   23(5),0
00003F8C 4780 C13A               00003FA2   6040          BE    @L681
                                            6041 * ***                   rd_kafka_metadata_cache_propagate_changes(rk);
00003F90 E330 D0B0 0024          000000B0   6042          STG   3,176(0,13)
00003F96 4110 D0B0               000000B0   6043          LA    1,176(0,13)
00003F9A E3F0 C0A8 0004          00003F10   6044          LG    15,@lit_1632_188 ; rd_kafka_metadata_cache_propagate_cha*
                                                                nges
00003FA0                                    6045 @@gen_label296 DS    0H
00003FA0 05EF                               6046          BALR  14,15
00003FA2                                    6047 @@gen_label297 DS    0H
00003FA2                                    6048 @L681    DS    0H
                                            6049 * ***   }
00003FA2                                    6050 @ret_lab_1632 DS 0H
                                            6051 * * **** Start of Epilogue
                                            6052          DCCEPIL
00003FA2                                    6053+         ds 0h                                                          01-DCCEP
                                            6054+* Epilog
00003FA2 D707 D088 D088 00000088 00000088   6055+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003FA8 E3D0 D080 0004          00000080   6056+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003FAE E3C0 D090 0004          00000090   6057+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003FB4 E3B0 C018 0004          00000018   6058+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003FBA E3C0 B010 0021          00000010   6059+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003FC0 E3E0 D008 0004          00000008   6060+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003FC6 EB1C D020 0004          00000020   6061+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003FCC 078E                               6062+         bcr 8,14                if same dsab, just return              01-DCCEP
00003FCE E3F0 D010 0024          00000010   6063+         stg 15,16(0,13)         save return code                       01-DCCEP
00003FD4 E300 D018 0024          00000018   6064+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003FDA E3F0 D090 0004          00000090   6065+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003FE0 E3F0 F018 0004          00000018   6066+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003FE6 47F0 F040               00000040   6067+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6068+* End of Epilog
                                            6069 * * **** End of Epilogue
                                            6070          DROP  12
                                            6071 *
                                                                                                                           Page  125 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6072 *   DSECT for automatic variables in "rd_kafka_metadata_cache_topic_up
                                            6073 *           date"
                                            6074 *      (FUNCTION #1632)
                                            6075 *
00000000                00000000 000000B0   6076 @AUTO#rd_kafka_metadata_cache_topic_update DSECT
00000000                                    6077          DS    XL168
000000A8                                    6078 rd_kafka_metadata_cache_topic_update#changed#0 DS 1F ; changed
000000AC                000000AC 000000A8   6079          ORG   @AUTO#rd_kafka_metadata_cache_topic_update+168
000000A8                                    6080 rd_kafka_metadata_cache_topic_update#ts_expires#0 DS 8XL1 ; ts_expires
000000B0                000000B0 000000A8   6081          ORG   @AUTO#rd_kafka_metadata_cache_topic_update+168
000000A8                                    6082 rd_kafka_metadata_cache_topic_update#now#0 DS 8XL1 ; now
                                            6083 *
00003FEA                00000000 00005E8C   6084 @CODE    CSECT
                                            6085 *
                                            6086 *
                                            6087 *
                                            6088 * ....... start of rd_kafka_metadata_cache_update
                                            6089 rd_kafka_metadata_cache_update ALIAS X'99846D92818692816D9485A3818481A3*
                                                                816D83818388856DA4978481A385'
00003FEA                                    6090 @LNAME1633 DS  0H
00003FEA 0000001E                           6091          DC    X'0000001E'
00003FEE 99846D9281869281                   6092          DC    C'rd_kafka_metadata_cache_update'
0000400C 00                                 6093          DC    X'00'
                                            6094 rd_kafka_metadata_cache_update DCCPRLG CINDEX=1633,BASER=12,FRAME=248,E*
                                                                NTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1633
                                            6095          macro
                                            6096          dccextrn &m
                                            6097          gblc    &$dccext(1000)
                                            6098          gbla    &$dccexti
                                            6099          lcla    &i
                                            6100 &$dccext(&$dccexti+1) setc    '&m'
                                            6101 &i       seta    1
                                            6102 .loop    aif    (&i gt &$dccexti).around
                                            6103          aif    ('&$dccext(&i)' eq '&m').getout
                                            6104 &i       seta    &i+1
                                            6105          ago     .loop
                                            6106 .around  anop
                                            6107 &$dccexti seta &$dccexti+1
                                            6108          extrn  &m
                                            6109 .getout  anop
                                            6110          mend
00004010                                    6111+$eye0126    ds    0d                                                    02-DCCCA
00004010 C4C3C3                             6112+         dc cl3'DCC'                                                    02-DCCCA
00004013 01                                 6113+         dc xl1'01' format one                                          02-DCCCA
00004014 00000000                           6114+         dc a(0)                                                        02-DCCCA
00004018 0000000000004082                   6115+         dc ad(@PER_1633)                                               02-DCCCA
00004020 00000000000000F8                   6116+         dc ad(248)                                                     02-DCCCA
00004028 0000000000000000                   6117+         dc ad(0)                                                       02-DCCCA
00004030 0000000000001000                   6118+         dc ad(4096)                                                    02-DCCCA
00004038 20                                 6119+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004039 03                                 6120+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000403A 03                                 6121+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page  126 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000403B 08                                 6122+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000403C 00                                 6123+         dc bl.8'00000000'                                              02-DCCCA
0000403D 000000                             6124+         dc al3(0)                                                      02-DCCCA
00004040 0000000000003FEA                   6125+         dc ad(@LNAME1633)                                              02-DCCCA
00004048                                    6126+         ds 0d                                                          02-DCCCA
00004048 0000000000004010                   6127+         dc ad($eye0126)                                                02-DCCCA
00004050 0000000000000000                   6128+         dc ad(0)                                                       02-DCCCA
00004058                                    6129+         ds    0d                                                       01-DCCPR
                                            6130+         entry rd_kafka_metadata_cache_update                           01-DCCPR
00004058                                    6131+rd_kafka_metadata_cache_update ds 0d                                    01-DCCPR
00004058                                    6132+@REGION_1633_1 ds 0h                                                    01-DCCPR
00004058 EBEC D008 0024          00000008   6133+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000405E E3E0 D088 0004          00000088   6134+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004064 E3C0 D090 0004          00000090   6135+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000406A B904 002E                          6136+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000406E E3B0 C018 0004          00000018   6137+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004074 A7EB 00F8               000000F8   6138+         aghi  14,248              increase by frame size               01-DCCPR
00004078 E3E0 C020 0021          00000020   6139+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000407E 4720 B020               00000020   6140+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004082                                    6141+@PER_1633 ds   0h                                                       01-DCCPR
00004082 EBDE 2080 0024          00000080   6142+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004088 E3C0 2090 0024          00000090   6143+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000408E B904 00D2                          6144+         lgr   13,2                set real frame pointer               01-DCCPR
00004092 B904 00CF                          6145+         lgr   12,15               set base reg                         01-DCCPR
                        00004058            6146+         using @REGION_1633_1,12                                        01-DCCPR
                                            6147 * ******* End of Prologue
                                            6148 * *
00004096 EB34 1000 0004          00000000   6149          LMG   3,4,0(1)    ; rk
0000409C 5850 1014               00000014   6150          L     5,20(0,1)   ; abs_update
                                            6151 * ***           struct rd_kafka_metadata_cache_entry *rkmce;
                                            6152 * ***           rd_ts_t now = rd_clock();
000040A0 E3F0 C088 0004          000040E0   6153          LG    15,@lit_1633_190 ; rd_clock
000040A6                                    6154 @@gen_label298 DS    0H
000040A6 05EF                               6155          BALR  14,15
000040A8                                    6156 @@gen_label299 DS    0H
000040A8 B904 006F                          6157          LGR   6,15
                                            6158 * ***           rd_ts_t ts_expires = now + (rk->rk_conf.metadata_max_a\
                                            6159 * ge_ms * 1000);
000040AC 5810 3318               00000318   6160          L     1,792(0,3)  ; offset of metadata_max_age_ms in rd_kafka_*
                                                                conf_s
000040B0 A71C 03E8               000003E8   6161          MHI   1,1000
000040B4 B904 0076                          6162          LGR   7,6
000040B8 B918 0071                          6163          AGFR  7,1
                                            6164 * ***           int i;
                                            6165 * ***
                                            6166 * ***           do { if ((((rk)->rk_conf.debug & (0x8)))) rd_kafka_log\
                                            6167 * 0(&rk->rk_conf,rk,((void *)0), 7,(0x8), "METADATA","%s of metadata c\
                                            6168 * ache with %d topic(s)", abs_update ? "Absolute update" : "Update", m\
                                            6169 * d->topic_cnt); } while (0);
000040BC                                    6170 @L682    DS    0H
000040BC 9108 3323      00000323 00000008   6171          TM    803(3),8
000040C0 4780 C12C               00004184   6172          BZ    @L685
                                                                                                                           Page  127 
  Active Usings: @REGION_1633_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000040C4 1255                               6173          LTR   5,5
000040C6 4780 C0C8               00004120   6174          BZ    @L686
000040CA E3F0 C090 0004          000040E8   6175          LG    15,@lit_1633_191
000040D0 41F0 F208               00000208   6176          LA    15,520(0,15)
000040D4 47F0 C0D2               0000412A   6177          B     @L687
000040D8                                    6178          DS    0D
000040D8 000000F8                           6179 @FRAMESIZE_1633 DC F'248'
000040DC 00000000
000040E0 0000000000000430                   6180 @lit_1633_190 DC AD(rd_clock)
000040E8 0000000000006076                   6181 @lit_1633_191 DC AD(@strings@)
000040F0 0000000000000000                   6182 @lit_1633_194 DC AD(rd_kafka_log0)
000040F8 0000000000003B00                   6183 @lit_1633_195 DC AD(rd_kafka_metadata_cache_purge)
00004100 0000000000003710                   6184 @lit_1633_197 DC AD(rd_kafka_metadata_cache_insert)
00004108 0000000000000000                   6185 @lit_1633_200 DC AD(rd_kafka_timer_start0)
00004110 00000000000030D8                   6186 @lit_1633_199 DC AD(rd_kafka_metadata_cache_evict_tmr_cb)
00004118 00000000000053C8                   6187 @lit_1633_201 DC AD(rd_kafka_metadata_cache_propagate_changes)
00004120                                    6188 @L686    DS    0H
00004120 E3F0 C090 0004          000040E8   6189          LG    15,@lit_1633_191
00004126 41F0 F218               00000218   6190          LA    15,536(0,15)
0000412A                                    6191 @L687    DS    0H
0000412A 4110 3210               00000210   6192          LA    1,528(0,3)
0000412E E310 D0B0 0024          000000B0   6193          STG   1,176(0,13)
00004134 E330 D0B8 0024          000000B8   6194          STG   3,184(0,13)
0000413A D707 D0C0 D0C0 000000C0 000000C0   6195          XC    192(8,13),192(13)
00004140 E548 D0C8 0007          000000C8   6196          MVGHI 200(13),7
00004146 E548 D0D0 0008          000000D0   6197          MVGHI 208(13),8
0000414C E310 C090 0004          000040E8   6198          LG    1,@lit_1633_191
00004152 4120 11C2               000001C2   6199          LA    2,450(0,1)
00004156 E320 D0D8 0024          000000D8   6200          STG   2,216(0,13)
0000415C 4110 1220               00000220   6201          LA    1,544(0,1)
00004160 E310 D0E0 0024          000000E0   6202          STG   1,224(0,13)
00004166 E3F0 D0E8 0024          000000E8   6203          STG   15,232(0,13)
0000416C E3F0 4010 0014          00000010   6204          LGF   15,16(0,4)
00004172 E3F0 D0F0 0024          000000F0   6205          STG   15,240(0,13)
00004178 4110 D0B0               000000B0   6206          LA    1,176(0,13)
0000417C E3F0 C098 0004          000040F0   6207          LG    15,@lit_1633_194 ; rd_kafka_log0
00004182                                    6208 @@gen_label302 DS    0H
00004182 05EF                               6209          BALR  14,15
00004184                                    6210 @@gen_label303 DS    0H
00004184                                    6211 @L685    DS    0H
                                            6212 * ***
                                            6213 * ***
                                            6214 * ***
                                            6215 * ***
                                            6216 * ***           if (abs_update)
00004184 1255                               6217          LTR   5,5
00004186 4780 C14A               000041A2   6218          BZ    @L688
                                            6219 * ***                   rd_kafka_metadata_cache_purge(rk, 0);
0000418A E330 D0B0 0024          000000B0   6220          STG   3,176(0,13)
00004190 D707 D0B8 D0B8 000000B8 000000B8   6221          XC    184(8,13),184(13)
00004196 4110 D0B0               000000B0   6222          LA    1,176(0,13)
0000419A E3F0 C0A0 0004          000040F8   6223          LG    15,@lit_1633_195 ; rd_kafka_metadata_cache_purge
                                                                                                                           Page  128 
  Active Usings: @REGION_1633_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000041A0                                    6224 @@gen_label305 DS    0H
000041A0 05EF                               6225          BALR  14,15
000041A2                                    6226 @@gen_label306 DS    0H
000041A2                                    6227 @L688    DS    0H
                                            6228 * ***
                                            6229 * ***
                                            6230 * ***           for (i = 0 ; i < md->topic_cnt ; i++)
000041A2 A728 0000               00000000   6231          LHI   2,0         ; 0
000041A6 47F0 C188               000041E0   6232          B     @L690
000041AA                                    6233 @L689    DS    0H
                                            6234 * ***                   rd_kafka_metadata_cache_insert(rk, &md->topics\
                                            6235 * [i], now,
                                            6236 * ***                                                  ts_expires);
000041AA E330 D0B0 0024          000000B0   6237          STG   3,176(0,13)
000041B0 B914 00F2                          6238          LGFR  15,2
000041B4 E310 4018 0004          00000018   6239          LG    1,24(0,4)   ; offset of topics in rd_kafka_metadata
000041BA EBFF 0005 000D          00000005   6240          SLLG  15,15,5(0)  ; *0x20
000041C0 41FF 1000               00000000   6241          LA    15,0(15,1)
000041C4 E3F0 D0B8 0024          000000B8   6242          STG   15,184(0,13)
000041CA EB67 D0C0 0024          000000C0   6243          STMG  6,7,192(13)
000041D0 4110 D0B0               000000B0   6244          LA    1,176(0,13)
000041D4 E3F0 C0A8 0004          00004100   6245          LG    15,@lit_1633_197 ; rd_kafka_metadata_cache_insert
000041DA                                    6246 @@gen_label307 DS    0H
000041DA 05EF                               6247          BALR  14,15
000041DC                                    6248 @@gen_label308 DS    0H
000041DC A72A 0001               00000001   6249          AHI   2,1
000041E0                                    6250 @L690    DS    0H
000041E0 5920 4010               00000010   6251          C     2,16(0,4)
000041E4 4740 C152               000041AA   6252          BL    @L689
                                            6253 * ***
                                            6254 * ***
                                            6255 * ***           if ((rkmce = ((&rk->rk_metadata_cache.rkmc_expiry)->tq\
                                            6256 * h_first)))
000041E8 E3F0 3AF8 0004          00000AF8   6257          LG    15,2808(0,3) ; offset of rkmc_expiry in rd_kafka_metadat*
                                                                a_cache
000041EE B902 001F                          6258          LTGR  1,15
000041F2 4780 C1F0               00004248   6259          BZ    @L693
                                            6260 * ***                   rd_kafka_timer_start0(&rk->rk_timers,&rk->rk_m\
                                            6261 * etadata_cache.rkmc_expiry_tmr,rkmce->rkmce_ts_expires - now,0,1,rd_k\
                                            6262 * afka_metadata_cache_evict_tmr_cb,rk);
000041F6 A719 1010               00001010   6263          LGHI  1,4112      ; 4112
000041FA 4111 3000               00000000   6264          LA    1,0(1,3)
000041FE E310 D0B0 0024          000000B0   6265          STG   1,176(0,13)
00004204 4110 3B08               00000B08   6266          LA    1,2824(0,3)
00004208 E310 D0B8 0024          000000B8   6267          STG   1,184(0,13)
0000420E E3F0 F030 0004          00000030   6268          LG    15,48(0,15) ; offset of rkmce_ts_expires in rd_kafka_met*
                                                                adata_cache_entry
00004214 B909 00F6                          6269          SGR   15,6
00004218 E3F0 D0C0 0024          000000C0   6270          STG   15,192(0,13)
0000421E D707 D0C8 D0C8 000000C8 000000C8   6271          XC    200(8,13),200(13)
00004224 E548 D0D0 0001          000000D0   6272          MVGHI 208(13),1
0000422A E3F0 C0B8 0004          00004110   6273          LG    15,@lit_1633_199 ; rd_kafka_metadata_cache_evict_tmr_cb
                                                                                                                           Page  129 
  Active Usings: @REGION_1633_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004230 E3F0 D0D8 0024          000000D8   6274          STG   15,216(0,13)
00004236 E330 D0E0 0024          000000E0   6275          STG   3,224(0,13)
0000423C 4110 D0B0               000000B0   6276          LA    1,176(0,13)
00004240 E3F0 C0B0 0004          00004108   6277          LG    15,@lit_1633_200 ; rd_kafka_timer_start0
00004246                                    6278 @@gen_label311 DS    0H
00004246 05EF                               6279          BALR  14,15
00004248                                    6280 @@gen_label312 DS    0H
00004248                                    6281 @L693    DS    0H
                                            6282 * ***
                                            6283 * ***
                                            6284 * ***
                                            6285 * ***
                                            6286 * ***
                                            6287 * ***           if (md->topic_cnt > 0 || abs_update)
00004248 E55C 4010 0000          00000010   6288          CHSI  16(4),0
0000424E 4720 C200               00004258   6289          BH    @L695
00004252 1255                               6290          LTR   5,5
00004254 4780 C212               0000426A   6291          BZ    @L694
00004258                                    6292 @L695    DS    0H
                                            6293 * ***                   rd_kafka_metadata_cache_propagate_changes(rk);
00004258 E330 D0B0 0024          000000B0   6294          STG   3,176(0,13)
0000425E 4110 D0B0               000000B0   6295          LA    1,176(0,13)
00004262 E3F0 C0C0 0004          00004118   6296          LG    15,@lit_1633_201 ; rd_kafka_metadata_cache_propagate_cha*
                                                                nges
00004268                                    6297 @@gen_label315 DS    0H
00004268 05EF                               6298          BALR  14,15
0000426A                                    6299 @@gen_label316 DS    0H
0000426A                                    6300 @L694    DS    0H
                                            6301 * ***   }
0000426A                                    6302 @ret_lab_1633 DS 0H
                                            6303 * * **** Start of Epilogue
                                            6304          DCCEPIL
0000426A                                    6305+         ds 0h                                                          01-DCCEP
                                            6306+* Epilog
0000426A D707 D088 D088 00000088 00000088   6307+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004270 E3D0 D080 0004          00000080   6308+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004276 E3C0 D090 0004          00000090   6309+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000427C E3B0 C018 0004          00000018   6310+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004282 E3C0 B010 0021          00000010   6311+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004288 E3E0 D008 0004          00000008   6312+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000428E EB1C D020 0004          00000020   6313+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004294 078E                               6314+         bcr 8,14                if same dsab, just return              01-DCCEP
00004296 E3F0 D010 0024          00000010   6315+         stg 15,16(0,13)         save return code                       01-DCCEP
0000429C E300 D018 0024          00000018   6316+         stg 0,24(0,13)          save more return code                  01-DCCEP
000042A2 E3F0 D090 0004          00000090   6317+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000042A8 E3F0 F018 0004          00000018   6318+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000042AE 47F0 F040               00000040   6319+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6320+* End of Epilog
                                            6321 * * **** End of Epilogue
                                            6322          DROP  12
                                            6323 *
                                            6324 *   DSECT for automatic variables in "rd_kafka_metadata_cache_update"
                                                                                                                           Page  130 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6325 *      (FUNCTION #1633)
                                            6326 *
00000000                00000000 000000B0   6327 @AUTO#rd_kafka_metadata_cache_update DSECT
00000000                                    6328          DS    XL168
000000A8                                    6329 rd_kafka_metadata_cache_update#i#0 DS 1F ; i
000000AC                000000AC 000000A8   6330          ORG   @AUTO#rd_kafka_metadata_cache_update+168
000000A8                                    6331 rd_kafka_metadata_cache_update#ts_expires#0 DS 8XL1 ; ts_expires
000000B0                000000B0 000000A8   6332          ORG   @AUTO#rd_kafka_metadata_cache_update+168
000000A8                                    6333 rd_kafka_metadata_cache_update#now#0 DS 8XL1 ; now
                                            6334 *
000042B2                00000000 00005E8C   6335 @CODE    CSECT
                                            6336 *
                                            6337 *
                                            6338 *
                                            6339 * ....... start of rd_kafka_metadata_cache_purge_hints
                                            6340 rd_kafka_metadata_cache_purge_hints ALIAS X'99846D92818692816D9485A3818*
                                                                481A3816D83818388856D97A49987856D888995A3A2'
000042B2                                    6341 @LNAME1636 DS  0H
000042B2 00000023                           6342          DC    X'00000023'
000042B6 99846D9281869281                   6343          DC    C'rd_kafka_metadata_cache_purge_hi'
000042D6 95A3A2                             6344          DC    C'nts'
000042D9 00                                 6345          DC    X'00'
                                            6346 rd_kafka_metadata_cache_purge_hints DCCPRLG CINDEX=1636,BASER=12,FRAME=*
                                                                248,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1636
                                            6347          macro
                                            6348          dccextrn &m
                                            6349          gblc    &$dccext(1000)
                                            6350          gbla    &$dccexti
                                            6351          lcla    &i
                                            6352 &$dccext(&$dccexti+1) setc    '&m'
                                            6353 &i       seta    1
                                            6354 .loop    aif    (&i gt &$dccexti).around
                                            6355          aif    ('&$dccext(&i)' eq '&m').getout
                                            6356 &i       seta    &i+1
                                            6357          ago     .loop
                                            6358 .around  anop
                                            6359 &$dccexti seta &$dccexti+1
                                            6360          extrn  &m
                                            6361 .getout  anop
                                            6362          mend
000042E0                                    6363+$eye0129    ds    0d                                                    02-DCCCA
000042E0 C4C3C3                             6364+         dc cl3'DCC'                                                    02-DCCCA
000042E3 01                                 6365+         dc xl1'01' format one                                          02-DCCCA
000042E4 00000000                           6366+         dc a(0)                                                        02-DCCCA
000042E8 0000000000004352                   6367+         dc ad(@PER_1636)                                               02-DCCCA
000042F0 00000000000000F8                   6368+         dc ad(248)                                                     02-DCCCA
000042F8 0000000000000000                   6369+         dc ad(0)                                                       02-DCCCA
00004300 0000000000001000                   6370+         dc ad(4096)                                                    02-DCCCA
00004308 20                                 6371+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004309 03                                 6372+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000430A 03                                 6373+         dc al1(3)                                                      02-DCCCA
0000430B 08                                 6374+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  131 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000430C 00                                 6375+         dc bl.8'00000000'                                              02-DCCCA
0000430D 000000                             6376+         dc al3(0)                                                      02-DCCCA
00004310 00000000000042B2                   6377+         dc ad(@LNAME1636)                                              02-DCCCA
00004318                                    6378+         ds 0d                                                          02-DCCCA
00004318 00000000000042E0                   6379+         dc ad($eye0129)                                                02-DCCCA
00004320 0000000000000000                   6380+         dc ad(0)                                                       02-DCCCA
00004328                                    6381+         ds    0d                                                       01-DCCPR
                                            6382+         entry rd_kafka_metadata_cache_purge_hints                      01-DCCPR
00004328                                    6383+rd_kafka_metadata_cache_purge_hints ds 0d                               01-DCCPR
00004328                                    6384+@REGION_1636_1 ds 0h                                                    01-DCCPR
00004328 EBEC D008 0024          00000008   6385+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000432E E3E0 D088 0004          00000088   6386+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004334 E3C0 D090 0004          00000090   6387+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000433A B904 002E                          6388+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000433E E3B0 C018 0004          00000018   6389+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004344 A7EB 00F8               000000F8   6390+         aghi  14,248              increase by frame size               01-DCCPR
00004348 E3E0 C020 0021          00000020   6391+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000434E 4720 B020               00000020   6392+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004352                                    6393+@PER_1636 ds   0h                                                       01-DCCPR
00004352 EBDE 2080 0024          00000080   6394+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004358 E3C0 2090 0024          00000090   6395+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000435E B904 00D2                          6396+         lgr   13,2                set real frame pointer               01-DCCPR
00004362 B904 00CF                          6397+         lgr   12,15               set base reg                         01-DCCPR
                        00004328            6398+         using @REGION_1636_1,12                                        01-DCCPR
00004366 B904 0051                          6399          LGR   5,1         ; ptr to parm area
                                            6400 * ******* End of Prologue
                                            6401 * *
0000436A E340 5000 0004          00000000   6402          LG    4,0(0,5)    ; rk
                                            6403 * ***           const char *topic;
                                            6404 * ***           int i;
                                            6405 * ***           int cnt = 0;
00004370 A728 0000               00000000   6406          LHI   2,0         ; 0
                                            6407 * ***
                                            6408 * ***           for (i = 0 ; (topic = rd_list_elem(topics, i)) ; i++) \
                                            6409 * {
00004374 1832                               6410          LR    3,2         ; i
00004376 47F0 C0F8               00004420   6411          B     @L697
00004380                                    6412          DS    0D
00004380 000000F8                           6413 @FRAMESIZE_1636 DC F'248'
00004384 00000000
00004388 00000000000034D8                   6414 @lit_1636_205 DC AD(rd_kafka_metadata_cache_find)
00004390 0000000000002D40                   6415 @lit_1636_206 DC AD(rd_kafka_metadata_cache_delete)
00004398 0000000000000000                   6416 @lit_1636_207 DC AD(rd_list_elem)
000043A0 0000000000000550                   6417 @lit_1636_208 DC AD(rd_list_cnt)
000043A8 0000000000000000                   6418 @lit_1636_210 DC AD(rd_kafka_log0)
000043B0 0000000000006076                   6419 @lit_1636_209 DC AD(@strings@)
000043B8 00000000000053C8                   6420 @lit_1636_211 DC AD(rd_kafka_metadata_cache_propagate_changes)
000043C0                                    6421 @L696    DS    0H
                                            6422 * ***                   struct rd_kafka_metadata_cache_entry *rkmce;
                                            6423 * ***
                                            6424 * ***                   if (!(rkmce = rd_kafka_metadata_cache_find(rk,\
                                            6425 *  topic,
                                                                                                                           Page  132 
  Active Usings: @REGION_1636_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6426 * ***                                                              0))\
                                            6427 *  ||
000043C0 E340 D0B0 0024          000000B0   6428          STG   4,176(0,13)
000043C6 E3F0 D0B8 0024          000000B8   6429          STG   15,184(0,13)
000043CC D707 D0C0 D0C0 000000C0 000000C0   6430          XC    192(8,13),192(13)
000043D2 4110 D0B0               000000B0   6431          LA    1,176(0,13)
000043D6 E3F0 C060 0004          00004388   6432          LG    15,@lit_1636_205 ; rd_kafka_metadata_cache_find
000043DC                                    6433 @@gen_label317 DS    0H
000043DC 05EF                               6434          BALR  14,15
000043DE                                    6435 @@gen_label318 DS    0H
000043DE B902 001F                          6436          LTGR  1,15
000043E2 4780 C0F4               0000441C   6437          BZ    @L699
                                            6438 * ***                       !(((rkmce)->rkmce_mtopic.err) == RD_KAFKA_\
                                            6439 * RESP_ERR__WAIT_CACHE || ((rkmce)->rkmce_mtopic.err) == RD_KAFKA_RESP\
                                            6440 * _ERR__NOENT))
000043E6 E55C F058 FF5C          00000058   6441          CHSI  88(15),-164
000043EC 4780 C0D2               000043FA   6442          BE    @L700
000043F0 E55C F058 FF64          00000058   6443          CHSI  88(15),-156
000043F6 4770 C0F4               0000441C   6444          BNE   @L699
                                            6445 * ***                           continue;
000043FA                                    6446 @L700    DS    0H
                                            6447 * ***
                                            6448 * ***                   rd_kafka_metadata_cache_delete(rk, rkmce, 1);
000043FA E340 D0B0 0024          000000B0   6449          STG   4,176(0,13)
00004400 E3F0 D0B8 0024          000000B8   6450          STG   15,184(0,13)
00004406 E548 D0C0 0001          000000C0   6451          MVGHI 192(13),1
0000440C 4110 D0B0               000000B0   6452          LA    1,176(0,13)
00004410 E3F0 C068 0004          00004390   6453          LG    15,@lit_1636_206 ; rd_kafka_metadata_cache_delete
00004416                                    6454 @@gen_label322 DS    0H
00004416 05EF                               6455          BALR  14,15
00004418                                    6456 @@gen_label323 DS    0H
                                            6457 * ***                   cnt++;
00004418 A72A 0001               00000001   6458          AHI   2,1
                                            6459 * ***           }
0000441C                                    6460 @L699    DS    0H
0000441C A73A 0001               00000001   6461          AHI   3,1
00004420                                    6462 @L697    DS    0H
00004420 E3F0 5008 0004          00000008   6463          LG    15,8(0,5)   ; topics
00004426 E3F0 D0B0 0024          000000B0   6464          STG   15,176(0,13)
0000442C B914 00F3                          6465          LGFR  15,3
00004430 E3F0 D0B8 0024          000000B8   6466          STG   15,184(0,13)
00004436 4110 D0B0               000000B0   6467          LA    1,176(0,13)
0000443A E3F0 C070 0004          00004398   6468          LG    15,@lit_1636_207 ; rd_list_elem
00004440                                    6469 @@gen_label324 DS    0H
00004440 05EF                               6470          BALR  14,15
00004442                                    6471 @@gen_label325 DS    0H
00004442 B902 001F                          6472          LTGR  1,15
00004446 4770 C098               000043C0   6473          BNZ   @L696
                                            6474 * ***
                                            6475 * ***           if (cnt > 0) {
0000444A 1222                               6476          LTR   2,2
0000444C 47D0 C1B6               000044DE   6477          BNH   @L702
                                                                                                                           Page  133 
  Active Usings: @REGION_1636_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6478 * ***                   do { if ((((rk)->rk_conf.debug & (0x8)))) rd_k\
                                            6479 * afka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8), "METADATA","Purged %\
                                            6480 * d/%d cached topic hint(s)", cnt, rd_list_cnt(topics)); } while (0);
00004450                                    6481 @L703    DS    0H
00004450 9108 4323      00000323 00000008   6482          TM    803(4),8
00004454 4780 C1A4               000044CC   6483          BZ    @L706
00004458 E3F0 5008 0004          00000008   6484          LG    15,8(0,5)   ; topics
0000445E E3F0 D0B0 0024          000000B0   6485          STG   15,176(0,13)
00004464 4110 D0B0               000000B0   6486          LA    1,176(0,13)
00004468 E3F0 C078 0004          000043A0   6487          LG    15,@lit_1636_208 ; rd_list_cnt
0000446E                                    6488 @@gen_label329 DS    0H
0000446E 05EF                               6489          BALR  14,15
00004470                                    6490 @@gen_label330 DS    0H
00004470 4110 4210               00000210   6491          LA    1,528(0,4)
00004474 E310 D0B0 0024          000000B0   6492          STG   1,176(0,13)
0000447A E340 D0B8 0024          000000B8   6493          STG   4,184(0,13)
00004480 D707 D0C0 D0C0 000000C0 000000C0   6494          XC    192(8,13),192(13)
00004486 E548 D0C8 0007          000000C8   6495          MVGHI 200(13),7
0000448C E548 D0D0 0008          000000D0   6496          MVGHI 208(13),8
00004492 E310 C088 0004          000043B0   6497          LG    1,@lit_1636_209
00004498 4130 11C2               000001C2   6498          LA    3,450(0,1)
0000449C E330 D0D8 0024          000000D8   6499          STG   3,216(0,13)
000044A2 4110 1246               00000246   6500          LA    1,582(0,1)
000044A6 E310 D0E0 0024          000000E0   6501          STG   1,224(0,13)
000044AC B914 0012                          6502          LGFR  1,2
000044B0 E310 D0E8 0024          000000E8   6503          STG   1,232(0,13)
000044B6 B914 00FF                          6504          LGFR  15,15
000044BA E3F0 D0F0 0024          000000F0   6505          STG   15,240(0,13)
000044C0 4110 D0B0               000000B0   6506          LA    1,176(0,13)
000044C4 E3F0 C080 0004          000043A8   6507          LG    15,@lit_1636_210 ; rd_kafka_log0
000044CA                                    6508 @@gen_label331 DS    0H
000044CA 05EF                               6509          BALR  14,15
000044CC                                    6510 @@gen_label332 DS    0H
000044CC                                    6511 @L706    DS    0H
                                            6512 * ***
                                            6513 * ***
                                            6514 * ***                   rd_kafka_metadata_cache_propagate_changes(rk);
000044CC E340 D0B0 0024          000000B0   6515          STG   4,176(0,13)
000044D2 4110 D0B0               000000B0   6516          LA    1,176(0,13)
000044D6 E3F0 C090 0004          000043B8   6517          LG    15,@lit_1636_211 ; rd_kafka_metadata_cache_propagate_cha*
                                                                nges
000044DC                                    6518 @@gen_label333 DS    0H
000044DC 05EF                               6519          BALR  14,15
000044DE                                    6520 @@gen_label334 DS    0H
                                            6521 * ***           }
000044DE                                    6522 @L702    DS    0H
                                            6523 * ***   }
000044DE                                    6524 @ret_lab_1636 DS 0H
                                            6525 * * **** Start of Epilogue
                                            6526          DCCEPIL
000044DE                                    6527+         ds 0h                                                          01-DCCEP
                                            6528+* Epilog
                                                                                                                           Page  134 
  Active Usings: @REGION_1636_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000044DE D707 D088 D088 00000088 00000088   6529+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000044E4 E3D0 D080 0004          00000080   6530+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000044EA E3C0 D090 0004          00000090   6531+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000044F0 E3B0 C018 0004          00000018   6532+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000044F6 E3C0 B010 0021          00000010   6533+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000044FC E3E0 D008 0004          00000008   6534+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004502 EB1C D020 0004          00000020   6535+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004508 078E                               6536+         bcr 8,14                if same dsab, just return              01-DCCEP
0000450A E3F0 D010 0024          00000010   6537+         stg 15,16(0,13)         save return code                       01-DCCEP
00004510 E300 D018 0024          00000018   6538+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004516 E3F0 D090 0004          00000090   6539+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000451C E3F0 F018 0004          00000018   6540+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004522 47F0 F040               00000040   6541+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6542+* End of Epilog
                                            6543 * * **** End of Epilogue
                                            6544          DROP  12
                                            6545 *
                                            6546 *   DSECT for automatic variables in "rd_kafka_metadata_cache_purge_hi
                                            6547 *           nts"
                                            6548 *      (FUNCTION #1636)
                                            6549 *
00000000                00000000 000000AC   6550 @AUTO#rd_kafka_metadata_cache_purge_hints DSECT
00000000                                    6551          DS    XL168
000000A8                                    6552 rd_kafka_metadata_cache_purge_hints#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8   6553          ORG   @AUTO#rd_kafka_metadata_cache_purge_hints+168
000000A8                                    6554 rd_kafka_metadata_cache_purge_hints#i#0 DS 1F ; i
                                            6555 *
00004526                00000000 00005E8C   6556 @CODE    CSECT
                                            6557 *
                                            6558 *
                                            6559 *
                                            6560 * ....... start of rd_kafka_metadata_cache_hint
                                            6561 rd_kafka_metadata_cache_hint ALIAS X'99846D92818692816D9485A3818481A381*
                                                                6D83818388856D888995A3'
00004526                                    6562 @LNAME1637 DS  0H
00004526 0000001C                           6563          DC    X'0000001C'
0000452A 99846D9281869281                   6564          DC    C'rd_kafka_metadata_cache_hint'
00004546 00                                 6565          DC    X'00'
                                            6566 rd_kafka_metadata_cache_hint DCCPRLG CINDEX=1637,BASER=12,FRAME=272,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1637
                                            6567          macro
                                            6568          dccextrn &m
                                            6569          gblc    &$dccext(1000)
                                            6570          gbla    &$dccexti
                                            6571          lcla    &i
                                            6572 &$dccext(&$dccexti+1) setc    '&m'
                                            6573 &i       seta    1
                                            6574 .loop    aif    (&i gt &$dccexti).around
                                            6575          aif    ('&$dccext(&i)' eq '&m').getout
                                            6576 &i       seta    &i+1
                                            6577          ago     .loop
                                            6578 .around  anop
                                                                                                                           Page  135 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6579 &$dccexti seta &$dccexti+1
                                            6580          extrn  &m
                                            6581 .getout  anop
                                            6582          mend
00004548                                    6583+$eye0132    ds    0d                                                    02-DCCCA
00004548 C4C3C3                             6584+         dc cl3'DCC'                                                    02-DCCCA
0000454B 01                                 6585+         dc xl1'01' format one                                          02-DCCCA
0000454C 00000000                           6586+         dc a(0)                                                        02-DCCCA
00004550 00000000000045BA                   6587+         dc ad(@PER_1637)                                               02-DCCCA
00004558 0000000000000110                   6588+         dc ad(272)                                                     02-DCCCA
00004560 0000000000000000                   6589+         dc ad(0)                                                       02-DCCCA
00004568 0000000000001000                   6590+         dc ad(4096)                                                    02-DCCCA
00004570 20                                 6591+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004571 03                                 6592+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004572 03                                 6593+         dc al1(3)                                                      02-DCCCA
00004573 08                                 6594+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004574 00                                 6595+         dc bl.8'00000000'                                              02-DCCCA
00004575 000000                             6596+         dc al3(0)                                                      02-DCCCA
00004578 0000000000004526                   6597+         dc ad(@LNAME1637)                                              02-DCCCA
00004580                                    6598+         ds 0d                                                          02-DCCCA
00004580 0000000000004548                   6599+         dc ad($eye0132)                                                02-DCCCA
00004588 0000000000000000                   6600+         dc ad(0)                                                       02-DCCCA
00004590                                    6601+         ds    0d                                                       01-DCCPR
                                            6602+         entry rd_kafka_metadata_cache_hint                             01-DCCPR
00004590                                    6603+rd_kafka_metadata_cache_hint ds 0d                                      01-DCCPR
00004590                                    6604+@REGION_1637_1 ds 0h                                                    01-DCCPR
00004590 EBEC D008 0024          00000008   6605+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004596 E3E0 D088 0004          00000088   6606+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000459C E3C0 D090 0004          00000090   6607+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000045A2 B904 002E                          6608+         lgr   2,14                copy addr of our savearea            01-DCCPR
000045A6 E3B0 C018 0004          00000018   6609+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000045AC A7EB 0110               00000110   6610+         aghi  14,272              increase by frame size               01-DCCPR
000045B0 E3E0 C020 0021          00000020   6611+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000045B6 4720 B020               00000020   6612+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000045BA                                    6613+@PER_1637 ds   0h                                                       01-DCCPR
000045BA EBDE 2080 0024          00000080   6614+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000045C0 E3C0 2090 0024          00000090   6615+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000045C6 B904 00D2                          6616+         lgr   13,2                set real frame pointer               01-DCCPR
000045CA B904 00CF                          6617+         lgr   12,15               set base reg                         01-DCCPR
                        00004590            6618+         using @REGION_1637_1,12                                        01-DCCPR
000045CE B904 0091                          6619          LGR   9,1         ; ptr to parm area
                                            6620 * ******* End of Prologue
                                            6621 * *
000045D2 E350 9000 0004          00000000   6622          LG    5,0(0,9)    ; rk
000045D8 E360 9010 0004          00000010   6623          LG    6,16(0,9)   ; dst
                                            6624 * ***           const char *topic;
                                            6625 * ***           rd_ts_t now = rd_clock();
000045DE E3F0 C080 0004          00004610   6626          LG    15,@lit_1637_213 ; rd_clock
000045E4                                    6627 @@gen_label335 DS    0H
000045E4 05EF                               6628          BALR  14,15
000045E6                                    6629 @@gen_label336 DS    0H
000045E6 B904 008F                          6630          LGR   8,15
                                                                                                                           Page  136 
  Active Usings: @REGION_1637_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6631 * ***           rd_ts_t ts_expires = now + (rk->rk_conf.socket_timeout\
                                            6632 * _ms * 1000);
000045EA 5810 532C               0000032C   6633          L     1,812(0,5)  ; offset of socket_timeout_ms in rd_kafka_co*
                                                                nf_s
000045EE A71C 03E8               000003E8   6634          MHI   1,1000
000045F2 B904 0048                          6635          LGR   4,8
000045F6 B918 0041                          6636          AGFR  4,1
                                            6637 * ***           int i;
                                            6638 * ***           int cnt = 0;
000045FA A728 0000               00000000   6639          LHI   2,0         ; 0
                                            6640 * ***
                                            6641 * ***           for (i = 0 ; (topic = rd_list_elem(topics, i)) ; i++) \
                                            6642 * {
000045FE 1832                               6643          LR    3,2         ; i
00004600 47F0 C1A0               00004730   6644          B     @L708
00004608                                    6645          DS    0D
00004608 00000110                           6646 @FRAMESIZE_1637 DC F'272'
0000460C 00000000
00004610 0000000000000430                   6647 @lit_1637_213 DC AD(rd_clock)
00004618 00000000000034D8                   6648 @lit_1637_216 DC AD(rd_kafka_metadata_cache_find)
00004620 0000000000003710                   6649 @lit_1637_217 DC AD(rd_kafka_metadata_cache_insert)
00004628 00000000000002C8                   6650 @lit_1637_218 DC AD(rd_strdup)
00004630 0000000000000000                   6651 @lit_1637_219 DC AD(rd_list_add)
00004638 0000000000000000                   6652 @lit_1637_220 DC AD(rd_list_elem)
00004640 0000000000000550                   6653 @lit_1637_221 DC AD(rd_list_cnt)
00004648 0000000000000000                   6654 @lit_1637_223 DC AD(rd_kafka_log0)
00004650 0000000000006076                   6655 @lit_1637_222 DC AD(@strings@)
00004658                                    6656 @L707    DS    0H
                                            6657 * ***                   rd_kafka_metadata_topic_t mtopic = {
                                            6658 * ***                           .topic = (char *)topic,
00004658 E370 D0A8 0024          000000A8   6659          STG   7,168(0,13)
                                            6660 * ***                           .err = err
                                            6661 * ***                   };
0000465E 58A0 901C               0000001C   6662          L     10,28(0,9)  ; err
00004662 50A0 D0C0               000000C0   6663          ST    10,192(0,13)
                                            6664 * setting 16 bytes to 0x00
00004666 D70F D0B0 D0B0 000000B0 000000B0   6665          XC    176(16,13),176(13)
                                            6666 * setting 4 bytes to 0x00
0000466C D703 D0C4 D0C4 000000C4 000000C4   6667          XC    196(4,13),196(13)
                                            6668 * ***                    struct rd_kafka_metadata_cache_entry *rkmce;
                                            6669 * ***
                                            6670 * ***
                                            6671 * ***                   if (!replace &&
00004672 9500 9027      00000027 00000000   6672          CLI   39(9),0
00004676 4770 C13E               000046CE   6673          BNE   @L711
                                            6674 * ***                       (rkmce =
                                            6675 * ***                        rd_kafka_metadata_cache_find(rk, topic, 0\
                                            6676 * ))) {
0000467A E350 D0C8 0024          000000C8   6677          STG   5,200(0,13)
00004680 E370 D0D0 0024          000000D0   6678          STG   7,208(0,13)
00004686 D707 D0D8 D0D8 000000D8 000000D8   6679          XC    216(8,13),216(13)
0000468C 4110 D0C8               000000C8   6680          LA    1,200(0,13)
                                                                                                                           Page  137 
  Active Usings: @REGION_1637_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004690 E3F0 C088 0004          00004618   6681          LG    15,@lit_1637_216 ; rd_kafka_metadata_cache_find
00004696                                    6682 @@gen_label338 DS    0H
00004696 05EF                               6683          BALR  14,15
00004698                                    6684 @@gen_label339 DS    0H
00004698 B902 001F                          6685          LTGR  1,15
0000469C 4780 C13E               000046CE   6686          BZ    @L711
                                            6687 * ***                           if (!(((rkmce)->rkmce_mtopic.err) == R\
                                            6688 * D_KAFKA_RESP_ERR__WAIT_CACHE || ((rkmce)->rkmce_mtopic.err) == RD_KA\
                                            6689 * FKA_RESP_ERR__NOENT) ||
000046A0 E55C F058 FF5C          00000058   6690          CHSI  88(15),-164
000046A6 4780 C124               000046B4   6691          BE    @L712
000046AA E55C F058 FF64          00000058   6692          CHSI  88(15),-156
000046B0 4770 C19C               0000472C   6693          BNE   @L710
000046B4                                    6694 @L712    DS    0H
                                            6695 * ***                               (dst && rkmce->rkmce_mtopic.err !=
000046B4 B902 0016                          6696          LTGR  1,6
000046B8 4780 C13A               000046CA   6697          BZ    @L713
                                            6698 * ***                                RD_KAFKA_RESP_ERR__NOENT))
000046BC E55C F058 FF64          00000058   6699          CHSI  88(15),-156
000046C2 4780 C13A               000046CA   6700          BE    @L713
000046C6                                    6701 @L714    DS    0H
                                            6702 * ***                                   continue;
000046C6 47F0 C19C               0000472C   6703          B     @L710
000046CA                                    6704 @L713    DS    0H
                                            6705 * ***                           rkmce->rkmce_mtopic.err = err;
000046CA 50A0 F058               00000058   6706          ST    10,88(0,15) ; offset of err in rd_kafka_metadata_topic
                                            6707 * ***
                                            6708 * ***                   }
000046CE                                    6709 @L711    DS    0H
                                            6710 * ***
                                            6711 * ***                   rd_kafka_metadata_cache_insert(rk, &mtopic, no\
                                            6712 * w, ts_expires);
000046CE E350 D0C8 0024          000000C8   6713          STG   5,200(0,13)
000046D4 41F0 D0A8               000000A8   6714          LA    15,168(0,13)
000046D8 E3F0 D0D0 0024          000000D0   6715          STG   15,208(0,13)
000046DE E380 D0D8 0024          000000D8   6716          STG   8,216(0,13)
000046E4 E340 D0E0 0024          000000E0   6717          STG   4,224(0,13)
000046EA 4110 D0C8               000000C8   6718          LA    1,200(0,13)
000046EE E3F0 C090 0004          00004620   6719          LG    15,@lit_1637_217 ; rd_kafka_metadata_cache_insert
000046F4                                    6720 @@gen_label345 DS    0H
000046F4 05EF                               6721          BALR  14,15
000046F6                                    6722 @@gen_label346 DS    0H
                                            6723 * ***                   cnt++;
000046F6 A72A 0001               00000001   6724          AHI   2,1
                                            6725 * ***
                                            6726 * ***                   if (dst)
000046FA B902 00F6                          6727          LTGR  15,6
000046FE 4780 C19C               0000472C   6728          BZ    @L715
                                            6729 * ***                           rd_list_add(dst, rd_strdup(topic));
00004702 E370 D0C8 0024          000000C8   6730          STG   7,200(0,13)
00004708 4110 D0C8               000000C8   6731          LA    1,200(0,13)
0000470C E3F0 C098 0004          00004628   6732          LG    15,@lit_1637_218 ; rd_strdup
                                                                                                                           Page  138 
  Active Usings: @REGION_1637_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004712                                    6733 @@gen_label348 DS    0H
00004712 05EF                               6734          BALR  14,15
00004714                                    6735 @@gen_label349 DS    0H
00004714 E360 D0C8 0024          000000C8   6736          STG   6,200(0,13)
0000471A E3F0 D0D0 0024          000000D0   6737          STG   15,208(0,13)
00004720 4110 D0C8               000000C8   6738          LA    1,200(0,13)
00004724 E3F0 C0A0 0004          00004630   6739          LG    15,@lit_1637_219 ; rd_list_add
0000472A                                    6740 @@gen_label350 DS    0H
0000472A 05EF                               6741          BALR  14,15
0000472C                                    6742 @@gen_label351 DS    0H
0000472C                                    6743 @L715    DS    0H
                                            6744 * ***
                                            6745 * ***           }
0000472C                                    6746 @L710    DS    0H
0000472C A73A 0001               00000001   6747          AHI   3,1
00004730                                    6748 @L708    DS    0H
00004730 E3F0 9008 0004          00000008   6749          LG    15,8(0,9)   ; topics
00004736 E3F0 D0C8 0024          000000C8   6750          STG   15,200(0,13)
0000473C B914 00F3                          6751          LGFR  15,3
00004740 E3F0 D0D0 0024          000000D0   6752          STG   15,208(0,13)
00004746 4110 D0C8               000000C8   6753          LA    1,200(0,13)
0000474A E3F0 C0A8 0004          00004638   6754          LG    15,@lit_1637_220 ; rd_list_elem
00004750                                    6755 @@gen_label352 DS    0H
00004750 05EF                               6756          BALR  14,15
00004752                                    6757 @@gen_label353 DS    0H
00004752 B904 007F                          6758          LGR   7,15
00004756 B902 00F7                          6759          LTGR  15,7
0000475A 4770 C0C8               00004658   6760          BNZ   @L707
                                            6761 * ***
                                            6762 * ***           if (cnt > 0)
0000475E 1222                               6763          LTR   2,2
00004760 47D0 C250               000047E0   6764          BNH   @L716
                                            6765 * ***                   do { if ((((rk)->rk_conf.debug & (0x8)))) rd_k\
                                            6766 * afka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x8), "METADATA","Hinted c\
                                            6767 * ache of %d/%d topic(s) being queried", cnt, rd_list_cnt(topics)); } \
                                            6768 * while (0);
00004764                                    6769 @L717    DS    0H
00004764 9108 5323      00000323 00000008   6770          TM    803(5),8
00004768 4780 C250               000047E0   6771          BZ    @L720
0000476C E3F0 9008 0004          00000008   6772          LG    15,8(0,9)   ; topics
00004772 E3F0 D0C8 0024          000000C8   6773          STG   15,200(0,13)
00004778 4110 D0C8               000000C8   6774          LA    1,200(0,13)
0000477C E3F0 C0B0 0004          00004640   6775          LG    15,@lit_1637_221 ; rd_list_cnt
00004782                                    6776 @@gen_label357 DS    0H
00004782 05EF                               6777          BALR  14,15
00004784                                    6778 @@gen_label358 DS    0H
00004784 4110 5210               00000210   6779          LA    1,528(0,5)
00004788 E310 D0C8 0024          000000C8   6780          STG   1,200(0,13)
0000478E E350 D0D0 0024          000000D0   6781          STG   5,208(0,13)
00004794 D707 D0D8 D0D8 000000D8 000000D8   6782          XC    216(8,13),216(13)
0000479A E548 D0E0 0007          000000E0   6783          MVGHI 224(13),7
000047A0 E548 D0E8 0008          000000E8   6784          MVGHI 232(13),8
                                                                                                                           Page  139 
  Active Usings: @REGION_1637_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000047A6 E310 C0C0 0004          00004650   6785          LG    1,@lit_1637_222
000047AC 4130 11C2               000001C2   6786          LA    3,450(0,1)
000047B0 E330 D0F0 0024          000000F0   6787          STG   3,240(0,13)
000047B6 4110 1268               00000268   6788          LA    1,616(0,1)
000047BA E310 D0F8 0024          000000F8   6789          STG   1,248(0,13)
000047C0 B914 0012                          6790          LGFR  1,2
000047C4 E310 D100 0024          00000100   6791          STG   1,256(0,13)
000047CA B914 00FF                          6792          LGFR  15,15
000047CE E3F0 D108 0024          00000108   6793          STG   15,264(0,13)
000047D4 4110 D0C8               000000C8   6794          LA    1,200(0,13)
000047D8 E3F0 C0B8 0004          00004648   6795          LG    15,@lit_1637_223 ; rd_kafka_log0
000047DE                                    6796 @@gen_label359 DS    0H
000047DE 05EF                               6797          BALR  14,15
000047E0                                    6798 @@gen_label360 DS    0H
000047E0                                    6799 @L720    DS    0H
                                            6800 * ***
                                            6801 * ***
                                            6802 * ***
                                            6803 * ***           return cnt;
000047E0                                    6804 @L716    DS    0H
000047E0 B914 00F2                          6805          LGFR  15,2
                                            6806 * ***   }
                                            6807 * * **** Start of Epilogue
                                            6808          DCCEPIL
000047E4                                    6809+         ds 0h                                                          01-DCCEP
                                            6810+* Epilog
000047E4 D707 D088 D088 00000088 00000088   6811+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000047EA E3D0 D080 0004          00000080   6812+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000047F0 E3C0 D090 0004          00000090   6813+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000047F6 E3B0 C018 0004          00000018   6814+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000047FC E3C0 B010 0021          00000010   6815+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004802 E3E0 D008 0004          00000008   6816+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004808 EB1C D020 0004          00000020   6817+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000480E 078E                               6818+         bcr 8,14                if same dsab, just return              01-DCCEP
00004810 E3F0 D010 0024          00000010   6819+         stg 15,16(0,13)         save return code                       01-DCCEP
00004816 E300 D018 0024          00000018   6820+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000481C E3F0 D090 0004          00000090   6821+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004822 E3F0 F018 0004          00000018   6822+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004828 47F0 F040               00000040   6823+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6824+* End of Epilog
                                            6825 * * **** End of Epilogue
                                            6826          DROP  12
                                            6827 *
                                            6828 *   DSECT for automatic variables in "rd_kafka_metadata_cache_hint"
                                            6829 *      (FUNCTION #1637)
                                            6830 *
00000000                00000000 000000C8   6831 @AUTO#rd_kafka_metadata_cache_hint DSECT
00000000                                    6832          DS    XL168
000000A8                                    6833 rd_kafka_metadata_cache_hint#mtopic#1 DS 32XL1 ; mtopic
000000C8                000000C8 000000A8   6834          ORG   @AUTO#rd_kafka_metadata_cache_hint+168
000000A8                                    6835 rd_kafka_metadata_cache_hint#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8   6836          ORG   @AUTO#rd_kafka_metadata_cache_hint+168
                                                                                                                           Page  140 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                    6837 rd_kafka_metadata_cache_hint#i#0 DS 1F ; i
000000AC                000000AC 000000A8   6838          ORG   @AUTO#rd_kafka_metadata_cache_hint+168
000000A8                                    6839 rd_kafka_metadata_cache_hint#ts_expires#0 DS 8XL1 ; ts_expires
000000B0                000000B0 000000A8   6840          ORG   @AUTO#rd_kafka_metadata_cache_hint+168
000000A8                                    6841 rd_kafka_metadata_cache_hint#now#0 DS 8XL1 ; now
                                            6842 *
0000482C                00000000 00005E8C   6843 @CODE    CSECT
                                            6844 *
                                            6845 *
                                            6846 *
                                            6847 * ....... start of rd_kafka_metadata_cache_hint_rktparlist
                                            6848 rd_kafka_metadata_cache_hint_rktparlist ALIAS X'99846D92818692816D9485A*
                                                                3818481A3816D83818388856D888995A36D9992A39781999389A2A3'
0000482C                                    6849 @LNAME1638 DS  0H
0000482C 00000027                           6850          DC    X'00000027'
00004830 99846D9281869281                   6851          DC    C'rd_kafka_metadata_cache_hint_rkt'
00004850 9781999389A2A3                     6852          DC    C'parlist'
00004857 00                                 6853          DC    X'00'
                                            6854 rd_kafka_metadata_cache_hint_rktparlist DCCPRLG CINDEX=1638,BASER=12,FR*
                                                                AME=248,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1638
                                            6855          macro
                                            6856          dccextrn &m
                                            6857          gblc    &$dccext(1000)
                                            6858          gbla    &$dccexti
                                            6859          lcla    &i
                                            6860 &$dccext(&$dccexti+1) setc    '&m'
                                            6861 &i       seta    1
                                            6862 .loop    aif    (&i gt &$dccexti).around
                                            6863          aif    ('&$dccext(&i)' eq '&m').getout
                                            6864 &i       seta    &i+1
                                            6865          ago     .loop
                                            6866 .around  anop
                                            6867 &$dccexti seta &$dccexti+1
                                            6868          extrn  &m
                                            6869 .getout  anop
                                            6870          mend
00004858                                    6871+$eye0135    ds    0d                                                    02-DCCCA
00004858 C4C3C3                             6872+         dc cl3'DCC'                                                    02-DCCCA
0000485B 01                                 6873+         dc xl1'01' format one                                          02-DCCCA
0000485C 00000000                           6874+         dc a(0)                                                        02-DCCCA
00004860 00000000000048CA                   6875+         dc ad(@PER_1638)                                               02-DCCCA
00004868 00000000000000F8                   6876+         dc ad(248)                                                     02-DCCCA
00004870 0000000000000000                   6877+         dc ad(0)                                                       02-DCCCA
00004878 0000000000001000                   6878+         dc ad(4096)                                                    02-DCCCA
00004880 20                                 6879+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004881 03                                 6880+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004882 03                                 6881+         dc al1(3)                                                      02-DCCCA
00004883 08                                 6882+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004884 00                                 6883+         dc bl.8'00000000'                                              02-DCCCA
00004885 000000                             6884+         dc al3(0)                                                      02-DCCCA
00004888 000000000000482C                   6885+         dc ad(@LNAME1638)                                              02-DCCCA
00004890                                    6886+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  141 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004890 0000000000004858                   6887+         dc ad($eye0135)                                                02-DCCCA
00004898 0000000000000000                   6888+         dc ad(0)                                                       02-DCCCA
000048A0                                    6889+         ds    0d                                                       01-DCCPR
                                            6890+         entry rd_kafka_metadata_cache_hint_rktparlist                  01-DCCPR
000048A0                                    6891+rd_kafka_metadata_cache_hint_rktparlist ds 0d                           01-DCCPR
000048A0                                    6892+@REGION_1638_1 ds 0h                                                    01-DCCPR
000048A0 EBEC D008 0024          00000008   6893+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000048A6 E3E0 D088 0004          00000088   6894+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000048AC E3C0 D090 0004          00000090   6895+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000048B2 B904 002E                          6896+         lgr   2,14                copy addr of our savearea            01-DCCPR
000048B6 E3B0 C018 0004          00000018   6897+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000048BC A7EB 00F8               000000F8   6898+         aghi  14,248              increase by frame size               01-DCCPR
000048C0 E3E0 C020 0021          00000020   6899+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000048C6 4720 B020               00000020   6900+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000048CA                                    6901+@PER_1638 ds   0h                                                       01-DCCPR
000048CA EBDE 2080 0024          00000080   6902+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000048D0 E3C0 2090 0024          00000090   6903+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000048D6 B904 00D2                          6904+         lgr   13,2                set real frame pointer               01-DCCPR
000048DA B904 00CF                          6905+         lgr   12,15               set base reg                         01-DCCPR
                        000048A0            6906+         using @REGION_1638_1,12                                        01-DCCPR
000048DE B904 0031                          6907          LGR   3,1         ; ptr to parm area
                                            6908 * ******* End of Prologue
                                            6909 * *
000048E2 E320 3000 0004          00000000   6910          LG    2,0(0,3)    ; rk
                                            6911 * ***           rd_list_t topics;
                                            6912 * ***           int r;
                                            6913 * ***
                                            6914 * ***           rd_list_init(&topics, rktparlist->cnt, rd_free);
000048E8 41F0 D0A8               000000A8   6915          LA    15,168(0,13)
000048EC E3F0 D0D0 0024          000000D0   6916          STG   15,208(0,13)
000048F2 E340 3008 0004          00000008   6917          LG    4,8(0,3)    ; rktparlist
000048F8 E3F0 4000 0014          00000000   6918          LGF   15,0(0,4)
000048FE E3F0 D0D8 0024          000000D8   6919          STG   15,216(0,13)
00004904 E3F0 C180 0004          00004A20   6920          LG    15,@lit_1638_225 ; rd_free
0000490A E3F0 D0E0 0024          000000E0   6921          STG   15,224(0,13)
00004910 4110 D0D0               000000D0   6922          LA    1,208(0,13)
00004914 E3F0 C178 0004          00004A18   6923          LG    15,@lit_1638_226 ; rd_list_init
0000491A                                    6924 @@gen_label361 DS    0H
0000491A 05EF                               6925          BALR  14,15
0000491C                                    6926 @@gen_label362 DS    0H
                                            6927 * ***           rd_kafka_topic_partition_list_get_topic_names(rktparli\
                                            6928 * st, &topics,
                                            6929 * ***                                                         0);
0000491C E340 D0D0 0024          000000D0   6930          STG   4,208(0,13)
00004922 41F0 D0A8               000000A8   6931          LA    15,168(0,13)
00004926 E3F0 D0D8 0024          000000D8   6932          STG   15,216(0,13)
0000492C D707 D0E0 D0E0 000000E0 000000E0   6933          XC    224(8,13),224(13)
00004932 4110 D0D0               000000D0   6934          LA    1,208(0,13)
00004936 E3F0 C188 0004          00004A28   6935          LG    15,@lit_1638_227 ; rd_kafka_topic_partition_list_get_top*
                                                                ic_names
0000493C                                    6936 @@gen_label363 DS    0H
0000493C 05EF                               6937          BALR  14,15
                                                                                                                           Page  142 
  Active Usings: @REGION_1638_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000493E                                    6938 @@gen_label364 DS    0H
                                            6939 * ***           rwlock_wrlock(&(rk)->rk_lock);
0000493E 41F0 29A0               000009A0   6940          LA    15,2464(0,2)
00004942 E3F0 D0D0 0024          000000D0   6941          STG   15,208(0,13)
00004948 4110 D0D0               000000D0   6942          LA    1,208(0,13)
0000494C E3F0 C190 0004          00004A30   6943          LG    15,@lit_1638_228 ; rwlock_wrlock
00004952                                    6944 @@gen_label365 DS    0H
00004952 05EF                               6945          BALR  14,15
00004954                                    6946 @@gen_label366 DS    0H
                                            6947 * ***           r = rd_kafka_metadata_cache_hint(rk, &topics, dst,
                                            6948 * ***                                            RD_KAFKA_RESP_ERR__WA\
                                            6949 * IT_CACHE,
                                            6950 * ***                                            replace);
00004954 E320 D0D0 0024          000000D0   6951          STG   2,208(0,13)
0000495A 41F0 D0A8               000000A8   6952          LA    15,168(0,13)
0000495E E3F0 D0D8 0024          000000D8   6953          STG   15,216(0,13)
00004964 E3F0 3010 0004          00000010   6954          LG    15,16(0,3)  ; dst
0000496A E3F0 D0E0 0024          000000E0   6955          STG   15,224(0,13)
00004970 E548 D0E8 FF5C          000000E8   6956          MVGHI 232(13),-164
00004976 58F0 301C               0000001C   6957          L     15,28(0,3)  ; replace
0000497A E3F0 C1A0 0080          00004A40   6958          NG    15,@lit_1638_229
00004980 E3F0 D0F0 0024          000000F0   6959          STG   15,240(0,13)
00004986 4110 D0D0               000000D0   6960          LA    1,208(0,13)
0000498A E3F0 C198 0004          00004A38   6961          LG    15,@lit_1638_230 ; rd_kafka_metadata_cache_hint
00004990                                    6962 @@gen_label367 DS    0H
00004990 05EF                               6963          BALR  14,15
00004992                                    6964 @@gen_label368 DS    0H
00004992 183F                               6965          LR    3,15
                                            6966 * ***           rwlock_wrunlock(&(rk)->rk_lock);
00004994 41F0 29A0               000009A0   6967          LA    15,2464(0,2)
00004998 E3F0 D0D0 0024          000000D0   6968          STG   15,208(0,13)
0000499E 4110 D0D0               000000D0   6969          LA    1,208(0,13)
000049A2 E3F0 C1A8 0004          00004A48   6970          LG    15,@lit_1638_231 ; rwlock_wrunlock
000049A8                                    6971 @@gen_label369 DS    0H
000049A8 05EF                               6972          BALR  14,15
000049AA                                    6973 @@gen_label370 DS    0H
                                            6974 * ***
                                            6975 * ***           rd_list_destroy(&topics);
000049AA 41F0 D0A8               000000A8   6976          LA    15,168(0,13)
000049AE E3F0 D0D0 0024          000000D0   6977          STG   15,208(0,13)
000049B4 4110 D0D0               000000D0   6978          LA    1,208(0,13)
000049B8 E3F0 C1B0 0004          00004A50   6979          LG    15,@lit_1638_232 ; rd_list_destroy
000049BE                                    6980 @@gen_label371 DS    0H
000049BE 05EF                               6981          BALR  14,15
000049C0                                    6982 @@gen_label372 DS    0H
                                            6983 * ***           return r;
000049C0 B914 00F3                          6984          LGFR  15,3
                                            6985 * ***   }
                                            6986 * * **** Start of Epilogue
                                            6987          DCCEPIL
000049C4                                    6988+         ds 0h                                                          01-DCCEP
                                            6989+* Epilog
                                                                                                                           Page  143 
  Active Usings: @REGION_1638_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000049C4 D707 D088 D088 00000088 00000088   6990+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000049CA E3D0 D080 0004          00000080   6991+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000049D0 E3C0 D090 0004          00000090   6992+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000049D6 E3B0 C018 0004          00000018   6993+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000049DC E3C0 B010 0021          00000010   6994+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000049E2 E3E0 D008 0004          00000008   6995+         lg  14,8(0,13)          load up return address                 01-DCCEP
000049E8 EB1C D020 0004          00000020   6996+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000049EE 078E                               6997+         bcr 8,14                if same dsab, just return              01-DCCEP
000049F0 E3F0 D010 0024          00000010   6998+         stg 15,16(0,13)         save return code                       01-DCCEP
000049F6 E300 D018 0024          00000018   6999+         stg 0,24(0,13)          save more return code                  01-DCCEP
000049FC E3F0 D090 0004          00000090   7000+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004A02 E3F0 F018 0004          00000018   7001+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004A08 47F0 F040               00000040   7002+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7003+* End of Epilog
                                            7004 * * **** End of Epilogue
00004A10                                    7005          DS    0D
00004A10 000000F8                           7006 @FRAMESIZE_1638 DC F'248'
00004A14 00000000
00004A18 0000000000000000                   7007 @lit_1638_226 DC AD(rd_list_init)
00004A20 00000000000001C0                   7008 @lit_1638_225 DC AD(rd_free)
00004A28 0000000000000000                   7009 @lit_1638_227 DC AD(rd_kafka_topic_partition_list_get_topic_names)
00004A30 0000000000000000                   7010 @lit_1638_228 DC AD(rwlock_wrlock)
00004A38 0000000000004590                   7011 @lit_1638_230 DC AD(rd_kafka_metadata_cache_hint)
00004A40 00000000000000FF                   7012 @lit_1638_229 DC FD'255' 0x00000000000000ff
00004A48 0000000000000000                   7013 @lit_1638_231 DC AD(rwlock_wrunlock)
00004A50 0000000000000000                   7014 @lit_1638_232 DC AD(rd_list_destroy)
                                            7015          DROP  12
                                            7016 *
                                            7017 *   DSECT for automatic variables in "rd_kafka_metadata_cache_hint_rkt
                                            7018 *           parlist"
                                            7019 *      (FUNCTION #1638)
                                            7020 *
00000000                00000000 000000D0   7021 @AUTO#rd_kafka_metadata_cache_hint_rktparlist DSECT
00000000                                    7022          DS    XL168
000000A8                                    7023 rd_kafka_metadata_cache_hint_rktparlist#r#0 DS 1F ; r
000000AC                000000AC 000000A8   7024          ORG   @AUTO#rd_kafka_metadata_cache_hint_rktparlist+168
000000A8                                    7025 rd_kafka_metadata_cache_hint_rktparlist#topics#0 DS 40XL1 ; topics
                                            7026 *
00004A58                00000000 00005E8C   7027 @CODE    CSECT
                                            7028 *
                                            7029 *
                                            7030 *
                                            7031 * ....... start of rd_kafka_metadata_cache_entry_cmp
00004A58                                    7032 @LNAME1962 DS  0H
00004A58 00000021                           7033          DC    X'00000021'
00004A5C 99846D9281869281                   7034          DC    C'rd_kafka_metadata_cache_entry_cm'
00004A7C 97                                 7035          DC    C'p'
00004A7D 00                                 7036          DC    X'00'
                                            7037 rd_kafka_metadata_cache_entry_cmp DCCPRLG CINDEX=1962,BASER=12,FRAME=17*
                                                                6,SAVEAREA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1962
                                            7038          macro
                                            7039          dccextrn &m
                                                                                                                           Page  144 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7040          gblc    &$dccext(1000)
                                            7041          gbla    &$dccexti
                                            7042          lcla    &i
                                            7043 &$dccext(&$dccexti+1) setc    '&m'
                                            7044 &i       seta    1
                                            7045 .loop    aif    (&i gt &$dccexti).around
                                            7046          aif    ('&$dccext(&i)' eq '&m').getout
                                            7047 &i       seta    &i+1
                                            7048          ago     .loop
                                            7049 .around  anop
                                            7050 &$dccexti seta &$dccexti+1
                                            7051          extrn  &m
                                            7052 .getout  anop
                                            7053          mend
00004A80                                    7054+$eye0138    ds    0d                                                    02-DCCCA
00004A80 C4C3C3                             7055+         dc cl3'DCC'                                                    02-DCCCA
00004A83 01                                 7056+         dc xl1'01' format one                                          02-DCCCA
00004A84 00000000                           7057+         dc a(0)                                                        02-DCCCA
00004A88 0000000000000000                   7058+         dc ad(0)                                                       02-DCCCA
00004A90 00000000000000B0                   7059+         dc ad(176)                                                     02-DCCCA
00004A98 0000000000000000                   7060+         dc ad(0)                                                       02-DCCCA
00004AA0 0000000000001000                   7061+         dc ad(4096)                                                    02-DCCCA
00004AA8 20                                 7062+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004AA9 03                                 7063+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004AAA 03                                 7064+         dc al1(3)                                                      02-DCCCA
00004AAB 08                                 7065+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004AAC 00                                 7066+         dc bl.8'00000000'                                              02-DCCCA
00004AAD 000000                             7067+         dc al3(0)                                                      02-DCCCA
00004AB0 0000000000004A58                   7068+         dc ad(@LNAME1962)                                              02-DCCCA
00004AB8                                    7069+         ds 0d                                                          02-DCCCA
00004AB8 0000000000004A80                   7070+         dc ad($eye0138)                                                02-DCCCA
00004AC0 0000000000000000                   7071+         dc ad(0)                                                       02-DCCCA
00004AC8                                    7072+         ds    0d                                                       01-DCCPR
00004AC8                                    7073+rd_kafka_metadata_cache_entry_cmp ds 0d                                 01-DCCPR
00004AC8                                    7074+@REGION_1962_1 ds 0h                                                    01-DCCPR
00004AC8 EBEC D008 0024          00000008   7075+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004ACE B904 00CF                          7076+         lgr   12,15               set base reg                         01-DCCPR
                        00004AC8            7077+         using @REGION_1962_1,12                                        01-DCCPR
                                            7078 * ******* End of Prologue
                                            7079 * *
                                            7080 * ***           const struct rd_kafka_metadata_cache_entry *a = _a, *b\
                                            7081 *  = _b;
00004AD2 E3F0 1000 0004          00000000   7082          LG    15,0(0,1)   ; _a
00004AD8 E310 1008 0004          00000008   7083          LG    1,8(0,1)    ; _b
                                            7084 * ***           return __strcmp(a->rkmce_mtopic.topic,b->rkmce_mtopic.\
                                            7085 * topic);
00004ADE E3F0 F040 0004          00000040   7086          LG    15,64(0,15)
00004AE4 E310 1040 0004          00000040   7087          LG    1,64(0,1)
00004AEA 4100 0000               00000000   7088          LA    0,0(0,0)
00004AEE A729 0000               00000000   7089          LGHI  2,0
00004AF2                                    7090 @@gen_label373 DS 0H
00004AF2 B25D 00F1                          7091          CLST  15,1
                                                                                                                           Page  145 
  Active Usings: @REGION_1962_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004AF6 4710 C02A               00004AF2   7092          BC  1,@@gen_label373
00004AFA 4780 C046               00004B0E   7093          BE    @@gen_label374
00004AFE E320 F000 0090          00000000   7094          LLGC  2,0(0,15)
00004B04 E3F0 1000 0090          00000000   7095          LLGC  15,0(0,1)
00004B0A B90B 002F                          7096          SLGR  2,15
00004B0E                                    7097 @@gen_label374 DS 0H
00004B0E B914 00F2                          7098          LGFR  15,2
                                            7099 * ***   }
                                            7100 * * **** Start of Epilogue
                                            7101          DCCEPIL
00004B12                                    7102+         ds 0h                                                          01-DCCEP
                                            7103+* Epilog
                                            7104+* Epilog
00004B12 E3E0 D008 0004          00000008   7105+         lg    14,8(,13) restore the reg                                01-DCCEP
00004B18 EB1C D020 0004          00000020   7106+         lmg   1,12,32(13)                                              01-DCCEP
00004B1E 07FE                               7107+         br   14                                                        01-DCCEP
                                            7108+* End of Epilog
                                            7109 * * **** End of Epilogue
                                            7110          DROP  12
                                            7111 *
                                            7112 *   DSECT for automatic variables in "rd_kafka_metadata_cache_entry_cm
                                            7113 *           p"
                                            7114 *      (FUNCTION #1962)
                                            7115 *
00000000                00000000 000000A8   7116 @AUTO#rd_kafka_metadata_cache_entry_cmp DSECT
00000000                                    7117          DS    XL168
                                            7118 *
00004B20                00000000 00005E8C   7119 @CODE    CSECT
                                            7120 *
                                            7121 *
                                            7122 *
                                            7123 * ....... start of rd_kafka_metadata_cache_init
                                            7124 rd_kafka_metadata_cache_init ALIAS X'99846D92818692816D9485A3818481A381*
                                                                6D83818388856D899589A3'
00004B20                                    7125 @LNAME1643 DS  0H
00004B20 0000001C                           7126          DC    X'0000001C'
00004B24 99846D9281869281                   7127          DC    C'rd_kafka_metadata_cache_init'
00004B40 00                                 7128          DC    X'00'
                                            7129 rd_kafka_metadata_cache_init DCCPRLG CINDEX=1643,BASER=12,FRAME=192,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1643
                                            7130          macro
                                            7131          dccextrn &m
                                            7132          gblc    &$dccext(1000)
                                            7133          gbla    &$dccexti
                                            7134          lcla    &i
                                            7135 &$dccext(&$dccexti+1) setc    '&m'
                                            7136 &i       seta    1
                                            7137 .loop    aif    (&i gt &$dccexti).around
                                            7138          aif    ('&$dccext(&i)' eq '&m').getout
                                            7139 &i       seta    &i+1
                                            7140          ago     .loop
                                            7141 .around  anop
                                                                                                                           Page  146 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7142 &$dccexti seta &$dccexti+1
                                            7143          extrn  &m
                                            7144 .getout  anop
                                            7145          mend
00004B48                                    7146+$eye0141    ds    0d                                                    02-DCCCA
00004B48 C4C3C3                             7147+         dc cl3'DCC'                                                    02-DCCCA
00004B4B 01                                 7148+         dc xl1'01' format one                                          02-DCCCA
00004B4C 00000000                           7149+         dc a(0)                                                        02-DCCCA
00004B50 0000000000004BBA                   7150+         dc ad(@PER_1643)                                               02-DCCCA
00004B58 00000000000000C0                   7151+         dc ad(192)                                                     02-DCCCA
00004B60 0000000000000000                   7152+         dc ad(0)                                                       02-DCCCA
00004B68 0000000000001000                   7153+         dc ad(4096)                                                    02-DCCCA
00004B70 20                                 7154+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004B71 03                                 7155+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004B72 03                                 7156+         dc al1(3)                                                      02-DCCCA
00004B73 08                                 7157+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004B74 00                                 7158+         dc bl.8'00000000'                                              02-DCCCA
00004B75 000000                             7159+         dc al3(0)                                                      02-DCCCA
00004B78 0000000000004B20                   7160+         dc ad(@LNAME1643)                                              02-DCCCA
00004B80                                    7161+         ds 0d                                                          02-DCCCA
00004B80 0000000000004B48                   7162+         dc ad($eye0141)                                                02-DCCCA
00004B88 0000000000000000                   7163+         dc ad(0)                                                       02-DCCCA
00004B90                                    7164+         ds    0d                                                       01-DCCPR
                                            7165+         entry rd_kafka_metadata_cache_init                             01-DCCPR
00004B90                                    7166+rd_kafka_metadata_cache_init ds 0d                                      01-DCCPR
00004B90                                    7167+@REGION_1643_1 ds 0h                                                    01-DCCPR
00004B90 EBEC D008 0024          00000008   7168+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004B96 E3E0 D088 0004          00000088   7169+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004B9C E3C0 D090 0004          00000090   7170+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004BA2 B904 002E                          7171+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004BA6 E3B0 C018 0004          00000018   7172+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004BAC A7EB 00C0               000000C0   7173+         aghi  14,192              increase by frame size               01-DCCPR
00004BB0 E3E0 C020 0021          00000020   7174+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004BB6 4720 B020               00000020   7175+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004BBA                                    7176+@PER_1643 ds   0h                                                       01-DCCPR
00004BBA EBDE 2080 0024          00000080   7177+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004BC0 E3C0 2090 0024          00000090   7178+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004BC6 B904 00D2                          7179+         lgr   13,2                set real frame pointer               01-DCCPR
00004BCA B904 00CF                          7180+         lgr   12,15               set base reg                         01-DCCPR
                        00004B90            7181+         using @REGION_1643_1,12                                        01-DCCPR
                                            7182 * ******* End of Prologue
                                            7183 * *
                                            7184 * ***           rd_avl_init(&rk->rk_metadata_cache.rkmc_avl,
                                            7185 * ***                       rd_kafka_metadata_cache_entry_cmp, 0);
00004BCE E320 1000 0004          00000000   7186          LG    2,0(0,1)    ; rk
00004BD4 41F0 2AA8               00000AA8   7187          LA    15,2728(0,2)
00004BD8 E3F0 D0A8 0024          000000A8   7188          STG   15,168(0,13)
00004BDE E3F0 C150 0004          00004CE0   7189          LG    15,@lit_1643_234 ; rd_kafka_metadata_cache_entry_cmp
00004BE4 E3F0 D0B0 0024          000000B0   7190          STG   15,176(0,13)
00004BEA D707 D0B8 D0B8 000000B8 000000B8   7191          XC    184(8,13),184(13)
00004BF0 4110 D0A8               000000A8   7192          LA    1,168(0,13)
00004BF4 E3F0 C148 0004          00004CD8   7193          LG    15,@lit_1643_235 ; rd_avl_init
                                                                                                                           Page  147 
  Active Usings: @REGION_1643_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004BFA                                    7194 @@gen_label375 DS    0H
00004BFA 05EF                               7195          BALR  14,15
00004BFC                                    7196 @@gen_label376 DS    0H
                                            7197 * ***           do { (&rk->rk_metadata_cache.rkmc_expiry)->tqh_first =\
                                            7198 *  (((void *)0)); (&rk->rk_metadata_cache.rkmc_expiry)->tqh_last = &(&\
                                            7199 * rk->rk_metadata_cache.rkmc_expiry)->tqh_first; } while ( 0);
00004BFC                                    7200 @L721    DS    0H
00004BFC A7F9 0000               00000000   7201          LGHI  15,0        ; 0
00004C00 E3F0 2AF8 0024          00000AF8   7202          STG   15,2808(0,2) ; offset of rkmc_expiry in rd_kafka_metadat*
                                                                a_cache
00004C06 41F0 2AF8               00000AF8   7203          LA    15,2808(0,2)
00004C0A E3F0 2B00 0024          00000B00   7204          STG   15,2816(0,2) ; offset of tqh_last in 0000111
                                            7205 * ***           mtx_init(&rk->rk_metadata_cache.rkmc_full_lock, 0);
00004C10 41F0 2B70               00000B70   7206          LA    15,2928(0,2)
00004C14 E3F0 D0A8 0024          000000A8   7207          STG   15,168(0,13)
00004C1A D707 D0B0 D0B0 000000B0 000000B0   7208          XC    176(8,13),176(13)
00004C20 4110 D0A8               000000A8   7209          LA    1,168(0,13)
00004C24 E330 C158 0004          00004CE8   7210          LG    3,@lit_1643_237 ; mtx_init
00004C2A B904 00F3                          7211          LGR   15,3
00004C2E                                    7212 @@gen_label377 DS    0H
00004C2E 05EF                               7213          BALR  14,15
00004C30                                    7214 @@gen_label378 DS    0H
                                            7215 * ***           mtx_init(&rk->rk_metadata_cache.rkmc_cnd_lock, 0);
00004C30 41F0 2C08               00000C08   7216          LA    15,3080(0,2)
00004C34 E3F0 D0A8 0024          000000A8   7217          STG   15,168(0,13)
00004C3A D707 D0B0 D0B0 000000B0 000000B0   7218          XC    176(8,13),176(13)
00004C40 4110 D0A8               000000A8   7219          LA    1,168(0,13)
00004C44 B904 00F3                          7220          LGR   15,3
00004C48                                    7221 @@gen_label379 DS    0H
00004C48 05EF                               7222          BALR  14,15
00004C4A                                    7223 @@gen_label380 DS    0H
                                            7224 * ***           cnd_init(&rk->rk_metadata_cache.rkmc_cnd);
00004C4A 41F0 2BD8               00000BD8   7225          LA    15,3032(0,2)
00004C4E E3F0 D0A8 0024          000000A8   7226          STG   15,168(0,13)
00004C54 4110 D0A8               000000A8   7227          LA    1,168(0,13)
00004C58 E3F0 C160 0004          00004CF0   7228          LG    15,@lit_1643_239 ; cnd_init
00004C5E                                    7229 @@gen_label381 DS    0H
00004C5E 05EF                               7230          BALR  14,15
00004C60                                    7231 @@gen_label382 DS    0H
                                            7232 * ***           rd_list_init(&rk->rk_metadata_cache.rkmc_observers, 8,
                                            7233 * ***                        rd_kafka_enq_once_trigger_destroy);
00004C60 41F0 2B48               00000B48   7234          LA    15,2888(0,2)
00004C64 E3F0 D0A8 0024          000000A8   7235          STG   15,168(0,13)
00004C6A E548 D0B0 0008          000000B0   7236          MVGHI 176(13),8
00004C70 E3F0 C170 0004          00004D00   7237          LG    15,@lit_1643_240 ; rd_kafka_enq_once_trigger_destroy
00004C76 E3F0 D0B8 0024          000000B8   7238          STG   15,184(0,13)
00004C7C 4110 D0A8               000000A8   7239          LA    1,168(0,13)
00004C80 E3F0 C168 0004          00004CF8   7240          LG    15,@lit_1643_241 ; rd_list_init
00004C86                                    7241 @@gen_label383 DS    0H
00004C86 05EF                               7242          BALR  14,15
00004C88                                    7243 @@gen_label384 DS    0H
                                            7244 * ***   }
                                                                                                                           Page  148 
  Active Usings: @REGION_1643_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004C88                                    7245 @ret_lab_1643 DS 0H
                                            7246 * * **** Start of Epilogue
                                            7247          DCCEPIL
00004C88                                    7248+         ds 0h                                                          01-DCCEP
                                            7249+* Epilog
00004C88 D707 D088 D088 00000088 00000088   7250+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004C8E E3D0 D080 0004          00000080   7251+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004C94 E3C0 D090 0004          00000090   7252+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004C9A E3B0 C018 0004          00000018   7253+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004CA0 E3C0 B010 0021          00000010   7254+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004CA6 E3E0 D008 0004          00000008   7255+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004CAC EB1C D020 0004          00000020   7256+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004CB2 078E                               7257+         bcr 8,14                if same dsab, just return              01-DCCEP
00004CB4 E3F0 D010 0024          00000010   7258+         stg 15,16(0,13)         save return code                       01-DCCEP
00004CBA E300 D018 0024          00000018   7259+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004CC0 E3F0 D090 0004          00000090   7260+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004CC6 E3F0 F018 0004          00000018   7261+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004CCC 47F0 F040               00000040   7262+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7263+* End of Epilog
                                            7264 * * **** End of Epilogue
00004CD0                                    7265          DS    0D
00004CD0 000000C0                           7266 @FRAMESIZE_1643 DC F'192'
00004CD4 00000000
00004CD8 0000000000000000                   7267 @lit_1643_235 DC AD(rd_avl_init)
00004CE0 0000000000004AC8                   7268 @lit_1643_234 DC AD(rd_kafka_metadata_cache_entry_cmp)
00004CE8 0000000000000000                   7269 @lit_1643_237 DC AD(mtx_init)
00004CF0 0000000000000000                   7270 @lit_1643_239 DC AD(cnd_init)
00004CF8 0000000000000000                   7271 @lit_1643_241 DC AD(rd_list_init)
00004D00 0000000000000000                   7272 @lit_1643_240 DC AD(rd_kafka_enq_once_trigger_destroy)
                                            7273          DROP  12
                                            7274 *
                                            7275 *   DSECT for automatic variables in "rd_kafka_metadata_cache_init"
                                            7276 *      (FUNCTION #1643)
                                            7277 *
00000000                00000000 000000A8   7278 @AUTO#rd_kafka_metadata_cache_init DSECT
00000000                                    7279          DS    XL168
                                            7280 *
00004D08                00000000 00005E8C   7281 @CODE    CSECT
                                            7282 *
                                            7283 *
                                            7284 *
                                            7285 * ....... start of rd_kafka_metadata_cache_destroy
                                            7286 rd_kafka_metadata_cache_destroy ALIAS X'99846D92818692816D9485A3818481A*
                                                                3816D83818388856D8485A2A39996A8'
00004D08                                    7287 @LNAME1644 DS  0H
00004D08 0000001F                           7288          DC    X'0000001F'
00004D0C 99846D9281869281                   7289          DC    C'rd_kafka_metadata_cache_destroy'
00004D2B 00                                 7290          DC    X'00'
                                            7291 rd_kafka_metadata_cache_destroy DCCPRLG CINDEX=1644,BASER=12,FRAME=192,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1644
                                            7292          macro
                                            7293          dccextrn &m
                                                                                                                           Page  149 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7294          gblc    &$dccext(1000)
                                            7295          gbla    &$dccexti
                                            7296          lcla    &i
                                            7297 &$dccext(&$dccexti+1) setc    '&m'
                                            7298 &i       seta    1
                                            7299 .loop    aif    (&i gt &$dccexti).around
                                            7300          aif    ('&$dccext(&i)' eq '&m').getout
                                            7301 &i       seta    &i+1
                                            7302          ago     .loop
                                            7303 .around  anop
                                            7304 &$dccexti seta &$dccexti+1
                                            7305          extrn  &m
                                            7306 .getout  anop
                                            7307          mend
00004D30                                    7308+$eye0144    ds    0d                                                    02-DCCCA
00004D30 C4C3C3                             7309+         dc cl3'DCC'                                                    02-DCCCA
00004D33 01                                 7310+         dc xl1'01' format one                                          02-DCCCA
00004D34 00000000                           7311+         dc a(0)                                                        02-DCCCA
00004D38 0000000000004DA2                   7312+         dc ad(@PER_1644)                                               02-DCCCA
00004D40 00000000000000C0                   7313+         dc ad(192)                                                     02-DCCCA
00004D48 0000000000000000                   7314+         dc ad(0)                                                       02-DCCCA
00004D50 0000000000001000                   7315+         dc ad(4096)                                                    02-DCCCA
00004D58 20                                 7316+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004D59 03                                 7317+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004D5A 03                                 7318+         dc al1(3)                                                      02-DCCCA
00004D5B 08                                 7319+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004D5C 00                                 7320+         dc bl.8'00000000'                                              02-DCCCA
00004D5D 000000                             7321+         dc al3(0)                                                      02-DCCCA
00004D60 0000000000004D08                   7322+         dc ad(@LNAME1644)                                              02-DCCCA
00004D68                                    7323+         ds 0d                                                          02-DCCCA
00004D68 0000000000004D30                   7324+         dc ad($eye0144)                                                02-DCCCA
00004D70 0000000000000000                   7325+         dc ad(0)                                                       02-DCCCA
00004D78                                    7326+         ds    0d                                                       01-DCCPR
                                            7327+         entry rd_kafka_metadata_cache_destroy                          01-DCCPR
00004D78                                    7328+rd_kafka_metadata_cache_destroy ds 0d                                   01-DCCPR
00004D78                                    7329+@REGION_1644_1 ds 0h                                                    01-DCCPR
00004D78 EBEC D008 0024          00000008   7330+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004D7E E3E0 D088 0004          00000088   7331+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004D84 E3C0 D090 0004          00000090   7332+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004D8A B904 002E                          7333+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004D8E E3B0 C018 0004          00000018   7334+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004D94 A7EB 00C0               000000C0   7335+         aghi  14,192              increase by frame size               01-DCCPR
00004D98 E3E0 C020 0021          00000020   7336+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004D9E 4720 B020               00000020   7337+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004DA2                                    7338+@PER_1644 ds   0h                                                       01-DCCPR
00004DA2 EBDE 2080 0024          00000080   7339+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004DA8 E3C0 2090 0024          00000090   7340+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004DAE B904 00D2                          7341+         lgr   13,2                set real frame pointer               01-DCCPR
00004DB2 B904 00CF                          7342+         lgr   12,15               set base reg                         01-DCCPR
                        00004D78            7343+         using @REGION_1644_1,12                                        01-DCCPR
                                            7344 * ******* End of Prologue
                                            7345 * *
                                                                                                                           Page  150 
  Active Usings: @REGION_1644_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7346 * ***           rd_list_destroy(&rk->rk_metadata_cache.rkmc_observers)\
                                            7347 * ;
00004DB6 E320 1000 0004          00000000   7348          LG    2,0(0,1)    ; rk
00004DBC 41F0 2B48               00000B48   7349          LA    15,2888(0,2)
00004DC0 E3F0 D0A8 0024          000000A8   7350          STG   15,168(0,13)
00004DC6 4110 D0A8               000000A8   7351          LA    1,168(0,13)
00004DCA E3F0 C148 0004          00004EC0   7352          LG    15,@lit_1644_243 ; rd_list_destroy
00004DD0                                    7353 @@gen_label385 DS    0H
00004DD0 05EF                               7354          BALR  14,15
00004DD2                                    7355 @@gen_label386 DS    0H
                                            7356 * ***           rd_kafka_timer_stop(&rk->rk_timers,
                                            7357 * ***                               &rk->rk_metadata_cache.rkmc_query_\
                                            7358 * tmr, 1);
00004DD2 A7F9 1010               00001010   7359          LGHI  15,4112     ; 4112
00004DD6 41FF 2000               00000000   7360          LA    15,0(15,2)
00004DDA E3F0 D0A8 0024          000000A8   7361          STG   15,168(0,13)
00004DE0 41F0 2BA0               00000BA0   7362          LA    15,2976(0,2)
00004DE4 E3F0 D0B0 0024          000000B0   7363          STG   15,176(0,13)
00004DEA E548 D0B8 0001          000000B8   7364          MVGHI 184(13),1
00004DF0 4110 D0A8               000000A8   7365          LA    1,168(0,13)
00004DF4 E3F0 C150 0004          00004EC8   7366          LG    15,@lit_1644_245 ; rd_kafka_timer_stop
00004DFA                                    7367 @@gen_label387 DS    0H
00004DFA 05EF                               7368          BALR  14,15
00004DFC                                    7369 @@gen_label388 DS    0H
                                            7370 * ***           rd_kafka_metadata_cache_purge(rk, 1);
00004DFC E320 D0A8 0024          000000A8   7371          STG   2,168(0,13)
00004E02 E548 D0B0 0001          000000B0   7372          MVGHI 176(13),1
00004E08 4110 D0A8               000000A8   7373          LA    1,168(0,13)
00004E0C E3F0 C158 0004          00004ED0   7374          LG    15,@lit_1644_246 ; rd_kafka_metadata_cache_purge
00004E12                                    7375 @@gen_label389 DS    0H
00004E12 05EF                               7376          BALR  14,15
00004E14                                    7377 @@gen_label390 DS    0H
                                            7378 * ***           mtx_destroy(&rk->rk_metadata_cache.rkmc_full_lock);
00004E14 41F0 2B70               00000B70   7379          LA    15,2928(0,2)
00004E18 E3F0 D0A8 0024          000000A8   7380          STG   15,168(0,13)
00004E1E 4110 D0A8               000000A8   7381          LA    1,168(0,13)
00004E22 E330 C160 0004          00004ED8   7382          LG    3,@lit_1644_247 ; mtx_destroy
00004E28 B904 00F3                          7383          LGR   15,3
00004E2C                                    7384 @@gen_label391 DS    0H
00004E2C 05EF                               7385          BALR  14,15
00004E2E                                    7386 @@gen_label392 DS    0H
                                            7387 * ***           mtx_destroy(&rk->rk_metadata_cache.rkmc_cnd_lock);
00004E2E 41F0 2C08               00000C08   7388          LA    15,3080(0,2)
00004E32 E3F0 D0A8 0024          000000A8   7389          STG   15,168(0,13)
00004E38 4110 D0A8               000000A8   7390          LA    1,168(0,13)
00004E3C B904 00F3                          7391          LGR   15,3
00004E40                                    7392 @@gen_label393 DS    0H
00004E40 05EF                               7393          BALR  14,15
00004E42                                    7394 @@gen_label394 DS    0H
                                            7395 * ***           cnd_destroy(&rk->rk_metadata_cache.rkmc_cnd);
00004E42 41F0 2BD8               00000BD8   7396          LA    15,3032(0,2)
00004E46 E3F0 D0A8 0024          000000A8   7397          STG   15,168(0,13)
                                                                                                                           Page  151 
  Active Usings: @REGION_1644_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004E4C 4110 D0A8               000000A8   7398          LA    1,168(0,13)
00004E50 E3F0 C168 0004          00004EE0   7399          LG    15,@lit_1644_249 ; cnd_destroy
00004E56                                    7400 @@gen_label395 DS    0H
00004E56 05EF                               7401          BALR  14,15
00004E58                                    7402 @@gen_label396 DS    0H
                                            7403 * ***           rd_avl_destroy(&rk->rk_metadata_cache.rkmc_avl);
00004E58 41F0 2AA8               00000AA8   7404          LA    15,2728(0,2)
00004E5C E3F0 D0A8 0024          000000A8   7405          STG   15,168(0,13)
00004E62 4110 D0A8               000000A8   7406          LA    1,168(0,13)
00004E66 E3F0 C170 0004          00004EE8   7407          LG    15,@lit_1644_250 ; rd_avl_destroy
00004E6C                                    7408 @@gen_label397 DS    0H
00004E6C 05EF                               7409          BALR  14,15
00004E6E                                    7410 @@gen_label398 DS    0H
                                            7411 * ***   }
00004E6E                                    7412 @ret_lab_1644 DS 0H
                                            7413 * * **** Start of Epilogue
                                            7414          DCCEPIL
00004E6E                                    7415+         ds 0h                                                          01-DCCEP
                                            7416+* Epilog
00004E6E D707 D088 D088 00000088 00000088   7417+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004E74 E3D0 D080 0004          00000080   7418+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004E7A E3C0 D090 0004          00000090   7419+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004E80 E3B0 C018 0004          00000018   7420+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004E86 E3C0 B010 0021          00000010   7421+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004E8C E3E0 D008 0004          00000008   7422+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004E92 EB1C D020 0004          00000020   7423+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004E98 078E                               7424+         bcr 8,14                if same dsab, just return              01-DCCEP
00004E9A E3F0 D010 0024          00000010   7425+         stg 15,16(0,13)         save return code                       01-DCCEP
00004EA0 E300 D018 0024          00000018   7426+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004EA6 E3F0 D090 0004          00000090   7427+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004EAC E3F0 F018 0004          00000018   7428+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004EB2 47F0 F040               00000040   7429+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7430+* End of Epilog
                                            7431 * * **** End of Epilogue
00004EB8                                    7432          DS    0D
00004EB8 000000C0                           7433 @FRAMESIZE_1644 DC F'192'
00004EBC 00000000
00004EC0 0000000000000000                   7434 @lit_1644_243 DC AD(rd_list_destroy)
00004EC8 0000000000000000                   7435 @lit_1644_245 DC AD(rd_kafka_timer_stop)
00004ED0 0000000000003B00                   7436 @lit_1644_246 DC AD(rd_kafka_metadata_cache_purge)
00004ED8 0000000000000000                   7437 @lit_1644_247 DC AD(mtx_destroy)
00004EE0 0000000000000000                   7438 @lit_1644_249 DC AD(cnd_destroy)
00004EE8 0000000000000000                   7439 @lit_1644_250 DC AD(rd_avl_destroy)
                                            7440          DROP  12
                                            7441 *
                                            7442 *   DSECT for automatic variables in "rd_kafka_metadata_cache_destroy"
                                            7443 *      (FUNCTION #1644)
                                            7444 *
00000000                00000000 000000A8   7445 @AUTO#rd_kafka_metadata_cache_destroy DSECT
00000000                                    7446          DS    XL168
                                            7447 *
00004EF0                00000000 00005E8C   7448 @CODE    CSECT
                                                                                                                           Page  152 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7449 *
                                            7450 *
                                            7451 *
                                            7452 * ....... start of rd_kafka_metadata_cache_wait_state_change_async
                                            7453 rd_kafka_metadata_cache_wait_state_change_async ALIAS X'99846D928186928*
                                                                16D9485A3818481A3816D83818388856DA68189A36DA2A381A3856D8*
                                                                388819587856D81A2A89583'
00004EF0                                    7454 @LNAME1649 DS  0H
00004EF0 0000002F                           7455          DC    X'0000002F'
00004EF4 99846D9281869281                   7456          DC    C'rd_kafka_metadata_cache_wait_sta'
00004F14 A3856D8388819587                   7457          DC    C'te_change_async'
00004F23 00                                 7458          DC    X'00'
                                            7459 rd_kafka_metadata_cache_wait_state_change_async DCCPRLG CINDEX=1649,BAS*
                                                                ER=12,FRAME=184,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME164*
                                                                9
                                            7460          macro
                                            7461          dccextrn &m
                                            7462          gblc    &$dccext(1000)
                                            7463          gbla    &$dccexti
                                            7464          lcla    &i
                                            7465 &$dccext(&$dccexti+1) setc    '&m'
                                            7466 &i       seta    1
                                            7467 .loop    aif    (&i gt &$dccexti).around
                                            7468          aif    ('&$dccext(&i)' eq '&m').getout
                                            7469 &i       seta    &i+1
                                            7470          ago     .loop
                                            7471 .around  anop
                                            7472 &$dccexti seta &$dccexti+1
                                            7473          extrn  &m
                                            7474 .getout  anop
                                            7475          mend
00004F28                                    7476+$eye0147    ds    0d                                                    02-DCCCA
00004F28 C4C3C3                             7477+         dc cl3'DCC'                                                    02-DCCCA
00004F2B 01                                 7478+         dc xl1'01' format one                                          02-DCCCA
00004F2C 00000000                           7479+         dc a(0)                                                        02-DCCCA
00004F30 0000000000004F9A                   7480+         dc ad(@PER_1649)                                               02-DCCCA
00004F38 00000000000000B8                   7481+         dc ad(184)                                                     02-DCCCA
00004F40 0000000000000000                   7482+         dc ad(0)                                                       02-DCCCA
00004F48 0000000000001000                   7483+         dc ad(4096)                                                    02-DCCCA
00004F50 20                                 7484+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004F51 03                                 7485+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004F52 03                                 7486+         dc al1(3)                                                      02-DCCCA
00004F53 08                                 7487+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004F54 00                                 7488+         dc bl.8'00000000'                                              02-DCCCA
00004F55 000000                             7489+         dc al3(0)                                                      02-DCCCA
00004F58 0000000000004EF0                   7490+         dc ad(@LNAME1649)                                              02-DCCCA
00004F60                                    7491+         ds 0d                                                          02-DCCCA
00004F60 0000000000004F28                   7492+         dc ad($eye0147)                                                02-DCCCA
00004F68 0000000000000000                   7493+         dc ad(0)                                                       02-DCCCA
00004F70                                    7494+         ds    0d                                                       01-DCCPR
                                            7495+         entry rd_kafka_metadata_cache_wait_state_change_async          01-DCCPR
00004F70                                    7496+rd_kafka_metadata_cache_wait_state_change_async ds 0d                   01-DCCPR
                                                                                                                           Page  153 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004F70                                    7497+@REGION_1649_1 ds 0h                                                    01-DCCPR
00004F70 EBEC D008 0024          00000008   7498+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004F76 E3E0 D088 0004          00000088   7499+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004F7C E3C0 D090 0004          00000090   7500+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004F82 B904 002E                          7501+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004F86 E3B0 C018 0004          00000018   7502+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004F8C A7EB 00B8               000000B8   7503+         aghi  14,184              increase by frame size               01-DCCPR
00004F90 E3E0 C020 0021          00000020   7504+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004F96 4720 B020               00000020   7505+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004F9A                                    7506+@PER_1649 ds   0h                                                       01-DCCPR
00004F9A EBDE 2080 0024          00000080   7507+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004FA0 E3C0 2090 0024          00000090   7508+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004FA6 B904 00D2                          7509+         lgr   13,2                set real frame pointer               01-DCCPR
00004FAA B904 00CF                          7510+         lgr   12,15               set base reg                         01-DCCPR
                        00004F70            7511+         using @REGION_1649_1,12                                        01-DCCPR
00004FAE B904 0021                          7512          LGR   2,1         ; ptr to parm area
                                            7513 * ******* End of Prologue
                                            7514 * *
                                            7515 * ***           rd_kafka_enq_once_add_source(eonce, "wait metadata cac\
                                            7516 * he change");
00004FB2 E3F0 2008 0004          00000008   7517          LG    15,8(0,2)   ; eonce
00004FB8 E3F0 D0A8 0024          000000A8   7518          STG   15,168(0,13)
00004FBE E3F0 C0F0 0004          00005060   7519          LG    15,@lit_1649_252
00004FC4 41F0 F296               00000296   7520          LA    15,662(0,15)
00004FC8 E3F0 D0B0 0024          000000B0   7521          STG   15,176(0,13)
00004FCE 4110 D0A8               000000A8   7522          LA    1,168(0,13)
00004FD2 E3F0 C0E8 0004          00005058   7523          LG    15,@lit_1649_253 ; rd_kafka_enq_once_add_source
00004FD8                                    7524 @@gen_label399 DS    0H
00004FD8 05EF                               7525          BALR  14,15
00004FDA                                    7526 @@gen_label400 DS    0H
                                            7527 * ***           rd_list_add(&rk->rk_metadata_cache.rkmc_observers, eon\
                                            7528 * ce);
00004FDA E3F0 2000 0004          00000000   7529          LG    15,0(0,2)   ; rk
00004FE0 41F0 FB48               00000B48   7530          LA    15,2888(0,15)
00004FE4 E3F0 D0A8 0024          000000A8   7531          STG   15,168(0,13)
00004FEA E3F0 2008 0004          00000008   7532          LG    15,8(0,2)   ; eonce
00004FF0 E3F0 D0B0 0024          000000B0   7533          STG   15,176(0,13)
00004FF6 4110 D0A8               000000A8   7534          LA    1,168(0,13)
00004FFA E3F0 C0F8 0004          00005068   7535          LG    15,@lit_1649_254 ; rd_list_add
00005000                                    7536 @@gen_label401 DS    0H
00005000 05EF                               7537          BALR  14,15
00005002                                    7538 @@gen_label402 DS    0H
                                            7539 * ***   }
00005002                                    7540 @ret_lab_1649 DS 0H
                                            7541 * * **** Start of Epilogue
                                            7542          DCCEPIL
00005002                                    7543+         ds 0h                                                          01-DCCEP
                                            7544+* Epilog
00005002 D707 D088 D088 00000088 00000088   7545+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005008 E3D0 D080 0004          00000080   7546+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000500E E3C0 D090 0004          00000090   7547+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005014 E3B0 C018 0004          00000018   7548+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  154 
  Active Usings: @REGION_1649_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000501A E3C0 B010 0021          00000010   7549+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005020 E3E0 D008 0004          00000008   7550+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005026 EB1C D020 0004          00000020   7551+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000502C 078E                               7552+         bcr 8,14                if same dsab, just return              01-DCCEP
0000502E E3F0 D010 0024          00000010   7553+         stg 15,16(0,13)         save return code                       01-DCCEP
00005034 E300 D018 0024          00000018   7554+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000503A E3F0 D090 0004          00000090   7555+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005040 E3F0 F018 0004          00000018   7556+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005046 47F0 F040               00000040   7557+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7558+* End of Epilog
                                            7559 * * **** End of Epilogue
00005050                                    7560          DS    0D
00005050 000000B8                           7561 @FRAMESIZE_1649 DC F'184'
00005054 00000000
00005058 0000000000001A10                   7562 @lit_1649_253 DC AD(rd_kafka_enq_once_add_source)
00005060 0000000000006076                   7563 @lit_1649_252 DC AD(@strings@)
00005068 0000000000000000                   7564 @lit_1649_254 DC AD(rd_list_add)
                                            7565          DROP  12
                                            7566 *
                                            7567 *   DSECT for automatic variables in "rd_kafka_metadata_cache_wait_sta
                                            7568 *           te_change_async"
                                            7569 *      (FUNCTION #1649)
                                            7570 *
00000000                00000000 000000A8   7571 @AUTO#rd_kafka_metadata_cache_wait_state_change_async DSECT
00000000                                    7572          DS    XL168
                                            7573 *
00005070                00000000 00005E8C   7574 @CODE    CSECT
                                            7575 *
                                            7576 *
                                            7577 *
                                            7578 * ....... start of rd_kafka_metadata_cache_wait_change
                                            7579 rd_kafka_metadata_cache_wait_change ALIAS X'99846D92818692816D9485A3818*
                                                                481A3816D83818388856DA68189A36D838881958785'
00005070                                    7580 @LNAME1646 DS  0H
00005070 00000023                           7581          DC    X'00000023'
00005074 99846D9281869281                   7582          DC    C'rd_kafka_metadata_cache_wait_cha'
00005094 958785                             7583          DC    C'nge'
00005097 00                                 7584          DC    X'00'
                                            7585 rd_kafka_metadata_cache_wait_change DCCPRLG CINDEX=1646,BASER=12,FRAME=*
                                                                200,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1646
                                            7586          macro
                                            7587          dccextrn &m
                                            7588          gblc    &$dccext(1000)
                                            7589          gbla    &$dccexti
                                            7590          lcla    &i
                                            7591 &$dccext(&$dccexti+1) setc    '&m'
                                            7592 &i       seta    1
                                            7593 .loop    aif    (&i gt &$dccexti).around
                                            7594          aif    ('&$dccext(&i)' eq '&m').getout
                                            7595 &i       seta    &i+1
                                            7596          ago     .loop
                                            7597 .around  anop
                                                                                                                           Page  155 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7598 &$dccexti seta &$dccexti+1
                                            7599          extrn  &m
                                            7600 .getout  anop
                                            7601          mend
00005098                                    7602+$eye0150    ds    0d                                                    02-DCCCA
00005098 C4C3C3                             7603+         dc cl3'DCC'                                                    02-DCCCA
0000509B 01                                 7604+         dc xl1'01' format one                                          02-DCCCA
0000509C 00000000                           7605+         dc a(0)                                                        02-DCCCA
000050A0 000000000000510A                   7606+         dc ad(@PER_1646)                                               02-DCCCA
000050A8 00000000000000C8                   7607+         dc ad(200)                                                     02-DCCCA
000050B0 0000000000000000                   7608+         dc ad(0)                                                       02-DCCCA
000050B8 0000000000001000                   7609+         dc ad(4096)                                                    02-DCCCA
000050C0 20                                 7610+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000050C1 03                                 7611+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000050C2 03                                 7612+         dc al1(3)                                                      02-DCCCA
000050C3 08                                 7613+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000050C4 00                                 7614+         dc bl.8'00000000'                                              02-DCCCA
000050C5 000000                             7615+         dc al3(0)                                                      02-DCCCA
000050C8 0000000000005070                   7616+         dc ad(@LNAME1646)                                              02-DCCCA
000050D0                                    7617+         ds 0d                                                          02-DCCCA
000050D0 0000000000005098                   7618+         dc ad($eye0150)                                                02-DCCCA
000050D8 0000000000000000                   7619+         dc ad(0)                                                       02-DCCCA
000050E0                                    7620+         ds    0d                                                       01-DCCPR
                                            7621+         entry rd_kafka_metadata_cache_wait_change                      01-DCCPR
000050E0                                    7622+rd_kafka_metadata_cache_wait_change ds 0d                               01-DCCPR
000050E0                                    7623+@REGION_1646_1 ds 0h                                                    01-DCCPR
000050E0 EBEC D008 0024          00000008   7624+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000050E6 E3E0 D088 0004          00000088   7625+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000050EC E3C0 D090 0004          00000090   7626+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000050F2 B904 002E                          7627+         lgr   2,14                copy addr of our savearea            01-DCCPR
000050F6 E3B0 C018 0004          00000018   7628+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000050FC A7EB 00C8               000000C8   7629+         aghi  14,200              increase by frame size               01-DCCPR
00005100 E3E0 C020 0021          00000020   7630+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005106 4720 B020               00000020   7631+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000510A                                    7632+@PER_1646 ds   0h                                                       01-DCCPR
0000510A EBDE 2080 0024          00000080   7633+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005110 E3C0 2090 0024          00000090   7634+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005116 B904 00D2                          7635+         lgr   13,2                set real frame pointer               01-DCCPR
0000511A B904 00CF                          7636+         lgr   12,15               set base reg                         01-DCCPR
                        000050E0            7637+         using @REGION_1646_1,12                                        01-DCCPR
0000511E B904 0031                          7638          LGR   3,1         ; ptr to parm area
                                            7639 * ******* End of Prologue
                                            7640 * *
00005122 E320 3000 0004          00000000   7641          LG    2,0(0,3)    ; rk
                                            7642 * ***           int r;
                                            7643 * ***
                                            7644 * ***
                                            7645 * ***
                                            7646 * ***           mtx_lock(&rk->rk_metadata_cache.rkmc_cnd_lock);
00005128 41F0 2C08               00000C08   7647          LA    15,3080(0,2)
0000512C E3F0 D0B0 0024          000000B0   7648          STG   15,176(0,13)
00005132 4110 D0B0               000000B0   7649          LA    1,176(0,13)
                                                                                                                           Page  156 
  Active Usings: @REGION_1646_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005136 E3F0 C100 0004          000051E0   7650          LG    15,@lit_1646_256 ; mtx_lock
0000513C                                    7651 @@gen_label403 DS    0H
0000513C 05EF                               7652          BALR  14,15
0000513E                                    7653 @@gen_label404 DS    0H
                                            7654 * ***           r = cnd_timedwait_ms(&rk->rk_metadata_cache.rkmc_cnd,
                                            7655 * ***                                &rk->rk_metadata_cache.rkmc_cnd_l\
                                            7656 * ock,
                                            7657 * ***                                timeout_ms);
0000513E 41F0 2BD8               00000BD8   7658          LA    15,3032(0,2)
00005142 E3F0 D0B0 0024          000000B0   7659          STG   15,176(0,13)
00005148 41F0 2C08               00000C08   7660          LA    15,3080(0,2)
0000514C E3F0 D0B8 0024          000000B8   7661          STG   15,184(0,13)
00005152 E3F0 300C 0014          0000000C   7662          LGF   15,12(0,3)  ; timeout_ms
00005158 E3F0 D0C0 0024          000000C0   7663          STG   15,192(0,13)
0000515E 4110 D0B0               000000B0   7664          LA    1,176(0,13)
00005162 E3F0 C108 0004          000051E8   7665          LG    15,@lit_1646_257 ; cnd_timedwait_ms
00005168                                    7666 @@gen_label405 DS    0H
00005168 05EF                               7667          BALR  14,15
0000516A                                    7668 @@gen_label406 DS    0H
0000516A 183F                               7669          LR    3,15
                                            7670 * ***           mtx_unlock(&rk->rk_metadata_cache.rkmc_cnd_lock);
0000516C 41F0 2C08               00000C08   7671          LA    15,3080(0,2)
00005170 E3F0 D0B0 0024          000000B0   7672          STG   15,176(0,13)
00005176 4110 D0B0               000000B0   7673          LA    1,176(0,13)
0000517A E3F0 C110 0004          000051F0   7674          LG    15,@lit_1646_258 ; mtx_unlock
00005180                                    7675 @@gen_label407 DS    0H
00005180 05EF                               7676          BALR  14,15
00005182                                    7677 @@gen_label408 DS    0H
                                            7678 * ***
                                            7679 * ***   # 605 "C:\asgkafka\librdkafka\src\rdkafka_metadata_cache.c"
                                            7680 * ***           return r == 0;
00005182 10F3                               7681          LPR   15,3
00005184 A7FA FFFF               0000FFFF   7682          AHI   15,-1
00005188 88F0 001F               0000001F   7683          SRL   15,31(0)
0000518C B914 00FF                          7684          LGFR  15,15
                                            7685 * ***   }
                                            7686 * * **** Start of Epilogue
                                            7687          DCCEPIL
00005190                                    7688+         ds 0h                                                          01-DCCEP
                                            7689+* Epilog
00005190 D707 D088 D088 00000088 00000088   7690+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005196 E3D0 D080 0004          00000080   7691+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000519C E3C0 D090 0004          00000090   7692+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000051A2 E3B0 C018 0004          00000018   7693+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000051A8 E3C0 B010 0021          00000010   7694+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000051AE E3E0 D008 0004          00000008   7695+         lg  14,8(0,13)          load up return address                 01-DCCEP
000051B4 EB1C D020 0004          00000020   7696+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000051BA 078E                               7697+         bcr 8,14                if same dsab, just return              01-DCCEP
000051BC E3F0 D010 0024          00000010   7698+         stg 15,16(0,13)         save return code                       01-DCCEP
000051C2 E300 D018 0024          00000018   7699+         stg 0,24(0,13)          save more return code                  01-DCCEP
000051C8 E3F0 D090 0004          00000090   7700+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000051CE E3F0 F018 0004          00000018   7701+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page  157 
  Active Usings: @REGION_1646_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000051D4 47F0 F040               00000040   7702+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7703+* End of Epilog
                                            7704 * * **** End of Epilogue
000051D8                                    7705          DS    0D
000051D8 000000C8                           7706 @FRAMESIZE_1646 DC F'200'
000051DC 00000000
000051E0 0000000000000000                   7707 @lit_1646_256 DC AD(mtx_lock)
000051E8 0000000000000000                   7708 @lit_1646_257 DC AD(cnd_timedwait_ms)
000051F0 0000000000000000                   7709 @lit_1646_258 DC AD(mtx_unlock)
                                            7710          DROP  12
                                            7711 *
                                            7712 *   DSECT for automatic variables in "rd_kafka_metadata_cache_wait_cha
                                            7713 *           nge"
                                            7714 *      (FUNCTION #1646)
                                            7715 *
00000000                00000000 000000AC   7716 @AUTO#rd_kafka_metadata_cache_wait_change DSECT
00000000                                    7717          DS    XL168
000000A8                                    7718 rd_kafka_metadata_cache_wait_change#r#0 DS 1F ; r
                                            7719 *
000051F8                00000000 00005E8C   7720 @CODE    CSECT
                                            7721 *
                                            7722 *
                                            7723 *
                                            7724 * ....... start of rd_kafka_metadata_cache_propagate_changes_trigger_e\
                                            7725 * once
000051F8                                    7726 @LNAME1963 DS  0H
000051F8 00000037                           7727          DC    X'00000037'
000051FC 99846D9281869281                   7728          DC    C'rd_kafka_metadata_cache_propagat'
0000521C 856D838881958785                   7729          DC    C'e_changes_trigger_eonce'
00005233 00                                 7730          DC    X'00'
                                            7731 rd_kafka_metadata_cache_propagate_changes_trigger_eonce DCCPRLG CINDEX=*
                                                                1963,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@L*
                                                                NAME1963
                                            7732          macro
                                            7733          dccextrn &m
                                            7734          gblc    &$dccext(1000)
                                            7735          gbla    &$dccexti
                                            7736          lcla    &i
                                            7737 &$dccext(&$dccexti+1) setc    '&m'
                                            7738 &i       seta    1
                                            7739 .loop    aif    (&i gt &$dccexti).around
                                            7740          aif    ('&$dccext(&i)' eq '&m').getout
                                            7741 &i       seta    &i+1
                                            7742          ago     .loop
                                            7743 .around  anop
                                            7744 &$dccexti seta &$dccexti+1
                                            7745          extrn  &m
                                            7746 .getout  anop
                                            7747          mend
00005238                                    7748+$eye0153    ds    0d                                                    02-DCCCA
00005238 C4C3C3                             7749+         dc cl3'DCC'                                                    02-DCCCA
0000523B 01                                 7750+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page  158 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000523C 00000000                           7751+         dc a(0)                                                        02-DCCCA
00005240 00000000000052AA                   7752+         dc ad(@PER_1963)                                               02-DCCCA
00005248 00000000000000C8                   7753+         dc ad(200)                                                     02-DCCCA
00005250 0000000000000000                   7754+         dc ad(0)                                                       02-DCCCA
00005258 0000000000001000                   7755+         dc ad(4096)                                                    02-DCCCA
00005260 20                                 7756+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005261 03                                 7757+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005262 03                                 7758+         dc al1(3)                                                      02-DCCCA
00005263 08                                 7759+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005264 00                                 7760+         dc bl.8'00000000'                                              02-DCCCA
00005265 000000                             7761+         dc al3(0)                                                      02-DCCCA
00005268 00000000000051F8                   7762+         dc ad(@LNAME1963)                                              02-DCCCA
00005270                                    7763+         ds 0d                                                          02-DCCCA
00005270 0000000000005238                   7764+         dc ad($eye0153)                                                02-DCCCA
00005278 0000000000000000                   7765+         dc ad(0)                                                       02-DCCCA
00005280                                    7766+         ds    0d                                                       01-DCCPR
00005280                                    7767+rd_kafka_metadata_cache_propagate_changes_trigger_eonce ds 0d           01-DCCPR
00005280                                    7768+@REGION_1963_1 ds 0h                                                    01-DCCPR
00005280 EBEC D008 0024          00000008   7769+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005286 E3E0 D088 0004          00000088   7770+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000528C E3C0 D090 0004          00000090   7771+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005292 B904 002E                          7772+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005296 E3B0 C018 0004          00000018   7773+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000529C A7EB 00C8               000000C8   7774+         aghi  14,200              increase by frame size               01-DCCPR
000052A0 E3E0 C020 0021          00000020   7775+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000052A6 4720 B020               00000020   7776+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000052AA                                    7777+@PER_1963 ds   0h                                                       01-DCCPR
000052AA EBDE 2080 0024          00000080   7778+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000052B0 E3C0 2090 0024          00000090   7779+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000052B6 B904 00D2                          7780+         lgr   13,2                set real frame pointer               01-DCCPR
000052BA B904 00CF                          7781+         lgr   12,15               set base reg                         01-DCCPR
                        00005280            7782+         using @REGION_1963_1,12                                        01-DCCPR
                                            7783 * ******* End of Prologue
                                            7784 * *
                                            7785 * ***           rd_kafka_enq_once_t *eonce = elem;
000052BE E3F0 1000 0004          00000000   7786          LG    15,0(0,1)   ; elem
                                            7787 * ***           rd_kafka_enq_once_trigger(eonce, RD_KAFKA_RESP_ERR_NO_\
                                            7788 * ERROR,
                                            7789 * ***                                     "wait metadata cache change"\
                                            7790 * );
000052C4 E3F0 D0B0 0024          000000B0   7791          STG   15,176(0,13)
000052CA D707 D0B8 D0B8 000000B8 000000B8   7792          XC    184(8,13),184(13)
000052D0 E3F0 C0C8 0004          00005348   7793          LG    15,@lit_1963_260
000052D6 41F0 F296               00000296   7794          LA    15,662(0,15)
000052DA E3F0 D0C0 0024          000000C0   7795          STG   15,192(0,13)
000052E0 4110 D0B0               000000B0   7796          LA    1,176(0,13)
000052E4 E3F0 C0C0 0004          00005340   7797          LG    15,@lit_1963_261 ; rd_kafka_enq_once_trigger
000052EA                                    7798 @@gen_label409 DS    0H
000052EA 05EF                               7799          BALR  14,15
000052EC                                    7800 @@gen_label410 DS    0H
                                            7801 * ***           return 0;
000052EC A7F9 0000               00000000   7802          LGHI  15,0        ; 0
                                                                                                                           Page  159 
  Active Usings: @REGION_1963_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7803 * ***   }
                                            7804 * * **** Start of Epilogue
                                            7805          DCCEPIL
000052F0                                    7806+         ds 0h                                                          01-DCCEP
                                            7807+* Epilog
000052F0 D707 D088 D088 00000088 00000088   7808+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000052F6 E3D0 D080 0004          00000080   7809+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000052FC E3C0 D090 0004          00000090   7810+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005302 E3B0 C018 0004          00000018   7811+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005308 E3C0 B010 0021          00000010   7812+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000530E E3E0 D008 0004          00000008   7813+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005314 EB1C D020 0004          00000020   7814+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000531A 078E                               7815+         bcr 8,14                if same dsab, just return              01-DCCEP
0000531C E3F0 D010 0024          00000010   7816+         stg 15,16(0,13)         save return code                       01-DCCEP
00005322 E300 D018 0024          00000018   7817+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005328 E3F0 D090 0004          00000090   7818+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000532E E3F0 F018 0004          00000018   7819+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005334 47F0 F040               00000040   7820+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7821+* End of Epilog
                                            7822 * * **** End of Epilogue
00005338                                    7823          DS    0D
00005338 000000C8                           7824 @FRAMESIZE_1963 DC F'200'
0000533C 00000000
00005340 0000000000001B50                   7825 @lit_1963_261 DC AD(rd_kafka_enq_once_trigger)
00005348 0000000000006076                   7826 @lit_1963_260 DC AD(@strings@)
                                            7827          DROP  12
                                            7828 *
                                            7829 *   DSECT for automatic variables in "rd_kafka_metadata_cache_propagat
                                            7830 *           e_changes_trigger_eonce"
                                            7831 *      (FUNCTION #1963)
                                            7832 *
00000000                00000000 000000A8   7833 @AUTO#F#1963 DSECT
00000000                                    7834          DS    XL168
                                            7835 *
00005350                00000000 00005E8C   7836 @CODE    CSECT
                                            7837 *
                                            7838 *
                                            7839 *
                                            7840 * ....... start of rd_kafka_metadata_cache_propagate_changes
                                            7841 rd_kafka_metadata_cache_propagate_changes ALIAS X'99846D92818692816D948*
                                                                5A3818481A3816D83818388856D97999697818781A3856D838881958*
                                                                785A2'
00005350                                    7842 @LNAME1634 DS  0H
00005350 00000029                           7843          DC    X'00000029'
00005354 99846D9281869281                   7844          DC    C'rd_kafka_metadata_cache_propagat'
00005374 856D838881958785                   7845          DC    C'e_changes'
0000537D 00                                 7846          DC    X'00'
                                            7847 rd_kafka_metadata_cache_propagate_changes DCCPRLG CINDEX=1634,BASER=12,*
                                                                FRAME=192,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1634
                                            7848          macro
                                            7849          dccextrn &m
                                            7850          gblc    &$dccext(1000)
                                                                                                                           Page  160 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7851          gbla    &$dccexti
                                            7852          lcla    &i
                                            7853 &$dccext(&$dccexti+1) setc    '&m'
                                            7854 &i       seta    1
                                            7855 .loop    aif    (&i gt &$dccexti).around
                                            7856          aif    ('&$dccext(&i)' eq '&m').getout
                                            7857 &i       seta    &i+1
                                            7858          ago     .loop
                                            7859 .around  anop
                                            7860 &$dccexti seta &$dccexti+1
                                            7861          extrn  &m
                                            7862 .getout  anop
                                            7863          mend
00005380                                    7864+$eye0156    ds    0d                                                    02-DCCCA
00005380 C4C3C3                             7865+         dc cl3'DCC'                                                    02-DCCCA
00005383 01                                 7866+         dc xl1'01' format one                                          02-DCCCA
00005384 00000000                           7867+         dc a(0)                                                        02-DCCCA
00005388 00000000000053F2                   7868+         dc ad(@PER_1634)                                               02-DCCCA
00005390 00000000000000C0                   7869+         dc ad(192)                                                     02-DCCCA
00005398 0000000000000000                   7870+         dc ad(0)                                                       02-DCCCA
000053A0 0000000000001000                   7871+         dc ad(4096)                                                    02-DCCCA
000053A8 20                                 7872+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000053A9 03                                 7873+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000053AA 03                                 7874+         dc al1(3)                                                      02-DCCCA
000053AB 08                                 7875+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000053AC 00                                 7876+         dc bl.8'00000000'                                              02-DCCCA
000053AD 000000                             7877+         dc al3(0)                                                      02-DCCCA
000053B0 0000000000005350                   7878+         dc ad(@LNAME1634)                                              02-DCCCA
000053B8                                    7879+         ds 0d                                                          02-DCCCA
000053B8 0000000000005380                   7880+         dc ad($eye0156)                                                02-DCCCA
000053C0 0000000000000000                   7881+         dc ad(0)                                                       02-DCCCA
000053C8                                    7882+         ds    0d                                                       01-DCCPR
                                            7883+         entry rd_kafka_metadata_cache_propagate_changes                01-DCCPR
000053C8                                    7884+rd_kafka_metadata_cache_propagate_changes ds 0d                         01-DCCPR
000053C8                                    7885+@REGION_1634_1 ds 0h                                                    01-DCCPR
000053C8 EBEC D008 0024          00000008   7886+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000053CE E3E0 D088 0004          00000088   7887+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000053D4 E3C0 D090 0004          00000090   7888+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000053DA B904 002E                          7889+         lgr   2,14                copy addr of our savearea            01-DCCPR
000053DE E3B0 C018 0004          00000018   7890+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000053E4 A7EB 00C0               000000C0   7891+         aghi  14,192              increase by frame size               01-DCCPR
000053E8 E3E0 C020 0021          00000020   7892+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000053EE 4720 B020               00000020   7893+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000053F2                                    7894+@PER_1634 ds   0h                                                       01-DCCPR
000053F2 EBDE 2080 0024          00000080   7895+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000053F8 E3C0 2090 0024          00000090   7896+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000053FE B904 00D2                          7897+         lgr   13,2                set real frame pointer               01-DCCPR
00005402 B904 00CF                          7898+         lgr   12,15               set base reg                         01-DCCPR
                        000053C8            7899+         using @REGION_1634_1,12                                        01-DCCPR
                                            7900 * ******* End of Prologue
                                            7901 * *
                                            7902 * ***           mtx_lock(&rk->rk_metadata_cache.rkmc_cnd_lock);
                                                                                                                           Page  161 
  Active Usings: @REGION_1634_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005406 E320 1000 0004          00000000   7903          LG    2,0(0,1)    ; rk
0000540C 41F0 2C08               00000C08   7904          LA    15,3080(0,2)
00005410 E3F0 D0A8 0024          000000A8   7905          STG   15,168(0,13)
00005416 4110 D0A8               000000A8   7906          LA    1,168(0,13)
0000541A E3F0 C100 0004          000054C8   7907          LG    15,@lit_1634_264 ; mtx_lock
00005420                                    7908 @@gen_label411 DS    0H
00005420 05EF                               7909          BALR  14,15
00005422                                    7910 @@gen_label412 DS    0H
                                            7911 * ***           cnd_broadcast(&rk->rk_metadata_cache.rkmc_cnd);
00005422 41F0 2BD8               00000BD8   7912          LA    15,3032(0,2)
00005426 E3F0 D0A8 0024          000000A8   7913          STG   15,168(0,13)
0000542C 4110 D0A8               000000A8   7914          LA    1,168(0,13)
00005430 E3F0 C108 0004          000054D0   7915          LG    15,@lit_1634_265 ; cnd_broadcast
00005436                                    7916 @@gen_label413 DS    0H
00005436 05EF                               7917          BALR  14,15
00005438                                    7918 @@gen_label414 DS    0H
                                            7919 * ***           mtx_unlock(&rk->rk_metadata_cache.rkmc_cnd_lock);
00005438 41F0 2C08               00000C08   7920          LA    15,3080(0,2)
0000543C E3F0 D0A8 0024          000000A8   7921          STG   15,168(0,13)
00005442 4110 D0A8               000000A8   7922          LA    1,168(0,13)
00005446 E3F0 C110 0004          000054D8   7923          LG    15,@lit_1634_266 ; mtx_unlock
0000544C                                    7924 @@gen_label415 DS    0H
0000544C 05EF                               7925          BALR  14,15
0000544E                                    7926 @@gen_label416 DS    0H
                                            7927 * ***
                                            7928 * ***
                                            7929 * ***           rd_list_apply(&rk->rk_metadata_cache.rkmc_observers,
                                            7930 * ***                         rd_kafka_metadata_cache_propagate_change\
                                            7931 * s_trigger_eonce,
                                            7932 * ***                         ((void *)0));
0000544E 41F0 2B48               00000B48   7933          LA    15,2888(0,2)
00005452 E3F0 D0A8 0024          000000A8   7934          STG   15,168(0,13)
00005458 E3F0 C120 0004          000054E8   7935          LG    15,@lit_1634_267 ; rd_kafka_metadata_cache_propagate_cha*
                                                                nges_trigger_eonce
0000545E E3F0 D0B0 0024          000000B0   7936          STG   15,176(0,13)
00005464 D707 D0B8 D0B8 000000B8 000000B8   7937          XC    184(8,13),184(13)
0000546A 4110 D0A8               000000A8   7938          LA    1,168(0,13)
0000546E E3F0 C118 0004          000054E0   7939          LG    15,@lit_1634_268 ; rd_list_apply
00005474                                    7940 @@gen_label417 DS    0H
00005474 05EF                               7941          BALR  14,15
00005476                                    7942 @@gen_label418 DS    0H
                                            7943 * ***
                                            7944 * ***   }
00005476                                    7945 @ret_lab_1634 DS 0H
                                            7946 * * **** Start of Epilogue
                                            7947          DCCEPIL
00005476                                    7948+         ds 0h                                                          01-DCCEP
                                            7949+* Epilog
00005476 D707 D088 D088 00000088 00000088   7950+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000547C E3D0 D080 0004          00000080   7951+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005482 E3C0 D090 0004          00000090   7952+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005488 E3B0 C018 0004          00000018   7953+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  162 
  Active Usings: @REGION_1634_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000548E E3C0 B010 0021          00000010   7954+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005494 E3E0 D008 0004          00000008   7955+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000549A EB1C D020 0004          00000020   7956+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000054A0 078E                               7957+         bcr 8,14                if same dsab, just return              01-DCCEP
000054A2 E3F0 D010 0024          00000010   7958+         stg 15,16(0,13)         save return code                       01-DCCEP
000054A8 E300 D018 0024          00000018   7959+         stg 0,24(0,13)          save more return code                  01-DCCEP
000054AE E3F0 D090 0004          00000090   7960+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000054B4 E3F0 F018 0004          00000018   7961+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000054BA 47F0 F040               00000040   7962+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7963+* End of Epilog
                                            7964 * * **** End of Epilogue
000054C0                                    7965          DS    0D
000054C0 000000C0                           7966 @FRAMESIZE_1634 DC F'192'
000054C4 00000000
000054C8 0000000000000000                   7967 @lit_1634_264 DC AD(mtx_lock)
000054D0 0000000000000000                   7968 @lit_1634_265 DC AD(cnd_broadcast)
000054D8 0000000000000000                   7969 @lit_1634_266 DC AD(mtx_unlock)
000054E0 0000000000000000                   7970 @lit_1634_268 DC AD(rd_list_apply)
000054E8 0000000000005280                   7971 @lit_1634_267 DC AD(rd_kafka_metadata_cache_propagate_changes_trigger_e*
                                                                once)
                                            7972          DROP  12
                                            7973 *
                                            7974 *   DSECT for automatic variables in "rd_kafka_metadata_cache_propagat
                                            7975 *           e_changes"
                                            7976 *      (FUNCTION #1634)
                                            7977 *
00000000                00000000 000000A8   7978 @AUTO#rd_kafka_metadata_cache_propagate_changes DSECT
00000000                                    7979          DS    XL168
                                            7980 *
000054F0                00000000 00005E8C   7981 @CODE    CSECT
                                            7982 *
                                            7983 *
                                            7984 *
                                            7985 * ....... start of rd_kafka_metadata_cache_topic_get
                                            7986 rd_kafka_metadata_cache_topic_get ALIAS X'99846D92818692816D9485A381848*
                                                                1A3816D83818388856DA3969789836D8785A3'
000054F0                                    7987 @LNAME1639 DS  0H
000054F0 00000021                           7988          DC    X'00000021'
000054F4 99846D9281869281                   7989          DC    C'rd_kafka_metadata_cache_topic_ge'
00005514 A3                                 7990          DC    C't'
00005515 00                                 7991          DC    X'00'
                                            7992 rd_kafka_metadata_cache_topic_get DCCPRLG CINDEX=1639,BASER=12,FRAME=20*
                                                                0,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1639
                                            7993          macro
                                            7994          dccextrn &m
                                            7995          gblc    &$dccext(1000)
                                            7996          gbla    &$dccexti
                                            7997          lcla    &i
                                            7998 &$dccext(&$dccexti+1) setc    '&m'
                                            7999 &i       seta    1
                                            8000 .loop    aif    (&i gt &$dccexti).around
                                            8001          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  163 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8002 &i       seta    &i+1
                                            8003          ago     .loop
                                            8004 .around  anop
                                            8005 &$dccexti seta &$dccexti+1
                                            8006          extrn  &m
                                            8007 .getout  anop
                                            8008          mend
00005518                                    8009+$eye0159    ds    0d                                                    02-DCCCA
00005518 C4C3C3                             8010+         dc cl3'DCC'                                                    02-DCCCA
0000551B 01                                 8011+         dc xl1'01' format one                                          02-DCCCA
0000551C 00000000                           8012+         dc a(0)                                                        02-DCCCA
00005520 000000000000558A                   8013+         dc ad(@PER_1639)                                               02-DCCCA
00005528 00000000000000C8                   8014+         dc ad(200)                                                     02-DCCCA
00005530 0000000000000000                   8015+         dc ad(0)                                                       02-DCCCA
00005538 0000000000001000                   8016+         dc ad(4096)                                                    02-DCCCA
00005540 20                                 8017+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005541 03                                 8018+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005542 03                                 8019+         dc al1(3)                                                      02-DCCCA
00005543 08                                 8020+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005544 00                                 8021+         dc bl.8'00000000'                                              02-DCCCA
00005545 000000                             8022+         dc al3(0)                                                      02-DCCCA
00005548 00000000000054F0                   8023+         dc ad(@LNAME1639)                                              02-DCCCA
00005550                                    8024+         ds 0d                                                          02-DCCCA
00005550 0000000000005518                   8025+         dc ad($eye0159)                                                02-DCCCA
00005558 0000000000000000                   8026+         dc ad(0)                                                       02-DCCCA
00005560                                    8027+         ds    0d                                                       01-DCCPR
                                            8028+         entry rd_kafka_metadata_cache_topic_get                        01-DCCPR
00005560                                    8029+rd_kafka_metadata_cache_topic_get ds 0d                                 01-DCCPR
00005560                                    8030+@REGION_1639_1 ds 0h                                                    01-DCCPR
00005560 EBEC D008 0024          00000008   8031+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005566 E3E0 D088 0004          00000088   8032+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000556C E3C0 D090 0004          00000090   8033+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005572 B904 002E                          8034+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005576 E3B0 C018 0004          00000018   8035+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000557C A7EB 00C8               000000C8   8036+         aghi  14,200              increase by frame size               01-DCCPR
00005580 E3E0 C020 0021          00000020   8037+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005586 4720 B020               00000020   8038+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000558A                                    8039+@PER_1639 ds   0h                                                       01-DCCPR
0000558A EBDE 2080 0024          00000080   8040+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005590 E3C0 2090 0024          00000090   8041+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005596 B904 00D2                          8042+         lgr   13,2                set real frame pointer               01-DCCPR
0000559A B904 00CF                          8043+         lgr   12,15               set base reg                         01-DCCPR
                        00005560            8044+         using @REGION_1639_1,12                                        01-DCCPR
                                            8045 * ******* End of Prologue
                                            8046 * *
                                            8047 * ***           struct rd_kafka_metadata_cache_entry *rkmce;
                                            8048 * ***
                                            8049 * ***           if (!(rkmce = rd_kafka_metadata_cache_find(rk, topic, \
                                            8050 * valid)))
0000559E E3F0 1000 0004          00000000   8051          LG    15,0(0,1)   ; rk
000055A4 E3F0 D0B0 0024          000000B0   8052          STG   15,176(0,13)
000055AA E3F0 1008 0004          00000008   8053          LG    15,8(0,1)   ; topic
                                                                                                                           Page  164 
  Active Usings: @REGION_1639_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000055B0 E3F0 D0B8 0024          000000B8   8054          STG   15,184(0,13)
000055B6 E3F0 1014 0014          00000014   8055          LGF   15,20(0,1)  ; valid
000055BC E3F0 D0C0 0024          000000C0   8056          STG   15,192(0,13)
000055C2 4110 D0B0               000000B0   8057          LA    1,176(0,13)
000055C6 E3F0 C088 0004          000055E8   8058          LG    15,@lit_1639_270 ; rd_kafka_metadata_cache_find
000055CC                                    8059 @@gen_label419 DS    0H
000055CC 05EF                               8060          BALR  14,15
000055CE                                    8061 @@gen_label420 DS    0H
000055CE B902 001F                          8062          LTGR  1,15
000055D2 4770 C090               000055F0   8063          BNZ   @L724
                                            8064 * ***                   return ((void *)0);
000055D6 A7F9 0000               00000000   8065          LGHI  15,0        ; 0
000055DA 47F0 C094               000055F4   8066          B     @ret_lab_1639
000055E0                                    8067          DS    0D
000055E0 000000C8                           8068 @FRAMESIZE_1639 DC F'200'
000055E4 00000000
000055E8 00000000000034D8                   8069 @lit_1639_270 DC AD(rd_kafka_metadata_cache_find)
000055F0                                    8070 @L724    DS    0H
                                            8071 * ***
                                            8072 * ***           return &rkmce->rkmce_mtopic;
000055F0 41F0 F040               00000040   8073          LA    15,64(0,15)
                                            8074 * ***   }
000055F4                                    8075 @ret_lab_1639 DS 0H
                                            8076 * * **** Start of Epilogue
                                            8077          DCCEPIL
000055F4                                    8078+         ds 0h                                                          01-DCCEP
                                            8079+* Epilog
000055F4 D707 D088 D088 00000088 00000088   8080+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000055FA E3D0 D080 0004          00000080   8081+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005600 E3C0 D090 0004          00000090   8082+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005606 E3B0 C018 0004          00000018   8083+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000560C E3C0 B010 0021          00000010   8084+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005612 E3E0 D008 0004          00000008   8085+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005618 EB1C D020 0004          00000020   8086+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000561E 078E                               8087+         bcr 8,14                if same dsab, just return              01-DCCEP
00005620 E3F0 D010 0024          00000010   8088+         stg 15,16(0,13)         save return code                       01-DCCEP
00005626 E300 D018 0024          00000018   8089+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000562C E3F0 D090 0004          00000090   8090+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005632 E3F0 F018 0004          00000018   8091+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005638 47F0 F040               00000040   8092+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8093+* End of Epilog
                                            8094 * * **** End of Epilogue
                                            8095          DROP  12
                                            8096 *
                                            8097 *   DSECT for automatic variables in "rd_kafka_metadata_cache_topic_ge
                                            8098 *           t"
                                            8099 *      (FUNCTION #1639)
                                            8100 *
00000000                00000000 000000A8   8101 @AUTO#rd_kafka_metadata_cache_topic_get DSECT
00000000                                    8102          DS    XL168
                                            8103 *
0000563C                00000000 00005E8C   8104 @CODE    CSECT
                                                                                                                           Page  165 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8105 *
                                            8106 *
                                            8107 *
                                            8108 * ....... start of rd_kafka_metadata_cache_topic_partition_get
                                            8109 rd_kafka_metadata_cache_topic_partition_get ALIAS X'99846D92818692816D9*
                                                                485A3818481A3816D83818388856DA3969789836D978199A389A3899*
                                                                6956D8785A3'
0000563C                                    8110 @LNAME1640 DS  0H
0000563C 0000002B                           8111          DC    X'0000002B'
00005640 99846D9281869281                   8112          DC    C'rd_kafka_metadata_cache_topic_pa'
00005660 99A389A38996956D                   8113          DC    C'rtition_get'
0000566B 00                                 8114          DC    X'00'
                                            8115 rd_kafka_metadata_cache_topic_partition_get DCCPRLG CINDEX=1640,BASER=1*
                                                                2,FRAME=248,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1640
                                            8116          macro
                                            8117          dccextrn &m
                                            8118          gblc    &$dccext(1000)
                                            8119          gbla    &$dccexti
                                            8120          lcla    &i
                                            8121 &$dccext(&$dccexti+1) setc    '&m'
                                            8122 &i       seta    1
                                            8123 .loop    aif    (&i gt &$dccexti).around
                                            8124          aif    ('&$dccext(&i)' eq '&m').getout
                                            8125 &i       seta    &i+1
                                            8126          ago     .loop
                                            8127 .around  anop
                                            8128 &$dccexti seta &$dccexti+1
                                            8129          extrn  &m
                                            8130 .getout  anop
                                            8131          mend
00005670                                    8132+$eye0162    ds    0d                                                    02-DCCCA
00005670 C4C3C3                             8133+         dc cl3'DCC'                                                    02-DCCCA
00005673 01                                 8134+         dc xl1'01' format one                                          02-DCCCA
00005674 00000000                           8135+         dc a(0)                                                        02-DCCCA
00005678 00000000000056E2                   8136+         dc ad(@PER_1640)                                               02-DCCCA
00005680 00000000000000F8                   8137+         dc ad(248)                                                     02-DCCCA
00005688 0000000000000000                   8138+         dc ad(0)                                                       02-DCCCA
00005690 0000000000001000                   8139+         dc ad(4096)                                                    02-DCCCA
00005698 20                                 8140+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005699 03                                 8141+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000569A 03                                 8142+         dc al1(3)                                                      02-DCCCA
0000569B 08                                 8143+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000569C 00                                 8144+         dc bl.8'00000000'                                              02-DCCCA
0000569D 000000                             8145+         dc al3(0)                                                      02-DCCCA
000056A0 000000000000563C                   8146+         dc ad(@LNAME1640)                                              02-DCCCA
000056A8                                    8147+         ds 0d                                                          02-DCCCA
000056A8 0000000000005670                   8148+         dc ad($eye0162)                                                02-DCCCA
000056B0 0000000000000000                   8149+         dc ad(0)                                                       02-DCCCA
000056B8                                    8150+         ds    0d                                                       01-DCCPR
                                            8151+         entry rd_kafka_metadata_cache_topic_partition_get              01-DCCPR
000056B8                                    8152+rd_kafka_metadata_cache_topic_partition_get ds 0d                       01-DCCPR
000056B8                                    8153+@REGION_1640_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page  166 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000056B8 EBEC D008 0024          00000008   8154+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000056BE E3E0 D088 0004          00000088   8155+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000056C4 E3C0 D090 0004          00000090   8156+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000056CA B904 002E                          8157+         lgr   2,14                copy addr of our savearea            01-DCCPR
000056CE E3B0 C018 0004          00000018   8158+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000056D4 A7EB 00F8               000000F8   8159+         aghi  14,248              increase by frame size               01-DCCPR
000056D8 E3E0 C020 0021          00000020   8160+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000056DE 4720 B020               00000020   8161+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000056E2                                    8162+@PER_1640 ds   0h                                                       01-DCCPR
000056E2 EBDE 2080 0024          00000080   8163+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000056E8 E3C0 2090 0024          00000090   8164+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000056EE B904 00D2                          8165+         lgr   13,2                set real frame pointer               01-DCCPR
000056F2 B904 00CF                          8166+         lgr   12,15               set base reg                         01-DCCPR
                        000056B8            8167+         using @REGION_1640_1,12                                        01-DCCPR
                                            8168 * ******* End of Prologue
                                            8169 * *
                                            8170 * ***
                                            8171 * ***           const rd_kafka_metadata_topic_t *mtopic;
                                            8172 * ***           const rd_kafka_metadata_partition_t *mpart;
                                            8173 * ***           rd_kafka_metadata_partition_t skel = { .id = partition\
                                            8174 *  };
000056F6 58F0 1024               00000024   8175          L     15,36(0,1)  ; partition
000056FA 50F0 D0A8               000000A8   8176          ST    15,168(0,13)
                                            8177 * setting 36 bytes to 0x00
000056FE D723 D0AC D0AC 000000AC 000000AC   8178          XC    172(36,13),172(13)
                                            8179 * ***
                                            8180 * ***           *mtopicp = ((void *)0);
00005704 E320 1008 0004          00000008   8181          LG    2,8(0,1)    ; mtopicp
0000570A A739 0000               00000000   8182          LGHI  3,0         ; 0
0000570E E330 2000 0024          00000000   8183          STG   3,0(0,2)    ; mtopicp
                                            8184 * ***           *mpartp = ((void *)0);
00005714 E340 1010 0004          00000010   8185          LG    4,16(0,1)   ; mpartp
0000571A E330 4000 0024          00000000   8186          STG   3,0(0,4)    ; mpartp
                                            8187 * ***
                                            8188 * ***           if (!(mtopic = rd_kafka_metadata_cache_topic_get(rk, t\
                                            8189 * opic, valid)))
00005720 E3F0 1000 0004          00000000   8190          LG    15,0(0,1)   ; rk
00005726 E3F0 D0D0 0024          000000D0   8191          STG   15,208(0,13)
0000572C E3F0 1018 0004          00000018   8192          LG    15,24(0,1)  ; topic
00005732 E3F0 D0D8 0024          000000D8   8193          STG   15,216(0,13)
00005738 E3F0 102C 0014          0000002C   8194          LGF   15,44(0,1)  ; valid
0000573E E3F0 D0E0 0024          000000E0   8195          STG   15,224(0,13)
00005744 4110 D0D0               000000D0   8196          LA    1,208(0,13)
00005748 E3F0 C0B0 0004          00005768   8197          LG    15,@lit_1640_275 ; rd_kafka_metadata_cache_topic_get
0000574E                                    8198 @@gen_label422 DS    0H
0000574E 05EF                               8199          BALR  14,15
00005750                                    8200 @@gen_label423 DS    0H
00005750 B902 001F                          8201          LTGR  1,15
00005754 4770 C0C8               00005780   8202          BNZ   @L725
                                            8203 * ***                   return -1;
00005758 A7F9 FFFF               0000FFFF   8204          LGHI  15,-1       ; -1
0000575C 47F0 C13A               000057F2   8205          B     @ret_lab_1640
                                                                                                                           Page  167 
  Active Usings: @REGION_1640_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005760                                    8206          DS    0D
00005760 000000F8                           8207 @FRAMESIZE_1640 DC F'248'
00005764 00000000
00005768 0000000000005560                   8208 @lit_1640_275 DC AD(rd_kafka_metadata_cache_topic_get)
00005770 0000000000000000                   8209 @lit_1640_279 DC AD(bsearch)
00005778 0000000000003650                   8210 @lit_1640_278 DC AD(rd_kafka_metadata_partition_id_cmp)
00005780                                    8211 @L725    DS    0H
                                            8212 * ***
                                            8213 * ***           *mtopicp = mtopic;
00005780 E3F0 2000 0024          00000000   8214          STG   15,0(0,2)   ; mtopicp
                                            8215 * ***
                                            8216 * ***           if (mtopic->err)
00005786 E310 F018 0012          00000018   8217          LT    1,24(0,15)  ; offset of err in rd_kafka_metadata_topic
0000578C 4780 C0E0               00005798   8218          BZ    @L726
                                            8219 * ***                   return -1;
00005790 A7F9 FFFF               0000FFFF   8220          LGHI  15,-1       ; -1
00005794 47F0 C13A               000057F2   8221          B     @ret_lab_1640
00005798                                    8222 @L726    DS    0H
                                            8223 * ***
                                            8224 * ***
                                            8225 * ***           mpart = bsearch(&skel, mtopic->partitions,
                                            8226 * ***                           mtopic->partition_cnt,
                                            8227 * ***                           sizeof(*mtopic->partitions),
                                            8228 * ***                           rd_kafka_metadata_partition_id_cmp);
00005798 4110 D0A8               000000A8   8229          LA    1,168(0,13)
0000579C E310 D0D0 0024          000000D0   8230          STG   1,208(0,13)
000057A2 E310 F010 0004          00000010   8231          LG    1,16(0,15)
000057A8 E310 D0D8 0024          000000D8   8232          STG   1,216(0,13)
000057AE E3F0 F008 0014          00000008   8233          LGF   15,8(0,15)
000057B4 E3F0 D0E0 0024          000000E0   8234          STG   15,224(0,13)
000057BA E548 D0E8 0028          000000E8   8235          MVGHI 232(13),40
000057C0 E3F0 C0C0 0004          00005778   8236          LG    15,@lit_1640_278 ; rd_kafka_metadata_partition_id_cmp
000057C6 E3F0 D0F0 0024          000000F0   8237          STG   15,240(0,13)
000057CC 4110 D0D0               000000D0   8238          LA    1,208(0,13)
000057D0 E3F0 C0B8 0004          00005770   8239          LG    15,@lit_1640_279 ; bsearch
000057D6                                    8240 @@gen_label426 DS    0H
000057D6 05EF                               8241          BALR  14,15
000057D8                                    8242 @@gen_label427 DS    0H
                                            8243 * ***
                                            8244 * ***           if (!mpart)
000057D8 B902 001F                          8245          LTGR  1,15
000057DC 4770 C130               000057E8   8246          BNZ   @L727
                                            8247 * ***                   return 0;
000057E0 B904 00F3                          8248          LGR   15,3
000057E4 47F0 C13A               000057F2   8249          B     @ret_lab_1640
000057E8                                    8250 @L727    DS    0H
                                            8251 * ***
                                            8252 * ***           *mpartp = mpart;
000057E8 E3F0 4000 0024          00000000   8253          STG   15,0(0,4)   ; mpartp
                                            8254 * ***
                                            8255 * ***           return 1;
000057EE A7F9 0001               00000001   8256          LGHI  15,1        ; 1
                                                                                                                           Page  168 
  Active Usings: @REGION_1640_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8257 * ***   }
000057F2                                    8258 @ret_lab_1640 DS 0H
                                            8259 * * **** Start of Epilogue
                                            8260          DCCEPIL
000057F2                                    8261+         ds 0h                                                          01-DCCEP
                                            8262+* Epilog
000057F2 D707 D088 D088 00000088 00000088   8263+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000057F8 E3D0 D080 0004          00000080   8264+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000057FE E3C0 D090 0004          00000090   8265+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005804 E3B0 C018 0004          00000018   8266+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000580A E3C0 B010 0021          00000010   8267+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005810 E3E0 D008 0004          00000008   8268+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005816 EB1C D020 0004          00000020   8269+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000581C 078E                               8270+         bcr 8,14                if same dsab, just return              01-DCCEP
0000581E E3F0 D010 0024          00000010   8271+         stg 15,16(0,13)         save return code                       01-DCCEP
00005824 E300 D018 0024          00000018   8272+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000582A E3F0 D090 0004          00000090   8273+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005830 E3F0 F018 0004          00000018   8274+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005836 47F0 F040               00000040   8275+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8276+* End of Epilog
                                            8277 * * **** End of Epilogue
                                            8278          DROP  12
                                            8279 *
                                            8280 *   DSECT for automatic variables in "rd_kafka_metadata_cache_topic_pa
                                            8281 *           rtition_get"
                                            8282 *      (FUNCTION #1640)
                                            8283 *
00000000                00000000 000000D0   8284 @AUTO#rd_kafka_metadata_cache_topic_partition_get DSECT
00000000                                    8285          DS    XL168
000000A8                                    8286 rd_kafka_metadata_cache_topic_partition_get#skel#0 DS 40XL1 ; skel
                                            8287 *
0000583A                00000000 00005E8C   8288 @CODE    CSECT
                                            8289 *
                                            8290 *
                                            8291 *
                                            8292 * ....... start of rd_kafka_metadata_cache_topics_count_exists
                                            8293 rd_kafka_metadata_cache_topics_count_exists ALIAS X'99846D92818692816D9*
                                                                485A3818481A3816D83818388856DA396978983A26D8396A495A36D8*
                                                                5A789A2A3A2'
0000583A                                    8294 @LNAME1641 DS  0H
0000583A 0000002B                           8295          DC    X'0000002B'
0000583E 99846D9281869281                   8296          DC    C'rd_kafka_metadata_cache_topics_c'
0000585E 96A495A36D85A789                   8297          DC    C'ount_exists'
00005869 00                                 8298          DC    X'00'
                                            8299 rd_kafka_metadata_cache_topics_count_exists DCCPRLG CINDEX=1641,BASER=1*
                                                                2,FRAME=200,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1641
                                            8300          macro
                                            8301          dccextrn &m
                                            8302          gblc    &$dccext(1000)
                                            8303          gbla    &$dccexti
                                            8304          lcla    &i
                                            8305 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page  169 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8306 &i       seta    1
                                            8307 .loop    aif    (&i gt &$dccexti).around
                                            8308          aif    ('&$dccext(&i)' eq '&m').getout
                                            8309 &i       seta    &i+1
                                            8310          ago     .loop
                                            8311 .around  anop
                                            8312 &$dccexti seta &$dccexti+1
                                            8313          extrn  &m
                                            8314 .getout  anop
                                            8315          mend
00005870                                    8316+$eye0165    ds    0d                                                    02-DCCCA
00005870 C4C3C3                             8317+         dc cl3'DCC'                                                    02-DCCCA
00005873 01                                 8318+         dc xl1'01' format one                                          02-DCCCA
00005874 00000000                           8319+         dc a(0)                                                        02-DCCCA
00005878 00000000000058E2                   8320+         dc ad(@PER_1641)                                               02-DCCCA
00005880 00000000000000C8                   8321+         dc ad(200)                                                     02-DCCCA
00005888 0000000000000000                   8322+         dc ad(0)                                                       02-DCCCA
00005890 0000000000001000                   8323+         dc ad(4096)                                                    02-DCCCA
00005898 20                                 8324+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005899 03                                 8325+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000589A 03                                 8326+         dc al1(3)                                                      02-DCCCA
0000589B 08                                 8327+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000589C 00                                 8328+         dc bl.8'00000000'                                              02-DCCCA
0000589D 000000                             8329+         dc al3(0)                                                      02-DCCCA
000058A0 000000000000583A                   8330+         dc ad(@LNAME1641)                                              02-DCCCA
000058A8                                    8331+         ds 0d                                                          02-DCCCA
000058A8 0000000000005870                   8332+         dc ad($eye0165)                                                02-DCCCA
000058B0 0000000000000000                   8333+         dc ad(0)                                                       02-DCCCA
000058B8                                    8334+         ds    0d                                                       01-DCCPR
                                            8335+         entry rd_kafka_metadata_cache_topics_count_exists              01-DCCPR
000058B8                                    8336+rd_kafka_metadata_cache_topics_count_exists ds 0d                       01-DCCPR
000058B8                                    8337+@REGION_1641_1 ds 0h                                                    01-DCCPR
000058B8 EBEC D008 0024          00000008   8338+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000058BE E3E0 D088 0004          00000088   8339+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000058C4 E3C0 D090 0004          00000090   8340+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000058CA B904 002E                          8341+         lgr   2,14                copy addr of our savearea            01-DCCPR
000058CE E3B0 C018 0004          00000018   8342+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000058D4 A7EB 00C8               000000C8   8343+         aghi  14,200              increase by frame size               01-DCCPR
000058D8 E3E0 C020 0021          00000020   8344+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000058DE 4720 B020               00000020   8345+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000058E2                                    8346+@PER_1641 ds   0h                                                       01-DCCPR
000058E2 EBDE 2080 0024          00000080   8347+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000058E8 E3C0 2090 0024          00000090   8348+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000058EE B904 00D2                          8349+         lgr   13,2                set real frame pointer               01-DCCPR
000058F2 B904 00CF                          8350+         lgr   12,15               set base reg                         01-DCCPR
                        000058B8            8351+         using @REGION_1641_1,12                                        01-DCCPR
000058F6 B904 0061                          8352          LGR   6,1         ; ptr to parm area
                                            8353 * ******* End of Prologue
                                            8354 * *
                                            8355 * ***           const char *topic;
                                            8356 * ***           int i;
                                            8357 * ***           int cnt = 0;
                                                                                                                           Page  170 
  Active Usings: @REGION_1641_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000058FA A738 0000               00000000   8358          LHI   3,0         ; 0
                                            8359 * ***           int max_age = -1;
000058FE A748 FFFF               0000FFFF   8360          LHI   4,-1        ; -1
                                            8361 * ***
                                            8362 * ***           for (i = 0 ; (topic = rd_list_elem(topics, i)) ; i++) \
                                            8363 * {
00005902 1823                               8364          LR    2,3         ; i
00005904 47F0 C0D0               00005988   8365          B     @L729
00005908                                    8366          DS    0D
00005908 000000C8                           8367 @FRAMESIZE_1641 DC F'200'
0000590C 00000000
00005910 00000000000034D8                   8368 @lit_1641_286 DC AD(rd_kafka_metadata_cache_find)
00005918 0000000000000430                   8369 @lit_1641_287 DC AD(rd_clock)
00005920 000003E8                           8370 @lit_1641_288 DC F'1000' 0x000003e8
00005924 00000000
00005928 0000000000000000                   8371 @lit_1641_289 DC AD(rd_list_elem)
00005930                                    8372 @L728    DS    0H
                                            8373 * ***                   const struct rd_kafka_metadata_cache_entry *rk\
                                            8374 * mce;
                                            8375 * ***                   int age;
                                            8376 * ***
                                            8377 * ***                   if (!(rkmce = rd_kafka_metadata_cache_find(rk,\
                                            8378 *  topic,
                                            8379 * ***                                                              1))\
                                            8380 * )
00005930 E310 6000 0004          00000000   8381          LG    1,0(0,6)    ; rk
00005936 E310 D0B0 0024          000000B0   8382          STG   1,176(0,13)
0000593C E3F0 D0B8 0024          000000B8   8383          STG   15,184(0,13)
00005942 E548 D0C0 0001          000000C0   8384          MVGHI 192(13),1
00005948 4110 D0B0               000000B0   8385          LA    1,176(0,13)
0000594C E3F0 C058 0004          00005910   8386          LG    15,@lit_1641_286 ; rd_kafka_metadata_cache_find
00005952                                    8387 @@gen_label429 DS    0H
00005952 05EF                               8388          BALR  14,15
00005954                                    8389 @@gen_label430 DS    0H
00005954 B904 005F                          8390          LGR   5,15
00005958 B902 00F5                          8391          LTGR  15,5
0000595C 4780 C0CC               00005984   8392          BZ    @L731
                                            8393 * ***                           continue;
00005960                                    8394 @L732    DS    0H
                                            8395 * ***
                                            8396 * ***                   age = (int)((rd_clock() - rkmce->rkmce_ts_inse\
                                            8397 * rt)/1000);
00005960 E3F0 C060 0004          00005918   8398          LG    15,@lit_1641_287 ; rd_clock
00005966                                    8399 @@gen_label432 DS    0H
00005966 05EF                               8400          BALR  14,15
00005968                                    8401 @@gen_label433 DS    0H
00005968 E3F0 5038 0009          00000038   8402          SG    15,56(0,5)
0000596E B904 009F                          8403          LGR   9,15
00005972 E380 C068 001D          00005920   8404          DSGF  8,@lit_1641_288
                                            8405 * ***                   if (age > max_age)
00005978 1994                               8406          CR    9,4
0000597A 47D0 C0C8               00005980   8407          BNH   @L733
                                                                                                                           Page  171 
  Active Usings: @REGION_1641_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8408 * ***                           max_age = age;
0000597E 1849                               8409          LR    4,9         ; max_age
00005980                                    8410 @L733    DS    0H
                                            8411 * ***                   cnt++;
00005980 A73A 0001               00000001   8412          AHI   3,1
                                            8413 * ***           }
00005984                                    8414 @L731    DS    0H
00005984 A72A 0001               00000001   8415          AHI   2,1
00005988                                    8416 @L729    DS    0H
00005988 E3F0 6008 0004          00000008   8417          LG    15,8(0,6)   ; topics
0000598E E3F0 D0B0 0024          000000B0   8418          STG   15,176(0,13)
00005994 B914 00F2                          8419          LGFR  15,2
00005998 E3F0 D0B8 0024          000000B8   8420          STG   15,184(0,13)
0000599E 4110 D0B0               000000B0   8421          LA    1,176(0,13)
000059A2 E3F0 C070 0004          00005928   8422          LG    15,@lit_1641_289 ; rd_list_elem
000059A8                                    8423 @@gen_label435 DS    0H
000059A8 05EF                               8424          BALR  14,15
000059AA                                    8425 @@gen_label436 DS    0H
000059AA B902 001F                          8426          LTGR  1,15
000059AE 4770 C078               00005930   8427          BNZ   @L728
                                            8428 * ***
                                            8429 * ***           *metadata_agep = max_age;
000059B2 E3F0 6010 0004          00000010   8430          LG    15,16(0,6)  ; metadata_agep
000059B8 5040 F000               00000000   8431          ST    4,0(0,15)   ; metadata_agep
                                            8432 * ***
                                            8433 * ***           return cnt;
000059BC B914 00F3                          8434          LGFR  15,3
                                            8435 * ***
                                            8436 * ***   }
                                            8437 * * **** Start of Epilogue
                                            8438          DCCEPIL
000059C0                                    8439+         ds 0h                                                          01-DCCEP
                                            8440+* Epilog
000059C0 D707 D088 D088 00000088 00000088   8441+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000059C6 E3D0 D080 0004          00000080   8442+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000059CC E3C0 D090 0004          00000090   8443+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000059D2 E3B0 C018 0004          00000018   8444+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000059D8 E3C0 B010 0021          00000010   8445+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000059DE E3E0 D008 0004          00000008   8446+         lg  14,8(0,13)          load up return address                 01-DCCEP
000059E4 EB1C D020 0004          00000020   8447+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000059EA 078E                               8448+         bcr 8,14                if same dsab, just return              01-DCCEP
000059EC E3F0 D010 0024          00000010   8449+         stg 15,16(0,13)         save return code                       01-DCCEP
000059F2 E300 D018 0024          00000018   8450+         stg 0,24(0,13)          save more return code                  01-DCCEP
000059F8 E3F0 D090 0004          00000090   8451+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000059FE E3F0 F018 0004          00000018   8452+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005A04 47F0 F040               00000040   8453+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8454+* End of Epilog
                                            8455 * * **** End of Epilogue
                                            8456          DROP  12
                                            8457 *
                                            8458 *   DSECT for automatic variables in "rd_kafka_metadata_cache_topics_c
                                            8459 *           ount_exists"
                                                                                                                           Page  172 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8460 *      (FUNCTION #1641)
                                            8461 *
00000000                00000000 000000AC   8462 @AUTO#rd_kafka_metadata_cache_topics_count_exists DSECT
00000000                                    8463          DS    XL168
000000A8                                    8464 rd_kafka_metadata_cache_topics_count_exists#age#1 DS 1F ; age
000000AC                000000AC 000000A8   8465          ORG   @AUTO#rd_kafka_metadata_cache_topics_count_exists+168
000000A8                                    8466 rd_kafka_metadata_cache_topics_count_exists#max_age#0 DS 1F ; max_age
000000AC                000000AC 000000A8   8467          ORG   @AUTO#rd_kafka_metadata_cache_topics_count_exists+168
000000A8                                    8468 rd_kafka_metadata_cache_topics_count_exists#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8   8469          ORG   @AUTO#rd_kafka_metadata_cache_topics_count_exists+168
000000A8                                    8470 rd_kafka_metadata_cache_topics_count_exists#i#0 DS 1F ; i
                                            8471 *
00005A08                00000000 00005E8C   8472 @CODE    CSECT
                                            8473 *
                                            8474 *
                                            8475 *
                                            8476 * ....... start of rd_kafka_metadata_cache_topics_to_list
                                            8477 rd_kafka_metadata_cache_topics_to_list ALIAS X'99846D92818692816D9485A3*
                                                                818481A3816D83818388856DA396978983A26DA3966D9389A2A3'
00005A08                                    8478 @LNAME1648 DS  0H
00005A08 00000026                           8479          DC    X'00000026'
00005A0C 99846D9281869281                   8480          DC    C'rd_kafka_metadata_cache_topics_t'
00005A2C 966D9389A2A3                       8481          DC    C'o_list'
00005A32 00                                 8482          DC    X'00'
                                            8483 rd_kafka_metadata_cache_topics_to_list DCCPRLG CINDEX=1648,BASER=12,FRA*
                                                                ME=200,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1648
                                            8484          macro
                                            8485          dccextrn &m
                                            8486          gblc    &$dccext(1000)
                                            8487          gbla    &$dccexti
                                            8488          lcla    &i
                                            8489 &$dccext(&$dccexti+1) setc    '&m'
                                            8490 &i       seta    1
                                            8491 .loop    aif    (&i gt &$dccexti).around
                                            8492          aif    ('&$dccext(&i)' eq '&m').getout
                                            8493 &i       seta    &i+1
                                            8494          ago     .loop
                                            8495 .around  anop
                                            8496 &$dccexti seta &$dccexti+1
                                            8497          extrn  &m
                                            8498 .getout  anop
                                            8499          mend
00005A38                                    8500+$eye0168    ds    0d                                                    02-DCCCA
00005A38 C4C3C3                             8501+         dc cl3'DCC'                                                    02-DCCCA
00005A3B 01                                 8502+         dc xl1'01' format one                                          02-DCCCA
00005A3C 00000000                           8503+         dc a(0)                                                        02-DCCCA
00005A40 0000000000005AAA                   8504+         dc ad(@PER_1648)                                               02-DCCCA
00005A48 00000000000000C8                   8505+         dc ad(200)                                                     02-DCCCA
00005A50 0000000000000000                   8506+         dc ad(0)                                                       02-DCCCA
00005A58 0000000000001000                   8507+         dc ad(4096)                                                    02-DCCCA
00005A60 20                                 8508+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005A61 03                                 8509+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page  173 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005A62 03                                 8510+         dc al1(3)                                                      02-DCCCA
00005A63 08                                 8511+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005A64 00                                 8512+         dc bl.8'00000000'                                              02-DCCCA
00005A65 000000                             8513+         dc al3(0)                                                      02-DCCCA
00005A68 0000000000005A08                   8514+         dc ad(@LNAME1648)                                              02-DCCCA
00005A70                                    8515+         ds 0d                                                          02-DCCCA
00005A70 0000000000005A38                   8516+         dc ad($eye0168)                                                02-DCCCA
00005A78 0000000000000000                   8517+         dc ad(0)                                                       02-DCCCA
00005A80                                    8518+         ds    0d                                                       01-DCCPR
                                            8519+         entry rd_kafka_metadata_cache_topics_to_list                   01-DCCPR
00005A80                                    8520+rd_kafka_metadata_cache_topics_to_list ds 0d                            01-DCCPR
00005A80                                    8521+@REGION_1648_1 ds 0h                                                    01-DCCPR
00005A80 EBEC D008 0024          00000008   8522+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005A86 E3E0 D088 0004          00000088   8523+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005A8C E3C0 D090 0004          00000090   8524+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005A92 B904 002E                          8525+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005A96 E3B0 C018 0004          00000018   8526+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005A9C A7EB 00C8               000000C8   8527+         aghi  14,200              increase by frame size               01-DCCPR
00005AA0 E3E0 C020 0021          00000020   8528+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005AA6 4720 B020               00000020   8529+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005AAA                                    8530+@PER_1648 ds   0h                                                       01-DCCPR
00005AAA EBDE 2080 0024          00000080   8531+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005AB0 E3C0 2090 0024          00000090   8532+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005AB6 B904 00D2                          8533+         lgr   13,2                set real frame pointer               01-DCCPR
00005ABA B904 00CF                          8534+         lgr   12,15               set base reg                         01-DCCPR
                        00005A80            8535+         using @REGION_1648_1,12                                        01-DCCPR
00005ABE B904 0021                          8536          LGR   2,1         ; ptr to parm area
                                            8537 * ******* End of Prologue
                                            8538 * *
00005AC2 E340 2008 0004          00000008   8539          LG    4,8(0,2)    ; topics
                                            8540 * ***           const struct rd_kafka_metadata_cache_entry *rkmce;
                                            8541 * ***           int precnt = rd_list_cnt(topics);
00005AC8 E340 D0B0 0024          000000B0   8542          STG   4,176(0,13)
00005ACE 4110 D0B0               000000B0   8543          LA    1,176(0,13)
00005AD2 E3F0 C078 0004          00005AF8   8544          LG    15,@lit_1648_291 ; rd_list_cnt
00005AD8                                    8545 @@gen_label438 DS    0H
00005AD8 05EF                               8546          BALR  14,15
00005ADA                                    8547 @@gen_label439 DS    0H
00005ADA 183F                               8548          LR    3,15
                                            8549 * ***
                                            8550 * ***           for ((rkmce) = ((&rk->rk_metadata_cache.rkmc_expiry)->\
                                            8551 * tqh_first); (rkmce) != (((void *)0)); (rkmce) = ((rkmce)->rkmce_link\
                                            8552 *  .tqe_next)) {
00005ADC E3F0 2000 0004          00000000   8553          LG    15,0(0,2)   ; rk
00005AE2 E320 FAF8 0004          00000AF8   8554          LG    2,2808(0,15) ; offset of rkmc_expiry in rd_kafka_metadat*
                                                                a_cache
00005AE8 47F0 C11C               00005B9C   8555          B     @L735
00005AF0                                    8556          DS    0D
00005AF0 000000C8                           8557 @FRAMESIZE_1648 DC F'200'
00005AF4 00000000
00005AF8 0000000000000550                   8558 @lit_1648_291 DC AD(rd_list_cnt)
00005B00 0000000000000000                   8559 @lit_1648_293 DC AD(rd_list_find)
                                                                                                                           Page  174 
  Active Usings: @REGION_1648_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005B08 0000000000000000                   8560 @lit_1648_292 DC AD(rd_list_cmp_str)
00005B10 00000000000002C8                   8561 @lit_1648_294 DC AD(rd_strdup)
00005B18 0000000000000000                   8562 @lit_1648_295 DC AD(rd_list_add)
00005B20                                    8563 @L734    DS    0H
                                            8564 * ***
                                            8565 * ***                   if (!(((rkmce)->rkmce_mtopic.err) == RD_KAFKA_\
                                            8566 * RESP_ERR__WAIT_CACHE || ((rkmce)->rkmce_mtopic.err) == RD_KAFKA_RESP\
                                            8567 * _ERR__NOENT))
00005B20 E55C 2058 FF5C          00000058   8568          CHSI  88(2),-164
00005B26 4780 C0B4               00005B34   8569          BE    @L738
00005B2A E55C 2058 FF64          00000058   8570          CHSI  88(2),-156
00005B30 4770 C116               00005B96   8571          BNE   @L737
                                            8572 * ***                           continue;
00005B34                                    8573 @L738    DS    0H
                                            8574 * ***
                                            8575 * ***                   if (rd_list_find(topics, rkmce->rkmce_mtopic.t\
                                            8576 * opic,
                                            8577 * ***                                    rd_list_cmp_str))
00005B34 E340 D0B0 0024          000000B0   8578          STG   4,176(0,13)
00005B3A E3F0 2040 0004          00000040   8579          LG    15,64(0,2)
00005B40 E3F0 D0B8 0024          000000B8   8580          STG   15,184(0,13)
00005B46 E3F0 C088 0004          00005B08   8581          LG    15,@lit_1648_292 ; rd_list_cmp_str
00005B4C E3F0 D0C0 0024          000000C0   8582          STG   15,192(0,13)
00005B52 4110 D0B0               000000B0   8583          LA    1,176(0,13)
00005B56 E3F0 C080 0004          00005B00   8584          LG    15,@lit_1648_293 ; rd_list_find
00005B5C                                    8585 @@gen_label442 DS    0H
00005B5C 05EF                               8586          BALR  14,15
00005B5E                                    8587 @@gen_label443 DS    0H
00005B5E B902 00FF                          8588          LTGR  15,15
00005B62 4770 C116               00005B96   8589          BNZ   @L737
                                            8590 * ***                           continue;
00005B66                                    8591 @L740    DS    0H
                                            8592 * ***
                                            8593 * ***                   rd_list_add(topics, rd_strdup(rkmce->rkmce_mto\
                                            8594 * pic.topic));
00005B66 E3F0 2040 0004          00000040   8595          LG    15,64(0,2)
00005B6C E3F0 D0B0 0024          000000B0   8596          STG   15,176(0,13)
00005B72 4110 D0B0               000000B0   8597          LA    1,176(0,13)
00005B76 E3F0 C090 0004          00005B10   8598          LG    15,@lit_1648_294 ; rd_strdup
00005B7C                                    8599 @@gen_label445 DS    0H
00005B7C 05EF                               8600          BALR  14,15
00005B7E                                    8601 @@gen_label446 DS    0H
00005B7E E340 D0B0 0024          000000B0   8602          STG   4,176(0,13)
00005B84 E3F0 D0B8 0024          000000B8   8603          STG   15,184(0,13)
00005B8A 4110 D0B0               000000B0   8604          LA    1,176(0,13)
00005B8E E3F0 C098 0004          00005B18   8605          LG    15,@lit_1648_295 ; rd_list_add
00005B94                                    8606 @@gen_label447 DS    0H
00005B94 05EF                               8607          BALR  14,15
00005B96                                    8608 @@gen_label448 DS    0H
                                            8609 * ***           }
00005B96                                    8610 @L737    DS    0H
00005B96 E320 2020 0004          00000020   8611          LG    2,32(0,2)   ; offset of rkmce_link in rd_kafka_metadata_*
                                                                                                                           Page  175 
  Active Usings: @REGION_1648_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                cache_entry
00005B9C                                    8612 @L735    DS    0H
00005B9C B902 00F2                          8613          LTGR  15,2
00005BA0 4770 C0A0               00005B20   8614          BNE   @L734
                                            8615 * ***
                                            8616 * ***           return rd_list_cnt(topics) - precnt;
00005BA4 E340 D0B0 0024          000000B0   8617          STG   4,176(0,13)
00005BAA 4110 D0B0               000000B0   8618          LA    1,176(0,13)
00005BAE E3F0 C078 0004          00005AF8   8619          LG    15,@lit_1648_291 ; rd_list_cnt
00005BB4                                    8620 @@gen_label450 DS    0H
00005BB4 05EF                               8621          BALR  14,15
00005BB6                                    8622 @@gen_label451 DS    0H
00005BB6 1BF3                               8623          SR    15,3
00005BB8 B914 00FF                          8624          LGFR  15,15
                                            8625 * ***   }
                                            8626 * * **** Start of Epilogue
                                            8627          DCCEPIL
00005BBC                                    8628+         ds 0h                                                          01-DCCEP
                                            8629+* Epilog
00005BBC D707 D088 D088 00000088 00000088   8630+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005BC2 E3D0 D080 0004          00000080   8631+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005BC8 E3C0 D090 0004          00000090   8632+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005BCE E3B0 C018 0004          00000018   8633+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005BD4 E3C0 B010 0021          00000010   8634+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005BDA E3E0 D008 0004          00000008   8635+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005BE0 EB1C D020 0004          00000020   8636+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005BE6 078E                               8637+         bcr 8,14                if same dsab, just return              01-DCCEP
00005BE8 E3F0 D010 0024          00000010   8638+         stg 15,16(0,13)         save return code                       01-DCCEP
00005BEE E300 D018 0024          00000018   8639+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005BF4 E3F0 D090 0004          00000090   8640+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005BFA E3F0 F018 0004          00000018   8641+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005C00 47F0 F040               00000040   8642+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8643+* End of Epilog
                                            8644 * * **** End of Epilogue
                                            8645          DROP  12
                                            8646 *
                                            8647 *   DSECT for automatic variables in "rd_kafka_metadata_cache_topics_t
                                            8648 *           o_list"
                                            8649 *      (FUNCTION #1648)
                                            8650 *
00000000                00000000 000000AC   8651 @AUTO#rd_kafka_metadata_cache_topics_to_list DSECT
00000000                                    8652          DS    XL168
000000A8                                    8653 rd_kafka_metadata_cache_topics_to_list#precnt#0 DS 1F ; precnt
                                            8654 *
00005C04                00000000 00005E8C   8655 @CODE    CSECT
                                            8656 *
                                            8657 *
                                            8658 *
                                            8659 * ....... start of rd_kafka_metadata_cache_dump
                                            8660 rd_kafka_metadata_cache_dump ALIAS X'99846D92818692816D9485A3818481A381*
                                                                6D83818388856D84A49497'
00005C04                                    8661 @LNAME1647 DS  0H
                                                                                                                           Page  176 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005C04 0000001C                           8662          DC    X'0000001C'
00005C08 99846D9281869281                   8663          DC    C'rd_kafka_metadata_cache_dump'
00005C24 00                                 8664          DC    X'00'
                                            8665 rd_kafka_metadata_cache_dump DCCPRLG CINDEX=1647,BASER=12,FRAME=248,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1647
                                            8666          macro
                                            8667          dccextrn &m
                                            8668          gblc    &$dccext(1000)
                                            8669          gbla    &$dccexti
                                            8670          lcla    &i
                                            8671 &$dccext(&$dccexti+1) setc    '&m'
                                            8672 &i       seta    1
                                            8673 .loop    aif    (&i gt &$dccexti).around
                                            8674          aif    ('&$dccext(&i)' eq '&m').getout
                                            8675 &i       seta    &i+1
                                            8676          ago     .loop
                                            8677 .around  anop
                                            8678 &$dccexti seta &$dccexti+1
                                            8679          extrn  &m
                                            8680 .getout  anop
                                            8681          mend
00005C28                                    8682+$eye0171    ds    0d                                                    02-DCCCA
00005C28 C4C3C3                             8683+         dc cl3'DCC'                                                    02-DCCCA
00005C2B 01                                 8684+         dc xl1'01' format one                                          02-DCCCA
00005C2C 00000000                           8685+         dc a(0)                                                        02-DCCCA
00005C30 0000000000005C9A                   8686+         dc ad(@PER_1647)                                               02-DCCCA
00005C38 00000000000000F8                   8687+         dc ad(248)                                                     02-DCCCA
00005C40 0000000000000000                   8688+         dc ad(0)                                                       02-DCCCA
00005C48 0000000000001000                   8689+         dc ad(4096)                                                    02-DCCCA
00005C50 20                                 8690+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005C51 03                                 8691+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005C52 03                                 8692+         dc al1(3)                                                      02-DCCCA
00005C53 08                                 8693+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005C54 00                                 8694+         dc bl.8'00000000'                                              02-DCCCA
00005C55 000000                             8695+         dc al3(0)                                                      02-DCCCA
00005C58 0000000000005C04                   8696+         dc ad(@LNAME1647)                                              02-DCCCA
00005C60                                    8697+         ds 0d                                                          02-DCCCA
00005C60 0000000000005C28                   8698+         dc ad($eye0171)                                                02-DCCCA
00005C68 0000000000000000                   8699+         dc ad(0)                                                       02-DCCCA
00005C70                                    8700+         ds    0d                                                       01-DCCPR
                                            8701+         entry rd_kafka_metadata_cache_dump                             01-DCCPR
00005C70                                    8702+rd_kafka_metadata_cache_dump ds 0d                                      01-DCCPR
00005C70                                    8703+@REGION_1647_1 ds 0h                                                    01-DCCPR
00005C70 EBEC D008 0024          00000008   8704+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005C76 E3E0 D088 0004          00000088   8705+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005C7C E3C0 D090 0004          00000090   8706+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005C82 B904 002E                          8707+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005C86 E3B0 C018 0004          00000018   8708+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005C8C A7EB 00F8               000000F8   8709+         aghi  14,248              increase by frame size               01-DCCPR
00005C90 E3E0 C020 0021          00000020   8710+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005C96 4720 B020               00000020   8711+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005C9A                                    8712+@PER_1647 ds   0h                                                       01-DCCPR
                                                                                                                           Page  177 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005C9A EBDE 2080 0024          00000080   8713+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005CA0 E3C0 2090 0024          00000090   8714+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005CA6 B904 00D2                          8715+         lgr   13,2                set real frame pointer               01-DCCPR
00005CAA B904 00CF                          8716+         lgr   12,15               set base reg                         01-DCCPR
                        00005C70            8717+         using @REGION_1647_1,12                                        01-DCCPR
00005CAE B904 0041                          8718          LGR   4,1         ; ptr to parm area
                                            8719 * ******* End of Prologue
                                            8720 * *
                                            8721 * ***           const struct rd_kafka_metadata_cache *rkmc = &rk->rk_m\
                                            8722 * etadata_cache;
00005CB2 E3F0 4008 0004          00000008   8723          LG    15,8(0,4)   ; rk
00005CB8 4120 FAA8               00000AA8   8724          LA    2,2728(0,15)
                                            8725 * ***           const struct rd_kafka_metadata_cache_entry *rkmce;
                                            8726 * ***           rd_ts_t now = rd_clock();
00005CBC E3F0 C0A0 0004          00005D10   8727          LG    15,@lit_1647_298 ; rd_clock
00005CC2                                    8728 @@gen_label452 DS    0H
00005CC2 05EF                               8729          BALR  14,15
00005CC4                                    8730 @@gen_label453 DS    0H
00005CC4 B904 003F                          8731          LGR   3,15
                                            8732 * ***
                                            8733 * ***           fprintf(fp,
                                            8734 * ***                   "Metadata cache with %d entries:\n",
                                            8735 * ***                   rkmc->rkmc_cnt);
00005CC8 E3F0 4000 0004          00000000   8736          LG    15,0(0,4)   ; fp
00005CCE E3F0 D0B0 0024          000000B0   8737          STG   15,176(0,13)
00005CD4 E3F0 C0B0 0004          00005D20   8738          LG    15,@lit_1647_299
00005CDA 41F0 F2B2               000002B2   8739          LA    15,690(0,15)
00005CDE E3F0 D0B8 0024          000000B8   8740          STG   15,184(0,13)
00005CE4 E3F0 2098 0014          00000098   8741          LGF   15,152(0,2)
00005CEA E3F0 D0C0 0024          000000C0   8742          STG   15,192(0,13)
00005CF0 4110 D0B0               000000B0   8743          LA    1,176(0,13)
00005CF4 E3F0 C0A8 0004          00005D18   8744          LG    15,@lit_1647_300 ; fprintf
00005CFA                                    8745 @@gen_label454 DS    0H
00005CFA 05EF                               8746          BALR  14,15
00005CFC                                    8747 @@gen_label455 DS    0H
                                            8748 * ***           for ((rkmce) = ((&rkmc->rkmc_expiry)->tqh_first); (rkm\
                                            8749 * ce) != (((void *)0)); (rkmce) = ((rkmce)->rkmce_link .tqe_next)) {
00005CFC E320 2050 0004          00000050   8750          LG    2,80(0,2)   ; offset of rkmc_expiry in rd_kafka_metadata*
                                                                _cache
00005D02 47F0 C1CC               00005E3C   8751          B     @L742
00005D08                                    8752          DS    0D
00005D08 000000F8                           8753 @FRAMESIZE_1647 DC F'248'
00005D0C 00000000
00005D10 0000000000000430                   8754 @lit_1647_298 DC AD(rd_clock)
00005D18 0000000000000000                   8755 @lit_1647_300 DC AD(fprintf)
00005D20 0000000000006076                   8756 @lit_1647_299 DC AD(@strings@)
00005D28 0000000000000000                   8757 @lit_1647_305 DC AD(rd_kafka_err2str)
00005D30 000003E8                           8758 @lit_1647_309 DC F'1000' 0x000003e8
00005D34                                    8759 @L741    DS    0H
                                            8760 * ***                   fprintf(fp,
                                            8761 * ***                           "  %s (inserted %dms ago, expires in %\
                                            8762 * dms, "
                                                                                                                           Page  178 
  Active Usings: @REGION_1647_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8763 * ***                           rkmce->rkmce_mtopic.topic,
                                            8764 * ***                           (int)((now - rkmce->rkmce_ts_insert)/1\
                                            8765 * 000),
                                            8766 * ***                           (int)((rkmce->rkmce_ts_expires - now)/\
                                            8767 * 1000),
                                            8768 * ***                           rkmce->rkmce_mtopic.partition_cnt,
                                            8769 * ***                           !(((rkmce)->rkmce_mtopic.err) == RD_KA\
                                            8770 * FKA_RESP_ERR__WAIT_CACHE || ((rkmce)->rkmce_mtopic.err) == RD_KAFKA_\
                                            8771 * RESP_ERR__NOENT) ? "valid":"hint",
                                            8772 * ***                           rkmce->rkmce_mtopic.err ? " error: " :\
                                            8773 *  "",
                                            8774 * ***                           rkmce->rkmce_mtopic.err ?
00005D34 E55C 2058 FF5C          00000058   8775          CHSI  88(2),-164
00005D3A 4780 C0E6               00005D56   8776          BE    @L745
00005D3E E55C 2058 FF64          00000058   8777          CHSI  88(2),-156
00005D44 4780 C0E6               00005D56   8778          BE    @L745
00005D48                                    8779 @L746    DS    0H
00005D48 E3F0 C0B0 0004          00005D20   8780          LG    15,@lit_1647_299
00005D4E 4150 F2D4               000002D4   8781          LA    5,724(0,15)
00005D52 47F0 C0F0               00005D60   8782          B     @L747
00005D56                                    8783 @L745    DS    0H
00005D56 E3F0 C0B0 0004          00005D20   8784          LG    15,@lit_1647_299
00005D5C 4150 F2DA               000002DA   8785          LA    5,730(0,15)
00005D60                                    8786 @L747    DS    0H
00005D60 E3F0 2058 0012          00000058   8787          LT    15,88(0,2)  ; offset of err in rd_kafka_metadata_topic
00005D66 4780 C108               00005D78   8788          BZ    @L748
00005D6A E3F0 C0B0 0004          00005D20   8789          LG    15,@lit_1647_299
00005D70 4160 F2E0               000002E0   8790          LA    6,736(0,15)
00005D74 47F0 C112               00005D82   8791          B     @L749
00005D78                                    8792 @L748    DS    0H
00005D78 E3F0 C0B0 0004          00005D20   8793          LG    15,@lit_1647_299
00005D7E 4160 F2EA               000002EA   8794          LA    6,746(0,15)
00005D82                                    8795 @L749    DS    0H
00005D82 E3F0 2058 0012          00000058   8796          LT    15,88(0,2)  ; offset of err in rd_kafka_metadata_topic
00005D88 4780 C138               00005DA8   8797          BZ    @L750
                                            8798 * ***                           rd_kafka_err2str(rkmce->rkmce_mtopic.e\
                                            8799 * rr) : "");
00005D8C E3F0 2058 0014          00000058   8800          LGF   15,88(0,2)
00005D92 E3F0 D0B0 0024          000000B0   8801          STG   15,176(0,13)
00005D98 4110 D0B0               000000B0   8802          LA    1,176(0,13)
00005D9C E3F0 C0B8 0004          00005D28   8803          LG    15,@lit_1647_305 ; rd_kafka_err2str
00005DA2                                    8804 @@gen_label460 DS    0H
00005DA2 05EF                               8805          BALR  14,15
00005DA4                                    8806 @@gen_label461 DS    0H
00005DA4 47F0 C142               00005DB2   8807          B     @L751
00005DA8                                    8808 @L750    DS    0H
00005DA8 E3F0 C0B0 0004          00005D20   8809          LG    15,@lit_1647_299
00005DAE 41F0 F2EA               000002EA   8810          LA    15,746(0,15)
00005DB2                                    8811 @L751    DS    0H
00005DB2 E310 4000 0004          00000000   8812          LG    1,0(0,4)    ; fp
00005DB8 E310 D0B0 0024          000000B0   8813          STG   1,176(0,13)
                                            8814 * ***                           "%d partition(s), %s)%s%s\n",
                                                                                                                           Page  179 
  Active Usings: @REGION_1647_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005DBE E310 C0B0 0004          00005D20   8815          LG    1,@lit_1647_299
00005DC4 4110 12EC               000002EC   8816          LA    1,748(0,1)
00005DC8 E310 D0B8 0024          000000B8   8817          STG   1,184(0,13)
00005DCE E310 2040 0004          00000040   8818          LG    1,64(0,2)
00005DD4 E310 D0C0 0024          000000C0   8819          STG   1,192(0,13)
00005DDA B904 0093                          8820          LGR   9,3
00005DDE E390 2038 0009          00000038   8821          SG    9,56(0,2)
00005DE4 E380 C0C0 001D          00005D30   8822          DSGF  8,@lit_1647_309
00005DEA B914 0019                          8823          LGFR  1,9
00005DEE E310 D0C8 0024          000000C8   8824          STG   1,200(0,13)
00005DF4 E310 2030 0004          00000030   8825          LG    1,48(0,2)   ; offset of rkmce_ts_expires in rd_kafka_met*
                                                                adata_cache_entry
00005DFA B909 0013                          8826          SGR   1,3
00005DFE B904 0091                          8827          LGR   9,1
00005E02 E380 C0C0 001D          00005D30   8828          DSGF  8,@lit_1647_309
00005E08 B914 0019                          8829          LGFR  1,9
00005E0C E310 D0D0 0024          000000D0   8830          STG   1,208(0,13)
00005E12 E310 2048 0014          00000048   8831          LGF   1,72(0,2)
00005E18 E310 D0D8 0024          000000D8   8832          STG   1,216(0,13)
00005E1E EB56 D0E0 0024          000000E0   8833          STMG  5,6,224(13)
00005E24 E3F0 D0F0 0024          000000F0   8834          STG   15,240(0,13)
00005E2A 4110 D0B0               000000B0   8835          LA    1,176(0,13)
00005E2E E3F0 C0A8 0004          00005D18   8836          LG    15,@lit_1647_300 ; fprintf
00005E34                                    8837 @@gen_label462 DS    0H
00005E34 05EF                               8838          BALR  14,15
00005E36                                    8839 @@gen_label463 DS    0H
                                            8840 * ***           }
00005E36 E320 2020 0004          00000020   8841          LG    2,32(0,2)   ; offset of rkmce_link in rd_kafka_metadata_*
                                                                cache_entry
00005E3C                                    8842 @L742    DS    0H
00005E3C B902 00F2                          8843          LTGR  15,2
00005E40 4770 C0C4               00005D34   8844          BNE   @L741
                                            8845 * ***   }
00005E44                                    8846 @ret_lab_1647 DS 0H
                                            8847 * * **** Start of Epilogue
                                            8848          DCCEPIL
00005E44                                    8849+         ds 0h                                                          01-DCCEP
                                            8850+* Epilog
00005E44 D707 D088 D088 00000088 00000088   8851+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005E4A E3D0 D080 0004          00000080   8852+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005E50 E3C0 D090 0004          00000090   8853+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005E56 E3B0 C018 0004          00000018   8854+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005E5C E3C0 B010 0021          00000010   8855+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005E62 E3E0 D008 0004          00000008   8856+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005E68 EB1C D020 0004          00000020   8857+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005E6E 078E                               8858+         bcr 8,14                if same dsab, just return              01-DCCEP
00005E70 E3F0 D010 0024          00000010   8859+         stg 15,16(0,13)         save return code                       01-DCCEP
00005E76 E300 D018 0024          00000018   8860+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005E7C E3F0 D090 0004          00000090   8861+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005E82 E3F0 F018 0004          00000018   8862+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005E88 47F0 F040               00000040   8863+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8864+* End of Epilog
                                                                                                                           Page  180 
  Active Usings: @REGION_1647_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8865 * * **** End of Epilogue
                                            8866          DROP  12
                                            8867 *
                                            8868 *   DSECT for automatic variables in "rd_kafka_metadata_cache_dump"
                                            8869 *      (FUNCTION #1647)
                                            8870 *
00000000                00000000 000000B0   8871 @AUTO#rd_kafka_metadata_cache_dump DSECT
00000000                                    8872          DS    XL168
000000A8                                    8873 rd_kafka_metadata_cache_dump#now#0 DS 8XL1 ; now
                                            8874 *
00005E8C                00000000 00005E8C   8875 @CODE    CSECT
                                            8876 @@STATIC ALIAS X'7C998492818692816D9485A3818481A3816D838183888550'
                                            8877 @@STATIC DXD   219D
                                            8878 *
                                            8879 *  Non-Re-Entrant Data Section
                                            8880 *
00005E90                00005E90 00000A50   8881 @DATA    CSECT
                                            8882 @DATA    RMODE ANY
                                            8883 @DATA    AMODE ANY
00005E90 99846D8381939396                   8884 @@T349   DC    X'99846D838193939683'               rd.calloc
00005E99 00                                 8885          DC    1X'00'
00005E9A 99846D9481939396                   8886 @@T34D   DC    X'99846D948193939683'               rd.malloc
00005EA3 00                                 8887          DC    1X'00'
00005EA4 99846D9985819393                   8888 @@T352   DC    X'99846D99858193939683'             rd.realloc
00005EAE 0000                               8889          DC    2X'00'
00005EB0 99846DA2A39984A4                   8890 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00005EB9 00                                 8891          DC    1X'00'
00005EBA 99846DA2A3999584                   8892 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
00005EC4 0000                               8893          DC    2X'00'
00005EC6 99846D9985868395                   8894 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00005ED4 00000000                           8895          DC    4X'00'
00005ED8 00000000                           8896 @@T65A   DC    4X'00'
00005EDC 0000001A00000000                   8897          DC    X'0000001A000000000000002200000000' ................
00005EEC 00000024                           8898          DC    X'00000024'                         ....
00005EF0 99846D9281869281                   8899 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00005F00 98                                 8900          DC    X'98'                               q
00005F01 00                                 8901          DC    1X'00'
00005F02 99846D9281869281                   8902 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
00005F12 96A8F0                             8903          DC    X'96A8F0'                           oy0
00005F15 00                                 8904          DC    1X'00'
00005F16 99846D9281869281                   8905 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005F26 856D8485A2A39996                   8906          DC    X'856D8485A2A39996A8F0'             e.destroy0
00005F30 0000                               8907          DC    2X'00'
00005F32 99846D9281869281                   8908 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005F42 856D8485936DA296                   8909          DC    X'856D8485936DA296A4998385'         e.del.source
00005F4E 0000                               8910          DC    2X'00'
00005F50 99846D9281869281                   8911 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005F60 856D8485936DA296                   8912          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00005F70 A49995                             8913          DC    X'A49995'                           urn
00005F73 00                                 8914          DC    1X'00'
00005F74 99846D9281869281                   8915 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005F84 856DA39989878785                   8916          DC    X'856DA3998987878599'               e.trigger
                                                                                                                           Page  181 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005F8D 00                                 8917          DC    1X'00'
00005F8E 99846D9281869281                   8918 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005F9E 856D8485A2A39996                   8919          DC    X'856D8485A2A39996A8'               e.destroy
00005FA7 00                                 8920          DC    1X'00'
00005FA8 99846D9281869281                   8921 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005FB8 856D8489A2818293                   8922          DC    X'856D8489A281829385'               e.disable
00005FC1 00                                 8923          DC    1X'00'
00005FC2 99846DA394978182                   8924 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
00005FD2 F0                                 8925          DC    X'F0'                               0
00005FD3 00                                 8926          DC    1X'00'
00005FD4 99846D9281869281                   8927 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
00005FE4 81A385                             8928          DC    X'81A385'                           ate
00005FE7 00                                 8929          DC    1X'00'
00005FE8 99846D9281869281                   8930 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
00005FF8 819389A9856D8199                   8931          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
00006006 0000                               8932          DC    2X'00'
00006008 99846D9281869281                   8933 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
00006018 6D899589A3                         8934          DC    X'6D899589A3'                       .init
0000601D 00                                 8935          DC    1X'00'
0000601E 99846D9281869281                   8936 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
0000602E 87A26DA2A482                       8937          DC    X'87A26DA2A482'                     gs.sub
00006034 0000                               8938          DC    2X'00'
00006036 99846D9281869281                   8939 @@TA7E   DC    X'99846D92818692816D9485A3818481A3' rd.kafka.metadat
00006046 816D83818388856D                   8940          DC    X'816D83818388856D84859385A385'     a.cache.delete
00006054 0000                               8941          DC    2X'00'
00006056 99846D9281869281                   8942 @@TAA1   DC    X'99846D92818692816D9485A3818481A3' rd.kafka.metadat
00006066 816D83818388856D                   8943          DC    X'816D83818388856D8995A28599A3'     a.cache.insert
00006074 00                                 8944          DC    1X'00'
00006076                                    8945 @strings@ DS   0H
00006076 C37AE081A2879281                   8946          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00006086 849281869281E0A2                   8947          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00006096 97009500C37AE081                   8948          DC    X'97009500C37AE081A2879281869281E0' p.n.C..asgkafka.
000060A6 9389829984928186                   8949          DC    X'93898299849281869281E0A29983E099' librdkafka.src.r
000060B6 8492818692816D98                   8950          DC    X'8492818692816D98A485A4854B880000' dkafka.queue.h..
000060C6 81A2A28599A37A40                   8951          DC    X'81A2A28599A37A40999298606E999298' assert..rkq..rkq
000060D6 6D9985868395A340                   8952          DC    X'6D9985868395A3406E40F0005A859695' .refcnt...0..eon
000060E6 8385606E99929600                   8953          DC    X'8385606E999296005A8596958385606E' ce..rko..eonce..
000060F6 99859793A8984B98                   8954          DC    X'99859793A8984B980000859695838560' replyq.q..eonce.
00006106 6E9985868395A340                   8955          DC    X'6E9985868395A3407E7E40F000008596' .refcnt....0..eo
00006116 958385606E998586                   8956          DC    X'958385606E9985868395A3406E40F000' nce..refcnt...0.
00006126 6CA27A406CA27A6C                   8957          DC    X'6CA27A406CA27A6C847A40998598A485' .s...s..d..reque
00006136 A2A3858440A289A9                   8958          DC    X'A2A3858440A289A985406CA9A4404E40' sted.size..zu...
00006146 6CA9A4406E406CA9                   8959          DC    X'6CA9A4406E406CA9A415000099846DA3' .zu....zu...rd.t
00006156 94978182A4866D81                   8960          DC    X'94978182A4866D81939396837A409596' mpabuf.alloc..no
00006166 A340859596A48788                   8961          DC    X'A340859596A4878840A289A985408995' t.enough.size.in
00006176 4082A48686859900                   8962          DC    X'4082A48686859900C37AE081A2879281' .buffer.C..asgka
00006186 869281E093898299                   8963          DC    X'869281E093898299849281869281E0A2' fka.librdkafka.s
00006196 9983E09984928186                   8964          DC    X'9983E0998492818692816D82A4864B88' rc.rdkafka.buf.h
000061A6 00005A5C7F99846D                   8965          DC    X'00005A5C7F99846DA394978182A4866D' .....rd.tmpabuf.
000061B6 81939396837A4095                   8966          DC    X'81939396837A409596A340859596A487' alloc..not.enoug
000061C6 8840A289A9854089                   8967          DC    X'8840A289A9854089954082A486868599' h.size.in.buffer
000061D6 7F00C37AE081A287                   8968          DC    X'7F00C37AE081A2879281869281E09389' ..C..asgkafka.li
                                                                                                                           Page  182 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000061E6 8299849281869281                   8969          DC    X'8299849281869281E0A29983E0998492' brdkafka.src.rdk
000061F6 818692816D9485A3                   8970          DC    X'818692816D9485A3818481A3816D8381' afka.metadata.ca
00006206 8388854B830081A2                   8971          DC    X'8388854B830081A2A28599A37A409992' che.c.assert..rk
00006216 606E99926D9485A3                   8972          DC    X'606E99926D9485A3818481A3816D8381' ..rk.metadata.ca
00006226 8388854B99929483                   8973          DC    X'8388854B999294836D8395A3406E40F0' che.rkmc.cnt...0
00006236 0000D4C5E3C1C4C1                   8974          DC    X'0000D4C5E3C1C4C1E3C10000C5A79789' ..METADATA..Expi
00006246 998584406C844085                   8975          DC    X'998584406C84408595A3998985A24086' red..d.entries.f
00006256 999694409485A381                   8976          DC    X'999694409485A3818481A38140838183' rom.metadata.cac
00006266 8885404D6C844085                   8977          DC    X'8885404D6C84408595A3998985A24099' he...d.entries.r
00006276 85948189955D0000                   8978          DC    X'85948189955D0000C182A29693A4A385' emain...Absolute
00006286 40A4978481A38500                   8979          DC    X'40A4978481A38500E4978481A3850000' .update.Update..
00006296 6CA2409686409485                   8980          DC    X'6CA2409686409485A3818481A3814083' .s.of.metadata.c
000062A6 8183888540A689A3                   8981          DC    X'8183888540A689A388406C8440A39697' ache.with..d.top
000062B6 89834DA25D00D7A4                   8982          DC    X'89834DA25D00D7A499878584406C8461' ic.s..Purged..d.
000062C6 6C84408381838885                   8983          DC    X'6C844083818388858440A39697898340' .d.cached.topic.
000062D6 888995A34DA25D00                   8984          DC    X'888995A34DA25D00C88995A385844083' hint.s..Hinted.c
000062E6 8183888540968640                   8985          DC    X'81838885409686406C84616C8440A396' ache.of..d..d.to
000062F6 9789834DA25D4082                   8986          DC    X'9789834DA25D4082858995874098A485' pic.s..being.que
00006306 998985840000A681                   8987          DC    X'998985840000A68189A3409485A38184' ried..wait.metad
00006316 81A3814083818388                   8988          DC    X'81A38140838183888540838881958785' ata.cache.change
00006326 0000D485A3818481                   8989          DC    X'0000D485A3818481A381408381838885' ..Metadata.cache
00006336 40A689A388406C84                   8990          DC    X'40A689A388406C84408595A3998985A2' .with..d.entries
00006346 7A150000A5819389                   8991          DC    X'7A150000A58193898400888995A30000' ....valid.hint..
00006356 4085999996997A40                   8992          DC    X'4085999996997A400000000040406CA2' .error.........s
00006366 404D8995A28599A3                   8993          DC    X'404D8995A28599A38584406C8494A240' ..inserted..dms.
00006376 8187966B4085A797                   8994          DC    X'8187966B4085A797899985A240899540' ago..expires.in.
00006386 6C8494A26B406C84                   8995          DC    X'6C8494A26B406C8440978199A389A389' .dms...d.partiti
00006396 96954DA25D6B406C                   8996          DC    X'96954DA25D6B406CA25D6CA26CA21500' on.s....s..s.s..
000063A6 D7999684A4838500                   8997          DC    X'D7999684A4838500C685A3838800D686' Produce.Fetch.Of
000063B6 86A285A30000D485                   8998          DC    X'86A285A30000D485A3818481A3810000' fset..Metadata..
000063C6 D38581848599C195                   8999          DC    X'D38581848599C19584C9A2990000E2A3' LeaderAndIsr..St
000063D6 9697D98597938983                   9000          DC    X'9697D985979389838100E4978481A385' opReplica.Update
000063E6 D485A3818481A381                   9001          DC    X'D485A3818481A3810000C39695A39996' Metadata..Contro
000063F6 93938584E288A4A3                   9002          DC    X'93938584E288A4A38496A6950000D686' lledShutdown..Of
00006406 86A285A3C3969494                   9003          DC    X'86A285A3C396949489A30000D68686A2' fsetCommit..Offs
00006416 85A3C685A3838800                   9004          DC    X'85A3C685A3838800C6899584C3969699' etFetch.FindCoor
00006426 84899581A3969900                   9005          DC    X'84899581A3969900D1968995C79996A4' dinator.JoinGrou
00006436 9700C8858199A382                   9006          DC    X'9700C8858199A3828581A300D38581A5' p.Heartbeat.Leav
00006446 85C79996A4970000                   9007          DC    X'85C79996A4970000E2A89583C79996A4' eGroup..SyncGrou
00006456 9700C485A2839989                   9008          DC    X'9700C485A28399898285C79996A497A2' p.DescribeGroups
00006466 0000D389A2A3C799                   9009          DC    X'0000D389A2A3C79996A497A20000E281' ..ListGroups..Sa
00006476 A293C8819584A288                   9010          DC    X'A293C8819584A28881928500C19789E5' slHandshake.ApiV
00006486 8599A28996950000                   9011          DC    X'8599A28996950000C3998581A385E396' ersion..CreateTo
00006496 978983A20000C485                   9012          DC    X'978983A20000C4859385A385E3969789' pics..DeleteTopi
000064A6 83A20000C4859385                   9013          DC    X'83A20000C4859385A385D98583969984' cs..DeleteRecord
000064B6 A200C99589A3D799                   9014          DC    X'A200C99589A3D7999684A4838599C984' s.InitProducerId
000064C6 0000D68686A285A3                   9015          DC    X'0000D68686A285A3C69699D385818485' ..OffsetForLeade
000064D6 99C5979683880000                   9016          DC    X'99C5979683880000C18484D78199A389' rEpoch..AddParti
000064E6 A3899695A2E396E3                   9017          DC    X'A3899695A2E396E3A7950000C18484D6' tionsToTxn..AddO
000064F6 8686A285A3A2E396                   9018          DC    X'8686A285A3A2E396E3A79500C59584E3' ffsetsToTxn.EndT
00006506 A7950000E69989A3                   9019          DC    X'A7950000E69989A385E3A795D4819992' xn..WriteTxnMark
00006516 8599A200E3A795D6                   9020          DC    X'8599A200E3A795D68686A285A3C39694' ers.TxnOffsetCom
                                                                                                                           Page  183 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006526 9489A300C485A283                   9021          DC    X'9489A300C485A28399898285C18393A2' mit.DescribeAcls
00006536 0000C3998581A385                   9022          DC    X'0000C3998581A385C18393A20000C485' ..CreateAcls..De
00006546 9385A385C18393A2                   9023          DC    X'9385A385C18393A20000C485A2839989' leteAcls..Descri
00006556 8285C39695868987                   9024          DC    X'8285C39695868987A200C193A38599C3' beConfigs.AlterC
00006566 9695868987A20000                   9025          DC    X'9695868987A20000C193A38599D98597' onfigs..AlterRep
00006576 93898381D39687C4                   9026          DC    X'93898381D39687C48999A200C485A283' licaLogDirs.Desc
00006586 99898285D39687C4                   9027          DC    X'99898285D39687C48999A200E281A293' ribeLogDirs.Sasl
00006596 C1A4A3888595A389                   9028          DC    X'C1A4A3888595A3898381A3850000C399' Authenticate..Cr
000065A6 8581A385D78199A3                   9029          DC    X'8581A385D78199A389A3899695A20000' eatePartitions..
000065B6 C3998581A385C485                   9030          DC    X'C3998581A385C48593858781A3899695' CreateDelegation
000065C6 E39692859500D985                   9031          DC    X'E39692859500D9859585A6C485938587' Token.RenewDeleg
000065D6 81A3899695E39692                   9032          DC    X'81A3899695E3969285950000C5A79789' ationToken..Expi
000065E6 9985C48593858781                   9033          DC    X'9985C48593858781A3899695E3969285' reDelegationToke
000065F6 9500C485A2839989                   9034          DC    X'9500C485A28399898285C48593858781' n.DescribeDelega
00006606 A3899695E3969285                   9035          DC    X'A3899695E39692859500C4859385A385' tionToken.Delete
00006616 C79996A497A20000                   9036          DC    X'C79996A497A20000C5938583A3D38581' Groups..ElectLea
00006626 848599A2D98598A4                   9037          DC    X'848599A2D98598A485A2A300C9958399' dersRequest.Incr
00006636 85948595A38193C1                   9038          DC    X'85948595A38193C193A38599C3969586' ementalAlterConf
00006646 8987A2D98598A485                   9039          DC    X'8987A2D98598A485A2A30000C193A385' igsRequest..Alte
00006656 99D78199A389A389                   9040          DC    X'99D78199A389A3899695D98581A2A289' rPartitionReassi
00006666 8795948595A3A2D9                   9041          DC    X'8795948595A3A2D98598A485A2A30000' gnmentsRequest..
00006676 D389A2A3D78199A3                   9042          DC    X'D389A2A3D78199A389A3899695D98581' ListPartitionRea
00006686 A2A2898795948595                   9043          DC    X'A2A2898795948595A3A2D98598A485A2' ssignmentsReques
00006696 A300D68686A285A3                   9044          DC    X'A300D68686A285A3C4859385A385D985' t.OffsetDeleteRe
000066A6 98A485A2A300C485                   9045          DC    X'98A485A2A300C485A28399898285C393' quest.DescribeCl
000066B6 898595A3D8A496A3                   9046          DC    X'898595A3D8A496A381A2D98598A485A2' ientQuotasReques
000066C6 A300C193A38599C3                   9047          DC    X'A300C193A38599C393898595A3D8A496' t.AlterClientQuo
000066D6 A381A2D98598A485                   9048          DC    X'A381A2D98598A485A2A30000C485A283' tasRequest..Desc
000066E6 99898285E4A28599                   9049          DC    X'99898285E4A28599E283998194C39985' ribeUserScramCre
000066F6 848595A3898193A2                   9050          DC    X'848595A3898193A2D98598A485A2A300' dentialsRequest.
00006706 C193A38599E4A285                   9051          DC    X'C193A38599E4A28599E283998194C399' AlterUserScramCr
00006716 85848595A3898193                   9052          DC    X'85848595A3898193A2D98598A485A2A3' edentialsRequest
00006726 0000E596A385D985                   9053          DC    X'0000E596A385D98598A485A2A300C285' ..VoteRequest.Be
00006736 878995D8A49699A4                   9054          DC    X'878995D8A49699A494C597968388D985' ginQuorumEpochRe
00006746 98A485A2A300C595                   9055          DC    X'98A485A2A300C59584D8A49699A494C5' quest.EndQuorumE
00006756 97968388D98598A4                   9056          DC    X'97968388D98598A485A2A300C485A283' pochRequest.Desc
00006766 99898285D8A49699                   9057          DC    X'99898285D8A49699A494D98598A485A2' ribeQuorumReques
00006776 A300C193A38599C9                   9058          DC    X'A300C193A38599C9A299D98598A485A2' t.AlterIsrReques
00006786 A300E4978481A385                   9059          DC    X'A300E4978481A385C68581A3A49985A2' t.UpdateFeatures
00006796 D98598A485A2A300                   9060          DC    X'D98598A485A2A300C595A58593969785' Request.Envelope
000067A6 D98598A485A2A300                   9061          DC    X'D98598A485A2A30095969585000087A9' Request.none..gz
000067B6 89970000A2958197                   9062          DC    X'89970000A295819797A8000093A9F400' ip..snappy..lz4.
000067C6 A9A2A38400008995                   9063          DC    X'A9A2A3840000899588859989A3008396' zstd..inherit.co
000067D6 95868987A4998584                   9064          DC    X'95868987A49985840000938581999585' nfigured..learne
000067E6 84008995A3859995                   9065          DC    X'84008995A38599958193000093968789' d.internal..logi
000067F6 83819300C99589A3                   9066          DC    X'83819300C99589A30000E38599948995' cal.Init..Termin
00006806 81A38500C681A381                   9067          DC    X'81A38500C681A38193C5999996990000' ate.FatalError..
00006816 D98598A485A2A3D7                   9068          DC    X'D98598A485A2A3D7C9C40000E68189A3' RequestPID..Wait
00006826 E3998195A2979699                   9069          DC    X'E3998195A2979699A300E68189A3D7C9' Transport.WaitPI
00006836 C400C1A2A2898795                   9070          DC    X'C400C1A2A289879585840000C4998189' D.Assigned..Drai
00006846 95D985A285A30000                   9071          DC    X'95D985A285A30000C499818995C2A494' nReset..DrainBum
00006856 9700D9858184A8D5                   9072          DC    X'9700D9858184A8D596A3C18392858400' p.ReadyNotAcked.
                                                                                                                           Page  184 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006866 D9858184A800C995                   9073          DC    X'D9858184A800C995E3998195A28183A3' Ready.InTransact
00006876 89969500C2858789                   9074          DC    X'89969500C285878995C396949489A300' ion.BeginCommit.
00006886 C396949489A3A389                   9075          DC    X'C396949489A3A3899587E3998195A281' CommittingTransa
00006896 83A389969500C396                   9076          DC    X'83A389969500C396949489A3D596A3C1' ction.CommitNotA
000068A6 839285840000C182                   9077          DC    X'839285840000C1829699A3899587E399' cked..AbortingTr
000068B6 8195A28183A38996                   9078          DC    X'8195A28183A389969500C1829699A385' ansaction.Aborte
000068C6 84D596A3C1839285                   9079          DC    X'84D596A3C18392858400C1829699A381' dNotAcked.Aborta
000068D6 829385C599999699                   9080          DC    X'829385C5999996990000'             bleError..
                                            9081 @E__stderrp ALIAS C'@@STDERP'
                                            9082          EXTRN @E__stderrp
                                            9083 *
                                            9084 *
                                            9085 *   Re-entrant Data Initialization Section
                                            9086 *
                                            9087 @@INIT@  ALIAS C'rdkafka_metadata_cache:'
000068E0                000068E0 00001040   9088 @@INIT@  CSECT
                                            9089 @@INIT@  AMODE ANY
                                            9090 @@INIT@  RMODE ANY
000068E0 05                                 9091          DC    XL1'5'
000068E1 000000                             9092          DC    AL3(0)
000068E4 00000120                           9093          DC    AL4(288)
000068E8 00000000                           9094          DC    4X'00'
000068EC 00000000                           9095          DC    Q(@@STATIC)
000068F0 00000000                           9096          DC    X'00000000'
000068F4 00000001                           9097          DC    X'00000001'
000068F8 00000000                           9098          DC    X'00000000'
000068FC 000000FF                           9099          DC    X'000000FF'
00006900 0102039C09867F97                   9100          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00006910 1112139D85088718                   9101          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00006920 818283840A171B88                   9102          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00006930 9116939495960498                   9103          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00006940 A0E2E4E0E1E3E5E7                   9104          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00006950 E9EAEBE8EDEEEFEC                   9105          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00006960 2FC2C4C0C1C3C5C7                   9106          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00006970 C9CACBC8CDCECFCC                   9107          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00006980 6162636465666768                   9108          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00006990 6A6B6C6D6E6F7071                   9109          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
000069A0 7E73747576777879                   9110          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
000069B0 A3A5B7A9A7B6BCBD                   9111          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
000069C0 4142434445464748                   9112          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
000069D0 4A4B4C4D4E4F5051                   9113          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
000069E0 F753545556575859                   9114          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
000069F0 3132333435363738                   9115          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            9116 *
00006A00 05                                 9117          DC    XL1'5'
00006A01 000000                             9118          DC    AL3(0)
00006A04 000001E0                           9119          DC    AL4(480)
00006A08 00000000                           9120          DC    4X'00'
00006A0C 00000000                           9121          DC    Q(@@STATIC)
00006A10 00000000                           9122          DC    X'00000000'
00006A14 00000101                           9123          DC    X'00000101'
00006A18 00000000                           9124          DC    X'00000000'
                                                                                                                           Page  185 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006A1C 000000A0                           9125          DC    X'000000A0'
00006A20 010203372D2E2F16                   9126          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00006A30 1112133C3D322618                   9127          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00006A40 5A7F7B5B6C507D4D                   9128          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00006A50 F1F2F3F4F5F6F7F8                   9129          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00006A60 C1C2C3C4C5C6C7C8                   9130          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00006A70 D8D9E2E3E4E5E6E7                   9131          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00006A80 8182838485868788                   9132          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00006A90 9899A2A3A4A5A6A7                   9133          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00006AA0 2122232425061728                   9134          DC    X'2122232425061728292A2B2C090A1B30' ................
00006AB0 311A333435360838                   9135          DC    X'311A333435360838393A3B04143EFF80' ................
                                            9136 *
00006AC0 05                                 9137          DC    XL1'5'
00006AC1 000000                             9138          DC    AL3(0)
00006AC4 00000208                           9139          DC    AL4(520)
00006AC8 00000000                           9140          DC    4X'00'
00006ACC 00000000                           9141          DC    Q(@@STATIC)
00006AD0 00000000                           9142          DC    X'00000000'
00006AD4 000001C0                           9143          DC    X'000001C0'
00006AD8 00000000                           9144          DC    X'00000000'
00006ADC 00000001                           9145          DC    X'00000001'
00006AE0 8A40404040404040                   9146          DC    X'8A40404040404040'                 ........
                                            9147 *
00006AE8 05                                 9148          DC    XL1'5'
00006AE9 000000                             9149          DC    AL3(0)
00006AEC 00000230                           9150          DC    AL4(560)
00006AF0 00000000                           9151          DC    4X'00'
00006AF4 00000000                           9152          DC    Q(@@STATIC)
00006AF8 00000000                           9153          DC    X'00000000'
00006AFC 000001E0                           9154          DC    X'000001E0'
00006B00 00000000                           9155          DC    X'00000000'
00006B04 00000001                           9156          DC    X'00000001'
00006B08 8B40404040404040                   9157          DC    X'8B40404040404040'                 ........
                                            9158 *
00006B10 0D                                 9159          DC    XL1'D'
00006B11 000000                             9160          DC    AL3(0)
00006B14 00000258                           9161          DC    AL4(600)
00006B18 00000000                           9162          DC    4X'00'
00006B1C 00000000                           9163          DC    Q(@@STATIC)
00006B20 00000000                           9164          DC    X'00000000'
00006B24 00000220                           9165          DC    X'00000220'
00006B28 0000000000005E90                   9166          DC    ADL8(@DATA)
00006B30 00000000                           9167          DC    X'00000000'
00006B34 00000516                           9168          DC    X'00000516'
                                            9169 *
00006B38 0D                                 9170          DC    XL1'D'
00006B39 000000                             9171          DC    AL3(0)
00006B3C 00000280                           9172          DC    AL4(640)
00006B40 00000000                           9173          DC    4X'00'
00006B44 00000000                           9174          DC    Q(@@STATIC)
00006B48 00000000                           9175          DC    X'00000000'
00006B4C 00000228                           9176          DC    X'00000228'
                                                                                                                           Page  186 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006B50 0000000000005E90                   9177          DC    ADL8(@DATA)
00006B58 00000000                           9178          DC    X'00000000'
00006B5C 0000051E                           9179          DC    X'0000051E'
                                            9180 *
00006B60 0D                                 9181          DC    XL1'D'
00006B61 000000                             9182          DC    AL3(0)
00006B64 000002A8                           9183          DC    AL4(680)
00006B68 00000000                           9184          DC    4X'00'
00006B6C 00000000                           9185          DC    Q(@@STATIC)
00006B70 00000000                           9186          DC    X'00000000'
00006B74 00000230                           9187          DC    X'00000230'
00006B78 0000000000005E90                   9188          DC    ADL8(@DATA)
00006B80 00000000                           9189          DC    X'00000000'
00006B84 00000524                           9190          DC    X'00000524'
                                            9191 *
00006B88 0D                                 9192          DC    XL1'D'
00006B89 000000                             9193          DC    AL3(0)
00006B8C 000002D0                           9194          DC    AL4(720)
00006B90 00000000                           9195          DC    4X'00'
00006B94 00000000                           9196          DC    Q(@@STATIC)
00006B98 00000000                           9197          DC    X'00000000'
00006B9C 00000238                           9198          DC    X'00000238'
00006BA0 0000000000005E90                   9199          DC    ADL8(@DATA)
00006BA8 00000000                           9200          DC    X'00000000'
00006BAC 0000052C                           9201          DC    X'0000052C'
                                            9202 *
00006BB0 0D                                 9203          DC    XL1'D'
00006BB1 000000                             9204          DC    AL3(0)
00006BB4 000002F8                           9205          DC    AL4(760)
00006BB8 00000000                           9206          DC    4X'00'
00006BBC 00000000                           9207          DC    Q(@@STATIC)
00006BC0 00000000                           9208          DC    X'00000000'
00006BC4 00000240                           9209          DC    X'00000240'
00006BC8 0000000000005E90                   9210          DC    ADL8(@DATA)
00006BD0 00000000                           9211          DC    X'00000000'
00006BD4 00000536                           9212          DC    X'00000536'
                                            9213 *
00006BD8 0D                                 9214          DC    XL1'D'
00006BD9 000000                             9215          DC    AL3(0)
00006BDC 00000320                           9216          DC    AL4(800)
00006BE0 00000000                           9217          DC    4X'00'
00006BE4 00000000                           9218          DC    Q(@@STATIC)
00006BE8 00000000                           9219          DC    X'00000000'
00006BEC 00000248                           9220          DC    X'00000248'
00006BF0 0000000000005E90                   9221          DC    ADL8(@DATA)
00006BF8 00000000                           9222          DC    X'00000000'
00006BFC 00000544                           9223          DC    X'00000544'
                                            9224 *
00006C00 0D                                 9225          DC    XL1'D'
00006C01 000000                             9226          DC    AL3(0)
00006C04 00000348                           9227          DC    AL4(840)
00006C08 00000000                           9228          DC    4X'00'
                                                                                                                           Page  187 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006C0C 00000000                           9229          DC    Q(@@STATIC)
00006C10 00000000                           9230          DC    X'00000000'
00006C14 00000250                           9231          DC    X'00000250'
00006C18 0000000000005E90                   9232          DC    ADL8(@DATA)
00006C20 00000000                           9233          DC    X'00000000'
00006C24 00000550                           9234          DC    X'00000550'
                                            9235 *
00006C28 0D                                 9236          DC    XL1'D'
00006C29 000000                             9237          DC    AL3(0)
00006C2C 00000370                           9238          DC    AL4(880)
00006C30 00000000                           9239          DC    4X'00'
00006C34 00000000                           9240          DC    Q(@@STATIC)
00006C38 00000000                           9241          DC    X'00000000'
00006C3C 00000258                           9242          DC    X'00000258'
00006C40 0000000000005E90                   9243          DC    ADL8(@DATA)
00006C48 00000000                           9244          DC    X'00000000'
00006C4C 00000560                           9245          DC    X'00000560'
                                            9246 *
00006C50 0D                                 9247          DC    XL1'D'
00006C51 000000                             9248          DC    AL3(0)
00006C54 00000398                           9249          DC    AL4(920)
00006C58 00000000                           9250          DC    4X'00'
00006C5C 00000000                           9251          DC    Q(@@STATIC)
00006C60 00000000                           9252          DC    X'00000000'
00006C64 00000260                           9253          DC    X'00000260'
00006C68 0000000000005E90                   9254          DC    ADL8(@DATA)
00006C70 00000000                           9255          DC    X'00000000'
00006C74 00000574                           9256          DC    X'00000574'
                                            9257 *
00006C78 0D                                 9258          DC    XL1'D'
00006C79 000000                             9259          DC    AL3(0)
00006C7C 000003C0                           9260          DC    AL4(960)
00006C80 00000000                           9261          DC    4X'00'
00006C84 00000000                           9262          DC    Q(@@STATIC)
00006C88 00000000                           9263          DC    X'00000000'
00006C8C 00000268                           9264          DC    X'00000268'
00006C90 0000000000005E90                   9265          DC    ADL8(@DATA)
00006C98 00000000                           9266          DC    X'00000000'
00006C9C 00000582                           9267          DC    X'00000582'
                                            9268 *
00006CA0 0D                                 9269          DC    XL1'D'
00006CA1 000000                             9270          DC    AL3(0)
00006CA4 000003E8                           9271          DC    AL4(1000)
00006CA8 00000000                           9272          DC    4X'00'
00006CAC 00000000                           9273          DC    Q(@@STATIC)
00006CB0 00000000                           9274          DC    X'00000000'
00006CB4 00000270                           9275          DC    X'00000270'
00006CB8 0000000000005E90                   9276          DC    ADL8(@DATA)
00006CC0 00000000                           9277          DC    X'00000000'
00006CC4 0000058E                           9278          DC    X'0000058E'
                                            9279 *
00006CC8 0D                                 9280          DC    XL1'D'
                                                                                                                           Page  188 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006CC9 000000                             9281          DC    AL3(0)
00006CCC 00000410                           9282          DC    AL4(1040)
00006CD0 00000000                           9283          DC    4X'00'
00006CD4 00000000                           9284          DC    Q(@@STATIC)
00006CD8 00000000                           9285          DC    X'00000000'
00006CDC 00000278                           9286          DC    X'00000278'
00006CE0 0000000000005E90                   9287          DC    ADL8(@DATA)
00006CE8 00000000                           9288          DC    X'00000000'
00006CEC 0000059E                           9289          DC    X'0000059E'
                                            9290 *
00006CF0 0D                                 9291          DC    XL1'D'
00006CF1 000000                             9292          DC    AL3(0)
00006CF4 00000438                           9293          DC    AL4(1080)
00006CF8 00000000                           9294          DC    4X'00'
00006CFC 00000000                           9295          DC    Q(@@STATIC)
00006D00 00000000                           9296          DC    X'00000000'
00006D04 00000280                           9297          DC    X'00000280'
00006D08 0000000000005E90                   9298          DC    ADL8(@DATA)
00006D10 00000000                           9299          DC    X'00000000'
00006D14 000005A8                           9300          DC    X'000005A8'
                                            9301 *
00006D18 0D                                 9302          DC    XL1'D'
00006D19 000000                             9303          DC    AL3(0)
00006D1C 00000460                           9304          DC    AL4(1120)
00006D20 00000000                           9305          DC    4X'00'
00006D24 00000000                           9306          DC    Q(@@STATIC)
00006D28 00000000                           9307          DC    X'00000000'
00006D2C 00000288                           9308          DC    X'00000288'
00006D30 0000000000005E90                   9309          DC    ADL8(@DATA)
00006D38 00000000                           9310          DC    X'00000000'
00006D3C 000005B2                           9311          DC    X'000005B2'
                                            9312 *
00006D40 0D                                 9313          DC    XL1'D'
00006D41 000000                             9314          DC    AL3(0)
00006D44 00000488                           9315          DC    AL4(1160)
00006D48 00000000                           9316          DC    4X'00'
00006D4C 00000000                           9317          DC    Q(@@STATIC)
00006D50 00000000                           9318          DC    X'00000000'
00006D54 00000290                           9319          DC    X'00000290'
00006D58 0000000000005E90                   9320          DC    ADL8(@DATA)
00006D60 00000000                           9321          DC    X'00000000'
00006D64 000005BE                           9322          DC    X'000005BE'
                                            9323 *
00006D68 0D                                 9324          DC    XL1'D'
00006D69 000000                             9325          DC    AL3(0)
00006D6C 000004B0                           9326          DC    AL4(1200)
00006D70 00000000                           9327          DC    4X'00'
00006D74 00000000                           9328          DC    Q(@@STATIC)
00006D78 00000000                           9329          DC    X'00000000'
00006D7C 00000298                           9330          DC    X'00000298'
00006D80 0000000000005E90                   9331          DC    ADL8(@DATA)
00006D88 00000000                           9332          DC    X'00000000'
                                                                                                                           Page  189 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006D8C 000005C8                           9333          DC    X'000005C8'
                                            9334 *
00006D90 0D                                 9335          DC    XL1'D'
00006D91 000000                             9336          DC    AL3(0)
00006D94 000004D8                           9337          DC    AL4(1240)
00006D98 00000000                           9338          DC    4X'00'
00006D9C 00000000                           9339          DC    Q(@@STATIC)
00006DA0 00000000                           9340          DC    X'00000000'
00006DA4 000002A0                           9341          DC    X'000002A0'
00006DA8 0000000000005E90                   9342          DC    ADL8(@DATA)
00006DB0 00000000                           9343          DC    X'00000000'
00006DB4 000005D8                           9344          DC    X'000005D8'
                                            9345 *
00006DB8 0D                                 9346          DC    XL1'D'
00006DB9 000000                             9347          DC    AL3(0)
00006DBC 00000500                           9348          DC    AL4(1280)
00006DC0 00000000                           9349          DC    4X'00'
00006DC4 00000000                           9350          DC    Q(@@STATIC)
00006DC8 00000000                           9351          DC    X'00000000'
00006DCC 000002A8                           9352          DC    X'000002A8'
00006DD0 0000000000005E90                   9353          DC    ADL8(@DATA)
00006DD8 00000000                           9354          DC    X'00000000'
00006DDC 000005E4                           9355          DC    X'000005E4'
                                            9356 *
00006DE0 0D                                 9357          DC    XL1'D'
00006DE1 000000                             9358          DC    AL3(0)
00006DE4 00000528                           9359          DC    AL4(1320)
00006DE8 00000000                           9360          DC    4X'00'
00006DEC 00000000                           9361          DC    Q(@@STATIC)
00006DF0 00000000                           9362          DC    X'00000000'
00006DF4 000002B0                           9363          DC    X'000002B0'
00006DF8 0000000000005E90                   9364          DC    ADL8(@DATA)
00006E00 00000000                           9365          DC    X'00000000'
00006E04 000005F2                           9366          DC    X'000005F2'
                                            9367 *
00006E08 0D                                 9368          DC    XL1'D'
00006E09 000000                             9369          DC    AL3(0)
00006E0C 00000550                           9370          DC    AL4(1360)
00006E10 00000000                           9371          DC    4X'00'
00006E14 00000000                           9372          DC    Q(@@STATIC)
00006E18 00000000                           9373          DC    X'00000000'
00006E1C 000002B8                           9374          DC    X'000002B8'
00006E20 0000000000005E90                   9375          DC    ADL8(@DATA)
00006E28 00000000                           9376          DC    X'00000000'
00006E2C 000005FE                           9377          DC    X'000005FE'
                                            9378 *
00006E30 0D                                 9379          DC    XL1'D'
00006E31 000000                             9380          DC    AL3(0)
00006E34 00000578                           9381          DC    AL4(1400)
00006E38 00000000                           9382          DC    4X'00'
00006E3C 00000000                           9383          DC    Q(@@STATIC)
00006E40 00000000                           9384          DC    X'00000000'
                                                                                                                           Page  190 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006E44 000002C0                           9385          DC    X'000002C0'
00006E48 0000000000005E90                   9386          DC    ADL8(@DATA)
00006E50 00000000                           9387          DC    X'00000000'
00006E54 0000060C                           9388          DC    X'0000060C'
                                            9389 *
00006E58 0D                                 9390          DC    XL1'D'
00006E59 000000                             9391          DC    AL3(0)
00006E5C 000005A0                           9392          DC    AL4(1440)
00006E60 00000000                           9393          DC    4X'00'
00006E64 00000000                           9394          DC    Q(@@STATIC)
00006E68 00000000                           9395          DC    X'00000000'
00006E6C 000002C8                           9396          DC    X'000002C8'
00006E70 0000000000005E90                   9397          DC    ADL8(@DATA)
00006E78 00000000                           9398          DC    X'00000000'
00006E7C 0000061A                           9399          DC    X'0000061A'
                                            9400 *
00006E80 0D                                 9401          DC    XL1'D'
00006E81 000000                             9402          DC    AL3(0)
00006E84 000005C8                           9403          DC    AL4(1480)
00006E88 00000000                           9404          DC    4X'00'
00006E8C 00000000                           9405          DC    Q(@@STATIC)
00006E90 00000000                           9406          DC    X'00000000'
00006E94 000002D0                           9407          DC    X'000002D0'
00006E98 0000000000005E90                   9408          DC    ADL8(@DATA)
00006EA0 00000000                           9409          DC    X'00000000'
00006EA4 00000628                           9410          DC    X'00000628'
                                            9411 *
00006EA8 0D                                 9412          DC    XL1'D'
00006EA9 000000                             9413          DC    AL3(0)
00006EAC 000005F0                           9414          DC    AL4(1520)
00006EB0 00000000                           9415          DC    4X'00'
00006EB4 00000000                           9416          DC    Q(@@STATIC)
00006EB8 00000000                           9417          DC    X'00000000'
00006EBC 000002D8                           9418          DC    X'000002D8'
00006EC0 0000000000005E90                   9419          DC    ADL8(@DATA)
00006EC8 00000000                           9420          DC    X'00000000'
00006ECC 00000638                           9421          DC    X'00000638'
                                            9422 *
00006ED0 0D                                 9423          DC    XL1'D'
00006ED1 000000                             9424          DC    AL3(0)
00006ED4 00000618                           9425          DC    AL4(1560)
00006ED8 00000000                           9426          DC    4X'00'
00006EDC 00000000                           9427          DC    Q(@@STATIC)
00006EE0 00000000                           9428          DC    X'00000000'
00006EE4 000002E0                           9429          DC    X'000002E0'
00006EE8 0000000000005E90                   9430          DC    ADL8(@DATA)
00006EF0 00000000                           9431          DC    X'00000000'
00006EF4 0000064E                           9432          DC    X'0000064E'
                                            9433 *
00006EF8 0D                                 9434          DC    XL1'D'
00006EF9 000000                             9435          DC    AL3(0)
00006EFC 00000640                           9436          DC    AL4(1600)
                                                                                                                           Page  191 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006F00 00000000                           9437          DC    4X'00'
00006F04 00000000                           9438          DC    Q(@@STATIC)
00006F08 00000000                           9439          DC    X'00000000'
00006F0C 000002E8                           9440          DC    X'000002E8'
00006F10 0000000000005E90                   9441          DC    ADL8(@DATA)
00006F18 00000000                           9442          DC    X'00000000'
00006F1C 00000662                           9443          DC    X'00000662'
                                            9444 *
00006F20 0D                                 9445          DC    XL1'D'
00006F21 000000                             9446          DC    AL3(0)
00006F24 00000668                           9447          DC    AL4(1640)
00006F28 00000000                           9448          DC    4X'00'
00006F2C 00000000                           9449          DC    Q(@@STATIC)
00006F30 00000000                           9450          DC    X'00000000'
00006F34 000002F0                           9451          DC    X'000002F0'
00006F38 0000000000005E90                   9452          DC    ADL8(@DATA)
00006F40 00000000                           9453          DC    X'00000000'
00006F44 00000672                           9454          DC    X'00000672'
                                            9455 *
00006F48 0D                                 9456          DC    XL1'D'
00006F49 000000                             9457          DC    AL3(0)
00006F4C 00000690                           9458          DC    AL4(1680)
00006F50 00000000                           9459          DC    4X'00'
00006F54 00000000                           9460          DC    Q(@@STATIC)
00006F58 00000000                           9461          DC    X'00000000'
00006F5C 000002F8                           9462          DC    X'000002F8'
00006F60 0000000000005E90                   9463          DC    ADL8(@DATA)
00006F68 00000000                           9464          DC    X'00000000'
00006F6C 0000067A                           9465          DC    X'0000067A'
                                            9466 *
00006F70 0D                                 9467          DC    XL1'D'
00006F71 000000                             9468          DC    AL3(0)
00006F74 000006B8                           9469          DC    AL4(1720)
00006F78 00000000                           9470          DC    4X'00'
00006F7C 00000000                           9471          DC    Q(@@STATIC)
00006F80 00000000                           9472          DC    X'00000000'
00006F84 00000300                           9473          DC    X'00000300'
00006F88 0000000000005E90                   9474          DC    ADL8(@DATA)
00006F90 00000000                           9475          DC    X'00000000'
00006F94 0000068A                           9476          DC    X'0000068A'
                                            9477 *
00006F98 0D                                 9478          DC    XL1'D'
00006F99 000000                             9479          DC    AL3(0)
00006F9C 000006E0                           9480          DC    AL4(1760)
00006FA0 00000000                           9481          DC    4X'00'
00006FA4 00000000                           9482          DC    Q(@@STATIC)
00006FA8 00000000                           9483          DC    X'00000000'
00006FAC 00000308                           9484          DC    X'00000308'
00006FB0 0000000000005E90                   9485          DC    ADL8(@DATA)
00006FB8 00000000                           9486          DC    X'00000000'
00006FBC 0000069A                           9487          DC    X'0000069A'
                                            9488 *
                                                                                                                           Page  192 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006FC0 0D                                 9489          DC    XL1'D'
00006FC1 000000                             9490          DC    AL3(0)
00006FC4 00000708                           9491          DC    AL4(1800)
00006FC8 00000000                           9492          DC    4X'00'
00006FCC 00000000                           9493          DC    Q(@@STATIC)
00006FD0 00000000                           9494          DC    X'00000000'
00006FD4 00000310                           9495          DC    X'00000310'
00006FD8 0000000000005E90                   9496          DC    ADL8(@DATA)
00006FE0 00000000                           9497          DC    X'00000000'
00006FE4 000006A8                           9498          DC    X'000006A8'
                                            9499 *
00006FE8 0D                                 9500          DC    XL1'D'
00006FE9 000000                             9501          DC    AL3(0)
00006FEC 00000730                           9502          DC    AL4(1840)
00006FF0 00000000                           9503          DC    4X'00'
00006FF4 00000000                           9504          DC    Q(@@STATIC)
00006FF8 00000000                           9505          DC    X'00000000'
00006FFC 00000318                           9506          DC    X'00000318'
00007000 0000000000005E90                   9507          DC    ADL8(@DATA)
00007008 00000000                           9508          DC    X'00000000'
0000700C 000006B4                           9509          DC    X'000006B4'
                                            9510 *
00007010 0D                                 9511          DC    XL1'D'
00007011 000000                             9512          DC    AL3(0)
00007014 00000758                           9513          DC    AL4(1880)
00007018 00000000                           9514          DC    4X'00'
0000701C 00000000                           9515          DC    Q(@@STATIC)
00007020 00000000                           9516          DC    X'00000000'
00007024 00000320                           9517          DC    X'00000320'
00007028 0000000000005E90                   9518          DC    ADL8(@DATA)
00007030 00000000                           9519          DC    X'00000000'
00007034 000006C0                           9520          DC    X'000006C0'
                                            9521 *
00007038 0D                                 9522          DC    XL1'D'
00007039 000000                             9523          DC    AL3(0)
0000703C 00000780                           9524          DC    AL4(1920)
00007040 00000000                           9525          DC    4X'00'
00007044 00000000                           9526          DC    Q(@@STATIC)
00007048 00000000                           9527          DC    X'00000000'
0000704C 00000328                           9528          DC    X'00000328'
00007050 0000000000005E90                   9529          DC    ADL8(@DATA)
00007058 00000000                           9530          DC    X'00000000'
0000705C 000006D0                           9531          DC    X'000006D0'
                                            9532 *
00007060 0D                                 9533          DC    XL1'D'
00007061 000000                             9534          DC    AL3(0)
00007064 000007A8                           9535          DC    AL4(1960)
00007068 00000000                           9536          DC    4X'00'
0000706C 00000000                           9537          DC    Q(@@STATIC)
00007070 00000000                           9538          DC    X'00000000'
00007074 00000330                           9539          DC    X'00000330'
00007078 0000000000005E90                   9540          DC    ADL8(@DATA)
                                                                                                                           Page  193 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007080 00000000                           9541          DC    X'00000000'
00007084 000006DE                           9542          DC    X'000006DE'
                                            9543 *
00007088 0D                                 9544          DC    XL1'D'
00007089 000000                             9545          DC    AL3(0)
0000708C 000007D0                           9546          DC    AL4(2000)
00007090 00000000                           9547          DC    4X'00'
00007094 00000000                           9548          DC    Q(@@STATIC)
00007098 00000000                           9549          DC    X'00000000'
0000709C 00000338                           9550          DC    X'00000338'
000070A0 0000000000005E90                   9551          DC    ADL8(@DATA)
000070A8 00000000                           9552          DC    X'00000000'
000070AC 000006F2                           9553          DC    X'000006F2'
                                            9554 *
000070B0 0D                                 9555          DC    XL1'D'
000070B1 000000                             9556          DC    AL3(0)
000070B4 000007F8                           9557          DC    AL4(2040)
000070B8 00000000                           9558          DC    4X'00'
000070BC 00000000                           9559          DC    Q(@@STATIC)
000070C0 00000000                           9560          DC    X'00000000'
000070C4 00000340                           9561          DC    X'00000340'
000070C8 0000000000005E90                   9562          DC    ADL8(@DATA)
000070D0 00000000                           9563          DC    X'00000000'
000070D4 00000702                           9564          DC    X'00000702'
                                            9565 *
000070D8 0D                                 9566          DC    XL1'D'
000070D9 000000                             9567          DC    AL3(0)
000070DC 00000820                           9568          DC    AL4(2080)
000070E0 00000000                           9569          DC    4X'00'
000070E4 00000000                           9570          DC    Q(@@STATIC)
000070E8 00000000                           9571          DC    X'00000000'
000070EC 00000348                           9572          DC    X'00000348'
000070F0 0000000000005E90                   9573          DC    ADL8(@DATA)
000070F8 00000000                           9574          DC    X'00000000'
000070FC 00000714                           9575          DC    X'00000714'
                                            9576 *
00007100 0D                                 9577          DC    XL1'D'
00007101 000000                             9578          DC    AL3(0)
00007104 00000848                           9579          DC    AL4(2120)
00007108 00000000                           9580          DC    4X'00'
0000710C 00000000                           9581          DC    Q(@@STATIC)
00007110 00000000                           9582          DC    X'00000000'
00007114 00000350                           9583          DC    X'00000350'
00007118 0000000000005E90                   9584          DC    ADL8(@DATA)
00007120 00000000                           9585          DC    X'00000000'
00007124 00000726                           9586          DC    X'00000726'
                                            9587 *
00007128 0D                                 9588          DC    XL1'D'
00007129 000000                             9589          DC    AL3(0)
0000712C 00000870                           9590          DC    AL4(2160)
00007130 00000000                           9591          DC    4X'00'
00007134 00000000                           9592          DC    Q(@@STATIC)
                                                                                                                           Page  194 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007138 00000000                           9593          DC    X'00000000'
0000713C 00000358                           9594          DC    X'00000358'
00007140 0000000000005E90                   9595          DC    ADL8(@DATA)
00007148 00000000                           9596          DC    X'00000000'
0000714C 0000073C                           9597          DC    X'0000073C'
                                            9598 *
00007150 0D                                 9599          DC    XL1'D'
00007151 000000                             9600          DC    AL3(0)
00007154 00000898                           9601          DC    AL4(2200)
00007158 00000000                           9602          DC    4X'00'
0000715C 00000000                           9603          DC    Q(@@STATIC)
00007160 00000000                           9604          DC    X'00000000'
00007164 00000360                           9605          DC    X'00000360'
00007168 0000000000005E90                   9606          DC    ADL8(@DATA)
00007170 00000000                           9607          DC    X'00000000'
00007174 00000752                           9608          DC    X'00000752'
                                            9609 *
00007178 0D                                 9610          DC    XL1'D'
00007179 000000                             9611          DC    AL3(0)
0000717C 000008C0                           9612          DC    AL4(2240)
00007180 00000000                           9613          DC    4X'00'
00007184 00000000                           9614          DC    Q(@@STATIC)
00007188 00000000                           9615          DC    X'00000000'
0000718C 00000368                           9616          DC    X'00000368'
00007190 0000000000005E90                   9617          DC    ADL8(@DATA)
00007198 00000000                           9618          DC    X'00000000'
0000719C 00000768                           9619          DC    X'00000768'
                                            9620 *
000071A0 0D                                 9621          DC    XL1'D'
000071A1 000000                             9622          DC    AL3(0)
000071A4 000008E8                           9623          DC    AL4(2280)
000071A8 00000000                           9624          DC    4X'00'
000071AC 00000000                           9625          DC    Q(@@STATIC)
000071B0 00000000                           9626          DC    X'00000000'
000071B4 00000370                           9627          DC    X'00000370'
000071B8 0000000000005E90                   9628          DC    ADL8(@DATA)
000071C0 00000000                           9629          DC    X'00000000'
000071C4 00000780                           9630          DC    X'00000780'
                                            9631 *
000071C8 0D                                 9632          DC    XL1'D'
000071C9 000000                             9633          DC    AL3(0)
000071CC 00000910                           9634          DC    AL4(2320)
000071D0 00000000                           9635          DC    4X'00'
000071D4 00000000                           9636          DC    Q(@@STATIC)
000071D8 00000000                           9637          DC    X'00000000'
000071DC 00000378                           9638          DC    X'00000378'
000071E0 0000000000005E90                   9639          DC    ADL8(@DATA)
000071E8 00000000                           9640          DC    X'00000000'
000071EC 0000078E                           9641          DC    X'0000078E'
                                            9642 *
000071F0 0D                                 9643          DC    XL1'D'
000071F1 000000                             9644          DC    AL3(0)
                                                                                                                           Page  195 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000071F4 00000938                           9645          DC    AL4(2360)
000071F8 00000000                           9646          DC    4X'00'
000071FC 00000000                           9647          DC    Q(@@STATIC)
00007200 00000000                           9648          DC    X'00000000'
00007204 00000380                           9649          DC    X'00000380'
00007208 0000000000005E90                   9650          DC    ADL8(@DATA)
00007210 00000000                           9651          DC    X'00000000'
00007214 000007A2                           9652          DC    X'000007A2'
                                            9653 *
00007218 0D                                 9654          DC    XL1'D'
00007219 000000                             9655          DC    AL3(0)
0000721C 00000960                           9656          DC    AL4(2400)
00007220 00000000                           9657          DC    4X'00'
00007224 00000000                           9658          DC    Q(@@STATIC)
00007228 00000000                           9659          DC    X'00000000'
0000722C 00000388                           9660          DC    X'00000388'
00007230 0000000000005E90                   9661          DC    ADL8(@DATA)
00007238 00000000                           9662          DC    X'00000000'
0000723C 000007C2                           9663          DC    X'000007C2'
                                            9664 *
00007240 0D                                 9665          DC    XL1'D'
00007241 000000                             9666          DC    AL3(0)
00007244 00000988                           9667          DC    AL4(2440)
00007248 00000000                           9668          DC    4X'00'
0000724C 00000000                           9669          DC    Q(@@STATIC)
00007250 00000000                           9670          DC    X'00000000'
00007254 00000390                           9671          DC    X'00000390'
00007258 0000000000005E90                   9672          DC    ADL8(@DATA)
00007260 00000000                           9673          DC    X'00000000'
00007264 000007E6                           9674          DC    X'000007E6'
                                            9675 *
00007268 0D                                 9676          DC    XL1'D'
00007269 000000                             9677          DC    AL3(0)
0000726C 000009B0                           9678          DC    AL4(2480)
00007270 00000000                           9679          DC    4X'00'
00007274 00000000                           9680          DC    Q(@@STATIC)
00007278 00000000                           9681          DC    X'00000000'
0000727C 00000398                           9682          DC    X'00000398'
00007280 0000000000005E90                   9683          DC    ADL8(@DATA)
00007288 00000000                           9684          DC    X'00000000'
0000728C 00000808                           9685          DC    X'00000808'
                                            9686 *
00007290 0D                                 9687          DC    XL1'D'
00007291 000000                             9688          DC    AL3(0)
00007294 000009D8                           9689          DC    AL4(2520)
00007298 00000000                           9690          DC    4X'00'
0000729C 00000000                           9691          DC    Q(@@STATIC)
000072A0 00000000                           9692          DC    X'00000000'
000072A4 000003A0                           9693          DC    X'000003A0'
000072A8 0000000000005E90                   9694          DC    ADL8(@DATA)
000072B0 00000000                           9695          DC    X'00000000'
000072B4 0000081C                           9696          DC    X'0000081C'
                                                                                                                           Page  196 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            9697 *
000072B8 0D                                 9698          DC    XL1'D'
000072B9 000000                             9699          DC    AL3(0)
000072BC 00000A00                           9700          DC    AL4(2560)
000072C0 00000000                           9701          DC    4X'00'
000072C4 00000000                           9702          DC    Q(@@STATIC)
000072C8 00000000                           9703          DC    X'00000000'
000072CC 000003A8                           9704          DC    X'000003A8'
000072D0 0000000000005E90                   9705          DC    ADL8(@DATA)
000072D8 00000000                           9706          DC    X'00000000'
000072DC 00000838                           9707          DC    X'00000838'
                                            9708 *
000072E0 0D                                 9709          DC    XL1'D'
000072E1 000000                             9710          DC    AL3(0)
000072E4 00000A28                           9711          DC    AL4(2600)
000072E8 00000000                           9712          DC    4X'00'
000072EC 00000000                           9713          DC    Q(@@STATIC)
000072F0 00000000                           9714          DC    X'00000000'
000072F4 000003B0                           9715          DC    X'000003B0'
000072F8 0000000000005E90                   9716          DC    ADL8(@DATA)
00007300 00000000                           9717          DC    X'00000000'
00007304 00000852                           9718          DC    X'00000852'
                                            9719 *
00007308 0D                                 9720          DC    XL1'D'
00007309 000000                             9721          DC    AL3(0)
0000730C 00000A50                           9722          DC    AL4(2640)
00007310 00000000                           9723          DC    4X'00'
00007314 00000000                           9724          DC    Q(@@STATIC)
00007318 00000000                           9725          DC    X'00000000'
0000731C 000003B8                           9726          DC    X'000003B8'
00007320 0000000000005E90                   9727          DC    ADL8(@DATA)
00007328 00000000                           9728          DC    X'00000000'
0000732C 00000876                           9729          DC    X'00000876'
                                            9730 *
00007330 0D                                 9731          DC    XL1'D'
00007331 000000                             9732          DC    AL3(0)
00007334 00000A78                           9733          DC    AL4(2680)
00007338 00000000                           9734          DC    4X'00'
0000733C 00000000                           9735          DC    Q(@@STATIC)
00007340 00000000                           9736          DC    X'00000000'
00007344 000003C0                           9737          DC    X'000003C0'
00007348 0000000000005E90                   9738          DC    ADL8(@DATA)
00007350 00000000                           9739          DC    X'00000000'
00007354 00000898                           9740          DC    X'00000898'
                                            9741 *
00007358 0D                                 9742          DC    XL1'D'
00007359 000000                             9743          DC    AL3(0)
0000735C 00000AA0                           9744          DC    AL4(2720)
00007360 00000000                           9745          DC    4X'00'
00007364 00000000                           9746          DC    Q(@@STATIC)
00007368 00000000                           9747          DC    X'00000000'
0000736C 000003C8                           9748          DC    X'000003C8'
                                                                                                                           Page  197 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007370 0000000000005E90                   9749          DC    ADL8(@DATA)
00007378 00000000                           9750          DC    X'00000000'
0000737C 000008A4                           9751          DC    X'000008A4'
                                            9752 *
00007380 0D                                 9753          DC    XL1'D'
00007381 000000                             9754          DC    AL3(0)
00007384 00000AC8                           9755          DC    AL4(2760)
00007388 00000000                           9756          DC    4X'00'
0000738C 00000000                           9757          DC    Q(@@STATIC)
00007390 00000000                           9758          DC    X'00000000'
00007394 000003D0                           9759          DC    X'000003D0'
00007398 0000000000005E90                   9760          DC    ADL8(@DATA)
000073A0 00000000                           9761          DC    X'00000000'
000073A4 000008BC                           9762          DC    X'000008BC'
                                            9763 *
000073A8 0D                                 9764          DC    XL1'D'
000073A9 000000                             9765          DC    AL3(0)
000073AC 00000AF0                           9766          DC    AL4(2800)
000073B0 00000000                           9767          DC    4X'00'
000073B4 00000000                           9768          DC    Q(@@STATIC)
000073B8 00000000                           9769          DC    X'00000000'
000073BC 000003D8                           9770          DC    X'000003D8'
000073C0 0000000000005E90                   9771          DC    ADL8(@DATA)
000073C8 00000000                           9772          DC    X'00000000'
000073CC 000008D2                           9773          DC    X'000008D2'
                                            9774 *
000073D0 0D                                 9775          DC    XL1'D'
000073D1 000000                             9776          DC    AL3(0)
000073D4 00000B18                           9777          DC    AL4(2840)
000073D8 00000000                           9778          DC    4X'00'
000073DC 00000000                           9779          DC    Q(@@STATIC)
000073E0 00000000                           9780          DC    X'00000000'
000073E4 000003E0                           9781          DC    X'000003E0'
000073E8 0000000000005E90                   9782          DC    ADL8(@DATA)
000073F0 00000000                           9783          DC    X'00000000'
000073F4 000008E8                           9784          DC    X'000008E8'
                                            9785 *
000073F8 0D                                 9786          DC    XL1'D'
000073F9 000000                             9787          DC    AL3(0)
000073FC 00000B40                           9788          DC    AL4(2880)
00007400 00000000                           9789          DC    4X'00'
00007404 00000000                           9790          DC    Q(@@STATIC)
00007408 00000000                           9791          DC    X'00000000'
0000740C 000003E8                           9792          DC    X'000003E8'
00007410 0000000000005E90                   9793          DC    ADL8(@DATA)
00007418 00000000                           9794          DC    X'00000000'
0000741C 000008F8                           9795          DC    X'000008F8'
                                            9796 *
00007420 0D                                 9797          DC    XL1'D'
00007421 000000                             9798          DC    AL3(0)
00007424 00000B68                           9799          DC    AL4(2920)
00007428 00000000                           9800          DC    4X'00'
                                                                                                                           Page  198 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000742C 00000000                           9801          DC    Q(@@STATIC)
00007430 00000000                           9802          DC    X'00000000'
00007434 000003F0                           9803          DC    X'000003F0'
00007438 0000000000005E90                   9804          DC    ADL8(@DATA)
00007440 00000000                           9805          DC    X'00000000'
00007444 0000090E                           9806          DC    X'0000090E'
                                            9807 *
00007448 0D                                 9808          DC    XL1'D'
00007449 000000                             9809          DC    AL3(0)
0000744C 00000B90                           9810          DC    AL4(2960)
00007450 00000000                           9811          DC    4X'00'
00007454 00000000                           9812          DC    Q(@@STATIC)
00007458 00000000                           9813          DC    X'00000000'
0000745C 000004C0                           9814          DC    X'000004C0'
00007460 0000000000005E90                   9815          DC    ADL8(@DATA)
00007468 00000000                           9816          DC    X'00000000'
0000746C 0000091E                           9817          DC    X'0000091E'
                                            9818 *
00007470 0D                                 9819          DC    XL1'D'
00007471 000000                             9820          DC    AL3(0)
00007474 00000BB8                           9821          DC    AL4(3000)
00007478 00000000                           9822          DC    4X'00'
0000747C 00000000                           9823          DC    Q(@@STATIC)
00007480 00000000                           9824          DC    X'00000000'
00007484 000004C8                           9825          DC    X'000004C8'
00007488 0000000000005E90                   9826          DC    ADL8(@DATA)
00007490 00000000                           9827          DC    X'00000000'
00007494 00000924                           9828          DC    X'00000924'
                                            9829 *
00007498 0D                                 9830          DC    XL1'D'
00007499 000000                             9831          DC    AL3(0)
0000749C 00000BE0                           9832          DC    AL4(3040)
000074A0 00000000                           9833          DC    4X'00'
000074A4 00000000                           9834          DC    Q(@@STATIC)
000074A8 00000000                           9835          DC    X'00000000'
000074AC 000004D0                           9836          DC    X'000004D0'
000074B0 0000000000005E90                   9837          DC    ADL8(@DATA)
000074B8 00000000                           9838          DC    X'00000000'
000074BC 0000092A                           9839          DC    X'0000092A'
                                            9840 *
000074C0 0D                                 9841          DC    XL1'D'
000074C1 000000                             9842          DC    AL3(0)
000074C4 00000C08                           9843          DC    AL4(3080)
000074C8 00000000                           9844          DC    4X'00'
000074CC 00000000                           9845          DC    Q(@@STATIC)
000074D0 00000000                           9846          DC    X'00000000'
000074D4 000004D8                           9847          DC    X'000004D8'
000074D8 0000000000005E90                   9848          DC    ADL8(@DATA)
000074E0 00000000                           9849          DC    X'00000000'
000074E4 00000932                           9850          DC    X'00000932'
                                            9851 *
000074E8 0D                                 9852          DC    XL1'D'
                                                                                                                           Page  199 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000074E9 000000                             9853          DC    AL3(0)
000074EC 00000C30                           9854          DC    AL4(3120)
000074F0 00000000                           9855          DC    4X'00'
000074F4 00000000                           9856          DC    Q(@@STATIC)
000074F8 00000000                           9857          DC    X'00000000'
000074FC 000004E0                           9858          DC    X'000004E0'
00007500 0000000000005E90                   9859          DC    ADL8(@DATA)
00007508 00000000                           9860          DC    X'00000000'
0000750C 00000936                           9861          DC    X'00000936'
                                            9862 *
00007510 0D                                 9863          DC    XL1'D'
00007511 000000                             9864          DC    AL3(0)
00007514 00000C58                           9865          DC    AL4(3160)
00007518 00000000                           9866          DC    4X'00'
0000751C 00000000                           9867          DC    Q(@@STATIC)
00007520 00000000                           9868          DC    X'00000000'
00007524 000004E8                           9869          DC    X'000004E8'
00007528 0000000000005E90                   9870          DC    ADL8(@DATA)
00007530 00000000                           9871          DC    X'00000000'
00007534 0000093C                           9872          DC    X'0000093C'
                                            9873 *
00007538 0D                                 9874          DC    XL1'D'
00007539 000000                             9875          DC    AL3(0)
0000753C 00000C80                           9876          DC    AL4(3200)
00007540 00000000                           9877          DC    4X'00'
00007544 00000000                           9878          DC    Q(@@STATIC)
00007548 00000000                           9879          DC    X'00000000'
0000754C 00000510                           9880          DC    X'00000510'
00007550 0000000000005E90                   9881          DC    ADL8(@DATA)
00007558 00000000                           9882          DC    X'00000000'
0000755C 00000944                           9883          DC    X'00000944'
                                            9884 *
00007560 0D                                 9885          DC    XL1'D'
00007561 000000                             9886          DC    AL3(0)
00007564 00000CA8                           9887          DC    AL4(3240)
00007568 00000000                           9888          DC    4X'00'
0000756C 00000000                           9889          DC    Q(@@STATIC)
00007570 00000000                           9890          DC    X'00000000'
00007574 00000518                           9891          DC    X'00000518'
00007578 0000000000005E90                   9892          DC    ADL8(@DATA)
00007580 00000000                           9893          DC    X'00000000'
00007584 00000950                           9894          DC    X'00000950'
                                            9895 *
00007588 0D                                 9896          DC    XL1'D'
00007589 000000                             9897          DC    AL3(0)
0000758C 00000CD0                           9898          DC    AL4(3280)
00007590 00000000                           9899          DC    4X'00'
00007594 00000000                           9900          DC    Q(@@STATIC)
00007598 00000000                           9901          DC    X'00000000'
0000759C 00000520                           9902          DC    X'00000520'
000075A0 0000000000005E90                   9903          DC    ADL8(@DATA)
000075A8 00000000                           9904          DC    X'00000000'
                                                                                                                           Page  200 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000075AC 00000958                           9905          DC    X'00000958'
                                            9906 *
000075B0 0D                                 9907          DC    XL1'D'
000075B1 000000                             9908          DC    AL3(0)
000075B4 00000CF8                           9909          DC    AL4(3320)
000075B8 00000000                           9910          DC    4X'00'
000075BC 00000000                           9911          DC    Q(@@STATIC)
000075C0 00000000                           9912          DC    X'00000000'
000075C4 00000528                           9913          DC    X'00000528'
000075C8 0000000000005E90                   9914          DC    ADL8(@DATA)
000075D0 00000000                           9915          DC    X'00000000'
000075D4 00000962                           9916          DC    X'00000962'
                                            9917 *
000075D8 0D                                 9918          DC    XL1'D'
000075D9 000000                             9919          DC    AL3(0)
000075DC 00000D20                           9920          DC    AL4(3360)
000075E0 00000000                           9921          DC    4X'00'
000075E4 00000000                           9922          DC    Q(@@STATIC)
000075E8 00000000                           9923          DC    X'00000000'
000075EC 00000630                           9924          DC    X'00000630'
000075F0 0000000000005E90                   9925          DC    ADL8(@DATA)
000075F8 00000000                           9926          DC    X'00000000'
000075FC 0000096A                           9927          DC    X'0000096A'
                                            9928 *
00007600 0D                                 9929          DC    XL1'D'
00007601 000000                             9930          DC    AL3(0)
00007604 00000D48                           9931          DC    AL4(3400)
00007608 00000000                           9932          DC    4X'00'
0000760C 00000000                           9933          DC    Q(@@STATIC)
00007610 00000000                           9934          DC    X'00000000'
00007614 00000638                           9935          DC    X'00000638'
00007618 0000000000005E90                   9936          DC    ADL8(@DATA)
00007620 00000000                           9937          DC    X'00000000'
00007624 00000970                           9938          DC    X'00000970'
                                            9939 *
00007628 0D                                 9940          DC    XL1'D'
00007629 000000                             9941          DC    AL3(0)
0000762C 00000D70                           9942          DC    AL4(3440)
00007630 00000000                           9943          DC    4X'00'
00007634 00000000                           9944          DC    Q(@@STATIC)
00007638 00000000                           9945          DC    X'00000000'
0000763C 00000640                           9946          DC    X'00000640'
00007640 0000000000005E90                   9947          DC    ADL8(@DATA)
00007648 00000000                           9948          DC    X'00000000'
0000764C 0000097A                           9949          DC    X'0000097A'
                                            9950 *
00007650 0D                                 9951          DC    XL1'D'
00007651 000000                             9952          DC    AL3(0)
00007654 00000D98                           9953          DC    AL4(3480)
00007658 00000000                           9954          DC    4X'00'
0000765C 00000000                           9955          DC    Q(@@STATIC)
00007660 00000000                           9956          DC    X'00000000'
                                                                                                                           Page  201 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007664 00000648                           9957          DC    X'00000648'
00007668 0000000000005E90                   9958          DC    ADL8(@DATA)
00007670 00000000                           9959          DC    X'00000000'
00007674 00000986                           9960          DC    X'00000986'
                                            9961 *
00007678 0D                                 9962          DC    XL1'D'
00007679 000000                             9963          DC    AL3(0)
0000767C 00000DC0                           9964          DC    AL4(3520)
00007680 00000000                           9965          DC    4X'00'
00007684 00000000                           9966          DC    Q(@@STATIC)
00007688 00000000                           9967          DC    X'00000000'
0000768C 00000650                           9968          DC    X'00000650'
00007690 0000000000005E90                   9969          DC    ADL8(@DATA)
00007698 00000000                           9970          DC    X'00000000'
0000769C 00000992                           9971          DC    X'00000992'
                                            9972 *
000076A0 0D                                 9973          DC    XL1'D'
000076A1 000000                             9974          DC    AL3(0)
000076A4 00000DE8                           9975          DC    AL4(3560)
000076A8 00000000                           9976          DC    4X'00'
000076AC 00000000                           9977          DC    Q(@@STATIC)
000076B0 00000000                           9978          DC    X'00000000'
000076B4 00000658                           9979          DC    X'00000658'
000076B8 0000000000005E90                   9980          DC    ADL8(@DATA)
000076C0 00000000                           9981          DC    X'00000000'
000076C4 000009A0                           9982          DC    X'000009A0'
                                            9983 *
000076C8 0D                                 9984          DC    XL1'D'
000076C9 000000                             9985          DC    AL3(0)
000076CC 00000E10                           9986          DC    AL4(3600)
000076D0 00000000                           9987          DC    4X'00'
000076D4 00000000                           9988          DC    Q(@@STATIC)
000076D8 00000000                           9989          DC    X'00000000'
000076DC 00000660                           9990          DC    X'00000660'
000076E0 0000000000005E90                   9991          DC    ADL8(@DATA)
000076E8 00000000                           9992          DC    X'00000000'
000076EC 000009A8                           9993          DC    X'000009A8'
                                            9994 *
000076F0 0D                                 9995          DC    XL1'D'
000076F1 000000                             9996          DC    AL3(0)
000076F4 00000E38                           9997          DC    AL4(3640)
000076F8 00000000                           9998          DC    4X'00'
000076FC 00000000                           9999          DC    Q(@@STATIC)
00007700 00000000                          10000          DC    X'00000000'
00007704 00000668                          10001          DC    X'00000668'
00007708 0000000000005E90                  10002          DC    ADL8(@DATA)
00007710 00000000                          10003          DC    X'00000000'
00007714 000009B2                          10004          DC    X'000009B2'
                                           10005 *
00007718 0D                                10006          DC    XL1'D'
00007719 000000                            10007          DC    AL3(0)
0000771C 00000E60                          10008          DC    AL4(3680)
                                                                                                                           Page  202 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00007720 00000000                          10009          DC    4X'00'
00007724 00000000                          10010          DC    Q(@@STATIC)
00007728 00000000                          10011          DC    X'00000000'
0000772C 00000670                          10012          DC    X'00000670'
00007730 0000000000005E90                  10013          DC    ADL8(@DATA)
00007738 00000000                          10014          DC    X'00000000'
0000773C 000009BE                          10015          DC    X'000009BE'
                                           10016 *
00007740 0D                                10017          DC    XL1'D'
00007741 000000                            10018          DC    AL3(0)
00007744 00000E88                          10019          DC    AL4(3720)
00007748 00000000                          10020          DC    4X'00'
0000774C 00000000                          10021          DC    Q(@@STATIC)
00007750 00000000                          10022          DC    X'00000000'
00007754 00000678                          10023          DC    X'00000678'
00007758 0000000000005E90                  10024          DC    ADL8(@DATA)
00007760 00000000                          10025          DC    X'00000000'
00007764 0000096A                          10026          DC    X'0000096A'
                                           10027 *
00007768 0D                                10028          DC    XL1'D'
00007769 000000                            10029          DC    AL3(0)
0000776C 00000EB0                          10030          DC    AL4(3760)
00007770 00000000                          10031          DC    4X'00'
00007774 00000000                          10032          DC    Q(@@STATIC)
00007778 00000000                          10033          DC    X'00000000'
0000777C 00000680                          10034          DC    X'00000680'
00007780 0000000000005E90                  10035          DC    ADL8(@DATA)
00007788 00000000                          10036          DC    X'00000000'
0000778C 000009A0                          10037          DC    X'000009A0'
                                           10038 *
00007790 0D                                10039          DC    XL1'D'
00007791 000000                            10040          DC    AL3(0)
00007794 00000ED8                          10041          DC    AL4(3800)
00007798 00000000                          10042          DC    4X'00'
0000779C 00000000                          10043          DC    Q(@@STATIC)
000077A0 00000000                          10044          DC    X'00000000'
000077A4 00000688                          10045          DC    X'00000688'
000077A8 0000000000005E90                  10046          DC    ADL8(@DATA)
000077B0 00000000                          10047          DC    X'00000000'
000077B4 000009C8                          10048          DC    X'000009C8'
                                           10049 *
000077B8 0D                                10050          DC    XL1'D'
000077B9 000000                            10051          DC    AL3(0)
000077BC 00000F00                          10052          DC    AL4(3840)
000077C0 00000000                          10053          DC    4X'00'
000077C4 00000000                          10054          DC    Q(@@STATIC)
000077C8 00000000                          10055          DC    X'00000000'
000077CC 00000690                          10056          DC    X'00000690'
000077D0 0000000000005E90                  10057          DC    ADL8(@DATA)
000077D8 00000000                          10058          DC    X'00000000'
000077DC 000009D6                          10059          DC    X'000009D6'
                                           10060 *
                                                                                                                           Page  203 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000077E0 0D                                10061          DC    XL1'D'
000077E1 000000                            10062          DC    AL3(0)
000077E4 00000F28                          10063          DC    AL4(3880)
000077E8 00000000                          10064          DC    4X'00'
000077EC 00000000                          10065          DC    Q(@@STATIC)
000077F0 00000000                          10066          DC    X'00000000'
000077F4 00000698                          10067          DC    X'00000698'
000077F8 0000000000005E90                  10068          DC    ADL8(@DATA)
00007800 00000000                          10069          DC    X'00000000'
00007804 000009DC                          10070          DC    X'000009DC'
                                           10071 *
00007808 0D                                10072          DC    XL1'D'
00007809 000000                            10073          DC    AL3(0)
0000780C 00000F50                          10074          DC    AL4(3920)
00007810 00000000                          10075          DC    4X'00'
00007814 00000000                          10076          DC    Q(@@STATIC)
00007818 00000000                          10077          DC    X'00000000'
0000781C 000006A0                          10078          DC    X'000006A0'
00007820 0000000000005E90                  10079          DC    ADL8(@DATA)
00007828 00000000                          10080          DC    X'00000000'
0000782C 000009EA                          10081          DC    X'000009EA'
                                           10082 *
00007830 0D                                10083          DC    XL1'D'
00007831 000000                            10084          DC    AL3(0)
00007834 00000F78                          10085          DC    AL4(3960)
00007838 00000000                          10086          DC    4X'00'
0000783C 00000000                          10087          DC    Q(@@STATIC)
00007840 00000000                          10088          DC    X'00000000'
00007844 000006A8                          10089          DC    X'000006A8'
00007848 0000000000005E90                  10090          DC    ADL8(@DATA)
00007850 00000000                          10091          DC    X'00000000'
00007854 000009F6                          10092          DC    X'000009F6'
                                           10093 *
00007858 0D                                10094          DC    XL1'D'
00007859 000000                            10095          DC    AL3(0)
0000785C 00000FA0                          10096          DC    AL4(4000)
00007860 00000000                          10097          DC    4X'00'
00007864 00000000                          10098          DC    Q(@@STATIC)
00007868 00000000                          10099          DC    X'00000000'
0000786C 000006B0                          10100          DC    X'000006B0'
00007870 0000000000005E90                  10101          DC    ADL8(@DATA)
00007878 00000000                          10102          DC    X'00000000'
0000787C 00000A0C                          10103          DC    X'00000A0C'
                                           10104 *
00007880 0D                                10105          DC    XL1'D'
00007881 000000                            10106          DC    AL3(0)
00007884 00000FC8                          10107          DC    AL4(4040)
00007888 00000000                          10108          DC    4X'00'
0000788C 00000000                          10109          DC    Q(@@STATIC)
00007890 00000000                          10110          DC    X'00000000'
00007894 000006B8                          10111          DC    X'000006B8'
00007898 0000000000005E90                  10112          DC    ADL8(@DATA)
                                                                                                                           Page  204 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000078A0 00000000                          10113          DC    X'00000000'
000078A4 00000A1C                          10114          DC    X'00000A1C'
                                           10115 *
000078A8 0D                                10116          DC    XL1'D'
000078A9 000000                            10117          DC    AL3(0)
000078AC 00000FF0                          10118          DC    AL4(4080)
000078B0 00000000                          10119          DC    4X'00'
000078B4 00000000                          10120          DC    Q(@@STATIC)
000078B8 00000000                          10121          DC    X'00000000'
000078BC 000006C0                          10122          DC    X'000006C0'
000078C0 0000000000005E90                  10123          DC    ADL8(@DATA)
000078C8 00000000                          10124          DC    X'00000000'
000078CC 00000A30                          10125          DC    X'00000A30'
                                           10126 *
000078D0 0D                                10127          DC    XL1'D'
000078D1 000000                            10128          DC    AL3(0)
000078D4 00001018                          10129          DC    AL4(4120)
000078D8 00000000                          10130          DC    4X'00'
000078DC 00000000                          10131          DC    Q(@@STATIC)
000078E0 00000000                          10132          DC    X'00000000'
000078E4 000006C8                          10133          DC    X'000006C8'
000078E8 0000000000005E90                  10134          DC    ADL8(@DATA)
000078F0 00000000                          10135          DC    X'00000000'
000078F4 00000A40                          10136          DC    X'00000A40'
                                           10137 *
000078F8 0D                                10138          DC    XL1'D'
000078F9 000000                            10139          DC    AL3(0)
000078FC 00000000                          10140          DC    AL4(0)
00007900 00000000                          10141          DC    4X'00'
00007904 00000000                          10142          DC    Q(@@STATIC)
00007908 00000000                          10143          DC    X'00000000'
0000790C 000006D0                          10144          DC    X'000006D0'
00007910 0000000000005E90                  10145          DC    ADL8(@DATA)
00007918 00000000                          10146          DC    X'00000000'
0000791C 0000097A                          10147          DC    X'0000097A'
                                           10148 *
                                           10149          END
                                                 Relocation Dictionary                                                     Page  205 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000005 00000148   A 4      +
 00000002 0000000E 00000150   A 4      +
 00000002 00000032 00000158   A 4      +
 00000002 00000032 00000160   A 4      +
 00000002 00000002 00000180   A 4      +
 00000002 00000002 000001A8   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 0000002F 00000268   A 4      +
 00000002 00000002 00000288   A 4      +
 00000002 00000002 000002B0   A 4      +
 00000002 00000002 000002B8   A 4      +
 00000002 0000000B 000003B8   A 4      +
 00000002 0000000E 000003C0   A 4      +
 00000002 00000032 000003C8   A 4      +
 00000002 00000032 000003D0   A 4      +
 00000002 00000002 000003F0   A 4      +
 00000002 00000002 00000418   A 4      +
 00000002 00000002 00000420   A 4      +
 00000002 00000013 000004F0   A 4      +
 00000002 00000002 00000538   A 4      +
 00000002 00000002 00000540   A 4      +
 00000002 00000002 00000590   A 4      +
 00000002 00000002 000005B8   A 4      +
 00000002 00000002 000005C0   A 4      +
 00000002 00000012 00000698   A 4      +
 00000002 00000015 000006A0   A 4      +
 00000002 00000002 000006C8   A 4      +
 00000002 00000002 000006F0   A 4      +
 00000002 00000002 000006F8   A 4      +
 00000002 00000012 000007E0   A 4      +
 00000002 00000015 000007E8   A 4      +
 00000002 00000002 00000810   A 4      +
 00000002 00000002 00000838   A 4      +
 00000002 00000002 00000840   A 4      +
 00000002 00000002 000009C0   A 4      +
 00000002 0000000C 000009C8   A 4      +
 00000002 00000012 000009D0   A 4      +
 00000002 00000025 000009D8   A 4      +
 00000002 00000032 000009E0   A 4      +
 00000002 00000032 000009E8   A 4      +
 00000002 00000015 000009F0   A 4      +
 00000002 0000000A 000009F8   A 4      +
 00000002 00000002 00000A20   A 4      +
 00000002 00000002 00000A48   A 4      +
 00000002 00000002 00000A50   A 4      +
 00000002 00000012 00000B50   A 4      +
 00000002 00000002 00000B58   A 4      +
 00000002 00000015 00000B60   A 4      +
 00000002 00000002 00000B88   A 4      +
 00000002 00000002 00000BB0   A 4      +
                                                 Relocation Dictionary                                                     Page  206 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000BB8   A 4      +
 00000002 00000004 00000C68   A 4      +
 00000002 00000002 00000D60   A 4      +
 00000002 00000002 00000D68   A 4      +
 00000002 00000002 00000DE8   A 4      +
 00000002 00000002 00000E10   A 4      +
 00000002 00000002 00000E18   A 4      +
 00000002 00000002 00000EB0   A 4      +
 00000002 00000002 00001070   A 4      +
 00000002 00000002 00001098   A 4      +
 00000002 00000002 000010A0   A 4      +
 00000002 00000012 00001160   A 4      +
 00000002 00000015 00001168   A 4      +
 00000002 00000008 00001170   A 4      +
 00000002 00000002 00001178   A 4      +
 00000002 00000002 00001180   A 4      +
 00000002 0000001A 00001188   A 4      +
 00000002 00000002 00001190   A 4      +
 00000002 00000002 00001198   A 4      +
 00000002 00000002 000011A0   A 4      +
 00000002 00000002 00001328   A 4      +
 00000002 00000002 00001350   A 4      +
 00000002 00000002 00001358   A 4      +
 00000002 00000002 00001438   A 4      +
 00000002 00000002 00001490   A 4      +
 00000002 00000002 00001498   A 4      +
 00000002 00000002 000014F0   A 4      +
 00000002 00000002 00001518   A 4      +
 00000002 00000002 00001520   A 4      +
 00000002 00000002 00001600   A 4      +
 00000002 00000002 00001608   A 4      +
 00000002 00000002 00001630   A 4      +
 00000002 00000002 00001658   A 4      +
 00000002 00000002 00001660   A 4      +
 00000002 00000002 000016E0   A 4      +
 00000002 00000002 000016E8   A 4      +
 00000002 00000002 000017A8   A 4      +
 00000002 00000002 000017D0   A 4      +
 00000002 00000002 000017D8   A 4      +
 00000002 0000000E 00001978   A 4      +
 00000002 00000032 00001980   A 4      +
 00000002 00000032 00001988   A 4      +
 00000002 00000011 00001990   A 4      +
 00000002 00000002 00001998   A 4      +
 00000002 00000002 000019D0   A 4      +
 00000002 00000002 000019F8   A 4      +
 00000002 00000002 00001A00   A 4      +
 00000002 00000012 00001AD8   A 4      +
 00000002 00000015 00001AE0   A 4      +
 00000002 00000002 00001B10   A 4      +
 00000002 00000002 00001B38   A 4      +
 00000002 00000002 00001B40   A 4      +
 00000002 00000012 00001D18   A 4      +
                                                 Relocation Dictionary                                                     Page  207 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 0000000E 00001D20   A 4      +
 00000002 00000032 00001D28   A 4      +
 00000002 00000032 00001D30   A 4      +
 00000002 00000002 00001D38   A 4      +
 00000002 00000015 00001D40   A 4      +
 00000002 00000002 00001D48   A 4      +
 00000002 00000002 00001D50   A 4      +
 00000002 00000002 00001D58   A 4      +
 00000002 00000002 00001D80   A 4      +
 00000002 00000002 00001DA8   A 4      +
 00000002 00000002 00001DB0   A 4      +
 00000002 00000002 00001E98   A 4      +
 00000002 00000002 00001EC0   A 4      +
 00000002 00000002 00001EE8   A 4      +
 00000002 00000002 00001EF0   A 4      +
 00000002 00000006 00001F70   A 4      +
 00000002 00000032 00001F78   A 4      +
 00000002 00000032 00001F80   A 4      +
 00000002 0000002B 00001F88   Q 4      +
 00000002 0000000E 00001F90   A 4      +
 00000002 00000002 00002100   A 4      +
 00000002 00000002 00002128   A 4      +
 00000002 00000002 00002130   A 4      +
 00000002 00000002 00002260   A 4      +
 00000002 00000002 00002290   A 4      +
 00000002 00000002 000022B8   A 4      +
 00000002 00000002 000022C0   A 4      +
 00000002 00000002 000023B8   A 4      +
 00000002 00000002 000023E0   A 4      +
 00000002 00000002 00002408   A 4      +
 00000002 00000002 00002410   A 4      +
 00000002 00000027 000024D8   A 4      +
 00000002 00000002 00002500   A 4      +
 00000002 00000002 00002528   A 4      +
 00000002 00000002 00002530   A 4      +
 00000002 00000028 000025F8   A 4      +
 00000002 00000002 00002620   A 4      +
 00000002 00000002 00002648   A 4      +
 00000002 00000002 00002650   A 4      +
 00000002 00000029 00002718   A 4      +
 00000002 00000002 00002740   A 4      +
 00000002 00000002 00002768   A 4      +
 00000002 00000002 00002770   A 4      +
 00000002 0000002A 00002838   A 4      +
 00000002 00000002 00002860   A 4      +
 00000002 00000002 00002888   A 4      +
 00000002 00000002 00002890   A 4      +
 00000002 00000002 00002980   A 4      +
 00000002 00000024 00002988   A 4      +
 00000002 00000002 00002990   A 4      +
 00000002 00000002 00002A08   A 4      +
 00000002 00000002 00002A30   A 4      +
 00000002 00000002 00002A38   A 4      +
                                                 Relocation Dictionary                                                     Page  208 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00002B38   A 4      +
 00000002 0000002E 00002B40   A 4      +
 00000002 00000002 00002B48   A 4      +
 00000002 00000002 00002B68   A 4      +
 00000002 00000002 00002B90   A 4      +
 00000002 00000002 00002B98   A 4      +
 00000002 00000002 00002C50   A 4      +
 00000002 00000003 00002C58   A 4      +
 00000002 00000002 00002C60   A 4      +
 00000002 00000002 00002D00   A 4      +
 00000002 00000002 00002D28   A 4      +
 00000002 00000002 00002D30   A 4      +
 00000002 00000002 00002DD8   A 4      +
 00000002 00000025 00002DE0   A 4      +
 00000002 00000032 00002DE8   A 4      +
 00000002 00000032 00002DF0   A 4      +
 00000002 00000002 00002DF8   A 4      +
 00000002 00000002 00002F08   A 4      +
 00000002 00000002 00002F30   A 4      +
 00000002 00000002 00002F38   A 4      +
 00000002 00000002 00003000   A 4      +
 00000002 00000002 00003008   A 4      +
 00000002 00000002 00003098   A 4      +
 00000002 00000002 000030C0   A 4      +
 00000002 00000002 000030C8   A 4      +
 00000002 00000028 000031B0   A 4      +
 00000002 00000002 000031B8   A 4      +
 00000002 0000002A 000031C0   A 4      +
 00000002 00000002 000031F8   A 4      +
 00000002 00000002 00003220   A 4      +
 00000002 00000002 00003228   A 4      +
 00000002 00000002 00003298   A 4      +
 00000002 00000002 000032A0   A 4      +
 00000002 0000001D 000032A8   A 4      +
 00000002 00000002 000032B0   A 4      +
 00000002 0000001C 000032B8   A 4      +
 00000002 00000030 000032C0   A 4      +
 00000002 00000032 000032C8   A 4      +
 00000002 00000002 000032D0   A 4      +
 00000002 00000002 00003498   A 4      +
 00000002 00000002 000034C0   A 4      +
 00000002 00000002 000034C8   A 4      +
 00000002 00000002 00003588   A 4      +
 00000002 00000002 00003638   A 4      +
 00000002 00000002 00003640   A 4      +
 00000002 00000002 000036D0   A 4      +
 00000002 00000002 000036F8   A 4      +
 00000002 00000002 00003700   A 4      +
 00000002 00000002 00003898   A 4      +
 00000002 00000002 000038A0   A 4      +
 00000002 00000032 000038A8   A 4      +
 00000002 00000002 000038B0   A 4      +
 00000002 00000002 000038B8   A 4      +
                                                 Relocation Dictionary                                                     Page  209 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000007 000038C0   A 4      +
 00000002 00000002 000038C8   A 4      +
 00000002 00000002 000038D0   A 4      +
 00000002 00000002 000038D8   A 4      +
 00000002 00000002 00003AC0   A 4      +
 00000002 00000002 00003AE8   A 4      +
 00000002 00000002 00003AF0   A 4      +
 00000002 00000002 00003B68   A 4      +
 00000002 0000001C 00003B70   A 4      +
 00000002 00000002 00003B78   A 4      +
 00000002 00000014 00003B80   A 4      +
 00000002 00000002 00003C98   A 4      +
 00000002 00000002 00003CC0   A 4      +
 00000002 00000002 00003CC8   A 4      +
 00000002 00000002 00003DD8   A 4      +
 00000002 0000001D 00003DE0   A 4      +
 00000002 00000002 00003DE8   A 4      +
 00000002 00000002 00003E28   A 4      +
 00000002 00000002 00003E50   A 4      +
 00000002 00000002 00003E58   A 4      +
 00000002 00000002 00003EF8   A 4      +
 00000002 00000002 00003F00   A 4      +
 00000002 00000002 00003F08   A 4      +
 00000002 00000002 00003F10   A 4      +
 00000002 00000002 00004018   A 4      +
 00000002 00000002 00004040   A 4      +
 00000002 00000002 00004048   A 4      +
 00000002 00000002 000040E0   A 4      +
 00000002 00000032 000040E8   A 4      +
 00000002 00000030 000040F0   A 4      +
 00000002 00000002 000040F8   A 4      +
 00000002 00000002 00004100   A 4      +
 00000002 0000001D 00004108   A 4      +
 00000002 00000002 00004110   A 4      +
 00000002 00000002 00004118   A 4      +
 00000002 00000002 000042E8   A 4      +
 00000002 00000002 00004310   A 4      +
 00000002 00000002 00004318   A 4      +
 00000002 00000002 00004388   A 4      +
 00000002 00000002 00004390   A 4      +
 00000002 00000019 00004398   A 4      +
 00000002 00000002 000043A0   A 4      +
 00000002 00000030 000043A8   A 4      +
 00000002 00000032 000043B0   A 4      +
 00000002 00000002 000043B8   A 4      +
 00000002 00000002 00004550   A 4      +
 00000002 00000002 00004578   A 4      +
 00000002 00000002 00004580   A 4      +
 00000002 00000002 00004610   A 4      +
 00000002 00000002 00004618   A 4      +
 00000002 00000002 00004620   A 4      +
 00000002 00000002 00004628   A 4      +
 00000002 0000000F 00004630   A 4      +
                                                 Relocation Dictionary                                                     Page  210 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000019 00004638   A 4      +
 00000002 00000002 00004640   A 4      +
 00000002 00000030 00004648   A 4      +
 00000002 00000032 00004650   A 4      +
 00000002 00000002 00004860   A 4      +
 00000002 00000002 00004888   A 4      +
 00000002 00000002 00004890   A 4      +
 00000002 0000000D 00004A18   A 4      +
 00000002 00000002 00004A20   A 4      +
 00000002 00000026 00004A28   A 4      +
 00000002 00000028 00004A30   A 4      +
 00000002 00000002 00004A38   A 4      +
 00000002 0000002A 00004A48   A 4      +
 00000002 00000017 00004A50   A 4      +
 00000002 00000002 00004AB0   A 4      +
 00000002 00000002 00004AB8   A 4      +
 00000002 00000002 00004B50   A 4      +
 00000002 00000002 00004B78   A 4      +
 00000002 00000002 00004B80   A 4      +
 00000002 00000022 00004CD8   A 4      +
 00000002 00000002 00004CE0   A 4      +
 00000002 00000010 00004CE8   A 4      +
 00000002 00000016 00004CF0   A 4      +
 00000002 0000000D 00004CF8   A 4      +
 00000002 0000002D 00004D00   A 4      +
 00000002 00000002 00004D38   A 4      +
 00000002 00000002 00004D60   A 4      +
 00000002 00000002 00004D68   A 4      +
 00000002 00000017 00004EC0   A 4      +
 00000002 0000001C 00004EC8   A 4      +
 00000002 00000002 00004ED0   A 4      +
 00000002 00000011 00004ED8   A 4      +
 00000002 00000018 00004EE0   A 4      +
 00000002 00000021 00004EE8   A 4      +
 00000002 00000002 00004F30   A 4      +
 00000002 00000002 00004F58   A 4      +
 00000002 00000002 00004F60   A 4      +
 00000002 00000002 00005058   A 4      +
 00000002 00000032 00005060   A 4      +
 00000002 0000000F 00005068   A 4      +
 00000002 00000002 000050A0   A 4      +
 00000002 00000002 000050C8   A 4      +
 00000002 00000002 000050D0   A 4      +
 00000002 00000012 000051E0   A 4      +
 00000002 00000023 000051E8   A 4      +
 00000002 00000015 000051F0   A 4      +
 00000002 00000002 00005240   A 4      +
 00000002 00000002 00005268   A 4      +
 00000002 00000002 00005270   A 4      +
 00000002 00000002 00005340   A 4      +
 00000002 00000032 00005348   A 4      +
 00000002 00000002 00005388   A 4      +
 00000002 00000002 000053B0   A 4      +
                                                 Relocation Dictionary                                                     Page  211 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 000053B8   A 4      +
 00000002 00000012 000054C8   A 4      +
 00000002 0000001B 000054D0   A 4      +
 00000002 00000015 000054D8   A 4      +
 00000002 00000020 000054E0   A 4      +
 00000002 00000002 000054E8   A 4      +
 00000002 00000002 00005520   A 4      +
 00000002 00000002 00005548   A 4      +
 00000002 00000002 00005550   A 4      +
 00000002 00000002 000055E8   A 4      +
 00000002 00000002 00005678   A 4      +
 00000002 00000002 000056A0   A 4      +
 00000002 00000002 000056A8   A 4      +
 00000002 00000002 00005768   A 4      +
 00000002 0000002C 00005770   A 4      +
 00000002 00000002 00005778   A 4      +
 00000002 00000002 00005878   A 4      +
 00000002 00000002 000058A0   A 4      +
 00000002 00000002 000058A8   A 4      +
 00000002 00000002 00005910   A 4      +
 00000002 00000002 00005918   A 4      +
 00000002 00000019 00005928   A 4      +
 00000002 00000002 00005A40   A 4      +
 00000002 00000002 00005A68   A 4      +
 00000002 00000002 00005A70   A 4      +
 00000002 00000002 00005AF8   A 4      +
 00000002 0000001E 00005B00   A 4      +
 00000002 0000001F 00005B08   A 4      +
 00000002 00000002 00005B10   A 4      +
 00000002 0000000F 00005B18   A 4      +
 00000002 00000002 00005C30   A 4      +
 00000002 00000002 00005C58   A 4      +
 00000002 00000002 00005C60   A 4      +
 00000002 00000002 00005D10   A 4      +
 00000002 00000006 00005D18   A 4      +
 00000002 00000032 00005D20   A 4      +
 00000002 00000009 00005D28   A 4      +
 00000034 00000031 000068EC   Q 4      +
 00000034 00000031 00006A0C   Q 4      +
 00000034 00000031 00006ACC   Q 4      +
 00000034 00000031 00006AF4   Q 4      +
 00000034 00000031 00006B1C   Q 4      +
 00000034 00000032 00006B28   A 4      +
 00000034 00000031 00006B44   Q 4      +
 00000034 00000032 00006B50   A 4      +
 00000034 00000031 00006B6C   Q 4      +
 00000034 00000032 00006B78   A 4      +
 00000034 00000031 00006B94   Q 4      +
 00000034 00000032 00006BA0   A 4      +
 00000034 00000031 00006BBC   Q 4      +
 00000034 00000032 00006BC8   A 4      +
 00000034 00000031 00006BE4   Q 4      +
 00000034 00000032 00006BF0   A 4      +
                                                 Relocation Dictionary                                                     Page  212 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000034 00000031 00006C0C   Q 4      +
 00000034 00000032 00006C18   A 4      +
 00000034 00000031 00006C34   Q 4      +
 00000034 00000032 00006C40   A 4      +
 00000034 00000031 00006C5C   Q 4      +
 00000034 00000032 00006C68   A 4      +
 00000034 00000031 00006C84   Q 4      +
 00000034 00000032 00006C90   A 4      +
 00000034 00000031 00006CAC   Q 4      +
 00000034 00000032 00006CB8   A 4      +
 00000034 00000031 00006CD4   Q 4      +
 00000034 00000032 00006CE0   A 4      +
 00000034 00000031 00006CFC   Q 4      +
 00000034 00000032 00006D08   A 4      +
 00000034 00000031 00006D24   Q 4      +
 00000034 00000032 00006D30   A 4      +
 00000034 00000031 00006D4C   Q 4      +
 00000034 00000032 00006D58   A 4      +
 00000034 00000031 00006D74   Q 4      +
 00000034 00000032 00006D80   A 4      +
 00000034 00000031 00006D9C   Q 4      +
 00000034 00000032 00006DA8   A 4      +
 00000034 00000031 00006DC4   Q 4      +
 00000034 00000032 00006DD0   A 4      +
 00000034 00000031 00006DEC   Q 4      +
 00000034 00000032 00006DF8   A 4      +
 00000034 00000031 00006E14   Q 4      +
 00000034 00000032 00006E20   A 4      +
 00000034 00000031 00006E3C   Q 4      +
 00000034 00000032 00006E48   A 4      +
 00000034 00000031 00006E64   Q 4      +
 00000034 00000032 00006E70   A 4      +
 00000034 00000031 00006E8C   Q 4      +
 00000034 00000032 00006E98   A 4      +
 00000034 00000031 00006EB4   Q 4      +
 00000034 00000032 00006EC0   A 4      +
 00000034 00000031 00006EDC   Q 4      +
 00000034 00000032 00006EE8   A 4      +
 00000034 00000031 00006F04   Q 4      +
 00000034 00000032 00006F10   A 4      +
 00000034 00000031 00006F2C   Q 4      +
 00000034 00000032 00006F38   A 4      +
 00000034 00000031 00006F54   Q 4      +
 00000034 00000032 00006F60   A 4      +
 00000034 00000031 00006F7C   Q 4      +
 00000034 00000032 00006F88   A 4      +
 00000034 00000031 00006FA4   Q 4      +
 00000034 00000032 00006FB0   A 4      +
 00000034 00000031 00006FCC   Q 4      +
 00000034 00000032 00006FD8   A 4      +
 00000034 00000031 00006FF4   Q 4      +
 00000034 00000032 00007000   A 4      +
 00000034 00000031 0000701C   Q 4      +
                                                 Relocation Dictionary                                                     Page  213 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000034 00000032 00007028   A 4      +
 00000034 00000031 00007044   Q 4      +
 00000034 00000032 00007050   A 4      +
 00000034 00000031 0000706C   Q 4      +
 00000034 00000032 00007078   A 4      +
 00000034 00000031 00007094   Q 4      +
 00000034 00000032 000070A0   A 4      +
 00000034 00000031 000070BC   Q 4      +
 00000034 00000032 000070C8   A 4      +
 00000034 00000031 000070E4   Q 4      +
 00000034 00000032 000070F0   A 4      +
 00000034 00000031 0000710C   Q 4      +
 00000034 00000032 00007118   A 4      +
 00000034 00000031 00007134   Q 4      +
 00000034 00000032 00007140   A 4      +
 00000034 00000031 0000715C   Q 4      +
 00000034 00000032 00007168   A 4      +
 00000034 00000031 00007184   Q 4      +
 00000034 00000032 00007190   A 4      +
 00000034 00000031 000071AC   Q 4      +
 00000034 00000032 000071B8   A 4      +
 00000034 00000031 000071D4   Q 4      +
 00000034 00000032 000071E0   A 4      +
 00000034 00000031 000071FC   Q 4      +
 00000034 00000032 00007208   A 4      +
 00000034 00000031 00007224   Q 4      +
 00000034 00000032 00007230   A 4      +
 00000034 00000031 0000724C   Q 4      +
 00000034 00000032 00007258   A 4      +
 00000034 00000031 00007274   Q 4      +
 00000034 00000032 00007280   A 4      +
 00000034 00000031 0000729C   Q 4      +
 00000034 00000032 000072A8   A 4      +
 00000034 00000031 000072C4   Q 4      +
 00000034 00000032 000072D0   A 4      +
 00000034 00000031 000072EC   Q 4      +
 00000034 00000032 000072F8   A 4      +
 00000034 00000031 00007314   Q 4      +
 00000034 00000032 00007320   A 4      +
 00000034 00000031 0000733C   Q 4      +
 00000034 00000032 00007348   A 4      +
 00000034 00000031 00007364   Q 4      +
 00000034 00000032 00007370   A 4      +
 00000034 00000031 0000738C   Q 4      +
 00000034 00000032 00007398   A 4      +
 00000034 00000031 000073B4   Q 4      +
 00000034 00000032 000073C0   A 4      +
 00000034 00000031 000073DC   Q 4      +
 00000034 00000032 000073E8   A 4      +
 00000034 00000031 00007404   Q 4      +
 00000034 00000032 00007410   A 4      +
 00000034 00000031 0000742C   Q 4      +
 00000034 00000032 00007438   A 4      +
                                                 Relocation Dictionary                                                     Page  214 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000034 00000031 00007454   Q 4      +
 00000034 00000032 00007460   A 4      +
 00000034 00000031 0000747C   Q 4      +
 00000034 00000032 00007488   A 4      +
 00000034 00000031 000074A4   Q 4      +
 00000034 00000032 000074B0   A 4      +
 00000034 00000031 000074CC   Q 4      +
 00000034 00000032 000074D8   A 4      +
 00000034 00000031 000074F4   Q 4      +
 00000034 00000032 00007500   A 4      +
 00000034 00000031 0000751C   Q 4      +
 00000034 00000032 00007528   A 4      +
 00000034 00000031 00007544   Q 4      +
 00000034 00000032 00007550   A 4      +
 00000034 00000031 0000756C   Q 4      +
 00000034 00000032 00007578   A 4      +
 00000034 00000031 00007594   Q 4      +
 00000034 00000032 000075A0   A 4      +
 00000034 00000031 000075BC   Q 4      +
 00000034 00000032 000075C8   A 4      +
 00000034 00000031 000075E4   Q 4      +
 00000034 00000032 000075F0   A 4      +
 00000034 00000031 0000760C   Q 4      +
 00000034 00000032 00007618   A 4      +
 00000034 00000031 00007634   Q 4      +
 00000034 00000032 00007640   A 4      +
 00000034 00000031 0000765C   Q 4      +
 00000034 00000032 00007668   A 4      +
 00000034 00000031 00007684   Q 4      +
 00000034 00000032 00007690   A 4      +
 00000034 00000031 000076AC   Q 4      +
 00000034 00000032 000076B8   A 4      +
 00000034 00000031 000076D4   Q 4      +
 00000034 00000032 000076E0   A 4      +
 00000034 00000031 000076FC   Q 4      +
 00000034 00000032 00007708   A 4      +
 00000034 00000031 00007724   Q 4      +
 00000034 00000032 00007730   A 4      +
 00000034 00000031 0000774C   Q 4      +
 00000034 00000032 00007758   A 4      +
 00000034 00000031 00007774   Q 4      +
 00000034 00000032 00007780   A 4      +
 00000034 00000031 0000779C   Q 4      +
 00000034 00000032 000077A8   A 4      +
 00000034 00000031 000077C4   Q 4      +
 00000034 00000032 000077D0   A 4      +
 00000034 00000031 000077EC   Q 4      +
 00000034 00000032 000077F8   A 4      +
 00000034 00000031 00007814   Q 4      +
 00000034 00000032 00007820   A 4      +
 00000034 00000031 0000783C   Q 4      +
 00000034 00000032 00007848   A 4      +
 00000034 00000031 00007864   Q 4      +
                                                 Relocation Dictionary                                                     Page  215 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000034 00000032 00007870   A 4      +
 00000034 00000031 0000788C   Q 4      +
 00000034 00000032 00007898   A 4      +
 00000034 00000031 000078B4   Q 4      +
 00000034 00000032 000078C0   A 4      +
 00000034 00000031 000078DC   Q 4      +
 00000034 00000032 000078E8   A 4      +
 00000034 00000031 00007904   Q 4      +
 00000034 00000032 00007910   A 4      +
                                                 DSECT Cross Reference                                                     Page  216 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#F#1963
         000000A8  FFFFFFCD  07833
@AUTO#rd_avl_find
         000000A8  FFFFFFE1  04349
@AUTO#rd_avl_insert
         000000A8  FFFFFFE3  04076
@AUTO#rd_avl_rdlock
         000000A8  FFFFFFE7  03604
@AUTO#rd_avl_rdunlock
         000000A8  FFFFFFE5  03820
@AUTO#rd_avl_remove_elm
         000000A8  FFFFFFE2  04202
@AUTO#rd_avl_wrlock
         000000A8  FFFFFFE6  03712
@AUTO#rd_avl_wrunlock
         000000A8  FFFFFFE4  03928
@AUTO#rd_clock
         000000B8  FFFFFFFC  00579
@AUTO#rd_free
         000000A8  FFFFFFFE  00336
@AUTO#rd_kafka_enq_once_add_source
         000000A8  FFFFFFED  02706
@AUTO#rd_kafka_enq_once_destroy0
         000000A8  FFFFFFEE  02591
@AUTO#rd_kafka_enq_once_trigger
         000000B8  FFFFFFEC  02933
@AUTO#rd_kafka_metadata_cache_delete
         000000A8  FFFFFFE0  04517
@AUTO#rd_kafka_metadata_cache_delete_by_name
         000000A8  FFFFFFDF  04652
@AUTO#rd_kafka_metadata_cache_destroy
         000000A8  FFFFFFD0  07445
@AUTO#rd_kafka_metadata_cache_dump
         000000B0  FFFFFFC7  08871
@AUTO#rd_kafka_metadata_cache_entry_cmp
         000000A8  FFFFFFD2  07116
@AUTO#rd_kafka_metadata_cache_evict
         000000B0  FFFFFFDD  05008
@AUTO#rd_kafka_metadata_cache_evict_tmr_cb
         000000A8  FFFFFFDE  04777
@AUTO#rd_kafka_metadata_cache_expiry_start
         000000A8  FFFFFFD8  05884
@AUTO#rd_kafka_metadata_cache_find
         00000108  FFFFFFDC  05143
@AUTO#rd_kafka_metadata_cache_hint
         000000C8  FFFFFFD4  06831
@AUTO#rd_kafka_metadata_cache_hint_rktparlist
         000000D0  FFFFFFD3  07021
@AUTO#rd_kafka_metadata_cache_init
         000000A8  FFFFFFD1  07278
@AUTO#rd_kafka_metadata_cache_insert
         000000C8  FFFFFFDA  05568
@AUTO#rd_kafka_metadata_cache_propagate_changes
                                                 DSECT Cross Reference                                                     Page  217 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
         000000A8  FFFFFFCC  07978
@AUTO#rd_kafka_metadata_cache_purge
         000000AC  FFFFFFD9  05744
@AUTO#rd_kafka_metadata_cache_purge_hints
         000000AC  FFFFFFD5  06550
@AUTO#rd_kafka_metadata_cache_topic_get
         000000A8  FFFFFFCB  08101
@AUTO#rd_kafka_metadata_cache_topic_partition_get
         000000D0  FFFFFFCA  08284
@AUTO#rd_kafka_metadata_cache_topic_update
         000000B0  FFFFFFD7  06076
@AUTO#rd_kafka_metadata_cache_topics_count_exists
         000000AC  FFFFFFC9  08462
@AUTO#rd_kafka_metadata_cache_topics_to_list
         000000AC  FFFFFFC8  08651
@AUTO#rd_kafka_metadata_cache_update
         000000B0  FFFFFFD6  06327
@AUTO#rd_kafka_metadata_cache_wait_change
         000000AC  FFFFFFCE  07716
@AUTO#rd_kafka_metadata_cache_wait_state_change_async
         000000A8  FFFFFFCF  07571
@AUTO#rd_kafka_metadata_partition_id_cmp
         000000A8  FFFFFFDB  05240
@AUTO#rd_kafka_op_cmp_prio
         000000A8  FFFFFFF5  01470
@AUTO#rd_kafka_q_destroy0
         000000AC  FFFFFFF8  01076
@AUTO#rd_kafka_q_disable0
         000000A8  FFFFFFF9  00890
@AUTO#rd_kafka_q_enq
         000000A8  FFFFFFF2  02069
@AUTO#rd_kafka_q_enq0
         000000A8  FFFFFFF4  01699
@AUTO#rd_kafka_q_enq1
         000000A8  FFFFFFF3  01960
@AUTO#rd_kafka_q_fwd_get
         000000A8  FFFFFFF7  01214
@AUTO#rd_kafka_q_io_event
         000000A8  FFFFFFF6  01377
@AUTO#rd_kafka_q_keep
         000000A8  FFFFFFFA  00767
@AUTO#rd_kafka_replyq_clear
         000000A8  FFFFFFF1  02142
@AUTO#rd_kafka_replyq_destroy
         000000A8  FFFFFFF0  02260
@AUTO#rd_kafka_replyq_enq
         000000AC  FFFFFFEF  02407
@AUTO#rd_list_cnt
         000000A8  FFFFFFFB  00651
@AUTO#rd_malloc
         000000A8  FFFFFFFF  00233
@AUTO#rd_strdup
         000000A8  FFFFFFFD  00467
                                                 DSECT Cross Reference                                                     Page  218 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#rd_tmpabuf_alloc0
         000000A8  FFFFFFEA  03243
@AUTO#rd_tmpabuf_new
         000000A8  FFFFFFEB  03052
@AUTO#rd_tmpabuf_write_str0
         000000A8  FFFFFFE8  03496
@AUTO#rd_tmpabuf_write0
         000000A8  FFFFFFE9  03379
                                          Macro and Copy Code Source Summary                                               Page  219 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:43 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  220 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   169  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00108    195 @REGION_752_1,12
   228  00000168  00000002 DROP                                           12              12
   296  000001FE  00000002 USING  ORDINARY    000001C0 00001000 00000002  12 000A8    303 @REGION_754_1,12
   331  00000270  00000002 DROP                                           12              12
   399  00000306  00000002 USING  ORDINARY    000002C8 00001000 00000002  12 00108    429 @REGION_755_1,12
   462  000003D8  00000002 DROP                                           12              12
   530  0000046E  00000002 USING  ORDINARY    00000430 00001000 00000002  12 000C0    540 @REGION_1088_1,12
   574  000004F8  00000002 DROP                                           12              12
   714  0000060E  00000002 USING  ORDINARY    000005D0 00001000 00000002  12 000D0    732 @REGION_1428_1,12
   762  000006A8  00000002 DROP                                           12              12
   830  00000746  00000002 USING  ORDINARY    00000708 00001000 00000002  12 000E0    855 @REGION_1432_1,12
   885  000007F0  00000002 DROP                                           12              12
   953  0000088E  00000002 USING  ORDINARY    00000850 00001000 00000002  12 001A8   1035 @REGION_1435_1,12
  1071  00000A00  00000002 DROP                                           12              12
  1140  00000A9E  00000002 USING  ORDINARY    00000A60 00001000 00000002  12 00100   1176 @REGION_1439_1,12
  1209  00000B68  00000002 DROP                                           12              12
  1277  00000C06  00000002 USING  ORDINARY    00000BC8 00001000 00000002  12 00102   1344 @REGION_1441_1,12
  1372  00000D12  00000002 DROP                                           12              12
  1429  00000D82  00000002 USING  ORDINARY    00000D78 00001000 00000002  12 00042   1448 @REGION_1442_1,12
  1465  00000DCC  00000002 DROP                                           12              12
  1533  00000E66  00000002 USING  ORDINARY    00000E28 00001000 00000002  12 001C2   1659 @REGION_1444_1,12
  1694  00001050  00000002 DROP                                           12              12
  1762  000010EE  00000002 USING  ORDINARY    000010B0 00001000 00000002  12 00212   1925 @REGION_1445_1,12
  1955  0000130A  00000002 DROP                                           12              12
  2023  000013A6  00000002 USING  ORDINARY    00001368 00001000 00000002  12 000D0   2036 @REGION_1446_1,12
  2064  00001440  00000002 DROP                                           12              12
  2205  0000156E  00000002 USING  ORDINARY    00001530 00001000 00000002  12 000D8   2226 @REGION_1460_1,12
  2255  00001610  00000002 DROP                                           12              12
  2323  000016AE  00000002 USING  ORDINARY    00001670 00001000 00000002  12 00088   2375 @REGION_1461_1,12
  2402  00001780  00000002 DROP                                           12              12
  2471  00001826  00000002 USING  ORDINARY    000017E8 00001000 00000002  12 001B0   2554 @REGION_1475_1,12
  2586  000019A0  00000002 DROP                                           12              12
  2654  00001A4E  00000002 USING  ORDINARY    00001A10 00001000 00000002  12 000D0   2672 @REGION_1476_1,12
  2701  00001AE8  00000002 DROP                                           12              12
  2769  00001B8E  00000002 USING  ORDINARY    00001B50 00001000 00000002  12 00208   2890 @REGION_1480_1,12
  2928  00001D60  00000002 DROP                                           12              12
  2999  00001DFE  00000002 USING  ORDINARY    00001DC0 00001000 00000002  12 000D8   3008 @REGION_1492_1,12
  3047  00001EA0  00000002 DROP                                           12              12
  3115  00001F3E  00000002 USING  ORDINARY    00001F00 00001000 00000002  12 00196   3201 @REGION_1495_1,12
  3238  000020DE  00000002 DROP                                           12              12
  3306  0000217E  00000002 USING  ORDINARY    00002140 00001000 00000002  12 00128   3345 @REGION_1496_1,12
  3374  0000226E  00000002 DROP                                           12              12
  3442  0000230E  00000002 USING  ORDINARY    000022D0 00001000 00000002  12 000E8   3464 @REGION_1497_1,12
  3491  000023C0  00000002 DROP                                           12              12
  3559  0000245E  00000002 USING  ORDINARY    00002420 00001000 00000002  12 000B8   3570 @REGION_1607_1,12
  3599  000024E0  00000002 DROP                                           12              12
  3667  0000257E  00000002 USING  ORDINARY    00002540 00001000 00000002  12 000B8   3678 @REGION_1608_1,12
  3707  00002600  00000002 DROP                                           12              12
  3775  0000269E  00000002 USING  ORDINARY    00002660 00001000 00000002  12 000B8   3786 @REGION_1609_1,12
  3815  00002720  00000002 DROP                                           12              12
  3883  000027BE  00000002 USING  ORDINARY    00002780 00001000 00000002  12 000B8   3894 @REGION_1610_1,12
                                                      Using Map                                                            Page  221 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  3923  00002840  00000002 DROP                                           12              12
  3991  000028DE  00000002 USING  ORDINARY    000028A0 00001000 00000002  12 000F8   4042 @REGION_1612_1,12
  4071  000029E4  00000002 DROP                                           12              12
  4139  00002A86  00000002 USING  ORDINARY    00002A48 00001000 00000002  12 00100   4167 @REGION_1614_1,12
  4197  00002B50  00000002 DROP                                           12              12
  4265  00002BE6  00000002 USING  ORDINARY    00002BA8 00001000 00000002  12 000DC   4316 @REGION_1616_1,12
  4344  00002CD0  00000002 DROP                                           12              12
  4412  00002D7E  00000002 USING  ORDINARY    00002D40 00001000 00000002  12 0012A   4487 @REGION_1957_1,12
  4512  00002ED0  00000002 DROP                                           12              12
  4581  00002F86  00000002 USING  ORDINARY    00002F48 00001000 00000002  12 000CC   4617 @REGION_1958_1,12
  4646  00003060  00000002 DROP                                           12              12
  4716  00003116  00000002 USING  ORDINARY    000030D8 00001000 00000002  12 000E8   4741 @REGION_1960_1,12
  4771  000031C8  00000002 DROP                                           12              12
  4840  00003276  00000002 USING  ORDINARY    00003238 00001000 00000002  12 001E4   4975 @REGION_1959_1,12
  5003  00003468  00000002 DROP                                           12              12
  5076  00003516  00000002 USING  ORDINARY    000034D8 00001000 00000002  12 000BC   5110 @REGION_1635_1,12
  5138  000035DC  00000002 DROP                                           12              12
  5199  0000365A  00000002 USING  ORDINARY    00003650 00001000 00000002  12 00042   5217 @REGION_1628_1,12
  5234  000036A4  00000002 DROP                                           12              12
  5303  0000374E  00000002 USING  ORDINARY    00003710 00001000 00000002  12 00336   5533 @REGION_1961_1,12
  5563  00003A92  00000002 DROP                                           12              12
  5638  00003B3E  00000002 USING  ORDINARY    00003B00 00001000 00000002  12 0011C   5713 @REGION_1645_1,12
  5739  00003C64  00000002 DROP                                           12              12
  5811  00003D16  00000002 USING  ORDINARY    00003CD8 00001000 00000002  12 00110   5843 @REGION_1631_1,12
  5878  00003DF0  00000002 DROP                                           12              12
  5950  00003EA6  00000002 USING  ORDINARY    00003E68 00001000 00000002  12 0013A   6044 @REGION_1632_1,12
  6070  00003FEA  00000002 DROP                                           12              12
  6146  00004096  00000002 USING  ORDINARY    00004058 00001000 00000002  12 00212   6296 @REGION_1633_1,12
  6322  000042B2  00000002 DROP                                           12              12
  6398  00004366  00000002 USING  ORDINARY    00004328 00001000 00000002  12 001B6   6517 @REGION_1636_1,12
  6544  00004526  00000002 DROP                                           12              12
  6618  000045CE  00000002 USING  ORDINARY    00004590 00001000 00000002  12 00250   6795 @REGION_1637_1,12
  6826  0000482C  00000002 DROP                                           12              12
  6906  000048DE  00000002 USING  ORDINARY    000048A0 00001000 00000002  12 001B0   6979 @REGION_1638_1,12
  7015  00004A58  00000002 DROP                                           12              12
  7077  00004AD2  00000002 USING  ORDINARY    00004AC8 00001000 00000002  12 00046   7093 @REGION_1962_1,12
  7110  00004B20  00000002 DROP                                           12              12
  7181  00004BCE  00000002 USING  ORDINARY    00004B90 00001000 00000002  12 00170   7240 @REGION_1643_1,12
  7273  00004D08  00000002 DROP                                           12              12
  7343  00004DB6  00000002 USING  ORDINARY    00004D78 00001000 00000002  12 00170   7407 @REGION_1644_1,12
  7440  00004EF0  00000002 DROP                                           12              12
  7511  00004FAE  00000002 USING  ORDINARY    00004F70 00001000 00000002  12 000F8   7535 @REGION_1649_1,12
  7565  00005070  00000002 DROP                                           12              12
  7637  0000511E  00000002 USING  ORDINARY    000050E0 00001000 00000002  12 00110   7674 @REGION_1646_1,12
  7710  000051F8  00000002 DROP                                           12              12
  7782  000052BE  00000002 USING  ORDINARY    00005280 00001000 00000002  12 000C8   7797 @REGION_1963_1,12
  7827  00005350  00000002 DROP                                           12              12
  7899  00005406  00000002 USING  ORDINARY    000053C8 00001000 00000002  12 00120   7939 @REGION_1634_1,12
  7972  000054F0  00000002 DROP                                           12              12
  8044  0000559E  00000002 USING  ORDINARY    00005560 00001000 00000002  12 00094   8066 @REGION_1639_1,12
  8095  0000563C  00000002 DROP                                           12              12
  8167  000056F6  00000002 USING  ORDINARY    000056B8 00001000 00000002  12 0013A   8249 @REGION_1640_1,12
  8278  0000583A  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  222 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  8351  000058F6  00000002 USING  ORDINARY    000058B8 00001000 00000002  12 000D0   8427 @REGION_1641_1,12
  8456  00005A08  00000002 DROP                                           12              12
  8535  00005ABE  00000002 USING  ORDINARY    00005A80 00001000 00000002  12 0011C   8619 @REGION_1648_1,12
  8645  00005C04  00000002 DROP                                           12              12
  8717  00005CAE  00000002 USING  ORDINARY    00005C70 00001000 00000002  12 001CC   8844 @REGION_1647_1,12
  8866  00005E8C  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  223 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_METADATA_CACHE ..\asg\asm\rdkafka_metadata_cache.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 12.43.06 Stop Time: 12.43.06 Processor Time: 00.00.00.0600
Return Code 000
