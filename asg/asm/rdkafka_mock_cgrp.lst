                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_mock_cgrp.obj ../asg/asm/rdkafka_mock_cgrp.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_mock_cgrp.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_MOCK_CGRP
          SD 00000002 00000000 00005122            07  @CODE
rd_buf_write
          ER 00000003                                  RD_BUF_WRITE
@@ASSERT  ER 00000004                                  __ASSERT
crc_table XD 00000005 00000003 00000000                CRC_TABLE
rd_kafka_mock_connection_send_response
          ER 00000006                                  RD_KAFKA_MOCK_CONNECTION_SEND_RESPONSE
rd_kafka_mock_connection_set_blocking
          ER 00000007                                  RD_KAFKA_MOCK_CONNECTION_SET_BLOCKING
snprintf  ER 00000008                                  SNPRINTF
calloc    ER 00000009                                  CALLOC
free      ER 0000000A                                  FREE
malloc    ER 0000000B                                  MALLOC
GETTFD@Y  ER 0000000C                                  GETTIMEOFDAY
@@PT3ML   ER 0000000D                                  PTHREAD_MUTEX_LOCK
@@PT3MU   ER 0000000E                                  PTHREAD_MUTEX_UNLOCK
rd_kafka_timer_stop
          ER 0000000F                                  RD_KAFKA_TIMER_STOP
rd_kafka_timer_start0
          ER 00000010                                  RD_KAFKA_TIMER_START0
rd_kafka_buf_destroy_final
          ER 00000011                                  RD_KAFKA_BUF_DESTROY_FINAL
strdup    ER 00000012                                  STRDUP
rd_kafka_log0
          ER 00000013                                  RD_KAFKA_LOG0
@rdkafka_mock_cgrp&
          XD 00000014 00000007 00000700                @@STATIC
@rdkafka_mock_cgrp
          SD 00000015 00005128 00000BFE            07  @DATA
crc_table ER 00000016                                  @ECRC_TABLE
rdkafka_mock_cgrp:
          SD 00000017 00005D28 00001108            07  @@INIT@
rd_kafka_mock_cgrp_member_active
          LD          000020B8          00000002   00  RD_KAFKA_MOCK_CGRP_MEMBER_ACTIVE
rd_kafka_mock_cgrp_check_state
          LD          00002278          00000002   00  RD_KAFKA_MOCK_CGRP_CHECK_STATE
rd_kafka_mock_cgrp_member_assignment_set
          LD          00002538          00000002   00  RD_KAFKA_MOCK_CGRP_MEMBER_ASSIGNMENT_SET
rd_kafka_mock_cgrp_member_sync_set
          LD          00002C20          00000002   00  RD_KAFKA_MOCK_CGRP_MEMBER_SYNC_SET
rd_kafka_mock_cgrp_member_leave
          LD          00002E10          00000002   00  RD_KAFKA_MOCK_CGRP_MEMBER_LEAVE
rd_kafka_mock_cgrp_protos_destroy
          LD          00003018          00000002   00  RD_KAFKA_MOCK_CGRP_PROTOS_DESTROY
rd_kafka_mock_cgrp_member_find
          LD          00004250          00000002   00  RD_KAFKA_MOCK_CGRP_MEMBER_FIND
rd_kafka_mock_cgrp_member_add
          LD          000043B0          00000002   00  RD_KAFKA_MOCK_CGRP_MEMBER_ADD
rd_kafka_mock_cgrp_destroy
          LD          000049B0          00000002   00  RD_KAFKA_MOCK_CGRP_DESTROY
rd_kafka_mock_cgrp_find
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:43 
          LD          00004BF0          00000002   00  RD_KAFKA_MOCK_CGRP_FIND
rd_kafka_mock_cgrp_get
          LD          00004D48          00000002   00  RD_KAFKA_MOCK_CGRP_GET
rd_kafka_mock_cgrps_connection_closed
          LD          00004FD0          00000002   00  RD_KAFKA_MOCK_CGRPS_CONNECTION_CLOSED
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:43:07 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DD4D6C3D26DC3C7D9D7'
00000000                00000000 00005122     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D949683926D83879997'
                                              18 rd_buf_write ALIAS X'99846D82A4866DA69989A385'
                                              19          EXTRN rd_buf_write
                                              20 __assert ALIAS C'@@ASSERT'
                                              21          EXTRN __assert
                                              22 crc_table ALIAS X'8399836DA381829385'
                                              23 crc_table DXD   0F
                                              24 rd_kafka_mock_connection_send_response ALIAS X'99846D92818692816D949683*
                                                                926D839695958583A38996956DA28595846D9985A2979695A285'
                                              25          EXTRN rd_kafka_mock_connection_send_response
                                              26 rd_kafka_mock_connection_set_blocking ALIAS X'99846D92818692816D9496839*
                                                                26D839695958583A38996956DA285A36D8293968392899587'
                                              27          EXTRN rd_kafka_mock_connection_set_blocking
                                              28 snprintf ALIAS C'snprintf'
                                              29          EXTRN snprintf
                                              30 calloc   ALIAS C'calloc'
                                              31          EXTRN calloc
                                              32 free     ALIAS C'free'
                                              33          EXTRN free
                                              34 malloc   ALIAS C'malloc'
                                              35          EXTRN malloc
                                              36 gettimeofday ALIAS C'GETTFD@Y'
                                              37          EXTRN gettimeofday
                                              38 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              39          EXTRN pthread_mutex_lock
                                              40 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              41          EXTRN pthread_mutex_unlock
                                              42 rd_kafka_timer_stop ALIAS X'99846D92818692816DA3899485996DA2A39697'
                                              43          EXTRN rd_kafka_timer_stop
                                              44 rd_kafka_timer_start0 ALIAS X'99846D92818692816DA3899485996DA2A38199A3F*
                                                                0'
                                              45          EXTRN rd_kafka_timer_start0
                                              46 rd_kafka_buf_destroy_final ALIAS X'99846D92818692816D82A4866D8485A2A399*
                                                                96A86D8689958193'
                                              47          EXTRN rd_kafka_buf_destroy_final
                                              48 strdup   ALIAS C'strdup'
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                              49          EXTRN strdup
                                              50 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                              51          EXTRN rd_kafka_log0
                                              52 *
                                              53 *
                                              54 *
                                              55 * ....... start of ebcdic_2_utf8
00000000                                      56 @LNAME338 DS   0H
00000000 0000000D                             57          DC    X'0000000D'
00000004 8582838489836DF2                     58          DC    C'ebcdic_2_utf8'
00000011 00                                   59          DC    X'00'
                                              60 ebcdic_2_utf8 DCCPRLG CINDEX=338,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME338
                                              61          macro
                                              62          dccextrn &m
                                              63          gblc    &$dccext(1000)
                                              64          gbla    &$dccexti
                                              65          lcla    &i
                                              66 &$dccext(&$dccexti+1) setc    '&m'
                                              67 &i       seta    1
                                              68 .loop    aif    (&i gt &$dccexti).around
                                              69          aif    ('&$dccext(&i)' eq '&m').getout
                                              70 &i       seta    &i+1
                                              71          ago     .loop
                                              72 .around  anop
                                              73 &$dccexti seta &$dccexti+1
                                              74          extrn  &m
                                              75 .getout  anop
                                              76          mend
00000018                                      77+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                               78+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                   79+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                             80+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                     81+         dc ad(@PER_338)                                                02-DCCCA
00000028 00000000000000B0                     82+         dc ad(176)                                                     02-DCCCA
00000030 0000000000000000                     83+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                     84+         dc ad(4096)                                                    02-DCCCA
00000040 20                                   85+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                   86+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                   87+         dc al1(3)                                                      02-DCCCA
00000043 08                                   88+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                   89+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                               90+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                     91+         dc ad(@LNAME338)                                               02-DCCCA
00000050                                      92+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                     93+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                     94+         dc ad(0)                                                       02-DCCCA
00000060                                      95+         ds    0d                                                       01-DCCPR
00000060                                      96+ebcdic_2_utf8 ds 0d                                                     01-DCCPR
00000060                                      97+@REGION_338_1 ds 0h                                                     01-DCCPR
00000060 EBEC D008 0024          00000008     98+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088     99+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000006C E3C0 D090 0004          00000090    100+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           101+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    102+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B0               000000B0    103+         aghi  14,176              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    104+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    105+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     106+@PER_338 ds    0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    107+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    108+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           109+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           110+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             111+         using @REGION_338_1,12                                         01-DCCPR
                                             112          DCCPRV REG=9      ; Get PRV from DVT
0000009E E390 B008 0004          00000008    113+         LG 9,8(0,11)                                                   01-DCCPR
000000A4 B904 0031                           114          LGR   3,1         ; ptr to parm area
                                             115 * ******* End of Prologue
                                             116 * *
                                             117 * ***       const unsigned char* outstart = out;
000000A8 E340 3000 0004          00000000    118          LG    4,0(0,3)    ; out
000000AE B904 00F4                           119          LGR   15,4
000000B2 E310 3008 0004          00000008    120          LG    1,8(0,3)    ; outlen
000000B8 E350 3010 0004          00000010    121          LG    5,16(0,3)   ; in
000000BE B904 0025                           122          LGR   2,5
000000C2 E330 3018 0004          00000018    123          LG    3,24(0,3)   ; inlen
                                             124 * ***       const unsigned char* base = in;
                                             125 * ***       const unsigned char* processed = in;
000000C8 B904 0065                           126          LGR   6,5         ; processed
                                             127 * ***       const unsigned char* inend = in + (*inlen);
000000CC E370 3000 0004          00000000    128          LG    7,0(0,3)    ; inlen
000000D2 4177 5000               00000000    129          LA    7,0(7,5)
                                             130 * ***       const unsigned char* outend = out + (*outlen);
000000D6 E380 1000 0004          00000000    131          LG    8,0(0,1)    ; outlen
000000DC 4188 4000               00000000    132          LA    8,0(8,4)
                                             133 * ***       unsigned char c;
                                             134 * ***
                                             135 * ***       while ((in < inend) && ((out - outstart) < *outlen)) {
000000E0 47F0 C104               00000164    136          B     @L6
000000E8                                     137          DS    0D
000000E8 000000B0                            138 @FRAMESIZE_338 DC F'176'
000000EC 00000000
000000F0 00000000000000FF                    139 @lit_338_2 DC  FD'255' 0x00000000000000ff
000000F8 00000000                            140 @lit_338_1 DC  Q(@@STATIC)
000000FC                                     141 @L5      DS    0H
                                             142 * ***           c = *in++;
000000FC B904 00A2                           143          LGR   10,2
00000100 4120 2001               00000001    144          LA    2,1(0,2)
00000104 43A0 A000               00000000    145          IC    10,0(0,10)
00000108 42A0 D0A8               000000A8    146          STC   10,168(0,13) ; c
                                             147 * ***           if (c > 0xFF)
0000010C 18BA                                148          LR    11,10
0000010E C0BB 0000 00FF                      149          NILF  11,X'000000FF'
00000114 A7BE 00FF               000000FF    150          CHI   11,255
                                                                                                                           Page    8 
  Active Usings: @REGION_338_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000118 47D0 C0D8               00000138    151          BNH   @L8
                                             152 * ***           {
                                             153 * ***               *outlen = out - outstart;
0000011C B909 00F4                           154          SGR   15,4
00000120 E3F0 1000 0024          00000000    155          STG   15,0(0,1)   ; outlen
                                             156 * ***               *inlen = processed - base;
00000126 B909 0065                           157          SGR   6,5
0000012A E360 3000 0024          00000000    158          STG   6,0(0,3)    ; inlen
                                             159 * ***               return(-1);
00000130 A7F9 FFFF               0000FFFF    160          LGHI  15,-1       ; -1
00000134 47F0 C136               00000196    161          B     @ret_lab_338
                                             162 * ***           }
00000138                                     163 @L8      DS    0H
                                             164 * ***
                                             165 * ***           if (out >= outend)
00000138 B920 00F8                           166          CGR   15,8
0000013C 47B0 C11E               0000017E    167          BNL   @L3
                                             168 * ***               break;
00000140                                     169 @L9      DS    0H
                                             170 * ***
                                             171 * ***           *out++ = E2U[c];
00000140 B904 006F                           172          LGR   6,15
00000144 41F0 F001               00000001    173          LA    15,1(0,15)
00000148 E3B0 C098 0014          000000F8    174          LGF   11,@lit_338_1
0000014E 41BB 9000               00000000    175          LA    11,0(11,9)
00000152 E3A0 C090 0080          000000F0    176          NG    10,@lit_338_2
00000158 43AA B000               00000000    177          IC    10,0(10,11)
0000015C 42A0 6000               00000000    178          STC   10,0(0,6)
                                             179 * ***           processed = (unsigned char*)in;
00000160 B904 0062                           180          LGR   6,2         ; processed
                                             181 * ***
                                             182 * ***       }
00000164                                     183 @L6      DS    0H
00000164 B920 0027                           184          CGR   2,7
00000168 47B0 C11E               0000017E    185          BNL   @L3
0000016C B904 00AF                           186          LGR   10,15
00000170 B909 00A4                           187          SGR   10,4
00000174 E3A0 1000 0021          00000000    188          CLG   10,0(0,1)
0000017A 4740 C09C               000000FC    189          BL    @L5
0000017E                                     190 @L3      DS    0H
                                             191 * ***
                                             192 * ***       *outlen = out - outstart;
0000017E B909 00F4                           193          SGR   15,4
00000182 E3F0 1000 0024          00000000    194          STG   15,0(0,1)   ; outlen
                                             195 * ***       *inlen = processed - base;
00000188 B909 0065                           196          SGR   6,5
0000018C E360 3000 0024          00000000    197          STG   6,0(0,3)    ; inlen
                                             198 * ***       return(0);
00000192 A7F9 0000               00000000    199          LGHI  15,0        ; 0
                                             200 * ***   }
00000196                                     201 @ret_lab_338 DS 0H
                                             202 * * **** Start of Epilogue
                                                                                                                           Page    9 
  Active Usings: @REGION_338_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             203          DCCEPIL
00000196                                     204+         ds 0h                                                          01-DCCEP
                                             205+* Epilog
00000196 D707 D088 D088 00000088 00000088    206+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000019C E3D0 D080 0004          00000080    207+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000001A2 E3C0 D090 0004          00000090    208+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000001A8 E3B0 C018 0004          00000018    209+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000001AE E3C0 B010 0021          00000010    210+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000001B4 E3E0 D008 0004          00000008    211+         lg  14,8(0,13)          load up return address                 01-DCCEP
000001BA EB1C D020 0004          00000020    212+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000001C0 078E                                213+         bcr 8,14                if same dsab, just return              01-DCCEP
000001C2 E3F0 D010 0024          00000010    214+         stg 15,16(0,13)         save return code                       01-DCCEP
000001C8 E300 D018 0024          00000018    215+         stg 0,24(0,13)          save more return code                  01-DCCEP
000001CE E3F0 D090 0004          00000090    216+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000001D4 E3F0 F018 0004          00000018    217+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000001DA 47F0 F040               00000040    218+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             219+* End of Epilog
                                             220 * * **** End of Epilogue
                                             221          DROP  12
                                             222 *
                                             223 *   DSECT for automatic variables in "ebcdic_2_utf8"
                                             224 *      (FUNCTION #338)
                                             225 *
00000000                00000000 000000A9    226 @AUTO#ebcdic_2_utf8 DSECT
00000000                                     227          DS    XL168
000000A8                                     228 ebcdic_2_utf8#c#0 DS 1CL1  ; c
                                             229 *
000001DE                00000000 00005122    230 @CODE    CSECT
                                             231 *
                                             232 *
                                             233 *
                                             234 * ....... start of rd_atomic32_sub
000001DE                                     235 @LNAME1060 DS  0H
000001DE 0000000F                            236          DC    X'0000000F'
000001E2 99846D81A3969489                    237          DC    C'rd_atomic32_sub'
000001F1 00                                  238          DC    X'00'
                                             239 rd_atomic32_sub DCCPRLG CINDEX=1060,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1060
                                             240          macro
                                             241          dccextrn &m
                                             242          gblc    &$dccext(1000)
                                             243          gbla    &$dccexti
                                             244          lcla    &i
                                             245 &$dccext(&$dccexti+1) setc    '&m'
                                             246 &i       seta    1
                                             247 .loop    aif    (&i gt &$dccexti).around
                                             248          aif    ('&$dccext(&i)' eq '&m').getout
                                             249 &i       seta    &i+1
                                             250          ago     .loop
                                             251 .around  anop
                                             252 &$dccexti seta &$dccexti+1
                                             253          extrn  &m
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             254 .getout  anop
                                             255          mend
000001F8                                     256+$eye0006    ds    0d                                                    02-DCCCA
000001F8 C4C3C3                              257+         dc cl3'DCC'                                                    02-DCCCA
000001FB 01                                  258+         dc xl1'01' format one                                          02-DCCCA
000001FC 00000000                            259+         dc a(0)                                                        02-DCCCA
00000200 000000000000026A                    260+         dc ad(@PER_1060)                                               02-DCCCA
00000208 00000000000000B8                    261+         dc ad(184)                                                     02-DCCCA
00000210 0000000000000000                    262+         dc ad(0)                                                       02-DCCCA
00000218 0000000000001000                    263+         dc ad(4096)                                                    02-DCCCA
00000220 20                                  264+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000221 03                                  265+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000222 03                                  266+         dc al1(3)                                                      02-DCCCA
00000223 08                                  267+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000224 00                                  268+         dc bl.8'00000000'                                              02-DCCCA
00000225 000000                              269+         dc al3(0)                                                      02-DCCCA
00000228 00000000000001DE                    270+         dc ad(@LNAME1060)                                              02-DCCCA
00000230                                     271+         ds 0d                                                          02-DCCCA
00000230 00000000000001F8                    272+         dc ad($eye0006)                                                02-DCCCA
00000238 0000000000000000                    273+         dc ad(0)                                                       02-DCCCA
00000240                                     274+         ds    0d                                                       01-DCCPR
00000240                                     275+rd_atomic32_sub ds 0d                                                   01-DCCPR
00000240                                     276+@REGION_1060_1 ds 0h                                                    01-DCCPR
00000240 EBEC D008 0024          00000008    277+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000246 E3E0 D088 0004          00000088    278+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000024C E3C0 D090 0004          00000090    279+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000252 B904 002E                           280+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000256 E3B0 C018 0004          00000018    281+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000025C A7EB 00B8               000000B8    282+         aghi  14,184              increase by frame size               01-DCCPR
00000260 E3E0 C020 0021          00000020    283+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000266 4720 B020               00000020    284+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000026A                                     285+@PER_1060 ds   0h                                                       01-DCCPR
0000026A EBDE 2080 0024          00000080    286+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000270 E3C0 2090 0024          00000090    287+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000276 B904 00D2                           288+         lgr   13,2                set real frame pointer               01-DCCPR
0000027A B904 00CF                           289+         lgr   12,15               set base reg                         01-DCCPR
                        00000240             290+         using @REGION_1060_1,12                                        01-DCCPR
0000027E B904 0031                           291          LGR   3,1         ; ptr to parm area
                                             292 * ******* End of Prologue
                                             293 * *
00000282 E320 3000 0004          00000000    294          LG    2,0(0,3)    ; ra
                                             295 * ***
                                             296 * ***      int32_t r;
                                             297 * ***      pthread_mutex_lock(&ra->lock);
00000288 41F0 2008               00000008    298          LA    15,8(0,2)
0000028C E3F0 D0B0 0024          000000B0    299          STG   15,176(0,13)
00000292 4110 D0B0               000000B0    300          LA    1,176(0,13)
00000296 E3F0 C0D8 0004          00000318    301          LG    15,@lit_1060_5 ; pthread_mutex_lock
0000029C                                     302 @@gen_label4 DS    0H
0000029C 05EF                                303          BALR  14,15
0000029E                                     304 @@gen_label5 DS    0H
                                             305 * ***      ra->val -= v;
                                                                                                                           Page   11 
  Active Usings: @REGION_1060_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000029E 58F0 2000               00000000    306          L     15,0(0,2)
000002A2 5BF0 300C               0000000C    307          S     15,12(0,3)
000002A6 50F0 2000               00000000    308          ST    15,0(0,2)
                                             309 * ***      r = ra->val;
000002AA 183F                                310          LR    3,15        ; ra
                                             311 * ***      pthread_mutex_unlock(&ra->lock);
000002AC 41F0 2008               00000008    312          LA    15,8(0,2)
000002B0 E3F0 D0B0 0024          000000B0    313          STG   15,176(0,13)
000002B6 4110 D0B0               000000B0    314          LA    1,176(0,13)
000002BA E3F0 C0E0 0004          00000320    315          LG    15,@lit_1060_6 ; pthread_mutex_unlock
000002C0                                     316 @@gen_label6 DS    0H
000002C0 05EF                                317          BALR  14,15
000002C2                                     318 @@gen_label7 DS    0H
                                             319 * ***      return r;
000002C2 B914 00F3                           320          LGFR  15,3
                                             321 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             322 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             323 * ***
                                             324 * ***   }
                                             325 * * **** Start of Epilogue
                                             326          DCCEPIL
000002C6                                     327+         ds 0h                                                          01-DCCEP
                                             328+* Epilog
000002C6 D707 D088 D088 00000088 00000088    329+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000002CC E3D0 D080 0004          00000080    330+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000002D2 E3C0 D090 0004          00000090    331+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000002D8 E3B0 C018 0004          00000018    332+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000002DE E3C0 B010 0021          00000010    333+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000002E4 E3E0 D008 0004          00000008    334+         lg  14,8(0,13)          load up return address                 01-DCCEP
000002EA EB1C D020 0004          00000020    335+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000002F0 078E                                336+         bcr 8,14                if same dsab, just return              01-DCCEP
000002F2 E3F0 D010 0024          00000010    337+         stg 15,16(0,13)         save return code                       01-DCCEP
000002F8 E300 D018 0024          00000018    338+         stg 0,24(0,13)          save more return code                  01-DCCEP
000002FE E3F0 D090 0004          00000090    339+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000304 E3F0 F018 0004          00000018    340+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000030A 47F0 F040               00000040    341+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             342+* End of Epilog
                                             343 * * **** End of Epilogue
00000310                                     344          DS    0D
00000310 000000B8                            345 @FRAMESIZE_1060 DC F'184'
00000314 00000000
00000318 0000000000000000                    346 @lit_1060_5 DC AD(pthread_mutex_lock)
00000320 0000000000000000                    347 @lit_1060_6 DC AD(pthread_mutex_unlock)
                                             348          DROP  12
                                             349 *
                                             350 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             351 *      (FUNCTION #1060)
                                             352 *
00000000                00000000 000000AC    353 @AUTO#rd_atomic32_sub DSECT
00000000                                     354          DS    XL168
000000A8                                     355 rd_atomic32_sub#r#0 DS 1F  ; r
                                             356 *
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000328                00000000 00005122    357 @CODE    CSECT
                                             358 *
                                             359 *
                                             360 *
                                             361 * ....... start of rd_calloc
00000328                                     362 @LNAME1077 DS  0H
00000328 00000009                            363          DC    X'00000009'
0000032C 99846D8381939396                    364          DC    C'rd_calloc'
00000335 00                                  365          DC    X'00'
                                             366 rd_calloc DCCPRLG CINDEX=1077,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1077
                                             367          macro
                                             368          dccextrn &m
                                             369          gblc    &$dccext(1000)
                                             370          gbla    &$dccexti
                                             371          lcla    &i
                                             372 &$dccext(&$dccexti+1) setc    '&m'
                                             373 &i       seta    1
                                             374 .loop    aif    (&i gt &$dccexti).around
                                             375          aif    ('&$dccext(&i)' eq '&m').getout
                                             376 &i       seta    &i+1
                                             377          ago     .loop
                                             378 .around  anop
                                             379 &$dccexti seta &$dccexti+1
                                             380          extrn  &m
                                             381 .getout  anop
                                             382          mend
00000338                                     383+$eye0009    ds    0d                                                    02-DCCCA
00000338 C4C3C3                              384+         dc cl3'DCC'                                                    02-DCCCA
0000033B 01                                  385+         dc xl1'01' format one                                          02-DCCCA
0000033C 00000000                            386+         dc a(0)                                                        02-DCCCA
00000340 00000000000003AA                    387+         dc ad(@PER_1077)                                               02-DCCCA
00000348 00000000000000D0                    388+         dc ad(208)                                                     02-DCCCA
00000350 0000000000000000                    389+         dc ad(0)                                                       02-DCCCA
00000358 0000000000001000                    390+         dc ad(4096)                                                    02-DCCCA
00000360 20                                  391+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000361 03                                  392+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000362 03                                  393+         dc al1(3)                                                      02-DCCCA
00000363 08                                  394+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000364 00                                  395+         dc bl.8'00000000'                                              02-DCCCA
00000365 000000                              396+         dc al3(0)                                                      02-DCCCA
00000368 0000000000000328                    397+         dc ad(@LNAME1077)                                              02-DCCCA
00000370                                     398+         ds 0d                                                          02-DCCCA
00000370 0000000000000338                    399+         dc ad($eye0009)                                                02-DCCCA
00000378 0000000000000000                    400+         dc ad(0)                                                       02-DCCCA
00000380                                     401+         ds    0d                                                       01-DCCPR
00000380                                     402+rd_calloc ds   0d                                                       01-DCCPR
00000380                                     403+@REGION_1077_1 ds 0h                                                    01-DCCPR
00000380 EBEC D008 0024          00000008    404+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000386 E3E0 D088 0004          00000088    405+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000038C E3C0 D090 0004          00000090    406+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000392 B904 002E                           407+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000396 E3B0 C018 0004          00000018    408+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000039C A7EB 00D0               000000D0    409+         aghi  14,208              increase by frame size               01-DCCPR
000003A0 E3E0 C020 0021          00000020    410+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000003A6 4720 B020               00000020    411+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000003AA                                     412+@PER_1077 ds   0h                                                       01-DCCPR
000003AA EBDE 2080 0024          00000080    413+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000003B0 E3C0 2090 0024          00000090    414+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000003B6 B904 00D2                           415+         lgr   13,2                set real frame pointer               01-DCCPR
000003BA B904 00CF                           416+         lgr   12,15               set base reg                         01-DCCPR
                        00000380             417+         using @REGION_1077_1,12                                        01-DCCPR
                                             418 * ******* End of Prologue
                                             419 * *
                                             420 * ***      void *p = calloc(num, sz);
000003BE E3F0 1000 0004          00000000    421          LG    15,0(0,1)   ; num
000003C4 E3F0 D0B0 0024          000000B0    422          STG   15,176(0,13)
000003CA E3F0 1008 0004          00000008    423          LG    15,8(0,1)   ; sz
000003D0 E3F0 D0B8 0024          000000B8    424          STG   15,184(0,13)
000003D6 4110 D0B0               000000B0    425          LA    1,176(0,13)
000003DA E3F0 C0F8 0004          00000478    426          LG    15,@lit_1077_8 ; calloc
000003E0                                     427 @@gen_label8 DS    0H
000003E0 05EF                                428          BALR  14,15
000003E2                                     429 @@gen_label9 DS    0H
000003E2 B904 002F                           430          LGR   2,15
                                             431 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             432 * ka\\src\\rd.h", 122, "p"));
000003E6 B902 00F2                           433          LTGR  15,2
000003EA 4770 C0A2               00000422    434          BNZ   @L32
000003EE                                     435 @L31     DS    0H
000003EE E3F0 C110 0004          00000490    436          LG    15,@lit_1077_9
000003F4 E3F0 D0B0 0024          000000B0    437          STG   15,176(0,13)
000003FA E3F0 C108 0004          00000488    438          LG    15,@lit_1077_10
00000400 E3F0 D0B8 0024          000000B8    439          STG   15,184(0,13)
00000406 E548 D0C0 007A          000000C0    440          MVGHI 192(13),122
0000040C 41F0 F020               00000020    441          LA    15,32(0,15)
00000410 E3F0 D0C8 0024          000000C8    442          STG   15,200(0,13)
00000416 4110 D0B0               000000B0    443          LA    1,176(0,13)
0000041A E3F0 C100 0004          00000480    444          LG    15,@lit_1077_11 ; __assert
00000420                                     445 @@gen_label11 DS    0H
00000420 05EF                                446          BALR  14,15
00000422                                     447 @@gen_label12 DS    0H
00000422                                     448 @L32     DS    0H
                                             449 * ***      return p;
00000422 B904 00F2                           450          LGR   15,2
                                             451 * ***   }
                                             452 * * **** Start of Epilogue
                                             453          DCCEPIL
00000426                                     454+         ds 0h                                                          01-DCCEP
                                             455+* Epilog
00000426 D707 D088 D088 00000088 00000088    456+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000042C E3D0 D080 0004          00000080    457+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000432 E3C0 D090 0004          00000090    458+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000438 E3B0 C018 0004          00000018    459+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page   14 
  Active Usings: @REGION_1077_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000043E E3C0 B010 0021          00000010    460+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000444 E3E0 D008 0004          00000008    461+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000044A EB1C D020 0004          00000020    462+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000450 078E                                463+         bcr 8,14                if same dsab, just return              01-DCCEP
00000452 E3F0 D010 0024          00000010    464+         stg 15,16(0,13)         save return code                       01-DCCEP
00000458 E300 D018 0024          00000018    465+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000045E E3F0 D090 0004          00000090    466+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000464 E3F0 F018 0004          00000018    467+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000046A 47F0 F040               00000040    468+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             469+* End of Epilog
                                             470 * * **** End of Epilogue
00000470                                     471          DS    0D
00000470 000000D0                            472 @FRAMESIZE_1077 DC F'208'
00000474 00000000
00000478 0000000000000000                    473 @lit_1077_8 DC AD(calloc)
00000480 0000000000000000                    474 @lit_1077_11 DC AD(__assert)
00000488 000000000000539A                    475 @lit_1077_10 DC AD(@strings@)
00000490 0000000000005128                    476 @lit_1077_9 DC AD(@DATA)
                                             477          DROP  12
                                             478 *
                                             479 *   DSECT for automatic variables in "rd_calloc"
                                             480 *      (FUNCTION #1077)
                                             481 *
00000000                00000000 000000A8    482 @AUTO#rd_calloc DSECT
00000000                                     483          DS    XL168
                                             484 *
00000498                00000000 00005122    485 @CODE    CSECT
                                             486 *
                                             487 *
                                             488 *
                                             489 * ....... start of rd_malloc
00000498                                     490 @LNAME1078 DS  0H
00000498 00000009                            491          DC    X'00000009'
0000049C 99846D9481939396                    492          DC    C'rd_malloc'
000004A5 00                                  493          DC    X'00'
                                             494 rd_malloc DCCPRLG CINDEX=1078,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1078
                                             495          macro
                                             496          dccextrn &m
                                             497          gblc    &$dccext(1000)
                                             498          gbla    &$dccexti
                                             499          lcla    &i
                                             500 &$dccext(&$dccexti+1) setc    '&m'
                                             501 &i       seta    1
                                             502 .loop    aif    (&i gt &$dccexti).around
                                             503          aif    ('&$dccext(&i)' eq '&m').getout
                                             504 &i       seta    &i+1
                                             505          ago     .loop
                                             506 .around  anop
                                             507 &$dccexti seta &$dccexti+1
                                             508          extrn  &m
                                             509 .getout  anop
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             510          mend
000004A8                                     511+$eye0012    ds    0d                                                    02-DCCCA
000004A8 C4C3C3                              512+         dc cl3'DCC'                                                    02-DCCCA
000004AB 01                                  513+         dc xl1'01' format one                                          02-DCCCA
000004AC 00000000                            514+         dc a(0)                                                        02-DCCCA
000004B0 000000000000051A                    515+         dc ad(@PER_1078)                                               02-DCCCA
000004B8 00000000000000D0                    516+         dc ad(208)                                                     02-DCCCA
000004C0 0000000000000000                    517+         dc ad(0)                                                       02-DCCCA
000004C8 0000000000001000                    518+         dc ad(4096)                                                    02-DCCCA
000004D0 20                                  519+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000004D1 03                                  520+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000004D2 03                                  521+         dc al1(3)                                                      02-DCCCA
000004D3 08                                  522+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000004D4 00                                  523+         dc bl.8'00000000'                                              02-DCCCA
000004D5 000000                              524+         dc al3(0)                                                      02-DCCCA
000004D8 0000000000000498                    525+         dc ad(@LNAME1078)                                              02-DCCCA
000004E0                                     526+         ds 0d                                                          02-DCCCA
000004E0 00000000000004A8                    527+         dc ad($eye0012)                                                02-DCCCA
000004E8 0000000000000000                    528+         dc ad(0)                                                       02-DCCCA
000004F0                                     529+         ds    0d                                                       01-DCCPR
000004F0                                     530+rd_malloc ds   0d                                                       01-DCCPR
000004F0                                     531+@REGION_1078_1 ds 0h                                                    01-DCCPR
000004F0 EBEC D008 0024          00000008    532+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000004F6 E3E0 D088 0004          00000088    533+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000004FC E3C0 D090 0004          00000090    534+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000502 B904 002E                           535+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000506 E3B0 C018 0004          00000018    536+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000050C A7EB 00D0               000000D0    537+         aghi  14,208              increase by frame size               01-DCCPR
00000510 E3E0 C020 0021          00000020    538+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000516 4720 B020               00000020    539+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000051A                                     540+@PER_1078 ds   0h                                                       01-DCCPR
0000051A EBDE 2080 0024          00000080    541+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000520 E3C0 2090 0024          00000090    542+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000526 B904 00D2                           543+         lgr   13,2                set real frame pointer               01-DCCPR
0000052A B904 00CF                           544+         lgr   12,15               set base reg                         01-DCCPR
                        000004F0             545+         using @REGION_1078_1,12                                        01-DCCPR
                                             546 * ******* End of Prologue
                                             547 * *
                                             548 * ***      void *p = malloc(sz);
0000052E E3F0 1000 0004          00000000    549          LG    15,0(0,1)   ; sz
00000534 E3F0 D0B0 0024          000000B0    550          STG   15,176(0,13)
0000053A 4110 D0B0               000000B0    551          LA    1,176(0,13)
0000053E E3F0 C0F0 0004          000005E0    552          LG    15,@lit_1078_13 ; malloc
00000544                                     553 @@gen_label13 DS    0H
00000544 05EF                                554          BALR  14,15
00000546                                     555 @@gen_label14 DS    0H
00000546 B904 002F                           556          LGR   2,15
                                             557 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             558 * ka\\src\\rd.h", 128, "p"));
0000054A B902 00F2                           559          LTGR  15,2
0000054E 4770 C09A               0000058A    560          BNZ   @L34
00000552                                     561 @L33     DS    0H
                                                                                                                           Page   16 
  Active Usings: @REGION_1078_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000552 E3F0 C108 0004          000005F8    562          LG    15,@lit_1078_14
00000558 41F0 F00A               0000000A    563          LA    15,10(0,15)
0000055C E3F0 D0B0 0024          000000B0    564          STG   15,176(0,13)
00000562 E3F0 C100 0004          000005F0    565          LG    15,@lit_1078_15
00000568 E3F0 D0B8 0024          000000B8    566          STG   15,184(0,13)
0000056E E548 D0C0 0080          000000C0    567          MVGHI 192(13),128
00000574 41F0 F020               00000020    568          LA    15,32(0,15)
00000578 E3F0 D0C8 0024          000000C8    569          STG   15,200(0,13)
0000057E 4110 D0B0               000000B0    570          LA    1,176(0,13)
00000582 E3F0 C0F8 0004          000005E8    571          LG    15,@lit_1078_16 ; __assert
00000588                                     572 @@gen_label16 DS    0H
00000588 05EF                                573          BALR  14,15
0000058A                                     574 @@gen_label17 DS    0H
0000058A                                     575 @L34     DS    0H
                                             576 * ***      return p;
0000058A B904 00F2                           577          LGR   15,2
                                             578 * ***   }
                                             579 * * **** Start of Epilogue
                                             580          DCCEPIL
0000058E                                     581+         ds 0h                                                          01-DCCEP
                                             582+* Epilog
0000058E D707 D088 D088 00000088 00000088    583+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000594 E3D0 D080 0004          00000080    584+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000059A E3C0 D090 0004          00000090    585+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000005A0 E3B0 C018 0004          00000018    586+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000005A6 E3C0 B010 0021          00000010    587+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000005AC E3E0 D008 0004          00000008    588+         lg  14,8(0,13)          load up return address                 01-DCCEP
000005B2 EB1C D020 0004          00000020    589+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000005B8 078E                                590+         bcr 8,14                if same dsab, just return              01-DCCEP
000005BA E3F0 D010 0024          00000010    591+         stg 15,16(0,13)         save return code                       01-DCCEP
000005C0 E300 D018 0024          00000018    592+         stg 0,24(0,13)          save more return code                  01-DCCEP
000005C6 E3F0 D090 0004          00000090    593+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000005CC E3F0 F018 0004          00000018    594+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000005D2 47F0 F040               00000040    595+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             596+* End of Epilog
                                             597 * * **** End of Epilogue
000005D8                                     598          DS    0D
000005D8 000000D0                            599 @FRAMESIZE_1078 DC F'208'
000005DC 00000000
000005E0 0000000000000000                    600 @lit_1078_13 DC AD(malloc)
000005E8 0000000000000000                    601 @lit_1078_16 DC AD(__assert)
000005F0 000000000000539A                    602 @lit_1078_15 DC AD(@strings@)
000005F8 0000000000005128                    603 @lit_1078_14 DC AD(@DATA)
                                             604          DROP  12
                                             605 *
                                             606 *   DSECT for automatic variables in "rd_malloc"
                                             607 *      (FUNCTION #1078)
                                             608 *
00000000                00000000 000000A8    609 @AUTO#rd_malloc DSECT
00000000                                     610          DS    XL168
                                             611 *
00000600                00000000 00005122    612 @CODE    CSECT
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             613 *
                                             614 *
                                             615 *
                                             616 * ....... start of rd_free
00000600                                     617 @LNAME1080 DS  0H
00000600 00000007                            618          DC    X'00000007'
00000604 99846D86998585                      619          DC    C'rd_free'
0000060B 00                                  620          DC    X'00'
                                             621 rd_free  DCCPRLG CINDEX=1080,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1080
                                             622          macro
                                             623          dccextrn &m
                                             624          gblc    &$dccext(1000)
                                             625          gbla    &$dccexti
                                             626          lcla    &i
                                             627 &$dccext(&$dccexti+1) setc    '&m'
                                             628 &i       seta    1
                                             629 .loop    aif    (&i gt &$dccexti).around
                                             630          aif    ('&$dccext(&i)' eq '&m').getout
                                             631 &i       seta    &i+1
                                             632          ago     .loop
                                             633 .around  anop
                                             634 &$dccexti seta &$dccexti+1
                                             635          extrn  &m
                                             636 .getout  anop
                                             637          mend
00000610                                     638+$eye0015    ds    0d                                                    02-DCCCA
00000610 C4C3C3                              639+         dc cl3'DCC'                                                    02-DCCCA
00000613 01                                  640+         dc xl1'01' format one                                          02-DCCCA
00000614 00000000                            641+         dc a(0)                                                        02-DCCCA
00000618 0000000000000682                    642+         dc ad(@PER_1080)                                               02-DCCCA
00000620 00000000000000B0                    643+         dc ad(176)                                                     02-DCCCA
00000628 0000000000000000                    644+         dc ad(0)                                                       02-DCCCA
00000630 0000000000001000                    645+         dc ad(4096)                                                    02-DCCCA
00000638 20                                  646+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000639 03                                  647+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000063A 03                                  648+         dc al1(3)                                                      02-DCCCA
0000063B 08                                  649+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000063C 00                                  650+         dc bl.8'00000000'                                              02-DCCCA
0000063D 000000                              651+         dc al3(0)                                                      02-DCCCA
00000640 0000000000000600                    652+         dc ad(@LNAME1080)                                              02-DCCCA
00000648                                     653+         ds 0d                                                          02-DCCCA
00000648 0000000000000610                    654+         dc ad($eye0015)                                                02-DCCCA
00000650 0000000000000000                    655+         dc ad(0)                                                       02-DCCCA
00000658                                     656+         ds    0d                                                       01-DCCPR
00000658                                     657+rd_free  ds    0d                                                       01-DCCPR
00000658                                     658+@REGION_1080_1 ds 0h                                                    01-DCCPR
00000658 EBEC D008 0024          00000008    659+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000065E E3E0 D088 0004          00000088    660+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000664 E3C0 D090 0004          00000090    661+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000066A B904 002E                           662+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000066E E3B0 C018 0004          00000018    663+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000674 A7EB 00B0               000000B0    664+         aghi  14,176              increase by frame size               01-DCCPR
00000678 E3E0 C020 0021          00000020    665+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000067E 4720 B020               00000020    666+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000682                                     667+@PER_1080 ds   0h                                                       01-DCCPR
00000682 EBDE 2080 0024          00000080    668+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000688 E3C0 2090 0024          00000090    669+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000068E B904 00D2                           670+         lgr   13,2                set real frame pointer               01-DCCPR
00000692 B904 00CF                           671+         lgr   12,15               set base reg                         01-DCCPR
                        00000658             672+         using @REGION_1080_1,12                                        01-DCCPR
                                             673 * ******* End of Prologue
                                             674 * *
                                             675 * ***      free(ptr);
00000696 E3F0 1000 0004          00000000    676          LG    15,0(0,1)   ; ptr
0000069C E3F0 D0A8 0024          000000A8    677          STG   15,168(0,13)
000006A2 4110 D0A8               000000A8    678          LA    1,168(0,13)
000006A6 E3F0 C0A8 0004          00000700    679          LG    15,@lit_1080_18 ; free
000006AC                                     680 @@gen_label18 DS    0H
000006AC 05EF                                681          BALR  14,15
000006AE                                     682 @@gen_label19 DS    0H
                                             683 * ***   }
000006AE                                     684 @ret_lab_1080 DS 0H
                                             685 * * **** Start of Epilogue
                                             686          DCCEPIL
000006AE                                     687+         ds 0h                                                          01-DCCEP
                                             688+* Epilog
000006AE D707 D088 D088 00000088 00000088    689+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000006B4 E3D0 D080 0004          00000080    690+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000006BA E3C0 D090 0004          00000090    691+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000006C0 E3B0 C018 0004          00000018    692+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000006C6 E3C0 B010 0021          00000010    693+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000006CC E3E0 D008 0004          00000008    694+         lg  14,8(0,13)          load up return address                 01-DCCEP
000006D2 EB1C D020 0004          00000020    695+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000006D8 078E                                696+         bcr 8,14                if same dsab, just return              01-DCCEP
000006DA E3F0 D010 0024          00000010    697+         stg 15,16(0,13)         save return code                       01-DCCEP
000006E0 E300 D018 0024          00000018    698+         stg 0,24(0,13)          save more return code                  01-DCCEP
000006E6 E3F0 D090 0004          00000090    699+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000006EC E3F0 F018 0004          00000018    700+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000006F2 47F0 F040               00000040    701+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             702+* End of Epilog
                                             703 * * **** End of Epilogue
000006F8                                     704          DS    0D
000006F8 000000B0                            705 @FRAMESIZE_1080 DC F'176'
000006FC 00000000
00000700 0000000000000000                    706 @lit_1080_18 DC AD(free)
                                             707          DROP  12
                                             708 *
                                             709 *   DSECT for automatic variables in "rd_free"
                                             710 *      (FUNCTION #1080)
                                             711 *
00000000                00000000 000000A8    712 @AUTO#rd_free DSECT
00000000                                     713          DS    XL168
                                             714 *
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000708                00000000 00005122    715 @CODE    CSECT
                                             716 *
                                             717 *
                                             718 *
                                             719 * ....... start of rd_strdup
00000708                                     720 @LNAME1081 DS  0H
00000708 00000009                            721          DC    X'00000009'
0000070C 99846DA2A39984A4                    722          DC    C'rd_strdup'
00000715 00                                  723          DC    X'00'
                                             724 rd_strdup DCCPRLG CINDEX=1081,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1081
                                             725          macro
                                             726          dccextrn &m
                                             727          gblc    &$dccext(1000)
                                             728          gbla    &$dccexti
                                             729          lcla    &i
                                             730 &$dccext(&$dccexti+1) setc    '&m'
                                             731 &i       seta    1
                                             732 .loop    aif    (&i gt &$dccexti).around
                                             733          aif    ('&$dccext(&i)' eq '&m').getout
                                             734 &i       seta    &i+1
                                             735          ago     .loop
                                             736 .around  anop
                                             737 &$dccexti seta &$dccexti+1
                                             738          extrn  &m
                                             739 .getout  anop
                                             740          mend
00000718                                     741+$eye0018    ds    0d                                                    02-DCCCA
00000718 C4C3C3                              742+         dc cl3'DCC'                                                    02-DCCCA
0000071B 01                                  743+         dc xl1'01' format one                                          02-DCCCA
0000071C 00000000                            744+         dc a(0)                                                        02-DCCCA
00000720 000000000000078A                    745+         dc ad(@PER_1081)                                               02-DCCCA
00000728 00000000000000D0                    746+         dc ad(208)                                                     02-DCCCA
00000730 0000000000000000                    747+         dc ad(0)                                                       02-DCCCA
00000738 0000000000001000                    748+         dc ad(4096)                                                    02-DCCCA
00000740 20                                  749+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000741 03                                  750+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000742 03                                  751+         dc al1(3)                                                      02-DCCCA
00000743 08                                  752+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000744 00                                  753+         dc bl.8'00000000'                                              02-DCCCA
00000745 000000                              754+         dc al3(0)                                                      02-DCCCA
00000748 0000000000000708                    755+         dc ad(@LNAME1081)                                              02-DCCCA
00000750                                     756+         ds 0d                                                          02-DCCCA
00000750 0000000000000718                    757+         dc ad($eye0018)                                                02-DCCCA
00000758 0000000000000000                    758+         dc ad(0)                                                       02-DCCCA
00000760                                     759+         ds    0d                                                       01-DCCPR
00000760                                     760+rd_strdup ds   0d                                                       01-DCCPR
00000760                                     761+@REGION_1081_1 ds 0h                                                    01-DCCPR
00000760 EBEC D008 0024          00000008    762+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000766 E3E0 D088 0004          00000088    763+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000076C E3C0 D090 0004          00000090    764+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000772 B904 002E                           765+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000776 E3B0 C018 0004          00000018    766+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000077C A7EB 00D0               000000D0    767+         aghi  14,208              increase by frame size               01-DCCPR
00000780 E3E0 C020 0021          00000020    768+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000786 4720 B020               00000020    769+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000078A                                     770+@PER_1081 ds   0h                                                       01-DCCPR
0000078A EBDE 2080 0024          00000080    771+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000790 E3C0 2090 0024          00000090    772+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000796 B904 00D2                           773+         lgr   13,2                set real frame pointer               01-DCCPR
0000079A B904 00CF                           774+         lgr   12,15               set base reg                         01-DCCPR
                        00000760             775+         using @REGION_1081_1,12                                        01-DCCPR
                                             776 * ******* End of Prologue
                                             777 * *
                                             778 * ***
                                             779 * ***      char *n = strdup(s);
0000079E E3F0 1000 0004          00000000    780          LG    15,0(0,1)   ; s
000007A4 E3F0 D0B0 0024          000000B0    781          STG   15,176(0,13)
000007AA 4110 D0B0               000000B0    782          LA    1,176(0,13)
000007AE E3F0 C0F0 0004          00000850    783          LG    15,@lit_1081_20 ; strdup
000007B4                                     784 @@gen_label20 DS    0H
000007B4 05EF                                785          BALR  14,15
000007B6                                     786 @@gen_label21 DS    0H
000007B6 B904 002F                           787          LGR   2,15
                                             788 * ***
                                             789 * ***
                                             790 * ***
                                             791 * ***      ((n) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             792 * ka\\src\\rd.h", 148, "n"));
000007BA B902 00F2                           793          LTGR  15,2
000007BE 4770 C09A               000007FA    794          BNZ   @L38
000007C2                                     795 @L37     DS    0H
000007C2 E3F0 C108 0004          00000868    796          LG    15,@lit_1081_21
000007C8 41F0 F020               00000020    797          LA    15,32(0,15)
000007CC E3F0 D0B0 0024          000000B0    798          STG   15,176(0,13)
000007D2 E3F0 C100 0004          00000860    799          LG    15,@lit_1081_22
000007D8 E3F0 D0B8 0024          000000B8    800          STG   15,184(0,13)
000007DE E548 D0C0 0094          000000C0    801          MVGHI 192(13),148
000007E4 41F0 F022               00000022    802          LA    15,34(0,15)
000007E8 E3F0 D0C8 0024          000000C8    803          STG   15,200(0,13)
000007EE 4110 D0B0               000000B0    804          LA    1,176(0,13)
000007F2 E3F0 C0F8 0004          00000858    805          LG    15,@lit_1081_23 ; __assert
000007F8                                     806 @@gen_label23 DS    0H
000007F8 05EF                                807          BALR  14,15
000007FA                                     808 @@gen_label24 DS    0H
000007FA                                     809 @L38     DS    0H
                                             810 * ***      return n;
000007FA B904 00F2                           811          LGR   15,2
                                             812 * ***   }
                                             813 * * **** Start of Epilogue
                                             814          DCCEPIL
000007FE                                     815+         ds 0h                                                          01-DCCEP
                                             816+* Epilog
000007FE D707 D088 D088 00000088 00000088    817+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page   21 
  Active Usings: @REGION_1081_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000804 E3D0 D080 0004          00000080    818+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000080A E3C0 D090 0004          00000090    819+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000810 E3B0 C018 0004          00000018    820+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000816 E3C0 B010 0021          00000010    821+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000081C E3E0 D008 0004          00000008    822+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000822 EB1C D020 0004          00000020    823+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000828 078E                                824+         bcr 8,14                if same dsab, just return              01-DCCEP
0000082A E3F0 D010 0024          00000010    825+         stg 15,16(0,13)         save return code                       01-DCCEP
00000830 E300 D018 0024          00000018    826+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000836 E3F0 D090 0004          00000090    827+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000083C E3F0 F018 0004          00000018    828+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000842 47F0 F040               00000040    829+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             830+* End of Epilog
                                             831 * * **** End of Epilogue
00000848                                     832          DS    0D
00000848 000000D0                            833 @FRAMESIZE_1081 DC F'208'
0000084C 00000000
00000850 0000000000000000                    834 @lit_1081_20 DC AD(strdup)
00000858 0000000000000000                    835 @lit_1081_23 DC AD(__assert)
00000860 000000000000539A                    836 @lit_1081_22 DC AD(@strings@)
00000868 0000000000005128                    837 @lit_1081_21 DC AD(@DATA)
                                             838          DROP  12
                                             839 *
                                             840 *   DSECT for automatic variables in "rd_strdup"
                                             841 *      (FUNCTION #1081)
                                             842 *
00000000                00000000 000000A8    843 @AUTO#rd_strdup DSECT
00000000                                     844          DS    XL168
                                             845 *
00000870                00000000 00005122    846 @CODE    CSECT
                                             847 *
                                             848 *
                                             849 *
                                             850 * ....... start of rd_strndup
00000870                                     851 @LNAME1082 DS  0H
00000870 0000000A                            852          DC    X'0000000A'
00000874 99846DA2A3999584                    853          DC    C'rd_strndup'
0000087E 00                                  854          DC    X'00'
                                             855 rd_strndup DCCPRLG CINDEX=1082,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME1082
                                             856          macro
                                             857          dccextrn &m
                                             858          gblc    &$dccext(1000)
                                             859          gbla    &$dccexti
                                             860          lcla    &i
                                             861 &$dccext(&$dccexti+1) setc    '&m'
                                             862 &i       seta    1
                                             863 .loop    aif    (&i gt &$dccexti).around
                                             864          aif    ('&$dccext(&i)' eq '&m').getout
                                             865 &i       seta    &i+1
                                             866          ago     .loop
                                             867 .around  anop
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                             868 &$dccexti seta &$dccexti+1
                                             869          extrn  &m
                                             870 .getout  anop
                                             871          mend
00000880                                     872+$eye0021    ds    0d                                                    02-DCCCA
00000880 C4C3C3                              873+         dc cl3'DCC'                                                    02-DCCCA
00000883 01                                  874+         dc xl1'01' format one                                          02-DCCCA
00000884 00000000                            875+         dc a(0)                                                        02-DCCCA
00000888 00000000000008F2                    876+         dc ad(@PER_1082)                                               02-DCCCA
00000890 00000000000000D0                    877+         dc ad(208)                                                     02-DCCCA
00000898 0000000000000000                    878+         dc ad(0)                                                       02-DCCCA
000008A0 0000000000001000                    879+         dc ad(4096)                                                    02-DCCCA
000008A8 20                                  880+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000008A9 03                                  881+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000008AA 03                                  882+         dc al1(3)                                                      02-DCCCA
000008AB 08                                  883+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000008AC 00                                  884+         dc bl.8'00000000'                                              02-DCCCA
000008AD 000000                              885+         dc al3(0)                                                      02-DCCCA
000008B0 0000000000000870                    886+         dc ad(@LNAME1082)                                              02-DCCCA
000008B8                                     887+         ds 0d                                                          02-DCCCA
000008B8 0000000000000880                    888+         dc ad($eye0021)                                                02-DCCCA
000008C0 0000000000000000                    889+         dc ad(0)                                                       02-DCCCA
000008C8                                     890+         ds    0d                                                       01-DCCPR
000008C8                                     891+rd_strndup ds  0d                                                       01-DCCPR
000008C8                                     892+@REGION_1082_1 ds 0h                                                    01-DCCPR
000008C8 EBEC D008 0024          00000008    893+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000008CE E3E0 D088 0004          00000088    894+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000008D4 E3C0 D090 0004          00000090    895+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000008DA B904 002E                           896+         lgr   2,14                copy addr of our savearea            01-DCCPR
000008DE E3B0 C018 0004          00000018    897+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000008E4 A7EB 00D0               000000D0    898+         aghi  14,208              increase by frame size               01-DCCPR
000008E8 E3E0 C020 0021          00000020    899+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000008EE 4720 B020               00000020    900+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000008F2                                     901+@PER_1082 ds   0h                                                       01-DCCPR
000008F2 EBDE 2080 0024          00000080    902+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000008F8 E3C0 2090 0024          00000090    903+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000008FE B904 00D2                           904+         lgr   13,2                set real frame pointer               01-DCCPR
00000902 B904 00CF                           905+         lgr   12,15               set base reg                         01-DCCPR
                        000008C8             906+         using @REGION_1082_1,12                                        01-DCCPR
00000906 B904 0041                           907          LGR   4,1         ; ptr to parm area
                                             908 * ******* End of Prologue
                                             909 * *
0000090A E320 4008 0004          00000008    910          LG    2,8(0,4)    ; len
                                             911 * ***
                                             912 * ***
                                             913 * ***
                                             914 * ***
                                             915 * ***      char *n = (char *)rd_malloc(len + 1);
00000910 B904 00F2                           916          LGR   15,2
00000914 A7FB 0001               00000001    917          AGHI  15,1
00000918 E3F0 D0B0 0024          000000B0    918          STG   15,176(0,13)
0000091E 4110 D0B0               000000B0    919          LA    1,176(0,13)
                                                                                                                           Page   23 
  Active Usings: @REGION_1082_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000922 E3F0 C140 0004          00000A08    920          LG    15,@lit_1082_25 ; rd_malloc
00000928                                     921 @@gen_label25 DS    0H
00000928 05EF                                922          BALR  14,15
0000092A                                     923 @@gen_label26 DS    0H
0000092A B904 003F                           924          LGR   3,15
                                             925 * ***      ((n) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             926 * ka\\src\\rd.h", 158, "n"));
0000092E B902 00F3                           927          LTGR  15,3
00000932 4770 C0A6               0000096E    928          BNZ   @L40
00000936                                     929 @L39     DS    0H
00000936 E3F0 C158 0004          00000A20    930          LG    15,@lit_1082_26
0000093C 41F0 F02A               0000002A    931          LA    15,42(0,15)
00000940 E3F0 D0B0 0024          000000B0    932          STG   15,176(0,13)
00000946 E3F0 C150 0004          00000A18    933          LG    15,@lit_1082_27
0000094C E3F0 D0B8 0024          000000B8    934          STG   15,184(0,13)
00000952 E548 D0C0 009E          000000C0    935          MVGHI 192(13),158
00000958 41F0 F022               00000022    936          LA    15,34(0,15)
0000095C E3F0 D0C8 0024          000000C8    937          STG   15,200(0,13)
00000962 4110 D0B0               000000B0    938          LA    1,176(0,13)
00000966 E3F0 C148 0004          00000A10    939          LG    15,@lit_1082_28 ; __assert
0000096C                                     940 @@gen_label28 DS    0H
0000096C 05EF                                941          BALR  14,15
0000096E                                     942 @@gen_label29 DS    0H
0000096E                                     943 @L40     DS    0H
                                             944 * ***      __memcpy(n,s,len);
0000096E E310 4000 0004          00000000    945          LG    1,0(0,4)
00000974 B904 0043                           946          LGR   4,3
00000978 B902 00F2                           947          LTGR  15,2
0000097C 4780 C0E2               000009AA    948          BZ    @@gen_label32
00000980 A7FB FFFF               0000FFFF    949          AGHI  15,-1
00000984 EB5F 0008 000A          00000008    950          SRAG  5,15,8(0)
0000098A B902 0055                           951          LTGR  5,5
0000098E 4780 C0DE               000009A6    952          BZ    @@gen_label31
00000992                                     953 @@gen_label30 DS 0H
00000992 D2FF 4000 1000 00000000 00000000    954          MVC   0(256,4),0(1)
00000998 4140 4100               00000100    955          LA    4,256(0,4)
0000099C 4110 1100               00000100    956          LA    1,256(0,1)
000009A0 E350 C0CA 0046          00000992    957          BCTG  5,@@gen_label30
000009A6                                     958 @@gen_label31 DS 0H
000009A6 44F0 C160               00000A28    959          EX    15,@lit_1082_29
000009AA                                     960 @@gen_label32 DS 0H
                                             961 * ***      n[len] = '\0';
000009AA 41F2 3000               00000000    962          LA    15,0(2,3)
000009AE 9200 F000      00000000 00000000    963          MVI   0(15),0
                                             964 * ***
                                             965 * ***      return n;
000009B2 B904 00F3                           966          LGR   15,3
                                             967 * ***   }
                                             968 * * **** Start of Epilogue
                                             969          DCCEPIL
000009B6                                     970+         ds 0h                                                          01-DCCEP
                                             971+* Epilog
                                                                                                                           Page   24 
  Active Usings: @REGION_1082_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000009B6 D707 D088 D088 00000088 00000088    972+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000009BC E3D0 D080 0004          00000080    973+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000009C2 E3C0 D090 0004          00000090    974+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000009C8 E3B0 C018 0004          00000018    975+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000009CE E3C0 B010 0021          00000010    976+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000009D4 E3E0 D008 0004          00000008    977+         lg  14,8(0,13)          load up return address                 01-DCCEP
000009DA EB1C D020 0004          00000020    978+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000009E0 078E                                979+         bcr 8,14                if same dsab, just return              01-DCCEP
000009E2 E3F0 D010 0024          00000010    980+         stg 15,16(0,13)         save return code                       01-DCCEP
000009E8 E300 D018 0024          00000018    981+         stg 0,24(0,13)          save more return code                  01-DCCEP
000009EE E3F0 D090 0004          00000090    982+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000009F4 E3F0 F018 0004          00000018    983+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000009FA 47F0 F040               00000040    984+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             985+* End of Epilog
                                             986 * * **** End of Epilogue
00000A00                                     987          DS    0D
00000A00 000000D0                            988 @FRAMESIZE_1082 DC F'208'
00000A04 00000000
00000A08 00000000000004F0                    989 @lit_1082_25 DC AD(rd_malloc)
00000A10 0000000000000000                    990 @lit_1082_28 DC AD(__assert)
00000A18 000000000000539A                    991 @lit_1082_27 DC AD(@strings@)
00000A20 0000000000005128                    992 @lit_1082_26 DC AD(@DATA)
00000A28 D200 4000 1000 00000000 00000000    993 @lit_1082_29          MVC 0(1,4),0(1)
                                             994          DROP  12
                                             995 *
                                             996 *   DSECT for automatic variables in "rd_strndup"
                                             997 *      (FUNCTION #1082)
                                             998 *
00000000                00000000 000000A8    999 @AUTO#rd_strndup DSECT
00000000                                    1000          DS    XL168
                                            1001 *
00000A2E                00000000 00005122   1002 @CODE    CSECT
                                            1003 *
                                            1004 *
                                            1005 *
                                            1006 * ....... start of rd_refcnt_sub0
00000A2E                                    1007 @LNAME1084 DS  0H
00000A2E 0000000E                           1008          DC    X'0000000E'
00000A32 99846D9985868395                   1009          DC    C'rd_refcnt_sub0'
00000A40 00                                 1010          DC    X'00'
                                            1011 rd_refcnt_sub0 DCCPRLG CINDEX=1084,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1084
                                            1012          macro
                                            1013          dccextrn &m
                                            1014          gblc    &$dccext(1000)
                                            1015          gbla    &$dccexti
                                            1016          lcla    &i
                                            1017 &$dccext(&$dccexti+1) setc    '&m'
                                            1018 &i       seta    1
                                            1019 .loop    aif    (&i gt &$dccexti).around
                                            1020          aif    ('&$dccext(&i)' eq '&m').getout
                                            1021 &i       seta    &i+1
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1022          ago     .loop
                                            1023 .around  anop
                                            1024 &$dccexti seta &$dccexti+1
                                            1025          extrn  &m
                                            1026 .getout  anop
                                            1027          mend
00000A48                                    1028+$eye0024    ds    0d                                                    02-DCCCA
00000A48 C4C3C3                             1029+         dc cl3'DCC'                                                    02-DCCCA
00000A4B 01                                 1030+         dc xl1'01' format one                                          02-DCCCA
00000A4C 00000000                           1031+         dc a(0)                                                        02-DCCCA
00000A50 0000000000000ABA                   1032+         dc ad(@PER_1084)                                               02-DCCCA
00000A58 00000000000000D0                   1033+         dc ad(208)                                                     02-DCCCA
00000A60 0000000000000000                   1034+         dc ad(0)                                                       02-DCCCA
00000A68 0000000000001000                   1035+         dc ad(4096)                                                    02-DCCCA
00000A70 20                                 1036+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A71 03                                 1037+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A72 03                                 1038+         dc al1(3)                                                      02-DCCCA
00000A73 08                                 1039+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A74 00                                 1040+         dc bl.8'00000000'                                              02-DCCCA
00000A75 000000                             1041+         dc al3(0)                                                      02-DCCCA
00000A78 0000000000000A2E                   1042+         dc ad(@LNAME1084)                                              02-DCCCA
00000A80                                    1043+         ds 0d                                                          02-DCCCA
00000A80 0000000000000A48                   1044+         dc ad($eye0024)                                                02-DCCCA
00000A88 0000000000000000                   1045+         dc ad(0)                                                       02-DCCCA
00000A90                                    1046+         ds    0d                                                       01-DCCPR
00000A90                                    1047+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
00000A90                                    1048+@REGION_1084_1 ds 0h                                                    01-DCCPR
00000A90 EBEC D008 0024          00000008   1049+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A96 E3E0 D088 0004          00000088   1050+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000A9C E3C0 D090 0004          00000090   1051+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000AA2 B904 002E                          1052+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000AA6 E3B0 C018 0004          00000018   1053+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000AAC A7EB 00D0               000000D0   1054+         aghi  14,208              increase by frame size               01-DCCPR
00000AB0 E3E0 C020 0021          00000020   1055+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000AB6 4720 B020               00000020   1056+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000ABA                                    1057+@PER_1084 ds   0h                                                       01-DCCPR
00000ABA EBDE 2080 0024          00000080   1058+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000AC0 E3C0 2090 0024          00000090   1059+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000AC6 B904 00D2                          1060+         lgr   13,2                set real frame pointer               01-DCCPR
00000ACA B904 00CF                          1061+         lgr   12,15               set base reg                         01-DCCPR
                        00000A90            1062+         using @REGION_1084_1,12                                        01-DCCPR
                                            1063 * ******* End of Prologue
                                            1064 * *
                                            1065 * ***           int r;
                                            1066 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                            1067 * ***           r = rd_atomic32_sub(R, 1);
00000ACE E3F0 1000 0004          00000000   1068          LG    15,0(0,1)   ; R
00000AD4 E3F0 D0B0 0024          000000B0   1069          STG   15,176(0,13)
00000ADA E548 D0B8 0001          000000B8   1070          MVGHI 184(13),1
00000AE0 4110 D0B0               000000B0   1071          LA    1,176(0,13)
00000AE4 E3F0 C100 0004          00000B90   1072          LG    15,@lit_1084_31 ; rd_atomic32_sub
00000AEA                                    1073 @@gen_label33 DS    0H
                                                                                                                           Page   26 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000AEA 05EF                               1074          BALR  14,15
00000AEC                                    1075 @@gen_label34 DS    0H
00000AEC 122F                               1076          LTR   2,15
                                            1077 * ***
                                            1078 * ***           if (r < 0)
00000AEE 47B0 C0A6               00000B36   1079          BNL   @L41
                                            1080 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                            1081 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                            1082 * zero\""));
00000AF2 E3F0 C108 0004          00000B98   1083          LG    15,@lit_1084_32
00000AF8 4110 F024               00000024   1084          LA    1,36(0,15)
00000AFC 9500 1000      00000000 00000000   1085          CLI   0(1),0
00000B00 4780 C0A6               00000B36   1086          BE    @L41
00000B04                                    1087 @L42     DS    0H
00000B04 E310 C118 0004          00000BA8   1088          LG    1,@lit_1084_33
00000B0A 4110 1036               00000036   1089          LA    1,54(0,1)
00000B0E E310 D0B0 0024          000000B0   1090          STG   1,176(0,13)
00000B14 E3F0 D0B8 0024          000000B8   1091          STG   15,184(0,13)
00000B1A E548 D0C0 014F          000000C0   1092          MVGHI 192(13),335
00000B20 41F0 F034               00000034   1093          LA    15,52(0,15)
00000B24 E3F0 D0C8 0024          000000C8   1094          STG   15,200(0,13)
00000B2A 4110 D0B0               000000B0   1095          LA    1,176(0,13)
00000B2E E3F0 C110 0004          00000BA0   1096          LG    15,@lit_1084_34 ; __assert
00000B34                                    1097 @@gen_label37 DS    0H
00000B34 05EF                               1098          BALR  14,15
00000B36                                    1099 @@gen_label38 DS    0H
00000B36                                    1100 @L43     DS    0H
00000B36                                    1101 @L41     DS    0H
                                            1102 * ***           return r;
00000B36 B914 00F2                          1103          LGFR  15,2
                                            1104 * ***   }
                                            1105 * * **** Start of Epilogue
                                            1106          DCCEPIL
00000B3A                                    1107+         ds 0h                                                          01-DCCEP
                                            1108+* Epilog
00000B3A D707 D088 D088 00000088 00000088   1109+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000B40 E3D0 D080 0004          00000080   1110+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000B46 E3C0 D090 0004          00000090   1111+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000B4C E3B0 C018 0004          00000018   1112+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000B52 E3C0 B010 0021          00000010   1113+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000B58 E3E0 D008 0004          00000008   1114+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000B5E EB1C D020 0004          00000020   1115+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000B64 078E                               1116+         bcr 8,14                if same dsab, just return              01-DCCEP
00000B66 E3F0 D010 0024          00000010   1117+         stg 15,16(0,13)         save return code                       01-DCCEP
00000B6C E300 D018 0024          00000018   1118+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000B72 E3F0 D090 0004          00000090   1119+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000B78 E3F0 F018 0004          00000018   1120+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000B7E 47F0 F040               00000040   1121+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1122+* End of Epilog
                                            1123 * * **** End of Epilogue
00000B88                                    1124          DS    0D
00000B88 000000D0                           1125 @FRAMESIZE_1084 DC F'208'
                                                                                                                           Page   27 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000B8C 00000000
00000B90 0000000000000240                   1126 @lit_1084_31 DC AD(rd_atomic32_sub)
00000B98 000000000000539A                   1127 @lit_1084_32 DC AD(@strings@)
00000BA0 0000000000000000                   1128 @lit_1084_34 DC AD(__assert)
00000BA8 0000000000005128                   1129 @lit_1084_33 DC AD(@DATA)
                                            1130          DROP  12
                                            1131 *
                                            1132 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                            1133 *      (FUNCTION #1084)
                                            1134 *
00000000                00000000 000000AC   1135 @AUTO#rd_refcnt_sub0 DSECT
00000000                                    1136          DS    XL168
000000A8                                    1137 rd_refcnt_sub0#r#0 DS 1F   ; r
                                            1138 *
00000BB0                00000000 00005122   1139 @CODE    CSECT
                                            1140 *
                                            1141 *
                                            1142 *
                                            1143 * ....... start of rd_clock
00000BB0                                    1144 @LNAME1088 DS  0H
00000BB0 00000008                           1145          DC    X'00000008'
00000BB4 99846D8393968392                   1146          DC    C'rd_clock'
00000BBC 00                                 1147          DC    X'00'
                                            1148 rd_clock DCCPRLG CINDEX=1088,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1088
                                            1149          macro
                                            1150          dccextrn &m
                                            1151          gblc    &$dccext(1000)
                                            1152          gbla    &$dccexti
                                            1153          lcla    &i
                                            1154 &$dccext(&$dccexti+1) setc    '&m'
                                            1155 &i       seta    1
                                            1156 .loop    aif    (&i gt &$dccexti).around
                                            1157          aif    ('&$dccext(&i)' eq '&m').getout
                                            1158 &i       seta    &i+1
                                            1159          ago     .loop
                                            1160 .around  anop
                                            1161 &$dccexti seta &$dccexti+1
                                            1162          extrn  &m
                                            1163 .getout  anop
                                            1164          mend
00000BC0                                    1165+$eye0027    ds    0d                                                    02-DCCCA
00000BC0 C4C3C3                             1166+         dc cl3'DCC'                                                    02-DCCCA
00000BC3 01                                 1167+         dc xl1'01' format one                                          02-DCCCA
00000BC4 00000000                           1168+         dc a(0)                                                        02-DCCCA
00000BC8 0000000000000C32                   1169+         dc ad(@PER_1088)                                               02-DCCCA
00000BD0 00000000000000C8                   1170+         dc ad(200)                                                     02-DCCCA
00000BD8 0000000000000000                   1171+         dc ad(0)                                                       02-DCCCA
00000BE0 0000000000001000                   1172+         dc ad(4096)                                                    02-DCCCA
00000BE8 20                                 1173+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000BE9 03                                 1174+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000BEA 03                                 1175+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000BEB 08                                 1176+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000BEC 00                                 1177+         dc bl.8'00000000'                                              02-DCCCA
00000BED 000000                             1178+         dc al3(0)                                                      02-DCCCA
00000BF0 0000000000000BB0                   1179+         dc ad(@LNAME1088)                                              02-DCCCA
00000BF8                                    1180+         ds 0d                                                          02-DCCCA
00000BF8 0000000000000BC0                   1181+         dc ad($eye0027)                                                02-DCCCA
00000C00 0000000000000000                   1182+         dc ad(0)                                                       02-DCCCA
00000C08                                    1183+         ds    0d                                                       01-DCCPR
00000C08                                    1184+rd_clock ds    0d                                                       01-DCCPR
00000C08                                    1185+@REGION_1088_1 ds 0h                                                    01-DCCPR
00000C08 EBEC D008 0024          00000008   1186+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000C0E E3E0 D088 0004          00000088   1187+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000C14 E3C0 D090 0004          00000090   1188+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000C1A B904 002E                          1189+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000C1E E3B0 C018 0004          00000018   1190+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000C24 A7EB 00C8               000000C8   1191+         aghi  14,200              increase by frame size               01-DCCPR
00000C28 E3E0 C020 0021          00000020   1192+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000C2E 4720 B020               00000020   1193+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000C32                                    1194+@PER_1088 ds   0h                                                       01-DCCPR
00000C32 EBDE 2080 0024          00000080   1195+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000C38 E3C0 2090 0024          00000090   1196+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000C3E B904 00D2                          1197+         lgr   13,2                set real frame pointer               01-DCCPR
00000C42 B904 00CF                          1198+         lgr   12,15               set base reg                         01-DCCPR
                        00000C08            1199+         using @REGION_1088_1,12                                        01-DCCPR
                                            1200 * ******* End of Prologue
                                            1201 * *
                                            1202 * ***   # 97 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1203 * ***       struct timeval tv;
                                            1204 * ***       gettimeofday(&tv, ((void *)0));
00000C46 41F0 D0A8               000000A8   1205          LA    15,168(0,13)
00000C4A E3F0 D0B8 0024          000000B8   1206          STG   15,184(0,13)
00000C50 D707 D0C0 D0C0 000000C0 000000C0   1207          XC    192(8,13),192(13)
00000C56 4110 D0B8               000000B8   1208          LA    1,184(0,13)
00000C5A E3F0 C0C0 0004          00000CC8   1209          LG    15,@lit_1088_36 ; gettimeofday
00000C60                                    1210 @@gen_label39 DS    0H
00000C60 05EF                               1211          BALR  14,15
00000C62                                    1212 @@gen_label40 DS    0H
                                            1213 * ***       return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_\
                                            1214 * usec;
00000C62 E3F0 D0A8 0004          000000A8   1215          LG    15,168(0,13)
00000C68 C2F0 000F 4240                     1216          MSGFI 15,X'000F4240'
00000C6E E310 D0B0 0004          000000B0   1217          LG    1,176(0,13) ; offset of tv_usec in timeval
00000C74 B90A 00F1                          1218          ALGR  15,1
                                            1219 * ***   # 118 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1220 * ***   }
                                            1221 * * **** Start of Epilogue
                                            1222          DCCEPIL
00000C78                                    1223+         ds 0h                                                          01-DCCEP
                                            1224+* Epilog
00000C78 D707 D088 D088 00000088 00000088   1225+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000C7E E3D0 D080 0004          00000080   1226+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000C84 E3C0 D090 0004          00000090   1227+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page   29 
  Active Usings: @REGION_1088_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000C8A E3B0 C018 0004          00000018   1228+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000C90 E3C0 B010 0021          00000010   1229+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C96 E3E0 D008 0004          00000008   1230+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C9C EB1C D020 0004          00000020   1231+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000CA2 078E                               1232+         bcr 8,14                if same dsab, just return              01-DCCEP
00000CA4 E3F0 D010 0024          00000010   1233+         stg 15,16(0,13)         save return code                       01-DCCEP
00000CAA E300 D018 0024          00000018   1234+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000CB0 E3F0 D090 0004          00000090   1235+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000CB6 E3F0 F018 0004          00000018   1236+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000CBC 47F0 F040               00000040   1237+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1238+* End of Epilog
                                            1239 * * **** End of Epilogue
00000CC0                                    1240          DS    0D
00000CC0 000000C8                           1241 @FRAMESIZE_1088 DC F'200'
00000CC4 00000000
00000CC8 0000000000000000                   1242 @lit_1088_36 DC AD(gettimeofday)
                                            1243          DROP  12
                                            1244 *
                                            1245 *   DSECT for automatic variables in "rd_clock"
                                            1246 *      (FUNCTION #1088)
                                            1247 *
00000000                00000000 000000B8   1248 @AUTO#rd_clock DSECT
00000000                                    1249          DS    XL168
000000A8                                    1250 rd_clock#tv#0 DS 16XL1     ; tv
                                            1251 *
00000CD0                00000000 00005122   1252 @CODE    CSECT
                                            1253 *
                                            1254 *
                                            1255 *
                                            1256 * ....... start of rd_uvarint_enc_u64
00000CD0                                    1257 @LNAME1308 DS  0H
00000CD0 00000012                           1258          DC    X'00000012'
00000CD4 99846DA4A5819989                   1259          DC    C'rd_uvarint_enc_u64'
00000CE6 00                                 1260          DC    X'00'
                                            1261 rd_uvarint_enc_u64 DCCPRLG CINDEX=1308,BASER=12,FRAME=176,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1308
                                            1262          macro
                                            1263          dccextrn &m
                                            1264          gblc    &$dccext(1000)
                                            1265          gbla    &$dccexti
                                            1266          lcla    &i
                                            1267 &$dccext(&$dccexti+1) setc    '&m'
                                            1268 &i       seta    1
                                            1269 .loop    aif    (&i gt &$dccexti).around
                                            1270          aif    ('&$dccext(&i)' eq '&m').getout
                                            1271 &i       seta    &i+1
                                            1272          ago     .loop
                                            1273 .around  anop
                                            1274 &$dccexti seta &$dccexti+1
                                            1275          extrn  &m
                                            1276 .getout  anop
                                            1277          mend
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000CE8                                    1278+$eye0030    ds    0d                                                    02-DCCCA
00000CE8 C4C3C3                             1279+         dc cl3'DCC'                                                    02-DCCCA
00000CEB 01                                 1280+         dc xl1'01' format one                                          02-DCCCA
00000CEC 00000000                           1281+         dc a(0)                                                        02-DCCCA
00000CF0 0000000000000000                   1282+         dc ad(0)                                                       02-DCCCA
00000CF8 00000000000000B0                   1283+         dc ad(176)                                                     02-DCCCA
00000D00 0000000000000000                   1284+         dc ad(0)                                                       02-DCCCA
00000D08 0000000000001000                   1285+         dc ad(4096)                                                    02-DCCCA
00000D10 20                                 1286+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D11 03                                 1287+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D12 03                                 1288+         dc al1(3)                                                      02-DCCCA
00000D13 08                                 1289+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D14 00                                 1290+         dc bl.8'00000000'                                              02-DCCCA
00000D15 000000                             1291+         dc al3(0)                                                      02-DCCCA
00000D18 0000000000000CD0                   1292+         dc ad(@LNAME1308)                                              02-DCCCA
00000D20                                    1293+         ds 0d                                                          02-DCCCA
00000D20 0000000000000CE8                   1294+         dc ad($eye0030)                                                02-DCCCA
00000D28 0000000000000000                   1295+         dc ad(0)                                                       02-DCCCA
00000D30                                    1296+         ds    0d                                                       01-DCCPR
00000D30                                    1297+rd_uvarint_enc_u64 ds 0d                                                01-DCCPR
00000D30                                    1298+@REGION_1308_1 ds 0h                                                    01-DCCPR
00000D30 EBEC D008 0024          00000008   1299+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D36 B904 00CF                          1300+         lgr   12,15               set base reg                         01-DCCPR
                        00000D30            1301+         using @REGION_1308_1,12                                        01-DCCPR
00000D3A B904 0021                          1302          LGR   2,1         ; ptr to parm area
                                            1303 * ******* End of Prologue
                                            1304 * *
                                            1305 * ***           size_t of = 0;
00000D3E E3F0 2010 0004          00000010   1306          LG    15,16(0,2)  ; num
00000D44 A719 0000               00000000   1307          LGHI  1,0         ; 0
                                            1308 * ***
                                            1309 * ***           do {
00000D48                                    1310 @L105    DS    0H
                                            1311 * ***                   if (((of >= dstsize)))
00000D48 E310 2008 0021          00000008   1312          CLG   1,8(0,2)
00000D4E 4740 C038               00000D68   1313          BL    @L108
                                            1314 * ***                           return 0;
00000D52 A7F9 0000               00000000   1315          LGHI  15,0        ; 0
00000D56 47F0 C084               00000DB4   1316          B     @ret_lab_1308
00000D60                                    1317          DS    0D
00000D60 000000000000007F                   1318 @lit_1308_40 DC FD'127' 0x000000000000007f
00000D68                                    1319 @L108    DS    0H
                                            1320 * ***
                                            1321 * ***                   dst[of++] = (num & 0x7f) | (num > 0x7f ? 0x80 \
                                            1322 * : 0);
00000D68 E330 2000 0004          00000000   1323          LG    3,0(0,2)    ; dst
00000D6E B904 0041                          1324          LGR   4,1
00000D72 A71B 0001               00000001   1325          AGHI  1,1
00000D76 B904 005F                          1326          LGR   5,15
00000D7A E350 C030 0080          00000D60   1327          NG    5,@lit_1308_40
00000D80 C2FE 0000 007F                     1328          CLGFI 15,X'0000007F'
00000D86 47D0 C062               00000D92   1329          BNH   @L109
                                                                                                                           Page   31 
  Active Usings: @REGION_1308_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000D8A A768 0080               00000080   1330          LHI   6,128       ; 128
00000D8E 47F0 C066               00000D96   1331          B     @L110
00000D92                                    1332 @L109    DS    0H
00000D92 A768 0000               00000000   1333          LHI   6,0         ; 0
00000D96                                    1334 @L110    DS    0H
00000D96 B914 0066                          1335          LGFR  6,6
00000D9A B981 0056                          1336          OGR   5,6
00000D9E 4254 3000               00000000   1337          STC   5,0(4,3)
                                            1338 * ***                   num >>= 7;
00000DA2 EBFF 0007 000C          00000007   1339          SRLG  15,15,7(0)
                                            1340 * ***           } while (num);
00000DA8 B902 003F                          1341          LTGR  3,15
00000DAC 4770 C018               00000D48   1342          BNZ   @L105
                                            1343 * ***
                                            1344 * ***           return of;
00000DB0 B904 00F1                          1345          LGR   15,1
                                            1346 * ***   }
00000DB4                                    1347 @ret_lab_1308 DS 0H
                                            1348 * * **** Start of Epilogue
                                            1349          DCCEPIL
00000DB4                                    1350+         ds 0h                                                          01-DCCEP
                                            1351+* Epilog
                                            1352+* Epilog
00000DB4 E3E0 D008 0004          00000008   1353+         lg    14,8(,13) restore the reg                                01-DCCEP
00000DBA EB1C D020 0004          00000020   1354+         lmg   1,12,32(13)                                              01-DCCEP
00000DC0 07FE                               1355+         br   14                                                        01-DCCEP
                                            1356+* End of Epilog
                                            1357 * * **** End of Epilogue
                                            1358          DROP  12
                                            1359 *
                                            1360 *   DSECT for automatic variables in "rd_uvarint_enc_u64"
                                            1361 *      (FUNCTION #1308)
                                            1362 *
00000000                00000000 000000B0   1363 @AUTO#rd_uvarint_enc_u64 DSECT
00000000                                    1364          DS    XL168
000000A8                                    1365 rd_uvarint_enc_u64#of#0 DS 8XL1 ; of
                                            1366 *
00000DC2                00000000 00005122   1367 @CODE    CSECT
                                            1368 *
                                            1369 *
                                            1370 *
                                            1371 * ....... start of rd_kafkap_str_cmp_str
00000DC2                                    1372 @LNAME1320 DS  0H
00000DC2 00000015                           1373          DC    X'00000015'
00000DC6 99846D9281869281                   1374          DC    C'rd_kafkap_str_cmp_str'
00000DDB 00                                 1375          DC    X'00'
                                            1376 rd_kafkap_str_cmp_str DCCPRLG CINDEX=1320,BASER=12,FRAME=176,SAVEAREA=N*
                                                                O,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1320
                                            1377          macro
                                            1378          dccextrn &m
                                            1379          gblc    &$dccext(1000)
                                            1380          gbla    &$dccexti
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1381          lcla    &i
                                            1382 &$dccext(&$dccexti+1) setc    '&m'
                                            1383 &i       seta    1
                                            1384 .loop    aif    (&i gt &$dccexti).around
                                            1385          aif    ('&$dccext(&i)' eq '&m').getout
                                            1386 &i       seta    &i+1
                                            1387          ago     .loop
                                            1388 .around  anop
                                            1389 &$dccexti seta &$dccexti+1
                                            1390          extrn  &m
                                            1391 .getout  anop
                                            1392          mend
00000DE0                                    1393+$eye0033    ds    0d                                                    02-DCCCA
00000DE0 C4C3C3                             1394+         dc cl3'DCC'                                                    02-DCCCA
00000DE3 01                                 1395+         dc xl1'01' format one                                          02-DCCCA
00000DE4 00000000                           1396+         dc a(0)                                                        02-DCCCA
00000DE8 0000000000000000                   1397+         dc ad(0)                                                       02-DCCCA
00000DF0 00000000000000B0                   1398+         dc ad(176)                                                     02-DCCCA
00000DF8 0000000000000000                   1399+         dc ad(0)                                                       02-DCCCA
00000E00 0000000000001000                   1400+         dc ad(4096)                                                    02-DCCCA
00000E08 20                                 1401+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E09 03                                 1402+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E0A 03                                 1403+         dc al1(3)                                                      02-DCCCA
00000E0B 08                                 1404+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E0C 00                                 1405+         dc bl.8'00000000'                                              02-DCCCA
00000E0D 000000                             1406+         dc al3(0)                                                      02-DCCCA
00000E10 0000000000000DC2                   1407+         dc ad(@LNAME1320)                                              02-DCCCA
00000E18                                    1408+         ds 0d                                                          02-DCCCA
00000E18 0000000000000DE0                   1409+         dc ad($eye0033)                                                02-DCCCA
00000E20 0000000000000000                   1410+         dc ad(0)                                                       02-DCCCA
00000E28                                    1411+         ds    0d                                                       01-DCCPR
00000E28                                    1412+rd_kafkap_str_cmp_str ds 0d                                             01-DCCPR
00000E28                                    1413+@REGION_1320_1 ds 0h                                                    01-DCCPR
00000E28 EBEC D008 0024          00000008   1414+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000E2E B904 00CF                          1415+         lgr   12,15               set base reg                         01-DCCPR
                        00000E28            1416+         using @REGION_1320_1,12                                        01-DCCPR
                                            1417 * ******* End of Prologue
                                            1418 * *
                                            1419 * ***      int len = (int)__strlen(str);
00000E32 E3F0 1000 0004          00000000   1420          LG    15,0(0,1)   ; a
00000E38 E320 1008 0004          00000008   1421          LG    2,8(0,1)
00000E3E B904 0032                          1422          LGR   3,2
00000E42 A709 0000               00000000   1423          LGHI  0,0
00000E46                                    1424 @@gen_label44 DS 0H
00000E46 B25E 0002                          1425          SRST  0,2
00000E4A 4710 C01E               00000E46   1426          BC  1,@@gen_label44
00000E4E B90B 0003                          1427          SLGR  0,3
                                            1428 * ***      int minlen = ((a->len) < (len) ? (a->len) : (len));
00000E52 5820 F000               00000000   1429          L     2,0(0,15)   ; a
00000E56 1920                               1430          CR    2,0
00000E58 47B0 C03C               00000E64   1431          BNL   @L135
00000E5C 5820 F000               00000000   1432          L     2,0(0,15)   ; a
                                                                                                                           Page   33 
  Active Usings: @REGION_1320_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000E60 47F0 C03E               00000E66   1433          B     @L136
00000E64                                    1434 @L135    DS    0H
00000E64 1820                               1435          LR    2,0
00000E66                                    1436 @L136    DS    0H
                                            1437 * ***      int r = __memcmp(a->str,str,minlen);
00000E66 B914 0022                          1438          LGFR  2,2
00000E6A E330 F008 0004          00000008   1439          LG    3,8(0,15)
00000E70 E310 1008 0004          00000008   1440          LG    1,8(0,1)
00000E76 A749 0000               00000000   1441          LGHI  4,0
00000E7A B902 0022                          1442          LTGR  2,2
00000E7E 4780 C086               00000EAE   1443          BZ    @@gen_label46
00000E82                                    1444 @@gen_label48 DS 0H
00000E82 D500 3000 1000 00000000 00000000   1445          CLC   0(1,3),0(1)
00000E88 4770 C076               00000E9E   1446          BNZ   @@gen_label47
00000E8C 4130 3001               00000001   1447          LA    3,1(0,3)
00000E90 4110 1001               00000001   1448          LA    1,1(0,1)
00000E94 E320 C05A 0046          00000E82   1449          BCTG  2,@@gen_label48
00000E9A 47F0 C086               00000EAE   1450          B     @@gen_label46
00000E9E                                    1451 @@gen_label47 DS 0H
00000E9E 4340 3000               00000000   1452          IC    4,0(0,3)
00000EA2 A739 0000               00000000   1453          LGHI  3,0
00000EA6 4330 1000               00000000   1454          IC    3,0(0,1)
00000EAA B90B 0043                          1455          SLGR  4,3
00000EAE                                    1456 @@gen_label46 DS 0H
                                            1457 * ***      if (r)
00000EAE 1244                               1458          LTR   4,4
00000EB0 4780 C094               00000EBC   1459          BZ    @L137
                                            1460 * ***         return r;
00000EB4 B914 00F4                          1461          LGFR  15,4
00000EB8 47F0 C0C0               00000EE8   1462          B     @ret_lab_1320
                                            1463 * ***      else
00000EBC                                    1464 @L137    DS    0H
                                            1465 * ***                   return (int)((a->len) < (len) ? -1 : ((a->len)\
                                            1466 *  > (len)));
00000EBC 5810 F000               00000000   1467          L     1,0(0,15)   ; a
00000EC0 1910                               1468          CR    1,0
00000EC2 47B0 C0A6               00000ECE   1469          BNL   @L139
00000EC6 A7F8 FFFF               0000FFFF   1470          LHI   15,-1       ; -1
00000ECA 47F0 C0BC               00000EE4   1471          B     @L140
00000ECE                                    1472 @L139    DS    0H
00000ECE 58F0 F000               00000000   1473          L     15,0(0,15)  ; a
00000ED2 19F0                               1474          CR    15,0
00000ED4 47D0 C0B8               00000EE0   1475          BNH   @@gen_label51
00000ED8 A7F8 0001               00000001   1476          LHI   15,1
00000EDC 47F0 C0BC               00000EE4   1477          B     @@gen_label52
00000EE0                                    1478 @@gen_label51 DS 0H
00000EE0 A7F8 0000               00000000   1479          LHI   15,0
00000EE4                                    1480 @@gen_label52 DS 0H
00000EE4                                    1481 @L140    DS    0H
00000EE4 B914 00FF                          1482          LGFR  15,15
                                            1483 * ***   }
00000EE8                                    1484 @ret_lab_1320 DS 0H
                                                                                                                           Page   34 
  Active Usings: @REGION_1320_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1485 * * **** Start of Epilogue
                                            1486          DCCEPIL
00000EE8                                    1487+         ds 0h                                                          01-DCCEP
                                            1488+* Epilog
                                            1489+* Epilog
00000EE8 E3E0 D008 0004          00000008   1490+         lg    14,8(,13) restore the reg                                01-DCCEP
00000EEE EB1C D020 0004          00000020   1491+         lmg   1,12,32(13)                                              01-DCCEP
00000EF4 07FE                               1492+         br   14                                                        01-DCCEP
                                            1493+* End of Epilog
                                            1494 * * **** End of Epilogue
                                            1495          DROP  12
                                            1496 *
                                            1497 *   DSECT for automatic variables in "rd_kafkap_str_cmp_str"
                                            1498 *      (FUNCTION #1320)
                                            1499 *
00000000                00000000 000000AC   1500 @AUTO#rd_kafkap_str_cmp_str DSECT
00000000                                    1501          DS    XL168
000000A8                                    1502 rd_kafkap_str_cmp_str#r#0 DS 1F ; r
000000AC                000000AC 000000A8   1503          ORG   @AUTO#rd_kafkap_str_cmp_str+168
000000A8                                    1504 rd_kafkap_str_cmp_str#minlen#0 DS 1F ; minlen
000000AC                000000AC 000000A8   1505          ORG   @AUTO#rd_kafkap_str_cmp_str+168
000000A8                                    1506 rd_kafkap_str_cmp_str#len#0 DS 1F ; len
                                            1507 *
00000EF6                00000000 00005122   1508 @CODE    CSECT
                                            1509 *
                                            1510 *
                                            1511 *
                                            1512 * ....... start of rd_kafkap_bytes_destroy
00000EF6                                    1513 @LNAME1322 DS  0H
00000EF6 00000017                           1514          DC    X'00000017'
00000EFA 99846D9281869281                   1515          DC    C'rd_kafkap_bytes_destroy'
00000F11 00                                 1516          DC    X'00'
                                            1517 rd_kafkap_bytes_destroy DCCPRLG CINDEX=1322,BASER=12,FRAME=176,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1322
                                            1518          macro
                                            1519          dccextrn &m
                                            1520          gblc    &$dccext(1000)
                                            1521          gbla    &$dccexti
                                            1522          lcla    &i
                                            1523 &$dccext(&$dccexti+1) setc    '&m'
                                            1524 &i       seta    1
                                            1525 .loop    aif    (&i gt &$dccexti).around
                                            1526          aif    ('&$dccext(&i)' eq '&m').getout
                                            1527 &i       seta    &i+1
                                            1528          ago     .loop
                                            1529 .around  anop
                                            1530 &$dccexti seta &$dccexti+1
                                            1531          extrn  &m
                                            1532 .getout  anop
                                            1533          mend
00000F18                                    1534+$eye0036    ds    0d                                                    02-DCCCA
00000F18 C4C3C3                             1535+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000F1B 01                                 1536+         dc xl1'01' format one                                          02-DCCCA
00000F1C 00000000                           1537+         dc a(0)                                                        02-DCCCA
00000F20 0000000000000F8A                   1538+         dc ad(@PER_1322)                                               02-DCCCA
00000F28 00000000000000B0                   1539+         dc ad(176)                                                     02-DCCCA
00000F30 0000000000000000                   1540+         dc ad(0)                                                       02-DCCCA
00000F38 0000000000001000                   1541+         dc ad(4096)                                                    02-DCCCA
00000F40 20                                 1542+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F41 03                                 1543+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F42 03                                 1544+         dc al1(3)                                                      02-DCCCA
00000F43 08                                 1545+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F44 00                                 1546+         dc bl.8'00000000'                                              02-DCCCA
00000F45 000000                             1547+         dc al3(0)                                                      02-DCCCA
00000F48 0000000000000EF6                   1548+         dc ad(@LNAME1322)                                              02-DCCCA
00000F50                                    1549+         ds 0d                                                          02-DCCCA
00000F50 0000000000000F18                   1550+         dc ad($eye0036)                                                02-DCCCA
00000F58 0000000000000000                   1551+         dc ad(0)                                                       02-DCCCA
00000F60                                    1552+         ds    0d                                                       01-DCCPR
00000F60                                    1553+rd_kafkap_bytes_destroy ds 0d                                           01-DCCPR
00000F60                                    1554+@REGION_1322_1 ds 0h                                                    01-DCCPR
00000F60 EBEC D008 0024          00000008   1555+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F66 E3E0 D088 0004          00000088   1556+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F6C E3C0 D090 0004          00000090   1557+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F72 B904 002E                          1558+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F76 E3B0 C018 0004          00000018   1559+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F7C A7EB 00B0               000000B0   1560+         aghi  14,176              increase by frame size               01-DCCPR
00000F80 E3E0 C020 0021          00000020   1561+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F86 4720 B020               00000020   1562+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F8A                                    1563+@PER_1322 ds   0h                                                       01-DCCPR
00000F8A EBDE 2080 0024          00000080   1564+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F90 E3C0 2090 0024          00000090   1565+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F96 B904 00D2                          1566+         lgr   13,2                set real frame pointer               01-DCCPR
00000F9A B904 00CF                          1567+         lgr   12,15               set base reg                         01-DCCPR
                        00000F60            1568+         using @REGION_1322_1,12                                        01-DCCPR
                                            1569 * ******* End of Prologue
                                            1570 * *
                                            1571 * ***      rd_free(kbytes);
00000F9E E3F0 1000 0004          00000000   1572          LG    15,0(0,1)   ; kbytes
00000FA4 E3F0 D0A8 0024          000000A8   1573          STG   15,168(0,13)
00000FAA 4110 D0A8               000000A8   1574          LA    1,168(0,13)
00000FAE E3F0 C0A8 0004          00001008   1575          LG    15,@lit_1322_44 ; rd_free
00000FB4                                    1576 @@gen_label53 DS    0H
00000FB4 05EF                               1577          BALR  14,15
00000FB6                                    1578 @@gen_label54 DS    0H
                                            1579 * ***   }
00000FB6                                    1580 @ret_lab_1322 DS 0H
                                            1581 * * **** Start of Epilogue
                                            1582          DCCEPIL
00000FB6                                    1583+         ds 0h                                                          01-DCCEP
                                            1584+* Epilog
00000FB6 D707 D088 D088 00000088 00000088   1585+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000FBC E3D0 D080 0004          00000080   1586+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000FC2 E3C0 D090 0004          00000090   1587+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page   36 
  Active Usings: @REGION_1322_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00000FC8 E3B0 C018 0004          00000018   1588+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000FCE E3C0 B010 0021          00000010   1589+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000FD4 E3E0 D008 0004          00000008   1590+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000FDA EB1C D020 0004          00000020   1591+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000FE0 078E                               1592+         bcr 8,14                if same dsab, just return              01-DCCEP
00000FE2 E3F0 D010 0024          00000010   1593+         stg 15,16(0,13)         save return code                       01-DCCEP
00000FE8 E300 D018 0024          00000018   1594+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000FEE E3F0 D090 0004          00000090   1595+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000FF4 E3F0 F018 0004          00000018   1596+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000FFA 47F0 F040               00000040   1597+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1598+* End of Epilog
                                            1599 * * **** End of Epilogue
00001000                                    1600          DS    0D
00001000 000000B0                           1601 @FRAMESIZE_1322 DC F'176'
00001004 00000000
00001008 0000000000000658                   1602 @lit_1322_44 DC AD(rd_free)
                                            1603          DROP  12
                                            1604 *
                                            1605 *   DSECT for automatic variables in "rd_kafkap_bytes_destroy"
                                            1606 *      (FUNCTION #1322)
                                            1607 *
00000000                00000000 000000A8   1608 @AUTO#rd_kafkap_bytes_destroy DSECT
00000000                                    1609          DS    XL168
                                            1610 *
00001010                00000000 00005122   1611 @CODE    CSECT
                                            1612 *
                                            1613 *
                                            1614 *
                                            1615 * ....... start of rd_kafkap_bytes_new
00001010                                    1616 @LNAME1323 DS  0H
00001010 00000013                           1617          DC    X'00000013'
00001014 99846D9281869281                   1618          DC    C'rd_kafkap_bytes_new'
00001027 00                                 1619          DC    X'00'
                                            1620 rd_kafkap_bytes_new DCCPRLG CINDEX=1323,BASER=12,FRAME=184,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1323
                                            1621          macro
                                            1622          dccextrn &m
                                            1623          gblc    &$dccext(1000)
                                            1624          gbla    &$dccexti
                                            1625          lcla    &i
                                            1626 &$dccext(&$dccexti+1) setc    '&m'
                                            1627 &i       seta    1
                                            1628 .loop    aif    (&i gt &$dccexti).around
                                            1629          aif    ('&$dccext(&i)' eq '&m').getout
                                            1630 &i       seta    &i+1
                                            1631          ago     .loop
                                            1632 .around  anop
                                            1633 &$dccexti seta &$dccexti+1
                                            1634          extrn  &m
                                            1635 .getout  anop
                                            1636          mend
00001028                                    1637+$eye0039    ds    0d                                                    02-DCCCA
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001028 C4C3C3                             1638+         dc cl3'DCC'                                                    02-DCCCA
0000102B 01                                 1639+         dc xl1'01' format one                                          02-DCCCA
0000102C 00000000                           1640+         dc a(0)                                                        02-DCCCA
00001030 000000000000109A                   1641+         dc ad(@PER_1323)                                               02-DCCCA
00001038 00000000000000B8                   1642+         dc ad(184)                                                     02-DCCCA
00001040 0000000000000000                   1643+         dc ad(0)                                                       02-DCCCA
00001048 0000000000001000                   1644+         dc ad(4096)                                                    02-DCCCA
00001050 20                                 1645+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001051 03                                 1646+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001052 03                                 1647+         dc al1(3)                                                      02-DCCCA
00001053 08                                 1648+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001054 00                                 1649+         dc bl.8'00000000'                                              02-DCCCA
00001055 000000                             1650+         dc al3(0)                                                      02-DCCCA
00001058 0000000000001010                   1651+         dc ad(@LNAME1323)                                              02-DCCCA
00001060                                    1652+         ds 0d                                                          02-DCCCA
00001060 0000000000001028                   1653+         dc ad($eye0039)                                                02-DCCCA
00001068 0000000000000000                   1654+         dc ad(0)                                                       02-DCCCA
00001070                                    1655+         ds    0d                                                       01-DCCPR
00001070                                    1656+rd_kafkap_bytes_new ds 0d                                               01-DCCPR
00001070                                    1657+@REGION_1323_1 ds 0h                                                    01-DCCPR
00001070 EBEC D008 0024          00000008   1658+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001076 E3E0 D088 0004          00000088   1659+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000107C E3C0 D090 0004          00000090   1660+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001082 B904 002E                          1661+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001086 E3B0 C018 0004          00000018   1662+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000108C A7EB 00B8               000000B8   1663+         aghi  14,184              increase by frame size               01-DCCPR
00001090 E3E0 C020 0021          00000020   1664+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001096 4720 B020               00000020   1665+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000109A                                    1666+@PER_1323 ds   0h                                                       01-DCCPR
0000109A EBDE 2080 0024          00000080   1667+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000010A0 E3C0 2090 0024          00000090   1668+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000010A6 B904 00D2                          1669+         lgr   13,2                set real frame pointer               01-DCCPR
000010AA B904 00CF                          1670+         lgr   12,15               set base reg                         01-DCCPR
                        00001070            1671+         using @REGION_1323_1,12                                        01-DCCPR
                                            1672 * ******* End of Prologue
                                            1673 * *
000010AE E330 1000 0004          00000000   1674          LG    3,0(0,1)    ; bytes
000010B4 5820 100C               0000000C   1675          L     2,12(0,1)   ; len
                                            1676 * ***      rd_kafkap_bytes_t *kbytes;
                                            1677 * ***      int32_t klen;
                                            1678 * ***
                                            1679 * ***      if (!bytes && !len)
000010B8 B902 00F3                          1680          LTGR  15,3
000010BC 4770 C05A               000010CA   1681          BNZ   @L147
000010C0 1222                               1682          LTR   2,2
000010C2 4770 C05A               000010CA   1683          BNZ   @L147
                                            1684 * ***         len = -1;
000010C6 A728 FFFF               0000FFFF   1685          LHI   2,-1        ; -1
000010CA                                    1686 @L147    DS    0H
                                            1687 * ***
                                            1688 * ***      kbytes = (rd_kafkap_bytes_t *)rd_malloc(sizeof(*kbytes) + 4\
                                            1689 *  +
                                                                                                                           Page   38 
  Active Usings: @REGION_1323_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1690 * ***            (len == -1 ? 0 : len));
000010CA A72E FFFF               0000FFFF   1691          CHI   2,-1
000010CE 4770 C086               000010F6   1692          BNE   @L148
000010D2 A7F8 0000               00000000   1693          LHI   15,0        ; 0
000010D6 47F0 C088               000010F8   1694          B     @L149
000010E0                                    1695          DS    0D
000010E0 000000B8                           1696 @FRAMESIZE_1323 DC F'184'
000010E4 00000000
000010E8 00000000000004F0                   1697 @lit_1323_48 DC AD(rd_malloc)
000010F0 D200 2000 3000 00000000 00000000   1698 @lit_1323_50          MVC 0(1,2),0(3)
000010F6                                    1699 @L148    DS    0H
000010F6 18F2                               1700          LR    15,2
000010F8                                    1701 @L149    DS    0H
000010F8 B914 00FF                          1702          LGFR  15,15
000010FC A7FB 001C               0000001C   1703          AGHI  15,28
00001100 E3F0 D0B0 0024          000000B0   1704          STG   15,176(0,13)
00001106 4110 D0B0               000000B0   1705          LA    1,176(0,13)
0000110A E3F0 C078 0004          000010E8   1706          LG    15,@lit_1323_48 ; rd_malloc
00001110                                    1707 @@gen_label58 DS    0H
00001110 05EF                               1708          BALR  14,15
00001112                                    1709 @@gen_label59 DS    0H
                                            1710 * ***      kbytes->len = len;
00001112 5020 F000               00000000   1711          ST    2,0(0,15)   ; kbytes
                                            1712 * ***
                                            1713 * ***      klen = (len);
00001116 5020 D0A8               000000A8   1714          ST    2,168(0,13) ; klen
                                            1715 * ***      __memcpy((void *)(kbytes+1),&klen,4);
0000111A 4110 D0A8               000000A8   1716          LA    1,168(0,13)
0000111E 4140 F018               00000018   1717          LA    4,24(0,15)
00001122 D203 4000 1000 00000000 00000000   1718          MVC   0(4,4),0(1)
                                            1719 * ***
                                            1720 * ***      if (len == -1)
00001128 A72E FFFF               0000FFFF   1721          CHI   2,-1
0000112C 4770 C0CE               0000113E   1722          BNE   @L150
                                            1723 * ***         kbytes->data = ((void *)0);
00001130 A719 0000               00000000   1724          LGHI  1,0         ; 0
00001134 E310 F008 0024          00000008   1725          STG   1,8(0,15)   ; offset of data in rd_kafkap_bytes_s
0000113A 47F0 C11C               0000118C   1726          B     @L151
                                            1727 * ***      else {
0000113E                                    1728 @L150    DS    0H
                                            1729 * ***         kbytes->data = ((const char *)(kbytes+1))+4;
0000113E 4110 F01C               0000001C   1730          LA    1,28(0,15)
00001142 E310 F008 0024          00000008   1731          STG   1,8(0,15)   ; offset of data in rd_kafkap_bytes_s
                                            1732 * ***                   if (bytes)
00001148 B902 0013                          1733          LTGR  1,3
0000114C 4780 C11C               0000118C   1734          BZ    @L151
                                            1735 * ***                           __memcpy((void *)kbytes->data,bytes,le\
                                            1736 * n);
00001150 B914 0012                          1737          LGFR  1,2
00001154 E320 F008 0004          00000008   1738          LG    2,8(0,15)
0000115A B902 0011                          1739          LTGR  1,1
0000115E 4780 C11C               0000118C   1740          BZ    @@gen_label64
                                                                                                                           Page   39 
  Active Usings: @REGION_1323_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001162 A71B FFFF               0000FFFF   1741          AGHI  1,-1
00001166 EB41 0008 000A          00000008   1742          SRAG  4,1,8(0)
0000116C B902 0044                          1743          LTGR  4,4
00001170 4780 C118               00001188   1744          BZ    @@gen_label63
00001174                                    1745 @@gen_label62 DS 0H
00001174 D2FF 2000 3000 00000000 00000000   1746          MVC   0(256,2),0(3)
0000117A 4120 2100               00000100   1747          LA    2,256(0,2)
0000117E 4130 3100               00000100   1748          LA    3,256(0,3)
00001182 E340 C104 0046          00001174   1749          BCTG  4,@@gen_label62
00001188                                    1750 @@gen_label63 DS 0H
00001188 4410 C080               000010F0   1751          EX    1,@lit_1323_50
0000118C                                    1752 @@gen_label64 DS 0H
0000118C                                    1753 @L152    DS    0H
                                            1754 * ***      }
0000118C                                    1755 @L151    DS    0H
                                            1756 * ***
                                            1757 * ***      return kbytes;
                                            1758 * ***   }
                                            1759 * * **** Start of Epilogue
                                            1760          DCCEPIL
0000118C                                    1761+         ds 0h                                                          01-DCCEP
                                            1762+* Epilog
0000118C D707 D088 D088 00000088 00000088   1763+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001192 E3D0 D080 0004          00000080   1764+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001198 E3C0 D090 0004          00000090   1765+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000119E E3B0 C018 0004          00000018   1766+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000011A4 E3C0 B010 0021          00000010   1767+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000011AA E3E0 D008 0004          00000008   1768+         lg  14,8(0,13)          load up return address                 01-DCCEP
000011B0 EB1C D020 0004          00000020   1769+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000011B6 078E                               1770+         bcr 8,14                if same dsab, just return              01-DCCEP
000011B8 E3F0 D010 0024          00000010   1771+         stg 15,16(0,13)         save return code                       01-DCCEP
000011BE E300 D018 0024          00000018   1772+         stg 0,24(0,13)          save more return code                  01-DCCEP
000011C4 E3F0 D090 0004          00000090   1773+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000011CA E3F0 F018 0004          00000018   1774+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000011D0 47F0 F040               00000040   1775+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1776+* End of Epilog
                                            1777 * * **** End of Epilogue
                                            1778          DROP  12
                                            1779 *
                                            1780 *   DSECT for automatic variables in "rd_kafkap_bytes_new"
                                            1781 *      (FUNCTION #1323)
                                            1782 *
00000000                00000000 000000AC   1783 @AUTO#rd_kafkap_bytes_new DSECT
00000000                                    1784          DS    XL168
000000A8                                    1785 rd_kafkap_bytes_new#klen#0 DS 1F ; klen
                                            1786 *
000011D4                00000000 00005122   1787 @CODE    CSECT
                                            1788 *
                                            1789 *
                                            1790 *
                                            1791 * ....... start of rd_kafkap_bytes_copy
000011D4                                    1792 @LNAME1324 DS  0H
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000011D4 00000014                           1793          DC    X'00000014'
000011D8 99846D9281869281                   1794          DC    C'rd_kafkap_bytes_copy'
000011EC 00                                 1795          DC    X'00'
                                            1796 rd_kafkap_bytes_copy DCCPRLG CINDEX=1324,BASER=12,FRAME=184,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1324
                                            1797          macro
                                            1798          dccextrn &m
                                            1799          gblc    &$dccext(1000)
                                            1800          gbla    &$dccexti
                                            1801          lcla    &i
                                            1802 &$dccext(&$dccexti+1) setc    '&m'
                                            1803 &i       seta    1
                                            1804 .loop    aif    (&i gt &$dccexti).around
                                            1805          aif    ('&$dccext(&i)' eq '&m').getout
                                            1806 &i       seta    &i+1
                                            1807          ago     .loop
                                            1808 .around  anop
                                            1809 &$dccexti seta &$dccexti+1
                                            1810          extrn  &m
                                            1811 .getout  anop
                                            1812          mend
000011F0                                    1813+$eye0042    ds    0d                                                    02-DCCCA
000011F0 C4C3C3                             1814+         dc cl3'DCC'                                                    02-DCCCA
000011F3 01                                 1815+         dc xl1'01' format one                                          02-DCCCA
000011F4 00000000                           1816+         dc a(0)                                                        02-DCCCA
000011F8 0000000000001262                   1817+         dc ad(@PER_1324)                                               02-DCCCA
00001200 00000000000000B8                   1818+         dc ad(184)                                                     02-DCCCA
00001208 0000000000000000                   1819+         dc ad(0)                                                       02-DCCCA
00001210 0000000000001000                   1820+         dc ad(4096)                                                    02-DCCCA
00001218 20                                 1821+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001219 03                                 1822+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000121A 03                                 1823+         dc al1(3)                                                      02-DCCCA
0000121B 08                                 1824+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000121C 00                                 1825+         dc bl.8'00000000'                                              02-DCCCA
0000121D 000000                             1826+         dc al3(0)                                                      02-DCCCA
00001220 00000000000011D4                   1827+         dc ad(@LNAME1324)                                              02-DCCCA
00001228                                    1828+         ds 0d                                                          02-DCCCA
00001228 00000000000011F0                   1829+         dc ad($eye0042)                                                02-DCCCA
00001230 0000000000000000                   1830+         dc ad(0)                                                       02-DCCCA
00001238                                    1831+         ds    0d                                                       01-DCCPR
00001238                                    1832+rd_kafkap_bytes_copy ds 0d                                              01-DCCPR
00001238                                    1833+@REGION_1324_1 ds 0h                                                    01-DCCPR
00001238 EBEC D008 0024          00000008   1834+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000123E E3E0 D088 0004          00000088   1835+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001244 E3C0 D090 0004          00000090   1836+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000124A B904 002E                          1837+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000124E E3B0 C018 0004          00000018   1838+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001254 A7EB 00B8               000000B8   1839+         aghi  14,184              increase by frame size               01-DCCPR
00001258 E3E0 C020 0021          00000020   1840+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000125E 4720 B020               00000020   1841+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001262                                    1842+@PER_1324 ds   0h                                                       01-DCCPR
00001262 EBDE 2080 0024          00000080   1843+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page   41 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001268 E3C0 2090 0024          00000090   1844+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000126E B904 00D2                          1845+         lgr   13,2                set real frame pointer               01-DCCPR
00001272 B904 00CF                          1846+         lgr   12,15               set base reg                         01-DCCPR
                        00001238            1847+         using @REGION_1324_1,12                                        01-DCCPR
                                            1848 * ******* End of Prologue
                                            1849 * *
                                            1850 * ***           return rd_kafkap_bytes_new(
                                            1851 * ***                   (const char *)src->data, src->len);
00001276 E3F0 1000 0004          00000000   1852          LG    15,0(0,1)   ; src
0000127C E310 F008 0004          00000008   1853          LG    1,8(0,15)
00001282 E310 D0A8 0024          000000A8   1854          STG   1,168(0,13)
00001288 E3F0 F000 0014          00000000   1855          LGF   15,0(0,15)
0000128E E3F0 D0B0 0024          000000B0   1856          STG   15,176(0,13)
00001294 4110 D0A8               000000A8   1857          LA    1,168(0,13)
00001298 E3F0 C0B8 0004          000012F0   1858          LG    15,@lit_1324_52 ; rd_kafkap_bytes_new
0000129E                                    1859 @@gen_label65 DS    0H
0000129E 05EF                               1860          BALR  14,15
000012A0                                    1861 @@gen_label66 DS    0H
                                            1862 * ***   }
                                            1863 * * **** Start of Epilogue
                                            1864          DCCEPIL
000012A0                                    1865+         ds 0h                                                          01-DCCEP
                                            1866+* Epilog
000012A0 D707 D088 D088 00000088 00000088   1867+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000012A6 E3D0 D080 0004          00000080   1868+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000012AC E3C0 D090 0004          00000090   1869+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000012B2 E3B0 C018 0004          00000018   1870+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000012B8 E3C0 B010 0021          00000010   1871+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000012BE E3E0 D008 0004          00000008   1872+         lg  14,8(0,13)          load up return address                 01-DCCEP
000012C4 EB1C D020 0004          00000020   1873+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000012CA 078E                               1874+         bcr 8,14                if same dsab, just return              01-DCCEP
000012CC E3F0 D010 0024          00000010   1875+         stg 15,16(0,13)         save return code                       01-DCCEP
000012D2 E300 D018 0024          00000018   1876+         stg 0,24(0,13)          save more return code                  01-DCCEP
000012D8 E3F0 D090 0004          00000090   1877+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000012DE E3F0 F018 0004          00000018   1878+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000012E4 47F0 F040               00000040   1879+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1880+* End of Epilog
                                            1881 * * **** End of Epilogue
000012E8                                    1882          DS    0D
000012E8 000000B8                           1883 @FRAMESIZE_1324 DC F'184'
000012EC 00000000
000012F0 0000000000001070                   1884 @lit_1324_52 DC AD(rd_kafkap_bytes_new)
                                            1885          DROP  12
                                            1886 *
                                            1887 *   DSECT for automatic variables in "rd_kafkap_bytes_copy"
                                            1888 *      (FUNCTION #1324)
                                            1889 *
00000000                00000000 000000A8   1890 @AUTO#rd_kafkap_bytes_copy DSECT
00000000                                    1891          DS    XL168
                                            1892 *
000012F8                00000000 00005122   1893 @CODE    CSECT
                                            1894 *
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1895 *
                                            1896 *
                                            1897 * ....... start of rd_crc32_update
000012F8                                    1898 @LNAME1485 DS  0H
000012F8 0000000F                           1899          DC    X'0000000F'
000012FC 99846D839983F3F2                   1900          DC    C'rd_crc32_update'
0000130B 00                                 1901          DC    X'00'
                                            1902 rd_crc32_update DCCPRLG CINDEX=1485,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1485
                                            1903          macro
                                            1904          dccextrn &m
                                            1905          gblc    &$dccext(1000)
                                            1906          gbla    &$dccexti
                                            1907          lcla    &i
                                            1908 &$dccext(&$dccexti+1) setc    '&m'
                                            1909 &i       seta    1
                                            1910 .loop    aif    (&i gt &$dccexti).around
                                            1911          aif    ('&$dccext(&i)' eq '&m').getout
                                            1912 &i       seta    &i+1
                                            1913          ago     .loop
                                            1914 .around  anop
                                            1915 &$dccexti seta &$dccexti+1
                                            1916          extrn  &m
                                            1917 .getout  anop
                                            1918          mend
00001310                                    1919+$eye0045    ds    0d                                                    02-DCCCA
00001310 C4C3C3                             1920+         dc cl3'DCC'                                                    02-DCCCA
00001313 01                                 1921+         dc xl1'01' format one                                          02-DCCCA
00001314 00000000                           1922+         dc a(0)                                                        02-DCCCA
00001318 0000000000001382                   1923+         dc ad(@PER_1485)                                               02-DCCCA
00001320 00000000000000B0                   1924+         dc ad(176)                                                     02-DCCCA
00001328 0000000000000000                   1925+         dc ad(0)                                                       02-DCCCA
00001330 0000000000001000                   1926+         dc ad(4096)                                                    02-DCCCA
00001338 20                                 1927+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001339 03                                 1928+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000133A 03                                 1929+         dc al1(3)                                                      02-DCCCA
0000133B 08                                 1930+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000133C 00                                 1931+         dc bl.8'00000000'                                              02-DCCCA
0000133D 000000                             1932+         dc al3(0)                                                      02-DCCCA
00001340 00000000000012F8                   1933+         dc ad(@LNAME1485)                                              02-DCCCA
00001348                                    1934+         ds 0d                                                          02-DCCCA
00001348 0000000000001310                   1935+         dc ad($eye0045)                                                02-DCCCA
00001350 0000000000000000                   1936+         dc ad(0)                                                       02-DCCCA
00001358                                    1937+         ds    0d                                                       01-DCCPR
00001358                                    1938+rd_crc32_update ds 0d                                                   01-DCCPR
00001358                                    1939+@REGION_1485_1 ds 0h                                                    01-DCCPR
00001358 EBEC D008 0024          00000008   1940+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000135E E3E0 D088 0004          00000088   1941+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001364 E3C0 D090 0004          00000090   1942+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000136A B904 002E                          1943+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000136E E3B0 C018 0004          00000018   1944+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001374 A7EB 00B0               000000B0   1945+         aghi  14,176              increase by frame size               01-DCCPR
                                                                                                                           Page   43 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001378 E3E0 C020 0021          00000020   1946+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000137E 4720 B020               00000020   1947+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001382                                    1948+@PER_1485 ds   0h                                                       01-DCCPR
00001382 EBDE 2080 0024          00000080   1949+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001388 E3C0 2090 0024          00000090   1950+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000138E B904 00D2                          1951+         lgr   13,2                set real frame pointer               01-DCCPR
00001392 B904 00CF                          1952+         lgr   12,15               set base reg                         01-DCCPR
                        00001358            1953+         using @REGION_1485_1,12                                        01-DCCPR
                                            1954          DCCPRV REG=2      ; Get PRV from DVT
00001396 E320 B008 0004          00000008   1955+         LG 2,8(0,11)                                                   01-DCCPR
0000139C B904 0031                          1956          LGR   3,1         ; ptr to parm area
                                            1957 * ******* End of Prologue
                                            1958 * *
000013A0 58F0 3004               00000004   1959          L     15,4(0,3)   ; crc
000013A4 E310 3008 0004          00000008   1960          LG    1,8(0,3)    ; data
                                            1961 * ***
                                            1962 * ***
                                            1963 * ***
                                            1964 * ***
                                            1965 * ***       unsigned int tbl_idx;
                                            1966 * ***
                                            1967 * ***       while (data_len--) {
000013AA 47F0 C090               000013E8   1968          B     @L483
000013B0                                    1969          DS    0D
000013B0 000000B0                           1970 @FRAMESIZE_1485 DC F'176'
000013B4 00000000                           1971 @lit_1485_54 DC Q(crc_table)
000013B8                                    1972 @L482    DS    0H
                                            1973 * ***           tbl_idx = (crc ^ *data) & 0xff;
000013B8 E340 1000 0094          00000000   1974          LLC   4,0(0,1)
000013BE 185F                               1975          LR    5,15
000013C0 1754                               1976          XR    5,4
000013C2 C05B 0000 00FF                     1977          NILF  5,X'000000FF'
                                            1978 * ***           crc = (crc_table[tbl_idx] ^ (crc >> 8)) & 0xffffffff;
000013C8 B916 0045                          1979          LLGFR 4,5
000013CC E350 C05C 0016          000013B4   1980          LLGF  5,@lit_1485_54 ; crc_table
000013D2 EB44 0002 000D          00000002   1981          SLLG  4,4,2(0)    ; *0x4
000013D8 4145 4000               00000000   1982          LA    4,0(5,4)
000013DC 88F0 0008               00000008   1983          SRL   15,8(0)
000013E0 57F4 2000               00000000   1984          X     15,0(4,2)
                                            1985 * ***
                                            1986 * ***           data++;
000013E4 4110 1001               00000001   1987          LA    1,1(0,1)
                                            1988 * ***       }
000013E8                                    1989 @L483    DS    0H
000013E8 E340 3010 0004          00000010   1990          LG    4,16(0,3)   ; data_len
000013EE B904 0054                          1991          LGR   5,4
000013F2 A75B FFFF               0000FFFF   1992          AGHI  5,-1
000013F6 E350 3010 0024          00000010   1993          STG   5,16(0,3)   ; data_len
000013FC B902 0044                          1994          LTGR  4,4
00001400 4770 C060               000013B8   1995          BNZ   @L482
                                            1996 * ***       return crc & 0xffffffff;
00001404 B916 00FF                          1997          LLGFR 15,15
                                                                                                                           Page   44 
  Active Usings: @REGION_1485_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            1998 * ***
                                            1999 * ***   }
                                            2000 * * **** Start of Epilogue
                                            2001          DCCEPIL
00001408                                    2002+         ds 0h                                                          01-DCCEP
                                            2003+* Epilog
00001408 D707 D088 D088 00000088 00000088   2004+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000140E E3D0 D080 0004          00000080   2005+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001414 E3C0 D090 0004          00000090   2006+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000141A E3B0 C018 0004          00000018   2007+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001420 E3C0 B010 0021          00000010   2008+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001426 E3E0 D008 0004          00000008   2009+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000142C EB1C D020 0004          00000020   2010+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001432 078E                               2011+         bcr 8,14                if same dsab, just return              01-DCCEP
00001434 E3F0 D010 0024          00000010   2012+         stg 15,16(0,13)         save return code                       01-DCCEP
0000143A E300 D018 0024          00000018   2013+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001440 E3F0 D090 0004          00000090   2014+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001446 E3F0 F018 0004          00000018   2015+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000144C 47F0 F040               00000040   2016+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2017+* End of Epilog
                                            2018 * * **** End of Epilogue
                                            2019          DROP  12
                                            2020 *
                                            2021 *   DSECT for automatic variables in "rd_crc32_update"
                                            2022 *      (FUNCTION #1485)
                                            2023 *
00000000                00000000 000000AC   2024 @AUTO#rd_crc32_update DSECT
00000000                                    2025          DS    XL168
000000A8                                    2026 rd_crc32_update#tbl_idx#0 DS 1F ; tbl_idx
                                            2027 *
00001450                00000000 00005122   2028 @CODE    CSECT
                                            2029 *
                                            2030 *
                                            2031 *
                                            2032 * ....... start of rd_kafka_buf_write
00001450                                    2033 @LNAME1517 DS  0H
00001450 00000012                           2034          DC    X'00000012'
00001454 99846D9281869281                   2035          DC    C'rd_kafka_buf_write'
00001466 00                                 2036          DC    X'00'
                                            2037 rd_kafka_buf_write DCCPRLG CINDEX=1517,BASER=12,FRAME=200,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1517
                                            2038          macro
                                            2039          dccextrn &m
                                            2040          gblc    &$dccext(1000)
                                            2041          gbla    &$dccexti
                                            2042          lcla    &i
                                            2043 &$dccext(&$dccexti+1) setc    '&m'
                                            2044 &i       seta    1
                                            2045 .loop    aif    (&i gt &$dccexti).around
                                            2046          aif    ('&$dccext(&i)' eq '&m').getout
                                            2047 &i       seta    &i+1
                                            2048          ago     .loop
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2049 .around  anop
                                            2050 &$dccexti seta &$dccexti+1
                                            2051          extrn  &m
                                            2052 .getout  anop
                                            2053          mend
00001468                                    2054+$eye0049    ds    0d                                                    02-DCCCA
00001468 C4C3C3                             2055+         dc cl3'DCC'                                                    02-DCCCA
0000146B 01                                 2056+         dc xl1'01' format one                                          02-DCCCA
0000146C 00000000                           2057+         dc a(0)                                                        02-DCCCA
00001470 00000000000014DA                   2058+         dc ad(@PER_1517)                                               02-DCCCA
00001478 00000000000000C8                   2059+         dc ad(200)                                                     02-DCCCA
00001480 0000000000000000                   2060+         dc ad(0)                                                       02-DCCCA
00001488 0000000000001000                   2061+         dc ad(4096)                                                    02-DCCCA
00001490 20                                 2062+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001491 03                                 2063+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001492 03                                 2064+         dc al1(3)                                                      02-DCCCA
00001493 08                                 2065+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001494 00                                 2066+         dc bl.8'00000000'                                              02-DCCCA
00001495 000000                             2067+         dc al3(0)                                                      02-DCCCA
00001498 0000000000001450                   2068+         dc ad(@LNAME1517)                                              02-DCCCA
000014A0                                    2069+         ds 0d                                                          02-DCCCA
000014A0 0000000000001468                   2070+         dc ad($eye0049)                                                02-DCCCA
000014A8 0000000000000000                   2071+         dc ad(0)                                                       02-DCCCA
000014B0                                    2072+         ds    0d                                                       01-DCCPR
000014B0                                    2073+rd_kafka_buf_write ds 0d                                                01-DCCPR
000014B0                                    2074+@REGION_1517_1 ds 0h                                                    01-DCCPR
000014B0 EBEC D008 0024          00000008   2075+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000014B6 E3E0 D088 0004          00000088   2076+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000014BC E3C0 D090 0004          00000090   2077+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000014C2 B904 002E                          2078+         lgr   2,14                copy addr of our savearea            01-DCCPR
000014C6 E3B0 C018 0004          00000018   2079+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000014CC A7EB 00C8               000000C8   2080+         aghi  14,200              increase by frame size               01-DCCPR
000014D0 E3E0 C020 0021          00000020   2081+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000014D6 4720 B020               00000020   2082+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000014DA                                    2083+@PER_1517 ds   0h                                                       01-DCCPR
000014DA EBDE 2080 0024          00000080   2084+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000014E0 E3C0 2090 0024          00000090   2085+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000014E6 B904 00D2                          2086+         lgr   13,2                set real frame pointer               01-DCCPR
000014EA B904 00CF                          2087+         lgr   12,15               set base reg                         01-DCCPR
                        000014B0            2088+         using @REGION_1517_1,12                                        01-DCCPR
000014EE B904 0041                          2089          LGR   4,1         ; ptr to parm area
                                            2090 * ******* End of Prologue
                                            2091 * *
000014F2 E320 4000 0004          00000000   2092          LG    2,0(0,4)    ; rkbuf
                                            2093 * ***       size_t r;
                                            2094 * ***
                                            2095 * ***       r = rd_buf_write(&rkbuf->rkbuf_buf, data, len);
000014F8 41F0 2028               00000028   2096          LA    15,40(0,2)
000014FC E3F0 D0B0 0024          000000B0   2097          STG   15,176(0,13)
00001502 E3F0 4008 0004          00000008   2098          LG    15,8(0,4)   ; data
00001508 E3F0 D0B8 0024          000000B8   2099          STG   15,184(0,13)
0000150E E3F0 4010 0004          00000010   2100          LG    15,16(0,4)  ; len
                                                                                                                           Page   46 
  Active Usings: @REGION_1517_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001514 E3F0 D0C0 0024          000000C0   2101          STG   15,192(0,13)
0000151A 4110 D0B0               000000B0   2102          LA    1,176(0,13)
0000151E E3F0 C110 0004          000015C0   2103          LG    15,@lit_1517_56 ; rd_buf_write
00001524                                    2104 @@gen_label68 DS    0H
00001524 05EF                               2105          BALR  14,15
00001526                                    2106 @@gen_label69 DS    0H
00001526 B904 003F                          2107          LGR   3,15
                                            2108 * ***
                                            2109 * ***       if (rkbuf->rkbuf_flags & 0x4)
0000152A 9104 2023      00000023 00000004   2110          TM    35(2),4
0000152E 4780 C0B6               00001566   2111          BZ    @L492
                                            2112 * ***           rkbuf->rkbuf_crc = rd_crc32_update(rkbuf->rkbuf_crc, d\
                                            2113 * ata, len);
00001532 E3F0 20B0 0016          000000B0   2114          LLGF  15,176(0,2)
00001538 E3F0 D0B0 0024          000000B0   2115          STG   15,176(0,13)
0000153E E3F0 4008 0004          00000008   2116          LG    15,8(0,4)   ; data
00001544 E3F0 D0B8 0024          000000B8   2117          STG   15,184(0,13)
0000154A E3F0 4010 0004          00000010   2118          LG    15,16(0,4)  ; len
00001550 E3F0 D0C0 0024          000000C0   2119          STG   15,192(0,13)
00001556 4110 D0B0               000000B0   2120          LA    1,176(0,13)
0000155A E3F0 C118 0004          000015C8   2121          LG    15,@lit_1517_57 ; rd_crc32_update
00001560                                    2122 @@gen_label71 DS    0H
00001560 05EF                               2123          BALR  14,15
00001562                                    2124 @@gen_label72 DS    0H
00001562 50F0 20B0               000000B0   2125          ST    15,176(0,2)
00001566                                    2126 @L492    DS    0H
                                            2127 * ***
                                            2128 * ***       return r;
00001566 B904 00F3                          2129          LGR   15,3
                                            2130 * ***   }
                                            2131 * * **** Start of Epilogue
                                            2132          DCCEPIL
0000156A                                    2133+         ds 0h                                                          01-DCCEP
                                            2134+* Epilog
0000156A D707 D088 D088 00000088 00000088   2135+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001570 E3D0 D080 0004          00000080   2136+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001576 E3C0 D090 0004          00000090   2137+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000157C E3B0 C018 0004          00000018   2138+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001582 E3C0 B010 0021          00000010   2139+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001588 E3E0 D008 0004          00000008   2140+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000158E EB1C D020 0004          00000020   2141+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001594 078E                               2142+         bcr 8,14                if same dsab, just return              01-DCCEP
00001596 E3F0 D010 0024          00000010   2143+         stg 15,16(0,13)         save return code                       01-DCCEP
0000159C E300 D018 0024          00000018   2144+         stg 0,24(0,13)          save more return code                  01-DCCEP
000015A2 E3F0 D090 0004          00000090   2145+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000015A8 E3F0 F018 0004          00000018   2146+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000015AE 47F0 F040               00000040   2147+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2148+* End of Epilog
                                            2149 * * **** End of Epilogue
000015B8                                    2150          DS    0D
000015B8 000000C8                           2151 @FRAMESIZE_1517 DC F'200'
000015BC 00000000
                                                                                                                           Page   47 
  Active Usings: @REGION_1517_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000015C0 0000000000000000                   2152 @lit_1517_56 DC AD(rd_buf_write)
000015C8 0000000000001358                   2153 @lit_1517_57 DC AD(rd_crc32_update)
                                            2154          DROP  12
                                            2155 *
                                            2156 *   DSECT for automatic variables in "rd_kafka_buf_write"
                                            2157 *      (FUNCTION #1517)
                                            2158 *
00000000                00000000 000000B0   2159 @AUTO#rd_kafka_buf_write DSECT
00000000                                    2160          DS    XL168
000000A8                                    2161 rd_kafka_buf_write#r#0 DS 8XL1 ; r
                                            2162 *
000015D0                00000000 00005122   2163 @CODE    CSECT
                                            2164 *
                                            2165 *
                                            2166 *
                                            2167 * ....... start of rd_kafka_buf_write_i16
000015D0                                    2168 @LNAME1521 DS  0H
000015D0 00000016                           2169          DC    X'00000016'
000015D4 99846D9281869281                   2170          DC    C'rd_kafka_buf_write_i16'
000015EA 00                                 2171          DC    X'00'
                                            2172 rd_kafka_buf_write_i16 DCCPRLG CINDEX=1521,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1521
                                            2173          macro
                                            2174          dccextrn &m
                                            2175          gblc    &$dccext(1000)
                                            2176          gbla    &$dccexti
                                            2177          lcla    &i
                                            2178 &$dccext(&$dccexti+1) setc    '&m'
                                            2179 &i       seta    1
                                            2180 .loop    aif    (&i gt &$dccexti).around
                                            2181          aif    ('&$dccext(&i)' eq '&m').getout
                                            2182 &i       seta    &i+1
                                            2183          ago     .loop
                                            2184 .around  anop
                                            2185 &$dccexti seta &$dccexti+1
                                            2186          extrn  &m
                                            2187 .getout  anop
                                            2188          mend
000015F0                                    2189+$eye0052    ds    0d                                                    02-DCCCA
000015F0 C4C3C3                             2190+         dc cl3'DCC'                                                    02-DCCCA
000015F3 01                                 2191+         dc xl1'01' format one                                          02-DCCCA
000015F4 00000000                           2192+         dc a(0)                                                        02-DCCCA
000015F8 0000000000001662                   2193+         dc ad(@PER_1521)                                               02-DCCCA
00001600 00000000000000C0                   2194+         dc ad(192)                                                     02-DCCCA
00001608 0000000000000000                   2195+         dc ad(0)                                                       02-DCCCA
00001610 0000000000001000                   2196+         dc ad(4096)                                                    02-DCCCA
00001618 20                                 2197+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001619 03                                 2198+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000161A 03                                 2199+         dc al1(3)                                                      02-DCCCA
0000161B 08                                 2200+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000161C 00                                 2201+         dc bl.8'00000000'                                              02-DCCCA
0000161D 000000                             2202+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001620 00000000000015D0                   2203+         dc ad(@LNAME1521)                                              02-DCCCA
00001628                                    2204+         ds 0d                                                          02-DCCCA
00001628 00000000000015F0                   2205+         dc ad($eye0052)                                                02-DCCCA
00001630 0000000000000000                   2206+         dc ad(0)                                                       02-DCCCA
00001638                                    2207+         ds    0d                                                       01-DCCPR
00001638                                    2208+rd_kafka_buf_write_i16 ds 0d                                            01-DCCPR
00001638                                    2209+@REGION_1521_1 ds 0h                                                    01-DCCPR
00001638 EBEC D008 0024          00000008   2210+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000163E E3E0 D088 0004          00000088   2211+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001644 E3C0 D090 0004          00000090   2212+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000164A B904 002E                          2213+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000164E E3B0 C018 0004          00000018   2214+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001654 A7EB 00C0               000000C0   2215+         aghi  14,192              increase by frame size               01-DCCPR
00001658 E3E0 C020 0021          00000020   2216+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000165E 4720 B020               00000020   2217+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001662                                    2218+@PER_1521 ds   0h                                                       01-DCCPR
00001662 EBDE 2080 0024          00000080   2219+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001668 E3C0 2090 0024          00000090   2220+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000166E B904 00D2                          2221+         lgr   13,2                set real frame pointer               01-DCCPR
00001672 B904 00CF                          2222+         lgr   12,15               set base reg                         01-DCCPR
                        00001638            2223+         using @REGION_1521_1,12                                        01-DCCPR
                                            2224 * ******* End of Prologue
                                            2225 * *
                                            2226 * ***       v = (v);
00001676 48F0 100E               0000000E   2227          LH    15,14(0,1)  ; v
0000167A 40F0 100E               0000000E   2228          STH   15,14(0,1)  ; v
                                            2229 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
0000167E E3F0 1000 0004          00000000   2230          LG    15,0(0,1)   ; rkbuf
00001684 E3F0 D0A8 0024          000000A8   2231          STG   15,168(0,13)
0000168A 41F0 100E               0000000E   2232          LA    15,14(0,1)
0000168E E3F0 D0B0 0024          000000B0   2233          STG   15,176(0,13)
00001694 E548 D0B8 0002          000000B8   2234          MVGHI 184(13),2
0000169A 4110 D0A8               000000A8   2235          LA    1,168(0,13)
0000169E E3F0 C0C0 0004          000016F8   2236          LG    15,@lit_1521_59 ; rd_kafka_buf_write
000016A4                                    2237 @@gen_label73 DS    0H
000016A4 05EF                               2238          BALR  14,15
000016A6                                    2239 @@gen_label74 DS    0H
                                            2240 * ***   }
                                            2241 * * **** Start of Epilogue
                                            2242          DCCEPIL
000016A6                                    2243+         ds 0h                                                          01-DCCEP
                                            2244+* Epilog
000016A6 D707 D088 D088 00000088 00000088   2245+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000016AC E3D0 D080 0004          00000080   2246+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000016B2 E3C0 D090 0004          00000090   2247+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000016B8 E3B0 C018 0004          00000018   2248+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000016BE E3C0 B010 0021          00000010   2249+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000016C4 E3E0 D008 0004          00000008   2250+         lg  14,8(0,13)          load up return address                 01-DCCEP
000016CA EB1C D020 0004          00000020   2251+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000016D0 078E                               2252+         bcr 8,14                if same dsab, just return              01-DCCEP
000016D2 E3F0 D010 0024          00000010   2253+         stg 15,16(0,13)         save return code                       01-DCCEP
000016D8 E300 D018 0024          00000018   2254+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   49 
  Active Usings: @REGION_1521_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000016DE E3F0 D090 0004          00000090   2255+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000016E4 E3F0 F018 0004          00000018   2256+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000016EA 47F0 F040               00000040   2257+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2258+* End of Epilog
                                            2259 * * **** End of Epilogue
000016F0                                    2260          DS    0D
000016F0 000000C0                           2261 @FRAMESIZE_1521 DC F'192'
000016F4 00000000
000016F8 00000000000014B0                   2262 @lit_1521_59 DC AD(rd_kafka_buf_write)
                                            2263          DROP  12
                                            2264 *
                                            2265 *   DSECT for automatic variables in "rd_kafka_buf_write_i16"
                                            2266 *      (FUNCTION #1521)
                                            2267 *
00000000                00000000 000000A8   2268 @AUTO#rd_kafka_buf_write_i16 DSECT
00000000                                    2269          DS    XL168
                                            2270 *
00001700                00000000 00005122   2271 @CODE    CSECT
                                            2272 *
                                            2273 *
                                            2274 *
                                            2275 * ....... start of rd_kafka_buf_write_i32
00001700                                    2276 @LNAME1523 DS  0H
00001700 00000016                           2277          DC    X'00000016'
00001704 99846D9281869281                   2278          DC    C'rd_kafka_buf_write_i32'
0000171A 00                                 2279          DC    X'00'
                                            2280 rd_kafka_buf_write_i32 DCCPRLG CINDEX=1523,BASER=12,FRAME=192,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1523
                                            2281          macro
                                            2282          dccextrn &m
                                            2283          gblc    &$dccext(1000)
                                            2284          gbla    &$dccexti
                                            2285          lcla    &i
                                            2286 &$dccext(&$dccexti+1) setc    '&m'
                                            2287 &i       seta    1
                                            2288 .loop    aif    (&i gt &$dccexti).around
                                            2289          aif    ('&$dccext(&i)' eq '&m').getout
                                            2290 &i       seta    &i+1
                                            2291          ago     .loop
                                            2292 .around  anop
                                            2293 &$dccexti seta &$dccexti+1
                                            2294          extrn  &m
                                            2295 .getout  anop
                                            2296          mend
00001720                                    2297+$eye0055    ds    0d                                                    02-DCCCA
00001720 C4C3C3                             2298+         dc cl3'DCC'                                                    02-DCCCA
00001723 01                                 2299+         dc xl1'01' format one                                          02-DCCCA
00001724 00000000                           2300+         dc a(0)                                                        02-DCCCA
00001728 0000000000001792                   2301+         dc ad(@PER_1523)                                               02-DCCCA
00001730 00000000000000C0                   2302+         dc ad(192)                                                     02-DCCCA
00001738 0000000000000000                   2303+         dc ad(0)                                                       02-DCCCA
00001740 0000000000001000                   2304+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001748 20                                 2305+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001749 03                                 2306+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000174A 03                                 2307+         dc al1(3)                                                      02-DCCCA
0000174B 08                                 2308+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000174C 00                                 2309+         dc bl.8'00000000'                                              02-DCCCA
0000174D 000000                             2310+         dc al3(0)                                                      02-DCCCA
00001750 0000000000001700                   2311+         dc ad(@LNAME1523)                                              02-DCCCA
00001758                                    2312+         ds 0d                                                          02-DCCCA
00001758 0000000000001720                   2313+         dc ad($eye0055)                                                02-DCCCA
00001760 0000000000000000                   2314+         dc ad(0)                                                       02-DCCCA
00001768                                    2315+         ds    0d                                                       01-DCCPR
00001768                                    2316+rd_kafka_buf_write_i32 ds 0d                                            01-DCCPR
00001768                                    2317+@REGION_1523_1 ds 0h                                                    01-DCCPR
00001768 EBEC D008 0024          00000008   2318+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000176E E3E0 D088 0004          00000088   2319+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001774 E3C0 D090 0004          00000090   2320+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000177A B904 002E                          2321+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000177E E3B0 C018 0004          00000018   2322+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001784 A7EB 00C0               000000C0   2323+         aghi  14,192              increase by frame size               01-DCCPR
00001788 E3E0 C020 0021          00000020   2324+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000178E 4720 B020               00000020   2325+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001792                                    2326+@PER_1523 ds   0h                                                       01-DCCPR
00001792 EBDE 2080 0024          00000080   2327+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001798 E3C0 2090 0024          00000090   2328+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000179E B904 00D2                          2329+         lgr   13,2                set real frame pointer               01-DCCPR
000017A2 B904 00CF                          2330+         lgr   12,15               set base reg                         01-DCCPR
                        00001768            2331+         using @REGION_1523_1,12                                        01-DCCPR
                                            2332 * ******* End of Prologue
                                            2333 * *
                                            2334 * ***       v = (int32_t)(v);
000017A6 58F0 100C               0000000C   2335          L     15,12(0,1)  ; v
                                            2336 * ***       return rd_kafka_buf_write(rkbuf, &v, sizeof(v));
000017AA E3F0 1000 0004          00000000   2337          LG    15,0(0,1)   ; rkbuf
000017B0 E3F0 D0A8 0024          000000A8   2338          STG   15,168(0,13)
000017B6 41F0 100C               0000000C   2339          LA    15,12(0,1)
000017BA E3F0 D0B0 0024          000000B0   2340          STG   15,176(0,13)
000017C0 E548 D0B8 0004          000000B8   2341          MVGHI 184(13),4
000017C6 4110 D0A8               000000A8   2342          LA    1,168(0,13)
000017CA E3F0 C0C0 0004          00001828   2343          LG    15,@lit_1523_61 ; rd_kafka_buf_write
000017D0                                    2344 @@gen_label75 DS    0H
000017D0 05EF                               2345          BALR  14,15
000017D2                                    2346 @@gen_label76 DS    0H
                                            2347 * ***   }
                                            2348 * * **** Start of Epilogue
                                            2349          DCCEPIL
000017D2                                    2350+         ds 0h                                                          01-DCCEP
                                            2351+* Epilog
000017D2 D707 D088 D088 00000088 00000088   2352+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000017D8 E3D0 D080 0004          00000080   2353+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000017DE E3C0 D090 0004          00000090   2354+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000017E4 E3B0 C018 0004          00000018   2355+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000017EA E3C0 B010 0021          00000010   2356+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   51 
  Active Usings: @REGION_1523_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000017F0 E3E0 D008 0004          00000008   2357+         lg  14,8(0,13)          load up return address                 01-DCCEP
000017F6 EB1C D020 0004          00000020   2358+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000017FC 078E                               2359+         bcr 8,14                if same dsab, just return              01-DCCEP
000017FE E3F0 D010 0024          00000010   2360+         stg 15,16(0,13)         save return code                       01-DCCEP
00001804 E300 D018 0024          00000018   2361+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000180A E3F0 D090 0004          00000090   2362+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001810 E3F0 F018 0004          00000018   2363+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001816 47F0 F040               00000040   2364+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2365+* End of Epilog
                                            2366 * * **** End of Epilogue
00001820                                    2367          DS    0D
00001820 000000C0                           2368 @FRAMESIZE_1523 DC F'192'
00001824 00000000
00001828 00000000000014B0                   2369 @lit_1523_61 DC AD(rd_kafka_buf_write)
                                            2370          DROP  12
                                            2371 *
                                            2372 *   DSECT for automatic variables in "rd_kafka_buf_write_i32"
                                            2373 *      (FUNCTION #1523)
                                            2374 *
00000000                00000000 000000A8   2375 @AUTO#rd_kafka_buf_write_i32 DSECT
00000000                                    2376          DS    XL168
                                            2377 *
00001830                00000000 00005122   2378 @CODE    CSECT
                                            2379 *
                                            2380 *
                                            2381 *
                                            2382 * ....... start of rd_kafka_buf_write_uvarint
00001830                                    2383 @LNAME1530 DS  0H
00001830 0000001A                           2384          DC    X'0000001A'
00001834 99846D9281869281                   2385          DC    C'rd_kafka_buf_write_uvarint'
0000184E 00                                 2386          DC    X'00'
                                            2387 rd_kafka_buf_write_uvarint DCCPRLG CINDEX=1530,BASER=12,FRAME=208,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1530
                                            2388          macro
                                            2389          dccextrn &m
                                            2390          gblc    &$dccext(1000)
                                            2391          gbla    &$dccexti
                                            2392          lcla    &i
                                            2393 &$dccext(&$dccexti+1) setc    '&m'
                                            2394 &i       seta    1
                                            2395 .loop    aif    (&i gt &$dccexti).around
                                            2396          aif    ('&$dccext(&i)' eq '&m').getout
                                            2397 &i       seta    &i+1
                                            2398          ago     .loop
                                            2399 .around  anop
                                            2400 &$dccexti seta &$dccexti+1
                                            2401          extrn  &m
                                            2402 .getout  anop
                                            2403          mend
00001850                                    2404+$eye0058    ds    0d                                                    02-DCCCA
00001850 C4C3C3                             2405+         dc cl3'DCC'                                                    02-DCCCA
00001853 01                                 2406+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   52 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001854 00000000                           2407+         dc a(0)                                                        02-DCCCA
00001858 00000000000018C2                   2408+         dc ad(@PER_1530)                                               02-DCCCA
00001860 00000000000000D0                   2409+         dc ad(208)                                                     02-DCCCA
00001868 0000000000000000                   2410+         dc ad(0)                                                       02-DCCCA
00001870 0000000000001000                   2411+         dc ad(4096)                                                    02-DCCCA
00001878 20                                 2412+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001879 03                                 2413+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000187A 03                                 2414+         dc al1(3)                                                      02-DCCCA
0000187B 08                                 2415+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000187C 00                                 2416+         dc bl.8'00000000'                                              02-DCCCA
0000187D 000000                             2417+         dc al3(0)                                                      02-DCCCA
00001880 0000000000001830                   2418+         dc ad(@LNAME1530)                                              02-DCCCA
00001888                                    2419+         ds 0d                                                          02-DCCCA
00001888 0000000000001850                   2420+         dc ad($eye0058)                                                02-DCCCA
00001890 0000000000000000                   2421+         dc ad(0)                                                       02-DCCCA
00001898                                    2422+         ds    0d                                                       01-DCCPR
00001898                                    2423+rd_kafka_buf_write_uvarint ds 0d                                        01-DCCPR
00001898                                    2424+@REGION_1530_1 ds 0h                                                    01-DCCPR
00001898 EBEC D008 0024          00000008   2425+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000189E E3E0 D088 0004          00000088   2426+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000018A4 E3C0 D090 0004          00000090   2427+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000018AA B904 002E                          2428+         lgr   2,14                copy addr of our savearea            01-DCCPR
000018AE E3B0 C018 0004          00000018   2429+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000018B4 A7EB 00D0               000000D0   2430+         aghi  14,208              increase by frame size               01-DCCPR
000018B8 E3E0 C020 0021          00000020   2431+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000018BE 4720 B020               00000020   2432+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000018C2                                    2433+@PER_1530 ds   0h                                                       01-DCCPR
000018C2 EBDE 2080 0024          00000080   2434+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000018C8 E3C0 2090 0024          00000090   2435+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000018CE B904 00D2                          2436+         lgr   13,2                set real frame pointer               01-DCCPR
000018D2 B904 00CF                          2437+         lgr   12,15               set base reg                         01-DCCPR
                        00001898            2438+         using @REGION_1530_1,12                                        01-DCCPR
000018D6 B904 0021                          2439          LGR   2,1         ; ptr to parm area
                                            2440 * ******* End of Prologue
                                            2441 * *
                                            2442 * ***       char varint[(sizeof(v) + 1 + (sizeof(v)/7))];
                                            2443 * ***       size_t sz;
                                            2444 * ***
                                            2445 * ***       sz = rd_uvarint_enc_u64(varint, sizeof(varint), v);
000018DA 41F0 D0A8               000000A8   2446          LA    15,168(0,13)
000018DE E3F0 D0B8 0024          000000B8   2447          STG   15,184(0,13)
000018E4 E548 D0C0 000A          000000C0   2448          MVGHI 192(13),10
000018EA E3F0 2008 0004          00000008   2449          LG    15,8(0,2)   ; v
000018F0 E3F0 D0C8 0024          000000C8   2450          STG   15,200(0,13)
000018F6 4110 D0B8               000000B8   2451          LA    1,184(0,13)
000018FA E3F0 C0E8 0004          00001980   2452          LG    15,@lit_1530_63 ; rd_uvarint_enc_u64
00001900                                    2453 @@gen_label77 DS    0H
00001900 05EF                               2454          BALR  14,15
00001902                                    2455 @@gen_label78 DS    0H
                                            2456 * ***
                                            2457 * ***       return rd_kafka_buf_write(rkbuf, varint, sz);
00001902 E310 2000 0004          00000000   2458          LG    1,0(0,2)    ; rkbuf
                                                                                                                           Page   53 
  Active Usings: @REGION_1530_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001908 E310 D0B8 0024          000000B8   2459          STG   1,184(0,13)
0000190E 4110 D0A8               000000A8   2460          LA    1,168(0,13)
00001912 E310 D0C0 0024          000000C0   2461          STG   1,192(0,13)
00001918 E3F0 D0C8 0024          000000C8   2462          STG   15,200(0,13)
0000191E 4110 D0B8               000000B8   2463          LA    1,184(0,13)
00001922 E3F0 C0F0 0004          00001988   2464          LG    15,@lit_1530_64 ; rd_kafka_buf_write
00001928                                    2465 @@gen_label79 DS    0H
00001928 05EF                               2466          BALR  14,15
0000192A                                    2467 @@gen_label80 DS    0H
                                            2468 * ***   }
                                            2469 * * **** Start of Epilogue
                                            2470          DCCEPIL
0000192A                                    2471+         ds 0h                                                          01-DCCEP
                                            2472+* Epilog
0000192A D707 D088 D088 00000088 00000088   2473+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001930 E3D0 D080 0004          00000080   2474+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001936 E3C0 D090 0004          00000090   2475+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000193C E3B0 C018 0004          00000018   2476+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001942 E3C0 B010 0021          00000010   2477+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001948 E3E0 D008 0004          00000008   2478+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000194E EB1C D020 0004          00000020   2479+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001954 078E                               2480+         bcr 8,14                if same dsab, just return              01-DCCEP
00001956 E3F0 D010 0024          00000010   2481+         stg 15,16(0,13)         save return code                       01-DCCEP
0000195C E300 D018 0024          00000018   2482+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001962 E3F0 D090 0004          00000090   2483+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001968 E3F0 F018 0004          00000018   2484+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000196E 47F0 F040               00000040   2485+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2486+* End of Epilog
                                            2487 * * **** End of Epilogue
00001978                                    2488          DS    0D
00001978 000000D0                           2489 @FRAMESIZE_1530 DC F'208'
0000197C 00000000
00001980 0000000000000D30                   2490 @lit_1530_63 DC AD(rd_uvarint_enc_u64)
00001988 00000000000014B0                   2491 @lit_1530_64 DC AD(rd_kafka_buf_write)
                                            2492          DROP  12
                                            2493 *
                                            2494 *   DSECT for automatic variables in "rd_kafka_buf_write_uvarint"
                                            2495 *      (FUNCTION #1530)
                                            2496 *
00000000                00000000 000000B2   2497 @AUTO#rd_kafka_buf_write_uvarint DSECT
00000000                                    2498          DS    XL168
000000A8                                    2499 rd_kafka_buf_write_uvarint#sz#0 DS 8XL1 ; sz
000000B0                000000B0 000000A8   2500          ORG   @AUTO#rd_kafka_buf_write_uvarint+168
000000A8                                    2501 rd_kafka_buf_write_uvarint#varint#0 DS 10XL1 ; varint
                                            2502 *
00001990                00000000 00005122   2503 @CODE    CSECT
                                            2504 *
                                            2505 *
                                            2506 *
                                            2507 * ....... start of rd_kafka_buf_write_str
00001990                                    2508 @LNAME1532 DS  0H
00001990 00000016                           2509          DC    X'00000016'
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001994 99846D9281869281                   2510          DC    C'rd_kafka_buf_write_str'
000019AA 00                                 2511          DC    X'00'
                                            2512 rd_kafka_buf_write_str DCCPRLG CINDEX=1532,BASER=12,FRAME=216,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1532
                                            2513          macro
                                            2514          dccextrn &m
                                            2515          gblc    &$dccext(1000)
                                            2516          gbla    &$dccexti
                                            2517          lcla    &i
                                            2518 &$dccext(&$dccexti+1) setc    '&m'
                                            2519 &i       seta    1
                                            2520 .loop    aif    (&i gt &$dccexti).around
                                            2521          aif    ('&$dccext(&i)' eq '&m').getout
                                            2522 &i       seta    &i+1
                                            2523          ago     .loop
                                            2524 .around  anop
                                            2525 &$dccexti seta &$dccexti+1
                                            2526          extrn  &m
                                            2527 .getout  anop
                                            2528          mend
000019B0                                    2529+$eye0061    ds    0d                                                    02-DCCCA
000019B0 C4C3C3                             2530+         dc cl3'DCC'                                                    02-DCCCA
000019B3 01                                 2531+         dc xl1'01' format one                                          02-DCCCA
000019B4 00000000                           2532+         dc a(0)                                                        02-DCCCA
000019B8 0000000000001A22                   2533+         dc ad(@PER_1532)                                               02-DCCCA
000019C0 00000000000000D8                   2534+         dc ad(216)                                                     02-DCCCA
000019C8 0000000000000000                   2535+         dc ad(0)                                                       02-DCCCA
000019D0 0000000000001000                   2536+         dc ad(4096)                                                    02-DCCCA
000019D8 20                                 2537+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000019D9 03                                 2538+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000019DA 03                                 2539+         dc al1(3)                                                      02-DCCCA
000019DB 08                                 2540+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000019DC 00                                 2541+         dc bl.8'00000000'                                              02-DCCCA
000019DD 000000                             2542+         dc al3(0)                                                      02-DCCCA
000019E0 0000000000001990                   2543+         dc ad(@LNAME1532)                                              02-DCCCA
000019E8                                    2544+         ds 0d                                                          02-DCCCA
000019E8 00000000000019B0                   2545+         dc ad($eye0061)                                                02-DCCCA
000019F0 0000000000000000                   2546+         dc ad(0)                                                       02-DCCCA
000019F8                                    2547+         ds    0d                                                       01-DCCPR
000019F8                                    2548+rd_kafka_buf_write_str ds 0d                                            01-DCCPR
000019F8                                    2549+@REGION_1532_1 ds 0h                                                    01-DCCPR
000019F8 EBEC D008 0024          00000008   2550+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000019FE E3E0 D088 0004          00000088   2551+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001A04 E3C0 D090 0004          00000090   2552+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001A0A B904 002E                          2553+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001A0E E3B0 C018 0004          00000018   2554+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001A14 A7EB 00D8               000000D8   2555+         aghi  14,216              increase by frame size               01-DCCPR
00001A18 E3E0 C020 0021          00000020   2556+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001A1E 4720 B020               00000020   2557+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001A22                                    2558+@PER_1532 ds   0h                                                       01-DCCPR
00001A22 EBDE 2080 0024          00000080   2559+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001A28 E3C0 2090 0024          00000090   2560+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   55 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001A2E B904 00D2                          2561+         lgr   13,2                set real frame pointer               01-DCCPR
00001A32 B904 00CF                          2562+         lgr   12,15               set base reg                         01-DCCPR
                        000019F8            2563+         using @REGION_1532_1,12                                        01-DCCPR
                                            2564 * ******* End of Prologue
                                            2565 * *
00001A36 EB45 1000 0004          00000000   2566          LMG   4,5,0(1)    ; rkbuf
00001A3C E320 1010 0004          00000010   2567          LG    2,16(0,1)   ; len
                                            2568 * ***       size_t r;
                                            2569 * ***
                                            2570 * ***
                                            2571 * ***       size_t ulen;
                                            2572 * ***       size_t alen;
                                            2573 * ***       alen = ((len == -1) ? __strlen(str) : len);
00001A42 A72F FFFF               0000FFFF   2574          CGHI  2,-1
00001A46 4770 C0A8               00001AA0   2575          BNE   @L515
00001A4A B904 00F5                          2576          LGR   15,5
00001A4E A709 0000               00000000   2577          LGHI  0,0
00001A52                                    2578 @@gen_label82 DS 0H
00001A52 B25E 000F                          2579          SRST  0,15
00001A56 4710 C05A               00001A52   2580          BC  1,@@gen_label82
00001A5A B90B 0005                          2581          SLGR  0,5
00001A5E 47F0 C0AC               00001AA4   2582          B     @L516
00001A68                                    2583          DS    0D
00001A68 000000D8                           2584 @FRAMESIZE_1532 DC F'216'
00001A6C 00000000
00001A70 0000000000000000                   2585 @lit_1532_66 DC AD(calloc)
00001A78 0000000000000060                   2586 @lit_1532_67 DC AD(ebcdic_2_utf8)
00001A80 0000000000001638                   2587 @lit_1532_68 DC AD(rd_kafka_buf_write_i16)
00001A88 00000000000014B0                   2588 @lit_1532_69 DC AD(rd_kafka_buf_write)
00001A90 0000000000000000                   2589 @lit_1532_70 DC AD(free)
00001A98 0000000000001898                   2590 @lit_1532_72 DC AD(rd_kafka_buf_write_uvarint)
00001AA0                                    2591 @L515    DS    0H
00001AA0 B904 0002                          2592          LGR   0,2
00001AA4                                    2593 @L516    DS    0H
00001AA4 E300 D0B0 0024          000000B0   2594          STG   0,176(0,13) ; alen
                                            2595 * ***       ulen = alen;
00001AAA E300 D0A8 0024          000000A8   2596          STG   0,168(0,13) ; ulen
                                            2597 * ***       char* cbuf = calloc(1, ulen);
00001AB0 E548 D0B8 0001          000000B8   2598          MVGHI 184(13),1
00001AB6 E300 D0C0 0024          000000C0   2599          STG   0,192(0,13)
00001ABC 4110 D0B8               000000B8   2600          LA    1,184(0,13)
00001AC0 E3F0 C078 0004          00001A70   2601          LG    15,@lit_1532_66 ; calloc
00001AC6                                    2602 @@gen_label83 DS    0H
00001AC6 05EF                               2603          BALR  14,15
00001AC8                                    2604 @@gen_label84 DS    0H
00001AC8 B904 006F                          2605          LGR   6,15
                                            2606 * ***       ebcdic_2_utf8(cbuf, &ulen, str, &alen);
00001ACC E360 D0B8 0024          000000B8   2607          STG   6,184(0,13)
00001AD2 41F0 D0A8               000000A8   2608          LA    15,168(0,13)
00001AD6 E3F0 D0C0 0024          000000C0   2609          STG   15,192(0,13)
00001ADC E350 D0C8 0024          000000C8   2610          STG   5,200(0,13)
00001AE2 41F0 D0B0               000000B0   2611          LA    15,176(0,13)
                                                                                                                           Page   56 
  Active Usings: @REGION_1532_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001AE6 E3F0 D0D0 0024          000000D0   2612          STG   15,208(0,13)
00001AEC 4110 D0B8               000000B8   2613          LA    1,184(0,13)
00001AF0 E3F0 C080 0004          00001A78   2614          LG    15,@lit_1532_67 ; ebcdic_2_utf8
00001AF6                                    2615 @@gen_label85 DS    0H
00001AF6 05EF                               2616          BALR  14,15
00001AF8                                    2617 @@gen_label86 DS    0H
                                            2618 * ***
                                            2619 * ***
                                            2620 * ***       if (!(rkbuf->rkbuf_flags & 0x40)) {
00001AF8 9140 4023      00000023 00000040   2621          TM    35(4),64
00001AFC 4770 C16E               00001B66   2622          BNZ   @L517
                                            2623 * ***
                                            2624 * ***
                                            2625 * ***           len = ulen;
00001B00 E320 D0A8 0004          000000A8   2626          LG    2,168(0,13) ; ulen
                                            2627 * ***   # 1219 "C:\asgkafka\librdkafka\src\rdkafka_buf.h"
                                            2628 * ***           r = rd_kafka_buf_write_i16(rkbuf, (int16_t)len);
00001B06 E340 D0B8 0024          000000B8   2629          STG   4,184(0,13)
00001B0C B907 00F2                          2630          LGHR  15,2
00001B10 E3F0 D0C0 0024          000000C0   2631          STG   15,192(0,13)
00001B16 4110 D0B8               000000B8   2632          LA    1,184(0,13)
00001B1A E3F0 C088 0004          00001A80   2633          LG    15,@lit_1532_68 ; rd_kafka_buf_write_i16
00001B20                                    2634 @@gen_label88 DS    0H
00001B20 05EF                               2635          BALR  14,15
00001B22                                    2636 @@gen_label89 DS    0H
00001B22 B904 003F                          2637          LGR   3,15        ; r
                                            2638 * ***           if (str)
00001B26 B902 00F5                          2639          LTGR  15,5
00001B2A 4780 C154               00001B4C   2640          BZ    @L518
                                            2641 * ***
                                            2642 * ***               rd_kafka_buf_write(rkbuf, cbuf, len);
00001B2E E340 D0B8 0024          000000B8   2643          STG   4,184(0,13)
00001B34 E360 D0C0 0024          000000C0   2644          STG   6,192(0,13)
00001B3A E320 D0C8 0024          000000C8   2645          STG   2,200(0,13)
00001B40 4110 D0B8               000000B8   2646          LA    1,184(0,13)
00001B44 E3F0 C090 0004          00001A88   2647          LG    15,@lit_1532_69 ; rd_kafka_buf_write
00001B4A                                    2648 @@gen_label91 DS    0H
00001B4A 05EF                               2649          BALR  14,15
00001B4C                                    2650 @@gen_label92 DS    0H
00001B4C                                    2651 @L518    DS    0H
                                            2652 * ***           free(cbuf);
00001B4C E360 D0B8 0024          000000B8   2653          STG   6,184(0,13)
00001B52 4110 D0B8               000000B8   2654          LA    1,184(0,13)
00001B56 E3F0 C098 0004          00001A90   2655          LG    15,@lit_1532_70 ; free
00001B5C                                    2656 @@gen_label93 DS    0H
00001B5C 05EF                               2657          BALR  14,15
00001B5E                                    2658 @@gen_label94 DS    0H
                                            2659 * ***
                                            2660 * ***
                                            2661 * ***
                                            2662 * ***           return r;
00001B5E B904 00F3                          2663          LGR   15,3
                                                                                                                           Page   57 
  Active Usings: @REGION_1532_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001B62 47F0 C1FC               00001BF4   2664          B     @ret_lab_1532
                                            2665 * ***       }
00001B66                                    2666 @L517    DS    0H
                                            2667 * ***
                                            2668 * ***
                                            2669 * ***
                                            2670 * ***
                                            2671 * ***
                                            2672 * ***
                                            2673 * ***       if (!str)
00001B66 B902 00F5                          2674          LTGR  15,5
00001B6A 4770 C17E               00001B76   2675          BNZ   @L519
                                            2676 * ***           len = 0;
00001B6E A729 0000               00000000   2677          LGHI  2,0         ; 0
00001B72 47F0 C19E               00001B96   2678          B     @L520
                                            2679 * ***       else if (len == (size_t)-1)
00001B76                                    2680 @L519    DS    0H
00001B76 A72F FFFF               0000FFFF   2681          CGHI  2,-1
00001B7A 4770 C194               00001B8C   2682          BNE   @L521
                                            2683 * ***       {
                                            2684 * ***
                                            2685 * ***           len = ulen + 1;
00001B7E E320 D0A8 0004          000000A8   2686          LG    2,168(0,13) ; ulen
00001B84 A72B 0001               00000001   2687          AGHI  2,1
                                            2688 * ***
                                            2689 * ***
                                            2690 * ***
                                            2691 * ***       }
00001B88 47F0 C19E               00001B96   2692          B     @L520
                                            2693 * ***       else
00001B8C                                    2694 @L521    DS    0H
                                            2695 * ***       {
                                            2696 * ***
                                            2697 * ***           len = ulen + 1;
00001B8C E320 D0A8 0004          000000A8   2698          LG    2,168(0,13) ; ulen
00001B92 A72B 0001               00000001   2699          AGHI  2,1
                                            2700 * ***
                                            2701 * ***
                                            2702 * ***
                                            2703 * ***       }
00001B96                                    2704 @L522    DS    0H
                                            2705 * ***
                                            2706 * ***       r = rd_kafka_buf_write_uvarint(rkbuf, (uint64_t)len);
00001B96                                    2707 @L520    DS    0H
00001B96 E340 D0B8 0024          000000B8   2708          STG   4,184(0,13)
00001B9C E320 D0C0 0024          000000C0   2709          STG   2,192(0,13)
00001BA2 4110 D0B8               000000B8   2710          LA    1,184(0,13)
00001BA6 E3F0 C0A0 0004          00001A98   2711          LG    15,@lit_1532_72 ; rd_kafka_buf_write_uvarint
00001BAC                                    2712 @@gen_label97 DS    0H
00001BAC 05EF                               2713          BALR  14,15
00001BAE                                    2714 @@gen_label98 DS    0H
00001BAE B904 003F                          2715          LGR   3,15        ; r
                                                                                                                           Page   58 
  Active Usings: @REGION_1532_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2716 * ***       if (len > 1)
00001BB2 C22E 0000 0001                     2717          CLGFI 2,X'00000001'
00001BB8 47D0 C1E6               00001BDE   2718          BNH   @L523
                                            2719 * ***
                                            2720 * ***           rd_kafka_buf_write(rkbuf, cbuf, len - 1);
00001BBC E340 D0B8 0024          000000B8   2721          STG   4,184(0,13)
00001BC2 E360 D0C0 0024          000000C0   2722          STG   6,192(0,13)
00001BC8 A72B FFFF               0000FFFF   2723          AGHI  2,-1
00001BCC E320 D0C8 0024          000000C8   2724          STG   2,200(0,13)
00001BD2 4110 D0B8               000000B8   2725          LA    1,184(0,13)
00001BD6 E3F0 C090 0004          00001A88   2726          LG    15,@lit_1532_69 ; rd_kafka_buf_write
00001BDC                                    2727 @@gen_label100 DS    0H
00001BDC 05EF                               2728          BALR  14,15
00001BDE                                    2729 @@gen_label101 DS    0H
00001BDE                                    2730 @L523    DS    0H
                                            2731 * ***       free(cbuf);
00001BDE E360 D0B8 0024          000000B8   2732          STG   6,184(0,13)
00001BE4 4110 D0B8               000000B8   2733          LA    1,184(0,13)
00001BE8 E3F0 C098 0004          00001A90   2734          LG    15,@lit_1532_70 ; free
00001BEE                                    2735 @@gen_label102 DS    0H
00001BEE 05EF                               2736          BALR  14,15
00001BF0                                    2737 @@gen_label103 DS    0H
                                            2738 * ***
                                            2739 * ***
                                            2740 * ***
                                            2741 * ***       return r;
00001BF0 B904 00F3                          2742          LGR   15,3
                                            2743 * ***   }
00001BF4                                    2744 @ret_lab_1532 DS 0H
                                            2745 * * **** Start of Epilogue
                                            2746          DCCEPIL
00001BF4                                    2747+         ds 0h                                                          01-DCCEP
                                            2748+* Epilog
00001BF4 D707 D088 D088 00000088 00000088   2749+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001BFA E3D0 D080 0004          00000080   2750+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001C00 E3C0 D090 0004          00000090   2751+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001C06 E3B0 C018 0004          00000018   2752+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C0C E3C0 B010 0021          00000010   2753+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C12 E3E0 D008 0004          00000008   2754+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C18 EB1C D020 0004          00000020   2755+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001C1E 078E                               2756+         bcr 8,14                if same dsab, just return              01-DCCEP
00001C20 E3F0 D010 0024          00000010   2757+         stg 15,16(0,13)         save return code                       01-DCCEP
00001C26 E300 D018 0024          00000018   2758+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001C2C E3F0 D090 0004          00000090   2759+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001C32 E3F0 F018 0004          00000018   2760+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001C38 47F0 F040               00000040   2761+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2762+* End of Epilog
                                            2763 * * **** End of Epilogue
                                            2764          DROP  12
                                            2765 *
                                            2766 *   DSECT for automatic variables in "rd_kafka_buf_write_str"
                                            2767 *      (FUNCTION #1532)
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2768 *
00000000                00000000 000000B8   2769 @AUTO#rd_kafka_buf_write_str DSECT
00000000                                    2770          DS    XL168
000000A8                                    2771 rd_kafka_buf_write_str#ulen#0 DS 8XL1 ; ulen
000000B0                000000B0 000000A8   2772          ORG   @AUTO#rd_kafka_buf_write_str+168
000000A8                                    2773 rd_kafka_buf_write_str#r#0 DS 8XL1 ; r
000000B0                000000B0 000000B0   2774          ORG   @AUTO#rd_kafka_buf_write_str+176
000000B0                                    2775 rd_kafka_buf_write_str#alen#0 DS 8XL1 ; alen
                                            2776 *
00001C3C                00000000 00005122   2777 @CODE    CSECT
                                            2778 *
                                            2779 *
                                            2780 *
                                            2781 * ....... start of rd_kafka_buf_write_kbytes
00001C3C                                    2782 @LNAME1534 DS  0H
00001C3C 00000019                           2783          DC    X'00000019'
00001C40 99846D9281869281                   2784          DC    C'rd_kafka_buf_write_kbytes'
00001C59 00                                 2785          DC    X'00'
                                            2786 rd_kafka_buf_write_kbytes DCCPRLG CINDEX=1534,BASER=12,FRAME=200,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1534
                                            2787          macro
                                            2788          dccextrn &m
                                            2789          gblc    &$dccext(1000)
                                            2790          gbla    &$dccexti
                                            2791          lcla    &i
                                            2792 &$dccext(&$dccexti+1) setc    '&m'
                                            2793 &i       seta    1
                                            2794 .loop    aif    (&i gt &$dccexti).around
                                            2795          aif    ('&$dccext(&i)' eq '&m').getout
                                            2796 &i       seta    &i+1
                                            2797          ago     .loop
                                            2798 .around  anop
                                            2799 &$dccexti seta &$dccexti+1
                                            2800          extrn  &m
                                            2801 .getout  anop
                                            2802          mend
00001C60                                    2803+$eye0064    ds    0d                                                    02-DCCCA
00001C60 C4C3C3                             2804+         dc cl3'DCC'                                                    02-DCCCA
00001C63 01                                 2805+         dc xl1'01' format one                                          02-DCCCA
00001C64 00000000                           2806+         dc a(0)                                                        02-DCCCA
00001C68 0000000000001CD2                   2807+         dc ad(@PER_1534)                                               02-DCCCA
00001C70 00000000000000C8                   2808+         dc ad(200)                                                     02-DCCCA
00001C78 0000000000000000                   2809+         dc ad(0)                                                       02-DCCCA
00001C80 0000000000001000                   2810+         dc ad(4096)                                                    02-DCCCA
00001C88 20                                 2811+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001C89 03                                 2812+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001C8A 03                                 2813+         dc al1(3)                                                      02-DCCCA
00001C8B 08                                 2814+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001C8C 00                                 2815+         dc bl.8'00000000'                                              02-DCCCA
00001C8D 000000                             2816+         dc al3(0)                                                      02-DCCCA
00001C90 0000000000001C3C                   2817+         dc ad(@LNAME1534)                                              02-DCCCA
00001C98                                    2818+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001C98 0000000000001C60                   2819+         dc ad($eye0064)                                                02-DCCCA
00001CA0 0000000000000000                   2820+         dc ad(0)                                                       02-DCCCA
00001CA8                                    2821+         ds    0d                                                       01-DCCPR
00001CA8                                    2822+rd_kafka_buf_write_kbytes ds 0d                                         01-DCCPR
00001CA8                                    2823+@REGION_1534_1 ds 0h                                                    01-DCCPR
00001CA8 EBEC D008 0024          00000008   2824+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001CAE E3E0 D088 0004          00000088   2825+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001CB4 E3C0 D090 0004          00000090   2826+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001CBA B904 002E                          2827+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001CBE E3B0 C018 0004          00000018   2828+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001CC4 A7EB 00C8               000000C8   2829+         aghi  14,200              increase by frame size               01-DCCPR
00001CC8 E3E0 C020 0021          00000020   2830+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001CCE 4720 B020               00000020   2831+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001CD2                                    2832+@PER_1534 ds   0h                                                       01-DCCPR
00001CD2 EBDE 2080 0024          00000080   2833+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001CD8 E3C0 2090 0024          00000090   2834+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001CDE B904 00D2                          2835+         lgr   13,2                set real frame pointer               01-DCCPR
00001CE2 B904 00CF                          2836+         lgr   12,15               set base reg                         01-DCCPR
                        00001CA8            2837+         using @REGION_1534_1,12                                        01-DCCPR
                                            2838 * ******* End of Prologue
                                            2839 * *
00001CE6 EB23 1000 0004          00000000   2840          LMG   2,3,0(1)    ; rkbuf
                                            2841 * ***       size_t len;
                                            2842 * ***
                                            2843 * ***       if (!kbytes || ((kbytes)->len == -1))
00001CEC B902 00F3                          2844          LTGR  15,3
00001CF0 4780 C056               00001CFE   2845          BZ    @L527
00001CF4 E55C 3000 FFFF          00000000   2846          CHSI  0(3),-1
00001CFA 4770 C090               00001D38   2847          BNE   @L526
00001CFE                                    2848 @L527    DS    0H
                                            2849 * ***           return rd_kafka_buf_write_i32(rkbuf, -1);
00001CFE E320 D0B0 0024          000000B0   2850          STG   2,176(0,13)
00001D04 E548 D0B8 FFFF          000000B8   2851          MVGHI 184(13),-1
00001D0A 4110 D0B0               000000B0   2852          LA    1,176(0,13)
00001D0E E3F0 C080 0004          00001D28   2853          LG    15,@lit_1534_76 ; rd_kafka_buf_write_i32
00001D14                                    2854 @@gen_label106 DS    0H
00001D14 05EF                               2855          BALR  14,15
00001D16                                    2856 @@gen_label107 DS    0H
00001D16 47F0 C148               00001DF0   2857          B     @ret_lab_1534
00001D20                                    2858          DS    0D
00001D20 000000C8                           2859 @FRAMESIZE_1534 DC F'200'
00001D24 00000000
00001D28 0000000000001768                   2860 @lit_1534_76 DC AD(rd_kafka_buf_write_i32)
00001D30 00000000000014B0                   2861 @lit_1534_78 DC AD(rd_kafka_buf_write)
00001D38                                    2862 @L526    DS    0H
                                            2863 * ***
                                            2864 * ***       if ((((const char *)((kbytes)+1))+2 == (const char *)((kby\
                                            2865 * tes)->data)))
00001D38 41F0 301A               0000001A   2866          LA    15,26(0,3)
00001D3C E310 3008 0004          00000008   2867          LG    1,8(0,3)    ; offset of data in rd_kafkap_bytes_s
00001D42 B920 00F1                          2868          CGR   15,1
00001D46 4770 C0E6               00001D8E   2869          BNE   @L528
                                                                                                                           Page   61 
  Active Usings: @REGION_1534_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2870 * ***           return rd_kafka_buf_write(rkbuf, ((kbytes)+1),
                                            2871 * ***               (4 + (((kbytes)->len) == -1 ? 0:((kbytes)->len))))\
                                            2872 * ;
00001D4A E55C 3000 FFFF          00000000   2873          CHSI  0(3),-1
00001D50 4770 C0B4               00001D5C   2874          BNE   @L529
00001D54 A7F8 0000               00000000   2875          LHI   15,0        ; 0
00001D58 47F0 C0B8               00001D60   2876          B     @L530
00001D5C                                    2877 @L529    DS    0H
00001D5C 58F0 3000               00000000   2878          L     15,0(0,3)   ; kbytes
00001D60                                    2879 @L530    DS    0H
00001D60 A7FA 0004               00000004   2880          AHI   15,4
00001D64 B914 00FF                          2881          LGFR  15,15
00001D68 E320 D0B0 0024          000000B0   2882          STG   2,176(0,13)
00001D6E 4110 3018               00000018   2883          LA    1,24(0,3)
00001D72 E310 D0B8 0024          000000B8   2884          STG   1,184(0,13)
00001D78 E3F0 D0C0 0024          000000C0   2885          STG   15,192(0,13)
00001D7E 4110 D0B0               000000B0   2886          LA    1,176(0,13)
00001D82 E3F0 C088 0004          00001D30   2887          LG    15,@lit_1534_78 ; rd_kafka_buf_write
00001D88                                    2888 @@gen_label110 DS    0H
00001D88 05EF                               2889          BALR  14,15
00001D8A                                    2890 @@gen_label111 DS    0H
00001D8A 47F0 C148               00001DF0   2891          B     @ret_lab_1534
00001D8E                                    2892 @L528    DS    0H
                                            2893 * ***
                                            2894 * ***       len = (((kbytes)->len) == -1 ? 0:((kbytes)->len));
00001D8E E55C 3000 FFFF          00000000   2895          CHSI  0(3),-1
00001D94 4770 C0F8               00001DA0   2896          BNE   @L531
00001D98 A7F8 0000               00000000   2897          LHI   15,0        ; 0
00001D9C 47F0 C0FC               00001DA4   2898          B     @L532
00001DA0                                    2899 @L531    DS    0H
00001DA0 58F0 3000               00000000   2900          L     15,0(0,3)   ; kbytes
00001DA4                                    2901 @L532    DS    0H
00001DA4 B914 004F                          2902          LGFR  4,15
                                            2903 * ***       rd_kafka_buf_write_i32(rkbuf, (int32_t)len);
00001DA8 E320 D0B0 0024          000000B0   2904          STG   2,176(0,13)
00001DAE B914 00F4                          2905          LGFR  15,4
00001DB2 E3F0 D0B8 0024          000000B8   2906          STG   15,184(0,13)
00001DB8 4110 D0B0               000000B0   2907          LA    1,176(0,13)
00001DBC E3F0 C080 0004          00001D28   2908          LG    15,@lit_1534_76 ; rd_kafka_buf_write_i32
00001DC2                                    2909 @@gen_label113 DS    0H
00001DC2 05EF                               2910          BALR  14,15
00001DC4                                    2911 @@gen_label114 DS    0H
                                            2912 * ***       rd_kafka_buf_write(rkbuf, kbytes->data, len);
00001DC4 E320 D0B0 0024          000000B0   2913          STG   2,176(0,13)
00001DCA E3F0 3008 0004          00000008   2914          LG    15,8(0,3)
00001DD0 E3F0 D0B8 0024          000000B8   2915          STG   15,184(0,13)
00001DD6 E340 D0C0 0024          000000C0   2916          STG   4,192(0,13)
00001DDC 4110 D0B0               000000B0   2917          LA    1,176(0,13)
00001DE0 E3F0 C088 0004          00001D30   2918          LG    15,@lit_1534_78 ; rd_kafka_buf_write
00001DE6                                    2919 @@gen_label115 DS    0H
00001DE6 05EF                               2920          BALR  14,15
00001DE8                                    2921 @@gen_label116 DS    0H
                                                                                                                           Page   62 
  Active Usings: @REGION_1534_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2922 * ***
                                            2923 * ***       return 4 + len;
00001DE8 A74B 0004               00000004   2924          AGHI  4,4
00001DEC B904 00F4                          2925          LGR   15,4
                                            2926 * ***   }
00001DF0                                    2927 @ret_lab_1534 DS 0H
                                            2928 * * **** Start of Epilogue
                                            2929          DCCEPIL
00001DF0                                    2930+         ds 0h                                                          01-DCCEP
                                            2931+* Epilog
00001DF0 D707 D088 D088 00000088 00000088   2932+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001DF6 E3D0 D080 0004          00000080   2933+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001DFC E3C0 D090 0004          00000090   2934+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001E02 E3B0 C018 0004          00000018   2935+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001E08 E3C0 B010 0021          00000010   2936+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001E0E E3E0 D008 0004          00000008   2937+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001E14 EB1C D020 0004          00000020   2938+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001E1A 078E                               2939+         bcr 8,14                if same dsab, just return              01-DCCEP
00001E1C E3F0 D010 0024          00000010   2940+         stg 15,16(0,13)         save return code                       01-DCCEP
00001E22 E300 D018 0024          00000018   2941+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001E28 E3F0 D090 0004          00000090   2942+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001E2E E3F0 F018 0004          00000018   2943+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E34 47F0 F040               00000040   2944+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2945+* End of Epilog
                                            2946 * * **** End of Epilogue
                                            2947          DROP  12
                                            2948 *
                                            2949 *   DSECT for automatic variables in "rd_kafka_buf_write_kbytes"
                                            2950 *      (FUNCTION #1534)
                                            2951 *
00000000                00000000 000000B0   2952 @AUTO#rd_kafka_buf_write_kbytes DSECT
00000000                                    2953          DS    XL168
000000A8                                    2954 rd_kafka_buf_write_kbytes#len#0 DS 8XL1 ; len
                                            2955 *
00001E38                00000000 00005122   2956 @CODE    CSECT
                                            2957 *
                                            2958 *
                                            2959 *
                                            2960 * ....... start of rd_kafka_mock_cgrp_set_state
00001E38                                    2961 @LNAME1945 DS  0H
00001E38 0000001C                           2962          DC    X'0000001C'
00001E3C 99846D9281869281                   2963          DC    C'rd_kafka_mock_cgrp_set_state'
00001E58 00                                 2964          DC    X'00'
                                            2965 rd_kafka_mock_cgrp_set_state DCCPRLG CINDEX=1945,BASER=12,FRAME=264,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1945
                                            2966          macro
                                            2967          dccextrn &m
                                            2968          gblc    &$dccext(1000)
                                            2969          gbla    &$dccexti
                                            2970          lcla    &i
                                            2971 &$dccext(&$dccexti+1) setc    '&m'
                                            2972 &i       seta    1
                                                                                                                           Page   63 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            2973 .loop    aif    (&i gt &$dccexti).around
                                            2974          aif    ('&$dccext(&i)' eq '&m').getout
                                            2975 &i       seta    &i+1
                                            2976          ago     .loop
                                            2977 .around  anop
                                            2978 &$dccexti seta &$dccexti+1
                                            2979          extrn  &m
                                            2980 .getout  anop
                                            2981          mend
00001E60                                    2982+$eye0067    ds    0d                                                    02-DCCCA
00001E60 C4C3C3                             2983+         dc cl3'DCC'                                                    02-DCCCA
00001E63 01                                 2984+         dc xl1'01' format one                                          02-DCCCA
00001E64 00000000                           2985+         dc a(0)                                                        02-DCCCA
00001E68 0000000000001ED2                   2986+         dc ad(@PER_1945)                                               02-DCCCA
00001E70 0000000000000108                   2987+         dc ad(264)                                                     02-DCCCA
00001E78 0000000000000000                   2988+         dc ad(0)                                                       02-DCCCA
00001E80 0000000000001000                   2989+         dc ad(4096)                                                    02-DCCCA
00001E88 20                                 2990+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E89 03                                 2991+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E8A 03                                 2992+         dc al1(3)                                                      02-DCCCA
00001E8B 08                                 2993+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E8C 00                                 2994+         dc bl.8'00000000'                                              02-DCCCA
00001E8D 000000                             2995+         dc al3(0)                                                      02-DCCCA
00001E90 0000000000001E38                   2996+         dc ad(@LNAME1945)                                              02-DCCCA
00001E98                                    2997+         ds 0d                                                          02-DCCCA
00001E98 0000000000001E60                   2998+         dc ad($eye0067)                                                02-DCCCA
00001EA0 0000000000000000                   2999+         dc ad(0)                                                       02-DCCCA
00001EA8                                    3000+         ds    0d                                                       01-DCCPR
00001EA8                                    3001+rd_kafka_mock_cgrp_set_state ds 0d                                      01-DCCPR
00001EA8                                    3002+@REGION_1945_1 ds 0h                                                    01-DCCPR
00001EA8 EBEC D008 0024          00000008   3003+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001EAE E3E0 D088 0004          00000088   3004+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001EB4 E3C0 D090 0004          00000090   3005+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001EBA B904 002E                          3006+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001EBE E3B0 C018 0004          00000018   3007+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001EC4 A7EB 0108               00000108   3008+         aghi  14,264              increase by frame size               01-DCCPR
00001EC8 E3E0 C020 0021          00000020   3009+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001ECE 4720 B020               00000020   3010+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001ED2                                    3011+@PER_1945 ds   0h                                                       01-DCCPR
00001ED2 EBDE 2080 0024          00000080   3012+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001ED8 E3C0 2090 0024          00000090   3013+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001EDE B904 00D2                          3014+         lgr   13,2                set real frame pointer               01-DCCPR
00001EE2 B904 00CF                          3015+         lgr   12,15               set base reg                         01-DCCPR
                        00001EA8            3016+         using @REGION_1945_1,12                                        01-DCCPR
                                            3017          DCCPRV REG=15     ; Get PRV from DVT
00001EE6 E3F0 B008 0004          00000008   3018+         LG 15,8(0,11)                                                  01-DCCPR
                                            3019 * ******* End of Prologue
                                            3020 * *
                                            3021 * ***           if (mcgrp->state == new_state)
00001EEC E320 1000 0004          00000000   3022          LG    2,0(0,1)    ; mcgrp
00001EF2 5830 100C               0000000C   3023          L     3,12(0,1)   ; new_state
00001EF6 5840 2040               00000040   3024          L     4,64(0,2)   ; offset of state in rd_kafka_mock_cgrp_s
                                                                                                                           Page   64 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001EFA 1543                               3025          CLR   4,3
00001EFC 4770 C080               00001F28   3026          BNE   @L633
                                            3027 * ***                   return;
00001F00 47F0 C15A               00002002   3028          B     @ret_lab_1945
00001F08                                    3029          DS    0D
00001F08 00000108                           3030 @FRAMESIZE_1945 DC F'264'
00001F0C 00000000
00001F10 0000000000000000                   3031 @lit_1945_86 DC AD(rd_kafka_log0)
00001F18 00000000                           3032 @lit_1945_85 DC Q(@@STATIC)
00001F1C 00000000
00001F20 000000000000539A                   3033 @lit_1945_84 DC AD(@strings@)
                                            3034 * ***
                                            3035 * ***           do { if ((((mcgrp->cluster->rk)->rk_conf.debug & (0x10\
                                            3036 * 000)))) rd_kafka_log0(&mcgrp->cluster->rk->rk_conf,mcgrp->cluster->r\
                                            3037 * k,((void *)0), 7,(0x10000), "MOCK","Mock consumer group %s with %d m\
                                            3038 * ember(s) " "changing state %s -> %s: %s", mcgrp->id, mcgrp->member_c\
                                            3039 * nt, rd_kafka_mock_cgrp_state_names[mcgrp->state], rd_kafka_mock_cgrp\
                                            3040 * _state_names[new_state], reason); } while (0);
00001F28                                    3041 @L633    DS    0H
00001F28 E340 2010 0004          00000010   3042          LG    4,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
00001F2E E340 4020 0004          00000020   3043          LG    4,32(0,4)   ; offset of rk in rd_kafka_mock_cluster_s
00001F34 9101 4321      00000321 00000001   3044          TM    801(4),1
00001F38 4780 C156               00001FFE   3045          BZ    @L636
00001F3C E340 2010 0004          00000010   3046          LG    4,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
00001F42 E340 4020 0004          00000020   3047          LG    4,32(0,4)   ; offset of rk in rd_kafka_mock_cluster_s
00001F48 4140 4210               00000210   3048          LA    4,528(0,4)
00001F4C E340 D0A8 0024          000000A8   3049          STG   4,168(0,13)
00001F52 E340 2010 0004          00000010   3050          LG    4,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
00001F58 E340 4020 0004          00000020   3051          LG    4,32(0,4)
00001F5E E340 D0B0 0024          000000B0   3052          STG   4,176(0,13)
00001F64 D707 D0B8 D0B8 000000B8 000000B8   3053          XC    184(8,13),184(13)
00001F6A E548 D0C0 0007          000000C0   3054          MVGHI 192(13),7
00001F70 C04F 0001 0000                     3055          LLILF 4,X'00010000' ; 65536
00001F76 E340 D0C8 0024          000000C8   3056          STG   4,200(0,13)
00001F7C E340 C078 0004          00001F20   3057          LG    4,@lit_1945_84
00001F82 4150 4048               00000048   3058          LA    5,72(0,4)
00001F86 E350 D0D0 0024          000000D0   3059          STG   5,208(0,13)
00001F8C 4140 404E               0000004E   3060          LA    4,78(0,4)
00001F90 E340 D0D8 0024          000000D8   3061          STG   4,216(0,13)
00001F96 E340 2020 0004          00000020   3062          LG    4,32(0,2)
00001F9C E340 D0E0 0024          000000E0   3063          STG   4,224(0,13)
00001FA2 E340 20C8 0014          000000C8   3064          LGF   4,200(0,2)
00001FA8 E340 D0E8 0024          000000E8   3065          STG   4,232(0,13)
00001FAE E340 2040 0014          00000040   3066          LGF   4,64(0,2)
00001FB4 E350 C070 0014          00001F18   3067          LGF   5,@lit_1945_85
00001FBA 41F5 F000               00000000   3068          LA    15,0(5,15)
00001FBE EB44 0003 000D          00000003   3069          SLLG  4,4,3(0)    ; *0x8
00001FC4 E344 F6D8 0004          000006D8   3070          LG    4,1752(4,15)
00001FCA E340 D0F0 0024          000000F0   3071          STG   4,240(0,13)
00001FD0 B916 0043                          3072          LLGFR 4,3
00001FD4 EB44 0003 000D          00000003   3073          SLLG  4,4,3(0)    ; *0x8
00001FDA E3F4 F6D8 0004          000006D8   3074          LG    15,1752(4,15)
                                                                                                                           Page   65 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00001FE0 E3F0 D0F8 0024          000000F8   3075          STG   15,248(0,13)
00001FE6 E3F0 1010 0004          00000010   3076          LG    15,16(0,1)  ; reason
00001FEC E3F0 D100 0024          00000100   3077          STG   15,256(0,13)
00001FF2 4110 D0A8               000000A8   3078          LA    1,168(0,13)
00001FF6 E3F0 C068 0004          00001F10   3079          LG    15,@lit_1945_86 ; rd_kafka_log0
00001FFC                                    3080 @@gen_label119 DS    0H
00001FFC 05EF                               3081          BALR  14,15
00001FFE                                    3082 @@gen_label120 DS    0H
00001FFE                                    3083 @L636    DS    0H
                                            3084 * ***
                                            3085 * ***   # 67 "C:\asgkafka\librdkafka\src\rdkafka_mock_cgrp.c"
                                            3086 * ***           mcgrp->state = new_state;
00001FFE 5030 2040               00000040   3087          ST    3,64(0,2)   ; offset of state in rd_kafka_mock_cgrp_s
                                            3088 * ***   }
00002002                                    3089 @ret_lab_1945 DS 0H
                                            3090 * * **** Start of Epilogue
                                            3091          DCCEPIL
00002002                                    3092+         ds 0h                                                          01-DCCEP
                                            3093+* Epilog
00002002 D707 D088 D088 00000088 00000088   3094+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002008 E3D0 D080 0004          00000080   3095+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000200E E3C0 D090 0004          00000090   3096+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002014 E3B0 C018 0004          00000018   3097+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000201A E3C0 B010 0021          00000010   3098+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002020 E3E0 D008 0004          00000008   3099+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002026 EB1C D020 0004          00000020   3100+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000202C 078E                               3101+         bcr 8,14                if same dsab, just return              01-DCCEP
0000202E E3F0 D010 0024          00000010   3102+         stg 15,16(0,13)         save return code                       01-DCCEP
00002034 E300 D018 0024          00000018   3103+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000203A E3F0 D090 0004          00000090   3104+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002040 E3F0 F018 0004          00000018   3105+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002046 47F0 F040               00000040   3106+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3107+* End of Epilog
                                            3108 * * **** End of Epilogue
                                            3109          DROP  12
                                            3110 *
                                            3111 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_set_state"
                                            3112 *      (FUNCTION #1945)
                                            3113 *
00000000                00000000 000000A8   3114 @AUTO#rd_kafka_mock_cgrp_set_state DSECT
00000000                                    3115          DS    XL168
                                            3116 *
0000204A                00000000 00005122   3117 @CODE    CSECT
                                            3118 *
                                            3119 *
                                            3120 *
                                            3121 * ....... start of rd_kafka_mock_cgrp_member_active
                                            3122 rd_kafka_mock_cgrp_member_active ALIAS X'99846D92818692816D949683926D83*
                                                                8799976D9485948285996D8183A389A585'
0000204A                                    3123 @LNAME1931 DS  0H
0000204A 00000020                           3124          DC    X'00000020'
0000204E 99846D9281869281                   3125          DC    C'rd_kafka_mock_cgrp_member_active'
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000206E 00                                 3126          DC    X'00'
                                            3127 rd_kafka_mock_cgrp_member_active DCCPRLG CINDEX=1931,BASER=12,FRAME=232*
                                                                ,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1931
                                            3128          macro
                                            3129          dccextrn &m
                                            3130          gblc    &$dccext(1000)
                                            3131          gbla    &$dccexti
                                            3132          lcla    &i
                                            3133 &$dccext(&$dccexti+1) setc    '&m'
                                            3134 &i       seta    1
                                            3135 .loop    aif    (&i gt &$dccexti).around
                                            3136          aif    ('&$dccext(&i)' eq '&m').getout
                                            3137 &i       seta    &i+1
                                            3138          ago     .loop
                                            3139 .around  anop
                                            3140 &$dccexti seta &$dccexti+1
                                            3141          extrn  &m
                                            3142 .getout  anop
                                            3143          mend
00002070                                    3144+$eye0071    ds    0d                                                    02-DCCCA
00002070 C4C3C3                             3145+         dc cl3'DCC'                                                    02-DCCCA
00002073 01                                 3146+         dc xl1'01' format one                                          02-DCCCA
00002074 00000000                           3147+         dc a(0)                                                        02-DCCCA
00002078 00000000000020E2                   3148+         dc ad(@PER_1931)                                               02-DCCCA
00002080 00000000000000E8                   3149+         dc ad(232)                                                     02-DCCCA
00002088 0000000000000000                   3150+         dc ad(0)                                                       02-DCCCA
00002090 0000000000001000                   3151+         dc ad(4096)                                                    02-DCCCA
00002098 20                                 3152+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002099 03                                 3153+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000209A 03                                 3154+         dc al1(3)                                                      02-DCCCA
0000209B 08                                 3155+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000209C 00                                 3156+         dc bl.8'00000000'                                              02-DCCCA
0000209D 000000                             3157+         dc al3(0)                                                      02-DCCCA
000020A0 000000000000204A                   3158+         dc ad(@LNAME1931)                                              02-DCCCA
000020A8                                    3159+         ds 0d                                                          02-DCCCA
000020A8 0000000000002070                   3160+         dc ad($eye0071)                                                02-DCCCA
000020B0 0000000000000000                   3161+         dc ad(0)                                                       02-DCCCA
000020B8                                    3162+         ds    0d                                                       01-DCCPR
                                            3163+         entry rd_kafka_mock_cgrp_member_active                         01-DCCPR
000020B8                                    3164+rd_kafka_mock_cgrp_member_active ds 0d                                  01-DCCPR
000020B8                                    3165+@REGION_1931_1 ds 0h                                                    01-DCCPR
000020B8 EBEC D008 0024          00000008   3166+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000020BE E3E0 D088 0004          00000088   3167+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000020C4 E3C0 D090 0004          00000090   3168+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000020CA B904 002E                          3169+         lgr   2,14                copy addr of our savearea            01-DCCPR
000020CE E3B0 C018 0004          00000018   3170+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000020D4 A7EB 00E8               000000E8   3171+         aghi  14,232              increase by frame size               01-DCCPR
000020D8 E3E0 C020 0021          00000020   3172+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000020DE 4720 B020               00000020   3173+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000020E2                                    3174+@PER_1931 ds   0h                                                       01-DCCPR
000020E2 EBDE 2080 0024          00000080   3175+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000020E8 E3C0 2090 0024          00000090   3176+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000020EE B904 00D2                          3177+         lgr   13,2                set real frame pointer               01-DCCPR
000020F2 B904 00CF                          3178+         lgr   12,15               set base reg                         01-DCCPR
                        000020B8            3179+         using @REGION_1931_1,12                                        01-DCCPR
000020F6 B904 0021                          3180          LGR   2,1         ; ptr to parm area
                                            3181 * ******* End of Prologue
                                            3182 * *
                                            3183 * ***           do { if ((((mcgrp->cluster->rk)->rk_conf.debug & (0x10\
                                            3184 * 000)))) rd_kafka_log0(&mcgrp->cluster->rk->rk_conf,mcgrp->cluster->r\
                                            3185 * k,((void *)0), 7,(0x10000), "MOCK","Marking mock consumer group memb\
                                            3186 * er %s as active", member->id); } while (0);
000020FA E3F0 2000 0004          00000000   3187          LG    15,0(0,2)   ; mcgrp
00002100                                    3188 @L637    DS    0H
00002100 E310 F010 0004          00000010   3189          LG    1,16(0,15)  ; offset of cluster in rd_kafka_mock_cgrp_s
00002106 E310 1020 0004          00000020   3190          LG    1,32(0,1)   ; offset of rk in rd_kafka_mock_cluster_s
0000210C 9101 1321      00000321 00000001   3191          TM    801(1),1
00002110 4780 C0D4               0000218C   3192          BZ    @L640
00002114 E310 F010 0004          00000010   3193          LG    1,16(0,15)  ; offset of cluster in rd_kafka_mock_cgrp_s
0000211A E310 1020 0004          00000020   3194          LG    1,32(0,1)   ; offset of rk in rd_kafka_mock_cluster_s
00002120 4110 1210               00000210   3195          LA    1,528(0,1)
00002124 E310 D0A8 0024          000000A8   3196          STG   1,168(0,13)
0000212A E3F0 F010 0004          00000010   3197          LG    15,16(0,15) ; offset of cluster in rd_kafka_mock_cgrp_s
00002130 E3F0 F020 0004          00000020   3198          LG    15,32(0,15)
00002136 E3F0 D0B0 0024          000000B0   3199          STG   15,176(0,13)
0000213C D707 D0B8 D0B8 000000B8 000000B8   3200          XC    184(8,13),184(13)
00002142 E548 D0C0 0007          000000C0   3201          MVGHI 192(13),7
00002148 C0FF 0001 0000                     3202          LLILF 15,X'00010000' ; 65536
0000214E E3F0 D0C8 0024          000000C8   3203          STG   15,200(0,13)
00002154 E3F0 C140 0004          000021F8   3204          LG    15,@lit_1931_89
0000215A 4110 F048               00000048   3205          LA    1,72(0,15)
0000215E E310 D0D0 0024          000000D0   3206          STG   1,208(0,13)
00002164 41F0 F094               00000094   3207          LA    15,148(0,15)
00002168 E3F0 D0D8 0024          000000D8   3208          STG   15,216(0,13)
0000216E E3F0 2008 0004          00000008   3209          LG    15,8(0,2)   ; member
00002174 E3F0 F010 0004          00000010   3210          LG    15,16(0,15)
0000217A E3F0 D0E0 0024          000000E0   3211          STG   15,224(0,13)
00002180 4110 D0A8               000000A8   3212          LA    1,168(0,13)
00002184 E3F0 C138 0004          000021F0   3213          LG    15,@lit_1931_90 ; rd_kafka_log0
0000218A                                    3214 @@gen_label122 DS    0H
0000218A 05EF                               3215          BALR  14,15
0000218C                                    3216 @@gen_label123 DS    0H
0000218C                                    3217 @L640    DS    0H
                                            3218 * ***
                                            3219 * ***
                                            3220 * ***           member->ts_last_activity = rd_clock();
0000218C E320 2008 0004          00000008   3221          LG    2,8(0,2)    ; member
00002192 E3F0 C148 0004          00002200   3222          LG    15,@lit_1931_91 ; rd_clock
00002198                                    3223 @@gen_label124 DS    0H
00002198 05EF                               3224          BALR  14,15
0000219A                                    3225 @@gen_label125 DS    0H
0000219A E3F0 2020 0024          00000020   3226          STG   15,32(0,2)
                                            3227 * ***   }
000021A0                                    3228 @ret_lab_1931 DS 0H
                                                                                                                           Page   68 
  Active Usings: @REGION_1931_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3229 * * **** Start of Epilogue
                                            3230          DCCEPIL
000021A0                                    3231+         ds 0h                                                          01-DCCEP
                                            3232+* Epilog
000021A0 D707 D088 D088 00000088 00000088   3233+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000021A6 E3D0 D080 0004          00000080   3234+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000021AC E3C0 D090 0004          00000090   3235+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000021B2 E3B0 C018 0004          00000018   3236+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000021B8 E3C0 B010 0021          00000010   3237+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000021BE E3E0 D008 0004          00000008   3238+         lg  14,8(0,13)          load up return address                 01-DCCEP
000021C4 EB1C D020 0004          00000020   3239+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000021CA 078E                               3240+         bcr 8,14                if same dsab, just return              01-DCCEP
000021CC E3F0 D010 0024          00000010   3241+         stg 15,16(0,13)         save return code                       01-DCCEP
000021D2 E300 D018 0024          00000018   3242+         stg 0,24(0,13)          save more return code                  01-DCCEP
000021D8 E3F0 D090 0004          00000090   3243+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000021DE E3F0 F018 0004          00000018   3244+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000021E4 47F0 F040               00000040   3245+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3246+* End of Epilog
                                            3247 * * **** End of Epilogue
000021E8                                    3248          DS    0D
000021E8 000000E8                           3249 @FRAMESIZE_1931 DC F'232'
000021EC 00000000
000021F0 0000000000000000                   3250 @lit_1931_90 DC AD(rd_kafka_log0)
000021F8 000000000000539A                   3251 @lit_1931_89 DC AD(@strings@)
00002200 0000000000000C08                   3252 @lit_1931_91 DC AD(rd_clock)
                                            3253          DROP  12
                                            3254 *
                                            3255 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_member_active"
                                            3256 *      (FUNCTION #1931)
                                            3257 *
00000000                00000000 000000A8   3258 @AUTO#rd_kafka_mock_cgrp_member_active DSECT
00000000                                    3259          DS    XL168
                                            3260 *
00002208                00000000 00005122   3261 @CODE    CSECT
                                            3262 *
                                            3263 *
                                            3264 *
                                            3265 * ....... start of rd_kafka_mock_cgrp_check_state
                                            3266 rd_kafka_mock_cgrp_check_state ALIAS X'99846D92818692816D949683926D8387*
                                                                99976D83888583926DA2A381A385'
00002208                                    3267 @LNAME1937 DS  0H
00002208 0000001E                           3268          DC    X'0000001E'
0000220C 99846D9281869281                   3269          DC    C'rd_kafka_mock_cgrp_check_state'
0000222A 00                                 3270          DC    X'00'
                                            3271 rd_kafka_mock_cgrp_check_state DCCPRLG CINDEX=1937,BASER=12,FRAME=176,E*
                                                                NTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1937
                                            3272          macro
                                            3273          dccextrn &m
                                            3274          gblc    &$dccext(1000)
                                            3275          gbla    &$dccexti
                                            3276          lcla    &i
                                            3277 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   69 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3278 &i       seta    1
                                            3279 .loop    aif    (&i gt &$dccexti).around
                                            3280          aif    ('&$dccext(&i)' eq '&m').getout
                                            3281 &i       seta    &i+1
                                            3282          ago     .loop
                                            3283 .around  anop
                                            3284 &$dccexti seta &$dccexti+1
                                            3285          extrn  &m
                                            3286 .getout  anop
                                            3287          mend
00002230                                    3288+$eye0074    ds    0d                                                    02-DCCCA
00002230 C4C3C3                             3289+         dc cl3'DCC'                                                    02-DCCCA
00002233 01                                 3290+         dc xl1'01' format one                                          02-DCCCA
00002234 00000000                           3291+         dc a(0)                                                        02-DCCCA
00002238 00000000000022A2                   3292+         dc ad(@PER_1937)                                               02-DCCCA
00002240 00000000000000B0                   3293+         dc ad(176)                                                     02-DCCCA
00002248 0000000000000000                   3294+         dc ad(0)                                                       02-DCCCA
00002250 0000000000001000                   3295+         dc ad(4096)                                                    02-DCCCA
00002258 20                                 3296+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002259 03                                 3297+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000225A 03                                 3298+         dc al1(3)                                                      02-DCCCA
0000225B 08                                 3299+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000225C 00                                 3300+         dc bl.8'00000000'                                              02-DCCCA
0000225D 000000                             3301+         dc al3(0)                                                      02-DCCCA
00002260 0000000000002208                   3302+         dc ad(@LNAME1937)                                              02-DCCCA
00002268                                    3303+         ds 0d                                                          02-DCCCA
00002268 0000000000002230                   3304+         dc ad($eye0074)                                                02-DCCCA
00002270 0000000000000000                   3305+         dc ad(0)                                                       02-DCCCA
00002278                                    3306+         ds    0d                                                       01-DCCPR
                                            3307+         entry rd_kafka_mock_cgrp_check_state                           01-DCCPR
00002278                                    3308+rd_kafka_mock_cgrp_check_state ds 0d                                    01-DCCPR
00002278                                    3309+@REGION_1937_1 ds 0h                                                    01-DCCPR
00002278 EBEC D008 0024          00000008   3310+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000227E E3E0 D088 0004          00000088   3311+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002284 E3C0 D090 0004          00000090   3312+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000228A B904 002E                          3313+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000228E E3B0 C018 0004          00000018   3314+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002294 A7EB 00B0               000000B0   3315+         aghi  14,176              increase by frame size               01-DCCPR
00002298 E3E0 C020 0021          00000020   3316+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000229E 4720 B020               00000020   3317+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000022A2                                    3318+@PER_1937 ds   0h                                                       01-DCCPR
000022A2 EBDE 2080 0024          00000080   3319+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000022A8 E3C0 2090 0024          00000090   3320+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000022AE B904 00D2                          3321+         lgr   13,2                set real frame pointer               01-DCCPR
000022B2 B904 00CF                          3322+         lgr   12,15               set base reg                         01-DCCPR
                        00002278            3323+         using @REGION_1937_1,12                                        01-DCCPR
                                            3324 * ******* End of Prologue
                                            3325 * *
                                            3326 * ***           int16_t ApiKey = request->rkbuf_reqhdr.ApiKey;
000022B6 E3F0 1010 0004          00000010   3327          LG    15,16(0,1)  ; request
000022BC 48F0 F0B8               000000B8   3328          LH    15,184(0,15) ; offset of ApiKey in rd_kafkap_reqhdr
000022C0 40F0 D0A8               000000A8   3329          STH   15,168(0,13) ; ApiKey
                                                                                                                           Page   70 
  Active Usings: @REGION_1937_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3330 * ***           rd_bool_t has_generation_id =
                                            3331 * ***                   ApiKey == 14 ||
000022C4 B927 002F                          3332          LHR   2,15
000022C8 A72E 000E               0000000E   3333          CHI   2,14
000022CC 4780 C070               000022E8   3334          BE    @L642
                                            3335 * ***                   ApiKey == 12 ||
000022D0 B927 002F                          3336          LHR   2,15
000022D4 A72E 000C               0000000C   3337          CHI   2,12
000022D8 4780 C070               000022E8   3338          BE    @L642
000022DC                                    3339 @L641    DS    0H
                                            3340 * ***                   ApiKey == 8;
000022DC B927 002F                          3341          LHR   2,15
000022E0 A72E 0008               00000008   3342          CHI   2,8
000022E4 4770 C07C               000022F4   3343          BNE   @L644
000022E8                                    3344 @L642    DS    0H
000022E8 A728 0001               00000001   3345          LHI   2,1         ; 1
000022EC 47F0 C080               000022F8   3346          B     @L643
000022F0                                    3347          DS    0D
000022F0 000000B0                           3348 @FRAMESIZE_1937 DC F'176'
000022F4                                    3349 @L644    DS    0H
000022F4 A728 0000               00000000   3350          LHI   2,0         ; 0
000022F8                                    3351 @L643    DS    0H
000022F8 4220 D0AA               000000AA   3352          STC   2,170(0,13) ; has_generation_id
                                            3353 * ***
                                            3354 * ***           if (has_generation_id && generation_id != mcgrp->gener\
                                            3355 * ation_id)
000022FC C02B 0000 00FF                     3356          NILF  2,X'000000FF'
00002302 1222                               3357          LTR   2,2
00002304 4780 C0AA               00002322   3358          BZ    @L645
00002308 5820 101C               0000001C   3359          L     2,28(0,1)   ; generation_id
0000230C E330 1000 0004          00000000   3360          LG    3,0(0,1)    ; mcgrp
00002312 5920 3038               00000038   3361          C     2,56(0,3)
00002316 4780 C0AA               00002322   3362          BE    @L645
                                            3363 * ***                   return RD_KAFKA_RESP_ERR_ILLEGAL_GENERATION;
0000231A A7F9 0016               00000016   3364          LGHI  15,22       ; 22
0000231E 47F0 C1FC               00002474   3365          B     @ret_lab_1937
00002322                                    3366 @L645    DS    0H
                                            3367 * ***
                                            3368 * ***           if (ApiKey == 8 && !member)
00002322 B927 00FF                          3369          LHR   15,15
00002326 A7FE 0008               00000008   3370          CHI   15,8
0000232A 4770 C1A4               0000241C   3371          BNE   @L647
0000232E E3F0 1008 0002          00000008   3372          LTG   15,8(0,1)   ; member
00002334 4770 C1A4               0000241C   3373          BNZ   @L647
                                            3374 * ***                   return RD_KAFKA_RESP_ERR_UNKNOWN_MEMBER_ID;
00002338 A7F9 0019               00000019   3375          LGHI  15,25       ; 25
0000233C 47F0 C1FC               00002474   3376          B     @ret_lab_1937
                                            3377 * ***
                                            3378 * ***           switch (mcgrp->state)
                                            3379 * ***           {
                                            3380 * ***           case RD_KAFKA_MOCK_CGRP_STATE_EMPTY:
00002340                                    3381 @L649    DS    0H
                                                                                                                           Page   71 
  Active Usings: @REGION_1937_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3382 * ***                   if (ApiKey == 11)
00002340 48F0 D0A8               000000A8   3383          LH    15,168(0,13) ; ApiKey
00002344 A7FE 000B               0000000B   3384          CHI   15,11
00002348 4770 C1F8               00002470   3385          BNE   @L648
                                            3386 * ***                           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000234C A7F9 0000               00000000   3387          LGHI  15,0        ; 0
00002350 47F0 C1FC               00002474   3388          B     @ret_lab_1937
                                            3389 * ***                   break;
                                            3390 * ***
                                            3391 * ***           case RD_KAFKA_MOCK_CGRP_STATE_JOINING:
00002354                                    3392 @L651    DS    0H
                                            3393 * ***                   if (ApiKey == 11 ||
00002354 48F0 D0A8               000000A8   3394          LH    15,168(0,13) ; ApiKey
00002358 A7FE 000B               0000000B   3395          CHI   15,11
0000235C 4780 C0F4               0000236C   3396          BE    @L653
                                            3397 * ***                       ApiKey == 13)
00002360 48F0 D0A8               000000A8   3398          LH    15,168(0,13) ; ApiKey
00002364 A7FE 000D               0000000D   3399          CHI   15,13
00002368 4770 C0FC               00002374   3400          BNE   @L652
0000236C                                    3401 @L653    DS    0H
                                            3402 * ***                           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000236C A7F9 0000               00000000   3403          LGHI  15,0        ; 0
00002370 47F0 C1FC               00002474   3404          B     @ret_lab_1937
                                            3405 * ***                   else
00002374                                    3406 @L652    DS    0H
                                            3407 * ***                           return RD_KAFKA_RESP_ERR_REBALANCE_IN_\
                                            3408 * PROGRESS;
00002374 A7F9 001B               0000001B   3409          LGHI  15,27       ; 27
00002378 47F0 C1FC               00002474   3410          B     @ret_lab_1937
                                            3411 * ***
                                            3412 * ***           case RD_KAFKA_MOCK_CGRP_STATE_SYNCING:
0000237C                                    3413 @L655    DS    0H
                                            3414 * ***                   if (ApiKey == 14 ||
0000237C 48F0 D0A8               000000A8   3415          LH    15,168(0,13) ; ApiKey
00002380 A7FE 000E               0000000E   3416          CHI   15,14
00002384 4780 C128               000023A0   3417          BE    @L658
                                            3418 * ***                       ApiKey == 11 ||
00002388 48F0 D0A8               000000A8   3419          LH    15,168(0,13) ; ApiKey
0000238C A7FE 000B               0000000B   3420          CHI   15,11
00002390 4780 C128               000023A0   3421          BE    @L658
00002394                                    3422 @L656    DS    0H
                                            3423 * ***                       ApiKey == 13)
00002394 48F0 D0A8               000000A8   3424          LH    15,168(0,13) ; ApiKey
00002398 A7FE 000D               0000000D   3425          CHI   15,13
0000239C 4770 C130               000023A8   3426          BNE   @L657
000023A0                                    3427 @L658    DS    0H
                                            3428 * ***                           return RD_KAFKA_RESP_ERR_NO_ERROR;
000023A0 A7F9 0000               00000000   3429          LGHI  15,0        ; 0
000023A4 47F0 C1FC               00002474   3430          B     @ret_lab_1937
                                            3431 * ***                   else
000023A8                                    3432 @L657    DS    0H
                                            3433 * ***                           return RD_KAFKA_RESP_ERR_REBALANCE_IN_\
                                                                                                                           Page   72 
  Active Usings: @REGION_1937_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3434 * PROGRESS;
000023A8 A7F9 001B               0000001B   3435          LGHI  15,27       ; 27
000023AC 47F0 C1FC               00002474   3436          B     @ret_lab_1937
                                            3437 * ***
                                            3438 * ***           case RD_KAFKA_MOCK_CGRP_STATE_REBALANCING:
000023B0                                    3439 @L660    DS    0H
                                            3440 * ***                   if (ApiKey == 11 ||
000023B0 48F0 D0A8               000000A8   3441          LH    15,168(0,13) ; ApiKey
000023B4 A7FE 000B               0000000B   3442          CHI   15,11
000023B8 4780 C15C               000023D4   3443          BE    @L663
                                            3444 * ***                       ApiKey == 13 ||
000023BC 48F0 D0A8               000000A8   3445          LH    15,168(0,13) ; ApiKey
000023C0 A7FE 000D               0000000D   3446          CHI   15,13
000023C4 4780 C15C               000023D4   3447          BE    @L663
000023C8                                    3448 @L661    DS    0H
                                            3449 * ***                       ApiKey == 8)
000023C8 48F0 D0A8               000000A8   3450          LH    15,168(0,13) ; ApiKey
000023CC A7FE 0008               00000008   3451          CHI   15,8
000023D0 4770 C164               000023DC   3452          BNE   @L662
000023D4                                    3453 @L663    DS    0H
                                            3454 * ***                           return RD_KAFKA_RESP_ERR_NO_ERROR;
000023D4 A7F9 0000               00000000   3455          LGHI  15,0        ; 0
000023D8 47F0 C1FC               00002474   3456          B     @ret_lab_1937
                                            3457 * ***                   else
000023DC                                    3458 @L662    DS    0H
                                            3459 * ***                           return RD_KAFKA_RESP_ERR_REBALANCE_IN_\
                                            3460 * PROGRESS;
000023DC A7F9 001B               0000001B   3461          LGHI  15,27       ; 27
000023E0 47F0 C1FC               00002474   3462          B     @ret_lab_1937
                                            3463 * ***
                                            3464 * ***           case RD_KAFKA_MOCK_CGRP_STATE_UP:
000023E4                                    3465 @L665    DS    0H
                                            3466 * ***                   if (ApiKey == 11 ||
000023E4 48F0 D0A8               000000A8   3467          LH    15,168(0,13) ; ApiKey
000023E8 A7FE 000B               0000000B   3468          CHI   15,11
000023EC 4780 C19C               00002414   3469          BE    @L669
                                            3470 * ***                       ApiKey == 13 ||
000023F0 48F0 D0A8               000000A8   3471          LH    15,168(0,13) ; ApiKey
000023F4 A7FE 000D               0000000D   3472          CHI   15,13
000023F8 4780 C19C               00002414   3473          BE    @L669
000023FC                                    3474 @L666    DS    0H
                                            3475 * ***                       ApiKey == 12 ||
000023FC 48F0 D0A8               000000A8   3476          LH    15,168(0,13) ; ApiKey
00002400 A7FE 000C               0000000C   3477          CHI   15,12
00002404 4780 C19C               00002414   3478          BE    @L669
00002408                                    3479 @L667    DS    0H
                                            3480 * ***                       ApiKey == 8)
00002408 48F0 D0A8               000000A8   3481          LH    15,168(0,13) ; ApiKey
0000240C A7FE 0008               00000008   3482          CHI   15,8
00002410 4770 C1F8               00002470   3483          BNE   @L648
00002414                                    3484 @L669    DS    0H
                                            3485 * ***                           return RD_KAFKA_RESP_ERR_NO_ERROR;
                                                                                                                           Page   73 
  Active Usings: @REGION_1937_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002414 A7F9 0000               00000000   3486          LGHI  15,0        ; 0
00002418 47F0 C1FC               00002474   3487          B     @ret_lab_1937
                                            3488 * ***                   break;
                                            3489 * ***           }
0000241C                                    3490 @L647    DS    0H
0000241C E3F0 1000 0004          00000000   3491          LG    15,0(0,1)   ; mcgrp
00002422 58F0 F040               00000040   3492          L     15,64(0,15) ; offset of state in rd_kafka_mock_cgrp_s
00002426 C2FF 0000 0004                     3493          CLFI  15,X'00000004'
0000242C 4720 C1F8               00002470   3494          BH    @L648
00002430 B914 00FF                          3495          LGFR  15,15
00002434 4110 C1D0               00002448   3496          LA    1,@@gen_label146
00002438 EBFF 0003 000D          00000003   3497          SLLG  15,15,3(0)
0000243E E3F1 F000 0004          00000000   3498          LG    15,0(1,15)
00002444 47FF C000               00000000   3499          B     0(15,12)
00002448                                    3500 @@gen_label146 DS    0D
00002448 00000000000000C8                   3501          DC AD(@L649-@REGION_1937_1)
00002450 00000000000000DC                   3502          DC AD(@L651-@REGION_1937_1)
00002458 0000000000000104                   3503          DC AD(@L655-@REGION_1937_1)
00002460 0000000000000138                   3504          DC AD(@L660-@REGION_1937_1)
00002468 000000000000016C                   3505          DC AD(@L665-@REGION_1937_1)
00002470                                    3506 @L648    DS    0H
                                            3507 * ***
                                            3508 * ***           return RD_KAFKA_RESP_ERR_INVALID_REQUEST;
00002470 A7F9 002A               0000002A   3509          LGHI  15,42       ; 42
                                            3510 * ***   }
00002474                                    3511 @ret_lab_1937 DS 0H
                                            3512 * * **** Start of Epilogue
                                            3513          DCCEPIL
00002474                                    3514+         ds 0h                                                          01-DCCEP
                                            3515+* Epilog
00002474 D707 D088 D088 00000088 00000088   3516+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000247A E3D0 D080 0004          00000080   3517+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002480 E3C0 D090 0004          00000090   3518+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002486 E3B0 C018 0004          00000018   3519+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000248C E3C0 B010 0021          00000010   3520+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002492 E3E0 D008 0004          00000008   3521+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002498 EB1C D020 0004          00000020   3522+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000249E 078E                               3523+         bcr 8,14                if same dsab, just return              01-DCCEP
000024A0 E3F0 D010 0024          00000010   3524+         stg 15,16(0,13)         save return code                       01-DCCEP
000024A6 E300 D018 0024          00000018   3525+         stg 0,24(0,13)          save more return code                  01-DCCEP
000024AC E3F0 D090 0004          00000090   3526+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000024B2 E3F0 F018 0004          00000018   3527+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000024B8 47F0 F040               00000040   3528+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3529+* End of Epilog
                                            3530 * * **** End of Epilogue
                                            3531          DROP  12
                                            3532 *
                                            3533 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_check_state"
                                            3534 *      (FUNCTION #1937)
                                            3535 *
00000000                00000000 000000AB   3536 @AUTO#rd_kafka_mock_cgrp_check_state DSECT
00000000                                    3537          DS    XL168
                                                                                                                           Page   74 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000000A8                                    3538 rd_kafka_mock_cgrp_check_state#$Api$Key#0 DS 2XL1 ; ApiKey
000000AA                                    3539 rd_kafka_mock_cgrp_check_state#has_generation_id#0 DS 1CL1 ; has_genera*
                                                                tion_id
                                            3540 *
000024BC                00000000 00005122   3541 @CODE    CSECT
                                            3542 *
                                            3543 *
                                            3544 *
                                            3545 * ....... start of rd_kafka_mock_cgrp_member_assignment_set
                                            3546 rd_kafka_mock_cgrp_member_assignment_set ALIAS X'99846D92818692816D9496*
                                                                83926D838799976D9485948285996D81A2A2898795948595A36DA285*
                                                                A3'
000024BC                                    3547 @LNAME1932 DS  0H
000024BC 00000028                           3548          DC    X'00000028'
000024C0 99846D9281869281                   3549          DC    C'rd_kafka_mock_cgrp_member_assign'
000024E0 948595A36DA285A3                   3550          DC    C'ment_set'
000024E8 00                                 3551          DC    X'00'
                                            3552 rd_kafka_mock_cgrp_member_assignment_set DCCPRLG CINDEX=1932,BASER=12,F*
                                                                RAME=200,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1932
                                            3553          macro
                                            3554          dccextrn &m
                                            3555          gblc    &$dccext(1000)
                                            3556          gbla    &$dccexti
                                            3557          lcla    &i
                                            3558 &$dccext(&$dccexti+1) setc    '&m'
                                            3559 &i       seta    1
                                            3560 .loop    aif    (&i gt &$dccexti).around
                                            3561          aif    ('&$dccext(&i)' eq '&m').getout
                                            3562 &i       seta    &i+1
                                            3563          ago     .loop
                                            3564 .around  anop
                                            3565 &$dccexti seta &$dccexti+1
                                            3566          extrn  &m
                                            3567 .getout  anop
                                            3568          mend
000024F0                                    3569+$eye0077    ds    0d                                                    02-DCCCA
000024F0 C4C3C3                             3570+         dc cl3'DCC'                                                    02-DCCCA
000024F3 01                                 3571+         dc xl1'01' format one                                          02-DCCCA
000024F4 00000000                           3572+         dc a(0)                                                        02-DCCCA
000024F8 0000000000002562                   3573+         dc ad(@PER_1932)                                               02-DCCCA
00002500 00000000000000C8                   3574+         dc ad(200)                                                     02-DCCCA
00002508 0000000000000000                   3575+         dc ad(0)                                                       02-DCCCA
00002510 0000000000001000                   3576+         dc ad(4096)                                                    02-DCCCA
00002518 20                                 3577+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002519 03                                 3578+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000251A 03                                 3579+         dc al1(3)                                                      02-DCCCA
0000251B 08                                 3580+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000251C 00                                 3581+         dc bl.8'00000000'                                              02-DCCCA
0000251D 000000                             3582+         dc al3(0)                                                      02-DCCCA
00002520 00000000000024BC                   3583+         dc ad(@LNAME1932)                                              02-DCCCA
00002528                                    3584+         ds 0d                                                          02-DCCCA
00002528 00000000000024F0                   3585+         dc ad($eye0077)                                                02-DCCCA
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002530 0000000000000000                   3586+         dc ad(0)                                                       02-DCCCA
00002538                                    3587+         ds    0d                                                       01-DCCPR
                                            3588+         entry rd_kafka_mock_cgrp_member_assignment_set                 01-DCCPR
00002538                                    3589+rd_kafka_mock_cgrp_member_assignment_set ds 0d                          01-DCCPR
00002538                                    3590+@REGION_1932_1 ds 0h                                                    01-DCCPR
00002538 EBEC D008 0024          00000008   3591+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000253E E3E0 D088 0004          00000088   3592+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002544 E3C0 D090 0004          00000090   3593+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000254A B904 002E                          3594+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000254E E3B0 C018 0004          00000018   3595+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002554 A7EB 00C8               000000C8   3596+         aghi  14,200              increase by frame size               01-DCCPR
00002558 E3E0 C020 0021          00000020   3597+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000255E 4720 B020               00000020   3598+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002562                                    3599+@PER_1932 ds   0h                                                       01-DCCPR
00002562 EBDE 2080 0024          00000080   3600+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002568 E3C0 2090 0024          00000090   3601+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000256E B904 00D2                          3602+         lgr   13,2                set real frame pointer               01-DCCPR
00002572 B904 00CF                          3603+         lgr   12,15               set base reg                         01-DCCPR
                        00002538            3604+         using @REGION_1932_1,12                                        01-DCCPR
00002576 B904 0041                          3605          LGR   4,1         ; ptr to parm area
                                            3606 * ******* End of Prologue
                                            3607 * *
                                            3608 * ***           if (member->assignment) {
0000257A EB23 4000 0004          00000000   3609          LMG   2,3,0(4)    ; mcgrp
00002580 E3F0 3038 0002          00000038   3610          LTG   15,56(0,3)  ; offset of assignment in rd_kafka_mock_cgrp*
                                                                _member_s
00002586 4780 C0C6               000025FE   3611          BZ    @L670
                                            3612 * ***                   ((mcgrp->assignment_cnt > 0) ? (void)0 : __ass\
                                            3613 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_mock_cgrp.c", \
                                            3614 * 156, "mcgrp->assignment_cnt > 0"));
0000258A E55C 20D0 0000          000000D0   3615          CHSI  208(2),0
00002590 4720 C098               000025D0   3616          BH    @L672
00002594                                    3617 @L671    DS    0H
00002594 E3F0 C158 0004          00002690   3618          LG    15,@lit_1932_108
0000259A 41F0 F1A6               000001A6   3619          LA    15,422(0,15)
0000259E E3F0 D0A8 0024          000000A8   3620          STG   15,168(0,13)
000025A4 E3F0 C150 0004          00002688   3621          LG    15,@lit_1932_109
000025AA 4110 F0C4               000000C4   3622          LA    1,196(0,15)
000025AE E310 D0B0 0024          000000B0   3623          STG   1,176(0,13)
000025B4 E548 D0B8 009C          000000B8   3624          MVGHI 184(13),156
000025BA 41F0 F0F4               000000F4   3625          LA    15,244(0,15)
000025BE E3F0 D0C0 0024          000000C0   3626          STG   15,192(0,13)
000025C4 4110 D0A8               000000A8   3627          LA    1,168(0,13)
000025C8 E3F0 C148 0004          00002680   3628          LG    15,@lit_1932_110 ; __assert
000025CE                                    3629 @@gen_label149 DS    0H
000025CE 05EF                               3630          BALR  14,15
000025D0                                    3631 @@gen_label150 DS    0H
000025D0                                    3632 @L672    DS    0H
                                            3633 * ***                   mcgrp->assignment_cnt--;
000025D0 58F0 20D0               000000D0   3634          L     15,208(0,2)
000025D4 A7FA FFFF               0000FFFF   3635          AHI   15,-1
000025D8 50F0 20D0               000000D0   3636          ST    15,208(0,2)
                                                                                                                           Page   76 
  Active Usings: @REGION_1932_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3637 * ***                   rd_kafkap_bytes_destroy(member->assignment);
000025DC E3F0 3038 0004          00000038   3638          LG    15,56(0,3)
000025E2 E3F0 D0A8 0024          000000A8   3639          STG   15,168(0,13)
000025E8 4110 D0A8               000000A8   3640          LA    1,168(0,13)
000025EC E3F0 C160 0004          00002698   3641          LG    15,@lit_1932_111 ; rd_kafkap_bytes_destroy
000025F2                                    3642 @@gen_label151 DS    0H
000025F2 05EF                               3643          BALR  14,15
000025F4                                    3644 @@gen_label152 DS    0H
                                            3645 * ***                   member->assignment = ((void *)0);
000025F4 A7F9 0000               00000000   3646          LGHI  15,0        ; 0
000025F8 E3F0 3038 0024          00000038   3647          STG   15,56(0,3)  ; offset of assignment in rd_kafka_mock_cgrp*
                                                                _member_s
                                            3648 * ***           }
000025FE                                    3649 @L670    DS    0H
                                            3650 * ***
                                            3651 * ***           if (Metadata) {
000025FE E3F0 4010 0004          00000010   3652          LG    15,16(0,4)  ; Metadata
00002604 B902 001F                          3653          LTGR  1,15
00002608 4780 C0F8               00002630   3654          BZ    @ret_lab_1932
                                            3655 * ***                   mcgrp->assignment_cnt++;
0000260C 5810 20D0               000000D0   3656          L     1,208(0,2)
00002610 A71A 0001               00000001   3657          AHI   1,1
00002614 5010 20D0               000000D0   3658          ST    1,208(0,2)
                                            3659 * ***                   member->assignment = rd_kafkap_bytes_copy(Meta\
                                            3660 * data);
00002618 E3F0 D0A8 0024          000000A8   3661          STG   15,168(0,13)
0000261E 4110 D0A8               000000A8   3662          LA    1,168(0,13)
00002622 E3F0 C168 0004          000026A0   3663          LG    15,@lit_1932_113 ; rd_kafkap_bytes_copy
00002628                                    3664 @@gen_label154 DS    0H
00002628 05EF                               3665          BALR  14,15
0000262A                                    3666 @@gen_label155 DS    0H
0000262A E3F0 3038 0024          00000038   3667          STG   15,56(0,3)
                                            3668 * ***           }
00002630                                    3669 @L673    DS    0H
                                            3670 * ***   }
00002630                                    3671 @ret_lab_1932 DS 0H
                                            3672 * * **** Start of Epilogue
                                            3673          DCCEPIL
00002630                                    3674+         ds 0h                                                          01-DCCEP
                                            3675+* Epilog
00002630 D707 D088 D088 00000088 00000088   3676+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002636 E3D0 D080 0004          00000080   3677+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000263C E3C0 D090 0004          00000090   3678+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002642 E3B0 C018 0004          00000018   3679+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002648 E3C0 B010 0021          00000010   3680+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000264E E3E0 D008 0004          00000008   3681+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002654 EB1C D020 0004          00000020   3682+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000265A 078E                               3683+         bcr 8,14                if same dsab, just return              01-DCCEP
0000265C E3F0 D010 0024          00000010   3684+         stg 15,16(0,13)         save return code                       01-DCCEP
00002662 E300 D018 0024          00000018   3685+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002668 E3F0 D090 0004          00000090   3686+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000266E E3F0 F018 0004          00000018   3687+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   77 
  Active Usings: @REGION_1932_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002674 47F0 F040               00000040   3688+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3689+* End of Epilog
                                            3690 * * **** End of Epilogue
00002678                                    3691          DS    0D
00002678 000000C8                           3692 @FRAMESIZE_1932 DC F'200'
0000267C 00000000
00002680 0000000000000000                   3693 @lit_1932_110 DC AD(__assert)
00002688 000000000000539A                   3694 @lit_1932_109 DC AD(@strings@)
00002690 0000000000005128                   3695 @lit_1932_108 DC AD(@DATA)
00002698 0000000000000F60                   3696 @lit_1932_111 DC AD(rd_kafkap_bytes_destroy)
000026A0 0000000000001238                   3697 @lit_1932_113 DC AD(rd_kafkap_bytes_copy)
                                            3698          DROP  12
                                            3699 *
                                            3700 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_member_assign
                                            3701 *           ment_set"
                                            3702 *      (FUNCTION #1932)
                                            3703 *
00000000                00000000 000000A8   3704 @AUTO#rd_kafka_mock_cgrp_member_assignment_set DSECT
00000000                                    3705          DS    XL168
                                            3706 *
000026A8                00000000 00005122   3707 @CODE    CSECT
                                            3708 *
                                            3709 *
                                            3710 *
                                            3711 * ....... start of rd_kafka_mock_cgrp_sync_done
000026A8                                    3712 @LNAME1946 DS  0H
000026A8 0000001C                           3713          DC    X'0000001C'
000026AC 99846D9281869281                   3714          DC    C'rd_kafka_mock_cgrp_sync_done'
000026C8 00                                 3715          DC    X'00'
                                            3716 rd_kafka_mock_cgrp_sync_done DCCPRLG CINDEX=1946,BASER=12,FRAME=208,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1946
                                            3717          macro
                                            3718          dccextrn &m
                                            3719          gblc    &$dccext(1000)
                                            3720          gbla    &$dccexti
                                            3721          lcla    &i
                                            3722 &$dccext(&$dccexti+1) setc    '&m'
                                            3723 &i       seta    1
                                            3724 .loop    aif    (&i gt &$dccexti).around
                                            3725          aif    ('&$dccext(&i)' eq '&m').getout
                                            3726 &i       seta    &i+1
                                            3727          ago     .loop
                                            3728 .around  anop
                                            3729 &$dccexti seta &$dccexti+1
                                            3730          extrn  &m
                                            3731 .getout  anop
                                            3732          mend
000026D0                                    3733+$eye0080    ds    0d                                                    02-DCCCA
000026D0 C4C3C3                             3734+         dc cl3'DCC'                                                    02-DCCCA
000026D3 01                                 3735+         dc xl1'01' format one                                          02-DCCCA
000026D4 00000000                           3736+         dc a(0)                                                        02-DCCCA
000026D8 0000000000002742                   3737+         dc ad(@PER_1946)                                               02-DCCCA
                                                                                                                           Page   78 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000026E0 00000000000000D0                   3738+         dc ad(208)                                                     02-DCCCA
000026E8 0000000000000000                   3739+         dc ad(0)                                                       02-DCCCA
000026F0 0000000000001000                   3740+         dc ad(4096)                                                    02-DCCCA
000026F8 20                                 3741+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000026F9 03                                 3742+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000026FA 03                                 3743+         dc al1(3)                                                      02-DCCCA
000026FB 08                                 3744+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000026FC 00                                 3745+         dc bl.8'00000000'                                              02-DCCCA
000026FD 000000                             3746+         dc al3(0)                                                      02-DCCCA
00002700 00000000000026A8                   3747+         dc ad(@LNAME1946)                                              02-DCCCA
00002708                                    3748+         ds 0d                                                          02-DCCCA
00002708 00000000000026D0                   3749+         dc ad($eye0080)                                                02-DCCCA
00002710 0000000000000000                   3750+         dc ad(0)                                                       02-DCCCA
00002718                                    3751+         ds    0d                                                       01-DCCPR
00002718                                    3752+rd_kafka_mock_cgrp_sync_done ds 0d                                      01-DCCPR
00002718                                    3753+@REGION_1946_1 ds 0h                                                    01-DCCPR
00002718 EBEC D008 0024          00000008   3754+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000271E E3E0 D088 0004          00000088   3755+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002724 E3C0 D090 0004          00000090   3756+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000272A B904 002E                          3757+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000272E E3B0 C018 0004          00000018   3758+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002734 A7EB 00D0               000000D0   3759+         aghi  14,208              increase by frame size               01-DCCPR
00002738 E3E0 C020 0021          00000020   3760+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000273E 4720 B020               00000020   3761+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002742                                    3762+@PER_1946 ds   0h                                                       01-DCCPR
00002742 EBDE 2080 0024          00000080   3763+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002748 E3C0 2090 0024          00000090   3764+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000274E B904 00D2                          3765+         lgr   13,2                set real frame pointer               01-DCCPR
00002752 B904 00CF                          3766+         lgr   12,15               set base reg                         01-DCCPR
                        00002718            3767+         using @REGION_1946_1,12                                        01-DCCPR
00002756 B904 0041                          3768          LGR   4,1         ; ptr to parm area
                                            3769 * ******* End of Prologue
                                            3770 * *
                                            3771 * ***           rd_kafka_mock_cgrp_member_t *member;
                                            3772 * ***
                                            3773 * ***           for ((member) = ((&mcgrp->members)->tqh_first); (membe\
                                            3774 * r) != (((void *)0)); (member) = ((member)->link .tqe_next)) {
0000275A E3F0 4000 0004          00000000   3775          LG    15,0(0,4)   ; mcgrp
00002760 E320 F0B8 0004          000000B8   3776          LG    2,184(0,15) ; offset of members in rd_kafka_mock_cgrp_s
00002766 47F0 C20A               00002922   3777          B     @L675
00002770                                    3778          DS    0D
00002770 000000D0                           3779 @FRAMESIZE_1946 DC F'208'
00002774 00000000
00002778 0000000000000000                   3780 @lit_1946_118 DC AD(__assert)
00002780 000000000000539A                   3781 @lit_1946_117 DC AD(@strings@)
00002788 0000000000005128                   3782 @lit_1946_116 DC AD(@DATA)
00002790 0000000000001638                   3783 @lit_1946_119 DC AD(rd_kafka_buf_write_i16)
00002798 0000000000001CA8                   3784 @lit_1946_121 DC AD(rd_kafka_buf_write_kbytes)
000027A0 0000000000002538                   3785 @lit_1946_122 DC AD(rd_kafka_mock_cgrp_member_assignment_set)
000027A8 0000000000000000                   3786 @lit_1946_123 DC AD(rd_kafka_mock_connection_set_blocking)
000027B0 0000000000000000                   3787 @lit_1946_124 DC AD(rd_kafka_mock_connection_send_response)
000027B8 0000000000000A90                   3788 @lit_1946_125 DC AD(rd_refcnt_sub0)
                                                                                                                           Page   79 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000027C0 0000000000000000                   3789 @lit_1946_126 DC AD(rd_kafka_buf_destroy_final)
000027C8                                    3790 @L674    DS    0H
                                            3791 * ***                   rd_kafka_buf_t *resp;
                                            3792 * ***
                                            3793 * ***                   if ((resp = member->resp)) {
000027C8 E330 2040 0004          00000040   3794          LG    3,64(0,2)   ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
000027CE B902 00F3                          3795          LTGR  15,3
000027D2 4780 C158               00002870   3796          BZ    @L678
                                            3797 * ***                           member->resp = ((void *)0);
000027D6 A759 0000               00000000   3798          LGHI  5,0         ; 0
000027DA E350 2040 0024          00000040   3799          STG   5,64(0,2)   ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            3800 * ***                           ((resp->rkbuf_reqhdr.ApiKey == 14) ? (\
                                            3801 * void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_\
                                            3802 * mock_cgrp.c", 181, "resp->rkbuf_reqhdr.ApiKey == 14"));
000027E0 48F0 30B8               000000B8   3803          LH    15,184(0,3)
000027E4 A7FE 000E               0000000E   3804          CHI   15,14
000027E8 4780 C110               00002828   3805          BE    @L680
000027EC                                    3806 @L679    DS    0H
000027EC E3F0 C070 0004          00002788   3807          LG    15,@lit_1946_116
000027F2 41F0 F1D0               000001D0   3808          LA    15,464(0,15)
000027F6 E3F0 D0B0 0024          000000B0   3809          STG   15,176(0,13)
000027FC E3F0 C068 0004          00002780   3810          LG    15,@lit_1946_117
00002802 4110 F0C4               000000C4   3811          LA    1,196(0,15)
00002806 E310 D0B8 0024          000000B8   3812          STG   1,184(0,13)
0000280C E548 D0C0 00B5          000000C0   3813          MVGHI 192(13),181
00002812 41F0 F10E               0000010E   3814          LA    15,270(0,15)
00002816 E3F0 D0C8 0024          000000C8   3815          STG   15,200(0,13)
0000281C 4110 D0B0               000000B0   3816          LA    1,176(0,13)
00002820 E3F0 C060 0004          00002778   3817          LG    15,@lit_1946_118 ; __assert
00002826                                    3818 @@gen_label158 DS    0H
00002826 05EF                               3819          BALR  14,15
00002828                                    3820 @@gen_label159 DS    0H
00002828                                    3821 @L680    DS    0H
                                            3822 * ***
                                            3823 * ***
                                            3824 * ***                           rd_kafka_buf_write_i16(resp, err);
00002828 E330 D0B0 0024          000000B0   3825          STG   3,176(0,13)
0000282E 5860 400C               0000000C   3826          L     6,12(0,4)   ; err
00002832 B907 00F6                          3827          LGHR  15,6
00002836 E3F0 D0B8 0024          000000B8   3828          STG   15,184(0,13)
0000283C 4110 D0B0               000000B0   3829          LA    1,176(0,13)
00002840 E3F0 C078 0004          00002790   3830          LG    15,@lit_1946_119 ; rd_kafka_buf_write_i16
00002846                                    3831 @@gen_label160 DS    0H
00002846 05EF                               3832          BALR  14,15
00002848                                    3833 @@gen_label161 DS    0H
                                            3834 * ***
                                            3835 * ***                           rd_kafka_buf_write_kbytes(resp,
                                            3836 * ***                                                     !err ?
00002848 1266                               3837          LTR   6,6
0000284A 4770 C140               00002858   3838          BNZ   @L681
                                                                                                                           Page   80 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            3839 * ***                                                     member->assi\
                                            3840 * gnment : ((void *)0));
0000284E E350 2038 0004          00000038   3841          LG    5,56(0,2)   ; offset of assignment in rd_kafka_mock_cgrp*
                                                                _member_s
00002854 47F0 C140               00002858   3842          B     @L682
00002858                                    3843 @L681    DS    0H
00002858                                    3844 @L682    DS    0H
00002858 E330 D0B0 0024          000000B0   3845          STG   3,176(0,13)
0000285E E350 D0B8 0024          000000B8   3846          STG   5,184(0,13)
00002864 4110 D0B0               000000B0   3847          LA    1,176(0,13)
00002868 E3F0 C080 0004          00002798   3848          LG    15,@lit_1946_121 ; rd_kafka_buf_write_kbytes
0000286E                                    3849 @@gen_label163 DS    0H
0000286E 05EF                               3850          BALR  14,15
00002870                                    3851 @@gen_label164 DS    0H
                                            3852 * ***                   }
00002870                                    3853 @L678    DS    0H
                                            3854 * ***
                                            3855 * ***                   rd_kafka_mock_cgrp_member_assignment_set(mcgrp\
                                            3856 * , member, ((void *)0));
00002870 E3F0 4000 0004          00000000   3857          LG    15,0(0,4)   ; mcgrp
00002876 E3F0 D0B0 0024          000000B0   3858          STG   15,176(0,13)
0000287C E320 D0B8 0024          000000B8   3859          STG   2,184(0,13)
00002882 D707 D0C0 D0C0 000000C0 000000C0   3860          XC    192(8,13),192(13)
00002888 4110 D0B0               000000B0   3861          LA    1,176(0,13)
0000288C E3F0 C088 0004          000027A0   3862          LG    15,@lit_1946_122 ; rd_kafka_mock_cgrp_member_assignment_*
                                                                set
00002892                                    3863 @@gen_label165 DS    0H
00002892 05EF                               3864          BALR  14,15
00002894                                    3865 @@gen_label166 DS    0H
                                            3866 * ***
                                            3867 * ***                   if (member->conn) {
00002894 E3F0 2048 0002          00000048   3868          LTG   15,72(0,2)  ; offset of conn in rd_kafka_mock_cgrp_membe*
                                                                r_s
0000289A 4780 C1CE               000028E6   3869          BZ    @L683
                                            3870 * ***                           rd_kafka_mock_connection_set_blocking(\
                                            3871 * member->conn,
                                            3872 * ***                                                                 \
                                            3873 * 0);
0000289E E3F0 2048 0004          00000048   3874          LG    15,72(0,2)
000028A4 E3F0 D0B0 0024          000000B0   3875          STG   15,176(0,13)
000028AA D707 D0B8 D0B8 000000B8 000000B8   3876          XC    184(8,13),184(13)
000028B0 4110 D0B0               000000B0   3877          LA    1,176(0,13)
000028B4 E3F0 C090 0004          000027A8   3878          LG    15,@lit_1946_123 ; rd_kafka_mock_connection_set_blocking
000028BA                                    3879 @@gen_label168 DS    0H
000028BA 05EF                               3880          BALR  14,15
000028BC                                    3881 @@gen_label169 DS    0H
                                            3882 * ***                           if (resp)
000028BC B902 00F3                          3883          LTGR  15,3
000028C0 4780 C204               0000291C   3884          BZ    @L685
                                            3885 * ***                                   rd_kafka_mock_connection_send_\
                                            3886 * response(
                                            3887 * ***                                           member->conn, resp);
                                                                                                                           Page   81 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000028C4 E3F0 2048 0004          00000048   3888          LG    15,72(0,2)
000028CA E3F0 D0B0 0024          000000B0   3889          STG   15,176(0,13)
000028D0 E330 D0B8 0024          000000B8   3890          STG   3,184(0,13)
000028D6 4110 D0B0               000000B0   3891          LA    1,176(0,13)
000028DA E3F0 C098 0004          000027B0   3892          LG    15,@lit_1946_124 ; rd_kafka_mock_connection_send_respons*
                                                                e
000028E0                                    3893 @@gen_label171 DS    0H
000028E0 05EF                               3894          BALR  14,15
000028E2                                    3895 @@gen_label172 DS    0H
000028E2                                    3896 @L684    DS    0H
                                            3897 * ***                   } else if (resp) {
000028E2 47F0 C204               0000291C   3898          B     @L685
000028E6                                    3899 @L683    DS    0H
000028E6 B902 00F3                          3900          LTGR  15,3
000028EA 4780 C204               0000291C   3901          BZ    @L685
                                            3902 * ***
                                            3903 * ***                           do { if (rd_refcnt_sub0(&(resp)->rkbuf\
                                            3904 * _refcnt) > 0) break; rd_kafka_buf_destroy_final(resp); } while (0);
000028EE                                    3905 @L687    DS    0H
000028EE 41F0 3108               00000108   3906          LA    15,264(0,3)
000028F2 E3F0 D0B0 0024          000000B0   3907          STG   15,176(0,13)
000028F8 4110 D0B0               000000B0   3908          LA    1,176(0,13)
000028FC E3F0 C0A0 0004          000027B8   3909          LG    15,@lit_1946_125 ; rd_refcnt_sub0
00002902                                    3910 @@gen_label174 DS    0H
00002902 05EF                               3911          BALR  14,15
00002904                                    3912 @@gen_label175 DS    0H
00002904 12FF                               3913          LTR   15,15
00002906 4720 C204               0000291C   3914          BH    @L685
0000290A                                    3915 @L690    DS    0H
0000290A E330 D0B0 0024          000000B0   3916          STG   3,176(0,13)
00002910 4110 D0B0               000000B0   3917          LA    1,176(0,13)
00002914 E3F0 C0A8 0004          000027C0   3918          LG    15,@lit_1946_126 ; rd_kafka_buf_destroy_final
0000291A                                    3919 @@gen_label177 DS    0H
0000291A 05EF                               3920          BALR  14,15
0000291C                                    3921 @@gen_label178 DS    0H
0000291C                                    3922 @L688    DS    0H
                                            3923 * ***                   }
0000291C                                    3924 @L686    DS    0H
                                            3925 * ***           }
0000291C                                    3926 @L685    DS    0H
0000291C E320 2000 0004          00000000   3927          LG    2,0(0,2)    ; member
00002922                                    3928 @L675    DS    0H
00002922 B902 00F2                          3929          LTGR  15,2
00002926 4770 C0B0               000027C8   3930          BNE   @L674
                                            3931 * ***   }
0000292A                                    3932 @ret_lab_1946 DS 0H
                                            3933 * * **** Start of Epilogue
                                            3934          DCCEPIL
0000292A                                    3935+         ds 0h                                                          01-DCCEP
                                            3936+* Epilog
0000292A D707 D088 D088 00000088 00000088   3937+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002930 E3D0 D080 0004          00000080   3938+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page   82 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002936 E3C0 D090 0004          00000090   3939+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000293C E3B0 C018 0004          00000018   3940+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002942 E3C0 B010 0021          00000010   3941+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002948 E3E0 D008 0004          00000008   3942+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000294E EB1C D020 0004          00000020   3943+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002954 078E                               3944+         bcr 8,14                if same dsab, just return              01-DCCEP
00002956 E3F0 D010 0024          00000010   3945+         stg 15,16(0,13)         save return code                       01-DCCEP
0000295C E300 D018 0024          00000018   3946+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002962 E3F0 D090 0004          00000090   3947+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002968 E3F0 F018 0004          00000018   3948+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000296E 47F0 F040               00000040   3949+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3950+* End of Epilog
                                            3951 * * **** End of Epilogue
                                            3952          DROP  12
                                            3953 *
                                            3954 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_sync_done"
                                            3955 *      (FUNCTION #1946)
                                            3956 *
00000000                00000000 000000A8   3957 @AUTO#rd_kafka_mock_cgrp_sync_done DSECT
00000000                                    3958          DS    XL168
                                            3959 *
00002972                00000000 00005122   3960 @CODE    CSECT
                                            3961 *
                                            3962 *
                                            3963 *
                                            3964 * ....... start of rd_kafka_mock_cgrp_sync_check
00002972                                    3965 @LNAME1947 DS  0H
00002972 0000001D                           3966          DC    X'0000001D'
00002976 99846D9281869281                   3967          DC    C'rd_kafka_mock_cgrp_sync_check'
00002993 00                                 3968          DC    X'00'
                                            3969 rd_kafka_mock_cgrp_sync_check DCCPRLG CINDEX=1947,BASER=12,FRAME=256,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1947
                                            3970          macro
                                            3971          dccextrn &m
                                            3972          gblc    &$dccext(1000)
                                            3973          gbla    &$dccexti
                                            3974          lcla    &i
                                            3975 &$dccext(&$dccexti+1) setc    '&m'
                                            3976 &i       seta    1
                                            3977 .loop    aif    (&i gt &$dccexti).around
                                            3978          aif    ('&$dccext(&i)' eq '&m').getout
                                            3979 &i       seta    &i+1
                                            3980          ago     .loop
                                            3981 .around  anop
                                            3982 &$dccexti seta &$dccexti+1
                                            3983          extrn  &m
                                            3984 .getout  anop
                                            3985          mend
00002998                                    3986+$eye0083    ds    0d                                                    02-DCCCA
00002998 C4C3C3                             3987+         dc cl3'DCC'                                                    02-DCCCA
0000299B 01                                 3988+         dc xl1'01' format one                                          02-DCCCA
0000299C 00000000                           3989+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   83 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000029A0 0000000000002A0A                   3990+         dc ad(@PER_1947)                                               02-DCCCA
000029A8 0000000000000100                   3991+         dc ad(256)                                                     02-DCCCA
000029B0 0000000000000000                   3992+         dc ad(0)                                                       02-DCCCA
000029B8 0000000000001000                   3993+         dc ad(4096)                                                    02-DCCCA
000029C0 20                                 3994+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000029C1 03                                 3995+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000029C2 03                                 3996+         dc al1(3)                                                      02-DCCCA
000029C3 08                                 3997+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000029C4 00                                 3998+         dc bl.8'00000000'                                              02-DCCCA
000029C5 000000                             3999+         dc al3(0)                                                      02-DCCCA
000029C8 0000000000002972                   4000+         dc ad(@LNAME1947)                                              02-DCCCA
000029D0                                    4001+         ds 0d                                                          02-DCCCA
000029D0 0000000000002998                   4002+         dc ad($eye0083)                                                02-DCCCA
000029D8 0000000000000000                   4003+         dc ad(0)                                                       02-DCCCA
000029E0                                    4004+         ds    0d                                                       01-DCCPR
000029E0                                    4005+rd_kafka_mock_cgrp_sync_check ds 0d                                     01-DCCPR
000029E0                                    4006+@REGION_1947_1 ds 0h                                                    01-DCCPR
000029E0 EBEC D008 0024          00000008   4007+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000029E6 E3E0 D088 0004          00000088   4008+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000029EC E3C0 D090 0004          00000090   4009+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000029F2 B904 002E                          4010+         lgr   2,14                copy addr of our savearea            01-DCCPR
000029F6 E3B0 C018 0004          00000018   4011+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000029FC A7EB 0100               00000100   4012+         aghi  14,256              increase by frame size               01-DCCPR
00002A00 E3E0 C020 0021          00000020   4013+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002A06 4720 B020               00000020   4014+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002A0A                                    4015+@PER_1947 ds   0h                                                       01-DCCPR
00002A0A EBDE 2080 0024          00000080   4016+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002A10 E3C0 2090 0024          00000090   4017+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002A16 B904 00D2                          4018+         lgr   13,2                set real frame pointer               01-DCCPR
00002A1A B904 00CF                          4019+         lgr   12,15               set base reg                         01-DCCPR
                        000029E0            4020+         using @REGION_1947_1,12                                        01-DCCPR
                                            4021          DCCPRV REG=15     ; Get PRV from DVT
00002A1E E3F0 B008 0004          00000008   4022+         LG 15,8(0,11)                                                  01-DCCPR
                                            4023 * ******* End of Prologue
                                            4024 * *
00002A24 E320 1000 0004          00000000   4025          LG    2,0(0,1)    ; mcgrp
                                            4026 * ***
                                            4027 * ***           do { if ((((mcgrp->cluster->rk)->rk_conf.debug & (0x10\
                                            4028 * 000)))) rd_kafka_log0(&mcgrp->cluster->rk->rk_conf,mcgrp->cluster->r\
                                            4029 * k,((void *)0), 7,(0x10000), "MOCK","Mock consumer group %s: awaiting\
                                            4030 *  %d/%d syncing members " "in state %s", mcgrp->id, mcgrp->assignment\
                                            4031 * _cnt, mcgrp->member_cnt, rd_kafka_mock_cgrp_state_names[mcgrp->state\
                                            4032 * ]); } while (0);
00002A2A                                    4033 @L691    DS    0H
00002A2A E310 2010 0004          00000010   4034          LG    1,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
00002A30 E310 1020 0004          00000020   4035          LG    1,32(0,1)   ; offset of rk in rd_kafka_mock_cluster_s
00002A36 9101 1321      00000321 00000001   4036          TM    801(1),1
00002A3A 4780 C10A               00002AEA   4037          BZ    @L694
00002A3E E310 2010 0004          00000010   4038          LG    1,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
00002A44 E310 1020 0004          00000020   4039          LG    1,32(0,1)   ; offset of rk in rd_kafka_mock_cluster_s
00002A4A 4110 1210               00000210   4040          LA    1,528(0,1)
00002A4E E310 D0A8 0024          000000A8   4041          STG   1,168(0,13)
                                                                                                                           Page   84 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002A54 E310 2010 0004          00000010   4042          LG    1,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
00002A5A E310 1020 0004          00000020   4043          LG    1,32(0,1)
00002A60 E310 D0B0 0024          000000B0   4044          STG   1,176(0,13)
00002A66 D707 D0B8 D0B8 000000B8 000000B8   4045          XC    184(8,13),184(13)
00002A6C E548 D0C0 0007          000000C0   4046          MVGHI 192(13),7
00002A72 C01F 0001 0000                     4047          LLILF 1,X'00010000' ; 65536
00002A78 E310 D0C8 0024          000000C8   4048          STG   1,200(0,13)
00002A7E E310 C1B8 0004          00002B98   4049          LG    1,@lit_1947_129
00002A84 4130 1048               00000048   4050          LA    3,72(0,1)
00002A88 E330 D0D0 0024          000000D0   4051          STG   3,208(0,13)
00002A8E 4110 112E               0000012E   4052          LA    1,302(0,1)
00002A92 E310 D0D8 0024          000000D8   4053          STG   1,216(0,13)
00002A98 E310 2020 0004          00000020   4054          LG    1,32(0,2)
00002A9E E310 D0E0 0024          000000E0   4055          STG   1,224(0,13)
00002AA4 E310 20D0 0014          000000D0   4056          LGF   1,208(0,2)
00002AAA E310 D0E8 0024          000000E8   4057          STG   1,232(0,13)
00002AB0 E310 20C8 0014          000000C8   4058          LGF   1,200(0,2)
00002AB6 E310 D0F0 0024          000000F0   4059          STG   1,240(0,13)
00002ABC E310 2040 0014          00000040   4060          LGF   1,64(0,2)
00002AC2 E330 C1B0 0014          00002B90   4061          LGF   3,@lit_1947_130
00002AC8 41F3 F000               00000000   4062          LA    15,0(3,15)
00002ACC EB11 0003 000D          00000003   4063          SLLG  1,1,3(0)    ; *0x8
00002AD2 E3F1 F6D8 0004          000006D8   4064          LG    15,1752(1,15)
00002AD8 E3F0 D0F8 0024          000000F8   4065          STG   15,248(0,13)
00002ADE 4110 D0A8               000000A8   4066          LA    1,168(0,13)
00002AE2 E3F0 C1A8 0004          00002B88   4067          LG    15,@lit_1947_131 ; rd_kafka_log0
00002AE8                                    4068 @@gen_label181 DS    0H
00002AE8 05EF                               4069          BALR  14,15
00002AEA                                    4070 @@gen_label182 DS    0H
00002AEA                                    4071 @L694    DS    0H
                                            4072 * ***
                                            4073 * ***
                                            4074 * ***
                                            4075 * ***
                                            4076 * ***
                                            4077 * ***           if (mcgrp->assignment_cnt < mcgrp->member_cnt)
00002AEA 58F0 20D0               000000D0   4078          L     15,208(0,2) ; offset of assignment_cnt in rd_kafka_mock_*
                                                                cgrp_s
00002AEE 59F0 20C8               000000C8   4079          C     15,200(0,2)
00002AF2 4740 C156               00002B36   4080          BL    @ret_lab_1947
                                            4081 * ***                   return;
00002AF6                                    4082 @L695    DS    0H
                                            4083 * ***
                                            4084 * ***           rd_kafka_mock_cgrp_sync_done(mcgrp, RD_KAFKA_RESP_ERR_\
                                            4085 * NO_ERROR);
00002AF6 E320 D0A8 0024          000000A8   4086          STG   2,168(0,13)
00002AFC D707 D0B0 D0B0 000000B0 000000B0   4087          XC    176(8,13),176(13)
00002B02 4110 D0A8               000000A8   4088          LA    1,168(0,13)
00002B06 E3F0 C1C0 0004          00002BA0   4089          LG    15,@lit_1947_132 ; rd_kafka_mock_cgrp_sync_done
00002B0C                                    4090 @@gen_label184 DS    0H
00002B0C 05EF                               4091          BALR  14,15
00002B0E                                    4092 @@gen_label185 DS    0H
                                                                                                                           Page   85 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4093 * ***           rd_kafka_mock_cgrp_set_state(mcgrp, RD_KAFKA_MOCK_CGRP\
                                            4094 * _STATE_UP,
                                            4095 * ***                                        "all members synced");
00002B0E E320 D0A8 0024          000000A8   4096          STG   2,168(0,13)
00002B14 E548 D0B0 0004          000000B0   4097          MVGHI 176(13),4
00002B1A E3F0 C1B8 0004          00002B98   4098          LG    15,@lit_1947_129
00002B20 41F0 F172               00000172   4099          LA    15,370(0,15)
00002B24 E3F0 D0B8 0024          000000B8   4100          STG   15,184(0,13)
00002B2A 4110 D0A8               000000A8   4101          LA    1,168(0,13)
00002B2E E3F0 C1C8 0004          00002BA8   4102          LG    15,@lit_1947_134 ; rd_kafka_mock_cgrp_set_state
00002B34                                    4103 @@gen_label186 DS    0H
00002B34 05EF                               4104          BALR  14,15
00002B36                                    4105 @@gen_label187 DS    0H
                                            4106 * ***   }
00002B36                                    4107 @ret_lab_1947 DS 0H
                                            4108 * * **** Start of Epilogue
                                            4109          DCCEPIL
00002B36                                    4110+         ds 0h                                                          01-DCCEP
                                            4111+* Epilog
00002B36 D707 D088 D088 00000088 00000088   4112+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002B3C E3D0 D080 0004          00000080   4113+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002B42 E3C0 D090 0004          00000090   4114+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002B48 E3B0 C018 0004          00000018   4115+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002B4E E3C0 B010 0021          00000010   4116+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002B54 E3E0 D008 0004          00000008   4117+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002B5A EB1C D020 0004          00000020   4118+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002B60 078E                               4119+         bcr 8,14                if same dsab, just return              01-DCCEP
00002B62 E3F0 D010 0024          00000010   4120+         stg 15,16(0,13)         save return code                       01-DCCEP
00002B68 E300 D018 0024          00000018   4121+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002B6E E3F0 D090 0004          00000090   4122+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002B74 E3F0 F018 0004          00000018   4123+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002B7A 47F0 F040               00000040   4124+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4125+* End of Epilog
                                            4126 * * **** End of Epilogue
00002B80                                    4127          DS    0D
00002B80 00000100                           4128 @FRAMESIZE_1947 DC F'256'
00002B84 00000000
00002B88 0000000000000000                   4129 @lit_1947_131 DC AD(rd_kafka_log0)
00002B90 00000000                           4130 @lit_1947_130 DC Q(@@STATIC)
00002B94 00000000
00002B98 000000000000539A                   4131 @lit_1947_129 DC AD(@strings@)
00002BA0 0000000000002718                   4132 @lit_1947_132 DC AD(rd_kafka_mock_cgrp_sync_done)
00002BA8 0000000000001EA8                   4133 @lit_1947_134 DC AD(rd_kafka_mock_cgrp_set_state)
                                            4134          DROP  12
                                            4135 *
                                            4136 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_sync_check"
                                            4137 *      (FUNCTION #1947)
                                            4138 *
00000000                00000000 000000A8   4139 @AUTO#rd_kafka_mock_cgrp_sync_check DSECT
00000000                                    4140          DS    XL168
                                            4141 *
00002BB0                00000000 00005122   4142 @CODE    CSECT
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4143 *
                                            4144 *
                                            4145 *
                                            4146 * ....... start of rd_kafka_mock_cgrp_member_sync_set
                                            4147 rd_kafka_mock_cgrp_member_sync_set ALIAS X'99846D92818692816D949683926D*
                                                                838799976D9485948285996DA2A895836DA285A3'
00002BB0                                    4148 @LNAME1933 DS  0H
00002BB0 00000022                           4149          DC    X'00000022'
00002BB4 99846D9281869281                   4150          DC    C'rd_kafka_mock_cgrp_member_sync_s'
00002BD4 85A3                               4151          DC    C'et'
00002BD6 00                                 4152          DC    X'00'
                                            4153 rd_kafka_mock_cgrp_member_sync_set DCCPRLG CINDEX=1933,BASER=12,FRAME=2*
                                                                00,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1933
                                            4154          macro
                                            4155          dccextrn &m
                                            4156          gblc    &$dccext(1000)
                                            4157          gbla    &$dccexti
                                            4158          lcla    &i
                                            4159 &$dccext(&$dccexti+1) setc    '&m'
                                            4160 &i       seta    1
                                            4161 .loop    aif    (&i gt &$dccexti).around
                                            4162          aif    ('&$dccext(&i)' eq '&m').getout
                                            4163 &i       seta    &i+1
                                            4164          ago     .loop
                                            4165 .around  anop
                                            4166 &$dccexti seta &$dccexti+1
                                            4167          extrn  &m
                                            4168 .getout  anop
                                            4169          mend
00002BD8                                    4170+$eye0087    ds    0d                                                    02-DCCCA
00002BD8 C4C3C3                             4171+         dc cl3'DCC'                                                    02-DCCCA
00002BDB 01                                 4172+         dc xl1'01' format one                                          02-DCCCA
00002BDC 00000000                           4173+         dc a(0)                                                        02-DCCCA
00002BE0 0000000000002C4A                   4174+         dc ad(@PER_1933)                                               02-DCCCA
00002BE8 00000000000000C8                   4175+         dc ad(200)                                                     02-DCCCA
00002BF0 0000000000000000                   4176+         dc ad(0)                                                       02-DCCCA
00002BF8 0000000000001000                   4177+         dc ad(4096)                                                    02-DCCCA
00002C00 20                                 4178+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002C01 03                                 4179+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002C02 03                                 4180+         dc al1(3)                                                      02-DCCCA
00002C03 08                                 4181+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002C04 00                                 4182+         dc bl.8'00000000'                                              02-DCCCA
00002C05 000000                             4183+         dc al3(0)                                                      02-DCCCA
00002C08 0000000000002BB0                   4184+         dc ad(@LNAME1933)                                              02-DCCCA
00002C10                                    4185+         ds 0d                                                          02-DCCCA
00002C10 0000000000002BD8                   4186+         dc ad($eye0087)                                                02-DCCCA
00002C18 0000000000000000                   4187+         dc ad(0)                                                       02-DCCCA
00002C20                                    4188+         ds    0d                                                       01-DCCPR
                                            4189+         entry rd_kafka_mock_cgrp_member_sync_set                       01-DCCPR
00002C20                                    4190+rd_kafka_mock_cgrp_member_sync_set ds 0d                                01-DCCPR
00002C20                                    4191+@REGION_1933_1 ds 0h                                                    01-DCCPR
00002C20 EBEC D008 0024          00000008   4192+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   87 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002C26 E3E0 D088 0004          00000088   4193+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002C2C E3C0 D090 0004          00000090   4194+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002C32 B904 002E                          4195+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002C36 E3B0 C018 0004          00000018   4196+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002C3C A7EB 00C8               000000C8   4197+         aghi  14,200              increase by frame size               01-DCCPR
00002C40 E3E0 C020 0021          00000020   4198+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002C46 4720 B020               00000020   4199+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002C4A                                    4200+@PER_1933 ds   0h                                                       01-DCCPR
00002C4A EBDE 2080 0024          00000080   4201+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002C50 E3C0 2090 0024          00000090   4202+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002C56 B904 00D2                          4203+         lgr   13,2                set real frame pointer               01-DCCPR
00002C5A B904 00CF                          4204+         lgr   12,15               set base reg                         01-DCCPR
                        00002C20            4205+         using @REGION_1933_1,12                                        01-DCCPR
00002C5E B904 0041                          4206          LGR   4,1         ; ptr to parm area
                                            4207 * ******* End of Prologue
                                            4208 * *
00002C62 E320 4008 0004          00000008   4209          LG    2,8(0,4)    ; member
00002C68 E330 4000 0004          00000000   4210          LG    3,0(0,4)    ; mcgrp
                                            4211 * ***
                                            4212 * ***           if (mcgrp->state != RD_KAFKA_MOCK_CGRP_STATE_SYNCING)
00002C6E E55C 3040 0002          00000040   4213          CHSI  64(3),2
00002C74 4780 C098               00002CB8   4214          BE    @L696
                                            4215 * ***                   return RD_KAFKA_RESP_ERR_REBALANCE_IN_PROGRESS\
                                            4216 * ;
00002C78 A7F9 001B               0000001B   4217          LGHI  15,27       ; 27
00002C7C 47F0 C13C               00002D5C   4218          B     @ret_lab_1933
00002C80                                    4219          DS    0D
00002C80 000000C8                           4220 @FRAMESIZE_1933 DC F'200'
00002C84 00000000
00002C88 00000000000020B8                   4221 @lit_1933_137 DC AD(rd_kafka_mock_cgrp_member_active)
00002C90 0000000000000000                   4222 @lit_1933_140 DC AD(__assert)
00002C98 000000000000539A                   4223 @lit_1933_139 DC AD(@strings@)
00002CA0 0000000000005128                   4224 @lit_1933_138 DC AD(@DATA)
00002CA8 0000000000000000                   4225 @lit_1933_141 DC AD(rd_kafka_mock_connection_set_blocking)
00002CB0 00000000000029E0                   4226 @lit_1933_142 DC AD(rd_kafka_mock_cgrp_sync_check)
00002CB8                                    4227 @L696    DS    0H
                                            4228 * ***
                                            4229 * ***           rd_kafka_mock_cgrp_member_active(mcgrp, member);
00002CB8 E330 D0A8 0024          000000A8   4230          STG   3,168(0,13)
00002CBE E320 D0B0 0024          000000B0   4231          STG   2,176(0,13)
00002CC4 4110 D0A8               000000A8   4232          LA    1,168(0,13)
00002CC8 E3F0 C068 0004          00002C88   4233          LG    15,@lit_1933_137 ; rd_kafka_mock_cgrp_member_active
00002CCE                                    4234 @@gen_label189 DS    0H
00002CCE 05EF                               4235          BALR  14,15
00002CD0                                    4236 @@gen_label190 DS    0H
                                            4237 * ***
                                            4238 * ***           ((!member->resp) ? (void)0 : __assert(__func__, "C:\\a\
                                            4239 * sgkafka\\librdkafka\\src\\rdkafka_mock_cgrp.c", 244, "!member->resp"\
                                            4240 * ));
00002CD0 E3F0 2040 0002          00000040   4241          LTG   15,64(0,2)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
00002CD6 4780 C0F6               00002D16   4242          BZ    @L698
                                                                                                                           Page   88 
  Active Usings: @REGION_1933_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002CDA                                    4243 @L697    DS    0H
00002CDA E3F0 C080 0004          00002CA0   4244          LG    15,@lit_1933_138
00002CE0 41F0 F1EE               000001EE   4245          LA    15,494(0,15)
00002CE4 E3F0 D0A8 0024          000000A8   4246          STG   15,168(0,13)
00002CEA E3F0 C078 0004          00002C98   4247          LG    15,@lit_1933_139
00002CF0 4110 F0C4               000000C4   4248          LA    1,196(0,15)
00002CF4 E310 D0B0 0024          000000B0   4249          STG   1,176(0,13)
00002CFA E548 D0B8 00F4          000000B8   4250          MVGHI 184(13),244
00002D00 41F0 F186               00000186   4251          LA    15,390(0,15)
00002D04 E3F0 D0C0 0024          000000C0   4252          STG   15,192(0,13)
00002D0A 4110 D0A8               000000A8   4253          LA    1,168(0,13)
00002D0E E3F0 C070 0004          00002C90   4254          LG    15,@lit_1933_140 ; __assert
00002D14                                    4255 @@gen_label192 DS    0H
00002D14 05EF                               4256          BALR  14,15
00002D16                                    4257 @@gen_label193 DS    0H
00002D16                                    4258 @L698    DS    0H
                                            4259 * ***
                                            4260 * ***           member->resp = resp;
00002D16 E3F0 4018 0004          00000018   4261          LG    15,24(0,4)  ; resp
00002D1C E3F0 2040 0024          00000040   4262          STG   15,64(0,2)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            4263 * ***           member->conn = mconn;
00002D22 E3F0 4010 0004          00000010   4264          LG    15,16(0,4)  ; mconn
00002D28 E3F0 2048 0024          00000048   4265          STG   15,72(0,2)  ; offset of conn in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            4266 * ***           rd_kafka_mock_connection_set_blocking(member->conn, 1)\
                                            4267 * ;
00002D2E E3F0 D0A8 0024          000000A8   4268          STG   15,168(0,13)
00002D34 E548 D0B0 0001          000000B0   4269          MVGHI 176(13),1
00002D3A 4110 D0A8               000000A8   4270          LA    1,168(0,13)
00002D3E E3F0 C088 0004          00002CA8   4271          LG    15,@lit_1933_141 ; rd_kafka_mock_connection_set_blocking
00002D44                                    4272 @@gen_label194 DS    0H
00002D44 05EF                               4273          BALR  14,15
00002D46                                    4274 @@gen_label195 DS    0H
                                            4275 * ***
                                            4276 * ***
                                            4277 * ***           rd_kafka_mock_cgrp_sync_check(mcgrp);
00002D46 E330 D0A8 0024          000000A8   4278          STG   3,168(0,13)
00002D4C 4110 D0A8               000000A8   4279          LA    1,168(0,13)
00002D50 E3F0 C090 0004          00002CB0   4280          LG    15,@lit_1933_142 ; rd_kafka_mock_cgrp_sync_check
00002D56                                    4281 @@gen_label196 DS    0H
00002D56 05EF                               4282          BALR  14,15
00002D58                                    4283 @@gen_label197 DS    0H
                                            4284 * ***
                                            4285 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
00002D58 A7F9 0000               00000000   4286          LGHI  15,0        ; 0
                                            4287 * ***   }
00002D5C                                    4288 @ret_lab_1933 DS 0H
                                            4289 * * **** Start of Epilogue
                                            4290          DCCEPIL
00002D5C                                    4291+         ds 0h                                                          01-DCCEP
                                            4292+* Epilog
                                                                                                                           Page   89 
  Active Usings: @REGION_1933_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002D5C D707 D088 D088 00000088 00000088   4293+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002D62 E3D0 D080 0004          00000080   4294+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002D68 E3C0 D090 0004          00000090   4295+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002D6E E3B0 C018 0004          00000018   4296+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002D74 E3C0 B010 0021          00000010   4297+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002D7A E3E0 D008 0004          00000008   4298+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002D80 EB1C D020 0004          00000020   4299+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002D86 078E                               4300+         bcr 8,14                if same dsab, just return              01-DCCEP
00002D88 E3F0 D010 0024          00000010   4301+         stg 15,16(0,13)         save return code                       01-DCCEP
00002D8E E300 D018 0024          00000018   4302+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002D94 E3F0 D090 0004          00000090   4303+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002D9A E3F0 F018 0004          00000018   4304+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002DA0 47F0 F040               00000040   4305+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4306+* End of Epilog
                                            4307 * * **** End of Epilogue
                                            4308          DROP  12
                                            4309 *
                                            4310 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_member_sync_s
                                            4311 *           et"
                                            4312 *      (FUNCTION #1933)
                                            4313 *
00000000                00000000 000000A8   4314 @AUTO#rd_kafka_mock_cgrp_member_sync_set DSECT
00000000                                    4315          DS    XL168
                                            4316 *
00002DA4                00000000 00005122   4317 @CODE    CSECT
                                            4318 *
                                            4319 *
                                            4320 *
                                            4321 * ....... start of rd_kafka_mock_cgrp_member_leave
                                            4322 rd_kafka_mock_cgrp_member_leave ALIAS X'99846D92818692816D949683926D838*
                                                                799976D9485948285996D938581A585'
00002DA4                                    4323 @LNAME1934 DS  0H
00002DA4 0000001F                           4324          DC    X'0000001F'
00002DA8 99846D9281869281                   4325          DC    C'rd_kafka_mock_cgrp_member_leave'
00002DC7 00                                 4326          DC    X'00'
                                            4327 rd_kafka_mock_cgrp_member_leave DCCPRLG CINDEX=1934,BASER=12,FRAME=240,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1934
                                            4328          macro
                                            4329          dccextrn &m
                                            4330          gblc    &$dccext(1000)
                                            4331          gbla    &$dccexti
                                            4332          lcla    &i
                                            4333 &$dccext(&$dccexti+1) setc    '&m'
                                            4334 &i       seta    1
                                            4335 .loop    aif    (&i gt &$dccexti).around
                                            4336          aif    ('&$dccext(&i)' eq '&m').getout
                                            4337 &i       seta    &i+1
                                            4338          ago     .loop
                                            4339 .around  anop
                                            4340 &$dccexti seta &$dccexti+1
                                            4341          extrn  &m
                                            4342 .getout  anop
                                                                                                                           Page   90 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4343          mend
00002DC8                                    4344+$eye0090    ds    0d                                                    02-DCCCA
00002DC8 C4C3C3                             4345+         dc cl3'DCC'                                                    02-DCCCA
00002DCB 01                                 4346+         dc xl1'01' format one                                          02-DCCCA
00002DCC 00000000                           4347+         dc a(0)                                                        02-DCCCA
00002DD0 0000000000002E3A                   4348+         dc ad(@PER_1934)                                               02-DCCCA
00002DD8 00000000000000F0                   4349+         dc ad(240)                                                     02-DCCCA
00002DE0 0000000000000000                   4350+         dc ad(0)                                                       02-DCCCA
00002DE8 0000000000001000                   4351+         dc ad(4096)                                                    02-DCCCA
00002DF0 20                                 4352+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002DF1 03                                 4353+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002DF2 03                                 4354+         dc al1(3)                                                      02-DCCCA
00002DF3 08                                 4355+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002DF4 00                                 4356+         dc bl.8'00000000'                                              02-DCCCA
00002DF5 000000                             4357+         dc al3(0)                                                      02-DCCCA
00002DF8 0000000000002DA4                   4358+         dc ad(@LNAME1934)                                              02-DCCCA
00002E00                                    4359+         ds 0d                                                          02-DCCCA
00002E00 0000000000002DC8                   4360+         dc ad($eye0090)                                                02-DCCCA
00002E08 0000000000000000                   4361+         dc ad(0)                                                       02-DCCCA
00002E10                                    4362+         ds    0d                                                       01-DCCPR
                                            4363+         entry rd_kafka_mock_cgrp_member_leave                          01-DCCPR
00002E10                                    4364+rd_kafka_mock_cgrp_member_leave ds 0d                                   01-DCCPR
00002E10                                    4365+@REGION_1934_1 ds 0h                                                    01-DCCPR
00002E10 EBEC D008 0024          00000008   4366+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002E16 E3E0 D088 0004          00000088   4367+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002E1C E3C0 D090 0004          00000090   4368+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002E22 B904 002E                          4369+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002E26 E3B0 C018 0004          00000018   4370+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002E2C A7EB 00F0               000000F0   4371+         aghi  14,240              increase by frame size               01-DCCPR
00002E30 E3E0 C020 0021          00000020   4372+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002E36 4720 B020               00000020   4373+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002E3A                                    4374+@PER_1934 ds   0h                                                       01-DCCPR
00002E3A EBDE 2080 0024          00000080   4375+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002E40 E3C0 2090 0024          00000090   4376+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002E46 B904 00D2                          4377+         lgr   13,2                set real frame pointer               01-DCCPR
00002E4A B904 00CF                          4378+         lgr   12,15               set base reg                         01-DCCPR
                        00002E10            4379+         using @REGION_1934_1,12                                        01-DCCPR
00002E4E B904 0031                          4380          LGR   3,1         ; ptr to parm area
                                            4381 * ******* End of Prologue
                                            4382 * *
00002E52 E320 3000 0004          00000000   4383          LG    2,0(0,3)    ; mcgrp
                                            4384 * ***
                                            4385 * ***           do { if ((((mcgrp->cluster->rk)->rk_conf.debug & (0x10\
                                            4386 * 000)))) rd_kafka_log0(&mcgrp->cluster->rk->rk_conf,mcgrp->cluster->r\
                                            4387 * k,((void *)0), 7,(0x10000), "MOCK","Member %s is leaving group %s", \
                                            4388 * member->id, mcgrp->id); } while (0);
00002E58                                    4389 @L699    DS    0H
00002E58 E3F0 2010 0004          00000010   4390          LG    15,16(0,2)  ; offset of cluster in rd_kafka_mock_cgrp_s
00002E5E E3F0 F020 0004          00000020   4391          LG    15,32(0,15) ; offset of rk in rd_kafka_mock_cluster_s
00002E64 9101 F321      00000321 00000001   4392          TM    801(15),1
00002E68 4780 C0E0               00002EF0   4393          BZ    @L702
00002E6C E3F0 2010 0004          00000010   4394          LG    15,16(0,2)  ; offset of cluster in rd_kafka_mock_cgrp_s
                                                                                                                           Page   91 
  Active Usings: @REGION_1934_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00002E72 E3F0 F020 0004          00000020   4395          LG    15,32(0,15) ; offset of rk in rd_kafka_mock_cluster_s
00002E78 41F0 F210               00000210   4396          LA    15,528(0,15)
00002E7C E3F0 D0A8 0024          000000A8   4397          STG   15,168(0,13)
00002E82 E3F0 2010 0004          00000010   4398          LG    15,16(0,2)  ; offset of cluster in rd_kafka_mock_cgrp_s
00002E88 E3F0 F020 0004          00000020   4399          LG    15,32(0,15)
00002E8E E3F0 D0B0 0024          000000B0   4400          STG   15,176(0,13)
00002E94 D707 D0B8 D0B8 000000B8 000000B8   4401          XC    184(8,13),184(13)
00002E9A E548 D0C0 0007          000000C0   4402          MVGHI 192(13),7
00002EA0 C0FF 0001 0000                     4403          LLILF 15,X'00010000' ; 65536
00002EA6 E3F0 D0C8 0024          000000C8   4404          STG   15,200(0,13)
00002EAC E3F0 C180 0004          00002F90   4405          LG    15,@lit_1934_146
00002EB2 4110 F048               00000048   4406          LA    1,72(0,15)
00002EB6 E310 D0D0 0024          000000D0   4407          STG   1,208(0,13)
00002EBC 41F0 F194               00000194   4408          LA    15,404(0,15)
00002EC0 E3F0 D0D8 0024          000000D8   4409          STG   15,216(0,13)
00002EC6 E3F0 3008 0004          00000008   4410          LG    15,8(0,3)   ; member
00002ECC E3F0 F010 0004          00000010   4411          LG    15,16(0,15)
00002ED2 E3F0 D0E0 0024          000000E0   4412          STG   15,224(0,13)
00002ED8 E3F0 2020 0004          00000020   4413          LG    15,32(0,2)
00002EDE E3F0 D0E8 0024          000000E8   4414          STG   15,232(0,13)
00002EE4 4110 D0A8               000000A8   4415          LA    1,168(0,13)
00002EE8 E3F0 C178 0004          00002F88   4416          LG    15,@lit_1934_147 ; rd_kafka_log0
00002EEE                                    4417 @@gen_label199 DS    0H
00002EEE 05EF                               4418          BALR  14,15
00002EF0                                    4419 @@gen_label200 DS    0H
00002EF0                                    4420 @L702    DS    0H
                                            4421 * ***
                                            4422 * ***
                                            4423 * ***           rd_kafka_mock_cgrp_member_destroy(mcgrp, member);
00002EF0 E320 D0A8 0024          000000A8   4424          STG   2,168(0,13)
00002EF6 E3F0 3008 0004          00000008   4425          LG    15,8(0,3)   ; member
00002EFC E3F0 D0B0 0024          000000B0   4426          STG   15,176(0,13)
00002F02 4110 D0A8               000000A8   4427          LA    1,168(0,13)
00002F06 E3F0 C188 0004          00002F98   4428          LG    15,@lit_1934_148 ; rd_kafka_mock_cgrp_member_destroy
00002F0C                                    4429 @@gen_label201 DS    0H
00002F0C 05EF                               4430          BALR  14,15
00002F0E                                    4431 @@gen_label202 DS    0H
                                            4432 * ***
                                            4433 * ***           rd_kafka_mock_cgrp_rebalance(mcgrp, "explicit member l\
                                            4434 * eave");
00002F0E E320 D0A8 0024          000000A8   4435          STG   2,168(0,13)
00002F14 E3F0 C180 0004          00002F90   4436          LG    15,@lit_1934_146
00002F1A 41F0 F1B2               000001B2   4437          LA    15,434(0,15)
00002F1E E3F0 D0B0 0024          000000B0   4438          STG   15,176(0,13)
00002F24 4110 D0A8               000000A8   4439          LA    1,168(0,13)
00002F28 E3F0 C190 0004          00002FA0   4440          LG    15,@lit_1934_150 ; rd_kafka_mock_cgrp_rebalance
00002F2E                                    4441 @@gen_label203 DS    0H
00002F2E 05EF                               4442          BALR  14,15
00002F30                                    4443 @@gen_label204 DS    0H
                                            4444 * ***
                                            4445 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
00002F30 A7F9 0000               00000000   4446          LGHI  15,0        ; 0
                                                                                                                           Page   92 
  Active Usings: @REGION_1934_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4447 * ***   }
                                            4448 * * **** Start of Epilogue
                                            4449          DCCEPIL
00002F34                                    4450+         ds 0h                                                          01-DCCEP
                                            4451+* Epilog
00002F34 D707 D088 D088 00000088 00000088   4452+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002F3A E3D0 D080 0004          00000080   4453+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002F40 E3C0 D090 0004          00000090   4454+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002F46 E3B0 C018 0004          00000018   4455+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002F4C E3C0 B010 0021          00000010   4456+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002F52 E3E0 D008 0004          00000008   4457+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002F58 EB1C D020 0004          00000020   4458+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002F5E 078E                               4459+         bcr 8,14                if same dsab, just return              01-DCCEP
00002F60 E3F0 D010 0024          00000010   4460+         stg 15,16(0,13)         save return code                       01-DCCEP
00002F66 E300 D018 0024          00000018   4461+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002F6C E3F0 D090 0004          00000090   4462+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002F72 E3F0 F018 0004          00000018   4463+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002F78 47F0 F040               00000040   4464+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4465+* End of Epilog
                                            4466 * * **** End of Epilogue
00002F80                                    4467          DS    0D
00002F80 000000F0                           4468 @FRAMESIZE_1934 DC F'240'
00002F84 00000000
00002F88 0000000000000000                   4469 @lit_1934_147 DC AD(rd_kafka_log0)
00002F90 000000000000539A                   4470 @lit_1934_146 DC AD(@strings@)
00002F98 0000000000003FA8                   4471 @lit_1934_148 DC AD(rd_kafka_mock_cgrp_member_destroy)
00002FA0 0000000000003840                   4472 @lit_1934_150 DC AD(rd_kafka_mock_cgrp_rebalance)
                                            4473          DROP  12
                                            4474 *
                                            4475 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_member_leave"
                                            4476 *      (FUNCTION #1934)
                                            4477 *
00000000                00000000 000000A8   4478 @AUTO#rd_kafka_mock_cgrp_member_leave DSECT
00000000                                    4479          DS    XL168
                                            4480 *
00002FA8                00000000 00005122   4481 @CODE    CSECT
                                            4482 *
                                            4483 *
                                            4484 *
                                            4485 * ....... start of rd_kafka_mock_cgrp_protos_destroy
                                            4486 rd_kafka_mock_cgrp_protos_destroy ALIAS X'99846D92818692816D949683926D8*
                                                                38799976D979996A396A26D8485A2A39996A8'
00002FA8                                    4487 @LNAME1935 DS  0H
00002FA8 00000021                           4488          DC    X'00000021'
00002FAC 99846D9281869281                   4489          DC    C'rd_kafka_mock_cgrp_protos_destro'
00002FCC A8                                 4490          DC    C'y'
00002FCD 00                                 4491          DC    X'00'
                                            4492 rd_kafka_mock_cgrp_protos_destroy DCCPRLG CINDEX=1935,BASER=12,FRAME=18*
                                                                4,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1935
                                            4493          macro
                                            4494          dccextrn &m
                                            4495          gblc    &$dccext(1000)
                                                                                                                           Page   93 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4496          gbla    &$dccexti
                                            4497          lcla    &i
                                            4498 &$dccext(&$dccexti+1) setc    '&m'
                                            4499 &i       seta    1
                                            4500 .loop    aif    (&i gt &$dccexti).around
                                            4501          aif    ('&$dccext(&i)' eq '&m').getout
                                            4502 &i       seta    &i+1
                                            4503          ago     .loop
                                            4504 .around  anop
                                            4505 &$dccexti seta &$dccexti+1
                                            4506          extrn  &m
                                            4507 .getout  anop
                                            4508          mend
00002FD0                                    4509+$eye0093    ds    0d                                                    02-DCCCA
00002FD0 C4C3C3                             4510+         dc cl3'DCC'                                                    02-DCCCA
00002FD3 01                                 4511+         dc xl1'01' format one                                          02-DCCCA
00002FD4 00000000                           4512+         dc a(0)                                                        02-DCCCA
00002FD8 0000000000003042                   4513+         dc ad(@PER_1935)                                               02-DCCCA
00002FE0 00000000000000B8                   4514+         dc ad(184)                                                     02-DCCCA
00002FE8 0000000000000000                   4515+         dc ad(0)                                                       02-DCCCA
00002FF0 0000000000001000                   4516+         dc ad(4096)                                                    02-DCCCA
00002FF8 20                                 4517+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002FF9 03                                 4518+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002FFA 03                                 4519+         dc al1(3)                                                      02-DCCCA
00002FFB 08                                 4520+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002FFC 00                                 4521+         dc bl.8'00000000'                                              02-DCCCA
00002FFD 000000                             4522+         dc al3(0)                                                      02-DCCCA
00003000 0000000000002FA8                   4523+         dc ad(@LNAME1935)                                              02-DCCCA
00003008                                    4524+         ds 0d                                                          02-DCCCA
00003008 0000000000002FD0                   4525+         dc ad($eye0093)                                                02-DCCCA
00003010 0000000000000000                   4526+         dc ad(0)                                                       02-DCCCA
00003018                                    4527+         ds    0d                                                       01-DCCPR
                                            4528+         entry rd_kafka_mock_cgrp_protos_destroy                        01-DCCPR
00003018                                    4529+rd_kafka_mock_cgrp_protos_destroy ds 0d                                 01-DCCPR
00003018                                    4530+@REGION_1935_1 ds 0h                                                    01-DCCPR
00003018 EBEC D008 0024          00000008   4531+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000301E E3E0 D088 0004          00000088   4532+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003024 E3C0 D090 0004          00000090   4533+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000302A B904 002E                          4534+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000302E E3B0 C018 0004          00000018   4535+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003034 A7EB 00B8               000000B8   4536+         aghi  14,184              increase by frame size               01-DCCPR
00003038 E3E0 C020 0021          00000020   4537+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000303E 4720 B020               00000020   4538+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003042                                    4539+@PER_1935 ds   0h                                                       01-DCCPR
00003042 EBDE 2080 0024          00000080   4540+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003048 E3C0 2090 0024          00000090   4541+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000304E B904 00D2                          4542+         lgr   13,2                set real frame pointer               01-DCCPR
00003052 B904 00CF                          4543+         lgr   12,15               set base reg                         01-DCCPR
                        00003018            4544+         using @REGION_1935_1,12                                        01-DCCPR
00003056 B904 0041                          4545          LGR   4,1         ; ptr to parm area
                                            4546 * ******* End of Prologue
                                            4547 * *
                                                                                                                           Page   94 
  Active Usings: @REGION_1935_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000305A E330 4000 0004          00000000   4548          LG    3,0(0,4)    ; protos
                                            4549 * ***           int i;
                                            4550 * ***
                                            4551 * ***           for (i = 0 ; i < proto_cnt ; i++) {
00003060 A728 0000               00000000   4552          LHI   2,0         ; 0
00003064 47F0 C0BE               000030D6   4553          B     @L704
00003068                                    4554          DS    0D
00003068 000000B8                           4555 @FRAMESIZE_1935 DC F'184'
0000306C 00000000
00003070 0000000000000658                   4556 @lit_1935_154 DC AD(rd_free)
00003078                                    4557 @L703    DS    0H
                                            4558 * ***                   rd_free(protos[i].name);
00003078 B914 00F2                          4559          LGFR  15,2
0000307C EBFF 0004 000D          00000004   4560          SLLG  15,15,4(0)  ; *0x10
00003082 E3FF 3000 0004          00000000   4561          LG    15,0(15,3)
00003088 E3F0 D0B0 0024          000000B0   4562          STG   15,176(0,13)
0000308E 4110 D0B0               000000B0   4563          LA    1,176(0,13)
00003092 E350 C058 0004          00003070   4564          LG    5,@lit_1935_154 ; rd_free
00003098 B904 00F5                          4565          LGR   15,5
0000309C                                    4566 @@gen_label205 DS    0H
0000309C 05EF                               4567          BALR  14,15
0000309E                                    4568 @@gen_label206 DS    0H
                                            4569 * ***                   if (protos[i].metadata)
0000309E B914 00F2                          4570          LGFR  15,2
000030A2 EBFF 0004 000D          00000004   4571          SLLG  15,15,4(0)  ; *0x10
000030A8 E3FF 3008 0002          00000008   4572          LTG   15,8(15,3)  ; offset of metadata in rd_kafka_mock_cgrp_p*
                                                                roto_s
000030AE 4780 C0BA               000030D2   4573          BZ    @L707
                                            4574 * ***                           rd_free(protos[i].metadata);
000030B2 B914 00F2                          4575          LGFR  15,2
000030B6 EBFF 0004 000D          00000004   4576          SLLG  15,15,4(0)  ; *0x10
000030BC E3FF 3008 0004          00000008   4577          LG    15,8(15,3)
000030C2 E3F0 D0B0 0024          000000B0   4578          STG   15,176(0,13)
000030C8 4110 D0B0               000000B0   4579          LA    1,176(0,13)
000030CC B904 00F5                          4580          LGR   15,5
000030D0                                    4581 @@gen_label208 DS    0H
000030D0 05EF                               4582          BALR  14,15
000030D2                                    4583 @@gen_label209 DS    0H
000030D2                                    4584 @L707    DS    0H
                                            4585 * ***           }
000030D2 A72A 0001               00000001   4586          AHI   2,1
000030D6                                    4587 @L704    DS    0H
000030D6 5920 400C               0000000C   4588          C     2,12(0,4)
000030DA 4740 C060               00003078   4589          BL    @L703
                                            4590 * ***
                                            4591 * ***           rd_free(protos);
000030DE E330 D0B0 0024          000000B0   4592          STG   3,176(0,13)
000030E4 4110 D0B0               000000B0   4593          LA    1,176(0,13)
000030E8 E3F0 C058 0004          00003070   4594          LG    15,@lit_1935_154 ; rd_free
000030EE                                    4595 @@gen_label211 DS    0H
000030EE 05EF                               4596          BALR  14,15
000030F0                                    4597 @@gen_label212 DS    0H
                                                                                                                           Page   95 
  Active Usings: @REGION_1935_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4598 * ***   }
000030F0                                    4599 @ret_lab_1935 DS 0H
                                            4600 * * **** Start of Epilogue
                                            4601          DCCEPIL
000030F0                                    4602+         ds 0h                                                          01-DCCEP
                                            4603+* Epilog
000030F0 D707 D088 D088 00000088 00000088   4604+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000030F6 E3D0 D080 0004          00000080   4605+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000030FC E3C0 D090 0004          00000090   4606+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003102 E3B0 C018 0004          00000018   4607+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003108 E3C0 B010 0021          00000010   4608+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000310E E3E0 D008 0004          00000008   4609+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003114 EB1C D020 0004          00000020   4610+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000311A 078E                               4611+         bcr 8,14                if same dsab, just return              01-DCCEP
0000311C E3F0 D010 0024          00000010   4612+         stg 15,16(0,13)         save return code                       01-DCCEP
00003122 E300 D018 0024          00000018   4613+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003128 E3F0 D090 0004          00000090   4614+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000312E E3F0 F018 0004          00000018   4615+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003134 47F0 F040               00000040   4616+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4617+* End of Epilog
                                            4618 * * **** End of Epilogue
                                            4619          DROP  12
                                            4620 *
                                            4621 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_protos_destro
                                            4622 *           y"
                                            4623 *      (FUNCTION #1935)
                                            4624 *
00000000                00000000 000000AC   4625 @AUTO#rd_kafka_mock_cgrp_protos_destroy DSECT
00000000                                    4626          DS    XL168
000000A8                                    4627 rd_kafka_mock_cgrp_protos_destroy#i#0 DS 1F ; i
                                            4628 *
00003138                00000000 00005122   4629 @CODE    CSECT
                                            4630 *
                                            4631 *
                                            4632 *
                                            4633 * ....... start of rd_kafka_mock_cgrp_elect_leader
00003138                                    4634 @LNAME1949 DS  0H
00003138 0000001F                           4635          DC    X'0000001F'
0000313C 99846D9281869281                   4636          DC    C'rd_kafka_mock_cgrp_elect_leader'
0000315B 00                                 4637          DC    X'00'
                                            4638 rd_kafka_mock_cgrp_elect_leader DCCPRLG CINDEX=1949,BASER=12,FRAME=264,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1949
                                            4639          macro
                                            4640          dccextrn &m
                                            4641          gblc    &$dccext(1000)
                                            4642          gbla    &$dccexti
                                            4643          lcla    &i
                                            4644 &$dccext(&$dccexti+1) setc    '&m'
                                            4645 &i       seta    1
                                            4646 .loop    aif    (&i gt &$dccexti).around
                                            4647          aif    ('&$dccext(&i)' eq '&m').getout
                                            4648 &i       seta    &i+1
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4649          ago     .loop
                                            4650 .around  anop
                                            4651 &$dccexti seta &$dccexti+1
                                            4652          extrn  &m
                                            4653 .getout  anop
                                            4654          mend
00003160                                    4655+$eye0096    ds    0d                                                    02-DCCCA
00003160 C4C3C3                             4656+         dc cl3'DCC'                                                    02-DCCCA
00003163 01                                 4657+         dc xl1'01' format one                                          02-DCCCA
00003164 00000000                           4658+         dc a(0)                                                        02-DCCCA
00003168 00000000000031D2                   4659+         dc ad(@PER_1949)                                               02-DCCCA
00003170 0000000000000108                   4660+         dc ad(264)                                                     02-DCCCA
00003178 0000000000000000                   4661+         dc ad(0)                                                       02-DCCCA
00003180 0000000000001000                   4662+         dc ad(4096)                                                    02-DCCCA
00003188 20                                 4663+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003189 03                                 4664+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000318A 03                                 4665+         dc al1(3)                                                      02-DCCCA
0000318B 08                                 4666+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000318C 00                                 4667+         dc bl.8'00000000'                                              02-DCCCA
0000318D 000000                             4668+         dc al3(0)                                                      02-DCCCA
00003190 0000000000003138                   4669+         dc ad(@LNAME1949)                                              02-DCCCA
00003198                                    4670+         ds 0d                                                          02-DCCCA
00003198 0000000000003160                   4671+         dc ad($eye0096)                                                02-DCCCA
000031A0 0000000000000000                   4672+         dc ad(0)                                                       02-DCCCA
000031A8                                    4673+         ds    0d                                                       01-DCCPR
000031A8                                    4674+rd_kafka_mock_cgrp_elect_leader ds 0d                                   01-DCCPR
000031A8                                    4675+@REGION_1949_1 ds 0h                                                    01-DCCPR
000031A8 EBEC D008 0024          00000008   4676+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000031AE E3E0 D088 0004          00000088   4677+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000031B4 E3C0 D090 0004          00000090   4678+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000031BA B904 002E                          4679+         lgr   2,14                copy addr of our savearea            01-DCCPR
000031BE E3B0 C018 0004          00000018   4680+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000031C4 A7EB 0108               00000108   4681+         aghi  14,264              increase by frame size               01-DCCPR
000031C8 E3E0 C020 0021          00000020   4682+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000031CE 4720 B020               00000020   4683+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000031D2                                    4684+@PER_1949 ds   0h                                                       01-DCCPR
000031D2 EBDE 2080 0024          00000080   4685+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000031D8 E3C0 2090 0024          00000090   4686+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000031DE B904 00D2                          4687+         lgr   13,2                set real frame pointer               01-DCCPR
000031E2 B904 00CF                          4688+         lgr   12,15               set base reg                         01-DCCPR
                        000031A8            4689+         using @REGION_1949_1,12                                        01-DCCPR
                                            4690 * ******* End of Prologue
                                            4691 * *
000031E6 E340 1000 0004          00000000   4692          LG    4,0(0,1)    ; mcgrp
                                            4693 * ***           rd_kafka_mock_cgrp_member_t *member;
                                            4694 * ***
                                            4695 * ***           ((mcgrp->state == RD_KAFKA_MOCK_CGRP_STATE_JOINING) ? \
                                            4696 * (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka\
                                            4697 * _mock_cgrp.c", 300, "mcgrp->state == RD_KAFKA_MOCK_CGRP_STATE_JOININ\
                                            4698 * G"));
000031EC E55C 4040 0001          00000040   4699          CHSI  64(4),1
000031F2 4780 C08A               00003232   4700          BE    @L709
                                                                                                                           Page   97 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000031F6                                    4701 @L708    DS    0H
000031F6 E3F0 C1F8 0004          000033A0   4702          LG    15,@lit_1949_158
000031FC 41F0 F212               00000212   4703          LA    15,530(0,15)
00003200 E3F0 D0B0 0024          000000B0   4704          STG   15,176(0,13)
00003206 E3F0 C1F0 0004          00003398   4705          LG    15,@lit_1949_159
0000320C 4110 F0C4               000000C4   4706          LA    1,196(0,15)
00003210 E310 D0B8 0024          000000B8   4707          STG   1,184(0,13)
00003216 E548 D0C0 012C          000000C0   4708          MVGHI 192(13),300
0000321C 41F0 F1C8               000001C8   4709          LA    15,456(0,15)
00003220 E3F0 D0C8 0024          000000C8   4710          STG   15,200(0,13)
00003226 4110 D0B0               000000B0   4711          LA    1,176(0,13)
0000322A E3F0 C1E8 0004          00003390   4712          LG    15,@lit_1949_160 ; __assert
00003230                                    4713 @@gen_label214 DS    0H
00003230 05EF                               4714          BALR  14,15
00003232                                    4715 @@gen_label215 DS    0H
00003232                                    4716 @L709    DS    0H
                                            4717 * ***           ((!(((&mcgrp->members)->tqh_first) == (((void *)0)))) \
                                            4718 * ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkaf\
                                            4719 * ka_mock_cgrp.c", 301, "!(((&mcgrp->members)->tqh_first) == (((void *\
                                            4720 * )0)))"));
00003232 E3F0 40B8 0002          000000B8   4721          LTG   15,184(0,4) ; offset of members in rd_kafka_mock_cgrp_s
00003238 4770 C0D0               00003278   4722          BNE   @L711
0000323C                                    4723 @L710    DS    0H
0000323C E3F0 C1F8 0004          000033A0   4724          LG    15,@lit_1949_158
00003242 41F0 F212               00000212   4725          LA    15,530(0,15)
00003246 E3F0 D0B0 0024          000000B0   4726          STG   15,176(0,13)
0000324C E3F0 C1F0 0004          00003398   4727          LG    15,@lit_1949_159
00003252 4110 F0C4               000000C4   4728          LA    1,196(0,15)
00003256 E310 D0B8 0024          000000B8   4729          STG   1,184(0,13)
0000325C E548 D0C0 012D          000000C0   4730          MVGHI 192(13),301
00003262 41F0 F1FA               000001FA   4731          LA    15,506(0,15)
00003266 E3F0 D0C8 0024          000000C8   4732          STG   15,200(0,13)
0000326C 4110 D0B0               000000B0   4733          LA    1,176(0,13)
00003270 E3F0 C1E8 0004          00003390   4734          LG    15,@lit_1949_160 ; __assert
00003276                                    4735 @@gen_label217 DS    0H
00003276 05EF                               4736          BALR  14,15
00003278                                    4737 @@gen_label218 DS    0H
00003278                                    4738 @L711    DS    0H
                                            4739 * ***
                                            4740 * ***           mcgrp->generation_id++;
00003278 58F0 4038               00000038   4741          L     15,56(0,4)
0000327C A7FA 0001               00000001   4742          AHI   15,1
00003280 50F0 4038               00000038   4743          ST    15,56(0,4)
                                            4744 * ***
                                            4745 * ***
                                            4746 * ***
                                            4747 * ***           mcgrp->leader = ((&mcgrp->members)->tqh_first);
00003284 E3F0 40B8 0004          000000B8   4748          LG    15,184(0,4) ; offset of members in rd_kafka_mock_cgrp_s
0000328A E3F0 40D8 0024          000000D8   4749          STG   15,216(0,4) ; offset of leader in rd_kafka_mock_cgrp_s
                                            4750 * ***
                                            4751 * ***           do { if ((((mcgrp->cluster->rk)->rk_conf.debug & (0x10\
                                            4752 * 000)))) rd_kafka_log0(&mcgrp->cluster->rk->rk_conf,mcgrp->cluster->r\
                                                                                                                           Page   98 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4753 * k,((void *)0), 7,(0x10000), "MOCK","Consumer group %s with %d member\
                                            4754 * (s) is rebalancing: " "elected leader is %s, generation id %d", mcgr\
                                            4755 * p->id, mcgrp->member_cnt, mcgrp->leader->id, mcgrp->generation_id); \
                                            4756 * } while (0);
00003290                                    4757 @L712    DS    0H
00003290 E3F0 4010 0004          00000010   4758          LG    15,16(0,4)  ; offset of cluster in rd_kafka_mock_cgrp_s
00003296 E3F0 F020 0004          00000020   4759          LG    15,32(0,15) ; offset of rk in rd_kafka_mock_cluster_s
0000329C 9101 F321      00000321 00000001   4760          TM    801(15),1
000032A0 4780 C198               00003340   4761          BZ    @L715
000032A4 E3F0 4010 0004          00000010   4762          LG    15,16(0,4)  ; offset of cluster in rd_kafka_mock_cgrp_s
000032AA E3F0 F020 0004          00000020   4763          LG    15,32(0,15) ; offset of rk in rd_kafka_mock_cluster_s
000032B0 41F0 F210               00000210   4764          LA    15,528(0,15)
000032B4 E3F0 D0B0 0024          000000B0   4765          STG   15,176(0,13)
000032BA E3F0 4010 0004          00000010   4766          LG    15,16(0,4)  ; offset of cluster in rd_kafka_mock_cgrp_s
000032C0 E3F0 F020 0004          00000020   4767          LG    15,32(0,15)
000032C6 E3F0 D0B8 0024          000000B8   4768          STG   15,184(0,13)
000032CC D707 D0C0 D0C0 000000C0 000000C0   4769          XC    192(8,13),192(13)
000032D2 E548 D0C8 0007          000000C8   4770          MVGHI 200(13),7
000032D8 C0FF 0001 0000                     4771          LLILF 15,X'00010000' ; 65536
000032DE E3F0 D0D0 0024          000000D0   4772          STG   15,208(0,13)
000032E4 E3F0 C1F0 0004          00003398   4773          LG    15,@lit_1949_159
000032EA 4110 F048               00000048   4774          LA    1,72(0,15)
000032EE E310 D0D8 0024          000000D8   4775          STG   1,216(0,13)
000032F4 41F0 F22E               0000022E   4776          LA    15,558(0,15)
000032F8 E3F0 D0E0 0024          000000E0   4777          STG   15,224(0,13)
000032FE E3F0 4020 0004          00000020   4778          LG    15,32(0,4)
00003304 E3F0 D0E8 0024          000000E8   4779          STG   15,232(0,13)
0000330A E3F0 40C8 0014          000000C8   4780          LGF   15,200(0,4)
00003310 E3F0 D0F0 0024          000000F0   4781          STG   15,240(0,13)
00003316 E3F0 40D8 0004          000000D8   4782          LG    15,216(0,4) ; offset of leader in rd_kafka_mock_cgrp_s
0000331C E3F0 F010 0004          00000010   4783          LG    15,16(0,15)
00003322 E3F0 D0F8 0024          000000F8   4784          STG   15,248(0,13)
00003328 E3F0 4038 0014          00000038   4785          LGF   15,56(0,4)
0000332E E3F0 D100 0024          00000100   4786          STG   15,256(0,13)
00003334 4110 D0B0               000000B0   4787          LA    1,176(0,13)
00003338 E3F0 C200 0004          000033A8   4788          LG    15,@lit_1949_166 ; rd_kafka_log0
0000333E                                    4789 @@gen_label220 DS    0H
0000333E 05EF                               4790          BALR  14,15
00003340                                    4791 @@gen_label221 DS    0H
00003340                                    4792 @L715    DS    0H
                                            4793 * ***
                                            4794 * ***
                                            4795 * ***
                                            4796 * ***
                                            4797 * ***
                                            4798 * ***
                                            4799 * ***
                                            4800 * ***           if (mcgrp->protocol_name)
00003340 E3F0 4030 0002          00000030   4801          LTG   15,48(0,4)  ; offset of protocol_name in rd_kafka_mock_c*
                                                                grp_s
00003346 4780 C1BA               00003362   4802          BZ    @L716
                                            4803 * ***                   rd_free(mcgrp->protocol_name);
                                                                                                                           Page   99 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000334A E3F0 4030 0004          00000030   4804          LG    15,48(0,4)
00003350 E3F0 D0B0 0024          000000B0   4805          STG   15,176(0,13)
00003356 4110 D0B0               000000B0   4806          LA    1,176(0,13)
0000335A E3F0 C208 0004          000033B0   4807          LG    15,@lit_1949_167 ; rd_free
00003360                                    4808 @@gen_label223 DS    0H
00003360 05EF                               4809          BALR  14,15
00003362                                    4810 @@gen_label224 DS    0H
00003362                                    4811 @L716    DS    0H
                                            4812 * ***           mcgrp->protocol_name = rd_strndup((mcgrp->leader->prot\
                                            4813 * os[0].name)->str, (((mcgrp->leader->protos[0].name)->len) == -1 ? 0 \
                                            4814 * : ((mcgrp->leader->protos[0].name)->len)));
00003362 E3F0 40D8 0004          000000D8   4815          LG    15,216(0,4) ; offset of leader in rd_kafka_mock_cgrp_s
00003368 E3F0 F028 0004          00000028   4816          LG    15,40(0,15) ; offset of protos in rd_kafka_mock_cgrp_mem*
                                                                ber_s
0000336E E3F0 F000 0004          00000000   4817          LG    15,0(0,15)
00003374 E55C F000 FFFF          00000000   4818          CHSI  0(15),-1
0000337A 4770 C268               00003410   4819          BNE   @L717
0000337E A7F8 0000               00000000   4820          LHI   15,0        ; 0
00003382 47F0 C27E               00003426   4821          B     @L718
00003388                                    4822          DS    0D
00003388 00000108                           4823 @FRAMESIZE_1949 DC F'264'
0000338C 00000000
00003390 0000000000000000                   4824 @lit_1949_160 DC AD(__assert)
00003398 000000000000539A                   4825 @lit_1949_159 DC AD(@strings@)
000033A0 0000000000005128                   4826 @lit_1949_158 DC AD(@DATA)
000033A8 0000000000000000                   4827 @lit_1949_166 DC AD(rd_kafka_log0)
000033B0 0000000000000658                   4828 @lit_1949_167 DC AD(rd_free)
000033B8 00000000000008C8                   4829 @lit_1949_169 DC AD(rd_strndup)
000033C0 0000000000001638                   4830 @lit_1949_176 DC AD(rd_kafka_buf_write_i16)
000033C8 0000000000001768                   4831 @lit_1949_177 DC AD(rd_kafka_buf_write_i32)
000033D0 00000000000019F8                   4832 @lit_1949_178 DC AD(rd_kafka_buf_write_str)
000033D8 0000000000000E28                   4833 @lit_1949_184 DC AD(rd_kafkap_str_cmp_str)
000033E0 0000000000001CA8                   4834 @lit_1949_188 DC AD(rd_kafka_buf_write_kbytes)
000033E8 00000000000020B8                   4835 @lit_1949_189 DC AD(rd_kafka_mock_cgrp_member_active)
000033F0 0000000000000000                   4836 @lit_1949_190 DC AD(rd_kafka_mock_connection_set_blocking)
000033F8 0000000000000000                   4837 @lit_1949_191 DC AD(rd_kafka_mock_connection_send_response)
00003400 0000000000001EA8                   4838 @lit_1949_193 DC AD(rd_kafka_mock_cgrp_set_state)
00003408 0000000000003E38                   4839 @lit_1949_194 DC AD(rd_kafka_mock_cgrp_rebalance_timer_restart)
00003410                                    4840 @L717    DS    0H
00003410 E3F0 40D8 0004          000000D8   4841          LG    15,216(0,4) ; offset of leader in rd_kafka_mock_cgrp_s
00003416 E3F0 F028 0004          00000028   4842          LG    15,40(0,15) ; offset of protos in rd_kafka_mock_cgrp_mem*
                                                                ber_s
0000341C E3F0 F000 0004          00000000   4843          LG    15,0(0,15)
00003422 58F0 F000               00000000   4844          L     15,0(0,15)
00003426                                    4845 @L718    DS    0H
00003426 B914 00FF                          4846          LGFR  15,15
0000342A E310 40D8 0004          000000D8   4847          LG    1,216(0,4)  ; offset of leader in rd_kafka_mock_cgrp_s
00003430 E310 1028 0004          00000028   4848          LG    1,40(0,1)   ; offset of protos in rd_kafka_mock_cgrp_mem*
                                                                ber_s
00003436 E310 1000 0004          00000000   4849          LG    1,0(0,1)
0000343C E310 1008 0004          00000008   4850          LG    1,8(0,1)
00003442 E310 D0B0 0024          000000B0   4851          STG   1,176(0,13)
                                                                                                                           Page  100 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003448 E3F0 D0B8 0024          000000B8   4852          STG   15,184(0,13)
0000344E 4110 D0B0               000000B0   4853          LA    1,176(0,13)
00003452 E3F0 C210 0004          000033B8   4854          LG    15,@lit_1949_169 ; rd_strndup
00003458                                    4855 @@gen_label226 DS    0H
00003458 05EF                               4856          BALR  14,15
0000345A                                    4857 @@gen_label227 DS    0H
0000345A E3F0 4030 0024          00000030   4858          STG   15,48(0,4)
                                            4859 * ***
                                            4860 * ***
                                            4861 * ***           for ((member) = ((&mcgrp->members)->tqh_first); (membe\
                                            4862 * r) != (((void *)0)); (member) = ((member)->link .tqe_next)) {
00003460 E320 40B8 0004          000000B8   4863          LG    2,184(0,4)  ; offset of members in rd_kafka_mock_cgrp_s
00003466 47F0 C58C               00003734   4864          B     @L720
0000346A                                    4865 @L719    DS    0H
                                            4866 * ***                   rd_bool_t is_leader = member == mcgrp->leader;
0000346A E3F0 40D8 0004          000000D8   4867          LG    15,216(0,4) ; offset of leader in rd_kafka_mock_cgrp_s
00003470 B920 002F                          4868          CGR   2,15
00003474 4770 C2D8               00003480   4869          BNE   @@gen_label228
00003478 A7F8 0001               00000001   4870          LHI   15,1
0000347C 47F0 C2DC               00003484   4871          B     @@gen_label229
00003480                                    4872 @@gen_label228 DS 0H
00003480 A7F8 0000               00000000   4873          LHI   15,0
00003484                                    4874 @@gen_label229 DS 0H
00003484 42F0 D0A8               000000A8   4875          STC   15,168(0,13) ; is_leader
                                            4876 * ***                   int member_cnt = is_leader ? mcgrp->member_cnt\
                                            4877 *  : 0;
00003488 C0FB 0000 00FF                     4878          NILF  15,X'000000FF'
0000348E 12FF                               4879          LTR   15,15
00003490 4780 C2F4               0000349C   4880          BZ    @L723
00003494 5830 40C8               000000C8   4881          L     3,200(0,4)  ; offset of member_cnt in rd_kafka_mock_cgrp*
                                                                _s
00003498 47F0 C2F8               000034A0   4882          B     @L724
0000349C                                    4883 @L723    DS    0H
0000349C A738 0000               00000000   4884          LHI   3,0         ; 0
000034A0                                    4885 @L724    DS    0H
                                            4886 * ***                   rd_kafka_buf_t *resp;
                                            4887 * ***                   rd_kafka_mock_cgrp_member_t *member2;
                                            4888 * ***                   rd_kafka_mock_connection_t *mconn;
                                            4889 * ***
                                            4890 * ***
                                            4891 * ***
                                            4892 * ***                   if (!member->conn || !member->resp)
000034A0 E3F0 2048 0002          00000048   4893          LTG   15,72(0,2)  ; offset of conn in rd_kafka_mock_cgrp_membe*
                                                                r_s
000034A6 4780 C586               0000372E   4894          BZ    @L722
000034AA E3F0 2040 0002          00000040   4895          LTG   15,64(0,2)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
000034B0 4770 C310               000034B8   4896          BNZ   @L725
000034B4                                    4897 @L726    DS    0H
                                            4898 * ***                           continue;
000034B4 47F0 C586               0000372E   4899          B     @L722
000034B8                                    4900 @L725    DS    0H
                                                                                                                           Page  101 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            4901 * ***                   mconn = member->conn;
000034B8 E360 2048 0004          00000048   4902          LG    6,72(0,2)   ; offset of conn in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            4903 * ***                   member->conn = ((void *)0);
000034BE A7F9 0000               00000000   4904          LGHI  15,0        ; 0
000034C2 E3F0 2048 0024          00000048   4905          STG   15,72(0,2)  ; offset of conn in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            4906 * ***                   resp = member->resp;
000034C8 E350 2040 0004          00000040   4907          LG    5,64(0,2)   ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            4908 * ***                   member->resp = ((void *)0);
000034CE E3F0 2040 0024          00000040   4909          STG   15,64(0,2)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            4910 * ***
                                            4911 * ***                   ((resp->rkbuf_reqhdr.ApiKey == 11) ? (void)0 :\
                                            4912 *  __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_mock_cgr\
                                            4913 * p.c", 338, "resp->rkbuf_reqhdr.ApiKey == 11"));
000034D4 48F0 50B8               000000B8   4914          LH    15,184(0,5)
000034D8 A7FE 000B               0000000B   4915          CHI   15,11
000034DC 4780 C374               0000351C   4916          BE    @L728
000034E0                                    4917 @L727    DS    0H
000034E0 E3F0 C1F8 0004          000033A0   4918          LG    15,@lit_1949_158
000034E6 41F0 F212               00000212   4919          LA    15,530(0,15)
000034EA E3F0 D0B0 0024          000000B0   4920          STG   15,176(0,13)
000034F0 E3F0 C1F0 0004          00003398   4921          LG    15,@lit_1949_159
000034F6 4110 F0C4               000000C4   4922          LA    1,196(0,15)
000034FA E310 D0B8 0024          000000B8   4923          STG   1,184(0,13)
00003500 E548 D0C0 0152          000000C0   4924          MVGHI 192(13),338
00003506 41F0 F28A               0000028A   4925          LA    15,650(0,15)
0000350A E3F0 D0C8 0024          000000C8   4926          STG   15,200(0,13)
00003510 4110 D0B0               000000B0   4927          LA    1,176(0,13)
00003514 E3F0 C1E8 0004          00003390   4928          LG    15,@lit_1949_160 ; __assert
0000351A                                    4929 @@gen_label234 DS    0H
0000351A 05EF                               4930          BALR  14,15
0000351C                                    4931 @@gen_label235 DS    0H
0000351C                                    4932 @L728    DS    0H
                                            4933 * ***
                                            4934 * ***                   rd_kafka_buf_write_i16(resp, 0);
0000351C E350 D0B0 0024          000000B0   4935          STG   5,176(0,13)
00003522 D707 D0B8 D0B8 000000B8 000000B8   4936          XC    184(8,13),184(13)
00003528 4110 D0B0               000000B0   4937          LA    1,176(0,13)
0000352C E3F0 C218 0004          000033C0   4938          LG    15,@lit_1949_176 ; rd_kafka_buf_write_i16
00003532                                    4939 @@gen_label236 DS    0H
00003532 05EF                               4940          BALR  14,15
00003534                                    4941 @@gen_label237 DS    0H
                                            4942 * ***                   rd_kafka_buf_write_i32(resp, mcgrp->generation\
                                            4943 * _id);
00003534 E350 D0B0 0024          000000B0   4944          STG   5,176(0,13)
0000353A E3F0 4038 0014          00000038   4945          LGF   15,56(0,4)
00003540 E3F0 D0B8 0024          000000B8   4946          STG   15,184(0,13)
00003546 4110 D0B0               000000B0   4947          LA    1,176(0,13)
0000354A E370 C220 0004          000033C8   4948          LG    7,@lit_1949_177 ; rd_kafka_buf_write_i32
                                                                                                                           Page  102 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003550 B904 00F7                          4949          LGR   15,7
00003554                                    4950 @@gen_label238 DS    0H
00003554 05EF                               4951          BALR  14,15
00003556                                    4952 @@gen_label239 DS    0H
                                            4953 * ***                   rd_kafka_buf_write_str(resp, mcgrp->protocol_n\
                                            4954 * ame, -1);
00003556 E350 D0B0 0024          000000B0   4955          STG   5,176(0,13)
0000355C E3F0 4030 0004          00000030   4956          LG    15,48(0,4)
00003562 E3F0 D0B8 0024          000000B8   4957          STG   15,184(0,13)
00003568 E548 D0C0 FFFF          000000C0   4958          MVGHI 192(13),-1
0000356E 4110 D0B0               000000B0   4959          LA    1,176(0,13)
00003572 E380 C228 0004          000033D0   4960          LG    8,@lit_1949_178 ; rd_kafka_buf_write_str
00003578 B904 00F8                          4961          LGR   15,8
0000357C                                    4962 @@gen_label240 DS    0H
0000357C 05EF                               4963          BALR  14,15
0000357E                                    4964 @@gen_label241 DS    0H
                                            4965 * ***                   rd_kafka_buf_write_str(resp, mcgrp->leader->id\
                                            4966 * , -1);
0000357E E350 D0B0 0024          000000B0   4967          STG   5,176(0,13)
00003584 E3F0 40D8 0004          000000D8   4968          LG    15,216(0,4) ; offset of leader in rd_kafka_mock_cgrp_s
0000358A E3F0 F010 0004          00000010   4969          LG    15,16(0,15)
00003590 E3F0 D0B8 0024          000000B8   4970          STG   15,184(0,13)
00003596 E548 D0C0 FFFF          000000C0   4971          MVGHI 192(13),-1
0000359C 4110 D0B0               000000B0   4972          LA    1,176(0,13)
000035A0 B904 00F8                          4973          LGR   15,8
000035A4                                    4974 @@gen_label242 DS    0H
000035A4 05EF                               4975          BALR  14,15
000035A6                                    4976 @@gen_label243 DS    0H
                                            4977 * ***                   rd_kafka_buf_write_str(resp, member->id, -1);
000035A6 E350 D0B0 0024          000000B0   4978          STG   5,176(0,13)
000035AC E3F0 2010 0004          00000010   4979          LG    15,16(0,2)
000035B2 E3F0 D0B8 0024          000000B8   4980          STG   15,184(0,13)
000035B8 E548 D0C0 FFFF          000000C0   4981          MVGHI 192(13),-1
000035BE 4110 D0B0               000000B0   4982          LA    1,176(0,13)
000035C2 B904 00F8                          4983          LGR   15,8
000035C6                                    4984 @@gen_label244 DS    0H
000035C6 05EF                               4985          BALR  14,15
000035C8                                    4986 @@gen_label245 DS    0H
                                            4987 * ***                   rd_kafka_buf_write_i32(resp, member_cnt);
000035C8 E350 D0B0 0024          000000B0   4988          STG   5,176(0,13)
000035CE B914 00F3                          4989          LGFR  15,3
000035D2 E3F0 D0B8 0024          000000B8   4990          STG   15,184(0,13)
000035D8 4110 D0B0               000000B0   4991          LA    1,176(0,13)
000035DC B904 00F7                          4992          LGR   15,7
000035E0                                    4993 @@gen_label246 DS    0H
000035E0 05EF                               4994          BALR  14,15
000035E2                                    4995 @@gen_label247 DS    0H
                                            4996 * ***
                                            4997 * ***
                                            4998 * ***                   if (member_cnt > 0) {
000035E2 1233                               4999          LTR   3,3
000035E4 47D0 C53E               000036E6   5000          BNH   @L729
                                                                                                                           Page  103 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5001 * ***                           for ((member2) = ((&mcgrp->members)->t\
                                            5002 * qh_first); (member2) != (((void *)0)); (member2) = ((member2)->link \
                                            5003 * .tqe_next)) {
000035E8 E330 40B8 0004          000000B8   5004          LG    3,184(0,4)  ; offset of members in rd_kafka_mock_cgrp_s
000035EE 47F0 C536               000036DE   5005          B     @L731
000035F2                                    5006 @L730    DS    0H
                                            5007 * ***                                   rd_kafka_buf_write_str(resp, m\
                                            5008 * ember2->id, -1);
000035F2 E350 D0B0 0024          000000B0   5009          STG   5,176(0,13)
000035F8 E3F0 3010 0004          00000010   5010          LG    15,16(0,3)
000035FE E3F0 D0B8 0024          000000B8   5011          STG   15,184(0,13)
00003604 E548 D0C0 FFFF          000000C0   5012          MVGHI 192(13),-1
0000360A 4110 D0B0               000000B0   5013          LA    1,176(0,13)
0000360E E370 C228 0004          000033D0   5014          LG    7,@lit_1949_178 ; rd_kafka_buf_write_str
00003614 B904 00F7                          5015          LGR   15,7
00003618                                    5016 @@gen_label249 DS    0H
00003618 05EF                               5017          BALR  14,15
0000361A                                    5018 @@gen_label250 DS    0H
                                            5019 * ***                                   if (resp->rkbuf_reqhdr.ApiVers\
                                            5020 * ion >= 5)
0000361A 48F0 50BA               000000BA   5021          LH    15,186(0,5)
0000361E A7FE 0005               00000005   5022          CHI   15,5
00003622 4740 C4A0               00003648   5023          BL    @L734
                                            5024 * ***                                           rd_kafka_buf_write_str\
                                            5025 * (
                                            5026 * ***                                                   resp,
                                            5027 * ***                                                   member2->group\
                                            5028 * _instance_id, -1);
00003626 E350 D0B0 0024          000000B0   5029          STG   5,176(0,13)
0000362C E3F0 3018 0004          00000018   5030          LG    15,24(0,3)
00003632 E3F0 D0B8 0024          000000B8   5031          STG   15,184(0,13)
00003638 E548 D0C0 FFFF          000000C0   5032          MVGHI 192(13),-1
0000363E 4110 D0B0               000000B0   5033          LA    1,176(0,13)
00003642 B904 00F7                          5034          LGR   15,7
00003646                                    5035 @@gen_label252 DS    0H
00003646 05EF                               5036          BALR  14,15
00003648                                    5037 @@gen_label253 DS    0H
00003648                                    5038 @L734    DS    0H
                                            5039 * ***
                                            5040 * ***                                   ((!rd_kafkap_str_cmp_str( memb\
                                            5041 * er2->protos[0].name, mcgrp->protocol_name)) ? (void)0 : __assert(__f\
                                            5042 * unc__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_mock_cgrp.c", 356, "!\
                                            5043 * rd_kafkap_str_cmp_str( member2->protos[0].name, mcgrp->protocol_name\
                                            5044 * )"));
00003648 E3F0 3028 0004          00000028   5045          LG    15,40(0,3)  ; offset of protos in rd_kafka_mock_cgrp_mem*
                                                                ber_s
0000364E E3F0 F000 0004          00000000   5046          LG    15,0(0,15)
00003654 E3F0 D0B0 0024          000000B0   5047          STG   15,176(0,13)
0000365A E3F0 4030 0004          00000030   5048          LG    15,48(0,4)
00003660 E3F0 D0B8 0024          000000B8   5049          STG   15,184(0,13)
00003666 4110 D0B0               000000B0   5050          LA    1,176(0,13)
0000366A E3F0 C230 0004          000033D8   5051          LG    15,@lit_1949_184 ; rd_kafkap_str_cmp_str
                                                                                                                           Page  104 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003670                                    5052 @@gen_label254 DS    0H
00003670 05EF                               5053          BALR  14,15
00003672                                    5054 @@gen_label255 DS    0H
00003672 12FF                               5055          LTR   15,15
00003674 4780 C50C               000036B4   5056          BZ    @L736
00003678                                    5057 @L735    DS    0H
00003678 E3F0 C1F8 0004          000033A0   5058          LG    15,@lit_1949_158
0000367E 41F0 F212               00000212   5059          LA    15,530(0,15)
00003682 E3F0 D0B0 0024          000000B0   5060          STG   15,176(0,13)
00003688 E3F0 C1F0 0004          00003398   5061          LG    15,@lit_1949_159
0000368E 4110 F0C4               000000C4   5062          LA    1,196(0,15)
00003692 E310 D0B8 0024          000000B8   5063          STG   1,184(0,13)
00003698 E548 D0C0 0164          000000C0   5064          MVGHI 192(13),356
0000369E 41F0 F2AA               000002AA   5065          LA    15,682(0,15)
000036A2 E3F0 D0C8 0024          000000C8   5066          STG   15,200(0,13)
000036A8 4110 D0B0               000000B0   5067          LA    1,176(0,13)
000036AC E3F0 C1E8 0004          00003390   5068          LG    15,@lit_1949_160 ; __assert
000036B2                                    5069 @@gen_label257 DS    0H
000036B2 05EF                               5070          BALR  14,15
000036B4                                    5071 @@gen_label258 DS    0H
000036B4                                    5072 @L736    DS    0H
                                            5073 * ***
                                            5074 * ***
                                            5075 * ***
                                            5076 * ***                                   rd_kafka_buf_write_kbytes(
                                            5077 * ***                                           resp, member2->protos[\
                                            5078 * 0].metadata);
000036B4 E350 D0B0 0024          000000B0   5079          STG   5,176(0,13)
000036BA E3F0 3028 0004          00000028   5080          LG    15,40(0,3)  ; offset of protos in rd_kafka_mock_cgrp_mem*
                                                                ber_s
000036C0 E3F0 F008 0004          00000008   5081          LG    15,8(0,15)
000036C6 E3F0 D0B8 0024          000000B8   5082          STG   15,184(0,13)
000036CC 4110 D0B0               000000B0   5083          LA    1,176(0,13)
000036D0 E3F0 C238 0004          000033E0   5084          LG    15,@lit_1949_188 ; rd_kafka_buf_write_kbytes
000036D6                                    5085 @@gen_label259 DS    0H
000036D6 05EF                               5086          BALR  14,15
000036D8                                    5087 @@gen_label260 DS    0H
                                            5088 * ***                           }
000036D8 E330 3000 0004          00000000   5089          LG    3,0(0,3)    ; member2
000036DE                                    5090 @L731    DS    0H
000036DE B902 00F3                          5091          LTGR  15,3
000036E2 4770 C44A               000035F2   5092          BNE   @L730
                                            5093 * ***                   }
000036E6                                    5094 @L729    DS    0H
                                            5095 * ***
                                            5096 * ***
                                            5097 * ***
                                            5098 * ***
                                            5099 * ***                   rd_kafka_mock_cgrp_member_active(mcgrp, member\
                                            5100 * );
000036E6 E340 D0B0 0024          000000B0   5101          STG   4,176(0,13)
000036EC E320 D0B8 0024          000000B8   5102          STG   2,184(0,13)
                                                                                                                           Page  105 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000036F2 4110 D0B0               000000B0   5103          LA    1,176(0,13)
000036F6 E3F0 C240 0004          000033E8   5104          LG    15,@lit_1949_189 ; rd_kafka_mock_cgrp_member_active
000036FC                                    5105 @@gen_label262 DS    0H
000036FC 05EF                               5106          BALR  14,15
000036FE                                    5107 @@gen_label263 DS    0H
                                            5108 * ***
                                            5109 * ***                   rd_kafka_mock_connection_set_blocking(mconn, 0\
                                            5110 * );
000036FE E360 D0B0 0024          000000B0   5111          STG   6,176(0,13)
00003704 D707 D0B8 D0B8 000000B8 000000B8   5112          XC    184(8,13),184(13)
0000370A 4110 D0B0               000000B0   5113          LA    1,176(0,13)
0000370E E3F0 C248 0004          000033F0   5114          LG    15,@lit_1949_190 ; rd_kafka_mock_connection_set_blocking
00003714                                    5115 @@gen_label264 DS    0H
00003714 05EF                               5116          BALR  14,15
00003716                                    5117 @@gen_label265 DS    0H
                                            5118 * ***                   rd_kafka_mock_connection_send_response(mconn, \
                                            5119 * resp);
00003716 E360 D0B0 0024          000000B0   5120          STG   6,176(0,13)
0000371C E350 D0B8 0024          000000B8   5121          STG   5,184(0,13)
00003722 4110 D0B0               000000B0   5122          LA    1,176(0,13)
00003726 E3F0 C250 0004          000033F8   5123          LG    15,@lit_1949_191 ; rd_kafka_mock_connection_send_respons*
                                                                e
0000372C                                    5124 @@gen_label266 DS    0H
0000372C 05EF                               5125          BALR  14,15
0000372E                                    5126 @@gen_label267 DS    0H
                                            5127 * ***           }
0000372E                                    5128 @L722    DS    0H
0000372E E320 2000 0004          00000000   5129          LG    2,0(0,2)    ; member
00003734                                    5130 @L720    DS    0H
00003734 B902 00F2                          5131          LTGR  15,2
00003738 4770 C2C2               0000346A   5132          BNE   @L719
                                            5133 * ***
                                            5134 * ***           mcgrp->last_member_cnt = mcgrp->member_cnt;
0000373C 58F0 40C8               000000C8   5135          L     15,200(0,4) ; offset of member_cnt in rd_kafka_mock_cgrp*
                                                                _s
00003740 50F0 40CC               000000CC   5136          ST    15,204(0,4) ; offset of last_member_cnt in rd_kafka_mock*
                                                                _cgrp_s
                                            5137 * ***
                                            5138 * ***           rd_kafka_mock_cgrp_set_state(mcgrp, RD_KAFKA_MOCK_CGRP\
                                            5139 * _STATE_SYNCING,
                                            5140 * ***                                        "leader elected, waiting \
                                            5141 * for all "
00003744 E340 D0B0 0024          000000B0   5142          STG   4,176(0,13)
0000374A E548 D0B8 0002          000000B8   5143          MVGHI 184(13),2
                                            5144 * ***                                        "members to sync");
00003750 E3F0 C1F0 0004          00003398   5145          LG    15,@lit_1949_159
00003756 41F0 F2F2               000002F2   5146          LA    15,754(0,15)
0000375A E3F0 D0C0 0024          000000C0   5147          STG   15,192(0,13)
00003760 4110 D0B0               000000B0   5148          LA    1,176(0,13)
00003764 E3F0 C258 0004          00003400   5149          LG    15,@lit_1949_193 ; rd_kafka_mock_cgrp_set_state
0000376A                                    5150 @@gen_label269 DS    0H
0000376A 05EF                               5151          BALR  14,15
                                                                                                                           Page  106 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000376C                                    5152 @@gen_label270 DS    0H
                                            5153 * ***
                                            5154 * ***           rd_kafka_mock_cgrp_rebalance_timer_restart(mcgrp,
                                            5155 * ***                                                      mcgrp->sess\
                                            5156 * ion_timeout_ms);
0000376C E340 D0B0 0024          000000B0   5157          STG   4,176(0,13)
00003772 E3F0 403C 0014          0000003C   5158          LGF   15,60(0,4)
00003778 E3F0 D0B8 0024          000000B8   5159          STG   15,184(0,13)
0000377E 4110 D0B0               000000B0   5160          LA    1,176(0,13)
00003782 E3F0 C260 0004          00003408   5161          LG    15,@lit_1949_194 ; rd_kafka_mock_cgrp_rebalance_timer_re*
                                                                start
00003788                                    5162 @@gen_label271 DS    0H
00003788 05EF                               5163          BALR  14,15
0000378A                                    5164 @@gen_label272 DS    0H
                                            5165 * ***   }
0000378A                                    5166 @ret_lab_1949 DS 0H
                                            5167 * * **** Start of Epilogue
                                            5168          DCCEPIL
0000378A                                    5169+         ds 0h                                                          01-DCCEP
                                            5170+* Epilog
0000378A D707 D088 D088 00000088 00000088   5171+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003790 E3D0 D080 0004          00000080   5172+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003796 E3C0 D090 0004          00000090   5173+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000379C E3B0 C018 0004          00000018   5174+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000037A2 E3C0 B010 0021          00000010   5175+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000037A8 E3E0 D008 0004          00000008   5176+         lg  14,8(0,13)          load up return address                 01-DCCEP
000037AE EB1C D020 0004          00000020   5177+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000037B4 078E                               5178+         bcr 8,14                if same dsab, just return              01-DCCEP
000037B6 E3F0 D010 0024          00000010   5179+         stg 15,16(0,13)         save return code                       01-DCCEP
000037BC E300 D018 0024          00000018   5180+         stg 0,24(0,13)          save more return code                  01-DCCEP
000037C2 E3F0 D090 0004          00000090   5181+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000037C8 E3F0 F018 0004          00000018   5182+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000037CE 47F0 F040               00000040   5183+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5184+* End of Epilog
                                            5185 * * **** End of Epilogue
                                            5186          DROP  12
                                            5187 *
                                            5188 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_elect_leader"
                                            5189 *      (FUNCTION #1949)
                                            5190 *
00000000                00000000 000000AC   5191 @AUTO#rd_kafka_mock_cgrp_elect_leader DSECT
00000000                                    5192          DS    XL168
000000A8                                    5193 rd_kafka_mock_cgrp_elect_leader#member_cnt#2 DS 1F ; member_cnt
000000AC                000000AC 000000A8   5194          ORG   @AUTO#rd_kafka_mock_cgrp_elect_leader+168
000000A8                                    5195 rd_kafka_mock_cgrp_elect_leader#is_leader#2 DS 1CL1 ; is_leader
                                            5196 *
000037D2                00000000 00005122   5197 @CODE    CSECT
                                            5198 *
                                            5199 *
                                            5200 *
                                            5201 * ....... start of rd_kafka_mock_cgrp_rebalance
000037D2                                    5202 @LNAME1943 DS  0H
                                                                                                                           Page  107 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000037D2 0000001C                           5203          DC    X'0000001C'
000037D6 99846D9281869281                   5204          DC    C'rd_kafka_mock_cgrp_rebalance'
000037F2 00                                 5205          DC    X'00'
                                            5206 rd_kafka_mock_cgrp_rebalance DCCPRLG CINDEX=1943,BASER=12,FRAME=200,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1943
                                            5207          macro
                                            5208          dccextrn &m
                                            5209          gblc    &$dccext(1000)
                                            5210          gbla    &$dccexti
                                            5211          lcla    &i
                                            5212 &$dccext(&$dccexti+1) setc    '&m'
                                            5213 &i       seta    1
                                            5214 .loop    aif    (&i gt &$dccexti).around
                                            5215          aif    ('&$dccext(&i)' eq '&m').getout
                                            5216 &i       seta    &i+1
                                            5217          ago     .loop
                                            5218 .around  anop
                                            5219 &$dccexti seta &$dccexti+1
                                            5220          extrn  &m
                                            5221 .getout  anop
                                            5222          mend
000037F8                                    5223+$eye0099    ds    0d                                                    02-DCCCA
000037F8 C4C3C3                             5224+         dc cl3'DCC'                                                    02-DCCCA
000037FB 01                                 5225+         dc xl1'01' format one                                          02-DCCCA
000037FC 00000000                           5226+         dc a(0)                                                        02-DCCCA
00003800 000000000000386A                   5227+         dc ad(@PER_1943)                                               02-DCCCA
00003808 00000000000000C8                   5228+         dc ad(200)                                                     02-DCCCA
00003810 0000000000000000                   5229+         dc ad(0)                                                       02-DCCCA
00003818 0000000000001000                   5230+         dc ad(4096)                                                    02-DCCCA
00003820 20                                 5231+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003821 03                                 5232+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003822 03                                 5233+         dc al1(3)                                                      02-DCCCA
00003823 08                                 5234+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003824 00                                 5235+         dc bl.8'00000000'                                              02-DCCCA
00003825 000000                             5236+         dc al3(0)                                                      02-DCCCA
00003828 00000000000037D2                   5237+         dc ad(@LNAME1943)                                              02-DCCCA
00003830                                    5238+         ds 0d                                                          02-DCCCA
00003830 00000000000037F8                   5239+         dc ad($eye0099)                                                02-DCCCA
00003838 0000000000000000                   5240+         dc ad(0)                                                       02-DCCCA
00003840                                    5241+         ds    0d                                                       01-DCCPR
00003840                                    5242+rd_kafka_mock_cgrp_rebalance ds 0d                                      01-DCCPR
00003840                                    5243+@REGION_1943_1 ds 0h                                                    01-DCCPR
00003840 EBEC D008 0024          00000008   5244+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003846 E3E0 D088 0004          00000088   5245+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000384C E3C0 D090 0004          00000090   5246+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003852 B904 002E                          5247+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003856 E3B0 C018 0004          00000018   5248+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000385C A7EB 00C8               000000C8   5249+         aghi  14,200              increase by frame size               01-DCCPR
00003860 E3E0 C020 0021          00000020   5250+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003866 4720 B020               00000020   5251+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000386A                                    5252+@PER_1943 ds   0h                                                       01-DCCPR
0000386A EBDE 2080 0024          00000080   5253+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  108 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003870 E3C0 2090 0024          00000090   5254+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003876 B904 00D2                          5255+         lgr   13,2                set real frame pointer               01-DCCPR
0000387A B904 00CF                          5256+         lgr   12,15               set base reg                         01-DCCPR
                        00003840            5257+         using @REGION_1943_1,12                                        01-DCCPR
0000387E B904 0041                          5258          LGR   4,1         ; ptr to parm area
                                            5259 * ******* End of Prologue
                                            5260 * *
00003882 E330 4000 0004          00000000   5261          LG    3,0(0,4)    ; mcgrp
                                            5262 * ***           int timeout_ms;
                                            5263 * ***
                                            5264 * ***           if (mcgrp->state == RD_KAFKA_MOCK_CGRP_STATE_JOINING)
00003888 E55C 3040 0001          00000040   5265          CHSI  64(3),1
0000388E 4770 C078               000038B8   5266          BNE   @L737
                                            5267 * ***                   return;
00003892 47F0 C124               00003964   5268          B     @ret_lab_1943
00003898                                    5269          DS    0D
00003898 000000C8                           5270 @FRAMESIZE_1943 DC F'200'
0000389C 00000000
000038A0 0000000000002718                   5271 @lit_1943_198 DC AD(rd_kafka_mock_cgrp_sync_done)
000038A8 0000000000001EA8                   5272 @lit_1943_199 DC AD(rd_kafka_mock_cgrp_set_state)
000038B0 0000000000003E38                   5273 @lit_1943_200 DC AD(rd_kafka_mock_cgrp_rebalance_timer_restart)
                                            5274 * ***           else if (mcgrp->state == RD_KAFKA_MOCK_CGRP_STATE_EMPT\
                                            5275 * Y)
000038B8                                    5276 @L737    DS    0H
000038B8 E55C 3040 0000          00000040   5277          CHSI  64(3),0
000038BE 4770 C08A               000038CA   5278          BNE   @L739
                                            5279 * ***                   timeout_ms = 3000;
000038C2 A728 0BB8               00000BB8   5280          LHI   2,3000      ; 3000
000038C6 47F0 C0C2               00003902   5281          B     @L738
                                            5282 * ***
                                            5283 * ***
                                            5284 * ***           else if (mcgrp->state == RD_KAFKA_MOCK_CGRP_STATE_REBA\
                                            5285 * LANCING &&
000038CA                                    5286 @L739    DS    0H
000038CA E55C 3040 0003          00000040   5287          CHSI  64(3),3
000038D0 4770 C0A8               000038E8   5288          BNE   @L741
                                            5289 * ***                    mcgrp->member_cnt == mcgrp->last_member_cnt)
000038D4 58F0 30C8               000000C8   5290          L     15,200(0,3) ; offset of member_cnt in rd_kafka_mock_cgrp*
                                                                _s
000038D8 59F0 30CC               000000CC   5291          C     15,204(0,3)
000038DC 4770 C0A8               000038E8   5292          BNE   @L741
                                            5293 * ***                   timeout_ms = 100;
000038E0 A728 0064               00000064   5294          LHI   2,100       ; 100
000038E4 47F0 C0C2               00003902   5295          B     @L738
                                            5296 * ***
                                            5297 * ***           else
000038E8                                    5298 @L741    DS    0H
                                            5299 * ***
                                            5300 * ***
                                            5301 * ***                   timeout_ms = mcgrp->session_timeout_ms > 1000 \
                                            5302 * ?
000038E8 E55C 303C 03E8          0000003C   5303          CHSI  60(3),1000
                                                                                                                           Page  109 
  Active Usings: @REGION_1943_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000038EE 47D0 C0BE               000038FE   5304          BNH   @L743
                                            5305 * ***                           mcgrp->session_timeout_ms - 1000 :
000038F2 5820 303C               0000003C   5306          L     2,60(0,3)   ; offset of session_timeout_ms in rd_kafka_m*
                                                                ock_cgrp_s
000038F6 A72A FC18               0000FC18   5307          AHI   2,-1000
000038FA 47F0 C0C2               00003902   5308          B     @L744
000038FE                                    5309 @L743    DS    0H
                                            5310 * ***                           mcgrp->session_timeout_ms;
000038FE 5820 303C               0000003C   5311          L     2,60(0,3)   ; offset of session_timeout_ms in rd_kafka_m*
                                                                ock_cgrp_s
00003902                                    5312 @L744    DS    0H
00003902                                    5313 @L742    DS    0H
                                            5314 * ***
                                            5315 * ***           if (mcgrp->state == RD_KAFKA_MOCK_CGRP_STATE_SYNCING)
00003902                                    5316 @L740    DS    0H
00003902                                    5317 @L738    DS    0H
00003902 E55C 3040 0002          00000040   5318          CHSI  64(3),2
00003908 4770 C0E4               00003924   5319          BNE   @L745
                                            5320 * ***
                                            5321 * ***                   rd_kafka_mock_cgrp_sync_done(
                                            5322 * ***                           mcgrp, RD_KAFKA_RESP_ERR_REBALANCE_IN_\
                                            5323 * PROGRESS);
0000390C E330 D0B0 0024          000000B0   5324          STG   3,176(0,13)
00003912 E548 D0B8 001B          000000B8   5325          MVGHI 184(13),27
00003918 4110 D0B0               000000B0   5326          LA    1,176(0,13)
0000391C E3F0 C060 0004          000038A0   5327          LG    15,@lit_1943_198 ; rd_kafka_mock_cgrp_sync_done
00003922                                    5328 @@gen_label279 DS    0H
00003922 05EF                               5329          BALR  14,15
00003924                                    5330 @@gen_label280 DS    0H
00003924                                    5331 @L745    DS    0H
                                            5332 * ***
                                            5333 * ***           rd_kafka_mock_cgrp_set_state(mcgrp, RD_KAFKA_MOCK_CGRP\
                                            5334 * _STATE_JOINING,
                                            5335 * ***                                        reason);
00003924 E330 D0B0 0024          000000B0   5336          STG   3,176(0,13)
0000392A E548 D0B8 0001          000000B8   5337          MVGHI 184(13),1
00003930 E3F0 4008 0004          00000008   5338          LG    15,8(0,4)   ; reason
00003936 E3F0 D0C0 0024          000000C0   5339          STG   15,192(0,13)
0000393C 4110 D0B0               000000B0   5340          LA    1,176(0,13)
00003940 E3F0 C068 0004          000038A8   5341          LG    15,@lit_1943_199 ; rd_kafka_mock_cgrp_set_state
00003946                                    5342 @@gen_label281 DS    0H
00003946 05EF                               5343          BALR  14,15
00003948                                    5344 @@gen_label282 DS    0H
                                            5345 * ***           rd_kafka_mock_cgrp_rebalance_timer_restart(mcgrp, time\
                                            5346 * out_ms);
00003948 E330 D0B0 0024          000000B0   5347          STG   3,176(0,13)
0000394E B914 00F2                          5348          LGFR  15,2
00003952 E3F0 D0B8 0024          000000B8   5349          STG   15,184(0,13)
00003958 4110 D0B0               000000B0   5350          LA    1,176(0,13)
0000395C E3F0 C070 0004          000038B0   5351          LG    15,@lit_1943_200 ; rd_kafka_mock_cgrp_rebalance_timer_re*
                                                                start
00003962                                    5352 @@gen_label283 DS    0H
                                                                                                                           Page  110 
  Active Usings: @REGION_1943_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003962 05EF                               5353          BALR  14,15
00003964                                    5354 @@gen_label284 DS    0H
                                            5355 * ***   }
00003964                                    5356 @ret_lab_1943 DS 0H
                                            5357 * * **** Start of Epilogue
                                            5358          DCCEPIL
00003964                                    5359+         ds 0h                                                          01-DCCEP
                                            5360+* Epilog
00003964 D707 D088 D088 00000088 00000088   5361+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000396A E3D0 D080 0004          00000080   5362+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003970 E3C0 D090 0004          00000090   5363+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003976 E3B0 C018 0004          00000018   5364+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000397C E3C0 B010 0021          00000010   5365+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003982 E3E0 D008 0004          00000008   5366+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003988 EB1C D020 0004          00000020   5367+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000398E 078E                               5368+         bcr 8,14                if same dsab, just return              01-DCCEP
00003990 E3F0 D010 0024          00000010   5369+         stg 15,16(0,13)         save return code                       01-DCCEP
00003996 E300 D018 0024          00000018   5370+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000399C E3F0 D090 0004          00000090   5371+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000039A2 E3F0 F018 0004          00000018   5372+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000039A8 47F0 F040               00000040   5373+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5374+* End of Epilog
                                            5375 * * **** End of Epilogue
                                            5376          DROP  12
                                            5377 *
                                            5378 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_rebalance"
                                            5379 *      (FUNCTION #1943)
                                            5380 *
00000000                00000000 000000AC   5381 @AUTO#rd_kafka_mock_cgrp_rebalance DSECT
00000000                                    5382          DS    XL168
000000A8                                    5383 rd_kafka_mock_cgrp_rebalance#timeout_ms#0 DS 1F ; timeout_ms
                                            5384 *
000039AC                00000000 00005122   5385 @CODE    CSECT
                                            5386 *
                                            5387 *
                                            5388 *
                                            5389 * ....... start of rd_kafka_mock_cgrp_fsm_timeout
000039AC                                    5390 @LNAME1950 DS  0H
000039AC 0000001E                           5391          DC    X'0000001E'
000039B0 99846D9281869281                   5392          DC    C'rd_kafka_mock_cgrp_fsm_timeout'
000039CE 00                                 5393          DC    X'00'
                                            5394 rd_kafka_mock_cgrp_fsm_timeout DCCPRLG CINDEX=1950,BASER=12,FRAME=240,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1950
                                            5395          macro
                                            5396          dccextrn &m
                                            5397          gblc    &$dccext(1000)
                                            5398          gbla    &$dccexti
                                            5399          lcla    &i
                                            5400 &$dccext(&$dccexti+1) setc    '&m'
                                            5401 &i       seta    1
                                            5402 .loop    aif    (&i gt &$dccexti).around
                                            5403          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  111 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5404 &i       seta    &i+1
                                            5405          ago     .loop
                                            5406 .around  anop
                                            5407 &$dccexti seta &$dccexti+1
                                            5408          extrn  &m
                                            5409 .getout  anop
                                            5410          mend
000039D0                                    5411+$eye0102    ds    0d                                                    02-DCCCA
000039D0 C4C3C3                             5412+         dc cl3'DCC'                                                    02-DCCCA
000039D3 01                                 5413+         dc xl1'01' format one                                          02-DCCCA
000039D4 00000000                           5414+         dc a(0)                                                        02-DCCCA
000039D8 0000000000003A42                   5415+         dc ad(@PER_1950)                                               02-DCCCA
000039E0 00000000000000F0                   5416+         dc ad(240)                                                     02-DCCCA
000039E8 0000000000000000                   5417+         dc ad(0)                                                       02-DCCCA
000039F0 0000000000001000                   5418+         dc ad(4096)                                                    02-DCCCA
000039F8 20                                 5419+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000039F9 03                                 5420+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000039FA 03                                 5421+         dc al1(3)                                                      02-DCCCA
000039FB 08                                 5422+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000039FC 00                                 5423+         dc bl.8'00000000'                                              02-DCCCA
000039FD 000000                             5424+         dc al3(0)                                                      02-DCCCA
00003A00 00000000000039AC                   5425+         dc ad(@LNAME1950)                                              02-DCCCA
00003A08                                    5426+         ds 0d                                                          02-DCCCA
00003A08 00000000000039D0                   5427+         dc ad($eye0102)                                                02-DCCCA
00003A10 0000000000000000                   5428+         dc ad(0)                                                       02-DCCCA
00003A18                                    5429+         ds    0d                                                       01-DCCPR
00003A18                                    5430+rd_kafka_mock_cgrp_fsm_timeout ds 0d                                    01-DCCPR
00003A18                                    5431+@REGION_1950_1 ds 0h                                                    01-DCCPR
00003A18 EBEC D008 0024          00000008   5432+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003A1E E3E0 D088 0004          00000088   5433+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003A24 E3C0 D090 0004          00000090   5434+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003A2A B904 002E                          5435+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003A2E E3B0 C018 0004          00000018   5436+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003A34 A7EB 00F0               000000F0   5437+         aghi  14,240              increase by frame size               01-DCCPR
00003A38 E3E0 C020 0021          00000020   5438+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003A3E 4720 B020               00000020   5439+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003A42                                    5440+@PER_1950 ds   0h                                                       01-DCCPR
00003A42 EBDE 2080 0024          00000080   5441+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003A48 E3C0 2090 0024          00000090   5442+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003A4E B904 00D2                          5443+         lgr   13,2                set real frame pointer               01-DCCPR
00003A52 B904 00CF                          5444+         lgr   12,15               set base reg                         01-DCCPR
                        00003A18            5445+         using @REGION_1950_1,12                                        01-DCCPR
                                            5446          DCCPRV REG=15     ; Get PRV from DVT
00003A56 E3F0 B008 0004          00000008   5447+         LG 15,8(0,11)                                                  01-DCCPR
                                            5448 * ******* End of Prologue
                                            5449 * *
                                            5450 * ***           do { if ((((mcgrp->cluster->rk)->rk_conf.debug & (0x10\
                                            5451 * 000)))) rd_kafka_log0(&mcgrp->cluster->rk->rk_conf,mcgrp->cluster->r\
                                            5452 * k,((void *)0), 7,(0x10000), "MOCK","Mock consumer group %s FSM timeo\
                                            5453 * ut in state %s", mcgrp->id, rd_kafka_mock_cgrp_state_names[mcgrp->st\
                                            5454 * ate]); } while (0);
00003A5C E320 1000 0004          00000000   5455          LG    2,0(0,1)    ; mcgrp
                                                                                                                           Page  112 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003A62                                    5456 @L746    DS    0H
00003A62 E310 2010 0004          00000010   5457          LG    1,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
00003A68 E310 1020 0004          00000020   5458          LG    1,32(0,1)   ; offset of rk in rd_kafka_mock_cluster_s
00003A6E 9101 1321      00000321 00000001   5459          TM    801(1),1
00003A72 4780 C1EC               00003C04   5460          BZ    @L750
00003A76 E310 2010 0004          00000010   5461          LG    1,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
00003A7C E310 1020 0004          00000020   5462          LG    1,32(0,1)   ; offset of rk in rd_kafka_mock_cluster_s
00003A82 4110 1210               00000210   5463          LA    1,528(0,1)
00003A86 E310 D0A8 0024          000000A8   5464          STG   1,168(0,13)
00003A8C E310 2010 0004          00000010   5465          LG    1,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
00003A92 E310 1020 0004          00000020   5466          LG    1,32(0,1)
00003A98 E310 D0B0 0024          000000B0   5467          STG   1,176(0,13)
00003A9E D707 D0B8 D0B8 000000B8 000000B8   5468          XC    184(8,13),184(13)
00003AA4 E548 D0C0 0007          000000C0   5469          MVGHI 192(13),7
00003AAA C01F 0001 0000                     5470          LLILF 1,X'00010000' ; 65536
00003AB0 E310 D0C8 0024          000000C8   5471          STG   1,200(0,13)
00003AB6 E310 C110 0004          00003B28   5472          LG    1,@lit_1950_203
00003ABC 4130 1048               00000048   5473          LA    3,72(0,1)
00003AC0 E330 D0D0 0024          000000D0   5474          STG   3,208(0,13)
00003AC6 4110 1322               00000322   5475          LA    1,802(0,1)
00003ACA E310 D0D8 0024          000000D8   5476          STG   1,216(0,13)
00003AD0 E310 2020 0004          00000020   5477          LG    1,32(0,2)
00003AD6 E310 D0E0 0024          000000E0   5478          STG   1,224(0,13)
00003ADC E310 2040 0014          00000040   5479          LGF   1,64(0,2)
00003AE2 E330 C108 0014          00003B20   5480          LGF   3,@lit_1950_204
00003AE8 41F3 F000               00000000   5481          LA    15,0(3,15)
00003AEC EB11 0003 000D          00000003   5482          SLLG  1,1,3(0)    ; *0x8
00003AF2 E3F1 F6D8 0004          000006D8   5483          LG    15,1752(1,15)
00003AF8 E3F0 D0E8 0024          000000E8   5484          STG   15,232(0,13)
00003AFE 4110 D0A8               000000A8   5485          LA    1,168(0,13)
00003B02 E3F0 C100 0004          00003B18   5486          LG    15,@lit_1950_205 ; rd_kafka_log0
00003B08                                    5487 @@gen_label286 DS    0H
00003B08 05EF                               5488          BALR  14,15
00003B0A                                    5489 @@gen_label287 DS    0H
00003B0A                                    5490 @L749    DS    0H
                                            5491 * ***
                                            5492 * ***
                                            5493 * ***
                                            5494 * ***           switch (mcgrp->state)
00003B0A 47F0 C1EC               00003C04   5495          B     @L750
00003B10                                    5496          DS    0D
00003B10 000000F0                           5497 @FRAMESIZE_1950 DC F'240'
00003B14 00000000
00003B18 0000000000000000                   5498 @lit_1950_205 DC AD(rd_kafka_log0)
00003B20 00000000                           5499 @lit_1950_204 DC Q(@@STATIC)
00003B24 00000000
00003B28 000000000000539A                   5500 @lit_1950_203 DC AD(@strings@)
00003B30 00000000000031A8                   5501 @lit_1950_206 DC AD(rd_kafka_mock_cgrp_elect_leader)
00003B38 0000000000001EA8                   5502 @lit_1950_208 DC AD(rd_kafka_mock_cgrp_set_state)
00003B40 0000000000002718                   5503 @lit_1950_209 DC AD(rd_kafka_mock_cgrp_sync_done)
                                            5504 * ***           {
                                            5505 * ***           case RD_KAFKA_MOCK_CGRP_STATE_EMPTY:
                                                                                                                           Page  113 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5506 * ***
                                            5507 * ***                   break;
                                            5508 * ***           case RD_KAFKA_MOCK_CGRP_STATE_JOINING:
00003B48                                    5509 @L753    DS    0H
                                            5510 * ***
                                            5511 * ***                   if (mcgrp->member_cnt > 0)
00003B48 E55C 20C8 0000          000000C8   5512          CHSI  200(2),0
00003B4E 47D0 C150               00003B68   5513          BNH   @L754
                                            5514 * ***                           rd_kafka_mock_cgrp_elect_leader(mcgrp)\
                                            5515 * ;
00003B52 E320 D0A8 0024          000000A8   5516          STG   2,168(0,13)
00003B58 4110 D0A8               000000A8   5517          LA    1,168(0,13)
00003B5C E3F0 C118 0004          00003B30   5518          LG    15,@lit_1950_206 ; rd_kafka_mock_cgrp_elect_leader
00003B62                                    5519 @@gen_label289 DS    0H
00003B62 05EF                               5520          BALR  14,15
00003B64                                    5521 @@gen_label290 DS    0H
00003B64 47F0 C240               00003C58   5522          B     @ret_lab_1950
                                            5523 * ***                   else
00003B68                                    5524 @L754    DS    0H
                                            5525 * ***                           rd_kafka_mock_cgrp_set_state(
                                            5526 * ***                                   mcgrp, RD_KAFKA_MOCK_CGRP_STAT\
                                            5527 * E_EMPTY,
                                            5528 * ***                                   "no members joined");
00003B68 E320 D0A8 0024          000000A8   5529          STG   2,168(0,13)
00003B6E D707 D0B0 D0B0 000000B0 000000B0   5530          XC    176(8,13),176(13)
00003B74 E3F0 C110 0004          00003B28   5531          LG    15,@lit_1950_203
00003B7A 41F0 F352               00000352   5532          LA    15,850(0,15)
00003B7E E3F0 D0B8 0024          000000B8   5533          STG   15,184(0,13)
00003B84 4110 D0A8               000000A8   5534          LA    1,168(0,13)
00003B88 E3F0 C120 0004          00003B38   5535          LG    15,@lit_1950_208 ; rd_kafka_mock_cgrp_set_state
00003B8E                                    5536 @@gen_label291 DS    0H
00003B8E 05EF                               5537          BALR  14,15
00003B90                                    5538 @@gen_label292 DS    0H
00003B90                                    5539 @L755    DS    0H
                                            5540 * ***                   break;
00003B90 47F0 C240               00003C58   5541          B     @ret_lab_1950
                                            5542 * ***
                                            5543 * ***           case RD_KAFKA_MOCK_CGRP_STATE_SYNCING:
00003B94                                    5544 @L756    DS    0H
                                            5545 * ***
                                            5546 * ***
                                            5547 * ***
                                            5548 * ***                   rd_kafka_mock_cgrp_sync_done(
                                            5549 * ***                           mcgrp,
                                            5550 * ***                           RD_KAFKA_RESP_ERR_REBALANCE_IN_PROGRES\
                                            5551 * S );
00003B94 E320 D0A8 0024          000000A8   5552          STG   2,168(0,13)
00003B9A E548 D0B0 001B          000000B0   5553          MVGHI 176(13),27
00003BA0 4110 D0A8               000000A8   5554          LA    1,168(0,13)
00003BA4 E3F0 C128 0004          00003B40   5555          LG    15,@lit_1950_209 ; rd_kafka_mock_cgrp_sync_done
00003BAA                                    5556 @@gen_label293 DS    0H
00003BAA 05EF                               5557          BALR  14,15
                                                                                                                           Page  114 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003BAC                                    5558 @@gen_label294 DS    0H
                                            5559 * ***
                                            5560 * ***                   rd_kafka_mock_cgrp_set_state(
                                            5561 * ***                           mcgrp, RD_KAFKA_MOCK_CGRP_STATE_REBALA\
                                            5562 * NCING,
                                            5563 * ***                           "timed out waiting for all members to \
                                            5564 * synchronize");
00003BAC E320 D0A8 0024          000000A8   5565          STG   2,168(0,13)
00003BB2 E548 D0B0 0003          000000B0   5566          MVGHI 176(13),3
00003BB8 E3F0 C110 0004          00003B28   5567          LG    15,@lit_1950_203
00003BBE 41F0 F364               00000364   5568          LA    15,868(0,15)
00003BC2 E3F0 D0B8 0024          000000B8   5569          STG   15,184(0,13)
00003BC8 4110 D0A8               000000A8   5570          LA    1,168(0,13)
00003BCC E3F0 C120 0004          00003B38   5571          LG    15,@lit_1950_208 ; rd_kafka_mock_cgrp_set_state
00003BD2                                    5572 @@gen_label295 DS    0H
00003BD2 05EF                               5573          BALR  14,15
00003BD4                                    5574 @@gen_label296 DS    0H
                                            5575 * ***                   break;
00003BD4 47F0 C240               00003C58   5576          B     @ret_lab_1950
                                            5577 * ***
                                            5578 * ***           case RD_KAFKA_MOCK_CGRP_STATE_REBALANCING:
00003BD8                                    5579 @L757    DS    0H
                                            5580 * ***
                                            5581 * ***                   rd_kafka_mock_cgrp_set_state(mcgrp,
                                            5582 * ***                                                RD_KAFKA_MOCK_CGR\
                                            5583 * P_STATE_JOINING,
                                            5584 * ***                                                "timed out waitin\
                                            5585 * g for all "
00003BD8 E320 D0A8 0024          000000A8   5586          STG   2,168(0,13)
00003BDE E548 D0B0 0001          000000B0   5587          MVGHI 176(13),1
                                            5588 * ***                                                "members to re-Jo\
                                            5589 * in or Leave");
00003BE4 E3F0 C110 0004          00003B28   5590          LG    15,@lit_1950_203
00003BEA 41F0 F396               00000396   5591          LA    15,918(0,15)
00003BEE E3F0 D0B8 0024          000000B8   5592          STG   15,184(0,13)
00003BF4 4110 D0A8               000000A8   5593          LA    1,168(0,13)
00003BF8 E3F0 C120 0004          00003B38   5594          LG    15,@lit_1950_208 ; rd_kafka_mock_cgrp_set_state
00003BFE                                    5595 @@gen_label297 DS    0H
00003BFE 05EF                               5596          BALR  14,15
00003C00                                    5597 @@gen_label298 DS    0H
                                            5598 * ***                   break;
00003C00 47F0 C240               00003C58   5599          B     @ret_lab_1950
                                            5600 * ***
                                            5601 * ***           case RD_KAFKA_MOCK_CGRP_STATE_UP:
                                            5602 * ***
                                            5603 * ***
                                            5604 * ***                   break;
                                            5605 * ***           }
00003C04                                    5606 @L750    DS    0H
00003C04 58F0 2040               00000040   5607          L     15,64(0,2)  ; offset of state in rd_kafka_mock_cgrp_s
00003C08 C2FF 0000 0004                     5608          CLFI  15,X'00000004'
00003C0E 4720 C240               00003C58   5609          BH    @ret_lab_1950
                                                                                                                           Page  115 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003C12 B914 00FF                          5610          LGFR  15,15
00003C16 4110 C218               00003C30   5611          LA    1,@@gen_label299
00003C1A EBFF 0003 000D          00000003   5612          SLLG  15,15,3(0)
00003C20 E3F1 F000 0004          00000000   5613          LG    15,0(1,15)
00003C26 47FF C000               00000000   5614          B     0(15,12)
00003C30                                    5615 @@gen_label299 DS    0D
00003C30 0000000000000240                   5616          DC AD(@ret_lab_1950-@REGION_1950_1)
00003C38 0000000000000130                   5617          DC AD(@L753-@REGION_1950_1)
00003C40 000000000000017C                   5618          DC AD(@L756-@REGION_1950_1)
00003C48 00000000000001C0                   5619          DC AD(@L757-@REGION_1950_1)
00003C50 0000000000000240                   5620          DC AD(@ret_lab_1950-@REGION_1950_1)
                                            5621 * ***   }
00003C58                                    5622 @ret_lab_1950 DS 0H
                                            5623 * * **** Start of Epilogue
                                            5624          DCCEPIL
00003C58                                    5625+         ds 0h                                                          01-DCCEP
                                            5626+* Epilog
00003C58 D707 D088 D088 00000088 00000088   5627+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003C5E E3D0 D080 0004          00000080   5628+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003C64 E3C0 D090 0004          00000090   5629+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003C6A E3B0 C018 0004          00000018   5630+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003C70 E3C0 B010 0021          00000010   5631+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003C76 E3E0 D008 0004          00000008   5632+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003C7C EB1C D020 0004          00000020   5633+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003C82 078E                               5634+         bcr 8,14                if same dsab, just return              01-DCCEP
00003C84 E3F0 D010 0024          00000010   5635+         stg 15,16(0,13)         save return code                       01-DCCEP
00003C8A E300 D018 0024          00000018   5636+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003C90 E3F0 D090 0004          00000090   5637+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003C96 E3F0 F018 0004          00000018   5638+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003C9C 47F0 F040               00000040   5639+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5640+* End of Epilog
                                            5641 * * **** End of Epilogue
                                            5642          DROP  12
                                            5643 *
                                            5644 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_fsm_timeout"
                                            5645 *      (FUNCTION #1950)
                                            5646 *
00000000                00000000 000000A8   5647 @AUTO#rd_kafka_mock_cgrp_fsm_timeout DSECT
00000000                                    5648          DS    XL168
                                            5649 *
00003CA0                00000000 00005122   5650 @CODE    CSECT
                                            5651 *
                                            5652 *
                                            5653 *
                                            5654 * ....... start of rd_kafka_mcgrp_rebalance_timer_cb
00003CA0                                    5655 @LNAME1951 DS  0H
00003CA0 00000021                           5656          DC    X'00000021'
00003CA4 99846D9281869281                   5657          DC    C'rd_kafka_mcgrp_rebalance_timer_c'
00003CC4 82                                 5658          DC    C'b'
00003CC5 00                                 5659          DC    X'00'
                                            5660 rd_kafka_mcgrp_rebalance_timer_cb DCCPRLG CINDEX=1951,BASER=12,FRAME=18*
                                                                4,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1951
                                                                                                                           Page  116 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5661          macro
                                            5662          dccextrn &m
                                            5663          gblc    &$dccext(1000)
                                            5664          gbla    &$dccexti
                                            5665          lcla    &i
                                            5666 &$dccext(&$dccexti+1) setc    '&m'
                                            5667 &i       seta    1
                                            5668 .loop    aif    (&i gt &$dccexti).around
                                            5669          aif    ('&$dccext(&i)' eq '&m').getout
                                            5670 &i       seta    &i+1
                                            5671          ago     .loop
                                            5672 .around  anop
                                            5673 &$dccexti seta &$dccexti+1
                                            5674          extrn  &m
                                            5675 .getout  anop
                                            5676          mend
00003CC8                                    5677+$eye0106    ds    0d                                                    02-DCCCA
00003CC8 C4C3C3                             5678+         dc cl3'DCC'                                                    02-DCCCA
00003CCB 01                                 5679+         dc xl1'01' format one                                          02-DCCCA
00003CCC 00000000                           5680+         dc a(0)                                                        02-DCCCA
00003CD0 0000000000003D3A                   5681+         dc ad(@PER_1951)                                               02-DCCCA
00003CD8 00000000000000B8                   5682+         dc ad(184)                                                     02-DCCCA
00003CE0 0000000000000000                   5683+         dc ad(0)                                                       02-DCCCA
00003CE8 0000000000001000                   5684+         dc ad(4096)                                                    02-DCCCA
00003CF0 20                                 5685+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003CF1 03                                 5686+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003CF2 03                                 5687+         dc al1(3)                                                      02-DCCCA
00003CF3 08                                 5688+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003CF4 00                                 5689+         dc bl.8'00000000'                                              02-DCCCA
00003CF5 000000                             5690+         dc al3(0)                                                      02-DCCCA
00003CF8 0000000000003CA0                   5691+         dc ad(@LNAME1951)                                              02-DCCCA
00003D00                                    5692+         ds 0d                                                          02-DCCCA
00003D00 0000000000003CC8                   5693+         dc ad($eye0106)                                                02-DCCCA
00003D08 0000000000000000                   5694+         dc ad(0)                                                       02-DCCCA
00003D10                                    5695+         ds    0d                                                       01-DCCPR
00003D10                                    5696+rd_kafka_mcgrp_rebalance_timer_cb ds 0d                                 01-DCCPR
00003D10                                    5697+@REGION_1951_1 ds 0h                                                    01-DCCPR
00003D10 EBEC D008 0024          00000008   5698+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003D16 E3E0 D088 0004          00000088   5699+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003D1C E3C0 D090 0004          00000090   5700+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003D22 B904 002E                          5701+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003D26 E3B0 C018 0004          00000018   5702+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003D2C A7EB 00B8               000000B8   5703+         aghi  14,184              increase by frame size               01-DCCPR
00003D30 E3E0 C020 0021          00000020   5704+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003D36 4720 B020               00000020   5705+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003D3A                                    5706+@PER_1951 ds   0h                                                       01-DCCPR
00003D3A EBDE 2080 0024          00000080   5707+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003D40 E3C0 2090 0024          00000090   5708+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003D46 B904 00D2                          5709+         lgr   13,2                set real frame pointer               01-DCCPR
00003D4A B904 00CF                          5710+         lgr   12,15               set base reg                         01-DCCPR
                        00003D10            5711+         using @REGION_1951_1,12                                        01-DCCPR
                                            5712 * ******* End of Prologue
                                                                                                                           Page  117 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5713 * *
                                            5714 * ***           rd_kafka_mock_cgrp_t *mcgrp = arg;
00003D4E E3F0 1008 0004          00000008   5715          LG    15,8(0,1)   ; arg
                                            5716 * ***
                                            5717 * ***           rd_kafka_mock_cgrp_fsm_timeout(mcgrp);
00003D54 E3F0 D0B0 0024          000000B0   5718          STG   15,176(0,13)
00003D5A 4110 D0B0               000000B0   5719          LA    1,176(0,13)
00003D5E E3F0 C0A8 0004          00003DB8   5720          LG    15,@lit_1951_216 ; rd_kafka_mock_cgrp_fsm_timeout
00003D64                                    5721 @@gen_label300 DS    0H
00003D64 05EF                               5722          BALR  14,15
00003D66                                    5723 @@gen_label301 DS    0H
                                            5724 * ***   }
00003D66                                    5725 @ret_lab_1951 DS 0H
                                            5726 * * **** Start of Epilogue
                                            5727          DCCEPIL
00003D66                                    5728+         ds 0h                                                          01-DCCEP
                                            5729+* Epilog
00003D66 D707 D088 D088 00000088 00000088   5730+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003D6C E3D0 D080 0004          00000080   5731+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003D72 E3C0 D090 0004          00000090   5732+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003D78 E3B0 C018 0004          00000018   5733+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003D7E E3C0 B010 0021          00000010   5734+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003D84 E3E0 D008 0004          00000008   5735+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003D8A EB1C D020 0004          00000020   5736+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003D90 078E                               5737+         bcr 8,14                if same dsab, just return              01-DCCEP
00003D92 E3F0 D010 0024          00000010   5738+         stg 15,16(0,13)         save return code                       01-DCCEP
00003D98 E300 D018 0024          00000018   5739+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003D9E E3F0 D090 0004          00000090   5740+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003DA4 E3F0 F018 0004          00000018   5741+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003DAA 47F0 F040               00000040   5742+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5743+* End of Epilog
                                            5744 * * **** End of Epilogue
00003DB0                                    5745          DS    0D
00003DB0 000000B8                           5746 @FRAMESIZE_1951 DC F'184'
00003DB4 00000000
00003DB8 0000000000003A18                   5747 @lit_1951_216 DC AD(rd_kafka_mock_cgrp_fsm_timeout)
                                            5748          DROP  12
                                            5749 *
                                            5750 *   DSECT for automatic variables in "rd_kafka_mcgrp_rebalance_timer_c
                                            5751 *           b"
                                            5752 *      (FUNCTION #1951)
                                            5753 *
00000000                00000000 000000A8   5754 @AUTO#rd_kafka_mcgrp_rebalance_timer_cb DSECT
00000000                                    5755          DS    XL168
                                            5756 *
00003DC0                00000000 00005122   5757 @CODE    CSECT
                                            5758 *
                                            5759 *
                                            5760 *
                                            5761 * ....... start of rd_kafka_mock_cgrp_rebalance_timer_restart
00003DC0                                    5762 @LNAME1948 DS  0H
00003DC0 0000002A                           5763          DC    X'0000002A'
                                                                                                                           Page  118 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003DC4 99846D9281869281                   5764          DC    C'rd_kafka_mock_cgrp_rebalance_tim'
00003DE4 85996D9985A2A381                   5765          DC    C'er_restart'
00003DEE 00                                 5766          DC    X'00'
                                            5767 rd_kafka_mock_cgrp_rebalance_timer_restart DCCPRLG CINDEX=1948,BASER=12*
                                                                ,FRAME=224,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1948
                                            5768          macro
                                            5769          dccextrn &m
                                            5770          gblc    &$dccext(1000)
                                            5771          gbla    &$dccexti
                                            5772          lcla    &i
                                            5773 &$dccext(&$dccexti+1) setc    '&m'
                                            5774 &i       seta    1
                                            5775 .loop    aif    (&i gt &$dccexti).around
                                            5776          aif    ('&$dccext(&i)' eq '&m').getout
                                            5777 &i       seta    &i+1
                                            5778          ago     .loop
                                            5779 .around  anop
                                            5780 &$dccexti seta &$dccexti+1
                                            5781          extrn  &m
                                            5782 .getout  anop
                                            5783          mend
00003DF0                                    5784+$eye0109    ds    0d                                                    02-DCCCA
00003DF0 C4C3C3                             5785+         dc cl3'DCC'                                                    02-DCCCA
00003DF3 01                                 5786+         dc xl1'01' format one                                          02-DCCCA
00003DF4 00000000                           5787+         dc a(0)                                                        02-DCCCA
00003DF8 0000000000003E62                   5788+         dc ad(@PER_1948)                                               02-DCCCA
00003E00 00000000000000E0                   5789+         dc ad(224)                                                     02-DCCCA
00003E08 0000000000000000                   5790+         dc ad(0)                                                       02-DCCCA
00003E10 0000000000001000                   5791+         dc ad(4096)                                                    02-DCCCA
00003E18 20                                 5792+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003E19 03                                 5793+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003E1A 03                                 5794+         dc al1(3)                                                      02-DCCCA
00003E1B 08                                 5795+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003E1C 00                                 5796+         dc bl.8'00000000'                                              02-DCCCA
00003E1D 000000                             5797+         dc al3(0)                                                      02-DCCCA
00003E20 0000000000003DC0                   5798+         dc ad(@LNAME1948)                                              02-DCCCA
00003E28                                    5799+         ds 0d                                                          02-DCCCA
00003E28 0000000000003DF0                   5800+         dc ad($eye0109)                                                02-DCCCA
00003E30 0000000000000000                   5801+         dc ad(0)                                                       02-DCCCA
00003E38                                    5802+         ds    0d                                                       01-DCCPR
00003E38                                    5803+rd_kafka_mock_cgrp_rebalance_timer_restart ds 0d                        01-DCCPR
00003E38                                    5804+@REGION_1948_1 ds 0h                                                    01-DCCPR
00003E38 EBEC D008 0024          00000008   5805+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003E3E E3E0 D088 0004          00000088   5806+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003E44 E3C0 D090 0004          00000090   5807+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003E4A B904 002E                          5808+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003E4E E3B0 C018 0004          00000018   5809+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003E54 A7EB 00E0               000000E0   5810+         aghi  14,224              increase by frame size               01-DCCPR
00003E58 E3E0 C020 0021          00000020   5811+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003E5E 4720 B020               00000020   5812+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003E62                                    5813+@PER_1948 ds   0h                                                       01-DCCPR
00003E62 EBDE 2080 0024          00000080   5814+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  119 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003E68 E3C0 2090 0024          00000090   5815+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003E6E B904 00D2                          5816+         lgr   13,2                set real frame pointer               01-DCCPR
00003E72 B904 00CF                          5817+         lgr   12,15               set base reg                         01-DCCPR
                        00003E38            5818+         using @REGION_1948_1,12                                        01-DCCPR
                                            5819 * ******* End of Prologue
                                            5820 * *
                                            5821 * ***           rd_kafka_timer_start0(&mcgrp->cluster->timers,&mcgrp->\
                                            5822 * rebalance_tmr,timeout_ms * 1000,1,1,rd_kafka_mcgrp_rebalance_timer_c\
                                            5823 * b,mcgrp);
00003E76 E3F0 1000 0004          00000000   5824          LG    15,0(0,1)   ; mcgrp
00003E7C E320 F010 0004          00000010   5825          LG    2,16(0,15)  ; offset of cluster in rd_kafka_mock_cgrp_s
00003E82 4120 24E0               000004E0   5826          LA    2,1248(0,2)
00003E86 E320 D0A8 0024          000000A8   5827          STG   2,168(0,13)
00003E8C 4120 F080               00000080   5828          LA    2,128(0,15)
00003E90 E320 D0B0 0024          000000B0   5829          STG   2,176(0,13)
00003E96 5810 100C               0000000C   5830          L     1,12(0,1)   ; timeout_ms
00003E9A A71C 03E8               000003E8   5831          MHI   1,1000
00003E9E B914 0011                          5832          LGFR  1,1
00003EA2 E310 D0B8 0024          000000B8   5833          STG   1,184(0,13)
00003EA8 E548 D0C0 0001          000000C0   5834          MVGHI 192(13),1
00003EAE E548 D0C8 0001          000000C8   5835          MVGHI 200(13),1
00003EB4 E310 C0F8 0004          00003F30   5836          LG    1,@lit_1948_218 ; rd_kafka_mcgrp_rebalance_timer_cb
00003EBA E310 D0D0 0024          000000D0   5837          STG   1,208(0,13)
00003EC0 E3F0 D0D8 0024          000000D8   5838          STG   15,216(0,13)
00003EC6 4110 D0A8               000000A8   5839          LA    1,168(0,13)
00003ECA E3F0 C0F0 0004          00003F28   5840          LG    15,@lit_1948_219 ; rd_kafka_timer_start0
00003ED0                                    5841 @@gen_label302 DS    0H
00003ED0 05EF                               5842          BALR  14,15
00003ED2                                    5843 @@gen_label303 DS    0H
                                            5844 * ***
                                            5845 * ***   # 491 "C:\asgkafka\librdkafka\src\rdkafka_mock_cgrp.c"
                                            5846 * ***   }
00003ED2                                    5847 @ret_lab_1948 DS 0H
                                            5848 * * **** Start of Epilogue
                                            5849          DCCEPIL
00003ED2                                    5850+         ds 0h                                                          01-DCCEP
                                            5851+* Epilog
00003ED2 D707 D088 D088 00000088 00000088   5852+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003ED8 E3D0 D080 0004          00000080   5853+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003EDE E3C0 D090 0004          00000090   5854+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003EE4 E3B0 C018 0004          00000018   5855+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003EEA E3C0 B010 0021          00000010   5856+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003EF0 E3E0 D008 0004          00000008   5857+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003EF6 EB1C D020 0004          00000020   5858+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003EFC 078E                               5859+         bcr 8,14                if same dsab, just return              01-DCCEP
00003EFE E3F0 D010 0024          00000010   5860+         stg 15,16(0,13)         save return code                       01-DCCEP
00003F04 E300 D018 0024          00000018   5861+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003F0A E3F0 D090 0004          00000090   5862+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003F10 E3F0 F018 0004          00000018   5863+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003F16 47F0 F040               00000040   5864+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5865+* End of Epilog
                                            5866 * * **** End of Epilogue
                                                                                                                           Page  120 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003F20                                    5867          DS    0D
00003F20 000000E0                           5868 @FRAMESIZE_1948 DC F'224'
00003F24 00000000
00003F28 0000000000000000                   5869 @lit_1948_219 DC AD(rd_kafka_timer_start0)
00003F30 0000000000003D10                   5870 @lit_1948_218 DC AD(rd_kafka_mcgrp_rebalance_timer_cb)
                                            5871          DROP  12
                                            5872 *
                                            5873 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_rebalance_tim
                                            5874 *           er_restart"
                                            5875 *      (FUNCTION #1948)
                                            5876 *
00000000                00000000 000000A8   5877 @AUTO#rd_kafka_mock_cgrp_rebalance_timer_restart DSECT
00000000                                    5878          DS    XL168
                                            5879 *
00003F38                00000000 00005122   5880 @CODE    CSECT
                                            5881 *
                                            5882 *
                                            5883 *
                                            5884 * ....... start of rd_kafka_mock_cgrp_member_destroy
00003F38                                    5885 @LNAME1944 DS  0H
00003F38 00000021                           5886          DC    X'00000021'
00003F3C 99846D9281869281                   5887          DC    C'rd_kafka_mock_cgrp_member_destro'
00003F5C A8                                 5888          DC    C'y'
00003F5D 00                                 5889          DC    X'00'
                                            5890 rd_kafka_mock_cgrp_member_destroy DCCPRLG CINDEX=1944,BASER=12,FRAME=20*
                                                                0,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1944
                                            5891          macro
                                            5892          dccextrn &m
                                            5893          gblc    &$dccext(1000)
                                            5894          gbla    &$dccexti
                                            5895          lcla    &i
                                            5896 &$dccext(&$dccexti+1) setc    '&m'
                                            5897 &i       seta    1
                                            5898 .loop    aif    (&i gt &$dccexti).around
                                            5899          aif    ('&$dccext(&i)' eq '&m').getout
                                            5900 &i       seta    &i+1
                                            5901          ago     .loop
                                            5902 .around  anop
                                            5903 &$dccexti seta &$dccexti+1
                                            5904          extrn  &m
                                            5905 .getout  anop
                                            5906          mend
00003F60                                    5907+$eye0112    ds    0d                                                    02-DCCCA
00003F60 C4C3C3                             5908+         dc cl3'DCC'                                                    02-DCCCA
00003F63 01                                 5909+         dc xl1'01' format one                                          02-DCCCA
00003F64 00000000                           5910+         dc a(0)                                                        02-DCCCA
00003F68 0000000000003FD2                   5911+         dc ad(@PER_1944)                                               02-DCCCA
00003F70 00000000000000C8                   5912+         dc ad(200)                                                     02-DCCCA
00003F78 0000000000000000                   5913+         dc ad(0)                                                       02-DCCCA
00003F80 0000000000001000                   5914+         dc ad(4096)                                                    02-DCCCA
00003F88 20                                 5915+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003F89 03                                 5916+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page  121 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00003F8A 03                                 5917+         dc al1(3)                                                      02-DCCCA
00003F8B 08                                 5918+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003F8C 00                                 5919+         dc bl.8'00000000'                                              02-DCCCA
00003F8D 000000                             5920+         dc al3(0)                                                      02-DCCCA
00003F90 0000000000003F38                   5921+         dc ad(@LNAME1944)                                              02-DCCCA
00003F98                                    5922+         ds 0d                                                          02-DCCCA
00003F98 0000000000003F60                   5923+         dc ad($eye0112)                                                02-DCCCA
00003FA0 0000000000000000                   5924+         dc ad(0)                                                       02-DCCCA
00003FA8                                    5925+         ds    0d                                                       01-DCCPR
00003FA8                                    5926+rd_kafka_mock_cgrp_member_destroy ds 0d                                 01-DCCPR
00003FA8                                    5927+@REGION_1944_1 ds 0h                                                    01-DCCPR
00003FA8 EBEC D008 0024          00000008   5928+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003FAE E3E0 D088 0004          00000088   5929+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003FB4 E3C0 D090 0004          00000090   5930+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003FBA B904 002E                          5931+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003FBE E3B0 C018 0004          00000018   5932+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003FC4 A7EB 00C8               000000C8   5933+         aghi  14,200              increase by frame size               01-DCCPR
00003FC8 E3E0 C020 0021          00000020   5934+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003FCE 4720 B020               00000020   5935+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003FD2                                    5936+@PER_1944 ds   0h                                                       01-DCCPR
00003FD2 EBDE 2080 0024          00000080   5937+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003FD8 E3C0 2090 0024          00000090   5938+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003FDE B904 00D2                          5939+         lgr   13,2                set real frame pointer               01-DCCPR
00003FE2 B904 00CF                          5940+         lgr   12,15               set base reg                         01-DCCPR
                        00003FA8            5941+         using @REGION_1944_1,12                                        01-DCCPR
                                            5942 * ******* End of Prologue
                                            5943 * *
                                            5944 * ***           ((mcgrp->member_cnt > 0) ? (void)0 : __assert(__func__\
                                            5945 * , "C:\\asgkafka\\librdkafka\\src\\rdkafka_mock_cgrp.c", 497, "mcgrp-\
                                            5946 * >member_cnt > 0"));
00003FE6 EB23 1000 0004          00000000   5947          LMG   2,3,0(1)    ; mcgrp
00003FEC E55C 20C8 0000          000000C8   5948          CHSI  200(2),0
00003FF2 4720 C08A               00004032   5949          BH    @L761
00003FF6                                    5950 @L759    DS    0H
00003FF6 E3F0 C0C8 0004          00004070   5951          LG    15,@lit_1944_221
00003FFC 41F0 F232               00000232   5952          LA    15,562(0,15)
00004000 E3F0 D0A8 0024          000000A8   5953          STG   15,168(0,13)
00004006 E3F0 C0C0 0004          00004068   5954          LG    15,@lit_1944_222
0000400C 4110 F0C4               000000C4   5955          LA    1,196(0,15)
00004010 E310 D0B0 0024          000000B0   5956          STG   1,176(0,13)
00004016 E548 D0B8 01F1          000000B8   5957          MVGHI 184(13),497
0000401C 41F0 F3CC               000003CC   5958          LA    15,972(0,15)
00004020 E3F0 D0C0 0024          000000C0   5959          STG   15,192(0,13)
00004026 4110 D0A8               000000A8   5960          LA    1,168(0,13)
0000402A E3F0 C0B8 0004          00004060   5961          LG    15,@lit_1944_223 ; __assert
00004030                                    5962 @@gen_label305 DS    0H
00004030 05EF                               5963          BALR  14,15
00004032                                    5964 @@gen_label306 DS    0H
00004032                                    5965 @L760    DS    0H
                                            5966 * ***           do {   if (((member)->link .tqe_next) != (((void *)0))\
                                            5967 * ) (member)->link .tqe_next->link .tqe_prev = (member)->link .tqe_pre\
                                            5968 * v; else (&mcgrp->members)->tqh_last = (member)->link .tqe_prev; *(me\
                                                                                                                           Page  122 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            5969 * mber)->link .tqe_prev = (member)->link .tqe_next; ; } while ( 0);
00004032                                    5970 @L761    DS    0H
00004032 E3F0 3000 0002          00000000   5971          LTG   15,0(0,3)   ; member
00004038 4780 C0F8               000040A0   5972          BE    @L764
0000403C E3F0 3000 0004          00000000   5973          LG    15,0(0,3)   ; member
00004042 E310 3008 0004          00000008   5974          LG    1,8(0,3)    ; offset of tqe_prev in 0000156
00004048 E310 F008 0024          00000008   5975          STG   1,8(0,15)   ; offset of tqe_prev in 0000156
0000404E 47F0 C104               000040AC   5976          B     @L765
00004058                                    5977          DS    0D
00004058 000000C8                           5978 @FRAMESIZE_1944 DC F'200'
0000405C 00000000
00004060 0000000000000000                   5979 @lit_1944_223 DC AD(__assert)
00004068 000000000000539A                   5980 @lit_1944_222 DC AD(@strings@)
00004070 0000000000005128                   5981 @lit_1944_221 DC AD(@DATA)
00004078 0000000000000658                   5982 @lit_1944_224 DC AD(rd_free)
00004080 0000000000000A90                   5983 @lit_1944_225 DC AD(rd_refcnt_sub0)
00004088 0000000000000000                   5984 @lit_1944_226 DC AD(rd_kafka_buf_destroy_final)
00004090 0000000000002538                   5985 @lit_1944_228 DC AD(rd_kafka_mock_cgrp_member_assignment_set)
00004098 0000000000003018                   5986 @lit_1944_229 DC AD(rd_kafka_mock_cgrp_protos_destroy)
000040A0                                    5987 @L764    DS    0H
000040A0 E3F0 3008 0004          00000008   5988          LG    15,8(0,3)   ; offset of tqe_prev in 0000156
000040A6 E3F0 20C0 0024          000000C0   5989          STG   15,192(0,2) ; offset of tqh_last in 0000159
000040AC                                    5990 @L765    DS    0H
000040AC E3F0 3008 0004          00000008   5991          LG    15,8(0,3)   ; offset of tqe_prev in 0000156
000040B2 E310 3000 0004          00000000   5992          LG    1,0(0,3)    ; member
000040B8 E310 F000 0024          00000000   5993          STG   1,0(0,15)
                                            5994 * ***           mcgrp->member_cnt--;
000040BE 58F0 20C8               000000C8   5995          L     15,200(0,2)
000040C2 A7FA FFFF               0000FFFF   5996          AHI   15,-1
000040C6 50F0 20C8               000000C8   5997          ST    15,200(0,2)
                                            5998 * ***
                                            5999 * ***           rd_free(member->id);
000040CA E3F0 3010 0004          00000010   6000          LG    15,16(0,3)
000040D0 E3F0 D0A8 0024          000000A8   6001          STG   15,168(0,13)
000040D6 4110 D0A8               000000A8   6002          LA    1,168(0,13)
000040DA E3F0 C0D0 0004          00004078   6003          LG    15,@lit_1944_224 ; rd_free
000040E0                                    6004 @@gen_label308 DS    0H
000040E0 05EF                               6005          BALR  14,15
000040E2                                    6006 @@gen_label309 DS    0H
                                            6007 * ***
                                            6008 * ***           if (member->resp)
000040E2 E3F0 3040 0002          00000040   6009          LTG   15,64(0,3)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
000040E8 4780 C17E               00004126   6010          BZ    @L766
                                            6011 * ***                   do { if (rd_refcnt_sub0(&(member->resp)->rkbuf\
                                            6012 * _refcnt) > 0) break; rd_kafka_buf_destroy_final(member->resp); } whi\
                                            6013 * le (0);
000040EC                                    6014 @L767    DS    0H
000040EC E3F0 3040 0004          00000040   6015          LG    15,64(0,3)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
000040F2 41F0 F108               00000108   6016          LA    15,264(0,15)
000040F6 E3F0 D0A8 0024          000000A8   6017          STG   15,168(0,13)
                                                                                                                           Page  123 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000040FC 4110 D0A8               000000A8   6018          LA    1,168(0,13)
00004100 E3F0 C0D8 0004          00004080   6019          LG    15,@lit_1944_225 ; rd_refcnt_sub0
00004106                                    6020 @@gen_label311 DS    0H
00004106 05EF                               6021          BALR  14,15
00004108                                    6022 @@gen_label312 DS    0H
00004108 12FF                               6023          LTR   15,15
0000410A 4720 C17E               00004126   6024          BH    @L766
0000410E                                    6025 @L770    DS    0H
0000410E E3F0 3040 0004          00000040   6026          LG    15,64(0,3)
00004114 E3F0 D0A8 0024          000000A8   6027          STG   15,168(0,13)
0000411A 4110 D0A8               000000A8   6028          LA    1,168(0,13)
0000411E E3F0 C0E0 0004          00004088   6029          LG    15,@lit_1944_226 ; rd_kafka_buf_destroy_final
00004124                                    6030 @@gen_label314 DS    0H
00004124 05EF                               6031          BALR  14,15
00004126                                    6032 @@gen_label315 DS    0H
00004126                                    6033 @L768    DS    0H
                                            6034 * ***
                                            6035 * ***           if (member->group_instance_id)
00004126                                    6036 @L766    DS    0H
00004126 E3F0 3018 0002          00000018   6037          LTG   15,24(0,3)  ; offset of group_instance_id in rd_kafka_mo*
                                                                ck_cgrp_member_s
0000412C 4780 C1A0               00004148   6038          BZ    @L771
                                            6039 * ***                   rd_free(member->group_instance_id);
00004130 E3F0 3018 0004          00000018   6040          LG    15,24(0,3)
00004136 E3F0 D0A8 0024          000000A8   6041          STG   15,168(0,13)
0000413C 4110 D0A8               000000A8   6042          LA    1,168(0,13)
00004140 E3F0 C0D0 0004          00004078   6043          LG    15,@lit_1944_224 ; rd_free
00004146                                    6044 @@gen_label317 DS    0H
00004146 05EF                               6045          BALR  14,15
00004148                                    6046 @@gen_label318 DS    0H
00004148                                    6047 @L771    DS    0H
                                            6048 * ***
                                            6049 * ***           rd_kafka_mock_cgrp_member_assignment_set(mcgrp, member\
                                            6050 * , ((void *)0));
00004148 EB23 D0A8 0024          000000A8   6051          STMG  2,3,168(13)
0000414E D707 D0B8 D0B8 000000B8 000000B8   6052          XC    184(8,13),184(13)
00004154 4110 D0A8               000000A8   6053          LA    1,168(0,13)
00004158 E3F0 C0E8 0004          00004090   6054          LG    15,@lit_1944_228 ; rd_kafka_mock_cgrp_member_assignment_*
                                                                set
0000415E                                    6055 @@gen_label319 DS    0H
0000415E 05EF                               6056          BALR  14,15
00004160                                    6057 @@gen_label320 DS    0H
                                            6058 * ***
                                            6059 * ***           rd_kafka_mock_cgrp_protos_destroy(member->protos, memb\
                                            6060 * er->proto_cnt);
00004160 E3F0 3028 0004          00000028   6061          LG    15,40(0,3)
00004166 E3F0 D0A8 0024          000000A8   6062          STG   15,168(0,13)
0000416C E3F0 3030 0014          00000030   6063          LGF   15,48(0,3)
00004172 E3F0 D0B0 0024          000000B0   6064          STG   15,176(0,13)
00004178 4110 D0A8               000000A8   6065          LA    1,168(0,13)
0000417C E3F0 C0F0 0004          00004098   6066          LG    15,@lit_1944_229 ; rd_kafka_mock_cgrp_protos_destroy
00004182                                    6067 @@gen_label321 DS    0H
                                                                                                                           Page  124 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004182 05EF                               6068          BALR  14,15
00004184                                    6069 @@gen_label322 DS    0H
                                            6070 * ***
                                            6071 * ***           rd_free(member);
00004184 E330 D0A8 0024          000000A8   6072          STG   3,168(0,13)
0000418A 4110 D0A8               000000A8   6073          LA    1,168(0,13)
0000418E E3F0 C0D0 0004          00004078   6074          LG    15,@lit_1944_224 ; rd_free
00004194                                    6075 @@gen_label323 DS    0H
00004194 05EF                               6076          BALR  14,15
00004196                                    6077 @@gen_label324 DS    0H
                                            6078 * ***   }
00004196                                    6079 @ret_lab_1944 DS 0H
                                            6080 * * **** Start of Epilogue
                                            6081          DCCEPIL
00004196                                    6082+         ds 0h                                                          01-DCCEP
                                            6083+* Epilog
00004196 D707 D088 D088 00000088 00000088   6084+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000419C E3D0 D080 0004          00000080   6085+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000041A2 E3C0 D090 0004          00000090   6086+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000041A8 E3B0 C018 0004          00000018   6087+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000041AE E3C0 B010 0021          00000010   6088+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000041B4 E3E0 D008 0004          00000008   6089+         lg  14,8(0,13)          load up return address                 01-DCCEP
000041BA EB1C D020 0004          00000020   6090+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000041C0 078E                               6091+         bcr 8,14                if same dsab, just return              01-DCCEP
000041C2 E3F0 D010 0024          00000010   6092+         stg 15,16(0,13)         save return code                       01-DCCEP
000041C8 E300 D018 0024          00000018   6093+         stg 0,24(0,13)          save more return code                  01-DCCEP
000041CE E3F0 D090 0004          00000090   6094+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000041D4 E3F0 F018 0004          00000018   6095+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000041DA 47F0 F040               00000040   6096+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6097+* End of Epilog
                                            6098 * * **** End of Epilogue
                                            6099          DROP  12
                                            6100 *
                                            6101 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_member_destro
                                            6102 *           y"
                                            6103 *      (FUNCTION #1944)
                                            6104 *
00000000                00000000 000000A8   6105 @AUTO#rd_kafka_mock_cgrp_member_destroy DSECT
00000000                                    6106          DS    XL168
                                            6107 *
000041DE                00000000 00005122   6108 @CODE    CSECT
                                            6109 *
                                            6110 *
                                            6111 *
                                            6112 * ....... start of rd_kafka_mock_cgrp_member_find
                                            6113 rd_kafka_mock_cgrp_member_find ALIAS X'99846D92818692816D949683926D8387*
                                                                99976D9485948285996D86899584'
000041DE                                    6114 @LNAME1938 DS  0H
000041DE 0000001E                           6115          DC    X'0000001E'
000041E2 99846D9281869281                   6116          DC    C'rd_kafka_mock_cgrp_member_find'
00004200 00                                 6117          DC    X'00'
                                            6118 rd_kafka_mock_cgrp_member_find DCCPRLG CINDEX=1938,BASER=12,FRAME=192,E*
                                                                                                                           Page  125 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                NTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1938
                                            6119          macro
                                            6120          dccextrn &m
                                            6121          gblc    &$dccext(1000)
                                            6122          gbla    &$dccexti
                                            6123          lcla    &i
                                            6124 &$dccext(&$dccexti+1) setc    '&m'
                                            6125 &i       seta    1
                                            6126 .loop    aif    (&i gt &$dccexti).around
                                            6127          aif    ('&$dccext(&i)' eq '&m').getout
                                            6128 &i       seta    &i+1
                                            6129          ago     .loop
                                            6130 .around  anop
                                            6131 &$dccexti seta &$dccexti+1
                                            6132          extrn  &m
                                            6133 .getout  anop
                                            6134          mend
00004208                                    6135+$eye0115    ds    0d                                                    02-DCCCA
00004208 C4C3C3                             6136+         dc cl3'DCC'                                                    02-DCCCA
0000420B 01                                 6137+         dc xl1'01' format one                                          02-DCCCA
0000420C 00000000                           6138+         dc a(0)                                                        02-DCCCA
00004210 000000000000427A                   6139+         dc ad(@PER_1938)                                               02-DCCCA
00004218 00000000000000C0                   6140+         dc ad(192)                                                     02-DCCCA
00004220 0000000000000000                   6141+         dc ad(0)                                                       02-DCCCA
00004228 0000000000001000                   6142+         dc ad(4096)                                                    02-DCCCA
00004230 20                                 6143+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004231 03                                 6144+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004232 03                                 6145+         dc al1(3)                                                      02-DCCCA
00004233 08                                 6146+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004234 00                                 6147+         dc bl.8'00000000'                                              02-DCCCA
00004235 000000                             6148+         dc al3(0)                                                      02-DCCCA
00004238 00000000000041DE                   6149+         dc ad(@LNAME1938)                                              02-DCCCA
00004240                                    6150+         ds 0d                                                          02-DCCCA
00004240 0000000000004208                   6151+         dc ad($eye0115)                                                02-DCCCA
00004248 0000000000000000                   6152+         dc ad(0)                                                       02-DCCCA
00004250                                    6153+         ds    0d                                                       01-DCCPR
                                            6154+         entry rd_kafka_mock_cgrp_member_find                           01-DCCPR
00004250                                    6155+rd_kafka_mock_cgrp_member_find ds 0d                                    01-DCCPR
00004250                                    6156+@REGION_1938_1 ds 0h                                                    01-DCCPR
00004250 EBEC D008 0024          00000008   6157+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004256 E3E0 D088 0004          00000088   6158+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000425C E3C0 D090 0004          00000090   6159+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004262 B904 002E                          6160+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004266 E3B0 C018 0004          00000018   6161+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000426C A7EB 00C0               000000C0   6162+         aghi  14,192              increase by frame size               01-DCCPR
00004270 E3E0 C020 0021          00000020   6163+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004276 4720 B020               00000020   6164+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000427A                                    6165+@PER_1938 ds   0h                                                       01-DCCPR
0000427A EBDE 2080 0024          00000080   6166+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004280 E3C0 2090 0024          00000090   6167+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004286 B904 00D2                          6168+         lgr   13,2                set real frame pointer               01-DCCPR
0000428A B904 00CF                          6169+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page  126 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        00004250            6170+         using @REGION_1938_1,12                                        01-DCCPR
0000428E B904 0031                          6171          LGR   3,1         ; ptr to parm area
                                            6172 * ******* End of Prologue
                                            6173 * *
                                            6174 * ***           const rd_kafka_mock_cgrp_member_t *member;
                                            6175 * ***           for ((member) = ((&mcgrp->members)->tqh_first); (membe\
                                            6176 * r) != (((void *)0)); (member) = ((member)->link .tqe_next)) {
00004292 E3F0 3000 0004          00000000   6177          LG    15,0(0,3)   ; mcgrp
00004298 E320 F0B8 0004          000000B8   6178          LG    2,184(0,15) ; offset of members in rd_kafka_mock_cgrp_s
0000429E 47F0 C0A0               000042F0   6179          B     @L773
000042A8                                    6180          DS    0D
000042A8 000000C0                           6181 @FRAMESIZE_1938 DC F'192'
000042AC 00000000
000042B0 0000000000000E28                   6182 @lit_1938_232 DC AD(rd_kafkap_str_cmp_str)
000042B8                                    6183 @L772    DS    0H
                                            6184 * ***                   if (!rd_kafkap_str_cmp_str(MemberId, member->i\
                                            6185 * d))
000042B8 E3F0 3008 0004          00000008   6186          LG    15,8(0,3)   ; MemberId
000042BE E3F0 D0B0 0024          000000B0   6187          STG   15,176(0,13)
000042C4 E3F0 2010 0004          00000010   6188          LG    15,16(0,2)
000042CA E3F0 D0B8 0024          000000B8   6189          STG   15,184(0,13)
000042D0 4110 D0B0               000000B0   6190          LA    1,176(0,13)
000042D4 E3F0 C060 0004          000042B0   6191          LG    15,@lit_1938_232 ; rd_kafkap_str_cmp_str
000042DA                                    6192 @@gen_label325 DS    0H
000042DA 05EF                               6193          BALR  14,15
000042DC                                    6194 @@gen_label326 DS    0H
000042DC 12FF                               6195          LTR   15,15
000042DE 4770 C09A               000042EA   6196          BNZ   @L776
                                            6197 * ***                           return (rd_kafka_mock_cgrp_member_t *)\
                                            6198 * member;
000042E2 B904 00F2                          6199          LGR   15,2
000042E6 47F0 C0AC               000042FC   6200          B     @ret_lab_1938
000042EA                                    6201 @L776    DS    0H
                                            6202 * ***           }
000042EA E320 2000 0004          00000000   6203          LG    2,0(0,2)    ; member
000042F0                                    6204 @L773    DS    0H
000042F0 B902 00F2                          6205          LTGR  15,2
000042F4 4770 C068               000042B8   6206          BNE   @L772
                                            6207 * ***
                                            6208 * ***           return ((void *)0);
000042F8 A7F9 0000               00000000   6209          LGHI  15,0        ; 0
                                            6210 * ***   }
000042FC                                    6211 @ret_lab_1938 DS 0H
                                            6212 * * **** Start of Epilogue
                                            6213          DCCEPIL
000042FC                                    6214+         ds 0h                                                          01-DCCEP
                                            6215+* Epilog
000042FC D707 D088 D088 00000088 00000088   6216+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004302 E3D0 D080 0004          00000080   6217+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004308 E3C0 D090 0004          00000090   6218+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000430E E3B0 C018 0004          00000018   6219+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004314 E3C0 B010 0021          00000010   6220+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  127 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000431A E3E0 D008 0004          00000008   6221+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004320 EB1C D020 0004          00000020   6222+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004326 078E                               6223+         bcr 8,14                if same dsab, just return              01-DCCEP
00004328 E3F0 D010 0024          00000010   6224+         stg 15,16(0,13)         save return code                       01-DCCEP
0000432E E300 D018 0024          00000018   6225+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004334 E3F0 D090 0004          00000090   6226+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000433A E3F0 F018 0004          00000018   6227+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004340 47F0 F040               00000040   6228+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6229+* End of Epilog
                                            6230 * * **** End of Epilogue
                                            6231          DROP  12
                                            6232 *
                                            6233 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_member_find"
                                            6234 *      (FUNCTION #1938)
                                            6235 *
00000000                00000000 000000A8   6236 @AUTO#rd_kafka_mock_cgrp_member_find DSECT
00000000                                    6237          DS    XL168
                                            6238 *
00004344                00000000 00005122   6239 @CODE    CSECT
                                            6240 *
                                            6241 *
                                            6242 *
                                            6243 * ....... start of rd_kafka_mock_cgrp_member_add
                                            6244 rd_kafka_mock_cgrp_member_add ALIAS X'99846D92818692816D949683926D83879*
                                                                9976D9485948285996D818484'
00004344                                    6245 @LNAME1936 DS  0H
00004344 0000001D                           6246          DC    X'0000001D'
00004348 99846D9281869281                   6247          DC    C'rd_kafka_mock_cgrp_member_add'
00004365 00                                 6248          DC    X'00'
                                            6249 rd_kafka_mock_cgrp_member_add DCCPRLG CINDEX=1936,BASER=12,FRAME=232,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1936
                                            6250          macro
                                            6251          dccextrn &m
                                            6252          gblc    &$dccext(1000)
                                            6253          gbla    &$dccexti
                                            6254          lcla    &i
                                            6255 &$dccext(&$dccexti+1) setc    '&m'
                                            6256 &i       seta    1
                                            6257 .loop    aif    (&i gt &$dccexti).around
                                            6258          aif    ('&$dccext(&i)' eq '&m').getout
                                            6259 &i       seta    &i+1
                                            6260          ago     .loop
                                            6261 .around  anop
                                            6262 &$dccexti seta &$dccexti+1
                                            6263          extrn  &m
                                            6264 .getout  anop
                                            6265          mend
00004368                                    6266+$eye0118    ds    0d                                                    02-DCCCA
00004368 C4C3C3                             6267+         dc cl3'DCC'                                                    02-DCCCA
0000436B 01                                 6268+         dc xl1'01' format one                                          02-DCCCA
0000436C 00000000                           6269+         dc a(0)                                                        02-DCCCA
00004370 00000000000043DA                   6270+         dc ad(@PER_1936)                                               02-DCCCA
                                                                                                                           Page  128 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004378 00000000000000E8                   6271+         dc ad(232)                                                     02-DCCCA
00004380 0000000000000000                   6272+         dc ad(0)                                                       02-DCCCA
00004388 0000000000001000                   6273+         dc ad(4096)                                                    02-DCCCA
00004390 20                                 6274+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004391 03                                 6275+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004392 03                                 6276+         dc al1(3)                                                      02-DCCCA
00004393 08                                 6277+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004394 00                                 6278+         dc bl.8'00000000'                                              02-DCCCA
00004395 000000                             6279+         dc al3(0)                                                      02-DCCCA
00004398 0000000000004344                   6280+         dc ad(@LNAME1936)                                              02-DCCCA
000043A0                                    6281+         ds 0d                                                          02-DCCCA
000043A0 0000000000004368                   6282+         dc ad($eye0118)                                                02-DCCCA
000043A8 0000000000000000                   6283+         dc ad(0)                                                       02-DCCCA
000043B0                                    6284+         ds    0d                                                       01-DCCPR
                                            6285+         entry rd_kafka_mock_cgrp_member_add                            01-DCCPR
000043B0                                    6286+rd_kafka_mock_cgrp_member_add ds 0d                                     01-DCCPR
000043B0                                    6287+@REGION_1936_1 ds 0h                                                    01-DCCPR
000043B0 EBEC D008 0024          00000008   6288+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000043B6 E3E0 D088 0004          00000088   6289+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000043BC E3C0 D090 0004          00000090   6290+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000043C2 B904 002E                          6291+         lgr   2,14                copy addr of our savearea            01-DCCPR
000043C6 E3B0 C018 0004          00000018   6292+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000043CC A7EB 00E8               000000E8   6293+         aghi  14,232              increase by frame size               01-DCCPR
000043D0 E3E0 C020 0021          00000020   6294+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000043D6 4720 B020               00000020   6295+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000043DA                                    6296+@PER_1936 ds   0h                                                       01-DCCPR
000043DA EBDE 2080 0024          00000080   6297+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000043E0 E3C0 2090 0024          00000090   6298+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000043E6 B904 00D2                          6299+         lgr   13,2                set real frame pointer               01-DCCPR
000043EA B904 00CF                          6300+         lgr   12,15               set base reg                         01-DCCPR
                        000043B0            6301+         using @REGION_1936_1,12                                        01-DCCPR
000043EE B904 0051                          6302          LGR   5,1         ; ptr to parm area
                                            6303 * ******* End of Prologue
                                            6304 * *
000043F2 E330 5000 0004          00000000   6305          LG    3,0(0,5)    ; mcgrp
000043F8 E340 5018 0004          00000018   6306          LG    4,24(0,5)   ; MemberId
                                            6307 * ***           rd_kafka_mock_cgrp_member_t *member;
                                            6308 * ***           rd_kafka_resp_err_t err;
                                            6309 * ***
                                            6310 * ***           err = rd_kafka_mock_cgrp_check_state(mcgrp, ((void *)0\
                                            6311 * ), resp, -1);
000043FE E330 D0C8 0024          000000C8   6312          STG   3,200(0,13)
00004404 D707 D0D0 D0D0 000000D0 000000D0   6313          XC    208(8,13),208(13)
0000440A E3F0 5010 0004          00000010   6314          LG    15,16(0,5)  ; resp
00004410 E3F0 D0D8 0024          000000D8   6315          STG   15,216(0,13)
00004416 E548 D0E0 FFFF          000000E0   6316          MVGHI 224(13),-1
0000441C 4110 D0C8               000000C8   6317          LA    1,200(0,13)
00004420 E3F0 C090 0004          00004440   6318          LG    15,@lit_1936_235 ; rd_kafka_mock_cgrp_check_state
00004426                                    6319 @@gen_label329 DS    0H
00004426 05EF                               6320          BALR  14,15
00004428                                    6321 @@gen_label330 DS    0H
                                            6322 * ***           if (err)
                                                                                                                           Page  129 
  Active Usings: @REGION_1936_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004428 12FF                               6323          LTR   15,15
0000442A 4780 C0F0               000044A0   6324          BZ    @L777
                                            6325 * ***                   return err;
0000442E B914 00FF                          6326          LGFR  15,15
00004432 47F0 C2F6               000046A6   6327          B     @ret_lab_1936
00004438                                    6328          DS    0D
00004438 000000E8                           6329 @FRAMESIZE_1936 DC F'232'
0000443C 00000000
00004440 0000000000002278                   6330 @lit_1936_235 DC AD(rd_kafka_mock_cgrp_check_state)
00004448 0000000000004250                   6331 @lit_1936_236 DC AD(rd_kafka_mock_cgrp_member_find)
00004450 0000000000000380                   6332 @lit_1936_237 DC AD(rd_calloc)
00004458 0000000000000000                   6333 @lit_1936_240 DC AD(snprintf)
00004460 000000000000539A                   6334 @lit_1936_239 DC AD(@strings@)
00004468 0000000000000760                   6335 @lit_1936_241 DC AD(rd_strdup)
00004470 00000000000008C8                   6336 @lit_1936_243 DC AD(rd_strndup)
00004478 0000000000003840                   6337 @lit_1936_246 DC AD(rd_kafka_mock_cgrp_rebalance)
00004480 0000000000003018                   6338 @lit_1936_247 DC AD(rd_kafka_mock_cgrp_protos_destroy)
00004488 0000000000000000                   6339 @lit_1936_250 DC AD(__assert)
00004490 0000000000005128                   6340 @lit_1936_248 DC AD(@DATA)
00004498 00000000000020B8                   6341 @lit_1936_251 DC AD(rd_kafka_mock_cgrp_member_active)
000044A0                                    6342 @L777    DS    0H
                                            6343 * ***
                                            6344 * ***
                                            6345 * ***           member = rd_kafka_mock_cgrp_member_find(mcgrp, MemberI\
                                            6346 * d);
000044A0 EB34 D0C8 0024          000000C8   6347          STMG  3,4,200(13)
000044A6 4110 D0C8               000000C8   6348          LA    1,200(0,13)
000044AA E3F0 C098 0004          00004448   6349          LG    15,@lit_1936_236 ; rd_kafka_mock_cgrp_member_find
000044B0                                    6350 @@gen_label332 DS    0H
000044B0 05EF                               6351          BALR  14,15
000044B2                                    6352 @@gen_label333 DS    0H
000044B2 B902 002F                          6353          LTGR  2,15        ; member
                                            6354 * ***           if (!member) {
000044B6 4770 C206               000045B6   6355          BNZ   @L778
                                            6356 * ***
                                            6357 * ***                   member = rd_calloc(1, sizeof(*member));
000044BA E548 D0C8 0001          000000C8   6358          MVGHI 200(13),1
000044C0 E548 D0D0 0050          000000D0   6359          MVGHI 208(13),80
000044C6 4110 D0C8               000000C8   6360          LA    1,200(0,13)
000044CA E3F0 C0A0 0004          00004450   6361          LG    15,@lit_1936_237 ; rd_calloc
000044D0                                    6362 @@gen_label335 DS    0H
000044D0 05EF                               6363          BALR  14,15
000044D2                                    6364 @@gen_label336 DS    0H
000044D2 B904 002F                          6365          LGR   2,15        ; member
                                            6366 * ***
                                            6367 * ***                   if (!(((MemberId)->len) == -1 ? 0 : ((MemberId\
                                            6368 * )->len))) {
000044D6 E55C 4000 FFFF          00000000   6369          CHSI  0(4),-1
000044DC 4770 C138               000044E8   6370          BNE   @L779
000044E0 A7F8 0000               00000000   6371          LHI   15,0        ; 0
000044E4 47F0 C13C               000044EC   6372          B     @L780
000044E8                                    6373 @L779    DS    0H
                                                                                                                           Page  130 
  Active Usings: @REGION_1936_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000044E8 58F0 4000               00000000   6374          L     15,0(0,4)   ; MemberId
000044EC                                    6375 @L780    DS    0H
000044EC 12FF                               6376          LTR   15,15
000044EE 4770 C194               00004544   6377          BNZ   @L781
                                            6378 * ***
                                            6379 * ***                           char memberid[32];
                                            6380 * ***                           snprintf(memberid, sizeof(memberid), "\
                                            6381 * %p", member);
000044F2 41F0 D0A8               000000A8   6382          LA    15,168(0,13)
000044F6 E3F0 D0C8 0024          000000C8   6383          STG   15,200(0,13)
000044FC E548 D0D0 0020          000000D0   6384          MVGHI 208(13),32
00004502 E3F0 C0B0 0004          00004460   6385          LG    15,@lit_1936_239
00004508 41F0 F3E2               000003E2   6386          LA    15,994(0,15)
0000450C E3F0 D0D8 0024          000000D8   6387          STG   15,216(0,13)
00004512 E320 D0E0 0024          000000E0   6388          STG   2,224(0,13)
00004518 4110 D0C8               000000C8   6389          LA    1,200(0,13)
0000451C E3F0 C0A8 0004          00004458   6390          LG    15,@lit_1936_240 ; snprintf
00004522                                    6391 @@gen_label339 DS    0H
00004522 05EF                               6392          BALR  14,15
00004524                                    6393 @@gen_label340 DS    0H
                                            6394 * ***                           member->id = rd_strdup(memberid);
00004524 41F0 D0A8               000000A8   6395          LA    15,168(0,13)
00004528 E3F0 D0C8 0024          000000C8   6396          STG   15,200(0,13)
0000452E 4110 D0C8               000000C8   6397          LA    1,200(0,13)
00004532 E3F0 C0B8 0004          00004468   6398          LG    15,@lit_1936_241 ; rd_strdup
00004538                                    6399 @@gen_label341 DS    0H
00004538 05EF                               6400          BALR  14,15
0000453A                                    6401 @@gen_label342 DS    0H
0000453A E3F0 2010 0024          00000010   6402          STG   15,16(0,2)
                                            6403 * ***                   } else
00004540 47F0 C1D2               00004582   6404          B     @L785
00004544                                    6405 @L781    DS    0H
                                            6406 * ***                           member->id = rd_strndup((MemberId)->st\
                                            6407 * r, (((MemberId)->len) == -1 ? 0 : ((MemberId)->len)));
00004544 E55C 4000 FFFF          00000000   6408          CHSI  0(4),-1
0000454A 4770 C1A6               00004556   6409          BNE   @L783
0000454E A7F8 0000               00000000   6410          LHI   15,0        ; 0
00004552 47F0 C1AA               0000455A   6411          B     @L784
00004556                                    6412 @L783    DS    0H
00004556 58F0 4000               00000000   6413          L     15,0(0,4)   ; MemberId
0000455A                                    6414 @L784    DS    0H
0000455A B914 00FF                          6415          LGFR  15,15
0000455E E310 4008 0004          00000008   6416          LG    1,8(0,4)
00004564 E310 D0C8 0024          000000C8   6417          STG   1,200(0,13)
0000456A E3F0 D0D0 0024          000000D0   6418          STG   15,208(0,13)
00004570 4110 D0C8               000000C8   6419          LA    1,200(0,13)
00004574 E3F0 C0C0 0004          00004470   6420          LG    15,@lit_1936_243 ; rd_strndup
0000457A                                    6421 @@gen_label344 DS    0H
0000457A 05EF                               6422          BALR  14,15
0000457C                                    6423 @@gen_label345 DS    0H
0000457C E3F0 2010 0024          00000010   6424          STG   15,16(0,2)
00004582                                    6425 @L782    DS    0H
                                                                                                                           Page  131 
  Active Usings: @REGION_1936_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6426 * ***
                                            6427 * ***                   do {  (member)->link .tqe_next = (((void *)0))\
                                            6428 * ; (member)->link .tqe_prev = (&mcgrp->members)->tqh_last; *(&mcgrp->\
                                            6429 * members)->tqh_last = (member); (&mcgrp->members)->tqh_last = &(membe\
                                            6430 * r)->link .tqe_next; } while ( 0);
00004582                                    6431 @L785    DS    0H
00004582 A7F9 0000               00000000   6432          LGHI  15,0        ; 0
00004586 E3F0 2000 0024          00000000   6433          STG   15,0(0,2)   ; member
0000458C E3F0 30C0 0004          000000C0   6434          LG    15,192(0,3) ; offset of tqh_last in 0000159
00004592 E3F0 2008 0024          00000008   6435          STG   15,8(0,2)   ; offset of tqe_prev in 0000156
00004598 E3F0 30C0 0004          000000C0   6436          LG    15,192(0,3) ; offset of tqh_last in 0000159
0000459E E320 F000 0024          00000000   6437          STG   2,0(0,15)
000045A4 E320 30C0 0024          000000C0   6438          STG   2,192(0,3)  ; offset of tqh_last in 0000159
                                            6439 * ***                   mcgrp->member_cnt++;
000045AA 58F0 30C8               000000C8   6440          L     15,200(0,3)
000045AE A7FA 0001               00000001   6441          AHI   15,1
000045B2 50F0 30C8               000000C8   6442          ST    15,200(0,3)
                                            6443 * ***           }
000045B6                                    6444 @L778    DS    0H
                                            6445 * ***
                                            6446 * ***           if (mcgrp->state != RD_KAFKA_MOCK_CGRP_STATE_JOINING)
000045B6 E55C 3040 0001          00000040   6447          CHSI  64(3),1
000045BC 4780 C232               000045E2   6448          BE    @L788
                                            6449 * ***                   rd_kafka_mock_cgrp_rebalance(mcgrp, "member jo\
                                            6450 * in");
000045C0 E330 D0C8 0024          000000C8   6451          STG   3,200(0,13)
000045C6 E3F0 C0B0 0004          00004460   6452          LG    15,@lit_1936_239
000045CC 41F0 F3E6               000003E6   6453          LA    15,998(0,15)
000045D0 E3F0 D0D0 0024          000000D0   6454          STG   15,208(0,13)
000045D6 4110 D0C8               000000C8   6455          LA    1,200(0,13)
000045DA E3F0 C0C8 0004          00004478   6456          LG    15,@lit_1936_246 ; rd_kafka_mock_cgrp_rebalance
000045E0                                    6457 @@gen_label347 DS    0H
000045E0 05EF                               6458          BALR  14,15
000045E2                                    6459 @@gen_label348 DS    0H
000045E2                                    6460 @L788    DS    0H
                                            6461 * ***
                                            6462 * ***           mcgrp->session_timeout_ms = session_timeout_ms;
000045E2 58F0 503C               0000003C   6463          L     15,60(0,5)  ; session_timeout_ms
000045E6 50F0 303C               0000003C   6464          ST    15,60(0,3)  ; offset of session_timeout_ms in rd_kafka_m*
                                                                ock_cgrp_s
                                            6465 * ***
                                            6466 * ***           if (member->protos)
000045EA E3F0 2028 0002          00000028   6467          LTG   15,40(0,2)  ; offset of protos in rd_kafka_mock_cgrp_mem*
                                                                ber_s
000045F0 4780 C268               00004618   6468          BZ    @L789
                                            6469 * ***                   rd_kafka_mock_cgrp_protos_destroy(member->prot\
                                            6470 * os,
                                            6471 * ***                                                     member->prot\
                                            6472 * o_cnt);
000045F4 E3F0 2028 0004          00000028   6473          LG    15,40(0,2)
000045FA E3F0 D0C8 0024          000000C8   6474          STG   15,200(0,13)
00004600 E3F0 2030 0014          00000030   6475          LGF   15,48(0,2)
                                                                                                                           Page  132 
  Active Usings: @REGION_1936_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004606 E3F0 D0D0 0024          000000D0   6476          STG   15,208(0,13)
0000460C 4110 D0C8               000000C8   6477          LA    1,200(0,13)
00004610 E3F0 C0D0 0004          00004480   6478          LG    15,@lit_1936_247 ; rd_kafka_mock_cgrp_protos_destroy
00004616                                    6479 @@gen_label350 DS    0H
00004616 05EF                               6480          BALR  14,15
00004618                                    6481 @@gen_label351 DS    0H
00004618                                    6482 @L789    DS    0H
                                            6483 * ***           member->protos = protos;
00004618 E3F0 5028 0004          00000028   6484          LG    15,40(0,5)  ; protos
0000461E E3F0 2028 0024          00000028   6485          STG   15,40(0,2)  ; offset of protos in rd_kafka_mock_cgrp_mem*
                                                                ber_s
                                            6486 * ***           member->proto_cnt = proto_cnt;
00004624 58F0 5034               00000034   6487          L     15,52(0,5)  ; proto_cnt
00004628 50F0 2030               00000030   6488          ST    15,48(0,2)  ; offset of proto_cnt in rd_kafka_mock_cgrp_*
                                                                member_s
                                            6489 * ***
                                            6490 * ***           ((!member->resp) ? (void)0 : __assert(__func__, "C:\\a\
                                            6491 * sgkafka\\librdkafka\\src\\rdkafka_mock_cgrp.c", 581, "!member->resp"\
                                            6492 * ));
0000462C E3F0 2040 0002          00000040   6493          LTG   15,64(0,2)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
00004632 4780 C2C2               00004672   6494          BZ    @L791
00004636                                    6495 @L790    DS    0H
00004636 E3F0 C0E0 0004          00004490   6496          LG    15,@lit_1936_248
0000463C 41F0 F254               00000254   6497          LA    15,596(0,15)
00004640 E3F0 D0C8 0024          000000C8   6498          STG   15,200(0,13)
00004646 E3F0 C0B0 0004          00004460   6499          LG    15,@lit_1936_239
0000464C 4110 F0C4               000000C4   6500          LA    1,196(0,15)
00004650 E310 D0D0 0024          000000D0   6501          STG   1,208(0,13)
00004656 E548 D0D8 0245          000000D8   6502          MVGHI 216(13),581
0000465C 41F0 F186               00000186   6503          LA    15,390(0,15)
00004660 E3F0 D0E0 0024          000000E0   6504          STG   15,224(0,13)
00004666 4110 D0C8               000000C8   6505          LA    1,200(0,13)
0000466A E3F0 C0D8 0004          00004488   6506          LG    15,@lit_1936_250 ; __assert
00004670                                    6507 @@gen_label353 DS    0H
00004670 05EF                               6508          BALR  14,15
00004672                                    6509 @@gen_label354 DS    0H
00004672                                    6510 @L791    DS    0H
                                            6511 * ***           member->resp = resp;
00004672 E3F0 5010 0004          00000010   6512          LG    15,16(0,5)  ; resp
00004678 E3F0 2040 0024          00000040   6513          STG   15,64(0,2)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            6514 * ***           member->conn = mconn;
0000467E E3F0 5008 0004          00000008   6515          LG    15,8(0,5)   ; mconn
00004684 E3F0 2048 0024          00000048   6516          STG   15,72(0,2)  ; offset of conn in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            6517 * ***           rd_kafka_mock_cgrp_member_active(mcgrp, member);
0000468A E330 D0C8 0024          000000C8   6518          STG   3,200(0,13)
00004690 E320 D0D0 0024          000000D0   6519          STG   2,208(0,13)
00004696 4110 D0C8               000000C8   6520          LA    1,200(0,13)
0000469A E3F0 C0E8 0004          00004498   6521          LG    15,@lit_1936_251 ; rd_kafka_mock_cgrp_member_active
000046A0                                    6522 @@gen_label355 DS    0H
                                                                                                                           Page  133 
  Active Usings: @REGION_1936_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000046A0 05EF                               6523          BALR  14,15
000046A2                                    6524 @@gen_label356 DS    0H
                                            6525 * ***
                                            6526 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
000046A2 A7F9 0000               00000000   6527          LGHI  15,0        ; 0
                                            6528 * ***   }
000046A6                                    6529 @ret_lab_1936 DS 0H
                                            6530 * * **** Start of Epilogue
                                            6531          DCCEPIL
000046A6                                    6532+         ds 0h                                                          01-DCCEP
                                            6533+* Epilog
000046A6 D707 D088 D088 00000088 00000088   6534+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000046AC E3D0 D080 0004          00000080   6535+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000046B2 E3C0 D090 0004          00000090   6536+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000046B8 E3B0 C018 0004          00000018   6537+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000046BE E3C0 B010 0021          00000010   6538+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000046C4 E3E0 D008 0004          00000008   6539+         lg  14,8(0,13)          load up return address                 01-DCCEP
000046CA EB1C D020 0004          00000020   6540+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000046D0 078E                               6541+         bcr 8,14                if same dsab, just return              01-DCCEP
000046D2 E3F0 D010 0024          00000010   6542+         stg 15,16(0,13)         save return code                       01-DCCEP
000046D8 E300 D018 0024          00000018   6543+         stg 0,24(0,13)          save more return code                  01-DCCEP
000046DE E3F0 D090 0004          00000090   6544+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000046E4 E3F0 F018 0004          00000018   6545+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000046EA 47F0 F040               00000040   6546+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6547+* End of Epilog
                                            6548 * * **** End of Epilogue
                                            6549          DROP  12
                                            6550 *
                                            6551 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_member_add"
                                            6552 *      (FUNCTION #1936)
                                            6553 *
00000000                00000000 000000C8   6554 @AUTO#rd_kafka_mock_cgrp_member_add DSECT
00000000                                    6555          DS    XL168
000000A8                                    6556 rd_kafka_mock_cgrp_member_add#memberid#2 DS 32XL1 ; memberid
000000C8                000000C8 000000A8   6557          ORG   @AUTO#rd_kafka_mock_cgrp_member_add+168
000000A8                                    6558 rd_kafka_mock_cgrp_member_add#err#0 DS 1F ; err
                                            6559 *
000046EE                00000000 00005122   6560 @CODE    CSECT
                                            6561 *
                                            6562 *
                                            6563 *
                                            6564 * ....... start of rd_kafka_mock_cgrp_session_tmr_cb
000046EE                                    6565 @LNAME1952 DS  0H
000046EE 00000021                           6566          DC    X'00000021'
000046F2 99846D9281869281                   6567          DC    C'rd_kafka_mock_cgrp_session_tmr_c'
00004712 82                                 6568          DC    C'b'
00004713 00                                 6569          DC    X'00'
                                            6570 rd_kafka_mock_cgrp_session_tmr_cb DCCPRLG CINDEX=1952,BASER=12,FRAME=24*
                                                                8,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1952
                                            6571          macro
                                            6572          dccextrn &m
                                            6573          gblc    &$dccext(1000)
                                                                                                                           Page  134 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6574          gbla    &$dccexti
                                            6575          lcla    &i
                                            6576 &$dccext(&$dccexti+1) setc    '&m'
                                            6577 &i       seta    1
                                            6578 .loop    aif    (&i gt &$dccexti).around
                                            6579          aif    ('&$dccext(&i)' eq '&m').getout
                                            6580 &i       seta    &i+1
                                            6581          ago     .loop
                                            6582 .around  anop
                                            6583 &$dccexti seta &$dccexti+1
                                            6584          extrn  &m
                                            6585 .getout  anop
                                            6586          mend
00004718                                    6587+$eye0121    ds    0d                                                    02-DCCCA
00004718 C4C3C3                             6588+         dc cl3'DCC'                                                    02-DCCCA
0000471B 01                                 6589+         dc xl1'01' format one                                          02-DCCCA
0000471C 00000000                           6590+         dc a(0)                                                        02-DCCCA
00004720 000000000000478A                   6591+         dc ad(@PER_1952)                                               02-DCCCA
00004728 00000000000000F8                   6592+         dc ad(248)                                                     02-DCCCA
00004730 0000000000000000                   6593+         dc ad(0)                                                       02-DCCCA
00004738 0000000000001000                   6594+         dc ad(4096)                                                    02-DCCCA
00004740 20                                 6595+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004741 03                                 6596+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004742 03                                 6597+         dc al1(3)                                                      02-DCCCA
00004743 08                                 6598+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004744 00                                 6599+         dc bl.8'00000000'                                              02-DCCCA
00004745 000000                             6600+         dc al3(0)                                                      02-DCCCA
00004748 00000000000046EE                   6601+         dc ad(@LNAME1952)                                              02-DCCCA
00004750                                    6602+         ds 0d                                                          02-DCCCA
00004750 0000000000004718                   6603+         dc ad($eye0121)                                                02-DCCCA
00004758 0000000000000000                   6604+         dc ad(0)                                                       02-DCCCA
00004760                                    6605+         ds    0d                                                       01-DCCPR
00004760                                    6606+rd_kafka_mock_cgrp_session_tmr_cb ds 0d                                 01-DCCPR
00004760                                    6607+@REGION_1952_1 ds 0h                                                    01-DCCPR
00004760 EBEC D008 0024          00000008   6608+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004766 E3E0 D088 0004          00000088   6609+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000476C E3C0 D090 0004          00000090   6610+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004772 B904 002E                          6611+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004776 E3B0 C018 0004          00000018   6612+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000477C A7EB 00F8               000000F8   6613+         aghi  14,248              increase by frame size               01-DCCPR
00004780 E3E0 C020 0021          00000020   6614+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004786 4720 B020               00000020   6615+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000478A                                    6616+@PER_1952 ds   0h                                                       01-DCCPR
0000478A EBDE 2080 0024          00000080   6617+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004790 E3C0 2090 0024          00000090   6618+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004796 B904 00D2                          6619+         lgr   13,2                set real frame pointer               01-DCCPR
0000479A B904 00CF                          6620+         lgr   12,15               set base reg                         01-DCCPR
                        00004760            6621+         using @REGION_1952_1,12                                        01-DCCPR
                                            6622 * ******* End of Prologue
                                            6623 * *
                                            6624 * ***           rd_kafka_mock_cgrp_t *mcgrp = arg;
0000479E E340 1008 0004          00000008   6625          LG    4,8(0,1)    ; arg
                                                                                                                           Page  135 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6626 * ***           rd_kafka_mock_cgrp_member_t *member, *tmp;
                                            6627 * ***           rd_ts_t now = rd_clock();
000047A4 E3F0 C068 0004          000047C8   6628          LG    15,@lit_1952_254 ; rd_clock
000047AA                                    6629 @@gen_label357 DS    0H
000047AA 05EF                               6630          BALR  14,15
000047AC                                    6631 @@gen_label358 DS    0H
000047AC B904 006F                          6632          LGR   6,15
                                            6633 * ***           int timeout_cnt = 0;
000047B0 A738 0000               00000000   6634          LHI   3,0         ; 0
                                            6635 * ***
                                            6636 * ***           for ((member) = ((&mcgrp->members)->tqh_first); (membe\
                                            6637 * r) != (((void *)0)) && ((tmp) = ((member)->link .tqe_next), 1); (mem\
                                            6638 * ber) = (tmp)) {
000047B4 E320 40B8 0004          000000B8   6639          LG    2,184(0,4)  ; offset of members in rd_kafka_mock_cgrp_s
000047BA 47F0 C160               000048C0   6640          B     @L793
000047C0                                    6641          DS    0D
000047C0 000000F8                           6642 @FRAMESIZE_1952 DC F'248'
000047C4 00000000
000047C8 0000000000000C08                   6643 @lit_1952_254 DC AD(rd_clock)
000047D0 0000000000000000                   6644 @lit_1952_258 DC AD(rd_kafka_log0)
000047D8 000000000000539A                   6645 @lit_1952_257 DC AD(@strings@)
000047E0 0000000000003FA8                   6646 @lit_1952_259 DC AD(rd_kafka_mock_cgrp_member_destroy)
000047E8 0000000000003840                   6647 @lit_1952_261 DC AD(rd_kafka_mock_cgrp_rebalance)
000047F0                                    6648 @L792    DS    0H
                                            6649 * ***                   if (member->ts_last_activity +
                                            6650 * ***                       (mcgrp->session_timeout_ms * 1000) > now)
000047F0 E3F0 2020 0004          00000020   6651          LG    15,32(0,2)  ; offset of ts_last_activity in rd_kafka_moc*
                                                                k_cgrp_member_s
000047F6 5810 403C               0000003C   6652          L     1,60(0,4)   ; offset of session_timeout_ms in rd_kafka_m*
                                                                ock_cgrp_s
000047FA A71C 03E8               000003E8   6653          MHI   1,1000
000047FE B918 00F1                          6654          AGFR  15,1
00004802 B920 00F6                          6655          CGR   15,6
00004806 47D0 C0AE               0000480E   6656          BNH   @L798
                                            6657 * ***                           continue;
0000480A 47F0 C15C               000048BC   6658          B     @L796
                                            6659 * ***
                                            6660 * ***                   do { if ((((mcgrp->cluster->rk)->rk_conf.debug\
                                            6661 *  & (0x10000)))) rd_kafka_log0(&mcgrp->cluster->rk->rk_conf,mcgrp->cl\
                                            6662 * uster->rk,((void *)0), 7,(0x10000), "MOCK","Member %s session timed \
                                            6663 * out for group %s", member->id, mcgrp->id); } while (0);
0000480E                                    6664 @L798    DS    0H
0000480E E3F0 4010 0004          00000010   6665          LG    15,16(0,4)  ; offset of cluster in rd_kafka_mock_cgrp_s
00004814 E3F0 F020 0004          00000020   6666          LG    15,32(0,15) ; offset of rk in rd_kafka_mock_cluster_s
0000481A 9101 F321      00000321 00000001   6667          TM    801(15),1
0000481E 4780 C140               000048A0   6668          BZ    @L801
00004822 E3F0 4010 0004          00000010   6669          LG    15,16(0,4)  ; offset of cluster in rd_kafka_mock_cgrp_s
00004828 E3F0 F020 0004          00000020   6670          LG    15,32(0,15) ; offset of rk in rd_kafka_mock_cluster_s
0000482E 41F0 F210               00000210   6671          LA    15,528(0,15)
00004832 E3F0 D0B0 0024          000000B0   6672          STG   15,176(0,13)
00004838 E3F0 4010 0004          00000010   6673          LG    15,16(0,4)  ; offset of cluster in rd_kafka_mock_cgrp_s
0000483E E3F0 F020 0004          00000020   6674          LG    15,32(0,15)
                                                                                                                           Page  136 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004844 E3F0 D0B8 0024          000000B8   6675          STG   15,184(0,13)
0000484A D707 D0C0 D0C0 000000C0 000000C0   6676          XC    192(8,13),192(13)
00004850 E548 D0C8 0007          000000C8   6677          MVGHI 200(13),7
00004856 C0FF 0001 0000                     6678          LLILF 15,X'00010000' ; 65536
0000485C E3F0 D0D0 0024          000000D0   6679          STG   15,208(0,13)
00004862 E3F0 C078 0004          000047D8   6680          LG    15,@lit_1952_257
00004868 4110 F048               00000048   6681          LA    1,72(0,15)
0000486C E310 D0D8 0024          000000D8   6682          STG   1,216(0,13)
00004872 41F0 F3F2               000003F2   6683          LA    15,1010(0,15)
00004876 E3F0 D0E0 0024          000000E0   6684          STG   15,224(0,13)
0000487C E3F0 2010 0004          00000010   6685          LG    15,16(0,2)
00004882 E3F0 D0E8 0024          000000E8   6686          STG   15,232(0,13)
00004888 E3F0 4020 0004          00000020   6687          LG    15,32(0,4)
0000488E E3F0 D0F0 0024          000000F0   6688          STG   15,240(0,13)
00004894 4110 D0B0               000000B0   6689          LA    1,176(0,13)
00004898 E3F0 C070 0004          000047D0   6690          LG    15,@lit_1952_258 ; rd_kafka_log0
0000489E                                    6691 @@gen_label361 DS    0H
0000489E 05EF                               6692          BALR  14,15
000048A0                                    6693 @@gen_label362 DS    0H
000048A0                                    6694 @L801    DS    0H
                                            6695 * ***
                                            6696 * ***
                                            6697 * ***
                                            6698 * ***                   rd_kafka_mock_cgrp_member_destroy(mcgrp, membe\
                                            6699 * r);
000048A0 E340 D0B0 0024          000000B0   6700          STG   4,176(0,13)
000048A6 E320 D0B8 0024          000000B8   6701          STG   2,184(0,13)
000048AC 4110 D0B0               000000B0   6702          LA    1,176(0,13)
000048B0 E3F0 C080 0004          000047E0   6703          LG    15,@lit_1952_259 ; rd_kafka_mock_cgrp_member_destroy
000048B6                                    6704 @@gen_label363 DS    0H
000048B6 05EF                               6705          BALR  14,15
000048B8                                    6706 @@gen_label364 DS    0H
                                            6707 * ***                   timeout_cnt++;
000048B8 A73A 0001               00000001   6708          AHI   3,1
                                            6709 * ***           }
000048BC                                    6710 @L796    DS    0H
000048BC B904 0025                          6711          LGR   2,5         ; member
000048C0                                    6712 @L793    DS    0H
000048C0 B902 00F2                          6713          LTGR  15,2
000048C4 4780 C172               000048D2   6714          BE    @L794
000048C8 E350 2000 0004          00000000   6715          LG    5,0(0,2)    ; member
000048CE 47F0 C090               000047F0   6716          B     @L792
000048D2                                    6717 @L794    DS    0H
                                            6718 * ***
                                            6719 * ***           if (timeout_cnt)
000048D2 1233                               6720          LTR   3,3
000048D4 4780 C19A               000048FA   6721          BZ    @L802
                                            6722 * ***                   rd_kafka_mock_cgrp_rebalance(mcgrp, "member ti\
                                            6723 * meout");
000048D8 E340 D0B0 0024          000000B0   6724          STG   4,176(0,13)
000048DE E3F0 C078 0004          000047D8   6725          LG    15,@lit_1952_257
000048E4 41F0 F41C               0000041C   6726          LA    15,1052(0,15)
                                                                                                                           Page  137 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000048E8 E3F0 D0B8 0024          000000B8   6727          STG   15,184(0,13)
000048EE 4110 D0B0               000000B0   6728          LA    1,176(0,13)
000048F2 E3F0 C088 0004          000047E8   6729          LG    15,@lit_1952_261 ; rd_kafka_mock_cgrp_rebalance
000048F8                                    6730 @@gen_label367 DS    0H
000048F8 05EF                               6731          BALR  14,15
000048FA                                    6732 @@gen_label368 DS    0H
000048FA                                    6733 @L802    DS    0H
                                            6734 * ***   }
000048FA                                    6735 @ret_lab_1952 DS 0H
                                            6736 * * **** Start of Epilogue
                                            6737          DCCEPIL
000048FA                                    6738+         ds 0h                                                          01-DCCEP
                                            6739+* Epilog
000048FA D707 D088 D088 00000088 00000088   6740+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004900 E3D0 D080 0004          00000080   6741+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004906 E3C0 D090 0004          00000090   6742+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000490C E3B0 C018 0004          00000018   6743+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004912 E3C0 B010 0021          00000010   6744+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004918 E3E0 D008 0004          00000008   6745+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000491E EB1C D020 0004          00000020   6746+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004924 078E                               6747+         bcr 8,14                if same dsab, just return              01-DCCEP
00004926 E3F0 D010 0024          00000010   6748+         stg 15,16(0,13)         save return code                       01-DCCEP
0000492C E300 D018 0024          00000018   6749+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004932 E3F0 D090 0004          00000090   6750+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004938 E3F0 F018 0004          00000018   6751+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000493E 47F0 F040               00000040   6752+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6753+* End of Epilog
                                            6754 * * **** End of Epilogue
                                            6755          DROP  12
                                            6756 *
                                            6757 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_session_tmr_c
                                            6758 *           b"
                                            6759 *      (FUNCTION #1952)
                                            6760 *
00000000                00000000 000000B0   6761 @AUTO#rd_kafka_mock_cgrp_session_tmr_cb DSECT
00000000                                    6762          DS    XL168
000000A8                                    6763 rd_kafka_mock_cgrp_session_tmr_cb#timeout_cnt#0 DS 1F ; timeout_cnt
000000AC                000000AC 000000A8   6764          ORG   @AUTO#rd_kafka_mock_cgrp_session_tmr_cb+168
000000A8                                    6765 rd_kafka_mock_cgrp_session_tmr_cb#now#0 DS 8XL1 ; now
                                            6766 *
00004942                00000000 00005122   6767 @CODE    CSECT
                                            6768 *
                                            6769 *
                                            6770 *
                                            6771 * ....... start of rd_kafka_mock_cgrp_destroy
                                            6772 rd_kafka_mock_cgrp_destroy ALIAS X'99846D92818692816D949683926D83879997*
                                                                6D8485A2A39996A8'
00004942                                    6773 @LNAME1939 DS  0H
00004942 0000001A                           6774          DC    X'0000001A'
00004946 99846D9281869281                   6775          DC    C'rd_kafka_mock_cgrp_destroy'
00004960 00                                 6776          DC    X'00'
                                            6777 rd_kafka_mock_cgrp_destroy DCCPRLG CINDEX=1939,BASER=12,FRAME=200,ENTRY*
                                                                                                                           Page  138 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1939
                                            6778          macro
                                            6779          dccextrn &m
                                            6780          gblc    &$dccext(1000)
                                            6781          gbla    &$dccexti
                                            6782          lcla    &i
                                            6783 &$dccext(&$dccexti+1) setc    '&m'
                                            6784 &i       seta    1
                                            6785 .loop    aif    (&i gt &$dccexti).around
                                            6786          aif    ('&$dccext(&i)' eq '&m').getout
                                            6787 &i       seta    &i+1
                                            6788          ago     .loop
                                            6789 .around  anop
                                            6790 &$dccexti seta &$dccexti+1
                                            6791          extrn  &m
                                            6792 .getout  anop
                                            6793          mend
00004968                                    6794+$eye0124    ds    0d                                                    02-DCCCA
00004968 C4C3C3                             6795+         dc cl3'DCC'                                                    02-DCCCA
0000496B 01                                 6796+         dc xl1'01' format one                                          02-DCCCA
0000496C 00000000                           6797+         dc a(0)                                                        02-DCCCA
00004970 00000000000049DA                   6798+         dc ad(@PER_1939)                                               02-DCCCA
00004978 00000000000000C8                   6799+         dc ad(200)                                                     02-DCCCA
00004980 0000000000000000                   6800+         dc ad(0)                                                       02-DCCCA
00004988 0000000000001000                   6801+         dc ad(4096)                                                    02-DCCCA
00004990 20                                 6802+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004991 03                                 6803+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004992 03                                 6804+         dc al1(3)                                                      02-DCCCA
00004993 08                                 6805+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004994 00                                 6806+         dc bl.8'00000000'                                              02-DCCCA
00004995 000000                             6807+         dc al3(0)                                                      02-DCCCA
00004998 0000000000004942                   6808+         dc ad(@LNAME1939)                                              02-DCCCA
000049A0                                    6809+         ds 0d                                                          02-DCCCA
000049A0 0000000000004968                   6810+         dc ad($eye0124)                                                02-DCCCA
000049A8 0000000000000000                   6811+         dc ad(0)                                                       02-DCCCA
000049B0                                    6812+         ds    0d                                                       01-DCCPR
                                            6813+         entry rd_kafka_mock_cgrp_destroy                               01-DCCPR
000049B0                                    6814+rd_kafka_mock_cgrp_destroy ds 0d                                        01-DCCPR
000049B0                                    6815+@REGION_1939_1 ds 0h                                                    01-DCCPR
000049B0 EBEC D008 0024          00000008   6816+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000049B6 E3E0 D088 0004          00000088   6817+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000049BC E3C0 D090 0004          00000090   6818+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000049C2 B904 002E                          6819+         lgr   2,14                copy addr of our savearea            01-DCCPR
000049C6 E3B0 C018 0004          00000018   6820+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000049CC A7EB 00C8               000000C8   6821+         aghi  14,200              increase by frame size               01-DCCPR
000049D0 E3E0 C020 0021          00000020   6822+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000049D6 4720 B020               00000020   6823+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000049DA                                    6824+@PER_1939 ds   0h                                                       01-DCCPR
000049DA EBDE 2080 0024          00000080   6825+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000049E0 E3C0 2090 0024          00000090   6826+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000049E6 B904 00D2                          6827+         lgr   13,2                set real frame pointer               01-DCCPR
000049EA B904 00CF                          6828+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page  139 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                        000049B0            6829+         using @REGION_1939_1,12                                        01-DCCPR
                                            6830 * ******* End of Prologue
                                            6831 * *
000049EE E320 1000 0004          00000000   6832          LG    2,0(0,1)    ; mcgrp
                                            6833 * ***           rd_kafka_mock_cgrp_member_t *member;
                                            6834 * ***
                                            6835 * ***           do {   if (((mcgrp)->link .tqe_next) != (((void *)0)))\
                                            6836 *  (mcgrp)->link .tqe_next->link .tqe_prev = (mcgrp)->link .tqe_prev; \
                                            6837 * else (&mcgrp->cluster->cgrps)->tqh_last = (mcgrp)->link .tqe_prev; *\
                                            6838 * (mcgrp)->link .tqe_prev = (mcgrp)->link .tqe_next; ; } while ( 0);
000049F4                                    6839 @L803    DS    0H
000049F4 E3F0 2000 0002          00000000   6840          LTG   15,0(0,2)   ; mcgrp
000049FA 4780 C088               00004A38   6841          BE    @L806
000049FE E3F0 2000 0004          00000000   6842          LG    15,0(0,2)   ; mcgrp
00004A04 E310 2008 0004          00000008   6843          LG    1,8(0,2)    ; offset of tqe_prev in 0000157
00004A0A E310 F008 0024          00000008   6844          STG   1,8(0,15)   ; offset of tqe_prev in 0000157
00004A10 47F0 C09A               00004A4A   6845          B     @L807
00004A18                                    6846          DS    0D
00004A18 000000C8                           6847 @FRAMESIZE_1939 DC F'200'
00004A1C 00000000
00004A20 0000000000000000                   6848 @lit_1939_263 DC AD(rd_kafka_timer_stop)
00004A28 0000000000000658                   6849 @lit_1939_265 DC AD(rd_free)
00004A30 0000000000003FA8                   6850 @lit_1939_268 DC AD(rd_kafka_mock_cgrp_member_destroy)
00004A38                                    6851 @L806    DS    0H
00004A38 E3F0 2010 0004          00000010   6852          LG    15,16(0,2)  ; offset of cluster in rd_kafka_mock_cgrp_s
00004A3E E310 2008 0004          00000008   6853          LG    1,8(0,2)    ; offset of tqe_prev in 0000157
00004A44 E310 F068 0024          00000068   6854          STG   1,104(0,15) ; offset of tqh_last in 0000172
00004A4A                                    6855 @L807    DS    0H
00004A4A E3F0 2008 0004          00000008   6856          LG    15,8(0,2)   ; offset of tqe_prev in 0000157
00004A50 E310 2000 0004          00000000   6857          LG    1,0(0,2)    ; mcgrp
00004A56 E310 F000 0024          00000000   6858          STG   1,0(0,15)
                                            6859 * ***
                                            6860 * ***           rd_kafka_timer_stop(&mcgrp->cluster->timers,
                                            6861 * ***                               &mcgrp->rebalance_tmr, 1);
00004A5C E3F0 2010 0004          00000010   6862          LG    15,16(0,2)  ; offset of cluster in rd_kafka_mock_cgrp_s
00004A62 41F0 F4E0               000004E0   6863          LA    15,1248(0,15)
00004A66 E3F0 D0B0 0024          000000B0   6864          STG   15,176(0,13)
00004A6C 41F0 2080               00000080   6865          LA    15,128(0,2)
00004A70 E3F0 D0B8 0024          000000B8   6866          STG   15,184(0,13)
00004A76 E548 D0C0 0001          000000C0   6867          MVGHI 192(13),1
00004A7C 4110 D0B0               000000B0   6868          LA    1,176(0,13)
00004A80 E330 C070 0004          00004A20   6869          LG    3,@lit_1939_263 ; rd_kafka_timer_stop
00004A86 B904 00F3                          6870          LGR   15,3
00004A8A                                    6871 @@gen_label370 DS    0H
00004A8A 05EF                               6872          BALR  14,15
00004A8C                                    6873 @@gen_label371 DS    0H
                                            6874 * ***           rd_kafka_timer_stop(&mcgrp->cluster->timers,
                                            6875 * ***                               &mcgrp->session_tmr, 1);
00004A8C E3F0 2010 0004          00000010   6876          LG    15,16(0,2)  ; offset of cluster in rd_kafka_mock_cgrp_s
00004A92 41F0 F4E0               000004E0   6877          LA    15,1248(0,15)
00004A96 E3F0 D0B0 0024          000000B0   6878          STG   15,176(0,13)
00004A9C 41F0 2048               00000048   6879          LA    15,72(0,2)
                                                                                                                           Page  140 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004AA0 E3F0 D0B8 0024          000000B8   6880          STG   15,184(0,13)
00004AA6 E548 D0C0 0001          000000C0   6881          MVGHI 192(13),1
00004AAC 4110 D0B0               000000B0   6882          LA    1,176(0,13)
00004AB0 B904 00F3                          6883          LGR   15,3
00004AB4                                    6884 @@gen_label372 DS    0H
00004AB4 05EF                               6885          BALR  14,15
00004AB6                                    6886 @@gen_label373 DS    0H
                                            6887 * ***           rd_free(mcgrp->id);
00004AB6 E3F0 2020 0004          00000020   6888          LG    15,32(0,2)
00004ABC E3F0 D0B0 0024          000000B0   6889          STG   15,176(0,13)
00004AC2 4110 D0B0               000000B0   6890          LA    1,176(0,13)
00004AC6 E330 C078 0004          00004A28   6891          LG    3,@lit_1939_265 ; rd_free
00004ACC B904 00F3                          6892          LGR   15,3
00004AD0                                    6893 @@gen_label374 DS    0H
00004AD0 05EF                               6894          BALR  14,15
00004AD2                                    6895 @@gen_label375 DS    0H
                                            6896 * ***           rd_free(mcgrp->protocol_type);
00004AD2 E3F0 2028 0004          00000028   6897          LG    15,40(0,2)
00004AD8 E3F0 D0B0 0024          000000B0   6898          STG   15,176(0,13)
00004ADE 4110 D0B0               000000B0   6899          LA    1,176(0,13)
00004AE2 B904 00F3                          6900          LGR   15,3
00004AE6                                    6901 @@gen_label376 DS    0H
00004AE6 05EF                               6902          BALR  14,15
00004AE8                                    6903 @@gen_label377 DS    0H
                                            6904 * ***           if (mcgrp->protocol_name)
00004AE8 E3F0 2030 0002          00000030   6905          LTG   15,48(0,2)  ; offset of protocol_name in rd_kafka_mock_c*
                                                                grp_s
00004AEE 4780 C174               00004B24   6906          BZ    @L812
                                            6907 * ***                   rd_free(mcgrp->protocol_name);
00004AF2 E3F0 2030 0004          00000030   6908          LG    15,48(0,2)
00004AF8 E3F0 D0B0 0024          000000B0   6909          STG   15,176(0,13)
00004AFE 4110 D0B0               000000B0   6910          LA    1,176(0,13)
00004B02 B904 00F3                          6911          LGR   15,3
00004B06                                    6912 @@gen_label379 DS    0H
00004B06 05EF                               6913          BALR  14,15
00004B08                                    6914 @@gen_label380 DS    0H
00004B08                                    6915 @L808    DS    0H
                                            6916 * ***           while ((member = ((&mcgrp->members)->tqh_first)))
00004B08 47F0 C174               00004B24   6917          B     @L812
00004B0C                                    6918 @L811    DS    0H
                                            6919 * ***                   rd_kafka_mock_cgrp_member_destroy(mcgrp, membe\
                                            6920 * r);
00004B0C E320 D0B0 0024          000000B0   6921          STG   2,176(0,13)
00004B12 E3F0 D0B8 0024          000000B8   6922          STG   15,184(0,13)
00004B18 4110 D0B0               000000B0   6923          LA    1,176(0,13)
00004B1C E3F0 C080 0004          00004A30   6924          LG    15,@lit_1939_268 ; rd_kafka_mock_cgrp_member_destroy
00004B22                                    6925 @@gen_label381 DS    0H
00004B22 05EF                               6926          BALR  14,15
00004B24                                    6927 @@gen_label382 DS    0H
00004B24                                    6928 @L812    DS    0H
00004B24 E3F0 20B8 0004          000000B8   6929          LG    15,184(0,2) ; offset of members in rd_kafka_mock_cgrp_s
00004B2A B902 001F                          6930          LTGR  1,15
                                                                                                                           Page  141 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004B2E 4770 C15C               00004B0C   6931          BNZ   @L811
                                            6932 * ***           rd_free(mcgrp);
00004B32 E320 D0B0 0024          000000B0   6933          STG   2,176(0,13)
00004B38 4110 D0B0               000000B0   6934          LA    1,176(0,13)
00004B3C E3F0 C078 0004          00004A28   6935          LG    15,@lit_1939_265 ; rd_free
00004B42                                    6936 @@gen_label384 DS    0H
00004B42 05EF                               6937          BALR  14,15
00004B44                                    6938 @@gen_label385 DS    0H
                                            6939 * ***   }
00004B44                                    6940 @ret_lab_1939 DS 0H
                                            6941 * * **** Start of Epilogue
                                            6942          DCCEPIL
00004B44                                    6943+         ds 0h                                                          01-DCCEP
                                            6944+* Epilog
00004B44 D707 D088 D088 00000088 00000088   6945+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004B4A E3D0 D080 0004          00000080   6946+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004B50 E3C0 D090 0004          00000090   6947+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004B56 E3B0 C018 0004          00000018   6948+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004B5C E3C0 B010 0021          00000010   6949+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004B62 E3E0 D008 0004          00000008   6950+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004B68 EB1C D020 0004          00000020   6951+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004B6E 078E                               6952+         bcr 8,14                if same dsab, just return              01-DCCEP
00004B70 E3F0 D010 0024          00000010   6953+         stg 15,16(0,13)         save return code                       01-DCCEP
00004B76 E300 D018 0024          00000018   6954+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004B7C E3F0 D090 0004          00000090   6955+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004B82 E3F0 F018 0004          00000018   6956+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004B88 47F0 F040               00000040   6957+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6958+* End of Epilog
                                            6959 * * **** End of Epilogue
                                            6960          DROP  12
                                            6961 *
                                            6962 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_destroy"
                                            6963 *      (FUNCTION #1939)
                                            6964 *
00000000                00000000 000000A8   6965 @AUTO#rd_kafka_mock_cgrp_destroy DSECT
00000000                                    6966          DS    XL168
                                            6967 *
00004B8C                00000000 00005122   6968 @CODE    CSECT
                                            6969 *
                                            6970 *
                                            6971 *
                                            6972 * ....... start of rd_kafka_mock_cgrp_find
                                            6973 rd_kafka_mock_cgrp_find ALIAS X'99846D92818692816D949683926D838799976D8*
                                                                6899584'
00004B8C                                    6974 @LNAME1940 DS  0H
00004B8C 00000017                           6975          DC    X'00000017'
00004B90 99846D9281869281                   6976          DC    C'rd_kafka_mock_cgrp_find'
00004BA7 00                                 6977          DC    X'00'
                                            6978 rd_kafka_mock_cgrp_find DCCPRLG CINDEX=1940,BASER=12,FRAME=192,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME1940
                                            6979          macro
                                            6980          dccextrn &m
                                                                                                                           Page  142 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            6981          gblc    &$dccext(1000)
                                            6982          gbla    &$dccexti
                                            6983          lcla    &i
                                            6984 &$dccext(&$dccexti+1) setc    '&m'
                                            6985 &i       seta    1
                                            6986 .loop    aif    (&i gt &$dccexti).around
                                            6987          aif    ('&$dccext(&i)' eq '&m').getout
                                            6988 &i       seta    &i+1
                                            6989          ago     .loop
                                            6990 .around  anop
                                            6991 &$dccexti seta &$dccexti+1
                                            6992          extrn  &m
                                            6993 .getout  anop
                                            6994          mend
00004BA8                                    6995+$eye0127    ds    0d                                                    02-DCCCA
00004BA8 C4C3C3                             6996+         dc cl3'DCC'                                                    02-DCCCA
00004BAB 01                                 6997+         dc xl1'01' format one                                          02-DCCCA
00004BAC 00000000                           6998+         dc a(0)                                                        02-DCCCA
00004BB0 0000000000004C1A                   6999+         dc ad(@PER_1940)                                               02-DCCCA
00004BB8 00000000000000C0                   7000+         dc ad(192)                                                     02-DCCCA
00004BC0 0000000000000000                   7001+         dc ad(0)                                                       02-DCCCA
00004BC8 0000000000001000                   7002+         dc ad(4096)                                                    02-DCCCA
00004BD0 20                                 7003+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004BD1 03                                 7004+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004BD2 03                                 7005+         dc al1(3)                                                      02-DCCCA
00004BD3 08                                 7006+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004BD4 00                                 7007+         dc bl.8'00000000'                                              02-DCCCA
00004BD5 000000                             7008+         dc al3(0)                                                      02-DCCCA
00004BD8 0000000000004B8C                   7009+         dc ad(@LNAME1940)                                              02-DCCCA
00004BE0                                    7010+         ds 0d                                                          02-DCCCA
00004BE0 0000000000004BA8                   7011+         dc ad($eye0127)                                                02-DCCCA
00004BE8 0000000000000000                   7012+         dc ad(0)                                                       02-DCCCA
00004BF0                                    7013+         ds    0d                                                       01-DCCPR
                                            7014+         entry rd_kafka_mock_cgrp_find                                  01-DCCPR
00004BF0                                    7015+rd_kafka_mock_cgrp_find ds 0d                                           01-DCCPR
00004BF0                                    7016+@REGION_1940_1 ds 0h                                                    01-DCCPR
00004BF0 EBEC D008 0024          00000008   7017+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004BF6 E3E0 D088 0004          00000088   7018+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004BFC E3C0 D090 0004          00000090   7019+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004C02 B904 002E                          7020+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004C06 E3B0 C018 0004          00000018   7021+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004C0C A7EB 00C0               000000C0   7022+         aghi  14,192              increase by frame size               01-DCCPR
00004C10 E3E0 C020 0021          00000020   7023+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004C16 4720 B020               00000020   7024+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004C1A                                    7025+@PER_1940 ds   0h                                                       01-DCCPR
00004C1A EBDE 2080 0024          00000080   7026+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004C20 E3C0 2090 0024          00000090   7027+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004C26 B904 00D2                          7028+         lgr   13,2                set real frame pointer               01-DCCPR
00004C2A B904 00CF                          7029+         lgr   12,15               set base reg                         01-DCCPR
                        00004BF0            7030+         using @REGION_1940_1,12                                        01-DCCPR
00004C2E B904 0031                          7031          LGR   3,1         ; ptr to parm area
                                            7032 * ******* End of Prologue
                                                                                                                           Page  143 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7033 * *
                                            7034 * ***           rd_kafka_mock_cgrp_t *mcgrp;
                                            7035 * ***           for ((mcgrp) = ((&mcluster->cgrps)->tqh_first); (mcgrp\
                                            7036 * ) != (((void *)0)); (mcgrp) = ((mcgrp)->link .tqe_next)) {
00004C32 E3F0 3000 0004          00000000   7037          LG    15,0(0,3)   ; mcluster
00004C38 E320 F060 0004          00000060   7038          LG    2,96(0,15)  ; offset of cgrps in rd_kafka_mock_cluster_s
00004C3E 47F0 C0A0               00004C90   7039          B     @L814
00004C48                                    7040          DS    0D
00004C48 000000C0                           7041 @FRAMESIZE_1940 DC F'192'
00004C4C 00000000
00004C50 0000000000000E28                   7042 @lit_1940_271 DC AD(rd_kafkap_str_cmp_str)
00004C58                                    7043 @L813    DS    0H
                                            7044 * ***                   if (!rd_kafkap_str_cmp_str(GroupId, mcgrp->id)\
                                            7045 * )
00004C58 E3F0 3008 0004          00000008   7046          LG    15,8(0,3)   ; GroupId
00004C5E E3F0 D0B0 0024          000000B0   7047          STG   15,176(0,13)
00004C64 E3F0 2020 0004          00000020   7048          LG    15,32(0,2)
00004C6A E3F0 D0B8 0024          000000B8   7049          STG   15,184(0,13)
00004C70 4110 D0B0               000000B0   7050          LA    1,176(0,13)
00004C74 E3F0 C060 0004          00004C50   7051          LG    15,@lit_1940_271 ; rd_kafkap_str_cmp_str
00004C7A                                    7052 @@gen_label386 DS    0H
00004C7A 05EF                               7053          BALR  14,15
00004C7C                                    7054 @@gen_label387 DS    0H
00004C7C 12FF                               7055          LTR   15,15
00004C7E 4770 C09A               00004C8A   7056          BNZ   @L817
                                            7057 * ***                           return mcgrp;
00004C82 B904 00F2                          7058          LGR   15,2
00004C86 47F0 C0AC               00004C9C   7059          B     @ret_lab_1940
00004C8A                                    7060 @L817    DS    0H
                                            7061 * ***           }
00004C8A E320 2000 0004          00000000   7062          LG    2,0(0,2)    ; mcgrp
00004C90                                    7063 @L814    DS    0H
00004C90 B902 00F2                          7064          LTGR  15,2
00004C94 4770 C068               00004C58   7065          BNE   @L813
                                            7066 * ***
                                            7067 * ***           return ((void *)0);
00004C98 A7F9 0000               00000000   7068          LGHI  15,0        ; 0
                                            7069 * ***   }
00004C9C                                    7070 @ret_lab_1940 DS 0H
                                            7071 * * **** Start of Epilogue
                                            7072          DCCEPIL
00004C9C                                    7073+         ds 0h                                                          01-DCCEP
                                            7074+* Epilog
00004C9C D707 D088 D088 00000088 00000088   7075+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004CA2 E3D0 D080 0004          00000080   7076+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004CA8 E3C0 D090 0004          00000090   7077+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004CAE E3B0 C018 0004          00000018   7078+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004CB4 E3C0 B010 0021          00000010   7079+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004CBA E3E0 D008 0004          00000008   7080+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004CC0 EB1C D020 0004          00000020   7081+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004CC6 078E                               7082+         bcr 8,14                if same dsab, just return              01-DCCEP
00004CC8 E3F0 D010 0024          00000010   7083+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page  144 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004CCE E300 D018 0024          00000018   7084+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004CD4 E3F0 D090 0004          00000090   7085+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004CDA E3F0 F018 0004          00000018   7086+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004CE0 47F0 F040               00000040   7087+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7088+* End of Epilog
                                            7089 * * **** End of Epilogue
                                            7090          DROP  12
                                            7091 *
                                            7092 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_find"
                                            7093 *      (FUNCTION #1940)
                                            7094 *
00000000                00000000 000000A8   7095 @AUTO#rd_kafka_mock_cgrp_find DSECT
00000000                                    7096          DS    XL168
                                            7097 *
00004CE4                00000000 00005122   7098 @CODE    CSECT
                                            7099 *
                                            7100 *
                                            7101 *
                                            7102 * ....... start of rd_kafka_mock_cgrp_get
                                            7103 rd_kafka_mock_cgrp_get ALIAS X'99846D92818692816D949683926D838799976D87*
                                                                85A3'
00004CE4                                    7104 @LNAME1941 DS  0H
00004CE4 00000016                           7105          DC    X'00000016'
00004CE8 99846D9281869281                   7106          DC    C'rd_kafka_mock_cgrp_get'
00004CFE 00                                 7107          DC    X'00'
                                            7108 rd_kafka_mock_cgrp_get DCCPRLG CINDEX=1941,BASER=12,FRAME=232,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1941
                                            7109          macro
                                            7110          dccextrn &m
                                            7111          gblc    &$dccext(1000)
                                            7112          gbla    &$dccexti
                                            7113          lcla    &i
                                            7114 &$dccext(&$dccexti+1) setc    '&m'
                                            7115 &i       seta    1
                                            7116 .loop    aif    (&i gt &$dccexti).around
                                            7117          aif    ('&$dccext(&i)' eq '&m').getout
                                            7118 &i       seta    &i+1
                                            7119          ago     .loop
                                            7120 .around  anop
                                            7121 &$dccexti seta &$dccexti+1
                                            7122          extrn  &m
                                            7123 .getout  anop
                                            7124          mend
00004D00                                    7125+$eye0130    ds    0d                                                    02-DCCCA
00004D00 C4C3C3                             7126+         dc cl3'DCC'                                                    02-DCCCA
00004D03 01                                 7127+         dc xl1'01' format one                                          02-DCCCA
00004D04 00000000                           7128+         dc a(0)                                                        02-DCCCA
00004D08 0000000000004D72                   7129+         dc ad(@PER_1941)                                               02-DCCCA
00004D10 00000000000000E8                   7130+         dc ad(232)                                                     02-DCCCA
00004D18 0000000000000000                   7131+         dc ad(0)                                                       02-DCCCA
00004D20 0000000000001000                   7132+         dc ad(4096)                                                    02-DCCCA
00004D28 20                                 7133+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page  145 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004D29 03                                 7134+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004D2A 03                                 7135+         dc al1(3)                                                      02-DCCCA
00004D2B 08                                 7136+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004D2C 00                                 7137+         dc bl.8'00000000'                                              02-DCCCA
00004D2D 000000                             7138+         dc al3(0)                                                      02-DCCCA
00004D30 0000000000004CE4                   7139+         dc ad(@LNAME1941)                                              02-DCCCA
00004D38                                    7140+         ds 0d                                                          02-DCCCA
00004D38 0000000000004D00                   7141+         dc ad($eye0130)                                                02-DCCCA
00004D40 0000000000000000                   7142+         dc ad(0)                                                       02-DCCCA
00004D48                                    7143+         ds    0d                                                       01-DCCPR
                                            7144+         entry rd_kafka_mock_cgrp_get                                   01-DCCPR
00004D48                                    7145+rd_kafka_mock_cgrp_get ds 0d                                            01-DCCPR
00004D48                                    7146+@REGION_1941_1 ds 0h                                                    01-DCCPR
00004D48 EBEC D008 0024          00000008   7147+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004D4E E3E0 D088 0004          00000088   7148+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004D54 E3C0 D090 0004          00000090   7149+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004D5A B904 002E                          7150+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004D5E E3B0 C018 0004          00000018   7151+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004D64 A7EB 00E8               000000E8   7152+         aghi  14,232              increase by frame size               01-DCCPR
00004D68 E3E0 C020 0021          00000020   7153+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004D6E 4720 B020               00000020   7154+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004D72                                    7155+@PER_1941 ds   0h                                                       01-DCCPR
00004D72 EBDE 2080 0024          00000080   7156+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004D78 E3C0 2090 0024          00000090   7157+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004D7E B904 00D2                          7158+         lgr   13,2                set real frame pointer               01-DCCPR
00004D82 B904 00CF                          7159+         lgr   12,15               set base reg                         01-DCCPR
                        00004D48            7160+         using @REGION_1941_1,12                                        01-DCCPR
                                            7161 * ******* End of Prologue
                                            7162 * *
00004D86 EB35 1000 0004          00000000   7163          LMG   3,5,0(1)    ; mcluster
                                            7164 * ***           rd_kafka_mock_cgrp_t *mcgrp;
                                            7165 * ***
                                            7166 * ***           mcgrp = rd_kafka_mock_cgrp_find(mcluster, GroupId);
00004D8C EB34 D0B0 0024          000000B0   7167          STMG  3,4,176(13)
00004D92 4110 D0B0               000000B0   7168          LA    1,176(0,13)
00004D96 E3F0 C070 0004          00004DB8   7169          LG    15,@lit_1941_274 ; rd_kafka_mock_cgrp_find
00004D9C                                    7170 @@gen_label390 DS    0H
00004D9C 05EF                               7171          BALR  14,15
00004D9E                                    7172 @@gen_label391 DS    0H
00004D9E B902 002F                          7173          LTGR  2,15        ; mcgrp
                                            7174 * ***           if (mcgrp)
00004DA2 4780 C098               00004DE0   7175          BZ    @L818
                                            7176 * ***                   return mcgrp;
00004DA6 B904 00F2                          7177          LGR   15,2
00004DAA 47F0 C1C8               00004F10   7178          B     @ret_lab_1941
00004DB0                                    7179          DS    0D
00004DB0 000000E8                           7180 @FRAMESIZE_1941 DC F'232'
00004DB4 00000000
00004DB8 0000000000004BF0                   7181 @lit_1941_274 DC AD(rd_kafka_mock_cgrp_find)
00004DC0 0000000000000380                   7182 @lit_1941_275 DC AD(rd_calloc)
00004DC8 00000000000008C8                   7183 @lit_1941_277 DC AD(rd_strndup)
00004DD0 0000000000000000                   7184 @lit_1941_283 DC AD(rd_kafka_timer_start0)
                                                                                                                           Page  146 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004DD8 0000000000004760                   7185 @lit_1941_282 DC AD(rd_kafka_mock_cgrp_session_tmr_cb)
00004DE0                                    7186 @L818    DS    0H
                                            7187 * ***
                                            7188 * ***
                                            7189 * ***
                                            7190 * ***           mcgrp = rd_calloc(1, sizeof(*mcgrp));
00004DE0 E548 D0B0 0001          000000B0   7191          MVGHI 176(13),1
00004DE6 E548 D0B8 00E0          000000B8   7192          MVGHI 184(13),224
00004DEC 4110 D0B0               000000B0   7193          LA    1,176(0,13)
00004DF0 E3F0 C078 0004          00004DC0   7194          LG    15,@lit_1941_275 ; rd_calloc
00004DF6                                    7195 @@gen_label393 DS    0H
00004DF6 05EF                               7196          BALR  14,15
00004DF8                                    7197 @@gen_label394 DS    0H
00004DF8 B904 002F                          7198          LGR   2,15
                                            7199 * ***
                                            7200 * ***           mcgrp->cluster = mcluster;
00004DFC E330 2010 0024          00000010   7201          STG   3,16(0,2)   ; offset of cluster in rd_kafka_mock_cgrp_s
                                            7202 * ***           mcgrp->id = rd_strndup((GroupId)->str, (((GroupId)->le\
                                            7203 * n) == -1 ? 0 : ((GroupId)->len)));
00004E02 E55C 4000 FFFF          00000000   7204          CHSI  0(4),-1
00004E08 4770 C0CC               00004E14   7205          BNE   @L819
00004E0C A7F8 0000               00000000   7206          LHI   15,0        ; 0
00004E10 47F0 C0D0               00004E18   7207          B     @L820
00004E14                                    7208 @L819    DS    0H
00004E14 58F0 4000               00000000   7209          L     15,0(0,4)   ; GroupId
00004E18                                    7210 @L820    DS    0H
00004E18 B914 00FF                          7211          LGFR  15,15
00004E1C E310 4008 0004          00000008   7212          LG    1,8(0,4)
00004E22 E310 D0B0 0024          000000B0   7213          STG   1,176(0,13)
00004E28 E3F0 D0B8 0024          000000B8   7214          STG   15,184(0,13)
00004E2E 4110 D0B0               000000B0   7215          LA    1,176(0,13)
00004E32 E340 C080 0004          00004DC8   7216          LG    4,@lit_1941_277 ; rd_strndup
00004E38 B904 00F4                          7217          LGR   15,4
00004E3C                                    7218 @@gen_label396 DS    0H
00004E3C 05EF                               7219          BALR  14,15
00004E3E                                    7220 @@gen_label397 DS    0H
00004E3E E3F0 2020 0024          00000020   7221          STG   15,32(0,2)
                                            7222 * ***           mcgrp->protocol_type = rd_strndup((ProtocolType)->str,\
                                            7223 *  (((ProtocolType)->len) == -1 ? 0 : ((ProtocolType)->len)));
00004E44 E55C 5000 FFFF          00000000   7224          CHSI  0(5),-1
00004E4A 4770 C10E               00004E56   7225          BNE   @L821
00004E4E A7F8 0000               00000000   7226          LHI   15,0        ; 0
00004E52 47F0 C112               00004E5A   7227          B     @L822
00004E56                                    7228 @L821    DS    0H
00004E56 58F0 5000               00000000   7229          L     15,0(0,5)   ; ProtocolType
00004E5A                                    7230 @L822    DS    0H
00004E5A B914 00FF                          7231          LGFR  15,15
00004E5E E310 5008 0004          00000008   7232          LG    1,8(0,5)
00004E64 E310 D0B0 0024          000000B0   7233          STG   1,176(0,13)
00004E6A E3F0 D0B8 0024          000000B8   7234          STG   15,184(0,13)
00004E70 4110 D0B0               000000B0   7235          LA    1,176(0,13)
00004E74 B904 00F4                          7236          LGR   15,4
                                                                                                                           Page  147 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00004E78                                    7237 @@gen_label399 DS    0H
00004E78 05EF                               7238          BALR  14,15
00004E7A                                    7239 @@gen_label400 DS    0H
00004E7A E3F0 2028 0024          00000028   7240          STG   15,40(0,2)
                                            7241 * ***           mcgrp->generation_id = 1;
00004E80 E54C 2038 0001          00000038   7242          MVHI  56(2),1     ; offset of generation_id in rd_kafka_mock_c*
                                                                grp_s
                                            7243 * ***           do { (&mcgrp->members)->tqh_first = (((void *)0)); (&m\
                                            7244 * cgrp->members)->tqh_last = &(&mcgrp->members)->tqh_first; } while ( \
                                            7245 * 0);
00004E86                                    7246 @L823    DS    0H
00004E86 A7F9 0000               00000000   7247          LGHI  15,0        ; 0
00004E8A E3F0 20B8 0024          000000B8   7248          STG   15,184(0,2) ; offset of members in rd_kafka_mock_cgrp_s
00004E90 41F0 20B8               000000B8   7249          LA    15,184(0,2)
00004E94 E3F0 20C0 0024          000000C0   7250          STG   15,192(0,2) ; offset of tqh_last in 0000159
                                            7251 * ***           rd_kafka_timer_start0(&mcluster->timers,&mcgrp->sessio\
                                            7252 * n_tmr,1000*1000,0,1,rd_kafka_mock_cgrp_session_tmr_cb,mcgrp);
00004E9A 41F0 34E0               000004E0   7253          LA    15,1248(0,3)
00004E9E E3F0 D0B0 0024          000000B0   7254          STG   15,176(0,13)
00004EA4 41F0 2048               00000048   7255          LA    15,72(0,2)
00004EA8 E3F0 D0B8 0024          000000B8   7256          STG   15,184(0,13)
00004EAE C0FF 000F 4240                     7257          LLILF 15,X'000F4240' ; 1000000
00004EB4 E3F0 D0C0 0024          000000C0   7258          STG   15,192(0,13)
00004EBA D707 D0C8 D0C8 000000C8 000000C8   7259          XC    200(8,13),200(13)
00004EC0 E548 D0D0 0001          000000D0   7260          MVGHI 208(13),1
00004EC6 E3F0 C090 0004          00004DD8   7261          LG    15,@lit_1941_282 ; rd_kafka_mock_cgrp_session_tmr_cb
00004ECC E3F0 D0D8 0024          000000D8   7262          STG   15,216(0,13)
00004ED2 E320 D0E0 0024          000000E0   7263          STG   2,224(0,13)
00004ED8 4110 D0B0               000000B0   7264          LA    1,176(0,13)
00004EDC E3F0 C088 0004          00004DD0   7265          LG    15,@lit_1941_283 ; rd_kafka_timer_start0
00004EE2                                    7266 @@gen_label401 DS    0H
00004EE2 05EF                               7267          BALR  14,15
00004EE4                                    7268 @@gen_label402 DS    0H
                                            7269 * ***
                                            7270 * ***
                                            7271 * ***
                                            7272 * ***
                                            7273 * ***           do {  (mcgrp)->link .tqe_next = (((void *)0)); (mcgrp)\
                                            7274 * ->link .tqe_prev = (&mcluster->cgrps)->tqh_last; *(&mcluster->cgrps)\
                                            7275 * ->tqh_last = (mcgrp); (&mcluster->cgrps)->tqh_last = &(mcgrp)->link \
                                            7276 * .tqe_next; } while ( 0);
00004EE4                                    7277 @L826    DS    0H
00004EE4 A7F9 0000               00000000   7278          LGHI  15,0        ; 0
00004EE8 E3F0 2000 0024          00000000   7279          STG   15,0(0,2)   ; mcgrp
00004EEE E3F0 3068 0004          00000068   7280          LG    15,104(0,3) ; offset of tqh_last in 0000172
00004EF4 E3F0 2008 0024          00000008   7281          STG   15,8(0,2)   ; offset of tqe_prev in 0000157
00004EFA E3F0 3068 0004          00000068   7282          LG    15,104(0,3) ; offset of tqh_last in 0000172
00004F00 E320 F000 0024          00000000   7283          STG   2,0(0,15)
00004F06 E320 3068 0024          00000068   7284          STG   2,104(0,3)  ; offset of tqh_last in 0000172
                                            7285 * ***
                                            7286 * ***           return mcgrp;
00004F0C B904 00F2                          7287          LGR   15,2
                                                                                                                           Page  148 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7288 * ***   }
00004F10                                    7289 @ret_lab_1941 DS 0H
                                            7290 * * **** Start of Epilogue
                                            7291          DCCEPIL
00004F10                                    7292+         ds 0h                                                          01-DCCEP
                                            7293+* Epilog
00004F10 D707 D088 D088 00000088 00000088   7294+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004F16 E3D0 D080 0004          00000080   7295+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004F1C E3C0 D090 0004          00000090   7296+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004F22 E3B0 C018 0004          00000018   7297+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004F28 E3C0 B010 0021          00000010   7298+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004F2E E3E0 D008 0004          00000008   7299+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004F34 EB1C D020 0004          00000020   7300+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004F3A 078E                               7301+         bcr 8,14                if same dsab, just return              01-DCCEP
00004F3C E3F0 D010 0024          00000010   7302+         stg 15,16(0,13)         save return code                       01-DCCEP
00004F42 E300 D018 0024          00000018   7303+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004F48 E3F0 D090 0004          00000090   7304+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004F4E E3F0 F018 0004          00000018   7305+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004F54 47F0 F040               00000040   7306+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7307+* End of Epilog
                                            7308 * * **** End of Epilogue
                                            7309          DROP  12
                                            7310 *
                                            7311 *   DSECT for automatic variables in "rd_kafka_mock_cgrp_get"
                                            7312 *      (FUNCTION #1941)
                                            7313 *
00000000                00000000 000000A8   7314 @AUTO#rd_kafka_mock_cgrp_get DSECT
00000000                                    7315          DS    XL168
                                            7316 *
00004F58                00000000 00005122   7317 @CODE    CSECT
                                            7318 *
                                            7319 *
                                            7320 *
                                            7321 * ....... start of rd_kafka_mock_cgrps_connection_closed
                                            7322 rd_kafka_mock_cgrps_connection_closed ALIAS X'99846D92818692816D9496839*
                                                                26D83879997A26D839695958583A38996956D839396A28584'
00004F58                                    7323 @LNAME1942 DS  0H
00004F58 00000025                           7324          DC    X'00000025'
00004F5C 99846D9281869281                   7325          DC    C'rd_kafka_mock_cgrps_connection_c'
00004F7C 9396A28584                         7326          DC    C'losed'
00004F81 00                                 7327          DC    X'00'
                                            7328 rd_kafka_mock_cgrps_connection_closed DCCPRLG CINDEX=1942,BASER=12,FRAM*
                                                                E=184,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1942
                                            7329          macro
                                            7330          dccextrn &m
                                            7331          gblc    &$dccext(1000)
                                            7332          gbla    &$dccexti
                                            7333          lcla    &i
                                            7334 &$dccext(&$dccexti+1) setc    '&m'
                                            7335 &i       seta    1
                                            7336 .loop    aif    (&i gt &$dccexti).around
                                            7337          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  149 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7338 &i       seta    &i+1
                                            7339          ago     .loop
                                            7340 .around  anop
                                            7341 &$dccexti seta &$dccexti+1
                                            7342          extrn  &m
                                            7343 .getout  anop
                                            7344          mend
00004F88                                    7345+$eye0133    ds    0d                                                    02-DCCCA
00004F88 C4C3C3                             7346+         dc cl3'DCC'                                                    02-DCCCA
00004F8B 01                                 7347+         dc xl1'01' format one                                          02-DCCCA
00004F8C 00000000                           7348+         dc a(0)                                                        02-DCCCA
00004F90 0000000000004FFA                   7349+         dc ad(@PER_1942)                                               02-DCCCA
00004F98 00000000000000B8                   7350+         dc ad(184)                                                     02-DCCCA
00004FA0 0000000000000000                   7351+         dc ad(0)                                                       02-DCCCA
00004FA8 0000000000001000                   7352+         dc ad(4096)                                                    02-DCCCA
00004FB0 20                                 7353+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004FB1 03                                 7354+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004FB2 03                                 7355+         dc al1(3)                                                      02-DCCCA
00004FB3 08                                 7356+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004FB4 00                                 7357+         dc bl.8'00000000'                                              02-DCCCA
00004FB5 000000                             7358+         dc al3(0)                                                      02-DCCCA
00004FB8 0000000000004F58                   7359+         dc ad(@LNAME1942)                                              02-DCCCA
00004FC0                                    7360+         ds 0d                                                          02-DCCCA
00004FC0 0000000000004F88                   7361+         dc ad($eye0133)                                                02-DCCCA
00004FC8 0000000000000000                   7362+         dc ad(0)                                                       02-DCCCA
00004FD0                                    7363+         ds    0d                                                       01-DCCPR
                                            7364+         entry rd_kafka_mock_cgrps_connection_closed                    01-DCCPR
00004FD0                                    7365+rd_kafka_mock_cgrps_connection_closed ds 0d                             01-DCCPR
00004FD0                                    7366+@REGION_1942_1 ds 0h                                                    01-DCCPR
00004FD0 EBEC D008 0024          00000008   7367+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004FD6 E3E0 D088 0004          00000088   7368+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004FDC E3C0 D090 0004          00000090   7369+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004FE2 B904 002E                          7370+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004FE6 E3B0 C018 0004          00000018   7371+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004FEC A7EB 00B8               000000B8   7372+         aghi  14,184              increase by frame size               01-DCCPR
00004FF0 E3E0 C020 0021          00000020   7373+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004FF6 4720 B020               00000020   7374+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004FFA                                    7375+@PER_1942 ds   0h                                                       01-DCCPR
00004FFA EBDE 2080 0024          00000080   7376+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005000 E3C0 2090 0024          00000090   7377+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005006 B904 00D2                          7378+         lgr   13,2                set real frame pointer               01-DCCPR
0000500A B904 00CF                          7379+         lgr   12,15               set base reg                         01-DCCPR
                        00004FD0            7380+         using @REGION_1942_1,12                                        01-DCCPR
0000500E B904 0051                          7381          LGR   5,1         ; ptr to parm area
                                            7382 * ******* End of Prologue
                                            7383 * *
                                            7384 * ***           rd_kafka_mock_cgrp_t *mcgrp;
                                            7385 * ***
                                            7386 * ***           for ((mcgrp) = ((&mcluster->cgrps)->tqh_first); (mcgrp\
                                            7387 * ) != (((void *)0)); (mcgrp) = ((mcgrp)->link .tqe_next)) {
00005012 E3F0 5000 0004          00000000   7388          LG    15,0(0,5)   ; mcluster
00005018 E330 F060 0004          00000060   7389          LG    3,96(0,15)  ; offset of cgrps in rd_kafka_mock_cluster_s
                                                                                                                           Page  150 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000501E 47F0 C102               000050D2   7390          B     @L830
00005028                                    7391          DS    0D
00005028 000000B8                           7392 @FRAMESIZE_1942 DC F'184'
0000502C 00000000
00005030 0000000000000A90                   7393 @lit_1942_287 DC AD(rd_refcnt_sub0)
00005038 0000000000000000                   7394 @lit_1942_288 DC AD(rd_kafka_buf_destroy_final)
00005040                                    7395 @L829    DS    0H
                                            7396 * ***                   rd_kafka_mock_cgrp_member_t *member, *tmp;
                                            7397 * ***                   for ((member) = ((&mcgrp->members)->tqh_first)\
                                            7398 * ; (member) != (((void *)0)) && ((tmp) = ((member)->link .tqe_next), \
                                            7399 * 1); (member) = (tmp)) {
00005040 E320 30B8 0004          000000B8   7400          LG    2,184(0,3)  ; offset of members in rd_kafka_mock_cgrp_s
00005046 47F0 C0EA               000050BA   7401          B     @L834
0000504A                                    7402 @L833    DS    0H
                                            7403 * ***                           if (member->conn == mconn) {
0000504A E3F0 2048 0004          00000048   7404          LG    15,72(0,2)  ; offset of conn in rd_kafka_mock_cgrp_membe*
                                                                r_s
00005050 E310 5008 0004          00000008   7405          LG    1,8(0,5)    ; mconn
00005056 B920 00F1                          7406          CGR   15,1
0000505A 4770 C0E6               000050B6   7407          BNE   @L838
                                            7408 * ***                                   member->conn = ((void *)0);
0000505E A7F9 0000               00000000   7409          LGHI  15,0        ; 0
00005062 E3F0 2048 0024          00000048   7410          STG   15,72(0,2)  ; offset of conn in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            7411 * ***                                   if (member->resp) {
00005068 E3F0 2040 0002          00000040   7412          LTG   15,64(0,2)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
0000506E 4780 C0E6               000050B6   7413          BZ    @L838
                                            7414 * ***                                           do { if (rd_refcnt_sub\
                                            7415 * 0(&(member->resp)->rkbuf_refcnt) > 0) break; rd_kafka_buf_destroy_fi\
                                            7416 * nal(member->resp); } while (0);
00005072                                    7417 @L840    DS    0H
00005072 E3F0 2040 0004          00000040   7418          LG    15,64(0,2)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
00005078 41F0 F108               00000108   7419          LA    15,264(0,15)
0000507C E3F0 D0B0 0024          000000B0   7420          STG   15,176(0,13)
00005082 4110 D0B0               000000B0   7421          LA    1,176(0,13)
00005086 E3F0 C060 0004          00005030   7422          LG    15,@lit_1942_287 ; rd_refcnt_sub0
0000508C                                    7423 @@gen_label405 DS    0H
0000508C 05EF                               7424          BALR  14,15
0000508E                                    7425 @@gen_label406 DS    0H
0000508E 12FF                               7426          LTR   15,15
00005090 4720 C0DC               000050AC   7427          BH    @L841
00005094                                    7428 @L843    DS    0H
00005094 E3F0 2040 0004          00000040   7429          LG    15,64(0,2)
0000509A E3F0 D0B0 0024          000000B0   7430          STG   15,176(0,13)
000050A0 4110 D0B0               000000B0   7431          LA    1,176(0,13)
000050A4 E3F0 C068 0004          00005038   7432          LG    15,@lit_1942_288 ; rd_kafka_buf_destroy_final
000050AA                                    7433 @@gen_label408 DS    0H
000050AA 05EF                               7434          BALR  14,15
000050AC                                    7435 @@gen_label409 DS    0H
000050AC                                    7436 @L841    DS    0H
                                                                                                                           Page  151 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            7437 * ***                                           member->resp = ((void \
                                            7438 * *)0);
000050AC A7F9 0000               00000000   7439          LGHI  15,0        ; 0
000050B0 E3F0 2040 0024          00000040   7440          STG   15,64(0,2)  ; offset of resp in rd_kafka_mock_cgrp_membe*
                                                                r_s
                                            7441 * ***                                   }
000050B6                                    7442 @L839    DS    0H
                                            7443 * ***                           }
000050B6                                    7444 @L838    DS    0H
                                            7445 * ***                   }
000050B6 B904 0024                          7446          LGR   2,4         ; member
000050BA                                    7447 @L834    DS    0H
000050BA B902 00F2                          7448          LTGR  15,2
000050BE 4780 C0FC               000050CC   7449          BE    @L835
000050C2 E340 2000 0004          00000000   7450          LG    4,0(0,2)    ; member
000050C8 47F0 C07A               0000504A   7451          B     @L833
000050CC                                    7452 @L835    DS    0H
                                            7453 * ***           }
000050CC E330 3000 0004          00000000   7454          LG    3,0(0,3)    ; mcgrp
000050D2                                    7455 @L830    DS    0H
000050D2 B902 00F3                          7456          LTGR  15,3
000050D6 4770 C070               00005040   7457          BNE   @L829
                                            7458 * ***   }
000050DA                                    7459 @ret_lab_1942 DS 0H
                                            7460 * * **** Start of Epilogue
                                            7461          DCCEPIL
000050DA                                    7462+         ds 0h                                                          01-DCCEP
                                            7463+* Epilog
000050DA D707 D088 D088 00000088 00000088   7464+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000050E0 E3D0 D080 0004          00000080   7465+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000050E6 E3C0 D090 0004          00000090   7466+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000050EC E3B0 C018 0004          00000018   7467+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000050F2 E3C0 B010 0021          00000010   7468+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000050F8 E3E0 D008 0004          00000008   7469+         lg  14,8(0,13)          load up return address                 01-DCCEP
000050FE EB1C D020 0004          00000020   7470+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005104 078E                               7471+         bcr 8,14                if same dsab, just return              01-DCCEP
00005106 E3F0 D010 0024          00000010   7472+         stg 15,16(0,13)         save return code                       01-DCCEP
0000510C E300 D018 0024          00000018   7473+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005112 E3F0 D090 0004          00000090   7474+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005118 E3F0 F018 0004          00000018   7475+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000511E 47F0 F040               00000040   7476+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7477+* End of Epilog
                                            7478 * * **** End of Epilogue
                                            7479          DROP  12
                                            7480 *
                                            7481 *   DSECT for automatic variables in "rd_kafka_mock_cgrps_connection_c
                                            7482 *           losed"
                                            7483 *      (FUNCTION #1942)
                                            7484 *
00000000                00000000 000000A8   7485 @AUTO#rd_kafka_mock_cgrps_connection_closed DSECT
00000000                                    7486          DS    XL168
                                            7487 *
                                                                                                                           Page  152 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005122                00000000 00005122   7488 @CODE    CSECT
                                            7489 @@STATIC ALIAS X'7C998492818692816D949683926D8387999750'
                                            7490 @@STATIC DXD   224D
                                            7491 *
                                            7492 *  Non-Re-Entrant Data Section
                                            7493 *
00005128                00005128 00000BFE   7494 @DATA    CSECT
                                            7495 @DATA    RMODE ANY
                                            7496 @DATA    AMODE ANY
00005128 99846D8381939396                   7497 @@T48F   DC    X'99846D838193939683'               rd.calloc
00005131 00                                 7498          DC    1X'00'
00005132 99846D9481939396                   7499 @@T493   DC    X'99846D948193939683'               rd.malloc
0000513B 00                                 7500          DC    1X'00'
0000513C 99846D9985819393                   7501 @@T498   DC    X'99846D99858193939683'             rd.realloc
00005146 0000                               7502          DC    2X'00'
00005148 99846DA2A39984A4                   7503 @@T49E   DC    X'99846DA2A39984A497'               rd.strdup
00005151 00                                 7504          DC    1X'00'
00005152 99846DA2A3999584                   7505 @@T4A3   DC    X'99846DA2A3999584A497'             rd.strndup
0000515C 0000                               7506          DC    2X'00'
0000515E 99846D9985868395                   7507 @@T4AB   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
0000516C 00000000                           7508          DC    4X'00'
00005170 00000000                           7509 @@T65A   DC    4X'00'
00005174 0000001A00000000                   7510          DC    X'0000001A000000000000002200000000' ................
00005184 00000024                           7511          DC    X'00000024'                         ....
00005188 99846D9281869281                   7512 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00005198 98                                 7513          DC    X'98'                               q
00005199 00                                 7514          DC    1X'00'
0000519A 99846D9281869281                   7515 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
000051AA 96A8F0                             7516          DC    X'96A8F0'                           oy0
000051AD 00                                 7517          DC    1X'00'
000051AE 99846D9281869281                   7518 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000051BE 856D8485A2A39996                   7519          DC    X'856D8485A2A39996A8F0'             e.destroy0
000051C8 0000                               7520          DC    2X'00'
000051CA 99846D9281869281                   7521 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000051DA 856D8485936DA296                   7522          DC    X'856D8485936DA296A4998385'         e.del.source
000051E6 0000                               7523          DC    2X'00'
000051E8 99846D9281869281                   7524 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000051F8 856D8485936DA296                   7525          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00005208 A49995                             7526          DC    X'A49995'                           urn
0000520B 00                                 7527          DC    1X'00'
0000520C 99846D9281869281                   7528 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000521C 856DA39989878785                   7529          DC    X'856DA3998987878599'               e.trigger
00005225 00                                 7530          DC    1X'00'
00005226 99846D9281869281                   7531 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005236 856D8485A2A39996                   7532          DC    X'856D8485A2A39996A8'               e.destroy
0000523F 00                                 7533          DC    1X'00'
00005240 99846D9281869281                   7534 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00005250 856D8489A2818293                   7535          DC    X'856D8489A281829385'               e.disable
00005259 00                                 7536          DC    1X'00'
0000525A 99846DA394978182                   7537 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
0000526A F0                                 7538          DC    X'F0'                               0
0000526B 00                                 7539          DC    1X'00'
                                                                                                                           Page  153 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000526C 99846D9281869281                   7540 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
0000527C 81A385                             7541          DC    X'81A385'                           ate
0000527F 00                                 7542          DC    1X'00'
00005280 99846D9281869281                   7543 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
00005290 819389A9856D8199                   7544          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
0000529E 0000                               7545          DC    2X'00'
000052A0 99846D9281869281                   7546 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
000052B0 6D899589A3                         7547          DC    X'6D899589A3'                       .init
000052B5 00                                 7548          DC    1X'00'
000052B6 99846D9281869281                   7549 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
000052C6 87A26DA2A482                       7550          DC    X'87A26DA2A482'                     gs.sub
000052CC 0000                               7551          DC    2X'00'
000052CE 99846D9281869281                   7552 @@TA84   DC    X'99846D92818692816D949683926D8387' rd.kafka.mock.cg
000052DE 99976D9485948285                   7553          DC    X'99976D9485948285996D81A2A2898795' rp.member.assign
000052EE 948595A36DA285A3                   7554          DC    X'948595A36DA285A3'                 ment.set
000052F6 0000                               7555          DC    2X'00'
000052F8 99846D9281869281                   7556 @@TA8A   DC    X'99846D92818692816D949683926D8387' rd.kafka.mock.cg
00005308 99976DA2A895836D                   7557          DC    X'99976DA2A895836D84969585'         rp.sync.done
00005314 0000                               7558          DC    2X'00'
00005316 99846D9281869281                   7559 @@TA92   DC    X'99846D92818692816D949683926D8387' rd.kafka.mock.cg
00005326 99976D9485948285                   7560          DC    X'99976D9485948285996DA2A895836DA2' rp.member.sync.s
00005336 85A3                               7561          DC    X'85A3'                             et
00005338 0000                               7562          DC    2X'00'
0000533A 99846D9281869281                   7563 @@TA9C   DC    X'99846D92818692816D949683926D8387' rd.kafka.mock.cg
0000534A 99976D85938583A3                   7564          DC    X'99976D85938583A36D938581848599'   rp.elect.leader
00005359 00                                 7565          DC    1X'00'
0000535A 99846D9281869281                   7566 @@TAB2   DC    X'99846D92818692816D949683926D8387' rd.kafka.mock.cg
0000536A 99976D9485948285                   7567          DC    X'99976D9485948285996D8485A2A39996' rp.member.destro
0000537A A8                                 7568          DC    X'A8'                               y
0000537B 00                                 7569          DC    1X'00'
0000537C 99846D9281869281                   7570 @@TAC3   DC    X'99846D92818692816D949683926D8387' rd.kafka.mock.cg
0000538C 99976D9485948285                   7571          DC    X'99976D9485948285996D818484'       rp.member.add
00005399 00                                 7572          DC    1X'00'
0000539A                                    7573 @strings@ DS   0H
0000539A C37AE081A2879281                   7574          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
000053AA 849281869281E0A2                   7575          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
000053BA 9700950099858683                   7576          DC    X'970095009985868395A340A2A48260A9' p.n.refcnt.sub.z
000053CA 859996005A5C7F99                   7577          DC    X'859996005A5C7F9985868395A340A2A4' ero....refcnt.su
000053DA 8260A98599967F00                   7578          DC    X'8260A98599967F00D4D6C3D20000D496' b.zero..MOCK..Mo
000053EA 839240839695A2A4                   7579          DC    X'839240839695A2A494859940879996A4' ck.consumer.grou
000053FA 97406CA240A689A3                   7580          DC    X'97406CA240A689A388406C8440948594' p..s.with..d.mem
0000540A 8285994DA25D4083                   7581          DC    X'8285994DA25D40838881958789958740' ber.s..changing.
0000541A A2A381A385406CA2                   7582          DC    X'A2A381A385406CA240606E406CA27A40' state..s.....s..
0000542A 6CA20000D4819992                   7583          DC    X'6CA20000D48199928995874094968392' .s..Marking.mock
0000543A 40839695A2A49485                   7584          DC    X'40839695A2A494859940879996A49740' .consumer.group.
0000544A 948594828599406C                   7585          DC    X'948594828599406CA24081A2408183A3' member..s.as.act
0000545A 89A58500C37AE081                   7586          DC    X'89A58500C37AE081A2879281869281E0' ive.C..asgkafka.
0000546A 9389829984928186                   7587          DC    X'93898299849281869281E0A29983E099' librdkafka.src.r
0000547A 8492818692816D94                   7588          DC    X'8492818692816D949683926D83879997' dkafka.mock.cgrp
0000548A 4B83000094838799                   7589          DC    X'4B8300009483879997606E81A2A28987' .c..mcgrp..assig
0000549A 95948595A36D8395                   7590          DC    X'95948595A36D8395A3406E40F0009985' nment.cnt...0.re
000054AA A297606E999282A4                   7591          DC    X'A297606E999282A4866D998598888499' sp..rkbuf.reqhdr
                                                                                                                           Page  154 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000054BA 4BC19789D285A840                   7592          DC    X'4BC19789D285A8407E7E40F1F400D496' .ApiKey....14.Mo
000054CA 839240839695A2A4                   7593          DC    X'839240839695A2A494859940879996A4' ck.consumer.grou
000054DA 97406CA27A4081A6                   7594          DC    X'97406CA27A4081A68189A3899587406C' p..s..awaiting..
000054EA 84616C8440A2A895                   7595          DC    X'84616C8440A2A8958389958740948594' d..d.syncing.mem
000054FA 828599A240899540                   7596          DC    X'828599A240899540A2A381A385406CA2' bers.in.state..s
0000550A 0000819393409485                   7597          DC    X'000081939340948594828599A240A2A8' ..all.members.sy
0000551A 9583858400005A94                   7598          DC    X'9583858400005A948594828599606E99' nced...member..r
0000552A 85A29700D4859482                   7599          DC    X'85A29700D48594828599406CA24089A2' esp.Member..s.is
0000553A 40938581A5899587                   7600          DC    X'40938581A589958740879996A497406C' .leaving.group..
0000554A A20085A797938983                   7601          DC    X'A20085A79793898389A3409485948285' s.explicit.membe
0000555A 9940938581A58500                   7602          DC    X'9940938581A585009483879997606EA2' r.leave.mcgrp..s
0000556A A381A385407E7E40                   7603          DC    X'A381A385407E7E40D9C46DD2C1C6D2C1' tate....RD.KAFKA
0000557A 6DD4D6C3D26DC3C7                   7604          DC    X'6DD4D6C3D26DC3C7D9D76DE2E3C1E3C5' .MOCK.CGRP.STATE
0000558A 6DD1D6C9D5C9D5C7                   7605          DC    X'6DD1D6C9D5C9D5C700005A4D4D4D5094' .JOINING.......m
0000559A 83879997606E9485                   7606          DC    X'83879997606E948594828599A25D606E' cgrp..members...
000055AA A398886D868999A2                   7607          DC    X'A398886D868999A2A35D407E7E404D4D' tqh.first.......
000055BA 4DA5968984405C5D                   7608          DC    X'4DA5968984405C5DF05D5D5D0000C396' .void...0.....Co
000055CA 95A2A49485994087                   7609          DC    X'95A2A494859940879996A497406CA240' nsumer.group..s.
000055DA A689A388406C8440                   7610          DC    X'A689A388406C84409485948285994DA2' with..d.member.s
000055EA 5D4089A240998582                   7611          DC    X'5D4089A2409985828193819583899587' ..is.rebalancing
000055FA 7A4085938583A385                   7612          DC    X'7A4085938583A3858440938581848599' ..elected.leader
0000560A 4089A2406CA26B40                   7613          DC    X'4089A2406CA26B40878595859981A389' .is..s..generati
0000561A 9695408984406C84                   7614          DC    X'9695408984406C8400009985A297606E' on.id..d..resp..
0000562A 999282A4866D9985                   7615          DC    X'999282A4866D9985988884994BC19789' rkbuf.reqhdr.Api
0000563A D285A8407E7E40F1                   7616          DC    X'D285A8407E7E40F1F1005A99846D9281' Key....11..rd.ka
0000564A 869281976DA2A399                   7617          DC    X'869281976DA2A3996D8394976DA2A399' fkap.str.cmp.str
0000565A 4D40948594828599                   7618          DC    X'4D40948594828599F2606E979996A396' ..member2..proto
0000566A A2ADF0BD4B958194                   7619          DC    X'A2ADF0BD4B958194856B409483879997' s.0..name..mcgrp
0000567A 606E979996A39683                   7620          DC    X'606E979996A3968396936D958194855D' ..protocol.name.
0000568A 0000938581848599                   7621          DC    X'00009385818485994085938583A38584' ..leader.elected
0000569A 6B40A68189A38995                   7622          DC    X'6B40A68189A389958740869699408193' ..waiting.for.al
000056AA 9340948594828599                   7623          DC    X'9340948594828599A240A39640A2A895' l.members.to.syn
000056BA 8300D49683924083                   7624          DC    X'8300D496839240839695A2A494859940' c.Mock.consumer.
000056CA 879996A497406CA2                   7625          DC    X'879996A497406CA240C6E2D440A38994' group..s.FSM.tim
000056DA 8596A4A340899540                   7626          DC    X'8596A4A340899540A2A381A385406CA2' eout.in.state..s
000056EA 0000959640948594                   7627          DC    X'0000959640948594828599A240919689' ..no.members.joi
000056FA 95858400A3899485                   7628          DC    X'95858400A3899485844096A4A340A681' ned.timed.out.wa
0000570A 89A3899587408696                   7629          DC    X'89A38995874086969940819393409485' iting.for.all.me
0000571A 94828599A240A396                   7630          DC    X'94828599A240A39640A2A89583889996' mbers.to.synchro
0000572A 9589A9850000A389                   7631          DC    X'9589A9850000A3899485844096A4A340' nize..timed.out.
0000573A A68189A389958740                   7632          DC    X'A68189A3899587408696994081939340' waiting.for.all.
0000574A 948594828599A240                   7633          DC    X'948594828599A240A39640998560D196' members.to.re.Jo
0000575A 899540969940D385                   7634          DC    X'899540969940D38581A5850094838799' in.or.Leave.mcgr
0000576A 97606E9485948285                   7635          DC    X'97606E9485948285996D8395A3406E40' p..member.cnt...
0000577A F0006C9700009485                   7636          DC    X'F0006C97000094859482859940919689' 0..p..member.joi
0000578A 9500D48594828599                   7637          DC    X'9500D48594828599406CA240A285A2A2' n.Member..s.sess
0000579A 89969540A3899485                   7638          DC    X'89969540A3899485844096A4A3408696' ion.timed.out.fo
000057AA 9940879996A49740                   7639          DC    X'9940879996A497406CA2000094859482' r.group..s..memb
000057BA 859940A389948596                   7640          DC    X'859940A389948596A4A30000D7999684' er.timeout..Prod
000057CA A4838500C685A383                   7641          DC    X'A4838500C685A3838800D68686A285A3' uce.Fetch.Offset
000057DA 0000D485A3818481                   7642          DC    X'0000D485A3818481A3810000D3858184' ..Metadata..Lead
000057EA 8599C19584C9A299                   7643          DC    X'8599C19584C9A2990000E2A39697D985' erAndIsr..StopRe
                                                                                                                           Page  155 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000057FA 979389838100E497                   7644          DC    X'979389838100E4978481A385D485A381' plica.UpdateMeta
0000580A 8481A3810000C396                   7645          DC    X'8481A3810000C39695A3999693938584' data..Controlled
0000581A E288A4A38496A695                   7646          DC    X'E288A4A38496A6950000D68686A285A3' Shutdown..Offset
0000582A C396949489A30000                   7647          DC    X'C396949489A30000D68686A285A3C685' Commit..OffsetFe
0000583A A3838800C6899584                   7648          DC    X'A3838800C6899584C396969984899581' tch.FindCoordina
0000584A A3969900D1968995                   7649          DC    X'A3969900D1968995C79996A49700C885' tor.JoinGroup.He
0000585A 8199A3828581A300                   7650          DC    X'8199A3828581A300D38581A585C79996' artbeat.LeaveGro
0000586A A4970000E2A89583                   7651          DC    X'A4970000E2A89583C79996A49700C485' up..SyncGroup.De
0000587A A28399898285C799                   7652          DC    X'A28399898285C79996A497A20000D389' scribeGroups..Li
0000588A A2A3C79996A497A2                   7653          DC    X'A2A3C79996A497A20000E281A293C881' stGroups..SaslHa
0000589A 9584A28881928500                   7654          DC    X'9584A28881928500C19789E58599A289' ndshake.ApiVersi
000058AA 96950000C3998581                   7655          DC    X'96950000C3998581A385E396978983A2' on..CreateTopics
000058BA 0000C4859385A385                   7656          DC    X'0000C4859385A385E396978983A20000' ..DeleteTopics..
000058CA C4859385A385D985                   7657          DC    X'C4859385A385D98583969984A200C995' DeleteRecords.In
000058DA 89A3D7999684A483                   7658          DC    X'89A3D7999684A4838599C9840000D686' itProducerId..Of
000058EA 86A285A3C69699D3                   7659          DC    X'86A285A3C69699D38581848599C59796' fsetForLeaderEpo
000058FA 83880000C18484D7                   7660          DC    X'83880000C18484D78199A389A3899695' ch..AddPartition
0000590A A2E396E3A7950000                   7661          DC    X'A2E396E3A7950000C18484D68686A285' sToTxn..AddOffse
0000591A A3A2E396E3A79500                   7662          DC    X'A3A2E396E3A79500C59584E3A7950000' tsToTxn.EndTxn..
0000592A E69989A385E3A795                   7663          DC    X'E69989A385E3A795D48199928599A200' WriteTxnMarkers.
0000593A E3A795D68686A285                   7664          DC    X'E3A795D68686A285A3C396949489A300' TxnOffsetCommit.
0000594A C485A28399898285                   7665          DC    X'C485A28399898285C18393A20000C399' DescribeAcls..Cr
0000595A 8581A385C18393A2                   7666          DC    X'8581A385C18393A20000C4859385A385' eateAcls..Delete
0000596A C18393A20000C485                   7667          DC    X'C18393A20000C485A28399898285C396' Acls..DescribeCo
0000597A 95868987A200C193                   7668          DC    X'95868987A200C193A38599C396958689' nfigs.AlterConfi
0000598A 87A20000C193A385                   7669          DC    X'87A20000C193A38599D9859793898381' gs..AlterReplica
0000599A D39687C48999A200                   7670          DC    X'D39687C48999A200C485A28399898285' LogDirs.Describe
000059AA D39687C48999A200                   7671          DC    X'D39687C48999A200E281A293C1A4A388' LogDirs.SaslAuth
000059BA 8595A3898381A385                   7672          DC    X'8595A3898381A3850000C3998581A385' enticate..Create
000059CA D78199A389A38996                   7673          DC    X'D78199A389A3899695A20000C3998581' Partitions..Crea
000059DA A385C48593858781                   7674          DC    X'A385C48593858781A3899695E3969285' teDelegationToke
000059EA 9500D9859585A6C4                   7675          DC    X'9500D9859585A6C48593858781A38996' n.RenewDelegatio
000059FA 95E3969285950000                   7676          DC    X'95E3969285950000C5A797899985C485' nToken..ExpireDe
00005A0A 93858781A3899695                   7677          DC    X'93858781A3899695E39692859500C485' legationToken.De
00005A1A A28399898285C485                   7678          DC    X'A28399898285C48593858781A3899695' scribeDelegation
00005A2A E39692859500C485                   7679          DC    X'E39692859500C4859385A385C79996A4' Token.DeleteGrou
00005A3A 97A20000C5938583                   7680          DC    X'97A20000C5938583A3D38581848599A2' ps..ElectLeaders
00005A4A D98598A485A2A300                   7681          DC    X'D98598A485A2A300C995839985948595' Request.Incremen
00005A5A A38193C193A38599                   7682          DC    X'A38193C193A38599C39695868987A2D9' talAlterConfigsR
00005A6A 8598A485A2A30000                   7683          DC    X'8598A485A2A30000C193A38599D78199' equest..AlterPar
00005A7A A389A3899695D985                   7684          DC    X'A389A3899695D98581A2A28987959485' titionReassignme
00005A8A 95A3A2D98598A485                   7685          DC    X'95A3A2D98598A485A2A30000D389A2A3' ntsRequest..List
00005A9A D78199A389A38996                   7686          DC    X'D78199A389A3899695D98581A2A28987' PartitionReassig
00005AAA 95948595A3A2D985                   7687          DC    X'95948595A3A2D98598A485A2A300D686' nmentsRequest.Of
00005ABA 86A285A3C4859385                   7688          DC    X'86A285A3C4859385A385D98598A485A2' fsetDeleteReques
00005ACA A300C485A2839989                   7689          DC    X'A300C485A28399898285C393898595A3' t.DescribeClient
00005ADA D8A496A381A2D985                   7690          DC    X'D8A496A381A2D98598A485A2A300C193' QuotasRequest.Al
00005AEA A38599C393898595                   7691          DC    X'A38599C393898595A3D8A496A381A2D9' terClientQuotasR
00005AFA 8598A485A2A30000                   7692          DC    X'8598A485A2A30000C485A28399898285' equest..Describe
00005B0A E4A28599E2839981                   7693          DC    X'E4A28599E283998194C39985848595A3' UserScramCredent
00005B1A 898193A2D98598A4                   7694          DC    X'898193A2D98598A485A2A300C193A385' ialsRequest.Alte
00005B2A 99E4A28599E28399                   7695          DC    X'99E4A28599E283998194C39985848595' rUserScramCreden
                                                                                                                           Page  156 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005B3A A3898193A2D98598                   7696          DC    X'A3898193A2D98598A485A2A30000E596' tialsRequest..Vo
00005B4A A385D98598A485A2                   7697          DC    X'A385D98598A485A2A300C285878995D8' teRequest.BeginQ
00005B5A A49699A494C59796                   7698          DC    X'A49699A494C597968388D98598A485A2' uorumEpochReques
00005B6A A300C59584D8A496                   7699          DC    X'A300C59584D8A49699A494C597968388' t.EndQuorumEpoch
00005B7A D98598A485A2A300                   7700          DC    X'D98598A485A2A300C485A28399898285' Request.Describe
00005B8A D8A49699A494D985                   7701          DC    X'D8A49699A494D98598A485A2A300C193' QuorumRequest.Al
00005B9A A38599C9A299D985                   7702          DC    X'A38599C9A299D98598A485A2A300E497' terIsrRequest.Up
00005BAA 8481A385C68581A3                   7703          DC    X'8481A385C68581A3A49985A2D98598A4' dateFeaturesRequ
00005BBA 85A2A300C595A585                   7704          DC    X'85A2A300C595A58593969785D98598A4' est.EnvelopeRequ
00005BCA 85A2A30095969585                   7705          DC    X'85A2A30095969585000087A989970000' est.none..gzip..
00005BDA A295819797A80000                   7706          DC    X'A295819797A8000093A9F400A9A2A384' snappy..lz4.zstd
00005BEA 0000899588859989                   7707          DC    X'0000899588859989A300839695868987' ..inherit.config
00005BFA A499858400009385                   7708          DC    X'A4998584000093858199958584008995' ured..learned.in
00005C0A A385999581930000                   7709          DC    X'A3859995819300009396878983819300' ternal..logical.
00005C1A C99589A30000E385                   7710          DC    X'C99589A30000E3859994899581A38500' Init..Terminate.
00005C2A C681A38193C59999                   7711          DC    X'C681A38193C5999996990000D98598A4' FatalError..Requ
00005C3A 85A2A3D7C9C40000                   7712          DC    X'85A2A3D7C9C40000E68189A3E3998195' estPID..WaitTran
00005C4A A2979699A300E681                   7713          DC    X'A2979699A300E68189A3D7C9C400C1A2' sport.WaitPID.As
00005C5A A289879585840000                   7714          DC    X'A289879585840000C499818995D985A2' signed..DrainRes
00005C6A 85A30000C4998189                   7715          DC    X'85A30000C499818995C2A4949700D985' et..DrainBump.Re
00005C7A 8184A8D596A3C183                   7716          DC    X'8184A8D596A3C18392858400D9858184' adyNotAcked.Read
00005C8A A800C995E3998195                   7717          DC    X'A800C995E3998195A28183A389969500' y.InTransaction.
00005C9A C285878995C39694                   7718          DC    X'C285878995C396949489A300C3969494' BeginCommit.Comm
00005CAA 89A3A3899587E399                   7719          DC    X'89A3A3899587E3998195A28183A38996' ittingTransactio
00005CBA 9500C396949489A3                   7720          DC    X'9500C396949489A3D596A3C183928584' n.CommitNotAcked
00005CCA 0000C1829699A389                   7721          DC    X'0000C1829699A3899587E3998195A281' ..AbortingTransa
00005CDA 83A389969500C182                   7722          DC    X'83A389969500C1829699A38584D596A3' ction.AbortedNot
00005CEA C18392858400C182                   7723          DC    X'C18392858400C1829699A381829385C5' Acked.AbortableE
00005CFA 999996990000C594                   7724          DC    X'999996990000C59497A3A800D1968995' rror..Empty.Join
00005D0A 89958700E2A89583                   7725          DC    X'89958700E2A8958389958700D9858281' ing.Syncing.Reba
00005D1A 9381958389958700                   7726          DC    X'9381958389958700E4970000'         lancing.Up..
                                            7727 @Ecrc_table ALIAS X'8399836DA381829385'
                                            7728          EXTRN @Ecrc_table
                                            7729 *
                                            7730 *
                                            7731 *   Re-entrant Data Initialization Section
                                            7732 *
                                            7733 @@INIT@  ALIAS C'rdkafka_mock_cgrp:'
00005D28                00005D28 00001108   7734 @@INIT@  CSECT
                                            7735 @@INIT@  AMODE ANY
                                            7736 @@INIT@  RMODE ANY
00005D28 05                                 7737          DC    XL1'5'
00005D29 000000                             7738          DC    AL3(0)
00005D2C 00000120                           7739          DC    AL4(288)
00005D30 00000000                           7740          DC    4X'00'
00005D34 00000000                           7741          DC    Q(@@STATIC)
00005D38 00000000                           7742          DC    X'00000000'
00005D3C 00000001                           7743          DC    X'00000001'
00005D40 00000000                           7744          DC    X'00000000'
00005D44 000000FF                           7745          DC    X'000000FF'
00005D48 0102039C09867F97                   7746          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00005D58 1112139D85088718                   7747          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
                                                                                                                           Page  157 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005D68 818283840A171B88                   7748          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00005D78 9116939495960498                   7749          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00005D88 A0E2E4E0E1E3E5E7                   7750          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00005D98 E9EAEBE8EDEEEFEC                   7751          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00005DA8 2FC2C4C0C1C3C5C7                   7752          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00005DB8 C9CACBC8CDCECFCC                   7753          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00005DC8 6162636465666768                   7754          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00005DD8 6A6B6C6D6E6F7071                   7755          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00005DE8 7E73747576777879                   7756          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00005DF8 A3A5B7A9A7B6BCBD                   7757          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00005E08 4142434445464748                   7758          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00005E18 4A4B4C4D4E4F5051                   7759          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00005E28 F753545556575859                   7760          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00005E38 3132333435363738                   7761          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            7762 *
00005E48 05                                 7763          DC    XL1'5'
00005E49 000000                             7764          DC    AL3(0)
00005E4C 000001E0                           7765          DC    AL4(480)
00005E50 00000000                           7766          DC    4X'00'
00005E54 00000000                           7767          DC    Q(@@STATIC)
00005E58 00000000                           7768          DC    X'00000000'
00005E5C 00000101                           7769          DC    X'00000101'
00005E60 00000000                           7770          DC    X'00000000'
00005E64 000000A0                           7771          DC    X'000000A0'
00005E68 010203372D2E2F16                   7772          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00005E78 1112133C3D322618                   7773          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00005E88 5A7F7B5B6C507D4D                   7774          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00005E98 F1F2F3F4F5F6F7F8                   7775          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00005EA8 C1C2C3C4C5C6C7C8                   7776          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00005EB8 D8D9E2E3E4E5E6E7                   7777          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00005EC8 8182838485868788                   7778          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00005ED8 9899A2A3A4A5A6A7                   7779          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00005EE8 2122232425061728                   7780          DC    X'2122232425061728292A2B2C090A1B30' ................
00005EF8 311A333435360838                   7781          DC    X'311A333435360838393A3B04143EFF80' ................
                                            7782 *
00005F08 05                                 7783          DC    XL1'5'
00005F09 000000                             7784          DC    AL3(0)
00005F0C 00000208                           7785          DC    AL4(520)
00005F10 00000000                           7786          DC    4X'00'
00005F14 00000000                           7787          DC    Q(@@STATIC)
00005F18 00000000                           7788          DC    X'00000000'
00005F1C 000001C0                           7789          DC    X'000001C0'
00005F20 00000000                           7790          DC    X'00000000'
00005F24 00000001                           7791          DC    X'00000001'
00005F28 8A40404040404040                   7792          DC    X'8A40404040404040'                 ........
                                            7793 *
00005F30 05                                 7794          DC    XL1'5'
00005F31 000000                             7795          DC    AL3(0)
00005F34 00000230                           7796          DC    AL4(560)
00005F38 00000000                           7797          DC    4X'00'
00005F3C 00000000                           7798          DC    Q(@@STATIC)
00005F40 00000000                           7799          DC    X'00000000'
                                                                                                                           Page  158 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00005F44 000001E0                           7800          DC    X'000001E0'
00005F48 00000000                           7801          DC    X'00000000'
00005F4C 00000001                           7802          DC    X'00000001'
00005F50 8B40404040404040                   7803          DC    X'8B40404040404040'                 ........
                                            7804 *
00005F58 0D                                 7805          DC    XL1'D'
00005F59 000000                             7806          DC    AL3(0)
00005F5C 00000258                           7807          DC    AL4(600)
00005F60 00000000                           7808          DC    4X'00'
00005F64 00000000                           7809          DC    Q(@@STATIC)
00005F68 00000000                           7810          DC    X'00000000'
00005F6C 00000220                           7811          DC    X'00000220'
00005F70 0000000000005128                   7812          DC    ADL8(@DATA)
00005F78 00000000                           7813          DC    X'00000000'
00005F7C 0000069E                           7814          DC    X'0000069E'
                                            7815 *
00005F80 0D                                 7816          DC    XL1'D'
00005F81 000000                             7817          DC    AL3(0)
00005F84 00000280                           7818          DC    AL4(640)
00005F88 00000000                           7819          DC    4X'00'
00005F8C 00000000                           7820          DC    Q(@@STATIC)
00005F90 00000000                           7821          DC    X'00000000'
00005F94 00000228                           7822          DC    X'00000228'
00005F98 0000000000005128                   7823          DC    ADL8(@DATA)
00005FA0 00000000                           7824          DC    X'00000000'
00005FA4 000006A6                           7825          DC    X'000006A6'
                                            7826 *
00005FA8 0D                                 7827          DC    XL1'D'
00005FA9 000000                             7828          DC    AL3(0)
00005FAC 000002A8                           7829          DC    AL4(680)
00005FB0 00000000                           7830          DC    4X'00'
00005FB4 00000000                           7831          DC    Q(@@STATIC)
00005FB8 00000000                           7832          DC    X'00000000'
00005FBC 00000230                           7833          DC    X'00000230'
00005FC0 0000000000005128                   7834          DC    ADL8(@DATA)
00005FC8 00000000                           7835          DC    X'00000000'
00005FCC 000006AC                           7836          DC    X'000006AC'
                                            7837 *
00005FD0 0D                                 7838          DC    XL1'D'
00005FD1 000000                             7839          DC    AL3(0)
00005FD4 000002D0                           7840          DC    AL4(720)
00005FD8 00000000                           7841          DC    4X'00'
00005FDC 00000000                           7842          DC    Q(@@STATIC)
00005FE0 00000000                           7843          DC    X'00000000'
00005FE4 00000238                           7844          DC    X'00000238'
00005FE8 0000000000005128                   7845          DC    ADL8(@DATA)
00005FF0 00000000                           7846          DC    X'00000000'
00005FF4 000006B4                           7847          DC    X'000006B4'
                                            7848 *
00005FF8 0D                                 7849          DC    XL1'D'
00005FF9 000000                             7850          DC    AL3(0)
00005FFC 000002F8                           7851          DC    AL4(760)
                                                                                                                           Page  159 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006000 00000000                           7852          DC    4X'00'
00006004 00000000                           7853          DC    Q(@@STATIC)
00006008 00000000                           7854          DC    X'00000000'
0000600C 00000240                           7855          DC    X'00000240'
00006010 0000000000005128                   7856          DC    ADL8(@DATA)
00006018 00000000                           7857          DC    X'00000000'
0000601C 000006BE                           7858          DC    X'000006BE'
                                            7859 *
00006020 0D                                 7860          DC    XL1'D'
00006021 000000                             7861          DC    AL3(0)
00006024 00000320                           7862          DC    AL4(800)
00006028 00000000                           7863          DC    4X'00'
0000602C 00000000                           7864          DC    Q(@@STATIC)
00006030 00000000                           7865          DC    X'00000000'
00006034 00000248                           7866          DC    X'00000248'
00006038 0000000000005128                   7867          DC    ADL8(@DATA)
00006040 00000000                           7868          DC    X'00000000'
00006044 000006CC                           7869          DC    X'000006CC'
                                            7870 *
00006048 0D                                 7871          DC    XL1'D'
00006049 000000                             7872          DC    AL3(0)
0000604C 00000348                           7873          DC    AL4(840)
00006050 00000000                           7874          DC    4X'00'
00006054 00000000                           7875          DC    Q(@@STATIC)
00006058 00000000                           7876          DC    X'00000000'
0000605C 00000250                           7877          DC    X'00000250'
00006060 0000000000005128                   7878          DC    ADL8(@DATA)
00006068 00000000                           7879          DC    X'00000000'
0000606C 000006D8                           7880          DC    X'000006D8'
                                            7881 *
00006070 0D                                 7882          DC    XL1'D'
00006071 000000                             7883          DC    AL3(0)
00006074 00000370                           7884          DC    AL4(880)
00006078 00000000                           7885          DC    4X'00'
0000607C 00000000                           7886          DC    Q(@@STATIC)
00006080 00000000                           7887          DC    X'00000000'
00006084 00000258                           7888          DC    X'00000258'
00006088 0000000000005128                   7889          DC    ADL8(@DATA)
00006090 00000000                           7890          DC    X'00000000'
00006094 000006E8                           7891          DC    X'000006E8'
                                            7892 *
00006098 0D                                 7893          DC    XL1'D'
00006099 000000                             7894          DC    AL3(0)
0000609C 00000398                           7895          DC    AL4(920)
000060A0 00000000                           7896          DC    4X'00'
000060A4 00000000                           7897          DC    Q(@@STATIC)
000060A8 00000000                           7898          DC    X'00000000'
000060AC 00000260                           7899          DC    X'00000260'
000060B0 0000000000005128                   7900          DC    ADL8(@DATA)
000060B8 00000000                           7901          DC    X'00000000'
000060BC 000006FC                           7902          DC    X'000006FC'
                                            7903 *
                                                                                                                           Page  160 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000060C0 0D                                 7904          DC    XL1'D'
000060C1 000000                             7905          DC    AL3(0)
000060C4 000003C0                           7906          DC    AL4(960)
000060C8 00000000                           7907          DC    4X'00'
000060CC 00000000                           7908          DC    Q(@@STATIC)
000060D0 00000000                           7909          DC    X'00000000'
000060D4 00000268                           7910          DC    X'00000268'
000060D8 0000000000005128                   7911          DC    ADL8(@DATA)
000060E0 00000000                           7912          DC    X'00000000'
000060E4 0000070A                           7913          DC    X'0000070A'
                                            7914 *
000060E8 0D                                 7915          DC    XL1'D'
000060E9 000000                             7916          DC    AL3(0)
000060EC 000003E8                           7917          DC    AL4(1000)
000060F0 00000000                           7918          DC    4X'00'
000060F4 00000000                           7919          DC    Q(@@STATIC)
000060F8 00000000                           7920          DC    X'00000000'
000060FC 00000270                           7921          DC    X'00000270'
00006100 0000000000005128                   7922          DC    ADL8(@DATA)
00006108 00000000                           7923          DC    X'00000000'
0000610C 00000716                           7924          DC    X'00000716'
                                            7925 *
00006110 0D                                 7926          DC    XL1'D'
00006111 000000                             7927          DC    AL3(0)
00006114 00000410                           7928          DC    AL4(1040)
00006118 00000000                           7929          DC    4X'00'
0000611C 00000000                           7930          DC    Q(@@STATIC)
00006120 00000000                           7931          DC    X'00000000'
00006124 00000278                           7932          DC    X'00000278'
00006128 0000000000005128                   7933          DC    ADL8(@DATA)
00006130 00000000                           7934          DC    X'00000000'
00006134 00000726                           7935          DC    X'00000726'
                                            7936 *
00006138 0D                                 7937          DC    XL1'D'
00006139 000000                             7938          DC    AL3(0)
0000613C 00000438                           7939          DC    AL4(1080)
00006140 00000000                           7940          DC    4X'00'
00006144 00000000                           7941          DC    Q(@@STATIC)
00006148 00000000                           7942          DC    X'00000000'
0000614C 00000280                           7943          DC    X'00000280'
00006150 0000000000005128                   7944          DC    ADL8(@DATA)
00006158 00000000                           7945          DC    X'00000000'
0000615C 00000730                           7946          DC    X'00000730'
                                            7947 *
00006160 0D                                 7948          DC    XL1'D'
00006161 000000                             7949          DC    AL3(0)
00006164 00000460                           7950          DC    AL4(1120)
00006168 00000000                           7951          DC    4X'00'
0000616C 00000000                           7952          DC    Q(@@STATIC)
00006170 00000000                           7953          DC    X'00000000'
00006174 00000288                           7954          DC    X'00000288'
00006178 0000000000005128                   7955          DC    ADL8(@DATA)
                                                                                                                           Page  161 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006180 00000000                           7956          DC    X'00000000'
00006184 0000073A                           7957          DC    X'0000073A'
                                            7958 *
00006188 0D                                 7959          DC    XL1'D'
00006189 000000                             7960          DC    AL3(0)
0000618C 00000488                           7961          DC    AL4(1160)
00006190 00000000                           7962          DC    4X'00'
00006194 00000000                           7963          DC    Q(@@STATIC)
00006198 00000000                           7964          DC    X'00000000'
0000619C 00000290                           7965          DC    X'00000290'
000061A0 0000000000005128                   7966          DC    ADL8(@DATA)
000061A8 00000000                           7967          DC    X'00000000'
000061AC 00000746                           7968          DC    X'00000746'
                                            7969 *
000061B0 0D                                 7970          DC    XL1'D'
000061B1 000000                             7971          DC    AL3(0)
000061B4 000004B0                           7972          DC    AL4(1200)
000061B8 00000000                           7973          DC    4X'00'
000061BC 00000000                           7974          DC    Q(@@STATIC)
000061C0 00000000                           7975          DC    X'00000000'
000061C4 00000298                           7976          DC    X'00000298'
000061C8 0000000000005128                   7977          DC    ADL8(@DATA)
000061D0 00000000                           7978          DC    X'00000000'
000061D4 00000750                           7979          DC    X'00000750'
                                            7980 *
000061D8 0D                                 7981          DC    XL1'D'
000061D9 000000                             7982          DC    AL3(0)
000061DC 000004D8                           7983          DC    AL4(1240)
000061E0 00000000                           7984          DC    4X'00'
000061E4 00000000                           7985          DC    Q(@@STATIC)
000061E8 00000000                           7986          DC    X'00000000'
000061EC 000002A0                           7987          DC    X'000002A0'
000061F0 0000000000005128                   7988          DC    ADL8(@DATA)
000061F8 00000000                           7989          DC    X'00000000'
000061FC 00000760                           7990          DC    X'00000760'
                                            7991 *
00006200 0D                                 7992          DC    XL1'D'
00006201 000000                             7993          DC    AL3(0)
00006204 00000500                           7994          DC    AL4(1280)
00006208 00000000                           7995          DC    4X'00'
0000620C 00000000                           7996          DC    Q(@@STATIC)
00006210 00000000                           7997          DC    X'00000000'
00006214 000002A8                           7998          DC    X'000002A8'
00006218 0000000000005128                   7999          DC    ADL8(@DATA)
00006220 00000000                           8000          DC    X'00000000'
00006224 0000076C                           8001          DC    X'0000076C'
                                            8002 *
00006228 0D                                 8003          DC    XL1'D'
00006229 000000                             8004          DC    AL3(0)
0000622C 00000528                           8005          DC    AL4(1320)
00006230 00000000                           8006          DC    4X'00'
00006234 00000000                           8007          DC    Q(@@STATIC)
                                                                                                                           Page  162 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006238 00000000                           8008          DC    X'00000000'
0000623C 000002B0                           8009          DC    X'000002B0'
00006240 0000000000005128                   8010          DC    ADL8(@DATA)
00006248 00000000                           8011          DC    X'00000000'
0000624C 0000077A                           8012          DC    X'0000077A'
                                            8013 *
00006250 0D                                 8014          DC    XL1'D'
00006251 000000                             8015          DC    AL3(0)
00006254 00000550                           8016          DC    AL4(1360)
00006258 00000000                           8017          DC    4X'00'
0000625C 00000000                           8018          DC    Q(@@STATIC)
00006260 00000000                           8019          DC    X'00000000'
00006264 000002B8                           8020          DC    X'000002B8'
00006268 0000000000005128                   8021          DC    ADL8(@DATA)
00006270 00000000                           8022          DC    X'00000000'
00006274 00000786                           8023          DC    X'00000786'
                                            8024 *
00006278 0D                                 8025          DC    XL1'D'
00006279 000000                             8026          DC    AL3(0)
0000627C 00000578                           8027          DC    AL4(1400)
00006280 00000000                           8028          DC    4X'00'
00006284 00000000                           8029          DC    Q(@@STATIC)
00006288 00000000                           8030          DC    X'00000000'
0000628C 000002C0                           8031          DC    X'000002C0'
00006290 0000000000005128                   8032          DC    ADL8(@DATA)
00006298 00000000                           8033          DC    X'00000000'
0000629C 00000794                           8034          DC    X'00000794'
                                            8035 *
000062A0 0D                                 8036          DC    XL1'D'
000062A1 000000                             8037          DC    AL3(0)
000062A4 000005A0                           8038          DC    AL4(1440)
000062A8 00000000                           8039          DC    4X'00'
000062AC 00000000                           8040          DC    Q(@@STATIC)
000062B0 00000000                           8041          DC    X'00000000'
000062B4 000002C8                           8042          DC    X'000002C8'
000062B8 0000000000005128                   8043          DC    ADL8(@DATA)
000062C0 00000000                           8044          DC    X'00000000'
000062C4 000007A2                           8045          DC    X'000007A2'
                                            8046 *
000062C8 0D                                 8047          DC    XL1'D'
000062C9 000000                             8048          DC    AL3(0)
000062CC 000005C8                           8049          DC    AL4(1480)
000062D0 00000000                           8050          DC    4X'00'
000062D4 00000000                           8051          DC    Q(@@STATIC)
000062D8 00000000                           8052          DC    X'00000000'
000062DC 000002D0                           8053          DC    X'000002D0'
000062E0 0000000000005128                   8054          DC    ADL8(@DATA)
000062E8 00000000                           8055          DC    X'00000000'
000062EC 000007B0                           8056          DC    X'000007B0'
                                            8057 *
000062F0 0D                                 8058          DC    XL1'D'
000062F1 000000                             8059          DC    AL3(0)
                                                                                                                           Page  163 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000062F4 000005F0                           8060          DC    AL4(1520)
000062F8 00000000                           8061          DC    4X'00'
000062FC 00000000                           8062          DC    Q(@@STATIC)
00006300 00000000                           8063          DC    X'00000000'
00006304 000002D8                           8064          DC    X'000002D8'
00006308 0000000000005128                   8065          DC    ADL8(@DATA)
00006310 00000000                           8066          DC    X'00000000'
00006314 000007C0                           8067          DC    X'000007C0'
                                            8068 *
00006318 0D                                 8069          DC    XL1'D'
00006319 000000                             8070          DC    AL3(0)
0000631C 00000618                           8071          DC    AL4(1560)
00006320 00000000                           8072          DC    4X'00'
00006324 00000000                           8073          DC    Q(@@STATIC)
00006328 00000000                           8074          DC    X'00000000'
0000632C 000002E0                           8075          DC    X'000002E0'
00006330 0000000000005128                   8076          DC    ADL8(@DATA)
00006338 00000000                           8077          DC    X'00000000'
0000633C 000007D6                           8078          DC    X'000007D6'
                                            8079 *
00006340 0D                                 8080          DC    XL1'D'
00006341 000000                             8081          DC    AL3(0)
00006344 00000640                           8082          DC    AL4(1600)
00006348 00000000                           8083          DC    4X'00'
0000634C 00000000                           8084          DC    Q(@@STATIC)
00006350 00000000                           8085          DC    X'00000000'
00006354 000002E8                           8086          DC    X'000002E8'
00006358 0000000000005128                   8087          DC    ADL8(@DATA)
00006360 00000000                           8088          DC    X'00000000'
00006364 000007EA                           8089          DC    X'000007EA'
                                            8090 *
00006368 0D                                 8091          DC    XL1'D'
00006369 000000                             8092          DC    AL3(0)
0000636C 00000668                           8093          DC    AL4(1640)
00006370 00000000                           8094          DC    4X'00'
00006374 00000000                           8095          DC    Q(@@STATIC)
00006378 00000000                           8096          DC    X'00000000'
0000637C 000002F0                           8097          DC    X'000002F0'
00006380 0000000000005128                   8098          DC    ADL8(@DATA)
00006388 00000000                           8099          DC    X'00000000'
0000638C 000007FA                           8100          DC    X'000007FA'
                                            8101 *
00006390 0D                                 8102          DC    XL1'D'
00006391 000000                             8103          DC    AL3(0)
00006394 00000690                           8104          DC    AL4(1680)
00006398 00000000                           8105          DC    4X'00'
0000639C 00000000                           8106          DC    Q(@@STATIC)
000063A0 00000000                           8107          DC    X'00000000'
000063A4 000002F8                           8108          DC    X'000002F8'
000063A8 0000000000005128                   8109          DC    ADL8(@DATA)
000063B0 00000000                           8110          DC    X'00000000'
000063B4 00000802                           8111          DC    X'00000802'
                                                                                                                           Page  164 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8112 *
000063B8 0D                                 8113          DC    XL1'D'
000063B9 000000                             8114          DC    AL3(0)
000063BC 000006B8                           8115          DC    AL4(1720)
000063C0 00000000                           8116          DC    4X'00'
000063C4 00000000                           8117          DC    Q(@@STATIC)
000063C8 00000000                           8118          DC    X'00000000'
000063CC 00000300                           8119          DC    X'00000300'
000063D0 0000000000005128                   8120          DC    ADL8(@DATA)
000063D8 00000000                           8121          DC    X'00000000'
000063DC 00000812                           8122          DC    X'00000812'
                                            8123 *
000063E0 0D                                 8124          DC    XL1'D'
000063E1 000000                             8125          DC    AL3(0)
000063E4 000006E0                           8126          DC    AL4(1760)
000063E8 00000000                           8127          DC    4X'00'
000063EC 00000000                           8128          DC    Q(@@STATIC)
000063F0 00000000                           8129          DC    X'00000000'
000063F4 00000308                           8130          DC    X'00000308'
000063F8 0000000000005128                   8131          DC    ADL8(@DATA)
00006400 00000000                           8132          DC    X'00000000'
00006404 00000822                           8133          DC    X'00000822'
                                            8134 *
00006408 0D                                 8135          DC    XL1'D'
00006409 000000                             8136          DC    AL3(0)
0000640C 00000708                           8137          DC    AL4(1800)
00006410 00000000                           8138          DC    4X'00'
00006414 00000000                           8139          DC    Q(@@STATIC)
00006418 00000000                           8140          DC    X'00000000'
0000641C 00000310                           8141          DC    X'00000310'
00006420 0000000000005128                   8142          DC    ADL8(@DATA)
00006428 00000000                           8143          DC    X'00000000'
0000642C 00000830                           8144          DC    X'00000830'
                                            8145 *
00006430 0D                                 8146          DC    XL1'D'
00006431 000000                             8147          DC    AL3(0)
00006434 00000730                           8148          DC    AL4(1840)
00006438 00000000                           8149          DC    4X'00'
0000643C 00000000                           8150          DC    Q(@@STATIC)
00006440 00000000                           8151          DC    X'00000000'
00006444 00000318                           8152          DC    X'00000318'
00006448 0000000000005128                   8153          DC    ADL8(@DATA)
00006450 00000000                           8154          DC    X'00000000'
00006454 0000083C                           8155          DC    X'0000083C'
                                            8156 *
00006458 0D                                 8157          DC    XL1'D'
00006459 000000                             8158          DC    AL3(0)
0000645C 00000758                           8159          DC    AL4(1880)
00006460 00000000                           8160          DC    4X'00'
00006464 00000000                           8161          DC    Q(@@STATIC)
00006468 00000000                           8162          DC    X'00000000'
0000646C 00000320                           8163          DC    X'00000320'
                                                                                                                           Page  165 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006470 0000000000005128                   8164          DC    ADL8(@DATA)
00006478 00000000                           8165          DC    X'00000000'
0000647C 00000848                           8166          DC    X'00000848'
                                            8167 *
00006480 0D                                 8168          DC    XL1'D'
00006481 000000                             8169          DC    AL3(0)
00006484 00000780                           8170          DC    AL4(1920)
00006488 00000000                           8171          DC    4X'00'
0000648C 00000000                           8172          DC    Q(@@STATIC)
00006490 00000000                           8173          DC    X'00000000'
00006494 00000328                           8174          DC    X'00000328'
00006498 0000000000005128                   8175          DC    ADL8(@DATA)
000064A0 00000000                           8176          DC    X'00000000'
000064A4 00000858                           8177          DC    X'00000858'
                                            8178 *
000064A8 0D                                 8179          DC    XL1'D'
000064A9 000000                             8180          DC    AL3(0)
000064AC 000007A8                           8181          DC    AL4(1960)
000064B0 00000000                           8182          DC    4X'00'
000064B4 00000000                           8183          DC    Q(@@STATIC)
000064B8 00000000                           8184          DC    X'00000000'
000064BC 00000330                           8185          DC    X'00000330'
000064C0 0000000000005128                   8186          DC    ADL8(@DATA)
000064C8 00000000                           8187          DC    X'00000000'
000064CC 00000866                           8188          DC    X'00000866'
                                            8189 *
000064D0 0D                                 8190          DC    XL1'D'
000064D1 000000                             8191          DC    AL3(0)
000064D4 000007D0                           8192          DC    AL4(2000)
000064D8 00000000                           8193          DC    4X'00'
000064DC 00000000                           8194          DC    Q(@@STATIC)
000064E0 00000000                           8195          DC    X'00000000'
000064E4 00000338                           8196          DC    X'00000338'
000064E8 0000000000005128                   8197          DC    ADL8(@DATA)
000064F0 00000000                           8198          DC    X'00000000'
000064F4 0000087A                           8199          DC    X'0000087A'
                                            8200 *
000064F8 0D                                 8201          DC    XL1'D'
000064F9 000000                             8202          DC    AL3(0)
000064FC 000007F8                           8203          DC    AL4(2040)
00006500 00000000                           8204          DC    4X'00'
00006504 00000000                           8205          DC    Q(@@STATIC)
00006508 00000000                           8206          DC    X'00000000'
0000650C 00000340                           8207          DC    X'00000340'
00006510 0000000000005128                   8208          DC    ADL8(@DATA)
00006518 00000000                           8209          DC    X'00000000'
0000651C 0000088A                           8210          DC    X'0000088A'
                                            8211 *
00006520 0D                                 8212          DC    XL1'D'
00006521 000000                             8213          DC    AL3(0)
00006524 00000820                           8214          DC    AL4(2080)
00006528 00000000                           8215          DC    4X'00'
                                                                                                                           Page  166 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
0000652C 00000000                           8216          DC    Q(@@STATIC)
00006530 00000000                           8217          DC    X'00000000'
00006534 00000348                           8218          DC    X'00000348'
00006538 0000000000005128                   8219          DC    ADL8(@DATA)
00006540 00000000                           8220          DC    X'00000000'
00006544 0000089C                           8221          DC    X'0000089C'
                                            8222 *
00006548 0D                                 8223          DC    XL1'D'
00006549 000000                             8224          DC    AL3(0)
0000654C 00000848                           8225          DC    AL4(2120)
00006550 00000000                           8226          DC    4X'00'
00006554 00000000                           8227          DC    Q(@@STATIC)
00006558 00000000                           8228          DC    X'00000000'
0000655C 00000350                           8229          DC    X'00000350'
00006560 0000000000005128                   8230          DC    ADL8(@DATA)
00006568 00000000                           8231          DC    X'00000000'
0000656C 000008AE                           8232          DC    X'000008AE'
                                            8233 *
00006570 0D                                 8234          DC    XL1'D'
00006571 000000                             8235          DC    AL3(0)
00006574 00000870                           8236          DC    AL4(2160)
00006578 00000000                           8237          DC    4X'00'
0000657C 00000000                           8238          DC    Q(@@STATIC)
00006580 00000000                           8239          DC    X'00000000'
00006584 00000358                           8240          DC    X'00000358'
00006588 0000000000005128                   8241          DC    ADL8(@DATA)
00006590 00000000                           8242          DC    X'00000000'
00006594 000008C4                           8243          DC    X'000008C4'
                                            8244 *
00006598 0D                                 8245          DC    XL1'D'
00006599 000000                             8246          DC    AL3(0)
0000659C 00000898                           8247          DC    AL4(2200)
000065A0 00000000                           8248          DC    4X'00'
000065A4 00000000                           8249          DC    Q(@@STATIC)
000065A8 00000000                           8250          DC    X'00000000'
000065AC 00000360                           8251          DC    X'00000360'
000065B0 0000000000005128                   8252          DC    ADL8(@DATA)
000065B8 00000000                           8253          DC    X'00000000'
000065BC 000008DA                           8254          DC    X'000008DA'
                                            8255 *
000065C0 0D                                 8256          DC    XL1'D'
000065C1 000000                             8257          DC    AL3(0)
000065C4 000008C0                           8258          DC    AL4(2240)
000065C8 00000000                           8259          DC    4X'00'
000065CC 00000000                           8260          DC    Q(@@STATIC)
000065D0 00000000                           8261          DC    X'00000000'
000065D4 00000368                           8262          DC    X'00000368'
000065D8 0000000000005128                   8263          DC    ADL8(@DATA)
000065E0 00000000                           8264          DC    X'00000000'
000065E4 000008F0                           8265          DC    X'000008F0'
                                            8266 *
000065E8 0D                                 8267          DC    XL1'D'
                                                                                                                           Page  167 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000065E9 000000                             8268          DC    AL3(0)
000065EC 000008E8                           8269          DC    AL4(2280)
000065F0 00000000                           8270          DC    4X'00'
000065F4 00000000                           8271          DC    Q(@@STATIC)
000065F8 00000000                           8272          DC    X'00000000'
000065FC 00000370                           8273          DC    X'00000370'
00006600 0000000000005128                   8274          DC    ADL8(@DATA)
00006608 00000000                           8275          DC    X'00000000'
0000660C 00000908                           8276          DC    X'00000908'
                                            8277 *
00006610 0D                                 8278          DC    XL1'D'
00006611 000000                             8279          DC    AL3(0)
00006614 00000910                           8280          DC    AL4(2320)
00006618 00000000                           8281          DC    4X'00'
0000661C 00000000                           8282          DC    Q(@@STATIC)
00006620 00000000                           8283          DC    X'00000000'
00006624 00000378                           8284          DC    X'00000378'
00006628 0000000000005128                   8285          DC    ADL8(@DATA)
00006630 00000000                           8286          DC    X'00000000'
00006634 00000916                           8287          DC    X'00000916'
                                            8288 *
00006638 0D                                 8289          DC    XL1'D'
00006639 000000                             8290          DC    AL3(0)
0000663C 00000938                           8291          DC    AL4(2360)
00006640 00000000                           8292          DC    4X'00'
00006644 00000000                           8293          DC    Q(@@STATIC)
00006648 00000000                           8294          DC    X'00000000'
0000664C 00000380                           8295          DC    X'00000380'
00006650 0000000000005128                   8296          DC    ADL8(@DATA)
00006658 00000000                           8297          DC    X'00000000'
0000665C 0000092A                           8298          DC    X'0000092A'
                                            8299 *
00006660 0D                                 8300          DC    XL1'D'
00006661 000000                             8301          DC    AL3(0)
00006664 00000960                           8302          DC    AL4(2400)
00006668 00000000                           8303          DC    4X'00'
0000666C 00000000                           8304          DC    Q(@@STATIC)
00006670 00000000                           8305          DC    X'00000000'
00006674 00000388                           8306          DC    X'00000388'
00006678 0000000000005128                   8307          DC    ADL8(@DATA)
00006680 00000000                           8308          DC    X'00000000'
00006684 0000094A                           8309          DC    X'0000094A'
                                            8310 *
00006688 0D                                 8311          DC    XL1'D'
00006689 000000                             8312          DC    AL3(0)
0000668C 00000988                           8313          DC    AL4(2440)
00006690 00000000                           8314          DC    4X'00'
00006694 00000000                           8315          DC    Q(@@STATIC)
00006698 00000000                           8316          DC    X'00000000'
0000669C 00000390                           8317          DC    X'00000390'
000066A0 0000000000005128                   8318          DC    ADL8(@DATA)
000066A8 00000000                           8319          DC    X'00000000'
                                                                                                                           Page  168 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000066AC 0000096E                           8320          DC    X'0000096E'
                                            8321 *
000066B0 0D                                 8322          DC    XL1'D'
000066B1 000000                             8323          DC    AL3(0)
000066B4 000009B0                           8324          DC    AL4(2480)
000066B8 00000000                           8325          DC    4X'00'
000066BC 00000000                           8326          DC    Q(@@STATIC)
000066C0 00000000                           8327          DC    X'00000000'
000066C4 00000398                           8328          DC    X'00000398'
000066C8 0000000000005128                   8329          DC    ADL8(@DATA)
000066D0 00000000                           8330          DC    X'00000000'
000066D4 00000990                           8331          DC    X'00000990'
                                            8332 *
000066D8 0D                                 8333          DC    XL1'D'
000066D9 000000                             8334          DC    AL3(0)
000066DC 000009D8                           8335          DC    AL4(2520)
000066E0 00000000                           8336          DC    4X'00'
000066E4 00000000                           8337          DC    Q(@@STATIC)
000066E8 00000000                           8338          DC    X'00000000'
000066EC 000003A0                           8339          DC    X'000003A0'
000066F0 0000000000005128                   8340          DC    ADL8(@DATA)
000066F8 00000000                           8341          DC    X'00000000'
000066FC 000009A4                           8342          DC    X'000009A4'
                                            8343 *
00006700 0D                                 8344          DC    XL1'D'
00006701 000000                             8345          DC    AL3(0)
00006704 00000A00                           8346          DC    AL4(2560)
00006708 00000000                           8347          DC    4X'00'
0000670C 00000000                           8348          DC    Q(@@STATIC)
00006710 00000000                           8349          DC    X'00000000'
00006714 000003A8                           8350          DC    X'000003A8'
00006718 0000000000005128                   8351          DC    ADL8(@DATA)
00006720 00000000                           8352          DC    X'00000000'
00006724 000009C0                           8353          DC    X'000009C0'
                                            8354 *
00006728 0D                                 8355          DC    XL1'D'
00006729 000000                             8356          DC    AL3(0)
0000672C 00000A28                           8357          DC    AL4(2600)
00006730 00000000                           8358          DC    4X'00'
00006734 00000000                           8359          DC    Q(@@STATIC)
00006738 00000000                           8360          DC    X'00000000'
0000673C 000003B0                           8361          DC    X'000003B0'
00006740 0000000000005128                   8362          DC    ADL8(@DATA)
00006748 00000000                           8363          DC    X'00000000'
0000674C 000009DA                           8364          DC    X'000009DA'
                                            8365 *
00006750 0D                                 8366          DC    XL1'D'
00006751 000000                             8367          DC    AL3(0)
00006754 00000A50                           8368          DC    AL4(2640)
00006758 00000000                           8369          DC    4X'00'
0000675C 00000000                           8370          DC    Q(@@STATIC)
00006760 00000000                           8371          DC    X'00000000'
                                                                                                                           Page  169 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006764 000003B8                           8372          DC    X'000003B8'
00006768 0000000000005128                   8373          DC    ADL8(@DATA)
00006770 00000000                           8374          DC    X'00000000'
00006774 000009FE                           8375          DC    X'000009FE'
                                            8376 *
00006778 0D                                 8377          DC    XL1'D'
00006779 000000                             8378          DC    AL3(0)
0000677C 00000A78                           8379          DC    AL4(2680)
00006780 00000000                           8380          DC    4X'00'
00006784 00000000                           8381          DC    Q(@@STATIC)
00006788 00000000                           8382          DC    X'00000000'
0000678C 000003C0                           8383          DC    X'000003C0'
00006790 0000000000005128                   8384          DC    ADL8(@DATA)
00006798 00000000                           8385          DC    X'00000000'
0000679C 00000A20                           8386          DC    X'00000A20'
                                            8387 *
000067A0 0D                                 8388          DC    XL1'D'
000067A1 000000                             8389          DC    AL3(0)
000067A4 00000AA0                           8390          DC    AL4(2720)
000067A8 00000000                           8391          DC    4X'00'
000067AC 00000000                           8392          DC    Q(@@STATIC)
000067B0 00000000                           8393          DC    X'00000000'
000067B4 000003C8                           8394          DC    X'000003C8'
000067B8 0000000000005128                   8395          DC    ADL8(@DATA)
000067C0 00000000                           8396          DC    X'00000000'
000067C4 00000A2C                           8397          DC    X'00000A2C'
                                            8398 *
000067C8 0D                                 8399          DC    XL1'D'
000067C9 000000                             8400          DC    AL3(0)
000067CC 00000AC8                           8401          DC    AL4(2760)
000067D0 00000000                           8402          DC    4X'00'
000067D4 00000000                           8403          DC    Q(@@STATIC)
000067D8 00000000                           8404          DC    X'00000000'
000067DC 000003D0                           8405          DC    X'000003D0'
000067E0 0000000000005128                   8406          DC    ADL8(@DATA)
000067E8 00000000                           8407          DC    X'00000000'
000067EC 00000A44                           8408          DC    X'00000A44'
                                            8409 *
000067F0 0D                                 8410          DC    XL1'D'
000067F1 000000                             8411          DC    AL3(0)
000067F4 00000AF0                           8412          DC    AL4(2800)
000067F8 00000000                           8413          DC    4X'00'
000067FC 00000000                           8414          DC    Q(@@STATIC)
00006800 00000000                           8415          DC    X'00000000'
00006804 000003D8                           8416          DC    X'000003D8'
00006808 0000000000005128                   8417          DC    ADL8(@DATA)
00006810 00000000                           8418          DC    X'00000000'
00006814 00000A5A                           8419          DC    X'00000A5A'
                                            8420 *
00006818 0D                                 8421          DC    XL1'D'
00006819 000000                             8422          DC    AL3(0)
0000681C 00000B18                           8423          DC    AL4(2840)
                                                                                                                           Page  170 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006820 00000000                           8424          DC    4X'00'
00006824 00000000                           8425          DC    Q(@@STATIC)
00006828 00000000                           8426          DC    X'00000000'
0000682C 000003E0                           8427          DC    X'000003E0'
00006830 0000000000005128                   8428          DC    ADL8(@DATA)
00006838 00000000                           8429          DC    X'00000000'
0000683C 00000A70                           8430          DC    X'00000A70'
                                            8431 *
00006840 0D                                 8432          DC    XL1'D'
00006841 000000                             8433          DC    AL3(0)
00006844 00000B40                           8434          DC    AL4(2880)
00006848 00000000                           8435          DC    4X'00'
0000684C 00000000                           8436          DC    Q(@@STATIC)
00006850 00000000                           8437          DC    X'00000000'
00006854 000003E8                           8438          DC    X'000003E8'
00006858 0000000000005128                   8439          DC    ADL8(@DATA)
00006860 00000000                           8440          DC    X'00000000'
00006864 00000A80                           8441          DC    X'00000A80'
                                            8442 *
00006868 0D                                 8443          DC    XL1'D'
00006869 000000                             8444          DC    AL3(0)
0000686C 00000B68                           8445          DC    AL4(2920)
00006870 00000000                           8446          DC    4X'00'
00006874 00000000                           8447          DC    Q(@@STATIC)
00006878 00000000                           8448          DC    X'00000000'
0000687C 000003F0                           8449          DC    X'000003F0'
00006880 0000000000005128                   8450          DC    ADL8(@DATA)
00006888 00000000                           8451          DC    X'00000000'
0000688C 00000A96                           8452          DC    X'00000A96'
                                            8453 *
00006890 0D                                 8454          DC    XL1'D'
00006891 000000                             8455          DC    AL3(0)
00006894 00000B90                           8456          DC    AL4(2960)
00006898 00000000                           8457          DC    4X'00'
0000689C 00000000                           8458          DC    Q(@@STATIC)
000068A0 00000000                           8459          DC    X'00000000'
000068A4 000004C0                           8460          DC    X'000004C0'
000068A8 0000000000005128                   8461          DC    ADL8(@DATA)
000068B0 00000000                           8462          DC    X'00000000'
000068B4 00000AA6                           8463          DC    X'00000AA6'
                                            8464 *
000068B8 0D                                 8465          DC    XL1'D'
000068B9 000000                             8466          DC    AL3(0)
000068BC 00000BB8                           8467          DC    AL4(3000)
000068C0 00000000                           8468          DC    4X'00'
000068C4 00000000                           8469          DC    Q(@@STATIC)
000068C8 00000000                           8470          DC    X'00000000'
000068CC 000004C8                           8471          DC    X'000004C8'
000068D0 0000000000005128                   8472          DC    ADL8(@DATA)
000068D8 00000000                           8473          DC    X'00000000'
000068DC 00000AAC                           8474          DC    X'00000AAC'
                                            8475 *
                                                                                                                           Page  171 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000068E0 0D                                 8476          DC    XL1'D'
000068E1 000000                             8477          DC    AL3(0)
000068E4 00000BE0                           8478          DC    AL4(3040)
000068E8 00000000                           8479          DC    4X'00'
000068EC 00000000                           8480          DC    Q(@@STATIC)
000068F0 00000000                           8481          DC    X'00000000'
000068F4 000004D0                           8482          DC    X'000004D0'
000068F8 0000000000005128                   8483          DC    ADL8(@DATA)
00006900 00000000                           8484          DC    X'00000000'
00006904 00000AB2                           8485          DC    X'00000AB2'
                                            8486 *
00006908 0D                                 8487          DC    XL1'D'
00006909 000000                             8488          DC    AL3(0)
0000690C 00000C08                           8489          DC    AL4(3080)
00006910 00000000                           8490          DC    4X'00'
00006914 00000000                           8491          DC    Q(@@STATIC)
00006918 00000000                           8492          DC    X'00000000'
0000691C 000004D8                           8493          DC    X'000004D8'
00006920 0000000000005128                   8494          DC    ADL8(@DATA)
00006928 00000000                           8495          DC    X'00000000'
0000692C 00000ABA                           8496          DC    X'00000ABA'
                                            8497 *
00006930 0D                                 8498          DC    XL1'D'
00006931 000000                             8499          DC    AL3(0)
00006934 00000C30                           8500          DC    AL4(3120)
00006938 00000000                           8501          DC    4X'00'
0000693C 00000000                           8502          DC    Q(@@STATIC)
00006940 00000000                           8503          DC    X'00000000'
00006944 000004E0                           8504          DC    X'000004E0'
00006948 0000000000005128                   8505          DC    ADL8(@DATA)
00006950 00000000                           8506          DC    X'00000000'
00006954 00000ABE                           8507          DC    X'00000ABE'
                                            8508 *
00006958 0D                                 8509          DC    XL1'D'
00006959 000000                             8510          DC    AL3(0)
0000695C 00000C58                           8511          DC    AL4(3160)
00006960 00000000                           8512          DC    4X'00'
00006964 00000000                           8513          DC    Q(@@STATIC)
00006968 00000000                           8514          DC    X'00000000'
0000696C 000004E8                           8515          DC    X'000004E8'
00006970 0000000000005128                   8516          DC    ADL8(@DATA)
00006978 00000000                           8517          DC    X'00000000'
0000697C 00000AC4                           8518          DC    X'00000AC4'
                                            8519 *
00006980 0D                                 8520          DC    XL1'D'
00006981 000000                             8521          DC    AL3(0)
00006984 00000C80                           8522          DC    AL4(3200)
00006988 00000000                           8523          DC    4X'00'
0000698C 00000000                           8524          DC    Q(@@STATIC)
00006990 00000000                           8525          DC    X'00000000'
00006994 00000510                           8526          DC    X'00000510'
00006998 0000000000005128                   8527          DC    ADL8(@DATA)
                                                                                                                           Page  172 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
000069A0 00000000                           8528          DC    X'00000000'
000069A4 00000ACC                           8529          DC    X'00000ACC'
                                            8530 *
000069A8 0D                                 8531          DC    XL1'D'
000069A9 000000                             8532          DC    AL3(0)
000069AC 00000CA8                           8533          DC    AL4(3240)
000069B0 00000000                           8534          DC    4X'00'
000069B4 00000000                           8535          DC    Q(@@STATIC)
000069B8 00000000                           8536          DC    X'00000000'
000069BC 00000518                           8537          DC    X'00000518'
000069C0 0000000000005128                   8538          DC    ADL8(@DATA)
000069C8 00000000                           8539          DC    X'00000000'
000069CC 00000AD8                           8540          DC    X'00000AD8'
                                            8541 *
000069D0 0D                                 8542          DC    XL1'D'
000069D1 000000                             8543          DC    AL3(0)
000069D4 00000CD0                           8544          DC    AL4(3280)
000069D8 00000000                           8545          DC    4X'00'
000069DC 00000000                           8546          DC    Q(@@STATIC)
000069E0 00000000                           8547          DC    X'00000000'
000069E4 00000520                           8548          DC    X'00000520'
000069E8 0000000000005128                   8549          DC    ADL8(@DATA)
000069F0 00000000                           8550          DC    X'00000000'
000069F4 00000AE0                           8551          DC    X'00000AE0'
                                            8552 *
000069F8 0D                                 8553          DC    XL1'D'
000069F9 000000                             8554          DC    AL3(0)
000069FC 00000CF8                           8555          DC    AL4(3320)
00006A00 00000000                           8556          DC    4X'00'
00006A04 00000000                           8557          DC    Q(@@STATIC)
00006A08 00000000                           8558          DC    X'00000000'
00006A0C 00000528                           8559          DC    X'00000528'
00006A10 0000000000005128                   8560          DC    ADL8(@DATA)
00006A18 00000000                           8561          DC    X'00000000'
00006A1C 00000AEA                           8562          DC    X'00000AEA'
                                            8563 *
00006A20 0D                                 8564          DC    XL1'D'
00006A21 000000                             8565          DC    AL3(0)
00006A24 00000D20                           8566          DC    AL4(3360)
00006A28 00000000                           8567          DC    4X'00'
00006A2C 00000000                           8568          DC    Q(@@STATIC)
00006A30 00000000                           8569          DC    X'00000000'
00006A34 00000630                           8570          DC    X'00000630'
00006A38 0000000000005128                   8571          DC    ADL8(@DATA)
00006A40 00000000                           8572          DC    X'00000000'
00006A44 00000AF2                           8573          DC    X'00000AF2'
                                            8574 *
00006A48 0D                                 8575          DC    XL1'D'
00006A49 000000                             8576          DC    AL3(0)
00006A4C 00000D48                           8577          DC    AL4(3400)
00006A50 00000000                           8578          DC    4X'00'
00006A54 00000000                           8579          DC    Q(@@STATIC)
                                                                                                                           Page  173 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006A58 00000000                           8580          DC    X'00000000'
00006A5C 00000638                           8581          DC    X'00000638'
00006A60 0000000000005128                   8582          DC    ADL8(@DATA)
00006A68 00000000                           8583          DC    X'00000000'
00006A6C 00000AF8                           8584          DC    X'00000AF8'
                                            8585 *
00006A70 0D                                 8586          DC    XL1'D'
00006A71 000000                             8587          DC    AL3(0)
00006A74 00000D70                           8588          DC    AL4(3440)
00006A78 00000000                           8589          DC    4X'00'
00006A7C 00000000                           8590          DC    Q(@@STATIC)
00006A80 00000000                           8591          DC    X'00000000'
00006A84 00000640                           8592          DC    X'00000640'
00006A88 0000000000005128                   8593          DC    ADL8(@DATA)
00006A90 00000000                           8594          DC    X'00000000'
00006A94 00000B02                           8595          DC    X'00000B02'
                                            8596 *
00006A98 0D                                 8597          DC    XL1'D'
00006A99 000000                             8598          DC    AL3(0)
00006A9C 00000D98                           8599          DC    AL4(3480)
00006AA0 00000000                           8600          DC    4X'00'
00006AA4 00000000                           8601          DC    Q(@@STATIC)
00006AA8 00000000                           8602          DC    X'00000000'
00006AAC 00000648                           8603          DC    X'00000648'
00006AB0 0000000000005128                   8604          DC    ADL8(@DATA)
00006AB8 00000000                           8605          DC    X'00000000'
00006ABC 00000B0E                           8606          DC    X'00000B0E'
                                            8607 *
00006AC0 0D                                 8608          DC    XL1'D'
00006AC1 000000                             8609          DC    AL3(0)
00006AC4 00000DC0                           8610          DC    AL4(3520)
00006AC8 00000000                           8611          DC    4X'00'
00006ACC 00000000                           8612          DC    Q(@@STATIC)
00006AD0 00000000                           8613          DC    X'00000000'
00006AD4 00000650                           8614          DC    X'00000650'
00006AD8 0000000000005128                   8615          DC    ADL8(@DATA)
00006AE0 00000000                           8616          DC    X'00000000'
00006AE4 00000B1A                           8617          DC    X'00000B1A'
                                            8618 *
00006AE8 0D                                 8619          DC    XL1'D'
00006AE9 000000                             8620          DC    AL3(0)
00006AEC 00000DE8                           8621          DC    AL4(3560)
00006AF0 00000000                           8622          DC    4X'00'
00006AF4 00000000                           8623          DC    Q(@@STATIC)
00006AF8 00000000                           8624          DC    X'00000000'
00006AFC 00000658                           8625          DC    X'00000658'
00006B00 0000000000005128                   8626          DC    ADL8(@DATA)
00006B08 00000000                           8627          DC    X'00000000'
00006B0C 00000B28                           8628          DC    X'00000B28'
                                            8629 *
00006B10 0D                                 8630          DC    XL1'D'
00006B11 000000                             8631          DC    AL3(0)
                                                                                                                           Page  174 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006B14 00000E10                           8632          DC    AL4(3600)
00006B18 00000000                           8633          DC    4X'00'
00006B1C 00000000                           8634          DC    Q(@@STATIC)
00006B20 00000000                           8635          DC    X'00000000'
00006B24 00000660                           8636          DC    X'00000660'
00006B28 0000000000005128                   8637          DC    ADL8(@DATA)
00006B30 00000000                           8638          DC    X'00000000'
00006B34 00000B30                           8639          DC    X'00000B30'
                                            8640 *
00006B38 0D                                 8641          DC    XL1'D'
00006B39 000000                             8642          DC    AL3(0)
00006B3C 00000E38                           8643          DC    AL4(3640)
00006B40 00000000                           8644          DC    4X'00'
00006B44 00000000                           8645          DC    Q(@@STATIC)
00006B48 00000000                           8646          DC    X'00000000'
00006B4C 00000668                           8647          DC    X'00000668'
00006B50 0000000000005128                   8648          DC    ADL8(@DATA)
00006B58 00000000                           8649          DC    X'00000000'
00006B5C 00000B3A                           8650          DC    X'00000B3A'
                                            8651 *
00006B60 0D                                 8652          DC    XL1'D'
00006B61 000000                             8653          DC    AL3(0)
00006B64 00000E60                           8654          DC    AL4(3680)
00006B68 00000000                           8655          DC    4X'00'
00006B6C 00000000                           8656          DC    Q(@@STATIC)
00006B70 00000000                           8657          DC    X'00000000'
00006B74 00000670                           8658          DC    X'00000670'
00006B78 0000000000005128                   8659          DC    ADL8(@DATA)
00006B80 00000000                           8660          DC    X'00000000'
00006B84 00000B46                           8661          DC    X'00000B46'
                                            8662 *
00006B88 0D                                 8663          DC    XL1'D'
00006B89 000000                             8664          DC    AL3(0)
00006B8C 00000E88                           8665          DC    AL4(3720)
00006B90 00000000                           8666          DC    4X'00'
00006B94 00000000                           8667          DC    Q(@@STATIC)
00006B98 00000000                           8668          DC    X'00000000'
00006B9C 00000678                           8669          DC    X'00000678'
00006BA0 0000000000005128                   8670          DC    ADL8(@DATA)
00006BA8 00000000                           8671          DC    X'00000000'
00006BAC 00000AF2                           8672          DC    X'00000AF2'
                                            8673 *
00006BB0 0D                                 8674          DC    XL1'D'
00006BB1 000000                             8675          DC    AL3(0)
00006BB4 00000EB0                           8676          DC    AL4(3760)
00006BB8 00000000                           8677          DC    4X'00'
00006BBC 00000000                           8678          DC    Q(@@STATIC)
00006BC0 00000000                           8679          DC    X'00000000'
00006BC4 00000680                           8680          DC    X'00000680'
00006BC8 0000000000005128                   8681          DC    ADL8(@DATA)
00006BD0 00000000                           8682          DC    X'00000000'
00006BD4 00000B28                           8683          DC    X'00000B28'
                                                                                                                           Page  175 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
                                            8684 *
00006BD8 0D                                 8685          DC    XL1'D'
00006BD9 000000                             8686          DC    AL3(0)
00006BDC 00000ED8                           8687          DC    AL4(3800)
00006BE0 00000000                           8688          DC    4X'00'
00006BE4 00000000                           8689          DC    Q(@@STATIC)
00006BE8 00000000                           8690          DC    X'00000000'
00006BEC 00000688                           8691          DC    X'00000688'
00006BF0 0000000000005128                   8692          DC    ADL8(@DATA)
00006BF8 00000000                           8693          DC    X'00000000'
00006BFC 00000B50                           8694          DC    X'00000B50'
                                            8695 *
00006C00 0D                                 8696          DC    XL1'D'
00006C01 000000                             8697          DC    AL3(0)
00006C04 00000F00                           8698          DC    AL4(3840)
00006C08 00000000                           8699          DC    4X'00'
00006C0C 00000000                           8700          DC    Q(@@STATIC)
00006C10 00000000                           8701          DC    X'00000000'
00006C14 00000690                           8702          DC    X'00000690'
00006C18 0000000000005128                   8703          DC    ADL8(@DATA)
00006C20 00000000                           8704          DC    X'00000000'
00006C24 00000B5E                           8705          DC    X'00000B5E'
                                            8706 *
00006C28 0D                                 8707          DC    XL1'D'
00006C29 000000                             8708          DC    AL3(0)
00006C2C 00000F28                           8709          DC    AL4(3880)
00006C30 00000000                           8710          DC    4X'00'
00006C34 00000000                           8711          DC    Q(@@STATIC)
00006C38 00000000                           8712          DC    X'00000000'
00006C3C 00000698                           8713          DC    X'00000698'
00006C40 0000000000005128                   8714          DC    ADL8(@DATA)
00006C48 00000000                           8715          DC    X'00000000'
00006C4C 00000B64                           8716          DC    X'00000B64'
                                            8717 *
00006C50 0D                                 8718          DC    XL1'D'
00006C51 000000                             8719          DC    AL3(0)
00006C54 00000F50                           8720          DC    AL4(3920)
00006C58 00000000                           8721          DC    4X'00'
00006C5C 00000000                           8722          DC    Q(@@STATIC)
00006C60 00000000                           8723          DC    X'00000000'
00006C64 000006A0                           8724          DC    X'000006A0'
00006C68 0000000000005128                   8725          DC    ADL8(@DATA)
00006C70 00000000                           8726          DC    X'00000000'
00006C74 00000B72                           8727          DC    X'00000B72'
                                            8728 *
00006C78 0D                                 8729          DC    XL1'D'
00006C79 000000                             8730          DC    AL3(0)
00006C7C 00000F78                           8731          DC    AL4(3960)
00006C80 00000000                           8732          DC    4X'00'
00006C84 00000000                           8733          DC    Q(@@STATIC)
00006C88 00000000                           8734          DC    X'00000000'
00006C8C 000006A8                           8735          DC    X'000006A8'
                                                                                                                           Page  176 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006C90 0000000000005128                   8736          DC    ADL8(@DATA)
00006C98 00000000                           8737          DC    X'00000000'
00006C9C 00000B7E                           8738          DC    X'00000B7E'
                                            8739 *
00006CA0 0D                                 8740          DC    XL1'D'
00006CA1 000000                             8741          DC    AL3(0)
00006CA4 00000FA0                           8742          DC    AL4(4000)
00006CA8 00000000                           8743          DC    4X'00'
00006CAC 00000000                           8744          DC    Q(@@STATIC)
00006CB0 00000000                           8745          DC    X'00000000'
00006CB4 000006B0                           8746          DC    X'000006B0'
00006CB8 0000000000005128                   8747          DC    ADL8(@DATA)
00006CC0 00000000                           8748          DC    X'00000000'
00006CC4 00000B94                           8749          DC    X'00000B94'
                                            8750 *
00006CC8 0D                                 8751          DC    XL1'D'
00006CC9 000000                             8752          DC    AL3(0)
00006CCC 00000FC8                           8753          DC    AL4(4040)
00006CD0 00000000                           8754          DC    4X'00'
00006CD4 00000000                           8755          DC    Q(@@STATIC)
00006CD8 00000000                           8756          DC    X'00000000'
00006CDC 000006B8                           8757          DC    X'000006B8'
00006CE0 0000000000005128                   8758          DC    ADL8(@DATA)
00006CE8 00000000                           8759          DC    X'00000000'
00006CEC 00000BA4                           8760          DC    X'00000BA4'
                                            8761 *
00006CF0 0D                                 8762          DC    XL1'D'
00006CF1 000000                             8763          DC    AL3(0)
00006CF4 00000FF0                           8764          DC    AL4(4080)
00006CF8 00000000                           8765          DC    4X'00'
00006CFC 00000000                           8766          DC    Q(@@STATIC)
00006D00 00000000                           8767          DC    X'00000000'
00006D04 000006C0                           8768          DC    X'000006C0'
00006D08 0000000000005128                   8769          DC    ADL8(@DATA)
00006D10 00000000                           8770          DC    X'00000000'
00006D14 00000BB8                           8771          DC    X'00000BB8'
                                            8772 *
00006D18 0D                                 8773          DC    XL1'D'
00006D19 000000                             8774          DC    AL3(0)
00006D1C 00001018                           8775          DC    AL4(4120)
00006D20 00000000                           8776          DC    4X'00'
00006D24 00000000                           8777          DC    Q(@@STATIC)
00006D28 00000000                           8778          DC    X'00000000'
00006D2C 000006C8                           8779          DC    X'000006C8'
00006D30 0000000000005128                   8780          DC    ADL8(@DATA)
00006D38 00000000                           8781          DC    X'00000000'
00006D3C 00000BC8                           8782          DC    X'00000BC8'
                                            8783 *
00006D40 0D                                 8784          DC    XL1'D'
00006D41 000000                             8785          DC    AL3(0)
00006D44 00001040                           8786          DC    AL4(4160)
00006D48 00000000                           8787          DC    4X'00'
                                                                                                                           Page  177 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006D4C 00000000                           8788          DC    Q(@@STATIC)
00006D50 00000000                           8789          DC    X'00000000'
00006D54 000006D0                           8790          DC    X'000006D0'
00006D58 0000000000005128                   8791          DC    ADL8(@DATA)
00006D60 00000000                           8792          DC    X'00000000'
00006D64 00000B02                           8793          DC    X'00000B02'
                                            8794 *
00006D68 0D                                 8795          DC    XL1'D'
00006D69 000000                             8796          DC    AL3(0)
00006D6C 00001068                           8797          DC    AL4(4200)
00006D70 00000000                           8798          DC    4X'00'
00006D74 00000000                           8799          DC    Q(@@STATIC)
00006D78 00000000                           8800          DC    X'00000000'
00006D7C 000006D8                           8801          DC    X'000006D8'
00006D80 0000000000005128                   8802          DC    ADL8(@DATA)
00006D88 00000000                           8803          DC    X'00000000'
00006D8C 00000BD8                           8804          DC    X'00000BD8'
                                            8805 *
00006D90 0D                                 8806          DC    XL1'D'
00006D91 000000                             8807          DC    AL3(0)
00006D94 00001090                           8808          DC    AL4(4240)
00006D98 00000000                           8809          DC    4X'00'
00006D9C 00000000                           8810          DC    Q(@@STATIC)
00006DA0 00000000                           8811          DC    X'00000000'
00006DA4 000006E0                           8812          DC    X'000006E0'
00006DA8 0000000000005128                   8813          DC    ADL8(@DATA)
00006DB0 00000000                           8814          DC    X'00000000'
00006DB4 00000BDE                           8815          DC    X'00000BDE'
                                            8816 *
00006DB8 0D                                 8817          DC    XL1'D'
00006DB9 000000                             8818          DC    AL3(0)
00006DBC 000010B8                           8819          DC    AL4(4280)
00006DC0 00000000                           8820          DC    4X'00'
00006DC4 00000000                           8821          DC    Q(@@STATIC)
00006DC8 00000000                           8822          DC    X'00000000'
00006DCC 000006E8                           8823          DC    X'000006E8'
00006DD0 0000000000005128                   8824          DC    ADL8(@DATA)
00006DD8 00000000                           8825          DC    X'00000000'
00006DDC 00000BE6                           8826          DC    X'00000BE6'
                                            8827 *
00006DE0 0D                                 8828          DC    XL1'D'
00006DE1 000000                             8829          DC    AL3(0)
00006DE4 000010E0                           8830          DC    AL4(4320)
00006DE8 00000000                           8831          DC    4X'00'
00006DEC 00000000                           8832          DC    Q(@@STATIC)
00006DF0 00000000                           8833          DC    X'00000000'
00006DF4 000006F0                           8834          DC    X'000006F0'
00006DF8 0000000000005128                   8835          DC    ADL8(@DATA)
00006E00 00000000                           8836          DC    X'00000000'
00006E04 00000BEE                           8837          DC    X'00000BEE'
                                            8838 *
00006E08 0D                                 8839          DC    XL1'D'
                                                                                                                           Page  178 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:43 
00006E09 000000                             8840          DC    AL3(0)
00006E0C 00000000                           8841          DC    AL4(0)
00006E10 00000000                           8842          DC    4X'00'
00006E14 00000000                           8843          DC    Q(@@STATIC)
00006E18 00000000                           8844          DC    X'00000000'
00006E1C 000006F8                           8845          DC    X'000006F8'
00006E20 0000000000005128                   8846          DC    ADL8(@DATA)
00006E28 00000000                           8847          DC    X'00000000'
00006E2C 00000BFA                           8848          DC    X'00000BFA'
                                            8849 *
                                            8850          END
                                                 Relocation Dictionary                                                     Page  179 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000014 000000F8   Q 4      +
 00000002 00000002 00000200   A 4      +
 00000002 00000002 00000228   A 4      +
 00000002 00000002 00000230   A 4      +
 00000002 0000000D 00000318   A 4      +
 00000002 0000000E 00000320   A 4      +
 00000002 00000002 00000340   A 4      +
 00000002 00000002 00000368   A 4      +
 00000002 00000002 00000370   A 4      +
 00000002 00000009 00000478   A 4      +
 00000002 00000004 00000480   A 4      +
 00000002 00000015 00000488   A 4      +
 00000002 00000015 00000490   A 4      +
 00000002 00000002 000004B0   A 4      +
 00000002 00000002 000004D8   A 4      +
 00000002 00000002 000004E0   A 4      +
 00000002 0000000B 000005E0   A 4      +
 00000002 00000004 000005E8   A 4      +
 00000002 00000015 000005F0   A 4      +
 00000002 00000015 000005F8   A 4      +
 00000002 00000002 00000618   A 4      +
 00000002 00000002 00000640   A 4      +
 00000002 00000002 00000648   A 4      +
 00000002 0000000A 00000700   A 4      +
 00000002 00000002 00000720   A 4      +
 00000002 00000002 00000748   A 4      +
 00000002 00000002 00000750   A 4      +
 00000002 00000012 00000850   A 4      +
 00000002 00000004 00000858   A 4      +
 00000002 00000015 00000860   A 4      +
 00000002 00000015 00000868   A 4      +
 00000002 00000002 00000888   A 4      +
 00000002 00000002 000008B0   A 4      +
 00000002 00000002 000008B8   A 4      +
 00000002 00000002 00000A08   A 4      +
 00000002 00000004 00000A10   A 4      +
 00000002 00000015 00000A18   A 4      +
 00000002 00000015 00000A20   A 4      +
 00000002 00000002 00000A50   A 4      +
 00000002 00000002 00000A78   A 4      +
 00000002 00000002 00000A80   A 4      +
 00000002 00000002 00000B90   A 4      +
 00000002 00000015 00000B98   A 4      +
 00000002 00000004 00000BA0   A 4      +
 00000002 00000015 00000BA8   A 4      +
 00000002 00000002 00000BC8   A 4      +
 00000002 00000002 00000BF0   A 4      +
 00000002 00000002 00000BF8   A 4      +
 00000002 0000000C 00000CC8   A 4      +
 00000002 00000002 00000D18   A 4      +
                                                 Relocation Dictionary                                                     Page  180 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00000D20   A 4      +
 00000002 00000002 00000E10   A 4      +
 00000002 00000002 00000E18   A 4      +
 00000002 00000002 00000F20   A 4      +
 00000002 00000002 00000F48   A 4      +
 00000002 00000002 00000F50   A 4      +
 00000002 00000002 00001008   A 4      +
 00000002 00000002 00001030   A 4      +
 00000002 00000002 00001058   A 4      +
 00000002 00000002 00001060   A 4      +
 00000002 00000002 000010E8   A 4      +
 00000002 00000002 000011F8   A 4      +
 00000002 00000002 00001220   A 4      +
 00000002 00000002 00001228   A 4      +
 00000002 00000002 000012F0   A 4      +
 00000002 00000002 00001318   A 4      +
 00000002 00000002 00001340   A 4      +
 00000002 00000002 00001348   A 4      +
 00000002 00000005 000013B4   Q 4      +
 00000002 00000002 00001470   A 4      +
 00000002 00000002 00001498   A 4      +
 00000002 00000002 000014A0   A 4      +
 00000002 00000003 000015C0   A 4      +
 00000002 00000002 000015C8   A 4      +
 00000002 00000002 000015F8   A 4      +
 00000002 00000002 00001620   A 4      +
 00000002 00000002 00001628   A 4      +
 00000002 00000002 000016F8   A 4      +
 00000002 00000002 00001728   A 4      +
 00000002 00000002 00001750   A 4      +
 00000002 00000002 00001758   A 4      +
 00000002 00000002 00001828   A 4      +
 00000002 00000002 00001858   A 4      +
 00000002 00000002 00001880   A 4      +
 00000002 00000002 00001888   A 4      +
 00000002 00000002 00001980   A 4      +
 00000002 00000002 00001988   A 4      +
 00000002 00000002 000019B8   A 4      +
 00000002 00000002 000019E0   A 4      +
 00000002 00000002 000019E8   A 4      +
 00000002 00000009 00001A70   A 4      +
 00000002 00000002 00001A78   A 4      +
 00000002 00000002 00001A80   A 4      +
 00000002 00000002 00001A88   A 4      +
 00000002 0000000A 00001A90   A 4      +
 00000002 00000002 00001A98   A 4      +
 00000002 00000002 00001C68   A 4      +
 00000002 00000002 00001C90   A 4      +
 00000002 00000002 00001C98   A 4      +
 00000002 00000002 00001D28   A 4      +
 00000002 00000002 00001D30   A 4      +
 00000002 00000002 00001E68   A 4      +
 00000002 00000002 00001E90   A 4      +
                                                 Relocation Dictionary                                                     Page  181 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00001E98   A 4      +
 00000002 00000013 00001F10   A 4      +
 00000002 00000014 00001F18   Q 4      +
 00000002 00000015 00001F20   A 4      +
 00000002 00000002 00002078   A 4      +
 00000002 00000002 000020A0   A 4      +
 00000002 00000002 000020A8   A 4      +
 00000002 00000013 000021F0   A 4      +
 00000002 00000015 000021F8   A 4      +
 00000002 00000002 00002200   A 4      +
 00000002 00000002 00002238   A 4      +
 00000002 00000002 00002260   A 4      +
 00000002 00000002 00002268   A 4      +
 00000002 00000002 000024F8   A 4      +
 00000002 00000002 00002520   A 4      +
 00000002 00000002 00002528   A 4      +
 00000002 00000004 00002680   A 4      +
 00000002 00000015 00002688   A 4      +
 00000002 00000015 00002690   A 4      +
 00000002 00000002 00002698   A 4      +
 00000002 00000002 000026A0   A 4      +
 00000002 00000002 000026D8   A 4      +
 00000002 00000002 00002700   A 4      +
 00000002 00000002 00002708   A 4      +
 00000002 00000004 00002778   A 4      +
 00000002 00000015 00002780   A 4      +
 00000002 00000015 00002788   A 4      +
 00000002 00000002 00002790   A 4      +
 00000002 00000002 00002798   A 4      +
 00000002 00000002 000027A0   A 4      +
 00000002 00000007 000027A8   A 4      +
 00000002 00000006 000027B0   A 4      +
 00000002 00000002 000027B8   A 4      +
 00000002 00000011 000027C0   A 4      +
 00000002 00000002 000029A0   A 4      +
 00000002 00000002 000029C8   A 4      +
 00000002 00000002 000029D0   A 4      +
 00000002 00000013 00002B88   A 4      +
 00000002 00000014 00002B90   Q 4      +
 00000002 00000015 00002B98   A 4      +
 00000002 00000002 00002BA0   A 4      +
 00000002 00000002 00002BA8   A 4      +
 00000002 00000002 00002BE0   A 4      +
 00000002 00000002 00002C08   A 4      +
 00000002 00000002 00002C10   A 4      +
 00000002 00000002 00002C88   A 4      +
 00000002 00000004 00002C90   A 4      +
 00000002 00000015 00002C98   A 4      +
 00000002 00000015 00002CA0   A 4      +
 00000002 00000007 00002CA8   A 4      +
 00000002 00000002 00002CB0   A 4      +
 00000002 00000002 00002DD0   A 4      +
 00000002 00000002 00002DF8   A 4      +
                                                 Relocation Dictionary                                                     Page  182 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00002E00   A 4      +
 00000002 00000013 00002F88   A 4      +
 00000002 00000015 00002F90   A 4      +
 00000002 00000002 00002F98   A 4      +
 00000002 00000002 00002FA0   A 4      +
 00000002 00000002 00002FD8   A 4      +
 00000002 00000002 00003000   A 4      +
 00000002 00000002 00003008   A 4      +
 00000002 00000002 00003070   A 4      +
 00000002 00000002 00003168   A 4      +
 00000002 00000002 00003190   A 4      +
 00000002 00000002 00003198   A 4      +
 00000002 00000004 00003390   A 4      +
 00000002 00000015 00003398   A 4      +
 00000002 00000015 000033A0   A 4      +
 00000002 00000013 000033A8   A 4      +
 00000002 00000002 000033B0   A 4      +
 00000002 00000002 000033B8   A 4      +
 00000002 00000002 000033C0   A 4      +
 00000002 00000002 000033C8   A 4      +
 00000002 00000002 000033D0   A 4      +
 00000002 00000002 000033D8   A 4      +
 00000002 00000002 000033E0   A 4      +
 00000002 00000002 000033E8   A 4      +
 00000002 00000007 000033F0   A 4      +
 00000002 00000006 000033F8   A 4      +
 00000002 00000002 00003400   A 4      +
 00000002 00000002 00003408   A 4      +
 00000002 00000002 00003800   A 4      +
 00000002 00000002 00003828   A 4      +
 00000002 00000002 00003830   A 4      +
 00000002 00000002 000038A0   A 4      +
 00000002 00000002 000038A8   A 4      +
 00000002 00000002 000038B0   A 4      +
 00000002 00000002 000039D8   A 4      +
 00000002 00000002 00003A00   A 4      +
 00000002 00000002 00003A08   A 4      +
 00000002 00000013 00003B18   A 4      +
 00000002 00000014 00003B20   Q 4      +
 00000002 00000015 00003B28   A 4      +
 00000002 00000002 00003B30   A 4      +
 00000002 00000002 00003B38   A 4      +
 00000002 00000002 00003B40   A 4      +
 00000002 00000002 00003CD0   A 4      +
 00000002 00000002 00003CF8   A 4      +
 00000002 00000002 00003D00   A 4      +
 00000002 00000002 00003DB8   A 4      +
 00000002 00000002 00003DF8   A 4      +
 00000002 00000002 00003E20   A 4      +
 00000002 00000002 00003E28   A 4      +
 00000002 00000010 00003F28   A 4      +
 00000002 00000002 00003F30   A 4      +
 00000002 00000002 00003F68   A 4      +
                                                 Relocation Dictionary                                                     Page  183 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000002 00003F90   A 4      +
 00000002 00000002 00003F98   A 4      +
 00000002 00000004 00004060   A 4      +
 00000002 00000015 00004068   A 4      +
 00000002 00000015 00004070   A 4      +
 00000002 00000002 00004078   A 4      +
 00000002 00000002 00004080   A 4      +
 00000002 00000011 00004088   A 4      +
 00000002 00000002 00004090   A 4      +
 00000002 00000002 00004098   A 4      +
 00000002 00000002 00004210   A 4      +
 00000002 00000002 00004238   A 4      +
 00000002 00000002 00004240   A 4      +
 00000002 00000002 000042B0   A 4      +
 00000002 00000002 00004370   A 4      +
 00000002 00000002 00004398   A 4      +
 00000002 00000002 000043A0   A 4      +
 00000002 00000002 00004440   A 4      +
 00000002 00000002 00004448   A 4      +
 00000002 00000002 00004450   A 4      +
 00000002 00000008 00004458   A 4      +
 00000002 00000015 00004460   A 4      +
 00000002 00000002 00004468   A 4      +
 00000002 00000002 00004470   A 4      +
 00000002 00000002 00004478   A 4      +
 00000002 00000002 00004480   A 4      +
 00000002 00000004 00004488   A 4      +
 00000002 00000015 00004490   A 4      +
 00000002 00000002 00004498   A 4      +
 00000002 00000002 00004720   A 4      +
 00000002 00000002 00004748   A 4      +
 00000002 00000002 00004750   A 4      +
 00000002 00000002 000047C8   A 4      +
 00000002 00000013 000047D0   A 4      +
 00000002 00000015 000047D8   A 4      +
 00000002 00000002 000047E0   A 4      +
 00000002 00000002 000047E8   A 4      +
 00000002 00000002 00004970   A 4      +
 00000002 00000002 00004998   A 4      +
 00000002 00000002 000049A0   A 4      +
 00000002 0000000F 00004A20   A 4      +
 00000002 00000002 00004A28   A 4      +
 00000002 00000002 00004A30   A 4      +
 00000002 00000002 00004BB0   A 4      +
 00000002 00000002 00004BD8   A 4      +
 00000002 00000002 00004BE0   A 4      +
 00000002 00000002 00004C50   A 4      +
 00000002 00000002 00004D08   A 4      +
 00000002 00000002 00004D30   A 4      +
 00000002 00000002 00004D38   A 4      +
 00000002 00000002 00004DB8   A 4      +
 00000002 00000002 00004DC0   A 4      +
 00000002 00000002 00004DC8   A 4      +
                                                 Relocation Dictionary                                                     Page  184 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000002 00000010 00004DD0   A 4      +
 00000002 00000002 00004DD8   A 4      +
 00000002 00000002 00004F90   A 4      +
 00000002 00000002 00004FB8   A 4      +
 00000002 00000002 00004FC0   A 4      +
 00000002 00000002 00005030   A 4      +
 00000002 00000011 00005038   A 4      +
 00000017 00000014 00005D34   Q 4      +
 00000017 00000014 00005E54   Q 4      +
 00000017 00000014 00005F14   Q 4      +
 00000017 00000014 00005F3C   Q 4      +
 00000017 00000014 00005F64   Q 4      +
 00000017 00000015 00005F70   A 4      +
 00000017 00000014 00005F8C   Q 4      +
 00000017 00000015 00005F98   A 4      +
 00000017 00000014 00005FB4   Q 4      +
 00000017 00000015 00005FC0   A 4      +
 00000017 00000014 00005FDC   Q 4      +
 00000017 00000015 00005FE8   A 4      +
 00000017 00000014 00006004   Q 4      +
 00000017 00000015 00006010   A 4      +
 00000017 00000014 0000602C   Q 4      +
 00000017 00000015 00006038   A 4      +
 00000017 00000014 00006054   Q 4      +
 00000017 00000015 00006060   A 4      +
 00000017 00000014 0000607C   Q 4      +
 00000017 00000015 00006088   A 4      +
 00000017 00000014 000060A4   Q 4      +
 00000017 00000015 000060B0   A 4      +
 00000017 00000014 000060CC   Q 4      +
 00000017 00000015 000060D8   A 4      +
 00000017 00000014 000060F4   Q 4      +
 00000017 00000015 00006100   A 4      +
 00000017 00000014 0000611C   Q 4      +
 00000017 00000015 00006128   A 4      +
 00000017 00000014 00006144   Q 4      +
 00000017 00000015 00006150   A 4      +
 00000017 00000014 0000616C   Q 4      +
 00000017 00000015 00006178   A 4      +
 00000017 00000014 00006194   Q 4      +
 00000017 00000015 000061A0   A 4      +
 00000017 00000014 000061BC   Q 4      +
 00000017 00000015 000061C8   A 4      +
 00000017 00000014 000061E4   Q 4      +
 00000017 00000015 000061F0   A 4      +
 00000017 00000014 0000620C   Q 4      +
 00000017 00000015 00006218   A 4      +
 00000017 00000014 00006234   Q 4      +
 00000017 00000015 00006240   A 4      +
 00000017 00000014 0000625C   Q 4      +
 00000017 00000015 00006268   A 4      +
 00000017 00000014 00006284   Q 4      +
 00000017 00000015 00006290   A 4      +
                                                 Relocation Dictionary                                                     Page  185 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000017 00000014 000062AC   Q 4      +
 00000017 00000015 000062B8   A 4      +
 00000017 00000014 000062D4   Q 4      +
 00000017 00000015 000062E0   A 4      +
 00000017 00000014 000062FC   Q 4      +
 00000017 00000015 00006308   A 4      +
 00000017 00000014 00006324   Q 4      +
 00000017 00000015 00006330   A 4      +
 00000017 00000014 0000634C   Q 4      +
 00000017 00000015 00006358   A 4      +
 00000017 00000014 00006374   Q 4      +
 00000017 00000015 00006380   A 4      +
 00000017 00000014 0000639C   Q 4      +
 00000017 00000015 000063A8   A 4      +
 00000017 00000014 000063C4   Q 4      +
 00000017 00000015 000063D0   A 4      +
 00000017 00000014 000063EC   Q 4      +
 00000017 00000015 000063F8   A 4      +
 00000017 00000014 00006414   Q 4      +
 00000017 00000015 00006420   A 4      +
 00000017 00000014 0000643C   Q 4      +
 00000017 00000015 00006448   A 4      +
 00000017 00000014 00006464   Q 4      +
 00000017 00000015 00006470   A 4      +
 00000017 00000014 0000648C   Q 4      +
 00000017 00000015 00006498   A 4      +
 00000017 00000014 000064B4   Q 4      +
 00000017 00000015 000064C0   A 4      +
 00000017 00000014 000064DC   Q 4      +
 00000017 00000015 000064E8   A 4      +
 00000017 00000014 00006504   Q 4      +
 00000017 00000015 00006510   A 4      +
 00000017 00000014 0000652C   Q 4      +
 00000017 00000015 00006538   A 4      +
 00000017 00000014 00006554   Q 4      +
 00000017 00000015 00006560   A 4      +
 00000017 00000014 0000657C   Q 4      +
 00000017 00000015 00006588   A 4      +
 00000017 00000014 000065A4   Q 4      +
 00000017 00000015 000065B0   A 4      +
 00000017 00000014 000065CC   Q 4      +
 00000017 00000015 000065D8   A 4      +
 00000017 00000014 000065F4   Q 4      +
 00000017 00000015 00006600   A 4      +
 00000017 00000014 0000661C   Q 4      +
 00000017 00000015 00006628   A 4      +
 00000017 00000014 00006644   Q 4      +
 00000017 00000015 00006650   A 4      +
 00000017 00000014 0000666C   Q 4      +
 00000017 00000015 00006678   A 4      +
 00000017 00000014 00006694   Q 4      +
 00000017 00000015 000066A0   A 4      +
 00000017 00000014 000066BC   Q 4      +
                                                 Relocation Dictionary                                                     Page  186 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000017 00000015 000066C8   A 4      +
 00000017 00000014 000066E4   Q 4      +
 00000017 00000015 000066F0   A 4      +
 00000017 00000014 0000670C   Q 4      +
 00000017 00000015 00006718   A 4      +
 00000017 00000014 00006734   Q 4      +
 00000017 00000015 00006740   A 4      +
 00000017 00000014 0000675C   Q 4      +
 00000017 00000015 00006768   A 4      +
 00000017 00000014 00006784   Q 4      +
 00000017 00000015 00006790   A 4      +
 00000017 00000014 000067AC   Q 4      +
 00000017 00000015 000067B8   A 4      +
 00000017 00000014 000067D4   Q 4      +
 00000017 00000015 000067E0   A 4      +
 00000017 00000014 000067FC   Q 4      +
 00000017 00000015 00006808   A 4      +
 00000017 00000014 00006824   Q 4      +
 00000017 00000015 00006830   A 4      +
 00000017 00000014 0000684C   Q 4      +
 00000017 00000015 00006858   A 4      +
 00000017 00000014 00006874   Q 4      +
 00000017 00000015 00006880   A 4      +
 00000017 00000014 0000689C   Q 4      +
 00000017 00000015 000068A8   A 4      +
 00000017 00000014 000068C4   Q 4      +
 00000017 00000015 000068D0   A 4      +
 00000017 00000014 000068EC   Q 4      +
 00000017 00000015 000068F8   A 4      +
 00000017 00000014 00006914   Q 4      +
 00000017 00000015 00006920   A 4      +
 00000017 00000014 0000693C   Q 4      +
 00000017 00000015 00006948   A 4      +
 00000017 00000014 00006964   Q 4      +
 00000017 00000015 00006970   A 4      +
 00000017 00000014 0000698C   Q 4      +
 00000017 00000015 00006998   A 4      +
 00000017 00000014 000069B4   Q 4      +
 00000017 00000015 000069C0   A 4      +
 00000017 00000014 000069DC   Q 4      +
 00000017 00000015 000069E8   A 4      +
 00000017 00000014 00006A04   Q 4      +
 00000017 00000015 00006A10   A 4      +
 00000017 00000014 00006A2C   Q 4      +
 00000017 00000015 00006A38   A 4      +
 00000017 00000014 00006A54   Q 4      +
 00000017 00000015 00006A60   A 4      +
 00000017 00000014 00006A7C   Q 4      +
 00000017 00000015 00006A88   A 4      +
 00000017 00000014 00006AA4   Q 4      +
 00000017 00000015 00006AB0   A 4      +
 00000017 00000014 00006ACC   Q 4      +
 00000017 00000015 00006AD8   A 4      +
                                                 Relocation Dictionary                                                     Page  187 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:43 
 00000017 00000014 00006AF4   Q 4      +
 00000017 00000015 00006B00   A 4      +
 00000017 00000014 00006B1C   Q 4      +
 00000017 00000015 00006B28   A 4      +
 00000017 00000014 00006B44   Q 4      +
 00000017 00000015 00006B50   A 4      +
 00000017 00000014 00006B6C   Q 4      +
 00000017 00000015 00006B78   A 4      +
 00000017 00000014 00006B94   Q 4      +
 00000017 00000015 00006BA0   A 4      +
 00000017 00000014 00006BBC   Q 4      +
 00000017 00000015 00006BC8   A 4      +
 00000017 00000014 00006BE4   Q 4      +
 00000017 00000015 00006BF0   A 4      +
 00000017 00000014 00006C0C   Q 4      +
 00000017 00000015 00006C18   A 4      +
 00000017 00000014 00006C34   Q 4      +
 00000017 00000015 00006C40   A 4      +
 00000017 00000014 00006C5C   Q 4      +
 00000017 00000015 00006C68   A 4      +
 00000017 00000014 00006C84   Q 4      +
 00000017 00000015 00006C90   A 4      +
 00000017 00000014 00006CAC   Q 4      +
 00000017 00000015 00006CB8   A 4      +
 00000017 00000014 00006CD4   Q 4      +
 00000017 00000015 00006CE0   A 4      +
 00000017 00000014 00006CFC   Q 4      +
 00000017 00000015 00006D08   A 4      +
 00000017 00000014 00006D24   Q 4      +
 00000017 00000015 00006D30   A 4      +
 00000017 00000014 00006D4C   Q 4      +
 00000017 00000015 00006D58   A 4      +
 00000017 00000014 00006D74   Q 4      +
 00000017 00000015 00006D80   A 4      +
 00000017 00000014 00006D9C   Q 4      +
 00000017 00000015 00006DA8   A 4      +
 00000017 00000014 00006DC4   Q 4      +
 00000017 00000015 00006DD0   A 4      +
 00000017 00000014 00006DEC   Q 4      +
 00000017 00000015 00006DF8   A 4      +
 00000017 00000014 00006E14   Q 4      +
 00000017 00000015 00006E20   A 4      +
                                                 DSECT Cross Reference                                                     Page  188 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
@AUTO#ebcdic_2_utf8
         000000A9  FFFFFFFF  00226
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFE  00353
@AUTO#rd_calloc
         000000A8  FFFFFFFD  00482
@AUTO#rd_clock
         000000B8  FFFFFFF7  01248
@AUTO#rd_crc32_update
         000000AC  FFFFFFF1  02024
@AUTO#rd_free
         000000A8  FFFFFFFB  00712
@AUTO#rd_kafka_buf_write
         000000B0  FFFFFFF0  02159
@AUTO#rd_kafka_buf_write_i16
         000000A8  FFFFFFEF  02268
@AUTO#rd_kafka_buf_write_i32
         000000A8  FFFFFFEE  02375
@AUTO#rd_kafka_buf_write_kbytes
         000000B0  FFFFFFEB  02952
@AUTO#rd_kafka_buf_write_str
         000000B8  FFFFFFEC  02769
@AUTO#rd_kafka_buf_write_uvarint
         000000B2  FFFFFFED  02497
@AUTO#rd_kafka_mcgrp_rebalance_timer_cb
         000000A8  FFFFFFDE  05754
@AUTO#rd_kafka_mock_cgrp_check_state
         000000AB  FFFFFFE8  03536
@AUTO#rd_kafka_mock_cgrp_destroy
         000000A8  FFFFFFD8  06965
@AUTO#rd_kafka_mock_cgrp_elect_leader
         000000AC  FFFFFFE1  05191
@AUTO#rd_kafka_mock_cgrp_find
         000000A8  FFFFFFD7  07095
@AUTO#rd_kafka_mock_cgrp_fsm_timeout
         000000A8  FFFFFFDF  05647
@AUTO#rd_kafka_mock_cgrp_get
         000000A8  FFFFFFD6  07314
@AUTO#rd_kafka_mock_cgrp_member_active
         000000A8  FFFFFFE9  03258
@AUTO#rd_kafka_mock_cgrp_member_add
         000000C8  FFFFFFDA  06554
@AUTO#rd_kafka_mock_cgrp_member_assignment_set
         000000A8  FFFFFFE7  03704
@AUTO#rd_kafka_mock_cgrp_member_destroy
         000000A8  FFFFFFDC  06105
@AUTO#rd_kafka_mock_cgrp_member_find
         000000A8  FFFFFFDB  06236
@AUTO#rd_kafka_mock_cgrp_member_leave
         000000A8  FFFFFFE3  04478
@AUTO#rd_kafka_mock_cgrp_member_sync_set
         000000A8  FFFFFFE4  04314
@AUTO#rd_kafka_mock_cgrp_protos_destroy
                                                 DSECT Cross Reference                                                     Page  189 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:43 
         000000AC  FFFFFFE2  04625
@AUTO#rd_kafka_mock_cgrp_rebalance
         000000AC  FFFFFFE0  05381
@AUTO#rd_kafka_mock_cgrp_rebalance_timer_restart
         000000A8  FFFFFFDD  05877
@AUTO#rd_kafka_mock_cgrp_session_tmr_cb
         000000B0  FFFFFFD9  06761
@AUTO#rd_kafka_mock_cgrp_set_state
         000000A8  FFFFFFEA  03114
@AUTO#rd_kafka_mock_cgrp_sync_check
         000000A8  FFFFFFE5  04139
@AUTO#rd_kafka_mock_cgrp_sync_done
         000000A8  FFFFFFE6  03957
@AUTO#rd_kafka_mock_cgrps_connection_closed
         000000A8  FFFFFFD5  07485
@AUTO#rd_kafkap_bytes_copy
         000000A8  FFFFFFF2  01890
@AUTO#rd_kafkap_bytes_destroy
         000000A8  FFFFFFF4  01608
@AUTO#rd_kafkap_bytes_new
         000000AC  FFFFFFF3  01783
@AUTO#rd_kafkap_str_cmp_str
         000000AC  FFFFFFF5  01500
@AUTO#rd_malloc
         000000A8  FFFFFFFC  00609
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFF8  01135
@AUTO#rd_strdup
         000000A8  FFFFFFFA  00843
@AUTO#rd_strndup
         000000A8  FFFFFFF9  00999
@AUTO#rd_uvarint_enc_u64
         000000B0  FFFFFFF6  01363
                                          Macro and Copy Code Source Summary                                               Page  190 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:43 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  191 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   111  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 00136    189 @REGION_338_1,12
   221  000001DE  00000002 DROP                                           12              12
   290  0000027E  00000002 USING  ORDINARY    00000240 00001000 00000002  12 000E0    315 @REGION_1060_1,12
   348  00000328  00000002 DROP                                           12              12
   417  000003BE  00000002 USING  ORDINARY    00000380 00001000 00000002  12 00110    444 @REGION_1077_1,12
   477  00000498  00000002 DROP                                           12              12
   545  0000052E  00000002 USING  ORDINARY    000004F0 00001000 00000002  12 00108    571 @REGION_1078_1,12
   604  00000600  00000002 DROP                                           12              12
   672  00000696  00000002 USING  ORDINARY    00000658 00001000 00000002  12 000A8    679 @REGION_1080_1,12
   707  00000708  00000002 DROP                                           12              12
   775  0000079E  00000002 USING  ORDINARY    00000760 00001000 00000002  12 00108    805 @REGION_1081_1,12
   838  00000870  00000002 DROP                                           12              12
   906  00000906  00000002 USING  ORDINARY    000008C8 00001000 00000002  12 00160    959 @REGION_1082_1,12
   994  00000A2E  00000002 DROP                                           12              12
  1062  00000ACE  00000002 USING  ORDINARY    00000A90 00001000 00000002  12 00118   1096 @REGION_1084_1,12
  1130  00000BB0  00000002 DROP                                           12              12
  1199  00000C46  00000002 USING  ORDINARY    00000C08 00001000 00000002  12 000C0   1209 @REGION_1088_1,12
  1243  00000CD0  00000002 DROP                                           12              12
  1301  00000D3A  00000002 USING  ORDINARY    00000D30 00001000 00000002  12 00084   1342 @REGION_1308_1,12
  1358  00000DC2  00000002 DROP                                           12              12
  1416  00000E32  00000002 USING  ORDINARY    00000E28 00001000 00000002  12 000C0   1477 @REGION_1320_1,12
  1495  00000EF6  00000002 DROP                                           12              12
  1568  00000F9E  00000002 USING  ORDINARY    00000F60 00001000 00000002  12 000A8   1575 @REGION_1322_1,12
  1603  00001010  00000002 DROP                                           12              12
  1671  000010AE  00000002 USING  ORDINARY    00001070 00001000 00000002  12 0011C   1751 @REGION_1323_1,12
  1778  000011D4  00000002 DROP                                           12              12
  1847  00001276  00000002 USING  ORDINARY    00001238 00001000 00000002  12 000B8   1858 @REGION_1324_1,12
  1885  000012F8  00000002 DROP                                           12              12
  1953  00001396  00000002 USING  ORDINARY    00001358 00001000 00000002  12 00090   1995 @REGION_1485_1,12
  2019  00001450  00000002 DROP                                           12              12
  2088  000014EE  00000002 USING  ORDINARY    000014B0 00001000 00000002  12 00118   2121 @REGION_1517_1,12
  2154  000015D0  00000002 DROP                                           12              12
  2223  00001676  00000002 USING  ORDINARY    00001638 00001000 00000002  12 000C0   2236 @REGION_1521_1,12
  2263  00001700  00000002 DROP                                           12              12
  2331  000017A6  00000002 USING  ORDINARY    00001768 00001000 00000002  12 000C0   2343 @REGION_1523_1,12
  2370  00001830  00000002 DROP                                           12              12
  2438  000018D6  00000002 USING  ORDINARY    00001898 00001000 00000002  12 000F0   2464 @REGION_1530_1,12
  2492  00001990  00000002 DROP                                           12              12
  2563  00001A36  00000002 USING  ORDINARY    000019F8 00001000 00000002  12 001FC   2734 @REGION_1532_1,12
  2764  00001C3C  00000002 DROP                                           12              12
  2837  00001CE6  00000002 USING  ORDINARY    00001CA8 00001000 00000002  12 00148   2918 @REGION_1534_1,12
  2947  00001E38  00000002 DROP                                           12              12
  3016  00001EE6  00000002 USING  ORDINARY    00001EA8 00001000 00000002  12 0015A   3079 @REGION_1945_1,12
  3109  0000204A  00000002 DROP                                           12              12
  3179  000020F6  00000002 USING  ORDINARY    000020B8 00001000 00000002  12 00148   3222 @REGION_1931_1,12
  3253  00002208  00000002 DROP                                           12              12
  3323  000022B6  00000002 USING  ORDINARY    00002278 00001000 00000002  12 001FC   3496 @REGION_1937_1,12
  3531  000024BC  00000002 DROP                                           12              12
  3604  00002576  00000002 USING  ORDINARY    00002538 00001000 00000002  12 00168   3663 @REGION_1932_1,12
  3698  000026A8  00000002 DROP                                           12              12
  3767  00002756  00000002 USING  ORDINARY    00002718 00001000 00000002  12 0020A   3930 @REGION_1946_1,12
                                                      Using Map                                                            Page  192 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
  3952  00002972  00000002 DROP                                           12              12
  4020  00002A1E  00000002 USING  ORDINARY    000029E0 00001000 00000002  12 001C8   4102 @REGION_1947_1,12
  4134  00002BB0  00000002 DROP                                           12              12
  4205  00002C5E  00000002 USING  ORDINARY    00002C20 00001000 00000002  12 0013C   4280 @REGION_1933_1,12
  4308  00002DA4  00000002 DROP                                           12              12
  4379  00002E4E  00000002 USING  ORDINARY    00002E10 00001000 00000002  12 00190   4440 @REGION_1934_1,12
  4473  00002FA8  00000002 DROP                                           12              12
  4544  00003056  00000002 USING  ORDINARY    00003018 00001000 00000002  12 000BE   4594 @REGION_1935_1,12
  4619  00003138  00000002 DROP                                           12              12
  4689  000031E6  00000002 USING  ORDINARY    000031A8 00001000 00000002  12 0058C   5161 @REGION_1949_1,12
  5186  000037D2  00000002 DROP                                           12              12
  5257  0000387E  00000002 USING  ORDINARY    00003840 00001000 00000002  12 00124   5351 @REGION_1943_1,12
  5376  000039AC  00000002 DROP                                           12              12
  5445  00003A56  00000002 USING  ORDINARY    00003A18 00001000 00000002  12 00240   5611 @REGION_1950_1,12
  5642  00003CA0  00000002 DROP                                           12              12
  5711  00003D4E  00000002 USING  ORDINARY    00003D10 00001000 00000002  12 000A8   5720 @REGION_1951_1,12
  5748  00003DC0  00000002 DROP                                           12              12
  5818  00003E76  00000002 USING  ORDINARY    00003E38 00001000 00000002  12 000F8   5840 @REGION_1948_1,12
  5871  00003F38  00000002 DROP                                           12              12
  5941  00003FE6  00000002 USING  ORDINARY    00003FA8 00001000 00000002  12 001A0   6074 @REGION_1944_1,12
  6099  000041DE  00000002 DROP                                           12              12
  6170  0000428E  00000002 USING  ORDINARY    00004250 00001000 00000002  12 000AC   6206 @REGION_1938_1,12
  6231  00004344  00000002 DROP                                           12              12
  6301  000043EE  00000002 USING  ORDINARY    000043B0 00001000 00000002  12 002F6   6521 @REGION_1936_1,12
  6549  000046EE  00000002 DROP                                           12              12
  6621  0000479E  00000002 USING  ORDINARY    00004760 00001000 00000002  12 0019A   6729 @REGION_1952_1,12
  6755  00004942  00000002 DROP                                           12              12
  6829  000049EE  00000002 USING  ORDINARY    000049B0 00001000 00000002  12 00174   6935 @REGION_1939_1,12
  6960  00004B8C  00000002 DROP                                           12              12
  7030  00004C2E  00000002 USING  ORDINARY    00004BF0 00001000 00000002  12 000AC   7065 @REGION_1940_1,12
  7090  00004CE4  00000002 DROP                                           12              12
  7160  00004D86  00000002 USING  ORDINARY    00004D48 00001000 00000002  12 001C8   7265 @REGION_1941_1,12
  7309  00004F58  00000002 DROP                                           12              12
  7380  0000500E  00000002 USING  ORDINARY    00004FD0 00001000 00000002  12 00102   7457 @REGION_1942_1,12
  7479  00005122  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  193 
                                                                                                      DASM V1.95.14 2021/04/29 12:43 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_MOCK_CGRP ..\asg\asm\rdkafka_mock_cgrp.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCPRV   C:\DIGNUS\MACLIB\dccprv
  L5  DCCEPIL  C:\DIGNUS\MACLIB\dccepil

Assembly Start Time: 12.43.08 Stop Time: 12.43.08 Processor Time: 00.00.00.1050
Return Code 000
